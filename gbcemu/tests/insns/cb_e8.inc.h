    TEST(gbcemu, opcode_cb_e8) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB E8 0000
        gbc.setState(0x2a0c, 0xf374, 0x6980, 0xfebc, 0x2ce, 0x5cae, 0x1, 0x1);
        gbc.writeMem(0x2a0c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf374, gbc.sp());
        EXPECT(0x2a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0001
        gbc.setState(0x83f8, 0x20b0, 0x56d0, 0x4cdc, 0x2fa, 0x533b, 0x0, 0x1);
        gbc.writeMem(0x83f8, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x20b0, gbc.sp());
        EXPECT(0x83fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83f8));
        EXPECT(0xe8, gbc.readMem(0x83f9));
        // CB E8 0002
        gbc.setState(0x3be1, 0x1b04, 0x3310, 0x4564, 0xa405, 0xcea1, 0x1, 0x1);
        gbc.writeMem(0x3be1, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1b04, gbc.sp());
        EXPECT(0x3be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0004
        gbc.setState(0x3428, 0x775b, 0xcf70, 0x723, 0x6b35, 0xb443, 0x0, 0x0);
        gbc.writeMem(0x3428, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x775b, gbc.sp());
        EXPECT(0x342a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0005
        gbc.setState(0x611c, 0x5a24, 0xa540, 0xba5a, 0x1aaf, 0x61eb, 0x1, 0x1);
        gbc.writeMem(0x611c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5a24, gbc.sp());
        EXPECT(0x611e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0006
        gbc.setState(0xc691, 0xfb5a, 0x8d90, 0x3d94, 0x4198, 0xf4d5, 0x1, 0x0);
        gbc.writeMem(0xc691, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfb5a, gbc.sp());
        EXPECT(0xc693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc691));
        EXPECT(0xe8, gbc.readMem(0xc692));
        // CB E8 0007
        gbc.setState(0xbbfe, 0xe5ba, 0xa4d0, 0x5126, 0xd98c, 0xbfd9, 0x1, 0x1);
        gbc.writeMem(0xbbfe, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe5ba, gbc.sp());
        EXPECT(0xbc00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbfe));
        EXPECT(0xe8, gbc.readMem(0xbbff));
        // CB E8 0008
        gbc.setState(0xafe6, 0x1828, 0x2000, 0xd978, 0xce8a, 0x1e4, 0x0, 0x0);
        gbc.writeMem(0xafe6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1828, gbc.sp());
        EXPECT(0xafe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe6));
        EXPECT(0xe8, gbc.readMem(0xafe7));
        // CB E8 0009
        gbc.setState(0xb2eb, 0xba07, 0xabb0, 0xe467, 0xe64a, 0xb40a, 0x0, 0x0);
        gbc.writeMem(0xb2eb, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xba07, gbc.sp());
        EXPECT(0xb2ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2eb));
        EXPECT(0xe8, gbc.readMem(0xb2ec));
        // CB E8 000A
        gbc.setState(0xe5a9, 0xa522, 0x370, 0xc74b, 0x5a37, 0x1406, 0x0, 0x0);
        gbc.writeMem(0xe5a9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa522, gbc.sp());
        EXPECT(0xe5ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a9));
        EXPECT(0xe8, gbc.readMem(0xe5aa));
        // CB E8 000B
        gbc.setState(0x27a9, 0x7e10, 0xa9a0, 0x8054, 0x2125, 0x4ed0, 0x0, 0x0);
        gbc.writeMem(0x27a9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7e10, gbc.sp());
        EXPECT(0x27ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 000C
        gbc.setState(0xebe6, 0x856c, 0x9370, 0x2370, 0xfc1, 0x84d3, 0x0, 0x0);
        gbc.writeMem(0xebe6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x856c, gbc.sp());
        EXPECT(0xebe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe6));
        EXPECT(0xe8, gbc.readMem(0xebe7));
        // CB E8 000D
        gbc.setState(0xe814, 0x7c6b, 0x2340, 0xc981, 0x7b0, 0x881c, 0x1, 0x1);
        gbc.writeMem(0xe814, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7c6b, gbc.sp());
        EXPECT(0xe816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe814));
        EXPECT(0xe8, gbc.readMem(0xe815));
        // CB E8 000E
        gbc.setState(0x43bf, 0x79de, 0xf1d0, 0x5c27, 0xd425, 0x8c4e, 0x1, 0x1);
        gbc.writeMem(0x43bf, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x79de, gbc.sp());
        EXPECT(0x43c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 000F
        gbc.setState(0x5a3b, 0x3203, 0x48c0, 0x8ffc, 0x6d62, 0x1b2e, 0x1, 0x1);
        gbc.writeMem(0x5a3b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3203, gbc.sp());
        EXPECT(0x5a3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0010
        gbc.setState(0xb93a, 0x156d, 0x70d0, 0xb047, 0xb503, 0x42b5, 0x1, 0x0);
        gbc.writeMem(0xb93a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x156d, gbc.sp());
        EXPECT(0xb93c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb93a));
        EXPECT(0xe8, gbc.readMem(0xb93b));
        // CB E8 0011
        gbc.setState(0xee43, 0xad06, 0x3680, 0x60a, 0x623d, 0xa839, 0x1, 0x0);
        gbc.writeMem(0xee43, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xad06, gbc.sp());
        EXPECT(0xee45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee43));
        EXPECT(0xe8, gbc.readMem(0xee44));
        // CB E8 0012
        gbc.setState(0xa9a3, 0xf28, 0xfcd0, 0x5a52, 0xd1c8, 0xe47e, 0x0, 0x1);
        gbc.writeMem(0xa9a3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf28, gbc.sp());
        EXPECT(0xa9a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9a3));
        EXPECT(0xe8, gbc.readMem(0xa9a4));
        // CB E8 0013
        gbc.setState(0xa19f, 0x1782, 0xf080, 0x3369, 0xf3da, 0x9ec0, 0x0, 0x1);
        gbc.writeMem(0xa19f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1782, gbc.sp());
        EXPECT(0xa1a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa19f));
        EXPECT(0xe8, gbc.readMem(0xa1a0));
        // CB E8 0014
        gbc.setState(0xd44a, 0x3561, 0xff60, 0x6d1b, 0x2816, 0x8d76, 0x0, 0x1);
        gbc.writeMem(0xd44a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3561, gbc.sp());
        EXPECT(0xd44c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd44a));
        EXPECT(0xe8, gbc.readMem(0xd44b));
        // CB E8 0015
        gbc.setState(0x3bf5, 0xfd73, 0x740, 0xe00d, 0xa186, 0xe9fc, 0x1, 0x1);
        gbc.writeMem(0x3bf5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfd73, gbc.sp());
        EXPECT(0x3bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0016
        gbc.setState(0x1d75, 0xfff3, 0x88b0, 0x5d, 0x7804, 0xdf71, 0x1, 0x1);
        gbc.writeMem(0x1d75, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfff3, gbc.sp());
        EXPECT(0x1d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0018
        gbc.setState(0x2999, 0xddb4, 0xfaa0, 0x4668, 0x4b78, 0x7ee7, 0x1, 0x0);
        gbc.writeMem(0x2999, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xddb4, gbc.sp());
        EXPECT(0x299b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0019
        gbc.setState(0x9eb5, 0x8e18, 0xb4a0, 0xcc0a, 0x7249, 0x562c, 0x0, 0x1);
        gbc.writeMem(0x9eb5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8e18, gbc.sp());
        EXPECT(0x9eb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eb5));
        EXPECT(0xe8, gbc.readMem(0x9eb6));
        // CB E8 001B
        gbc.setState(0xcd09, 0x914, 0x5db0, 0xf268, 0xe0d4, 0x57e, 0x1, 0x0);
        gbc.writeMem(0xcd09, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x914, gbc.sp());
        EXPECT(0xcd0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd09));
        EXPECT(0xe8, gbc.readMem(0xcd0a));
        // CB E8 001C
        gbc.setState(0x6c97, 0xdfd4, 0xa600, 0x29cc, 0x507, 0x9a53, 0x0, 0x0);
        gbc.writeMem(0x6c97, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdfd4, gbc.sp());
        EXPECT(0x6c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 001D
        gbc.setState(0xc8e4, 0xf344, 0x1be0, 0x6cf, 0x3951, 0xb392, 0x0, 0x1);
        gbc.writeMem(0xc8e4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf344, gbc.sp());
        EXPECT(0xc8e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e4));
        EXPECT(0xe8, gbc.readMem(0xc8e5));
        // CB E8 001E
        gbc.setState(0x1d10, 0xbc45, 0xc7a0, 0x85da, 0x7c97, 0x1d5a, 0x1, 0x1);
        gbc.writeMem(0x1d10, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbc45, gbc.sp());
        EXPECT(0x1d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 001F
        gbc.setState(0x2579, 0xd669, 0x9380, 0xda16, 0x92bc, 0x6fea, 0x0, 0x0);
        gbc.writeMem(0x2579, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd669, gbc.sp());
        EXPECT(0x257b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0020
        gbc.setState(0x10f5, 0x1802, 0x43f0, 0x3f6, 0x62d5, 0x3e47, 0x1, 0x0);
        gbc.writeMem(0x10f5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1802, gbc.sp());
        EXPECT(0x10f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0021
        gbc.setState(0x4519, 0x5df5, 0x9970, 0xaaa5, 0x2e4, 0x6ea5, 0x1, 0x1);
        gbc.writeMem(0x4519, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5df5, gbc.sp());
        EXPECT(0x451b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0022
        gbc.setState(0xc5eb, 0x150e, 0x8470, 0xb24e, 0xe4b, 0xe520, 0x0, 0x0);
        gbc.writeMem(0xc5eb, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x150e, gbc.sp());
        EXPECT(0xc5ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5eb));
        EXPECT(0xe8, gbc.readMem(0xc5ec));
        // CB E8 0024
        gbc.setState(0x856d, 0xc9dd, 0x900, 0x5b92, 0xb838, 0xa5b1, 0x1, 0x1);
        gbc.writeMem(0x856d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc9dd, gbc.sp());
        EXPECT(0x856f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x856d));
        EXPECT(0xe8, gbc.readMem(0x856e));
        // CB E8 0025
        gbc.setState(0x51e9, 0x65da, 0xfb90, 0x605c, 0xcf79, 0x4364, 0x0, 0x1);
        gbc.writeMem(0x51e9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x65da, gbc.sp());
        EXPECT(0x51eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0026
        gbc.setState(0x137a, 0xd5cd, 0xfa80, 0x932b, 0x29f6, 0x2fbd, 0x1, 0x1);
        gbc.writeMem(0x137a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd5cd, gbc.sp());
        EXPECT(0x137c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0027
        gbc.setState(0x8a9a, 0x8012, 0x12b0, 0x8e48, 0xe020, 0xaeef, 0x0, 0x0);
        gbc.writeMem(0x8a9a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8012, gbc.sp());
        EXPECT(0x8a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a9a));
        EXPECT(0xe8, gbc.readMem(0x8a9b));
        // CB E8 0028
        gbc.setState(0xd5de, 0xe5e3, 0xe170, 0x3006, 0xc125, 0x6b83, 0x0, 0x1);
        gbc.writeMem(0xd5de, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe5e3, gbc.sp());
        EXPECT(0xd5e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5de));
        EXPECT(0xe8, gbc.readMem(0xd5df));
        // CB E8 0029
        gbc.setState(0x1925, 0xb5ef, 0x40a0, 0xd9e8, 0xbe0b, 0x2e5, 0x0, 0x0);
        gbc.writeMem(0x1925, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb5ef, gbc.sp());
        EXPECT(0x1927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 002A
        gbc.setState(0x58c4, 0xba5d, 0x9050, 0xe7bf, 0x330a, 0xee49, 0x0, 0x0);
        gbc.writeMem(0x58c4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xba5d, gbc.sp());
        EXPECT(0x58c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 002C
        gbc.setState(0x2c51, 0xdef7, 0x440, 0xcb45, 0x82e7, 0x42ed, 0x0, 0x0);
        gbc.writeMem(0x2c51, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xdef7, gbc.sp());
        EXPECT(0x2c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 002D
        gbc.setState(0xea62, 0xc9c7, 0x90b0, 0xe795, 0xc319, 0x1b58, 0x0, 0x0);
        gbc.writeMem(0xea62, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc9c7, gbc.sp());
        EXPECT(0xea64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea62));
        EXPECT(0xe8, gbc.readMem(0xea63));
        // CB E8 002E
        gbc.setState(0xab20, 0xc65d, 0x8cc0, 0x907f, 0xe3de, 0xcaf3, 0x1, 0x1);
        gbc.writeMem(0xab20, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc65d, gbc.sp());
        EXPECT(0xab22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab20));
        EXPECT(0xe8, gbc.readMem(0xab21));
        // CB E8 002F
        gbc.setState(0x29f6, 0x4aa1, 0x1ba0, 0x26bc, 0xcea0, 0x80a1, 0x0, 0x1);
        gbc.writeMem(0x29f6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4aa1, gbc.sp());
        EXPECT(0x29f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0030
        gbc.setState(0x623e, 0xe8a9, 0x60e0, 0x1887, 0xd1c, 0x6beb, 0x0, 0x1);
        gbc.writeMem(0x623e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe8a9, gbc.sp());
        EXPECT(0x6240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0031
        gbc.setState(0x5e6, 0xe433, 0xf130, 0x2b6d, 0x81df, 0x9a9b, 0x1, 0x0);
        gbc.writeMem(0x5e6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe433, gbc.sp());
        EXPECT(0x5e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0032
        gbc.setState(0xe666, 0x59fd, 0xf150, 0x692d, 0x336f, 0x7057, 0x1, 0x0);
        gbc.writeMem(0xe666, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x59fd, gbc.sp());
        EXPECT(0xe668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe666));
        EXPECT(0xe8, gbc.readMem(0xe667));
        // CB E8 0033
        gbc.setState(0x7a0b, 0x1e66, 0x7bb0, 0x845, 0x9e6b, 0x6615, 0x0, 0x0);
        gbc.writeMem(0x7a0b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1e66, gbc.sp());
        EXPECT(0x7a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0034
        gbc.setState(0x56da, 0xd896, 0xcf30, 0x3a34, 0x1ddd, 0xb39, 0x1, 0x1);
        gbc.writeMem(0x56da, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd896, gbc.sp());
        EXPECT(0x56dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0035
        gbc.setState(0xd514, 0xe44b, 0x3870, 0x88a7, 0x32d5, 0xb5c0, 0x0, 0x0);
        gbc.writeMem(0xd514, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe44b, gbc.sp());
        EXPECT(0xd516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd514));
        EXPECT(0xe8, gbc.readMem(0xd515));
        // CB E8 0036
        gbc.setState(0xa5e5, 0x1425, 0xdb40, 0x9ae0, 0xcbe1, 0x6b48, 0x0, 0x1);
        gbc.writeMem(0xa5e5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1425, gbc.sp());
        EXPECT(0xa5e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5e5));
        EXPECT(0xe8, gbc.readMem(0xa5e6));
        // CB E8 0037
        gbc.setState(0x33ef, 0xb871, 0x6600, 0xe655, 0x9c22, 0x257, 0x0, 0x0);
        gbc.writeMem(0x33ef, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb871, gbc.sp());
        EXPECT(0x33f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0038
        gbc.setState(0x4f15, 0x66ea, 0xd990, 0x27ac, 0x291b, 0xf3a1, 0x1, 0x0);
        gbc.writeMem(0x4f15, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x66ea, gbc.sp());
        EXPECT(0x4f17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0039
        gbc.setState(0x9320, 0xb25b, 0x1220, 0xe9c, 0x819d, 0x8f03, 0x1, 0x1);
        gbc.writeMem(0x9320, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb25b, gbc.sp());
        EXPECT(0x9322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9320));
        EXPECT(0xe8, gbc.readMem(0x9321));
        // CB E8 003A
        gbc.setState(0xbee2, 0xef37, 0xb0a0, 0x9924, 0xa636, 0x6fca, 0x0, 0x0);
        gbc.writeMem(0xbee2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xef37, gbc.sp());
        EXPECT(0xbee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbee2));
        EXPECT(0xe8, gbc.readMem(0xbee3));
        // CB E8 003B
        gbc.setState(0x1eae, 0xec0e, 0xd030, 0x63a8, 0x1763, 0x6ec3, 0x1, 0x1);
        gbc.writeMem(0x1eae, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xec0e, gbc.sp());
        EXPECT(0x1eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 003C
        gbc.setState(0x209b, 0x596, 0x6a30, 0xb10a, 0x9ce6, 0x6490, 0x1, 0x0);
        gbc.writeMem(0x209b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x596, gbc.sp());
        EXPECT(0x209d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 003D
        gbc.setState(0xa621, 0x9aef, 0xe380, 0x8b7, 0x873, 0x735b, 0x0, 0x0);
        gbc.writeMem(0xa621, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9aef, gbc.sp());
        EXPECT(0xa623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa621));
        EXPECT(0xe8, gbc.readMem(0xa622));
        // CB E8 003E
        gbc.setState(0xb31b, 0xcdc4, 0xdc20, 0x8539, 0xae46, 0xa26b, 0x1, 0x0);
        gbc.writeMem(0xb31b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcdc4, gbc.sp());
        EXPECT(0xb31d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb31b));
        EXPECT(0xe8, gbc.readMem(0xb31c));
        // CB E8 003F
        gbc.setState(0x8766, 0x3f12, 0xa0d0, 0x415e, 0xf443, 0xc57c, 0x1, 0x0);
        gbc.writeMem(0x8766, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3f12, gbc.sp());
        EXPECT(0x8768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8766));
        EXPECT(0xe8, gbc.readMem(0x8767));
        // CB E8 0040
        gbc.setState(0x5d98, 0x12ce, 0xde70, 0x239, 0x82a9, 0xb5af, 0x1, 0x1);
        gbc.writeMem(0x5d98, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x12ce, gbc.sp());
        EXPECT(0x5d9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0041
        gbc.setState(0xbc5c, 0xc7ae, 0xb240, 0xb77e, 0x7b5c, 0xc937, 0x0, 0x0);
        gbc.writeMem(0xbc5c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc7ae, gbc.sp());
        EXPECT(0xbc5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc5c));
        EXPECT(0xe8, gbc.readMem(0xbc5d));
        // CB E8 0042
        gbc.setState(0x2cdb, 0xc6ff, 0x18e0, 0x5c89, 0xe7a0, 0x4cc2, 0x1, 0x0);
        gbc.writeMem(0x2cdb, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc6ff, gbc.sp());
        EXPECT(0x2cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0044
        gbc.setState(0x37ce, 0x1b02, 0x2620, 0x70e, 0x5d7d, 0xc777, 0x1, 0x1);
        gbc.writeMem(0x37ce, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1b02, gbc.sp());
        EXPECT(0x37d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0045
        gbc.setState(0xe4e7, 0xb11f, 0xdb50, 0xcf66, 0xfc3f, 0x499, 0x1, 0x1);
        gbc.writeMem(0xe4e7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb11f, gbc.sp());
        EXPECT(0xe4e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4e7));
        EXPECT(0xe8, gbc.readMem(0xe4e8));
        // CB E8 0046
        gbc.setState(0x6d3c, 0x761c, 0xebc0, 0xd323, 0x4f7b, 0x7986, 0x1, 0x1);
        gbc.writeMem(0x6d3c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x761c, gbc.sp());
        EXPECT(0x6d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0047
        gbc.setState(0x4084, 0x1f48, 0x5440, 0x5ea0, 0xbbb1, 0xdbca, 0x0, 0x1);
        gbc.writeMem(0x4084, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1f48, gbc.sp());
        EXPECT(0x4086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0049
        gbc.setState(0x2e01, 0x2aec, 0xf0d0, 0x8130, 0x68a0, 0x3c13, 0x1, 0x0);
        gbc.writeMem(0x2e01, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2aec, gbc.sp());
        EXPECT(0x2e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 004A
        gbc.setState(0xf4e, 0x1539, 0x6cc0, 0x9bc4, 0x712a, 0xacff, 0x0, 0x0);
        gbc.writeMem(0xf4e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1539, gbc.sp());
        EXPECT(0xf50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 004C
        gbc.setState(0x9b5b, 0xc038, 0xf840, 0xd0f0, 0x8186, 0x2a3d, 0x0, 0x1);
        gbc.writeMem(0x9b5b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc038, gbc.sp());
        EXPECT(0x9b5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b5b));
        EXPECT(0xe8, gbc.readMem(0x9b5c));
        // CB E8 004D
        gbc.setState(0x723b, 0xa9e, 0x43a0, 0xf0f6, 0xc209, 0x904, 0x1, 0x0);
        gbc.writeMem(0x723b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa9e, gbc.sp());
        EXPECT(0x723d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 004E
        gbc.setState(0xd26b, 0xc367, 0xb1c0, 0x882d, 0xe25d, 0xdfb0, 0x1, 0x1);
        gbc.writeMem(0xd26b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc367, gbc.sp());
        EXPECT(0xd26d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd26b));
        EXPECT(0xe8, gbc.readMem(0xd26c));
        // CB E8 004F
        gbc.setState(0x36d6, 0x7dbc, 0xd530, 0x3200, 0x40aa, 0xa415, 0x0, 0x1);
        gbc.writeMem(0x36d6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7dbc, gbc.sp());
        EXPECT(0x36d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0050
        gbc.setState(0x5cc2, 0xc5c1, 0x88c0, 0xb8ff, 0x43d5, 0x98d0, 0x1, 0x0);
        gbc.writeMem(0x5cc2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc5c1, gbc.sp());
        EXPECT(0x5cc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0051
        gbc.setState(0x2ee4, 0xbcf9, 0x5860, 0x4d46, 0xd9e, 0x71a5, 0x0, 0x1);
        gbc.writeMem(0x2ee4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbcf9, gbc.sp());
        EXPECT(0x2ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0052
        gbc.setState(0x3e86, 0x6f7f, 0xdd70, 0x15b3, 0x1322, 0xc353, 0x1, 0x0);
        gbc.writeMem(0x3e86, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6f7f, gbc.sp());
        EXPECT(0x3e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0053
        gbc.setState(0xef6d, 0x3895, 0x40, 0xc90, 0x48cf, 0xdd82, 0x0, 0x1);
        gbc.writeMem(0xef6d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3895, gbc.sp());
        EXPECT(0xef6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef6d));
        EXPECT(0xe8, gbc.readMem(0xef6e));
        // CB E8 0054
        gbc.setState(0xb262, 0xf840, 0xac0, 0x2375, 0xa15b, 0x23d6, 0x1, 0x0);
        gbc.writeMem(0xb262, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf840, gbc.sp());
        EXPECT(0xb264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb262));
        EXPECT(0xe8, gbc.readMem(0xb263));
        // CB E8 0055
        gbc.setState(0x5575, 0x7470, 0xaba0, 0x405b, 0x1ef1, 0xc9b8, 0x0, 0x0);
        gbc.writeMem(0x5575, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7470, gbc.sp());
        EXPECT(0x5577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0056
        gbc.setState(0x3121, 0xaae4, 0xfb50, 0x6870, 0xb1a8, 0x3fc1, 0x0, 0x1);
        gbc.writeMem(0x3121, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xaae4, gbc.sp());
        EXPECT(0x3123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0057
        gbc.setState(0x7e97, 0x8161, 0xa8a0, 0x583e, 0xffeb, 0x28ba, 0x0, 0x1);
        gbc.writeMem(0x7e97, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8161, gbc.sp());
        EXPECT(0x7e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0058
        gbc.setState(0x10bb, 0x7288, 0xf950, 0x62fa, 0xe3a6, 0xb8d9, 0x0, 0x1);
        gbc.writeMem(0x10bb, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7288, gbc.sp());
        EXPECT(0x10bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0059
        gbc.setState(0x97f0, 0xe81d, 0x88b0, 0x7d16, 0xb961, 0x5d1f, 0x0, 0x1);
        gbc.writeMem(0x97f0, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe81d, gbc.sp());
        EXPECT(0x97f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f0));
        EXPECT(0xe8, gbc.readMem(0x97f1));
        // CB E8 005A
        gbc.setState(0x6ad2, 0xb1f1, 0x5d20, 0x94ea, 0xa8e, 0xab29, 0x1, 0x0);
        gbc.writeMem(0x6ad2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb1f1, gbc.sp());
        EXPECT(0x6ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 005B
        gbc.setState(0x71f0, 0x746e, 0x8ac0, 0xd712, 0xdc66, 0x6bb8, 0x0, 0x1);
        gbc.writeMem(0x71f0, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x746e, gbc.sp());
        EXPECT(0x71f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 005C
        gbc.setState(0xaf0, 0xcfc4, 0xe0f0, 0x49, 0x5bc8, 0x9b32, 0x1, 0x0);
        gbc.writeMem(0xaf0, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xcfc4, gbc.sp());
        EXPECT(0xaf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 005D
        gbc.setState(0x5dd6, 0xa66c, 0xaf0, 0x7450, 0x598d, 0x6f8b, 0x0, 0x0);
        gbc.writeMem(0x5dd6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa66c, gbc.sp());
        EXPECT(0x5dd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 005E
        gbc.setState(0xd5b6, 0xfb49, 0xf8a0, 0xc9b4, 0x69e9, 0x138c, 0x0, 0x0);
        gbc.writeMem(0xd5b6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xfb49, gbc.sp());
        EXPECT(0xd5b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b6));
        EXPECT(0xe8, gbc.readMem(0xd5b7));
        // CB E8 005F
        gbc.setState(0x858a, 0xe305, 0xe110, 0x599f, 0x2b61, 0x1af8, 0x0, 0x1);
        gbc.writeMem(0x858a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe305, gbc.sp());
        EXPECT(0x858c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x858a));
        EXPECT(0xe8, gbc.readMem(0x858b));
        // CB E8 0060
        gbc.setState(0x1b17, 0x4242, 0x6660, 0x45c9, 0x8e88, 0xeae, 0x0, 0x1);
        gbc.writeMem(0x1b17, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4242, gbc.sp());
        EXPECT(0x1b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0061
        gbc.setState(0x1971, 0x6c40, 0xfc30, 0x75d3, 0x9951, 0x840d, 0x1, 0x1);
        gbc.writeMem(0x1971, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6c40, gbc.sp());
        EXPECT(0x1973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0062
        gbc.setState(0x2708, 0xa7dd, 0x9580, 0xfe16, 0x6d99, 0xe25a, 0x1, 0x0);
        gbc.writeMem(0x2708, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa7dd, gbc.sp());
        EXPECT(0x270a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0063
        gbc.setState(0x6b46, 0xa335, 0x11c0, 0x1e42, 0xaf46, 0xbbff, 0x1, 0x1);
        gbc.writeMem(0x6b46, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa335, gbc.sp());
        EXPECT(0x6b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0064
        gbc.setState(0xe4a4, 0x962e, 0xe6b0, 0x3fb3, 0x1d12, 0x6209, 0x1, 0x0);
        gbc.writeMem(0xe4a4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x962e, gbc.sp());
        EXPECT(0xe4a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a4));
        EXPECT(0xe8, gbc.readMem(0xe4a5));
        // CB E8 0065
        gbc.setState(0x28b0, 0x8bc6, 0x37f0, 0xfa52, 0x520d, 0x6650, 0x1, 0x0);
        gbc.writeMem(0x28b0, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8bc6, gbc.sp());
        EXPECT(0x28b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0066
        gbc.setState(0x87, 0x5d4f, 0x38f0, 0x43bc, 0x94fb, 0x1873, 0x1, 0x0);
        gbc.writeMem(0x87, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5d4f, gbc.sp());
        EXPECT(0x89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0067
        gbc.setState(0x17ea, 0x697a, 0xf900, 0x2278, 0x4e97, 0xbdab, 0x1, 0x0);
        gbc.writeMem(0x17ea, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x697a, gbc.sp());
        EXPECT(0x17ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0068
        gbc.setState(0x529f, 0x10ea, 0xd300, 0x2d95, 0x9902, 0x8b7a, 0x0, 0x1);
        gbc.writeMem(0x529f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x10ea, gbc.sp());
        EXPECT(0x52a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0069
        gbc.setState(0x25da, 0x47ff, 0xac80, 0x4aac, 0xc07a, 0x1484, 0x0, 0x0);
        gbc.writeMem(0x25da, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x47ff, gbc.sp());
        EXPECT(0x25dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 006A
        gbc.setState(0x4b2d, 0xee75, 0xfe30, 0xd7d2, 0x1087, 0x2e83, 0x1, 0x1);
        gbc.writeMem(0x4b2d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xee75, gbc.sp());
        EXPECT(0x4b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 006B
        gbc.setState(0xdf11, 0x3137, 0x8190, 0xf752, 0xda3a, 0xb43d, 0x1, 0x1);
        gbc.writeMem(0xdf11, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3137, gbc.sp());
        EXPECT(0xdf13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf11));
        EXPECT(0xe8, gbc.readMem(0xdf12));
        // CB E8 006C
        gbc.setState(0xb53d, 0xbf90, 0xe680, 0xc106, 0xa8ff, 0xb243, 0x1, 0x1);
        gbc.writeMem(0xb53d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbf90, gbc.sp());
        EXPECT(0xb53f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb53d));
        EXPECT(0xe8, gbc.readMem(0xb53e));
        // CB E8 006D
        gbc.setState(0x4165, 0x3770, 0xa7a0, 0xb054, 0x1208, 0xcb8b, 0x0, 0x0);
        gbc.writeMem(0x4165, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3770, gbc.sp());
        EXPECT(0x4167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 006E
        gbc.setState(0xb4ac, 0x13fd, 0x3020, 0xb29a, 0x1db1, 0x5003, 0x0, 0x1);
        gbc.writeMem(0xb4ac, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x13fd, gbc.sp());
        EXPECT(0xb4ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ac));
        EXPECT(0xe8, gbc.readMem(0xb4ad));
        // CB E8 006F
        gbc.setState(0x4e4b, 0x7ead, 0xa3f0, 0xf84c, 0xa8ac, 0x4701, 0x0, 0x0);
        gbc.writeMem(0x4e4b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7ead, gbc.sp());
        EXPECT(0x4e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0070
        gbc.setState(0xd655, 0xac24, 0x4ad0, 0x9811, 0x572, 0xd823, 0x1, 0x0);
        gbc.writeMem(0xd655, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xac24, gbc.sp());
        EXPECT(0xd657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd655));
        EXPECT(0xe8, gbc.readMem(0xd656));
        // CB E8 0071
        gbc.setState(0xd2c3, 0xb482, 0x2000, 0x80b6, 0xc730, 0xd287, 0x1, 0x1);
        gbc.writeMem(0xd2c3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb482, gbc.sp());
        EXPECT(0xd2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c3));
        EXPECT(0xe8, gbc.readMem(0xd2c4));
        // CB E8 0072
        gbc.setState(0x7ae5, 0x5876, 0x84d0, 0xf03e, 0x961c, 0x7c6a, 0x0, 0x1);
        gbc.writeMem(0x7ae5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5876, gbc.sp());
        EXPECT(0x7ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0073
        gbc.setState(0xdeaf, 0xb586, 0x620, 0x85c, 0x9dbf, 0x6c9b, 0x0, 0x0);
        gbc.writeMem(0xdeaf, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb586, gbc.sp());
        EXPECT(0xdeb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeaf));
        EXPECT(0xe8, gbc.readMem(0xdeb0));
        // CB E8 0074
        gbc.setState(0xb2fe, 0xfa8b, 0xb450, 0x51e2, 0xd274, 0x83bf, 0x0, 0x1);
        gbc.writeMem(0xb2fe, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfa8b, gbc.sp());
        EXPECT(0xb300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2fe));
        EXPECT(0xe8, gbc.readMem(0xb2ff));
        // CB E8 0075
        gbc.setState(0xec53, 0x4b4, 0x1f00, 0x7d0c, 0xa90a, 0xfc11, 0x1, 0x1);
        gbc.writeMem(0xec53, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4b4, gbc.sp());
        EXPECT(0xec55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec53));
        EXPECT(0xe8, gbc.readMem(0xec54));
        // CB E8 0076
        gbc.setState(0x8e9, 0x27db, 0x77c0, 0x3fbd, 0xb219, 0xe54e, 0x1, 0x0);
        gbc.writeMem(0x8e9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x27db, gbc.sp());
        EXPECT(0x8eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0077
        gbc.setState(0xd530, 0x8fd, 0x1820, 0xeedd, 0xbd83, 0xc921, 0x1, 0x1);
        gbc.writeMem(0xd530, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8fd, gbc.sp());
        EXPECT(0xd532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd530));
        EXPECT(0xe8, gbc.readMem(0xd531));
        // CB E8 0078
        gbc.setState(0xd99b, 0x7a91, 0x1270, 0x766e, 0xa6ad, 0x484c, 0x0, 0x1);
        gbc.writeMem(0xd99b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7a91, gbc.sp());
        EXPECT(0xd99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd99b));
        EXPECT(0xe8, gbc.readMem(0xd99c));
        // CB E8 0079
        gbc.setState(0xa02f, 0x839a, 0x4120, 0x281f, 0x28e4, 0x174e, 0x1, 0x0);
        gbc.writeMem(0xa02f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x839a, gbc.sp());
        EXPECT(0xa031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa02f));
        EXPECT(0xe8, gbc.readMem(0xa030));
        // CB E8 007A
        gbc.setState(0xbab6, 0x421e, 0x1020, 0x6c55, 0x5b8c, 0xd5ad, 0x0, 0x1);
        gbc.writeMem(0xbab6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x421e, gbc.sp());
        EXPECT(0xbab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab6));
        EXPECT(0xe8, gbc.readMem(0xbab7));
        // CB E8 007B
        gbc.setState(0x5b26, 0xd2b9, 0x6c30, 0xac51, 0x36f4, 0x40bc, 0x0, 0x1);
        gbc.writeMem(0x5b26, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd2b9, gbc.sp());
        EXPECT(0x5b28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 007C
        gbc.setState(0x6cc8, 0x78ad, 0x8950, 0x4373, 0x9553, 0x66c7, 0x1, 0x0);
        gbc.writeMem(0x6cc8, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x78ad, gbc.sp());
        EXPECT(0x6cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 007D
        gbc.setState(0x1d97, 0xa55b, 0xc770, 0xe4a3, 0x40dd, 0x1aa0, 0x0, 0x0);
        gbc.writeMem(0x1d97, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa55b, gbc.sp());
        EXPECT(0x1d99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 007E
        gbc.setState(0x5c02, 0xadb7, 0xb0b0, 0x8d6a, 0x6235, 0x72f6, 0x0, 0x0);
        gbc.writeMem(0x5c02, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xadb7, gbc.sp());
        EXPECT(0x5c04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0080
        gbc.setState(0x6640, 0x3ba2, 0x9cc0, 0x6d33, 0xaf79, 0xfaef, 0x0, 0x0);
        gbc.writeMem(0x6640, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3ba2, gbc.sp());
        EXPECT(0x6642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0081
        gbc.setState(0x87f, 0x4a42, 0x7b80, 0xb06b, 0x43ed, 0xe742, 0x1, 0x0);
        gbc.writeMem(0x87f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4a42, gbc.sp());
        EXPECT(0x881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0082
        gbc.setState(0xb6c9, 0xac26, 0x9310, 0x8261, 0xa7c1, 0xc1d0, 0x0, 0x1);
        gbc.writeMem(0xb6c9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xac26, gbc.sp());
        EXPECT(0xb6cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c9));
        EXPECT(0xe8, gbc.readMem(0xb6ca));
        // CB E8 0083
        gbc.setState(0x889f, 0x61f0, 0x5470, 0x15dd, 0x2a9, 0xa974, 0x0, 0x1);
        gbc.writeMem(0x889f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x61f0, gbc.sp());
        EXPECT(0x88a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x889f));
        EXPECT(0xe8, gbc.readMem(0x88a0));
        // CB E8 0084
        gbc.setState(0x4650, 0x137c, 0xbae0, 0x81c6, 0xa7a8, 0x4734, 0x1, 0x1);
        gbc.writeMem(0x4650, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x137c, gbc.sp());
        EXPECT(0x4652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0085
        gbc.setState(0x8fd1, 0x4e08, 0x7fc0, 0x9b42, 0xd0fc, 0x6d34, 0x1, 0x1);
        gbc.writeMem(0x8fd1, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4e08, gbc.sp());
        EXPECT(0x8fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd1));
        EXPECT(0xe8, gbc.readMem(0x8fd2));
        // CB E8 0086
        gbc.setState(0xd10c, 0xf6d7, 0xcd40, 0x5607, 0xa681, 0x759, 0x0, 0x1);
        gbc.writeMem(0xd10c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf6d7, gbc.sp());
        EXPECT(0xd10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd10c));
        EXPECT(0xe8, gbc.readMem(0xd10d));
        // CB E8 0087
        gbc.setState(0x69cd, 0xe467, 0xbfe0, 0xcfd4, 0xfe90, 0x7e1b, 0x1, 0x1);
        gbc.writeMem(0x69cd, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe467, gbc.sp());
        EXPECT(0x69cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0088
        gbc.setState(0xefb7, 0xae68, 0x7ff0, 0xe3b4, 0xe843, 0xe137, 0x1, 0x0);
        gbc.writeMem(0xefb7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xae68, gbc.sp());
        EXPECT(0xefb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb7));
        EXPECT(0xe8, gbc.readMem(0xefb8));
        // CB E8 008A
        gbc.setState(0x11a0, 0x395e, 0x31e0, 0xd6b7, 0xc82e, 0x16a3, 0x0, 0x0);
        gbc.writeMem(0x11a0, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x395e, gbc.sp());
        EXPECT(0x11a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 008B
        gbc.setState(0x9d37, 0xeed7, 0x1e0, 0x30d7, 0xa3ae, 0x471e, 0x0, 0x0);
        gbc.writeMem(0x9d37, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xeed7, gbc.sp());
        EXPECT(0x9d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d37));
        EXPECT(0xe8, gbc.readMem(0x9d38));
        // CB E8 008C
        gbc.setState(0xaf88, 0xeaf0, 0xa610, 0x8412, 0x1ac0, 0x3841, 0x0, 0x0);
        gbc.writeMem(0xaf88, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xeaf0, gbc.sp());
        EXPECT(0xaf8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf88));
        EXPECT(0xe8, gbc.readMem(0xaf89));
        // CB E8 008D
        gbc.setState(0xa8c7, 0x4a11, 0xd780, 0x443b, 0x2279, 0x51ac, 0x0, 0x1);
        gbc.writeMem(0xa8c7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4a11, gbc.sp());
        EXPECT(0xa8c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c7));
        EXPECT(0xe8, gbc.readMem(0xa8c8));
        // CB E8 008E
        gbc.setState(0x4500, 0xeb53, 0x5050, 0x2ab3, 0xcc04, 0x643, 0x1, 0x1);
        gbc.writeMem(0x4500, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xeb53, gbc.sp());
        EXPECT(0x4502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 008F
        gbc.setState(0x3a69, 0xaf13, 0x6180, 0x9a64, 0x82d3, 0xd0ae, 0x0, 0x1);
        gbc.writeMem(0x3a69, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xaf13, gbc.sp());
        EXPECT(0x3a6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0090
        gbc.setState(0x33ce, 0x453d, 0xc3a0, 0xb58a, 0x8b05, 0x82fe, 0x1, 0x1);
        gbc.writeMem(0x33ce, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x453d, gbc.sp());
        EXPECT(0x33d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0091
        gbc.setState(0x6fa1, 0xe9fc, 0x1ed0, 0xb227, 0xc30a, 0x58f0, 0x0, 0x0);
        gbc.writeMem(0x6fa1, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe9fc, gbc.sp());
        EXPECT(0x6fa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0092
        gbc.setState(0xae42, 0x1550, 0xa350, 0xd7fd, 0xcc63, 0xff6d, 0x0, 0x1);
        gbc.writeMem(0xae42, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1550, gbc.sp());
        EXPECT(0xae44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae42));
        EXPECT(0xe8, gbc.readMem(0xae43));
        // CB E8 0093
        gbc.setState(0x85e9, 0x7799, 0x57b0, 0xf61b, 0xedd9, 0x47df, 0x0, 0x0);
        gbc.writeMem(0x85e9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7799, gbc.sp());
        EXPECT(0x85eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e9));
        EXPECT(0xe8, gbc.readMem(0x85ea));
        // CB E8 0094
        gbc.setState(0x905b, 0xf9a2, 0x6cb0, 0x8ba9, 0x46fc, 0xf995, 0x1, 0x0);
        gbc.writeMem(0x905b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf9a2, gbc.sp());
        EXPECT(0x905d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x905b));
        EXPECT(0xe8, gbc.readMem(0x905c));
        // CB E8 0095
        gbc.setState(0xa6b, 0x80b2, 0xb7f0, 0xe2ec, 0xd96d, 0x54e0, 0x1, 0x1);
        gbc.writeMem(0xa6b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x80b2, gbc.sp());
        EXPECT(0xa6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0096
        gbc.setState(0x20bf, 0x715a, 0x5c70, 0xfce3, 0xe2f1, 0x5fa2, 0x0, 0x1);
        gbc.writeMem(0x20bf, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x715a, gbc.sp());
        EXPECT(0x20c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0097
        gbc.setState(0x8f2c, 0x4b4d, 0xa650, 0x15df, 0x2602, 0x33f7, 0x1, 0x0);
        gbc.writeMem(0x8f2c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4b4d, gbc.sp());
        EXPECT(0x8f2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f2c));
        EXPECT(0xe8, gbc.readMem(0x8f2d));
        // CB E8 0099
        gbc.setState(0x4a25, 0x3e09, 0xc590, 0x1e9, 0x515, 0xf0e6, 0x0, 0x0);
        gbc.writeMem(0x4a25, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3e09, gbc.sp());
        EXPECT(0x4a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 009A
        gbc.setState(0xcf7d, 0x1877, 0x80, 0xe5c9, 0xd658, 0x24ab, 0x0, 0x1);
        gbc.writeMem(0xcf7d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1877, gbc.sp());
        EXPECT(0xcf7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf7d));
        EXPECT(0xe8, gbc.readMem(0xcf7e));
        // CB E8 009C
        gbc.setState(0xa39, 0xbe71, 0x3a0, 0x20e5, 0x251d, 0x11da, 0x1, 0x0);
        gbc.writeMem(0xa39, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbe71, gbc.sp());
        EXPECT(0xa3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 009D
        gbc.setState(0xe411, 0xdb6f, 0x9780, 0x93c4, 0x990f, 0x58ac, 0x0, 0x1);
        gbc.writeMem(0xe411, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xdb6f, gbc.sp());
        EXPECT(0xe413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe411));
        EXPECT(0xe8, gbc.readMem(0xe412));
        // CB E8 009E
        gbc.setState(0xd29a, 0x5c1b, 0x29e0, 0x538e, 0x2453, 0x6ea4, 0x0, 0x1);
        gbc.writeMem(0xd29a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5c1b, gbc.sp());
        EXPECT(0xd29c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd29a));
        EXPECT(0xe8, gbc.readMem(0xd29b));
        // CB E8 009F
        gbc.setState(0x423b, 0xb3e9, 0x65f0, 0x5057, 0xb1a0, 0xe28b, 0x1, 0x0);
        gbc.writeMem(0x423b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb3e9, gbc.sp());
        EXPECT(0x423d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 00A1
        gbc.setState(0x67d, 0xf0c8, 0x12c0, 0x5a8a, 0xa91f, 0xb103, 0x1, 0x0);
        gbc.writeMem(0x67d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf0c8, gbc.sp());
        EXPECT(0x67f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00A2
        gbc.setState(0x97c6, 0x6459, 0x1850, 0x6476, 0x3111, 0xfa03, 0x1, 0x1);
        gbc.writeMem(0x97c6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6459, gbc.sp());
        EXPECT(0x97c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97c6));
        EXPECT(0xe8, gbc.readMem(0x97c7));
        // CB E8 00A3
        gbc.setState(0x7f73, 0xb5d7, 0xcf0, 0x207d, 0x6655, 0x365b, 0x0, 0x1);
        gbc.writeMem(0x7f73, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb5d7, gbc.sp());
        EXPECT(0x7f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 00A4
        gbc.setState(0x98bc, 0xbbe0, 0xb2a0, 0x5ded, 0xb708, 0x3297, 0x1, 0x0);
        gbc.writeMem(0x98bc, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbbe0, gbc.sp());
        EXPECT(0x98be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98bc));
        EXPECT(0xe8, gbc.readMem(0x98bd));
        // CB E8 00A5
        gbc.setState(0x52d7, 0x7086, 0x99e0, 0x9191, 0x77c8, 0x164b, 0x0, 0x1);
        gbc.writeMem(0x52d7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7086, gbc.sp());
        EXPECT(0x52d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00A6
        gbc.setState(0x9d78, 0x2b3, 0x96a0, 0xc336, 0x6bf, 0xc6c, 0x0, 0x0);
        gbc.writeMem(0x9d78, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2b3, gbc.sp());
        EXPECT(0x9d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d78));
        EXPECT(0xe8, gbc.readMem(0x9d79));
        // CB E8 00A7
        gbc.setState(0x1d02, 0x68fd, 0x9620, 0xe943, 0x4b9c, 0xd85b, 0x1, 0x1);
        gbc.writeMem(0x1d02, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x68fd, gbc.sp());
        EXPECT(0x1d04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00A8
        gbc.setState(0x39cf, 0x8a5e, 0x2300, 0xe2c8, 0x9189, 0x2dbb, 0x0, 0x1);
        gbc.writeMem(0x39cf, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8a5e, gbc.sp());
        EXPECT(0x39d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00A9
        gbc.setState(0xb236, 0x231c, 0x5220, 0xf25b, 0x17a2, 0xf6f9, 0x1, 0x0);
        gbc.writeMem(0xb236, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x231c, gbc.sp());
        EXPECT(0xb238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb236));
        EXPECT(0xe8, gbc.readMem(0xb237));
        // CB E8 00AA
        gbc.setState(0xe232, 0xa3c7, 0xf590, 0x5a3, 0xb436, 0x5649, 0x0, 0x1);
        gbc.writeMem(0xe232, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa3c7, gbc.sp());
        EXPECT(0xe234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe232));
        EXPECT(0xe8, gbc.readMem(0xe233));
        // CB E8 00AB
        gbc.setState(0x601, 0xe4a6, 0x2cc0, 0x405c, 0xda56, 0x2cf, 0x0, 0x0);
        gbc.writeMem(0x601, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe4a6, gbc.sp());
        EXPECT(0x603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00AD
        gbc.setState(0x9a70, 0x97c3, 0x4380, 0x276, 0x37e, 0x2627, 0x1, 0x0);
        gbc.writeMem(0x9a70, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x97c3, gbc.sp());
        EXPECT(0x9a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a70));
        EXPECT(0xe8, gbc.readMem(0x9a71));
        // CB E8 00AE
        gbc.setState(0xb06e, 0x13a1, 0x5970, 0x202e, 0x8f35, 0x812f, 0x0, 0x1);
        gbc.writeMem(0xb06e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x13a1, gbc.sp());
        EXPECT(0xb070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb06e));
        EXPECT(0xe8, gbc.readMem(0xb06f));
        // CB E8 00AF
        gbc.setState(0x9fcd, 0x3124, 0xe0b0, 0xcd8b, 0x9122, 0x8e3b, 0x1, 0x1);
        gbc.writeMem(0x9fcd, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3124, gbc.sp());
        EXPECT(0x9fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fcd));
        EXPECT(0xe8, gbc.readMem(0x9fce));
        // CB E8 00B0
        gbc.setState(0xc3b1, 0xb53e, 0xde70, 0xd9cb, 0x42dc, 0x8f86, 0x1, 0x0);
        gbc.writeMem(0xc3b1, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb53e, gbc.sp());
        EXPECT(0xc3b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b1));
        EXPECT(0xe8, gbc.readMem(0xc3b2));
        // CB E8 00B1
        gbc.setState(0xc2a4, 0x2b56, 0x22e0, 0x10c9, 0x1e85, 0xed67, 0x1, 0x1);
        gbc.writeMem(0xc2a4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2b56, gbc.sp());
        EXPECT(0xc2a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a4));
        EXPECT(0xe8, gbc.readMem(0xc2a5));
        // CB E8 00B2
        gbc.setState(0x689d, 0x7331, 0x7230, 0xf055, 0xf07f, 0xa0c0, 0x1, 0x0);
        gbc.writeMem(0x689d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7331, gbc.sp());
        EXPECT(0x689f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 00B3
        gbc.setState(0x5c52, 0x658e, 0x9d80, 0xbbbe, 0x9702, 0x739, 0x1, 0x0);
        gbc.writeMem(0x5c52, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x658e, gbc.sp());
        EXPECT(0x5c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00B4
        gbc.setState(0xe70f, 0x8e0f, 0x8e90, 0x8469, 0x2328, 0x1ece, 0x0, 0x1);
        gbc.writeMem(0xe70f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8e0f, gbc.sp());
        EXPECT(0xe711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe70f));
        EXPECT(0xe8, gbc.readMem(0xe710));
        // CB E8 00B5
        gbc.setState(0x5057, 0x4b0d, 0x4550, 0xce6f, 0x5102, 0xc9fa, 0x1, 0x0);
        gbc.writeMem(0x5057, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4b0d, gbc.sp());
        EXPECT(0x5059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 00B6
        gbc.setState(0xae6, 0x5215, 0x4dd0, 0x728e, 0x4fbd, 0xcfe6, 0x1, 0x0);
        gbc.writeMem(0xae6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5215, gbc.sp());
        EXPECT(0xae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 00B7
        gbc.setState(0xcc2d, 0xf364, 0xc980, 0xb28b, 0xbf8c, 0x62d5, 0x0, 0x1);
        gbc.writeMem(0xcc2d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf364, gbc.sp());
        EXPECT(0xcc2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc2d));
        EXPECT(0xe8, gbc.readMem(0xcc2e));
        // CB E8 00B8
        gbc.setState(0x1bbf, 0x3e5a, 0xfe10, 0xa7f9, 0x7281, 0x286, 0x1, 0x1);
        gbc.writeMem(0x1bbf, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3e5a, gbc.sp());
        EXPECT(0x1bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 00B9
        gbc.setState(0x99, 0xbcd3, 0xaf90, 0x3c3f, 0x2f95, 0x68f6, 0x1, 0x1);
        gbc.writeMem(0x99, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbcd3, gbc.sp());
        EXPECT(0x9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 00BA
        gbc.setState(0xebab, 0x5077, 0xd540, 0xb35a, 0xa849, 0x77d7, 0x0, 0x1);
        gbc.writeMem(0xebab, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5077, gbc.sp());
        EXPECT(0xebad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebab));
        EXPECT(0xe8, gbc.readMem(0xebac));
        // CB E8 00BB
        gbc.setState(0xaa93, 0xf2dc, 0x7c10, 0x3fda, 0x7ffd, 0x3566, 0x1, 0x0);
        gbc.writeMem(0xaa93, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf2dc, gbc.sp());
        EXPECT(0xaa95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa93));
        EXPECT(0xe8, gbc.readMem(0xaa94));
        // CB E8 00BC
        gbc.setState(0x9fa0, 0x9bc6, 0x85f0, 0xfc97, 0xd7c7, 0x5e50, 0x1, 0x1);
        gbc.writeMem(0x9fa0, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9bc6, gbc.sp());
        EXPECT(0x9fa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa0));
        EXPECT(0xe8, gbc.readMem(0x9fa1));
        // CB E8 00BD
        gbc.setState(0xd80a, 0xf6b3, 0xa10, 0x51cf, 0xe8b2, 0x3007, 0x1, 0x0);
        gbc.writeMem(0xd80a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf6b3, gbc.sp());
        EXPECT(0xd80c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd80a));
        EXPECT(0xe8, gbc.readMem(0xd80b));
        // CB E8 00BE
        gbc.setState(0xc02, 0x4624, 0x8080, 0xf664, 0x5174, 0xbafc, 0x1, 0x0);
        gbc.writeMem(0xc02, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4624, gbc.sp());
        EXPECT(0xc04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00BF
        gbc.setState(0x5f95, 0x3bc0, 0xf520, 0xe0b4, 0x2930, 0xd312, 0x1, 0x1);
        gbc.writeMem(0x5f95, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3bc0, gbc.sp());
        EXPECT(0x5f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00C0
        gbc.setState(0x52e7, 0xea30, 0xe410, 0xfdd9, 0xb375, 0x5bfe, 0x1, 0x1);
        gbc.writeMem(0x52e7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xea30, gbc.sp());
        EXPECT(0x52e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 00C2
        gbc.setState(0x53de, 0x156c, 0xf8e0, 0x611f, 0xc5b5, 0x2e47, 0x0, 0x1);
        gbc.writeMem(0x53de, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x156c, gbc.sp());
        EXPECT(0x53e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00C3
        gbc.setState(0xbeba, 0xe65c, 0x7c0, 0xaa74, 0xff0a, 0xe349, 0x0, 0x0);
        gbc.writeMem(0xbeba, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe65c, gbc.sp());
        EXPECT(0xbebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeba));
        EXPECT(0xe8, gbc.readMem(0xbebb));
        // CB E8 00C4
        gbc.setState(0xe027, 0x8e27, 0x5370, 0x22ea, 0x8040, 0x1924, 0x1, 0x0);
        gbc.writeMem(0xe027, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8e27, gbc.sp());
        EXPECT(0xe029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe027));
        EXPECT(0xe8, gbc.readMem(0xe028));
        // CB E8 00C5
        gbc.setState(0x9116, 0x516, 0x5ef0, 0x2b8a, 0x252, 0x44d5, 0x1, 0x0);
        gbc.writeMem(0x9116, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x516, gbc.sp());
        EXPECT(0x9118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9116));
        EXPECT(0xe8, gbc.readMem(0x9117));
        // CB E8 00C8
        gbc.setState(0x91a5, 0x98b9, 0x3b20, 0xf928, 0x4077, 0xfdd, 0x0, 0x0);
        gbc.writeMem(0x91a5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x98b9, gbc.sp());
        EXPECT(0x91a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91a5));
        EXPECT(0xe8, gbc.readMem(0x91a6));
        // CB E8 00C9
        gbc.setState(0x7181, 0x9993, 0x7670, 0x3b78, 0x15ee, 0xa534, 0x1, 0x0);
        gbc.writeMem(0x7181, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9993, gbc.sp());
        EXPECT(0x7183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 00CA
        gbc.setState(0x2000, 0x5b8d, 0xc5a0, 0x706e, 0x52d6, 0xb433, 0x1, 0x1);
        gbc.writeMem(0x2000, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5b8d, gbc.sp());
        EXPECT(0x2002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00CB
        gbc.setState(0x9ab4, 0x329a, 0x1ea0, 0xbeb4, 0x8c3d, 0x68c6, 0x1, 0x1);
        gbc.writeMem(0x9ab4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x329a, gbc.sp());
        EXPECT(0x9ab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ab4));
        EXPECT(0xe8, gbc.readMem(0x9ab5));
        // CB E8 00CC
        gbc.setState(0xa4ef, 0x6be1, 0xa7c0, 0xe4ba, 0xa079, 0x292d, 0x1, 0x0);
        gbc.writeMem(0xa4ef, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6be1, gbc.sp());
        EXPECT(0xa4f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ef));
        EXPECT(0xe8, gbc.readMem(0xa4f0));
        // CB E8 00CD
        gbc.setState(0x3daa, 0x3867, 0xa3d0, 0xecf1, 0x451e, 0x7fd1, 0x1, 0x0);
        gbc.writeMem(0x3daa, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3867, gbc.sp());
        EXPECT(0x3dac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 00CE
        gbc.setState(0x7378, 0x328c, 0xbfe0, 0x85a7, 0xc0f8, 0x5a29, 0x0, 0x1);
        gbc.writeMem(0x7378, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x328c, gbc.sp());
        EXPECT(0x737a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00CF
        gbc.setState(0xc139, 0xc9c4, 0xd5a0, 0xa0ca, 0xbd8e, 0x68f0, 0x0, 0x1);
        gbc.writeMem(0xc139, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc9c4, gbc.sp());
        EXPECT(0xc13b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc139));
        EXPECT(0xe8, gbc.readMem(0xc13a));
        // CB E8 00D0
        gbc.setState(0x9348, 0x178c, 0x96c0, 0xca6c, 0x6529, 0xad47, 0x0, 0x1);
        gbc.writeMem(0x9348, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x178c, gbc.sp());
        EXPECT(0x934a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9348));
        EXPECT(0xe8, gbc.readMem(0x9349));
        // CB E8 00D2
        gbc.setState(0x873c, 0xb242, 0x8430, 0xef07, 0x9626, 0xf614, 0x1, 0x0);
        gbc.writeMem(0x873c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb242, gbc.sp());
        EXPECT(0x873e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x873c));
        EXPECT(0xe8, gbc.readMem(0x873d));
        // CB E8 00D3
        gbc.setState(0xc95d, 0xcf33, 0xe0c0, 0xea81, 0xb3e6, 0xe09b, 0x0, 0x1);
        gbc.writeMem(0xc95d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcf33, gbc.sp());
        EXPECT(0xc95f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc95d));
        EXPECT(0xe8, gbc.readMem(0xc95e));
        // CB E8 00D4
        gbc.setState(0x75, 0x5172, 0x9130, 0xb330, 0xb29a, 0x9855, 0x0, 0x0);
        gbc.writeMem(0x75, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5172, gbc.sp());
        EXPECT(0x77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 00D5
        gbc.setState(0x535b, 0x66ea, 0xa10, 0x5bd4, 0x408e, 0xccc9, 0x0, 0x1);
        gbc.writeMem(0x535b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x66ea, gbc.sp());
        EXPECT(0x535d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 00D6
        gbc.setState(0x5de6, 0xe7ca, 0x3120, 0x735a, 0x1672, 0x6d07, 0x1, 0x1);
        gbc.writeMem(0x5de6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe7ca, gbc.sp());
        EXPECT(0x5de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00D7
        gbc.setState(0x59af, 0xe8bb, 0x4380, 0xc835, 0x5607, 0xae75, 0x0, 0x0);
        gbc.writeMem(0x59af, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe8bb, gbc.sp());
        EXPECT(0x59b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00D8
        gbc.setState(0xeae8, 0x7309, 0x8580, 0xb617, 0x7c02, 0x89b4, 0x1, 0x1);
        gbc.writeMem(0xeae8, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7309, gbc.sp());
        EXPECT(0xeaea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae8));
        EXPECT(0xe8, gbc.readMem(0xeae9));
        // CB E8 00D9
        gbc.setState(0xcf4e, 0xecf7, 0x8490, 0x57b9, 0xc882, 0xf6c6, 0x0, 0x1);
        gbc.writeMem(0xcf4e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xecf7, gbc.sp());
        EXPECT(0xcf50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf4e));
        EXPECT(0xe8, gbc.readMem(0xcf4f));
        // CB E8 00DA
        gbc.setState(0x5b41, 0x381e, 0xdcf0, 0x46fa, 0x4ae, 0x18cf, 0x0, 0x1);
        gbc.writeMem(0x5b41, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x381e, gbc.sp());
        EXPECT(0x5b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 00DB
        gbc.setState(0x84cd, 0xa5c0, 0x3ef0, 0x9048, 0x3cca, 0x2764, 0x0, 0x1);
        gbc.writeMem(0x84cd, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa5c0, gbc.sp());
        EXPECT(0x84cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84cd));
        EXPECT(0xe8, gbc.readMem(0x84ce));
        // CB E8 00DC
        gbc.setState(0x694d, 0x2ff1, 0x2240, 0x1d4, 0x5abd, 0x4241, 0x1, 0x1);
        gbc.writeMem(0x694d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2ff1, gbc.sp());
        EXPECT(0x694f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00DD
        gbc.setState(0x854f, 0xebc8, 0xe4f0, 0x4619, 0x2d07, 0x39fd, 0x0, 0x1);
        gbc.writeMem(0x854f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xebc8, gbc.sp());
        EXPECT(0x8551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x854f));
        EXPECT(0xe8, gbc.readMem(0x8550));
        // CB E8 00DE
        gbc.setState(0x268b, 0x2ebb, 0x8fe0, 0xe36d, 0xd3c3, 0x5515, 0x0, 0x0);
        gbc.writeMem(0x268b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2ebb, gbc.sp());
        EXPECT(0x268d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00DF
        gbc.setState(0x9b39, 0xb9d0, 0xf990, 0x83a6, 0x3ed7, 0x9000, 0x0, 0x1);
        gbc.writeMem(0x9b39, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb9d0, gbc.sp());
        EXPECT(0x9b3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b39));
        EXPECT(0xe8, gbc.readMem(0x9b3a));
        // CB E8 00E0
        gbc.setState(0x3b11, 0x31dd, 0xa390, 0xd37f, 0xf5d1, 0x882a, 0x0, 0x0);
        gbc.writeMem(0x3b11, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x31dd, gbc.sp());
        EXPECT(0x3b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 00E1
        gbc.setState(0x43e9, 0x5a82, 0x1150, 0x34be, 0xa660, 0x95dc, 0x0, 0x0);
        gbc.writeMem(0x43e9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5a82, gbc.sp());
        EXPECT(0x43eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 00E2
        gbc.setState(0x6467, 0xea37, 0x5500, 0xbc36, 0x35ff, 0xe33, 0x0, 0x1);
        gbc.writeMem(0x6467, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xea37, gbc.sp());
        EXPECT(0x6469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00E3
        gbc.setState(0x467, 0xc7df, 0x3a30, 0x53a2, 0x1f01, 0x572d, 0x1, 0x1);
        gbc.writeMem(0x467, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc7df, gbc.sp());
        EXPECT(0x469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 00E4
        gbc.setState(0x714e, 0xdea5, 0x2e40, 0xfd0a, 0x5e75, 0x2b64, 0x1, 0x1);
        gbc.writeMem(0x714e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xdea5, gbc.sp());
        EXPECT(0x7150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00E5
        gbc.setState(0x8c87, 0x47f5, 0x2940, 0x210c, 0x9f19, 0x9ff0, 0x0, 0x1);
        gbc.writeMem(0x8c87, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x47f5, gbc.sp());
        EXPECT(0x8c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c87));
        EXPECT(0xe8, gbc.readMem(0x8c88));
        // CB E8 00E6
        gbc.setState(0xa713, 0xb6d2, 0x7440, 0x5d60, 0x6037, 0x4023, 0x1, 0x0);
        gbc.writeMem(0xa713, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb6d2, gbc.sp());
        EXPECT(0xa715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa713));
        EXPECT(0xe8, gbc.readMem(0xa714));
        // CB E8 00E7
        gbc.setState(0x7b00, 0x73d2, 0x7080, 0xf2af, 0x4fe0, 0xc995, 0x1, 0x1);
        gbc.writeMem(0x7b00, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x73d2, gbc.sp());
        EXPECT(0x7b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00E8
        gbc.setState(0x8e3e, 0xa321, 0x7b10, 0x987a, 0x858f, 0x4b50, 0x0, 0x0);
        gbc.writeMem(0x8e3e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa321, gbc.sp());
        EXPECT(0x8e40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e3e));
        EXPECT(0xe8, gbc.readMem(0x8e3f));
        // CB E8 00E9
        gbc.setState(0x9b7b, 0x9e7e, 0xec40, 0x8fcc, 0x1a3, 0x3f0e, 0x0, 0x0);
        gbc.writeMem(0x9b7b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9e7e, gbc.sp());
        EXPECT(0x9b7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b7b));
        EXPECT(0xe8, gbc.readMem(0x9b7c));
        // CB E8 00EA
        gbc.setState(0xab2c, 0xa91, 0x3ac0, 0x7dfd, 0x8666, 0xabaf, 0x1, 0x0);
        gbc.writeMem(0xab2c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa91, gbc.sp());
        EXPECT(0xab2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab2c));
        EXPECT(0xe8, gbc.readMem(0xab2d));
        // CB E8 00EB
        gbc.setState(0x7738, 0x7466, 0x2ae0, 0x9ad6, 0x5f3c, 0x4016, 0x0, 0x1);
        gbc.writeMem(0x7738, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7466, gbc.sp());
        EXPECT(0x773a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00ED
        gbc.setState(0xb132, 0xbb78, 0xe090, 0xd275, 0x8894, 0xe663, 0x1, 0x0);
        gbc.writeMem(0xb132, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbb78, gbc.sp());
        EXPECT(0xb134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb132));
        EXPECT(0xe8, gbc.readMem(0xb133));
        // CB E8 00EE
        gbc.setState(0xaab0, 0x4f18, 0x4430, 0xf601, 0x8e, 0xb793, 0x1, 0x1);
        gbc.writeMem(0xaab0, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4f18, gbc.sp());
        EXPECT(0xaab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaab0));
        EXPECT(0xe8, gbc.readMem(0xaab1));
        // CB E8 00EF
        gbc.setState(0x6e43, 0x6d7f, 0xd3a0, 0x5f91, 0x8e36, 0xb42, 0x1, 0x1);
        gbc.writeMem(0x6e43, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6d7f, gbc.sp());
        EXPECT(0x6e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00F0
        gbc.setState(0x5655, 0x2d8d, 0x17f0, 0x19c8, 0x64c3, 0xa661, 0x1, 0x0);
        gbc.writeMem(0x5655, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2d8d, gbc.sp());
        EXPECT(0x5657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 00F1
        gbc.setState(0x80fc, 0x4e73, 0x3790, 0x819c, 0xb6fb, 0xbdd0, 0x1, 0x1);
        gbc.writeMem(0x80fc, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4e73, gbc.sp());
        EXPECT(0x80fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80fc));
        EXPECT(0xe8, gbc.readMem(0x80fd));
        // CB E8 00F2
        gbc.setState(0xacc3, 0xe6e5, 0xa2c0, 0xac3c, 0xb1f5, 0xc4d8, 0x0, 0x1);
        gbc.writeMem(0xacc3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe6e5, gbc.sp());
        EXPECT(0xacc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc3));
        EXPECT(0xe8, gbc.readMem(0xacc4));
        // CB E8 00F3
        gbc.setState(0xc62, 0xe25e, 0x4830, 0x27fc, 0xb17d, 0x3d71, 0x0, 0x1);
        gbc.writeMem(0xc62, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe25e, gbc.sp());
        EXPECT(0xc64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 00F4
        gbc.setState(0x986, 0x120c, 0x3580, 0xe0f1, 0x1d0e, 0x90e2, 0x0, 0x1);
        gbc.writeMem(0x986, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x120c, gbc.sp());
        EXPECT(0x988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00F5
        gbc.setState(0xd147, 0xd19e, 0x1a10, 0xaa74, 0x8265, 0x5e33, 0x0, 0x1);
        gbc.writeMem(0xd147, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd19e, gbc.sp());
        EXPECT(0xd149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd147));
        EXPECT(0xe8, gbc.readMem(0xd148));
        // CB E8 00F6
        gbc.setState(0x1a3c, 0x68af, 0x99c0, 0xc04, 0x912d, 0x1199, 0x1, 0x0);
        gbc.writeMem(0x1a3c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x68af, gbc.sp());
        EXPECT(0x1a3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00F7
        gbc.setState(0x2b8d, 0x2242, 0x11e0, 0xdc6a, 0x70ac, 0xce51, 0x0, 0x0);
        gbc.writeMem(0x2b8d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2242, gbc.sp());
        EXPECT(0x2b8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00F8
        gbc.setState(0x3a5c, 0xc07a, 0xc940, 0x39fb, 0x1da1, 0x5c61, 0x1, 0x0);
        gbc.writeMem(0x3a5c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc07a, gbc.sp());
        EXPECT(0x3a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 00F9
        gbc.setState(0xc82d, 0xfacb, 0x1470, 0xc18, 0x563d, 0xaf04, 0x0, 0x0);
        gbc.writeMem(0xc82d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xfacb, gbc.sp());
        EXPECT(0xc82f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc82d));
        EXPECT(0xe8, gbc.readMem(0xc82e));
        // CB E8 00FA
        gbc.setState(0xd517, 0x4d50, 0x42b0, 0x51ed, 0xdbe6, 0x124f, 0x0, 0x0);
        gbc.writeMem(0xd517, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4d50, gbc.sp());
        EXPECT(0xd519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd517));
        EXPECT(0xe8, gbc.readMem(0xd518));
        // CB E8 00FB
        gbc.setState(0xe807, 0xf34c, 0xac20, 0xd657, 0x8b05, 0x9337, 0x0, 0x1);
        gbc.writeMem(0xe807, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf34c, gbc.sp());
        EXPECT(0xe809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe807));
        EXPECT(0xe8, gbc.readMem(0xe808));
        // CB E8 00FC
        gbc.setState(0x8b61, 0x79ca, 0x77c0, 0xbbd4, 0x3797, 0x8b4d, 0x0, 0x0);
        gbc.writeMem(0x8b61, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x79ca, gbc.sp());
        EXPECT(0x8b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b61));
        EXPECT(0xe8, gbc.readMem(0x8b62));
        // CB E8 00FD
        gbc.setState(0xd20, 0xbd6e, 0xe910, 0x485, 0xaa20, 0x4eb9, 0x1, 0x0);
        gbc.writeMem(0xd20, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbd6e, gbc.sp());
        EXPECT(0xd22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 00FE
        gbc.setState(0x15ee, 0x4cd1, 0x9630, 0x3fb, 0x6883, 0x5226, 0x1, 0x1);
        gbc.writeMem(0x15ee, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4cd1, gbc.sp());
        EXPECT(0x15f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 00FF
        gbc.setState(0xa31f, 0x5e7c, 0x9cf0, 0x8070, 0x9646, 0xcca0, 0x0, 0x0);
        gbc.writeMem(0xa31f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5e7c, gbc.sp());
        EXPECT(0xa321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa31f));
        EXPECT(0xe8, gbc.readMem(0xa320));
        // CB E8 0100
        gbc.setState(0xb5c2, 0xc0a6, 0xb480, 0xaf45, 0x2476, 0x1a2a, 0x0, 0x0);
        gbc.writeMem(0xb5c2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc0a6, gbc.sp());
        EXPECT(0xb5c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c2));
        EXPECT(0xe8, gbc.readMem(0xb5c3));
        // CB E8 0101
        gbc.setState(0xc42f, 0x569f, 0xd20, 0x6acb, 0x96fc, 0xdd1b, 0x1, 0x1);
        gbc.writeMem(0xc42f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x569f, gbc.sp());
        EXPECT(0xc431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc42f));
        EXPECT(0xe8, gbc.readMem(0xc430));
        // CB E8 0102
        gbc.setState(0xe4ee, 0x31af, 0x2fa0, 0x7e4a, 0x551a, 0x6e57, 0x0, 0x1);
        gbc.writeMem(0xe4ee, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x31af, gbc.sp());
        EXPECT(0xe4f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ee));
        EXPECT(0xe8, gbc.readMem(0xe4ef));
        // CB E8 0103
        gbc.setState(0x554d, 0x5a90, 0xaf20, 0x6f41, 0x2dfc, 0x68c9, 0x1, 0x0);
        gbc.writeMem(0x554d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5a90, gbc.sp());
        EXPECT(0x554f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0104
        gbc.setState(0x4c71, 0xa557, 0x6e80, 0x2b96, 0xfe2a, 0xeea0, 0x1, 0x0);
        gbc.writeMem(0x4c71, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa557, gbc.sp());
        EXPECT(0x4c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0105
        gbc.setState(0x9bf, 0x63d1, 0x3fa0, 0x19d, 0x1b62, 0x66f3, 0x0, 0x0);
        gbc.writeMem(0x9bf, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x63d1, gbc.sp());
        EXPECT(0x9c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0106
        gbc.setState(0x41a3, 0x3071, 0x74d0, 0xd367, 0xed90, 0xcbe0, 0x0, 0x0);
        gbc.writeMem(0x41a3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3071, gbc.sp());
        EXPECT(0x41a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0107
        gbc.setState(0xddf6, 0xcab6, 0x8e90, 0x6487, 0xcc3, 0x59b1, 0x0, 0x1);
        gbc.writeMem(0xddf6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcab6, gbc.sp());
        EXPECT(0xddf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddf6));
        EXPECT(0xe8, gbc.readMem(0xddf7));
        // CB E8 0108
        gbc.setState(0x4ee6, 0x170f, 0xaf00, 0x65d2, 0x67ce, 0xa6e0, 0x1, 0x1);
        gbc.writeMem(0x4ee6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x170f, gbc.sp());
        EXPECT(0x4ee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0109
        gbc.setState(0x1698, 0xf233, 0xd770, 0x33b5, 0xbfef, 0xbb31, 0x1, 0x1);
        gbc.writeMem(0x1698, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf233, gbc.sp());
        EXPECT(0x169a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 010A
        gbc.setState(0x442c, 0x79b2, 0x70b0, 0x3c3e, 0x8ee6, 0xfe0f, 0x1, 0x0);
        gbc.writeMem(0x442c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x79b2, gbc.sp());
        EXPECT(0x442e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 010B
        gbc.setState(0x3b56, 0x23e4, 0xc920, 0xda58, 0x9a08, 0x10d5, 0x1, 0x1);
        gbc.writeMem(0x3b56, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x23e4, gbc.sp());
        EXPECT(0x3b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 010C
        gbc.setState(0xbe2, 0x9b03, 0x1e50, 0x6e6a, 0x476b, 0xb84c, 0x0, 0x1);
        gbc.writeMem(0xbe2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9b03, gbc.sp());
        EXPECT(0xbe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 010D
        gbc.setState(0xcc3e, 0xce7a, 0x6180, 0x3860, 0x3290, 0x4c53, 0x1, 0x0);
        gbc.writeMem(0xcc3e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xce7a, gbc.sp());
        EXPECT(0xcc40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3e));
        EXPECT(0xe8, gbc.readMem(0xcc3f));
        // CB E8 010E
        gbc.setState(0xafd8, 0x9ac5, 0x7a90, 0xc34a, 0x8796, 0xec3e, 0x1, 0x0);
        gbc.writeMem(0xafd8, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9ac5, gbc.sp());
        EXPECT(0xafda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd8));
        EXPECT(0xe8, gbc.readMem(0xafd9));
        // CB E8 0110
        gbc.setState(0x707e, 0x1116, 0x1be0, 0x11c4, 0x4b6a, 0x8e2b, 0x1, 0x1);
        gbc.writeMem(0x707e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1116, gbc.sp());
        EXPECT(0x7080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0111
        gbc.setState(0x29bf, 0xd864, 0x3740, 0x9c91, 0x6313, 0xd05, 0x0, 0x1);
        gbc.writeMem(0x29bf, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd864, gbc.sp());
        EXPECT(0x29c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0112
        gbc.setState(0x1f2, 0xecc8, 0x2130, 0xcec3, 0xaea9, 0x2f00, 0x1, 0x1);
        gbc.writeMem(0x1f2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xecc8, gbc.sp());
        EXPECT(0x1f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0113
        gbc.setState(0x8ef6, 0x2356, 0xe970, 0xd52, 0xaa09, 0xe182, 0x1, 0x0);
        gbc.writeMem(0x8ef6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2356, gbc.sp());
        EXPECT(0x8ef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef6));
        EXPECT(0xe8, gbc.readMem(0x8ef7));
        // CB E8 0114
        gbc.setState(0x2340, 0xa383, 0xfb30, 0x2956, 0xaac, 0x6a98, 0x1, 0x1);
        gbc.writeMem(0x2340, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa383, gbc.sp());
        EXPECT(0x2342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0115
        gbc.setState(0xe46c, 0x9016, 0xeb00, 0x83f, 0x4aea, 0xd855, 0x0, 0x1);
        gbc.writeMem(0xe46c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9016, gbc.sp());
        EXPECT(0xe46e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe46c));
        EXPECT(0xe8, gbc.readMem(0xe46d));
        // CB E8 0116
        gbc.setState(0x607f, 0x9f05, 0x6b30, 0xd234, 0x60b1, 0x1d85, 0x1, 0x1);
        gbc.writeMem(0x607f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9f05, gbc.sp());
        EXPECT(0x6081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0117
        gbc.setState(0xe47c, 0x942, 0x9fb0, 0x5855, 0x5b8, 0x6bd9, 0x1, 0x0);
        gbc.writeMem(0xe47c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x942, gbc.sp());
        EXPECT(0xe47e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe47c));
        EXPECT(0xe8, gbc.readMem(0xe47d));
        // CB E8 0118
        gbc.setState(0x7402, 0xfd98, 0xc910, 0x3672, 0xb348, 0xaf9d, 0x0, 0x0);
        gbc.writeMem(0x7402, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xfd98, gbc.sp());
        EXPECT(0x7404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0119
        gbc.setState(0x3fdf, 0x1ccb, 0xab20, 0x620f, 0x2b65, 0x9403, 0x1, 0x1);
        gbc.writeMem(0x3fdf, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1ccb, gbc.sp());
        EXPECT(0x3fe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 011A
        gbc.setState(0xb22, 0x9773, 0x46a0, 0xb5bd, 0x4c9f, 0xbad9, 0x1, 0x1);
        gbc.writeMem(0xb22, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9773, gbc.sp());
        EXPECT(0xb24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 011B
        gbc.setState(0x97aa, 0xf7fa, 0x7760, 0x381, 0x2d29, 0x6c82, 0x0, 0x1);
        gbc.writeMem(0x97aa, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf7fa, gbc.sp());
        EXPECT(0x97ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97aa));
        EXPECT(0xe8, gbc.readMem(0x97ab));
        // CB E8 011C
        gbc.setState(0xb7b1, 0x842, 0x7000, 0x29e1, 0xe8cd, 0xedf0, 0x1, 0x0);
        gbc.writeMem(0xb7b1, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x842, gbc.sp());
        EXPECT(0xb7b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b1));
        EXPECT(0xe8, gbc.readMem(0xb7b2));
        // CB E8 011D
        gbc.setState(0x926a, 0x890a, 0x7570, 0x1266, 0x94cb, 0x73f7, 0x1, 0x1);
        gbc.writeMem(0x926a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x890a, gbc.sp());
        EXPECT(0x926c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x926a));
        EXPECT(0xe8, gbc.readMem(0x926b));
        // CB E8 011E
        gbc.setState(0x78b2, 0x5430, 0x4170, 0xc807, 0xb4c2, 0xa7ef, 0x0, 0x1);
        gbc.writeMem(0x78b2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5430, gbc.sp());
        EXPECT(0x78b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 011F
        gbc.setState(0x195, 0xa74, 0xa5e0, 0x2ad, 0x88d4, 0x247a, 0x0, 0x1);
        gbc.writeMem(0x195, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa74, gbc.sp());
        EXPECT(0x197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0120
        gbc.setState(0xa4d3, 0x1863, 0x3fc0, 0xb4d5, 0xe94a, 0xed81, 0x1, 0x0);
        gbc.writeMem(0xa4d3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1863, gbc.sp());
        EXPECT(0xa4d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4d3));
        EXPECT(0xe8, gbc.readMem(0xa4d4));
        // CB E8 0121
        gbc.setState(0xae76, 0x6675, 0xb130, 0x7e3b, 0xe61c, 0x8539, 0x0, 0x0);
        gbc.writeMem(0xae76, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6675, gbc.sp());
        EXPECT(0xae78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae76));
        EXPECT(0xe8, gbc.readMem(0xae77));
        // CB E8 0122
        gbc.setState(0xb6ec, 0x25da, 0xaaa0, 0xf0ea, 0xb73b, 0xd071, 0x0, 0x0);
        gbc.writeMem(0xb6ec, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x25da, gbc.sp());
        EXPECT(0xb6ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ec));
        EXPECT(0xe8, gbc.readMem(0xb6ed));
        // CB E8 0123
        gbc.setState(0x5844, 0xf6e4, 0x8e80, 0x7155, 0x11c9, 0x6cf0, 0x1, 0x0);
        gbc.writeMem(0x5844, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf6e4, gbc.sp());
        EXPECT(0x5846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0124
        gbc.setState(0x20f4, 0x3bb2, 0x2120, 0x26ed, 0xd918, 0x8c4f, 0x1, 0x1);
        gbc.writeMem(0x20f4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3bb2, gbc.sp());
        EXPECT(0x20f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0125
        gbc.setState(0xa3bb, 0xa1a3, 0x90d0, 0x1e6e, 0x714, 0xb24c, 0x0, 0x1);
        gbc.writeMem(0xa3bb, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa1a3, gbc.sp());
        EXPECT(0xa3bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3bb));
        EXPECT(0xe8, gbc.readMem(0xa3bc));
        // CB E8 0126
        gbc.setState(0x8ed7, 0xce2a, 0xd560, 0x40c4, 0xa1c9, 0x26fd, 0x1, 0x0);
        gbc.writeMem(0x8ed7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xce2a, gbc.sp());
        EXPECT(0x8ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed7));
        EXPECT(0xe8, gbc.readMem(0x8ed8));
        // CB E8 0128
        gbc.setState(0x6752, 0xe537, 0x8390, 0xb50c, 0xa45f, 0x75ae, 0x0, 0x0);
        gbc.writeMem(0x6752, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe537, gbc.sp());
        EXPECT(0x6754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0129
        gbc.setState(0xabab, 0x31ce, 0x1390, 0x4b05, 0x22d7, 0xe15f, 0x0, 0x0);
        gbc.writeMem(0xabab, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x31ce, gbc.sp());
        EXPECT(0xabad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabab));
        EXPECT(0xe8, gbc.readMem(0xabac));
        // CB E8 012A
        gbc.setState(0x542a, 0x753b, 0x3200, 0x109e, 0x62a6, 0x385f, 0x1, 0x1);
        gbc.writeMem(0x542a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x753b, gbc.sp());
        EXPECT(0x542c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 012B
        gbc.setState(0xd17e, 0x59a7, 0x8a10, 0x7685, 0x3bb9, 0xab09, 0x0, 0x0);
        gbc.writeMem(0xd17e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x59a7, gbc.sp());
        EXPECT(0xd180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd17e));
        EXPECT(0xe8, gbc.readMem(0xd17f));
        // CB E8 012C
        gbc.setState(0x51f8, 0xf7ad, 0x63d0, 0xdf0a, 0xbb09, 0x78ea, 0x0, 0x0);
        gbc.writeMem(0x51f8, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf7ad, gbc.sp());
        EXPECT(0x51fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 012D
        gbc.setState(0xcc7f, 0x2175, 0xafe0, 0x6f76, 0xe48b, 0xad51, 0x1, 0x0);
        gbc.writeMem(0xcc7f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2175, gbc.sp());
        EXPECT(0xcc81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc7f));
        EXPECT(0xe8, gbc.readMem(0xcc80));
        // CB E8 012E
        gbc.setState(0x6dd0, 0xe8c4, 0x1370, 0xe637, 0x5ec9, 0xa97b, 0x0, 0x0);
        gbc.writeMem(0x6dd0, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe8c4, gbc.sp());
        EXPECT(0x6dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 012F
        gbc.setState(0xb2d1, 0x5a73, 0x7990, 0x1574, 0x8dc5, 0xf2b7, 0x0, 0x1);
        gbc.writeMem(0xb2d1, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5a73, gbc.sp());
        EXPECT(0xb2d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d1));
        EXPECT(0xe8, gbc.readMem(0xb2d2));
        // CB E8 0130
        gbc.setState(0xe006, 0xdadd, 0x5a30, 0xfea6, 0x9400, 0xa560, 0x1, 0x0);
        gbc.writeMem(0xe006, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdadd, gbc.sp());
        EXPECT(0xe008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe006));
        EXPECT(0xe8, gbc.readMem(0xe007));
        // CB E8 0131
        gbc.setState(0x4952, 0xb582, 0x2b20, 0xd4c6, 0x3beb, 0xa509, 0x1, 0x0);
        gbc.writeMem(0x4952, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb582, gbc.sp());
        EXPECT(0x4954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0132
        gbc.setState(0x9c79, 0x864f, 0xffb0, 0xcdd9, 0x9f76, 0xc045, 0x0, 0x0);
        gbc.writeMem(0x9c79, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x864f, gbc.sp());
        EXPECT(0x9c7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c79));
        EXPECT(0xe8, gbc.readMem(0x9c7a));
        // CB E8 0133
        gbc.setState(0x2e39, 0x9851, 0xf730, 0xff62, 0xd3cf, 0x9951, 0x1, 0x0);
        gbc.writeMem(0x2e39, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9851, gbc.sp());
        EXPECT(0x2e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0134
        gbc.setState(0x260, 0x3b87, 0x74d0, 0xeb46, 0x2812, 0xe13a, 0x1, 0x0);
        gbc.writeMem(0x260, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3b87, gbc.sp());
        EXPECT(0x262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0135
        gbc.setState(0x57d1, 0xcf51, 0x8e50, 0x7fe0, 0xab01, 0x64e6, 0x1, 0x1);
        gbc.writeMem(0x57d1, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xcf51, gbc.sp());
        EXPECT(0x57d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0136
        gbc.setState(0x2891, 0x958, 0x5600, 0x8227, 0xee84, 0x5a98, 0x1, 0x0);
        gbc.writeMem(0x2891, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x958, gbc.sp());
        EXPECT(0x2893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0137
        gbc.setState(0x59e7, 0xa16d, 0x48d0, 0x9828, 0x18a1, 0x1766, 0x1, 0x1);
        gbc.writeMem(0x59e7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa16d, gbc.sp());
        EXPECT(0x59e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0138
        gbc.setState(0xca66, 0x59f1, 0x8f00, 0xdf16, 0x67dc, 0x8f53, 0x1, 0x0);
        gbc.writeMem(0xca66, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x59f1, gbc.sp());
        EXPECT(0xca68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca66));
        EXPECT(0xe8, gbc.readMem(0xca67));
        // CB E8 0139
        gbc.setState(0x9c58, 0x5400, 0x5340, 0x879a, 0x93f6, 0x6b04, 0x1, 0x0);
        gbc.writeMem(0x9c58, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5400, gbc.sp());
        EXPECT(0x9c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c58));
        EXPECT(0xe8, gbc.readMem(0x9c59));
        // CB E8 013A
        gbc.setState(0xc624, 0xacf0, 0x4870, 0x88d7, 0xb6ee, 0x8927, 0x0, 0x1);
        gbc.writeMem(0xc624, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xacf0, gbc.sp());
        EXPECT(0xc626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc624));
        EXPECT(0xe8, gbc.readMem(0xc625));
        // CB E8 013B
        gbc.setState(0xb7db, 0x71ee, 0x4c40, 0x5845, 0x8ec2, 0xfcd0, 0x1, 0x1);
        gbc.writeMem(0xb7db, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x71ee, gbc.sp());
        EXPECT(0xb7dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7db));
        EXPECT(0xe8, gbc.readMem(0xb7dc));
        // CB E8 013C
        gbc.setState(0xed91, 0x9077, 0x6670, 0x6946, 0xdc40, 0xa99f, 0x0, 0x1);
        gbc.writeMem(0xed91, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9077, gbc.sp());
        EXPECT(0xed93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed91));
        EXPECT(0xe8, gbc.readMem(0xed92));
        // CB E8 013D
        gbc.setState(0xa3b8, 0x9c0c, 0xbdb0, 0x3c07, 0x8cdf, 0x6575, 0x1, 0x0);
        gbc.writeMem(0xa3b8, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9c0c, gbc.sp());
        EXPECT(0xa3ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3b8));
        EXPECT(0xe8, gbc.readMem(0xa3b9));
        // CB E8 013E
        gbc.setState(0xd773, 0xa18f, 0xf670, 0x35a8, 0x94ad, 0xac34, 0x1, 0x0);
        gbc.writeMem(0xd773, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa18f, gbc.sp());
        EXPECT(0xd775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd773));
        EXPECT(0xe8, gbc.readMem(0xd774));
        // CB E8 013F
        gbc.setState(0x5e16, 0xde29, 0x55b0, 0xed18, 0x7855, 0xd29e, 0x0, 0x1);
        gbc.writeMem(0x5e16, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xde29, gbc.sp());
        EXPECT(0x5e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0140
        gbc.setState(0x7bb4, 0x7aef, 0x4580, 0x8df5, 0x605d, 0x2dfa, 0x0, 0x1);
        gbc.writeMem(0x7bb4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7aef, gbc.sp());
        EXPECT(0x7bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0141
        gbc.setState(0x12a2, 0x5243, 0x2050, 0xc83c, 0xc594, 0x9b12, 0x0, 0x1);
        gbc.writeMem(0x12a2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5243, gbc.sp());
        EXPECT(0x12a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0142
        gbc.setState(0xafb0, 0x7f9e, 0xf480, 0x4c61, 0x8aa, 0x57fb, 0x0, 0x0);
        gbc.writeMem(0xafb0, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7f9e, gbc.sp());
        EXPECT(0xafb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb0));
        EXPECT(0xe8, gbc.readMem(0xafb1));
        // CB E8 0143
        gbc.setState(0x8a52, 0x6d08, 0xe7a0, 0x80a7, 0xca28, 0x2054, 0x0, 0x1);
        gbc.writeMem(0x8a52, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6d08, gbc.sp());
        EXPECT(0x8a54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a52));
        EXPECT(0xe8, gbc.readMem(0x8a53));
        // CB E8 0144
        gbc.setState(0x4b09, 0x7e90, 0x2990, 0x7739, 0x11d1, 0x7e30, 0x1, 0x0);
        gbc.writeMem(0x4b09, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7e90, gbc.sp());
        EXPECT(0x4b0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0145
        gbc.setState(0x268d, 0x3546, 0xef00, 0x2f69, 0x4dad, 0x2ceb, 0x1, 0x1);
        gbc.writeMem(0x268d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3546, gbc.sp());
        EXPECT(0x268f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0146
        gbc.setState(0xc19a, 0x3e5c, 0x2d0, 0x4069, 0xdd93, 0x6931, 0x0, 0x1);
        gbc.writeMem(0xc19a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3e5c, gbc.sp());
        EXPECT(0xc19c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc19a));
        EXPECT(0xe8, gbc.readMem(0xc19b));
        // CB E8 0148
        gbc.setState(0x7c8c, 0xd2a9, 0xd60, 0xb766, 0xde6f, 0x7dfa, 0x0, 0x0);
        gbc.writeMem(0x7c8c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd2a9, gbc.sp());
        EXPECT(0x7c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0149
        gbc.setState(0x788f, 0xb63, 0xf5d0, 0xa13d, 0x160b, 0x9962, 0x1, 0x0);
        gbc.writeMem(0x788f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb63, gbc.sp());
        EXPECT(0x7891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 014A
        gbc.setState(0x6337, 0xd6a3, 0x5ba0, 0x562b, 0x267b, 0xf749, 0x1, 0x0);
        gbc.writeMem(0x6337, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd6a3, gbc.sp());
        EXPECT(0x6339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 014B
        gbc.setState(0xdb46, 0x83d5, 0xe300, 0xcb51, 0x93, 0x41aa, 0x0, 0x0);
        gbc.writeMem(0xdb46, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x83d5, gbc.sp());
        EXPECT(0xdb48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb46));
        EXPECT(0xe8, gbc.readMem(0xdb47));
        // CB E8 014C
        gbc.setState(0x89d4, 0x7ea0, 0x15e0, 0x9809, 0x4cf3, 0xc375, 0x1, 0x1);
        gbc.writeMem(0x89d4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7ea0, gbc.sp());
        EXPECT(0x89d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d4));
        EXPECT(0xe8, gbc.readMem(0x89d5));
        // CB E8 014E
        gbc.setState(0x635d, 0x4201, 0x8860, 0x9540, 0xd9c8, 0x1a6a, 0x1, 0x1);
        gbc.writeMem(0x635d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4201, gbc.sp());
        EXPECT(0x635f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 014F
        gbc.setState(0x65a4, 0x7c28, 0x5480, 0xff28, 0x1c82, 0xbc91, 0x1, 0x1);
        gbc.writeMem(0x65a4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7c28, gbc.sp());
        EXPECT(0x65a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0150
        gbc.setState(0x34f4, 0xd1b8, 0xa7e0, 0x67fb, 0xe3a8, 0x22f5, 0x0, 0x0);
        gbc.writeMem(0x34f4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd1b8, gbc.sp());
        EXPECT(0x34f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0151
        gbc.setState(0x773a, 0xd176, 0xb2b0, 0x4346, 0x9f8c, 0x8914, 0x0, 0x1);
        gbc.writeMem(0x773a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd176, gbc.sp());
        EXPECT(0x773c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0152
        gbc.setState(0x2ca5, 0x81e, 0x7720, 0xf2bf, 0x505a, 0x5c4b, 0x1, 0x0);
        gbc.writeMem(0x2ca5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x81e, gbc.sp());
        EXPECT(0x2ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0153
        gbc.setState(0x1a4d, 0xa105, 0x7ea0, 0x2d2f, 0x3060, 0x633e, 0x1, 0x0);
        gbc.writeMem(0x1a4d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa105, gbc.sp());
        EXPECT(0x1a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0154
        gbc.setState(0xc7b2, 0x9238, 0x1010, 0xb0be, 0x4920, 0xbfa5, 0x1, 0x1);
        gbc.writeMem(0xc7b2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9238, gbc.sp());
        EXPECT(0xc7b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b2));
        EXPECT(0xe8, gbc.readMem(0xc7b3));
        // CB E8 0155
        gbc.setState(0x5cf5, 0x73b6, 0xd540, 0xb693, 0xfe4b, 0xa33f, 0x0, 0x0);
        gbc.writeMem(0x5cf5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x73b6, gbc.sp());
        EXPECT(0x5cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0156
        gbc.setState(0xc917, 0x8b76, 0x4d80, 0xb8cc, 0x2a2d, 0x2056, 0x1, 0x1);
        gbc.writeMem(0xc917, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8b76, gbc.sp());
        EXPECT(0xc919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc917));
        EXPECT(0xe8, gbc.readMem(0xc918));
        // CB E8 0157
        gbc.setState(0xaf59, 0x7809, 0xf0, 0xcccb, 0x8c42, 0xa0a, 0x0, 0x1);
        gbc.writeMem(0xaf59, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7809, gbc.sp());
        EXPECT(0xaf5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf59));
        EXPECT(0xe8, gbc.readMem(0xaf5a));
        // CB E8 0158
        gbc.setState(0x6655, 0x44c5, 0x9b20, 0x41f0, 0x77e8, 0x4bf5, 0x1, 0x1);
        gbc.writeMem(0x6655, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x44c5, gbc.sp());
        EXPECT(0x6657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0159
        gbc.setState(0x417b, 0x4f97, 0x33e0, 0xa345, 0x9d6e, 0x5732, 0x1, 0x1);
        gbc.writeMem(0x417b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4f97, gbc.sp());
        EXPECT(0x417d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 015A
        gbc.setState(0x301e, 0xd25d, 0x84e0, 0xd03, 0x506d, 0xb328, 0x0, 0x0);
        gbc.writeMem(0x301e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd25d, gbc.sp());
        EXPECT(0x3020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 015B
        gbc.setState(0xd1b0, 0x418a, 0x8240, 0xeafd, 0x762f, 0xf26b, 0x1, 0x0);
        gbc.writeMem(0xd1b0, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x418a, gbc.sp());
        EXPECT(0xd1b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b0));
        EXPECT(0xe8, gbc.readMem(0xd1b1));
        // CB E8 015C
        gbc.setState(0x3ea0, 0x4120, 0xc8f0, 0x104f, 0xbbe3, 0x7e67, 0x0, 0x0);
        gbc.writeMem(0x3ea0, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4120, gbc.sp());
        EXPECT(0x3ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 015D
        gbc.setState(0x4c60, 0x5f9, 0xc990, 0xfeda, 0x2adb, 0xddfc, 0x1, 0x1);
        gbc.writeMem(0x4c60, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5f9, gbc.sp());
        EXPECT(0x4c62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 015E
        gbc.setState(0x1055, 0x1f58, 0x9a30, 0xc53a, 0xd389, 0x4aee, 0x0, 0x1);
        gbc.writeMem(0x1055, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1f58, gbc.sp());
        EXPECT(0x1057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 015F
        gbc.setState(0x78e5, 0x3c4d, 0xd4f0, 0x5ff9, 0x73d6, 0x8a3a, 0x0, 0x0);
        gbc.writeMem(0x78e5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3c4d, gbc.sp());
        EXPECT(0x78e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0160
        gbc.setState(0xb569, 0x3c4f, 0x4f20, 0x7aca, 0xf354, 0x9b50, 0x0, 0x0);
        gbc.writeMem(0xb569, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3c4f, gbc.sp());
        EXPECT(0xb56b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb569));
        EXPECT(0xe8, gbc.readMem(0xb56a));
        // CB E8 0161
        gbc.setState(0x78e9, 0x82d3, 0x10d0, 0xdf71, 0x8def, 0x6c8d, 0x1, 0x0);
        gbc.writeMem(0x78e9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x82d3, gbc.sp());
        EXPECT(0x78eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0162
        gbc.setState(0x19d1, 0x6ee9, 0x2c0, 0x3bcb, 0xfb2b, 0x662, 0x0, 0x1);
        gbc.writeMem(0x19d1, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6ee9, gbc.sp());
        EXPECT(0x19d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0163
        gbc.setState(0xe236, 0x877f, 0xf810, 0x7f5c, 0x6294, 0xbd9d, 0x1, 0x0);
        gbc.writeMem(0xe236, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x877f, gbc.sp());
        EXPECT(0xe238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe236));
        EXPECT(0xe8, gbc.readMem(0xe237));
        // CB E8 0164
        gbc.setState(0xb571, 0x4d9c, 0x83e0, 0x7504, 0x8c25, 0xccf7, 0x1, 0x1);
        gbc.writeMem(0xb571, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4d9c, gbc.sp());
        EXPECT(0xb573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb571));
        EXPECT(0xe8, gbc.readMem(0xb572));
        // CB E8 0165
        gbc.setState(0x9385, 0xbdf4, 0x34b0, 0x6cca, 0x1656, 0x1f49, 0x1, 0x0);
        gbc.writeMem(0x9385, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbdf4, gbc.sp());
        EXPECT(0x9387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9385));
        EXPECT(0xe8, gbc.readMem(0x9386));
        // CB E8 0166
        gbc.setState(0x464b, 0x2fd, 0x8890, 0x20ae, 0xd0ac, 0x52a0, 0x1, 0x0);
        gbc.writeMem(0x464b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2fd, gbc.sp());
        EXPECT(0x464d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0167
        gbc.setState(0xa49, 0x820, 0xd1e0, 0x75dd, 0x10f7, 0x7957, 0x1, 0x0);
        gbc.writeMem(0xa49, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x820, gbc.sp());
        EXPECT(0xa4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0168
        gbc.setState(0x2d2e, 0x6e1c, 0x7f40, 0x4099, 0x23ae, 0xc537, 0x0, 0x1);
        gbc.writeMem(0x2d2e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6e1c, gbc.sp());
        EXPECT(0x2d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0169
        gbc.setState(0x2c45, 0x9c5c, 0xcc70, 0x8428, 0xa933, 0xec70, 0x0, 0x0);
        gbc.writeMem(0x2c45, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9c5c, gbc.sp());
        EXPECT(0x2c47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 016A
        gbc.setState(0xb1c, 0xb958, 0x2d80, 0xb5c5, 0xcaa3, 0xaaf, 0x0, 0x1);
        gbc.writeMem(0xb1c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb958, gbc.sp());
        EXPECT(0xb1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 016B
        gbc.setState(0x7d99, 0xcbfe, 0x4b10, 0x7acd, 0xbe02, 0x7b88, 0x1, 0x0);
        gbc.writeMem(0x7d99, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xcbfe, gbc.sp());
        EXPECT(0x7d9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 016C
        gbc.setState(0xc607, 0x3f63, 0x5720, 0xb9a2, 0xdcff, 0x42fe, 0x0, 0x1);
        gbc.writeMem(0xc607, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3f63, gbc.sp());
        EXPECT(0xc609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc607));
        EXPECT(0xe8, gbc.readMem(0xc608));
        // CB E8 016D
        gbc.setState(0x8c06, 0x1e50, 0x6620, 0x708f, 0x8af1, 0x1572, 0x0, 0x0);
        gbc.writeMem(0x8c06, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1e50, gbc.sp());
        EXPECT(0x8c08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c06));
        EXPECT(0xe8, gbc.readMem(0x8c07));
        // CB E8 016E
        gbc.setState(0xc820, 0xa345, 0x55c0, 0x751f, 0x8ed9, 0xa8d, 0x0, 0x0);
        gbc.writeMem(0xc820, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa345, gbc.sp());
        EXPECT(0xc822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc820));
        EXPECT(0xe8, gbc.readMem(0xc821));
        // CB E8 016F
        gbc.setState(0x97f9, 0x3db9, 0xa050, 0x9256, 0x5a77, 0x8435, 0x0, 0x1);
        gbc.writeMem(0x97f9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3db9, gbc.sp());
        EXPECT(0x97fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f9));
        EXPECT(0xe8, gbc.readMem(0x97fa));
        // CB E8 0170
        gbc.setState(0x2eea, 0x4041, 0x2a60, 0x761, 0xda51, 0x4cbb, 0x1, 0x0);
        gbc.writeMem(0x2eea, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4041, gbc.sp());
        EXPECT(0x2eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0172
        gbc.setState(0x991e, 0x9ca1, 0x5c30, 0xd49f, 0xad32, 0x874e, 0x0, 0x1);
        gbc.writeMem(0x991e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9ca1, gbc.sp());
        EXPECT(0x9920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x991e));
        EXPECT(0xe8, gbc.readMem(0x991f));
        // CB E8 0173
        gbc.setState(0xae0f, 0x16f5, 0x75d0, 0x5703, 0x2efc, 0xfd51, 0x1, 0x1);
        gbc.writeMem(0xae0f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x16f5, gbc.sp());
        EXPECT(0xae11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae0f));
        EXPECT(0xe8, gbc.readMem(0xae10));
        // CB E8 0174
        gbc.setState(0x7af5, 0xc3d8, 0x4aa0, 0xe9e5, 0x2cdd, 0x944a, 0x1, 0x1);
        gbc.writeMem(0x7af5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc3d8, gbc.sp());
        EXPECT(0x7af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0175
        gbc.setState(0x2bde, 0x8403, 0xc240, 0x56ec, 0xb7ea, 0xb64, 0x1, 0x1);
        gbc.writeMem(0x2bde, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8403, gbc.sp());
        EXPECT(0x2be0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0176
        gbc.setState(0x1786, 0xf80c, 0x9730, 0x1d2f, 0x1383, 0xeb4b, 0x1, 0x1);
        gbc.writeMem(0x1786, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf80c, gbc.sp());
        EXPECT(0x1788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0177
        gbc.setState(0x569a, 0x253f, 0x2de0, 0xe018, 0x38b6, 0x41a7, 0x1, 0x1);
        gbc.writeMem(0x569a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x253f, gbc.sp());
        EXPECT(0x569c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0178
        gbc.setState(0x55c3, 0xa1b, 0xf500, 0x4c13, 0xe9a3, 0x521, 0x1, 0x0);
        gbc.writeMem(0x55c3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa1b, gbc.sp());
        EXPECT(0x55c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0179
        gbc.setState(0xc543, 0x4906, 0x1720, 0x3c2d, 0xfe00, 0xb999, 0x1, 0x1);
        gbc.writeMem(0xc543, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4906, gbc.sp());
        EXPECT(0xc545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc543));
        EXPECT(0xe8, gbc.readMem(0xc544));
        // CB E8 017A
        gbc.setState(0x7368, 0x3807, 0xc650, 0xc95f, 0x17be, 0x8f5d, 0x0, 0x0);
        gbc.writeMem(0x7368, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3807, gbc.sp());
        EXPECT(0x736a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 017B
        gbc.setState(0xa824, 0xdfe9, 0xe230, 0x793, 0x5d73, 0xbb74, 0x0, 0x0);
        gbc.writeMem(0xa824, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xdfe9, gbc.sp());
        EXPECT(0xa826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa824));
        EXPECT(0xe8, gbc.readMem(0xa825));
        // CB E8 017D
        gbc.setState(0x4df7, 0x4551, 0xc880, 0x54a4, 0xbcef, 0x2108, 0x1, 0x1);
        gbc.writeMem(0x4df7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4551, gbc.sp());
        EXPECT(0x4df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 017E
        gbc.setState(0x59e2, 0xc0ec, 0xfda0, 0x9427, 0x45e3, 0x785d, 0x0, 0x0);
        gbc.writeMem(0x59e2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc0ec, gbc.sp());
        EXPECT(0x59e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 017F
        gbc.setState(0xbfb4, 0x7239, 0xb750, 0xadca, 0x71d0, 0xfadf, 0x0, 0x0);
        gbc.writeMem(0xbfb4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7239, gbc.sp());
        EXPECT(0xbfb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfb4));
        EXPECT(0xe8, gbc.readMem(0xbfb5));
        // CB E8 0180
        gbc.setState(0xe85, 0x3f6e, 0x6bb0, 0xa69a, 0xc44d, 0xdbd8, 0x1, 0x0);
        gbc.writeMem(0xe85, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3f6e, gbc.sp());
        EXPECT(0xe87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0182
        gbc.setState(0xba4, 0x4c5, 0xff00, 0xa73e, 0xf819, 0x8903, 0x0, 0x1);
        gbc.writeMem(0xba4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4c5, gbc.sp());
        EXPECT(0xba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0183
        gbc.setState(0x3844, 0x6c05, 0x27e0, 0xeed, 0x3aad, 0x6d10, 0x0, 0x1);
        gbc.writeMem(0x3844, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6c05, gbc.sp());
        EXPECT(0x3846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0184
        gbc.setState(0x9ded, 0x3280, 0xe090, 0x52c0, 0x3241, 0xf72, 0x1, 0x0);
        gbc.writeMem(0x9ded, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3280, gbc.sp());
        EXPECT(0x9def, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ded));
        EXPECT(0xe8, gbc.readMem(0x9dee));
        // CB E8 0185
        gbc.setState(0x95da, 0x8ccb, 0xe4b0, 0xb443, 0x76b3, 0xe769, 0x0, 0x0);
        gbc.writeMem(0x95da, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8ccb, gbc.sp());
        EXPECT(0x95dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95da));
        EXPECT(0xe8, gbc.readMem(0x95db));
        // CB E8 0186
        gbc.setState(0xce4e, 0x36bf, 0x52d0, 0x9805, 0xdcc5, 0x6a03, 0x0, 0x0);
        gbc.writeMem(0xce4e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x36bf, gbc.sp());
        EXPECT(0xce50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce4e));
        EXPECT(0xe8, gbc.readMem(0xce4f));
        // CB E8 0187
        gbc.setState(0xadb9, 0x8111, 0xa8e0, 0x2097, 0x562e, 0x763d, 0x1, 0x0);
        gbc.writeMem(0xadb9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8111, gbc.sp());
        EXPECT(0xadbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadb9));
        EXPECT(0xe8, gbc.readMem(0xadba));
        // CB E8 0188
        gbc.setState(0x9903, 0xf69a, 0xfc20, 0xfb49, 0xd423, 0x1f58, 0x1, 0x1);
        gbc.writeMem(0x9903, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf69a, gbc.sp());
        EXPECT(0x9905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9903));
        EXPECT(0xe8, gbc.readMem(0x9904));
        // CB E8 0189
        gbc.setState(0x1ad0, 0x1f83, 0x3e60, 0xb903, 0x8ac3, 0xc5c5, 0x0, 0x0);
        gbc.writeMem(0x1ad0, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1f83, gbc.sp());
        EXPECT(0x1ad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 018A
        gbc.setState(0xac78, 0xa7d, 0xe770, 0xd2eb, 0x3280, 0xb015, 0x1, 0x1);
        gbc.writeMem(0xac78, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa7d, gbc.sp());
        EXPECT(0xac7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac78));
        EXPECT(0xe8, gbc.readMem(0xac79));
        // CB E8 018B
        gbc.setState(0xda8, 0x228d, 0x3570, 0x713a, 0x2a5b, 0xf7ce, 0x1, 0x0);
        gbc.writeMem(0xda8, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x228d, gbc.sp());
        EXPECT(0xdaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 018C
        gbc.setState(0x84c7, 0x9759, 0x3900, 0x7a67, 0xdb8f, 0xd578, 0x0, 0x0);
        gbc.writeMem(0x84c7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9759, gbc.sp());
        EXPECT(0x84c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c7));
        EXPECT(0xe8, gbc.readMem(0x84c8));
        // CB E8 018D
        gbc.setState(0x5339, 0xbb60, 0x8d10, 0x58a1, 0x9ae, 0xebf7, 0x1, 0x0);
        gbc.writeMem(0x5339, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbb60, gbc.sp());
        EXPECT(0x533b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 018E
        gbc.setState(0xa7bd, 0x85ba, 0x91c0, 0x340f, 0x9895, 0xd8f8, 0x0, 0x0);
        gbc.writeMem(0xa7bd, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x85ba, gbc.sp());
        EXPECT(0xa7bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7bd));
        EXPECT(0xe8, gbc.readMem(0xa7be));
        // CB E8 018F
        gbc.setState(0xcbbf, 0xd9f5, 0x7a40, 0x4680, 0x25e, 0x3ac, 0x0, 0x0);
        gbc.writeMem(0xcbbf, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd9f5, gbc.sp());
        EXPECT(0xcbc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbbf));
        EXPECT(0xe8, gbc.readMem(0xcbc0));
        // CB E8 0190
        gbc.setState(0xd8c2, 0x97eb, 0x6c50, 0x6210, 0xc05a, 0x2f8b, 0x1, 0x1);
        gbc.writeMem(0xd8c2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x97eb, gbc.sp());
        EXPECT(0xd8c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8c2));
        EXPECT(0xe8, gbc.readMem(0xd8c3));
        // CB E8 0192
        gbc.setState(0xe6fd, 0xd158, 0xe0c0, 0x8c24, 0x6a2e, 0x64fc, 0x1, 0x1);
        gbc.writeMem(0xe6fd, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd158, gbc.sp());
        EXPECT(0xe6ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6fd));
        EXPECT(0xe8, gbc.readMem(0xe6fe));
        // CB E8 0193
        gbc.setState(0x6835, 0x8b00, 0x6070, 0x5343, 0x7be6, 0xcd5a, 0x1, 0x0);
        gbc.writeMem(0x6835, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8b00, gbc.sp());
        EXPECT(0x6837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0194
        gbc.setState(0xcb2a, 0x28ea, 0x12a0, 0xc374, 0x605, 0x1245, 0x0, 0x1);
        gbc.writeMem(0xcb2a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x28ea, gbc.sp());
        EXPECT(0xcb2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2a));
        EXPECT(0xe8, gbc.readMem(0xcb2b));
        // CB E8 0195
        gbc.setState(0xb73b, 0x7bde, 0xb8e0, 0xedee, 0xa838, 0xb1c9, 0x1, 0x0);
        gbc.writeMem(0xb73b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7bde, gbc.sp());
        EXPECT(0xb73d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb73b));
        EXPECT(0xe8, gbc.readMem(0xb73c));
        // CB E8 0196
        gbc.setState(0x83e6, 0x77b6, 0xd7b0, 0x5806, 0x2e5e, 0x2334, 0x1, 0x1);
        gbc.writeMem(0x83e6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x77b6, gbc.sp());
        EXPECT(0x83e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e6));
        EXPECT(0xe8, gbc.readMem(0x83e7));
        // CB E8 0197
        gbc.setState(0x8a4e, 0x46ce, 0xdd20, 0xf145, 0xf56d, 0xab32, 0x1, 0x0);
        gbc.writeMem(0x8a4e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x46ce, gbc.sp());
        EXPECT(0x8a50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a4e));
        EXPECT(0xe8, gbc.readMem(0x8a4f));
        // CB E8 0198
        gbc.setState(0x588b, 0x307b, 0x2450, 0x2896, 0xcb41, 0xdcc1, 0x1, 0x0);
        gbc.writeMem(0x588b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x307b, gbc.sp());
        EXPECT(0x588d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0199
        gbc.setState(0xa8, 0x405c, 0x8b10, 0x5fbc, 0xd4fb, 0xb7df, 0x1, 0x1);
        gbc.writeMem(0xa8, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x405c, gbc.sp());
        EXPECT(0xaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 019A
        gbc.setState(0xa1be, 0xe8d5, 0xd530, 0x9145, 0x9579, 0xe34d, 0x1, 0x1);
        gbc.writeMem(0xa1be, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe8d5, gbc.sp());
        EXPECT(0xa1c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1be));
        EXPECT(0xe8, gbc.readMem(0xa1bf));
        // CB E8 019B
        gbc.setState(0xe58, 0x4db1, 0x6970, 0xe972, 0x847f, 0x4a8, 0x0, 0x0);
        gbc.writeMem(0xe58, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4db1, gbc.sp());
        EXPECT(0xe5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 019C
        gbc.setState(0xda9, 0x5ab3, 0x15a0, 0x3e7a, 0x2d0d, 0xd0a9, 0x0, 0x1);
        gbc.writeMem(0xda9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5ab3, gbc.sp());
        EXPECT(0xdab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 019D
        gbc.setState(0xa4f6, 0x63dd, 0x4e10, 0x6de8, 0xa8e5, 0x1aa, 0x0, 0x0);
        gbc.writeMem(0xa4f6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x63dd, gbc.sp());
        EXPECT(0xa4f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f6));
        EXPECT(0xe8, gbc.readMem(0xa4f7));
        // CB E8 019E
        gbc.setState(0xdb10, 0xc408, 0x2d70, 0xa3ee, 0xc9c5, 0xd044, 0x0, 0x0);
        gbc.writeMem(0xdb10, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc408, gbc.sp());
        EXPECT(0xdb12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb10));
        EXPECT(0xe8, gbc.readMem(0xdb11));
        // CB E8 019F
        gbc.setState(0x8d30, 0xda60, 0xe080, 0x323f, 0x9a63, 0x2d0a, 0x0, 0x0);
        gbc.writeMem(0x8d30, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xda60, gbc.sp());
        EXPECT(0x8d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d30));
        EXPECT(0xe8, gbc.readMem(0x8d31));
        // CB E8 01A0
        gbc.setState(0x2592, 0x10ee, 0x4da0, 0x580c, 0xe224, 0xf6d8, 0x0, 0x1);
        gbc.writeMem(0x2592, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x10ee, gbc.sp());
        EXPECT(0x2594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01A1
        gbc.setState(0x4001, 0xfec1, 0x4e30, 0xc788, 0x60b, 0x686c, 0x1, 0x0);
        gbc.writeMem(0x4001, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfec1, gbc.sp());
        EXPECT(0x4003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 01A2
        gbc.setState(0xc9f5, 0xf242, 0xabf0, 0xff9e, 0xb4f0, 0x2b50, 0x1, 0x1);
        gbc.writeMem(0xc9f5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf242, gbc.sp());
        EXPECT(0xc9f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f5));
        EXPECT(0xe8, gbc.readMem(0xc9f6));
        // CB E8 01A3
        gbc.setState(0x363b, 0x4adb, 0x6a00, 0xe00b, 0x21c0, 0x65bf, 0x1, 0x1);
        gbc.writeMem(0x363b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4adb, gbc.sp());
        EXPECT(0x363d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01A4
        gbc.setState(0xcd10, 0x77a6, 0x53b0, 0xd5f6, 0x6cc8, 0xacbc, 0x0, 0x0);
        gbc.writeMem(0xcd10, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x77a6, gbc.sp());
        EXPECT(0xcd12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd10));
        EXPECT(0xe8, gbc.readMem(0xcd11));
        // CB E8 01A6
        gbc.setState(0x948c, 0x314, 0x1510, 0xfde4, 0x2a4e, 0x9898, 0x1, 0x0);
        gbc.writeMem(0x948c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x314, gbc.sp());
        EXPECT(0x948e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x948c));
        EXPECT(0xe8, gbc.readMem(0x948d));
        // CB E8 01A7
        gbc.setState(0x6dd3, 0xbb7e, 0xcaf0, 0x18f0, 0x7b18, 0xca38, 0x0, 0x1);
        gbc.writeMem(0x6dd3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbb7e, gbc.sp());
        EXPECT(0x6dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 01A8
        gbc.setState(0xa027, 0x6485, 0x67a0, 0xc47d, 0xe6a4, 0x3647, 0x0, 0x1);
        gbc.writeMem(0xa027, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6485, gbc.sp());
        EXPECT(0xa029, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa027));
        EXPECT(0xe8, gbc.readMem(0xa028));
        // CB E8 01A9
        gbc.setState(0x8df1, 0x44b9, 0x2810, 0xced7, 0x97e5, 0x6269, 0x1, 0x0);
        gbc.writeMem(0x8df1, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x44b9, gbc.sp());
        EXPECT(0x8df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df1));
        EXPECT(0xe8, gbc.readMem(0x8df2));
        // CB E8 01AA
        gbc.setState(0x415c, 0x6aa0, 0xd630, 0xd9b3, 0xc6b1, 0x7ef5, 0x1, 0x0);
        gbc.writeMem(0x415c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6aa0, gbc.sp());
        EXPECT(0x415e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 01AB
        gbc.setState(0xc565, 0x10c, 0xa680, 0xa475, 0x56dc, 0xfd84, 0x1, 0x1);
        gbc.writeMem(0xc565, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x10c, gbc.sp());
        EXPECT(0xc567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc565));
        EXPECT(0xe8, gbc.readMem(0xc566));
        // CB E8 01AC
        gbc.setState(0x2273, 0xba13, 0x1cd0, 0xb432, 0x96d0, 0x5033, 0x1, 0x0);
        gbc.writeMem(0x2273, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xba13, gbc.sp());
        EXPECT(0x2275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 01AD
        gbc.setState(0xcb86, 0xc3c7, 0x23d0, 0xeb51, 0x55a7, 0xf142, 0x0, 0x0);
        gbc.writeMem(0xcb86, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc3c7, gbc.sp());
        EXPECT(0xcb88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb86));
        EXPECT(0xe8, gbc.readMem(0xcb87));
        // CB E8 01AE
        gbc.setState(0xcaf3, 0xd456, 0xd9c0, 0x3a7e, 0x9ae2, 0xce6b, 0x0, 0x0);
        gbc.writeMem(0xcaf3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd456, gbc.sp());
        EXPECT(0xcaf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf3));
        EXPECT(0xe8, gbc.readMem(0xcaf4));
        // CB E8 01AF
        gbc.setState(0x6840, 0xca1e, 0x3f00, 0x5283, 0x13ad, 0x94ef, 0x1, 0x1);
        gbc.writeMem(0x6840, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xca1e, gbc.sp());
        EXPECT(0x6842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01B0
        gbc.setState(0x1500, 0x66f6, 0xff40, 0xf0e7, 0x54f5, 0xf336, 0x0, 0x0);
        gbc.writeMem(0x1500, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x66f6, gbc.sp());
        EXPECT(0x1502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01B1
        gbc.setState(0xe7e, 0x3980, 0x6010, 0x77bc, 0x3d94, 0x5e83, 0x1, 0x1);
        gbc.writeMem(0xe7e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3980, gbc.sp());
        EXPECT(0xe80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 01B2
        gbc.setState(0x8783, 0x554f, 0x1070, 0x2c88, 0xe326, 0xb491, 0x1, 0x1);
        gbc.writeMem(0x8783, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x554f, gbc.sp());
        EXPECT(0x8785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8783));
        EXPECT(0xe8, gbc.readMem(0x8784));
        // CB E8 01B3
        gbc.setState(0x21a4, 0x46f8, 0x2f40, 0x6204, 0xb72, 0xd845, 0x1, 0x0);
        gbc.writeMem(0x21a4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x46f8, gbc.sp());
        EXPECT(0x21a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01B4
        gbc.setState(0x6de5, 0xaa8c, 0x2a50, 0xbb6e, 0x8b97, 0x6dbf, 0x1, 0x1);
        gbc.writeMem(0x6de5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xaa8c, gbc.sp());
        EXPECT(0x6de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 01B5
        gbc.setState(0x1b4f, 0xb1de, 0x3b20, 0x7fe6, 0x6059, 0x795a, 0x0, 0x0);
        gbc.writeMem(0x1b4f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb1de, gbc.sp());
        EXPECT(0x1b51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01B6
        gbc.setState(0xc595, 0xbba2, 0xdd10, 0x5e5d, 0x75f6, 0x8080, 0x1, 0x1);
        gbc.writeMem(0xc595, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbba2, gbc.sp());
        EXPECT(0xc597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc595));
        EXPECT(0xe8, gbc.readMem(0xc596));
        // CB E8 01B7
        gbc.setState(0x2290, 0x8dc7, 0xd8e0, 0x3d7a, 0xc1b9, 0xa1ed, 0x0, 0x1);
        gbc.writeMem(0x2290, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8dc7, gbc.sp());
        EXPECT(0x2292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01B8
        gbc.setState(0xdf28, 0xae1f, 0x1250, 0x392f, 0xe61d, 0x6cc0, 0x1, 0x1);
        gbc.writeMem(0xdf28, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xae1f, gbc.sp());
        EXPECT(0xdf2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf28));
        EXPECT(0xe8, gbc.readMem(0xdf29));
        // CB E8 01B9
        gbc.setState(0xab17, 0x111f, 0x4750, 0xde28, 0x5bc0, 0xc64b, 0x1, 0x1);
        gbc.writeMem(0xab17, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x111f, gbc.sp());
        EXPECT(0xab19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab17));
        EXPECT(0xe8, gbc.readMem(0xab18));
        // CB E8 01BA
        gbc.setState(0x8358, 0x9bed, 0x70d0, 0x70b7, 0x264d, 0xeaae, 0x0, 0x1);
        gbc.writeMem(0x8358, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9bed, gbc.sp());
        EXPECT(0x835a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8358));
        EXPECT(0xe8, gbc.readMem(0x8359));
        // CB E8 01BB
        gbc.setState(0xa979, 0x6121, 0x3f10, 0x4fc5, 0x471a, 0x2cb2, 0x1, 0x0);
        gbc.writeMem(0xa979, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6121, gbc.sp());
        EXPECT(0xa97b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa979));
        EXPECT(0xe8, gbc.readMem(0xa97a));
        // CB E8 01BC
        gbc.setState(0xa95d, 0xd066, 0xf040, 0x4be3, 0xab94, 0x8a65, 0x1, 0x1);
        gbc.writeMem(0xa95d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd066, gbc.sp());
        EXPECT(0xa95f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa95d));
        EXPECT(0xe8, gbc.readMem(0xa95e));
        // CB E8 01BD
        gbc.setState(0xe764, 0xa61d, 0x5490, 0xcc06, 0x887d, 0x167a, 0x0, 0x1);
        gbc.writeMem(0xe764, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa61d, gbc.sp());
        EXPECT(0xe766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe764));
        EXPECT(0xe8, gbc.readMem(0xe765));
        // CB E8 01BE
        gbc.setState(0x3b50, 0x72ce, 0x38b0, 0xe87f, 0xa552, 0x79d7, 0x0, 0x0);
        gbc.writeMem(0x3b50, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x72ce, gbc.sp());
        EXPECT(0x3b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 01BF
        gbc.setState(0xcabd, 0xa014, 0x3c10, 0x5338, 0x63ff, 0x7191, 0x0, 0x1);
        gbc.writeMem(0xcabd, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa014, gbc.sp());
        EXPECT(0xcabf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcabd));
        EXPECT(0xe8, gbc.readMem(0xcabe));
        // CB E8 01C0
        gbc.setState(0x2478, 0x40a1, 0xfc0, 0x3190, 0x4b26, 0xe7fa, 0x0, 0x0);
        gbc.writeMem(0x2478, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x40a1, gbc.sp());
        EXPECT(0x247a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01C1
        gbc.setState(0xc529, 0x28a6, 0xc560, 0x125, 0x1981, 0xf533, 0x1, 0x1);
        gbc.writeMem(0xc529, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x28a6, gbc.sp());
        EXPECT(0xc52b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc529));
        EXPECT(0xe8, gbc.readMem(0xc52a));
        // CB E8 01C2
        gbc.setState(0x12f, 0x447e, 0x710, 0x5cf1, 0x89b4, 0xbc98, 0x0, 0x1);
        gbc.writeMem(0x12f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x447e, gbc.sp());
        EXPECT(0x131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 01C3
        gbc.setState(0xdf9b, 0xb3b7, 0xc740, 0x419a, 0x116d, 0x33fc, 0x1, 0x0);
        gbc.writeMem(0xdf9b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb3b7, gbc.sp());
        EXPECT(0xdf9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf9b));
        EXPECT(0xe8, gbc.readMem(0xdf9c));
        // CB E8 01C4
        gbc.setState(0x629b, 0xefa1, 0xef40, 0x8129, 0x86f4, 0xe537, 0x0, 0x0);
        gbc.writeMem(0x629b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xefa1, gbc.sp());
        EXPECT(0x629d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01C5
        gbc.setState(0xd7fa, 0x13f7, 0x9b60, 0xe020, 0xa783, 0xdc73, 0x1, 0x0);
        gbc.writeMem(0xd7fa, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x13f7, gbc.sp());
        EXPECT(0xd7fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7fa));
        EXPECT(0xe8, gbc.readMem(0xd7fb));
        // CB E8 01C6
        gbc.setState(0xa253, 0x9c74, 0xb1b0, 0xfa3b, 0xd734, 0xee97, 0x1, 0x1);
        gbc.writeMem(0xa253, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9c74, gbc.sp());
        EXPECT(0xa255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa253));
        EXPECT(0xe8, gbc.readMem(0xa254));
        // CB E8 01C7
        gbc.setState(0x5fc, 0x8f0, 0x2c30, 0xef50, 0x7c17, 0xf2e0, 0x1, 0x1);
        gbc.writeMem(0x5fc, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8f0, gbc.sp());
        EXPECT(0x5fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 01C8
        gbc.setState(0xde1f, 0x3845, 0xf3b0, 0x29e9, 0x78f9, 0x88f, 0x1, 0x0);
        gbc.writeMem(0xde1f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3845, gbc.sp());
        EXPECT(0xde21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde1f));
        EXPECT(0xe8, gbc.readMem(0xde20));
        // CB E8 01CA
        gbc.setState(0xbc65, 0xbfa8, 0xcbd0, 0x1198, 0x4a9d, 0x4303, 0x1, 0x0);
        gbc.writeMem(0xbc65, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbfa8, gbc.sp());
        EXPECT(0xbc67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc65));
        EXPECT(0xe8, gbc.readMem(0xbc66));
        // CB E8 01CB
        gbc.setState(0xcd70, 0xc6ba, 0xd1d0, 0xc476, 0xca4e, 0x687, 0x0, 0x1);
        gbc.writeMem(0xcd70, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc6ba, gbc.sp());
        EXPECT(0xcd72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd70));
        EXPECT(0xe8, gbc.readMem(0xcd71));
        // CB E8 01CC
        gbc.setState(0x9915, 0x2e29, 0xd800, 0xd495, 0x82cd, 0x3675, 0x0, 0x1);
        gbc.writeMem(0x9915, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2e29, gbc.sp());
        EXPECT(0x9917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9915));
        EXPECT(0xe8, gbc.readMem(0x9916));
        // CB E8 01CD
        gbc.setState(0xa59b, 0xe66a, 0xa620, 0x13e, 0x5cc6, 0xbcb3, 0x0, 0x0);
        gbc.writeMem(0xa59b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe66a, gbc.sp());
        EXPECT(0xa59d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa59b));
        EXPECT(0xe8, gbc.readMem(0xa59c));
        // CB E8 01CE
        gbc.setState(0x7d4e, 0x4500, 0x5590, 0xc37b, 0x5d37, 0xed03, 0x1, 0x0);
        gbc.writeMem(0x7d4e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4500, gbc.sp());
        EXPECT(0x7d50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 01CF
        gbc.setState(0xbf04, 0xd0b0, 0x8240, 0x3e8b, 0x8b6e, 0x6a4a, 0x1, 0x1);
        gbc.writeMem(0xbf04, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd0b0, gbc.sp());
        EXPECT(0xbf06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf04));
        EXPECT(0xe8, gbc.readMem(0xbf05));
        // CB E8 01D0
        gbc.setState(0x9d80, 0x6ad2, 0x740, 0x597a, 0x60d4, 0xf9df, 0x1, 0x1);
        gbc.writeMem(0x9d80, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6ad2, gbc.sp());
        EXPECT(0x9d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d80));
        EXPECT(0xe8, gbc.readMem(0x9d81));
        // CB E8 01D1
        gbc.setState(0x6e0d, 0xcf9b, 0x6e70, 0x503f, 0x6268, 0x978, 0x1, 0x1);
        gbc.writeMem(0x6e0d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcf9b, gbc.sp());
        EXPECT(0x6e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 01D2
        gbc.setState(0x75ee, 0x626b, 0xd1e0, 0x2d42, 0xc4c0, 0xb1f9, 0x1, 0x0);
        gbc.writeMem(0x75ee, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x626b, gbc.sp());
        EXPECT(0x75f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01D3
        gbc.setState(0xa59a, 0x94f4, 0xf660, 0x4efe, 0xe4b9, 0x22be, 0x0, 0x0);
        gbc.writeMem(0xa59a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x94f4, gbc.sp());
        EXPECT(0xa59c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa59a));
        EXPECT(0xe8, gbc.readMem(0xa59b));
        // CB E8 01D4
        gbc.setState(0xed65, 0x208a, 0x9f0, 0x2170, 0xa21, 0xd753, 0x0, 0x1);
        gbc.writeMem(0xed65, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x208a, gbc.sp());
        EXPECT(0xed67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed65));
        EXPECT(0xe8, gbc.readMem(0xed66));
        // CB E8 01D5
        gbc.setState(0xe274, 0x9419, 0x4b50, 0x8ca8, 0xa292, 0xd084, 0x1, 0x0);
        gbc.writeMem(0xe274, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9419, gbc.sp());
        EXPECT(0xe276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe274));
        EXPECT(0xe8, gbc.readMem(0xe275));
        // CB E8 01D6
        gbc.setState(0xf15, 0x5e6d, 0xdcf0, 0xabe0, 0xce10, 0x21e5, 0x1, 0x1);
        gbc.writeMem(0xf15, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5e6d, gbc.sp());
        EXPECT(0xf17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 01D7
        gbc.setState(0x6bd0, 0xebfb, 0x59e0, 0xd12c, 0xb732, 0x5a22, 0x1, 0x1);
        gbc.writeMem(0x6bd0, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xebfb, gbc.sp());
        EXPECT(0x6bd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01D8
        gbc.setState(0x180, 0x4b8e, 0xdd20, 0xef03, 0xa59d, 0x4e7c, 0x0, 0x0);
        gbc.writeMem(0x180, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4b8e, gbc.sp());
        EXPECT(0x182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01D9
        gbc.setState(0xefb6, 0x9be4, 0x7440, 0x81f7, 0x4088, 0x1b80, 0x0, 0x1);
        gbc.writeMem(0xefb6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9be4, gbc.sp());
        EXPECT(0xefb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb6));
        EXPECT(0xe8, gbc.readMem(0xefb7));
        // CB E8 01DA
        gbc.setState(0x465c, 0x4b90, 0x79f0, 0x6ede, 0x71a2, 0x8fce, 0x1, 0x1);
        gbc.writeMem(0x465c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4b90, gbc.sp());
        EXPECT(0x465e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 01DB
        gbc.setState(0xcce, 0x805c, 0x8b40, 0xd0c1, 0x1f87, 0xa9e2, 0x0, 0x1);
        gbc.writeMem(0xcce, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x805c, gbc.sp());
        EXPECT(0xcd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01DC
        gbc.setState(0x9709, 0xe10c, 0xe790, 0xc21d, 0xad45, 0xdb30, 0x1, 0x0);
        gbc.writeMem(0x9709, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe10c, gbc.sp());
        EXPECT(0x970b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9709));
        EXPECT(0xe8, gbc.readMem(0x970a));
        // CB E8 01DD
        gbc.setState(0xa662, 0xd5db, 0x5680, 0x4746, 0x11bc, 0x1b13, 0x1, 0x0);
        gbc.writeMem(0xa662, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd5db, gbc.sp());
        EXPECT(0xa664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa662));
        EXPECT(0xe8, gbc.readMem(0xa663));
        // CB E8 01DE
        gbc.setState(0xe885, 0x4ce0, 0xe300, 0xb6db, 0xebc9, 0x11c2, 0x0, 0x1);
        gbc.writeMem(0xe885, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4ce0, gbc.sp());
        EXPECT(0xe887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe885));
        EXPECT(0xe8, gbc.readMem(0xe886));
        // CB E8 01DF
        gbc.setState(0xe448, 0xc53f, 0x1d50, 0x7d44, 0x304, 0xa16, 0x0, 0x0);
        gbc.writeMem(0xe448, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc53f, gbc.sp());
        EXPECT(0xe44a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe448));
        EXPECT(0xe8, gbc.readMem(0xe449));
        // CB E8 01E0
        gbc.setState(0x53d0, 0xd275, 0x5c60, 0xf6bc, 0xbef7, 0x6354, 0x0, 0x0);
        gbc.writeMem(0x53d0, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd275, gbc.sp());
        EXPECT(0x53d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01E1
        gbc.setState(0xd325, 0x6628, 0x2f0, 0x88ee, 0x19ef, 0x5ac8, 0x1, 0x0);
        gbc.writeMem(0xd325, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6628, gbc.sp());
        EXPECT(0xd327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd325));
        EXPECT(0xe8, gbc.readMem(0xd326));
        // CB E8 01E2
        gbc.setState(0x623e, 0xd08, 0xd5a0, 0xd810, 0x33fe, 0x9170, 0x1, 0x1);
        gbc.writeMem(0x623e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd08, gbc.sp());
        EXPECT(0x6240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01E3
        gbc.setState(0x7d41, 0xb448, 0x9240, 0x766c, 0xaca2, 0x8ddd, 0x0, 0x0);
        gbc.writeMem(0x7d41, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb448, gbc.sp());
        EXPECT(0x7d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01E4
        gbc.setState(0x6560, 0xe4c7, 0xb570, 0x9ac4, 0xaf08, 0x109b, 0x0, 0x0);
        gbc.writeMem(0x6560, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe4c7, gbc.sp());
        EXPECT(0x6562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 01E6
        gbc.setState(0x96c2, 0x1804, 0x50b0, 0x1339, 0xaf17, 0x3297, 0x1, 0x0);
        gbc.writeMem(0x96c2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1804, gbc.sp());
        EXPECT(0x96c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c2));
        EXPECT(0xe8, gbc.readMem(0x96c3));
        // CB E8 01E8
        gbc.setState(0x4231, 0x26f9, 0x50f0, 0xb4a7, 0xb44b, 0x81e4, 0x0, 0x1);
        gbc.writeMem(0x4231, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x26f9, gbc.sp());
        EXPECT(0x4233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 01E9
        gbc.setState(0xa7bb, 0xf284, 0x11d0, 0x18f7, 0x4938, 0x366f, 0x1, 0x0);
        gbc.writeMem(0xa7bb, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf284, gbc.sp());
        EXPECT(0xa7bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7bb));
        EXPECT(0xe8, gbc.readMem(0xa7bc));
        // CB E8 01EA
        gbc.setState(0x5389, 0xf4a0, 0xf3f0, 0x75a8, 0xaa46, 0x434e, 0x0, 0x0);
        gbc.writeMem(0x5389, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf4a0, gbc.sp());
        EXPECT(0x538b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 01EB
        gbc.setState(0x564b, 0x1b5a, 0x49d0, 0x25f7, 0x8807, 0xd635, 0x0, 0x1);
        gbc.writeMem(0x564b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1b5a, gbc.sp());
        EXPECT(0x564d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 01EC
        gbc.setState(0xd196, 0xbca0, 0xb850, 0x879c, 0xb59f, 0xac09, 0x0, 0x1);
        gbc.writeMem(0xd196, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbca0, gbc.sp());
        EXPECT(0xd198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd196));
        EXPECT(0xe8, gbc.readMem(0xd197));
        // CB E8 01ED
        gbc.setState(0x6292, 0x2133, 0xd7d0, 0xc220, 0xfcea, 0x6ee9, 0x0, 0x1);
        gbc.writeMem(0x6292, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2133, gbc.sp());
        EXPECT(0x6294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 01EE
        gbc.setState(0x5f46, 0x8351, 0xe4a0, 0x52da, 0xc3d1, 0xfa89, 0x0, 0x1);
        gbc.writeMem(0x5f46, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8351, gbc.sp());
        EXPECT(0x5f48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01EF
        gbc.setState(0xb0cf, 0xcf49, 0x700, 0x2d0, 0x8f2e, 0xa782, 0x0, 0x1);
        gbc.writeMem(0xb0cf, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcf49, gbc.sp());
        EXPECT(0xb0d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0cf));
        EXPECT(0xe8, gbc.readMem(0xb0d0));
        // CB E8 01F0
        gbc.setState(0x2e26, 0xa7a1, 0x4830, 0x429b, 0xc3f4, 0xf831, 0x0, 0x1);
        gbc.writeMem(0x2e26, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa7a1, gbc.sp());
        EXPECT(0x2e28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 01F1
        gbc.setState(0x6b42, 0x1447, 0xd9c0, 0x4f5, 0x9a62, 0x6ca3, 0x1, 0x0);
        gbc.writeMem(0x6b42, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1447, gbc.sp());
        EXPECT(0x6b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01F2
        gbc.setState(0x854d, 0xbfba, 0x7ed0, 0x38f6, 0xe891, 0x4ddc, 0x1, 0x1);
        gbc.writeMem(0x854d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbfba, gbc.sp());
        EXPECT(0x854f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x854d));
        EXPECT(0xe8, gbc.readMem(0x854e));
        // CB E8 01F3
        gbc.setState(0x9f1e, 0x276d, 0xe2a0, 0x6d60, 0x1884, 0xb95, 0x0, 0x1);
        gbc.writeMem(0x9f1e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x276d, gbc.sp());
        EXPECT(0x9f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f1e));
        EXPECT(0xe8, gbc.readMem(0x9f1f));
        // CB E8 01F4
        gbc.setState(0x4550, 0xe3ce, 0x9e90, 0x6097, 0xf2ca, 0xd51, 0x1, 0x0);
        gbc.writeMem(0x4550, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe3ce, gbc.sp());
        EXPECT(0x4552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 01F5
        gbc.setState(0xc6cd, 0xc6e, 0x8860, 0x4d60, 0x28ad, 0x9707, 0x1, 0x1);
        gbc.writeMem(0xc6cd, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc6e, gbc.sp());
        EXPECT(0xc6cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6cd));
        EXPECT(0xe8, gbc.readMem(0xc6ce));
        // CB E8 01F6
        gbc.setState(0xb5c4, 0xb985, 0x7920, 0xf079, 0x7429, 0xe663, 0x0, 0x1);
        gbc.writeMem(0xb5c4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb985, gbc.sp());
        EXPECT(0xb5c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c4));
        EXPECT(0xe8, gbc.readMem(0xb5c5));
        // CB E8 01F7
        gbc.setState(0x30b, 0x4b0, 0xd3a0, 0x819c, 0xd4fb, 0xe4f1, 0x1, 0x0);
        gbc.writeMem(0x30b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4b0, gbc.sp());
        EXPECT(0x30d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01F8
        gbc.setState(0x9033, 0x579d, 0xdec0, 0xb664, 0x8db2, 0x3db2, 0x0, 0x1);
        gbc.writeMem(0x9033, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x579d, gbc.sp());
        EXPECT(0x9035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9033));
        EXPECT(0xe8, gbc.readMem(0x9034));
        // CB E8 01F9
        gbc.setState(0x4925, 0xfee1, 0x1940, 0xa215, 0xab23, 0xa595, 0x1, 0x0);
        gbc.writeMem(0x4925, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xfee1, gbc.sp());
        EXPECT(0x4927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01FA
        gbc.setState(0x3058, 0xa50c, 0x8fc0, 0x3e3d, 0xeff0, 0xbff6, 0x1, 0x0);
        gbc.writeMem(0x3058, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa50c, gbc.sp());
        EXPECT(0x305a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01FB
        gbc.setState(0xb3d8, 0x7e1, 0x3600, 0xf41a, 0xe996, 0x8736, 0x0, 0x1);
        gbc.writeMem(0xb3d8, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7e1, gbc.sp());
        EXPECT(0xb3da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d8));
        EXPECT(0xe8, gbc.readMem(0xb3d9));
        // CB E8 01FC
        gbc.setState(0x3da1, 0xbca6, 0x4b00, 0xe5b3, 0x689b, 0x458, 0x0, 0x1);
        gbc.writeMem(0x3da1, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbca6, gbc.sp());
        EXPECT(0x3da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01FD
        gbc.setState(0x8af3, 0xb380, 0x5aa0, 0x50fe, 0x832d, 0xadb8, 0x0, 0x1);
        gbc.writeMem(0x8af3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb380, gbc.sp());
        EXPECT(0x8af5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af3));
        EXPECT(0xe8, gbc.readMem(0x8af4));
        // CB E8 01FE
        gbc.setState(0x362a, 0x9046, 0x5360, 0x1970, 0x45e, 0xcb49, 0x0, 0x0);
        gbc.writeMem(0x362a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9046, gbc.sp());
        EXPECT(0x362c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 01FF
        gbc.setState(0x69e2, 0xe2b6, 0x240, 0x6b32, 0x4637, 0x3d94, 0x0, 0x0);
        gbc.writeMem(0x69e2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe2b6, gbc.sp());
        EXPECT(0x69e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0200
        gbc.setState(0x92e9, 0x8043, 0xa8d0, 0x6fb, 0x1628, 0xc72d, 0x1, 0x0);
        gbc.writeMem(0x92e9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8043, gbc.sp());
        EXPECT(0x92eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92e9));
        EXPECT(0xe8, gbc.readMem(0x92ea));
        // CB E8 0201
        gbc.setState(0xa00a, 0xc8c6, 0x49e0, 0x7fd1, 0xd567, 0x481, 0x1, 0x0);
        gbc.writeMem(0xa00a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc8c6, gbc.sp());
        EXPECT(0xa00c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa00a));
        EXPECT(0xe8, gbc.readMem(0xa00b));
        // CB E8 0202
        gbc.setState(0x1bf8, 0x3c2c, 0x8dd0, 0xf237, 0xddc3, 0x89c, 0x0, 0x1);
        gbc.writeMem(0x1bf8, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3c2c, gbc.sp());
        EXPECT(0x1bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0203
        gbc.setState(0x1d31, 0x4f22, 0x9860, 0x8eeb, 0x190e, 0x33c6, 0x1, 0x0);
        gbc.writeMem(0x1d31, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4f22, gbc.sp());
        EXPECT(0x1d33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0204
        gbc.setState(0xd1d, 0xaa12, 0x820, 0x7638, 0xff31, 0xa7f7, 0x0, 0x0);
        gbc.writeMem(0xd1d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xaa12, gbc.sp());
        EXPECT(0xd1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0205
        gbc.setState(0x4d75, 0x5ecc, 0xca00, 0x7237, 0x2345, 0xd08b, 0x1, 0x1);
        gbc.writeMem(0x4d75, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5ecc, gbc.sp());
        EXPECT(0x4d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0206
        gbc.setState(0xca77, 0x84a1, 0x6f20, 0xe5c6, 0x3ab9, 0x6b5, 0x1, 0x0);
        gbc.writeMem(0xca77, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x84a1, gbc.sp());
        EXPECT(0xca79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca77));
        EXPECT(0xe8, gbc.readMem(0xca78));
        // CB E8 0207
        gbc.setState(0x7d, 0xe2d5, 0xa040, 0x6f2b, 0xb224, 0xe7d2, 0x1, 0x0);
        gbc.writeMem(0x7d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe2d5, gbc.sp());
        EXPECT(0x7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0208
        gbc.setState(0xc52, 0x845, 0xb3f0, 0xb277, 0xba88, 0xb3b0, 0x1, 0x1);
        gbc.writeMem(0xc52, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x845, gbc.sp());
        EXPECT(0xc54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 020A
        gbc.setState(0x8e00, 0x8b22, 0x4c90, 0x8cf4, 0xd33c, 0x87d9, 0x0, 0x1);
        gbc.writeMem(0x8e00, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8b22, gbc.sp());
        EXPECT(0x8e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e00));
        EXPECT(0xe8, gbc.readMem(0x8e01));
        // CB E8 020B
        gbc.setState(0x7140, 0xb974, 0x3970, 0xf21f, 0x99cc, 0x4712, 0x1, 0x0);
        gbc.writeMem(0x7140, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb974, gbc.sp());
        EXPECT(0x7142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 020C
        gbc.setState(0x7fff, 0xc4f, 0x7180, 0x19ec, 0x6bca, 0x74cb, 0x1, 0x1);
        gbc.writeMem(0x7fff, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc4f, gbc.sp());
        EXPECT(0x8001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x8000));
        // CB E8 020D
        gbc.setState(0x61e2, 0x9db4, 0xfe50, 0x488b, 0xe002, 0x7dfc, 0x1, 0x0);
        gbc.writeMem(0x61e2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9db4, gbc.sp());
        EXPECT(0x61e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 020E
        gbc.setState(0xda88, 0x3b83, 0xe200, 0x6ec, 0xcc7b, 0x8e1e, 0x1, 0x0);
        gbc.writeMem(0xda88, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3b83, gbc.sp());
        EXPECT(0xda8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda88));
        EXPECT(0xe8, gbc.readMem(0xda89));
        // CB E8 020F
        gbc.setState(0x8840, 0xa463, 0xa260, 0x30b8, 0x69b5, 0xef30, 0x0, 0x1);
        gbc.writeMem(0x8840, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa463, gbc.sp());
        EXPECT(0x8842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8840));
        EXPECT(0xe8, gbc.readMem(0x8841));
        // CB E8 0210
        gbc.setState(0xead7, 0x6f39, 0xd4d0, 0x53e1, 0xa9c7, 0x5cbd, 0x0, 0x1);
        gbc.writeMem(0xead7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6f39, gbc.sp());
        EXPECT(0xead9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead7));
        EXPECT(0xe8, gbc.readMem(0xead8));
        // CB E8 0211
        gbc.setState(0xc3c0, 0x8a24, 0x14a0, 0xd306, 0xcffc, 0xcde9, 0x0, 0x1);
        gbc.writeMem(0xc3c0, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8a24, gbc.sp());
        EXPECT(0xc3c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3c0));
        EXPECT(0xe8, gbc.readMem(0xc3c1));
        // CB E8 0212
        gbc.setState(0x94d5, 0x90eb, 0x5a0, 0x267e, 0xec78, 0x2b5f, 0x1, 0x1);
        gbc.writeMem(0x94d5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x90eb, gbc.sp());
        EXPECT(0x94d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d5));
        EXPECT(0xe8, gbc.readMem(0x94d6));
        // CB E8 0213
        gbc.setState(0x1b4e, 0xa807, 0x9290, 0x3d30, 0xb9d6, 0x4dd1, 0x1, 0x1);
        gbc.writeMem(0x1b4e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa807, gbc.sp());
        EXPECT(0x1b50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0214
        gbc.setState(0xb02b, 0x9b2e, 0x5530, 0x6120, 0x9f67, 0x4be2, 0x0, 0x0);
        gbc.writeMem(0xb02b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9b2e, gbc.sp());
        EXPECT(0xb02d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb02b));
        EXPECT(0xe8, gbc.readMem(0xb02c));
        // CB E8 0215
        gbc.setState(0x6c3, 0x30b2, 0x9980, 0x95bf, 0x709d, 0xf4e2, 0x1, 0x0);
        gbc.writeMem(0x6c3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x30b2, gbc.sp());
        EXPECT(0x6c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0216
        gbc.setState(0x6b85, 0x6beb, 0x48c0, 0xc122, 0xb739, 0xc1e1, 0x0, 0x1);
        gbc.writeMem(0x6b85, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6beb, gbc.sp());
        EXPECT(0x6b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0217
        gbc.setState(0x262b, 0xfe8c, 0x40b0, 0x986e, 0x9a82, 0xdcbb, 0x0, 0x0);
        gbc.writeMem(0x262b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfe8c, gbc.sp());
        EXPECT(0x262d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0218
        gbc.setState(0xfb8, 0x482d, 0x7020, 0x99d6, 0x7bc9, 0xe69, 0x0, 0x0);
        gbc.writeMem(0xfb8, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x482d, gbc.sp());
        EXPECT(0xfba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0219
        gbc.setState(0xaf16, 0xfcde, 0x2ce0, 0x59c0, 0x8246, 0xdac6, 0x1, 0x1);
        gbc.writeMem(0xaf16, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfcde, gbc.sp());
        EXPECT(0xaf18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf16));
        EXPECT(0xe8, gbc.readMem(0xaf17));
        // CB E8 021A
        gbc.setState(0xf92, 0xbe2d, 0x1e10, 0xfd9a, 0xb50e, 0x1709, 0x1, 0x0);
        gbc.writeMem(0xf92, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbe2d, gbc.sp());
        EXPECT(0xf94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 021B
        gbc.setState(0x743f, 0x77a0, 0xf1b0, 0x65bd, 0xf0f2, 0xa14, 0x0, 0x0);
        gbc.writeMem(0x743f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x77a0, gbc.sp());
        EXPECT(0x7441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 021C
        gbc.setState(0x11eb, 0xa080, 0xe40, 0x3afe, 0x37ba, 0x11aa, 0x0, 0x1);
        gbc.writeMem(0x11eb, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa080, gbc.sp());
        EXPECT(0x11ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 021D
        gbc.setState(0x5cef, 0x424c, 0x1460, 0xe3d7, 0xa58f, 0xcd5f, 0x0, 0x1);
        gbc.writeMem(0x5cef, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x424c, gbc.sp());
        EXPECT(0x5cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 021E
        gbc.setState(0xd31, 0x85c8, 0x6d30, 0x140a, 0xb613, 0x79f, 0x1, 0x0);
        gbc.writeMem(0xd31, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x85c8, gbc.sp());
        EXPECT(0xd33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 021F
        gbc.setState(0x79ef, 0x36eb, 0x93f0, 0x31ea, 0xbecc, 0x8c28, 0x0, 0x0);
        gbc.writeMem(0x79ef, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x36eb, gbc.sp());
        EXPECT(0x79f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0220
        gbc.setState(0x5c79, 0x659f, 0xe1b0, 0x36b0, 0xbf81, 0xbd86, 0x1, 0x0);
        gbc.writeMem(0x5c79, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x659f, gbc.sp());
        EXPECT(0x5c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0221
        gbc.setState(0x1c14, 0xe8c0, 0xeb80, 0xa6ca, 0xc0c9, 0x8919, 0x0, 0x1);
        gbc.writeMem(0x1c14, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe8c0, gbc.sp());
        EXPECT(0x1c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0222
        gbc.setState(0x67d5, 0xfd84, 0x44f0, 0x3e19, 0x2255, 0x6a09, 0x1, 0x0);
        gbc.writeMem(0x67d5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xfd84, gbc.sp());
        EXPECT(0x67d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0223
        gbc.setState(0x5525, 0xab45, 0x3020, 0xf847, 0xc924, 0x4b61, 0x1, 0x1);
        gbc.writeMem(0x5525, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xab45, gbc.sp());
        EXPECT(0x5527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0225
        gbc.setState(0x5a0c, 0x86af, 0xe480, 0x6735, 0x8a7b, 0x3092, 0x1, 0x1);
        gbc.writeMem(0x5a0c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x86af, gbc.sp());
        EXPECT(0x5a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0226
        gbc.setState(0xb863, 0xefaa, 0x8c80, 0xbdf1, 0xb2a6, 0xa7af, 0x0, 0x1);
        gbc.writeMem(0xb863, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xefaa, gbc.sp());
        EXPECT(0xb865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb863));
        EXPECT(0xe8, gbc.readMem(0xb864));
        // CB E8 0227
        gbc.setState(0x819a, 0x21c, 0x1f40, 0x2ae1, 0xb799, 0x90ab, 0x1, 0x1);
        gbc.writeMem(0x819a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x21c, gbc.sp());
        EXPECT(0x819c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x819a));
        EXPECT(0xe8, gbc.readMem(0x819b));
        // CB E8 0228
        gbc.setState(0x75d9, 0xdb61, 0xbdd0, 0x1f11, 0x62a1, 0x5952, 0x1, 0x1);
        gbc.writeMem(0x75d9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdb61, gbc.sp());
        EXPECT(0x75db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0229
        gbc.setState(0xe035, 0x3058, 0x7b40, 0xa2de, 0xfa53, 0x427f, 0x0, 0x1);
        gbc.writeMem(0xe035, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3058, gbc.sp());
        EXPECT(0xe037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe035));
        EXPECT(0xe8, gbc.readMem(0xe036));
        // CB E8 022A
        gbc.setState(0xc8fb, 0x6c87, 0xb580, 0x76cb, 0x2fad, 0x97fb, 0x0, 0x0);
        gbc.writeMem(0xc8fb, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6c87, gbc.sp());
        EXPECT(0xc8fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8fb));
        EXPECT(0xe8, gbc.readMem(0xc8fc));
        // CB E8 022B
        gbc.setState(0xed8, 0x8009, 0xa850, 0x7a73, 0x38ad, 0x2918, 0x1, 0x0);
        gbc.writeMem(0xed8, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8009, gbc.sp());
        EXPECT(0xeda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 022C
        gbc.setState(0x1895, 0xa7b5, 0x4ae0, 0xbfad, 0xb26e, 0x125b, 0x1, 0x0);
        gbc.writeMem(0x1895, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa7b5, gbc.sp());
        EXPECT(0x1897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 022D
        gbc.setState(0xdfc1, 0x7da3, 0xb3c0, 0x5f3, 0x78c0, 0x7e14, 0x0, 0x1);
        gbc.writeMem(0xdfc1, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7da3, gbc.sp());
        EXPECT(0xdfc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc1));
        EXPECT(0xe8, gbc.readMem(0xdfc2));
        // CB E8 022E
        gbc.setState(0x8974, 0x3e48, 0xbb30, 0x7fdd, 0x254b, 0xb9d0, 0x0, 0x1);
        gbc.writeMem(0x8974, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3e48, gbc.sp());
        EXPECT(0x8976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8974));
        EXPECT(0xe8, gbc.readMem(0x8975));
        // CB E8 022F
        gbc.setState(0xbcba, 0x3487, 0x46c0, 0x7a09, 0x230, 0x8ba6, 0x1, 0x0);
        gbc.writeMem(0xbcba, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3487, gbc.sp());
        EXPECT(0xbcbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcba));
        EXPECT(0xe8, gbc.readMem(0xbcbb));
        // CB E8 0230
        gbc.setState(0xbfbd, 0x3432, 0x2660, 0x730c, 0xa48c, 0x4318, 0x0, 0x1);
        gbc.writeMem(0xbfbd, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3432, gbc.sp());
        EXPECT(0xbfbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfbd));
        EXPECT(0xe8, gbc.readMem(0xbfbe));
        // CB E8 0231
        gbc.setState(0x8b21, 0x2b7a, 0xc740, 0x2d3d, 0x5cab, 0xbe1, 0x0, 0x1);
        gbc.writeMem(0x8b21, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2b7a, gbc.sp());
        EXPECT(0x8b23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b21));
        EXPECT(0xe8, gbc.readMem(0x8b22));
        // CB E8 0232
        gbc.setState(0x9f3f, 0x3ba2, 0xa6f0, 0xffb7, 0x931f, 0x9799, 0x0, 0x0);
        gbc.writeMem(0x9f3f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3ba2, gbc.sp());
        EXPECT(0x9f41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f3f));
        EXPECT(0xe8, gbc.readMem(0x9f40));
        // CB E8 0233
        gbc.setState(0xdb16, 0x15ee, 0xd820, 0xe7fd, 0x1680, 0x22ce, 0x0, 0x1);
        gbc.writeMem(0xdb16, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x15ee, gbc.sp());
        EXPECT(0xdb18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb16));
        EXPECT(0xe8, gbc.readMem(0xdb17));
        // CB E8 0234
        gbc.setState(0x1dae, 0xfd59, 0xd4e0, 0x573d, 0x87e1, 0x1af9, 0x1, 0x0);
        gbc.writeMem(0x1dae, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfd59, gbc.sp());
        EXPECT(0x1db0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0235
        gbc.setState(0xa9e4, 0x3cb8, 0x9ce0, 0x5b11, 0xcd54, 0xd58b, 0x0, 0x1);
        gbc.writeMem(0xa9e4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3cb8, gbc.sp());
        EXPECT(0xa9e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9e4));
        EXPECT(0xe8, gbc.readMem(0xa9e5));
        // CB E8 0236
        gbc.setState(0x965b, 0x72a2, 0x2c30, 0x26be, 0x6011, 0xc83, 0x0, 0x0);
        gbc.writeMem(0x965b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x72a2, gbc.sp());
        EXPECT(0x965d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x965b));
        EXPECT(0xe8, gbc.readMem(0x965c));
        // CB E8 0237
        gbc.setState(0xe536, 0xb7b5, 0xbcf0, 0xf255, 0x160c, 0x5702, 0x0, 0x0);
        gbc.writeMem(0xe536, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb7b5, gbc.sp());
        EXPECT(0xe538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe536));
        EXPECT(0xe8, gbc.readMem(0xe537));
        // CB E8 0238
        gbc.setState(0x6958, 0x94aa, 0x9a50, 0xeb04, 0x9318, 0x9f38, 0x1, 0x1);
        gbc.writeMem(0x6958, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x94aa, gbc.sp());
        EXPECT(0x695a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0239
        gbc.setState(0x8a31, 0xa211, 0xf3a0, 0xa1d1, 0xeaa0, 0x3f95, 0x1, 0x1);
        gbc.writeMem(0x8a31, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa211, gbc.sp());
        EXPECT(0x8a33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a31));
        EXPECT(0xe8, gbc.readMem(0x8a32));
        // CB E8 023A
        gbc.setState(0x738a, 0x60f6, 0x73e0, 0xc8d4, 0xcf66, 0x171f, 0x0, 0x0);
        gbc.writeMem(0x738a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x60f6, gbc.sp());
        EXPECT(0x738c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 023B
        gbc.setState(0x819f, 0x3976, 0x9e10, 0x9353, 0x2635, 0xb393, 0x1, 0x0);
        gbc.writeMem(0x819f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3976, gbc.sp());
        EXPECT(0x81a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x819f));
        EXPECT(0xe8, gbc.readMem(0x81a0));
        // CB E8 023C
        gbc.setState(0xd0c1, 0x1ecd, 0xb080, 0x242b, 0x4e11, 0xaaf9, 0x1, 0x0);
        gbc.writeMem(0xd0c1, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1ecd, gbc.sp());
        EXPECT(0xd0c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c1));
        EXPECT(0xe8, gbc.readMem(0xd0c2));
        // CB E8 023D
        gbc.setState(0xccdd, 0x6c7f, 0x140, 0x38b3, 0x5991, 0x301e, 0x0, 0x0);
        gbc.writeMem(0xccdd, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6c7f, gbc.sp());
        EXPECT(0xccdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccdd));
        EXPECT(0xe8, gbc.readMem(0xccde));
        // CB E8 023E
        gbc.setState(0xb9fa, 0xa0d5, 0xaf90, 0x3a4b, 0x4645, 0xee7d, 0x0, 0x0);
        gbc.writeMem(0xb9fa, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa0d5, gbc.sp());
        EXPECT(0xb9fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9fa));
        EXPECT(0xe8, gbc.readMem(0xb9fb));
        // CB E8 023F
        gbc.setState(0x300f, 0xf787, 0x80c0, 0x4ae1, 0x640d, 0x6cb3, 0x0, 0x1);
        gbc.writeMem(0x300f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf787, gbc.sp());
        EXPECT(0x3011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0240
        gbc.setState(0x335e, 0x59fb, 0x2610, 0x8f32, 0xb04c, 0x3bd8, 0x0, 0x1);
        gbc.writeMem(0x335e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x59fb, gbc.sp());
        EXPECT(0x3360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0241
        gbc.setState(0x878b, 0x3d71, 0x360, 0xca05, 0x7282, 0x461, 0x1, 0x0);
        gbc.writeMem(0x878b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3d71, gbc.sp());
        EXPECT(0x878d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x878b));
        EXPECT(0xe8, gbc.readMem(0x878c));
        // CB E8 0242
        gbc.setState(0xe9a5, 0x2b, 0x9af0, 0x5aa8, 0x472a, 0x27df, 0x0, 0x1);
        gbc.writeMem(0xe9a5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2b, gbc.sp());
        EXPECT(0xe9a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a5));
        EXPECT(0xe8, gbc.readMem(0xe9a6));
        // CB E8 0243
        gbc.setState(0xda20, 0x41c6, 0x9960, 0x5bcd, 0x5471, 0xaff6, 0x0, 0x1);
        gbc.writeMem(0xda20, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x41c6, gbc.sp());
        EXPECT(0xda22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda20));
        EXPECT(0xe8, gbc.readMem(0xda21));
        // CB E8 0244
        gbc.setState(0x7bf5, 0x7c90, 0x1450, 0xf248, 0xdb24, 0x21ae, 0x0, 0x1);
        gbc.writeMem(0x7bf5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7c90, gbc.sp());
        EXPECT(0x7bf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0245
        gbc.setState(0x1f77, 0x1932, 0x8c90, 0xfebb, 0xbfb, 0x4631, 0x1, 0x0);
        gbc.writeMem(0x1f77, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1932, gbc.sp());
        EXPECT(0x1f79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0246
        gbc.setState(0x6cce, 0x16cb, 0x66a0, 0xf16c, 0x3a75, 0x7eb6, 0x1, 0x0);
        gbc.writeMem(0x6cce, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x16cb, gbc.sp());
        EXPECT(0x6cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0247
        gbc.setState(0x1f3f, 0x3ce2, 0xe580, 0xf569, 0x49d2, 0xeadc, 0x1, 0x1);
        gbc.writeMem(0x1f3f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3ce2, gbc.sp());
        EXPECT(0x1f41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0248
        gbc.setState(0xbf82, 0x2772, 0x1f50, 0x182a, 0xc847, 0xb6f1, 0x0, 0x0);
        gbc.writeMem(0xbf82, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2772, gbc.sp());
        EXPECT(0xbf84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf82));
        EXPECT(0xe8, gbc.readMem(0xbf83));
        // CB E8 0249
        gbc.setState(0x14db, 0x4230, 0x5830, 0x7650, 0xb909, 0x941a, 0x1, 0x1);
        gbc.writeMem(0x14db, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4230, gbc.sp());
        EXPECT(0x14dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 024A
        gbc.setState(0xa0e0, 0x4930, 0x5da0, 0xef3b, 0x753d, 0xe2dd, 0x0, 0x0);
        gbc.writeMem(0xa0e0, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4930, gbc.sp());
        EXPECT(0xa0e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0e0));
        EXPECT(0xe8, gbc.readMem(0xa0e1));
        // CB E8 024B
        gbc.setState(0xaff, 0xc46a, 0x40f0, 0xc7d2, 0xc040, 0x4f07, 0x0, 0x1);
        gbc.writeMem(0xaff, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc46a, gbc.sp());
        EXPECT(0xb01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 024C
        gbc.setState(0x9c46, 0x79ee, 0xa4f0, 0xb021, 0x6a6e, 0x1031, 0x1, 0x0);
        gbc.writeMem(0x9c46, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x79ee, gbc.sp());
        EXPECT(0x9c48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c46));
        EXPECT(0xe8, gbc.readMem(0x9c47));
        // CB E8 024D
        gbc.setState(0xe5b7, 0x4846, 0xd6e0, 0x41bf, 0x19d0, 0xed39, 0x0, 0x1);
        gbc.writeMem(0xe5b7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4846, gbc.sp());
        EXPECT(0xe5b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b7));
        EXPECT(0xe8, gbc.readMem(0xe5b8));
        // CB E8 024E
        gbc.setState(0x5b1b, 0xe615, 0x2ea0, 0x4e41, 0xa70f, 0x2d35, 0x1, 0x1);
        gbc.writeMem(0x5b1b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe615, gbc.sp());
        EXPECT(0x5b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 024F
        gbc.setState(0x82c1, 0xaf91, 0x8220, 0x657a, 0xc58e, 0x4dc, 0x1, 0x1);
        gbc.writeMem(0x82c1, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xaf91, gbc.sp());
        EXPECT(0x82c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82c1));
        EXPECT(0xe8, gbc.readMem(0x82c2));
        // CB E8 0250
        gbc.setState(0xc9df, 0x4dc7, 0x7920, 0xe929, 0x4f21, 0x6e3e, 0x1, 0x1);
        gbc.writeMem(0xc9df, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4dc7, gbc.sp());
        EXPECT(0xc9e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9df));
        EXPECT(0xe8, gbc.readMem(0xc9e0));
        // CB E8 0251
        gbc.setState(0x6a, 0xe651, 0x6680, 0x89d7, 0x10dc, 0xc10f, 0x0, 0x0);
        gbc.writeMem(0x6a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe651, gbc.sp());
        EXPECT(0x6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0252
        gbc.setState(0x6891, 0xbfa7, 0x88c0, 0x8a61, 0xb76b, 0x87fb, 0x1, 0x0);
        gbc.writeMem(0x6891, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbfa7, gbc.sp());
        EXPECT(0x6893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0253
        gbc.setState(0xafc3, 0xfb1e, 0x6ae0, 0xa738, 0x2744, 0x91c5, 0x0, 0x0);
        gbc.writeMem(0xafc3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfb1e, gbc.sp());
        EXPECT(0xafc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc3));
        EXPECT(0xe8, gbc.readMem(0xafc4));
        // CB E8 0255
        gbc.setState(0x6bf, 0xfd24, 0xad80, 0xd27, 0xb0f, 0x82f, 0x0, 0x1);
        gbc.writeMem(0x6bf, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfd24, gbc.sp());
        EXPECT(0x6c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0256
        gbc.setState(0x9bba, 0xd2c5, 0xac10, 0xd3cc, 0xe3f1, 0xf6f5, 0x1, 0x1);
        gbc.writeMem(0x9bba, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd2c5, gbc.sp());
        EXPECT(0x9bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bba));
        EXPECT(0xe8, gbc.readMem(0x9bbb));
        // CB E8 0257
        gbc.setState(0xe9ea, 0xed9a, 0xf0, 0x285e, 0x522d, 0xe3b3, 0x1, 0x1);
        gbc.writeMem(0xe9ea, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xed9a, gbc.sp());
        EXPECT(0xe9ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ea));
        EXPECT(0xe8, gbc.readMem(0xe9eb));
        // CB E8 0258
        gbc.setState(0x12b7, 0xacbe, 0xaed0, 0x3617, 0x1362, 0x404e, 0x1, 0x0);
        gbc.writeMem(0x12b7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xacbe, gbc.sp());
        EXPECT(0x12b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0259
        gbc.setState(0x514b, 0x722d, 0xfd50, 0xd3a2, 0xb19, 0xfa03, 0x1, 0x1);
        gbc.writeMem(0x514b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x722d, gbc.sp());
        EXPECT(0x514d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 025A
        gbc.setState(0xef65, 0xcd04, 0x4a90, 0x6eb, 0x842f, 0x98cc, 0x1, 0x0);
        gbc.writeMem(0xef65, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcd04, gbc.sp());
        EXPECT(0xef67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef65));
        EXPECT(0xe8, gbc.readMem(0xef66));
        // CB E8 025B
        gbc.setState(0x6f7c, 0x9558, 0xce60, 0xe557, 0x7fb7, 0x62f8, 0x1, 0x1);
        gbc.writeMem(0x6f7c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9558, gbc.sp());
        EXPECT(0x6f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 025C
        gbc.setState(0x49cb, 0x6eff, 0xf4b0, 0x7258, 0xbed3, 0x39c3, 0x0, 0x1);
        gbc.writeMem(0x49cb, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6eff, gbc.sp());
        EXPECT(0x49cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 025D
        gbc.setState(0x729c, 0x2318, 0x1fa0, 0xe4f2, 0x3786, 0x26d0, 0x1, 0x0);
        gbc.writeMem(0x729c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2318, gbc.sp());
        EXPECT(0x729e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 025E
        gbc.setState(0x8c3, 0x8f4d, 0xa30, 0xd8be, 0x293a, 0xf983, 0x1, 0x1);
        gbc.writeMem(0x8c3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8f4d, gbc.sp());
        EXPECT(0x8c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 025F
        gbc.setState(0x1b66, 0x7502, 0x5ff0, 0xc8a, 0xc02b, 0xf02e, 0x1, 0x1);
        gbc.writeMem(0x1b66, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7502, gbc.sp());
        EXPECT(0x1b68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0260
        gbc.setState(0x4f21, 0xe163, 0x2af0, 0x592d, 0xa432, 0x3f93, 0x1, 0x1);
        gbc.writeMem(0x4f21, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe163, gbc.sp());
        EXPECT(0x4f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0261
        gbc.setState(0x55cc, 0xa973, 0xbc50, 0xa37a, 0x41a, 0x4945, 0x0, 0x0);
        gbc.writeMem(0x55cc, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa973, gbc.sp());
        EXPECT(0x55ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0262
        gbc.setState(0x60f5, 0x4be4, 0xa900, 0x4f97, 0xd542, 0x84de, 0x0, 0x0);
        gbc.writeMem(0x60f5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4be4, gbc.sp());
        EXPECT(0x60f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0263
        gbc.setState(0x992c, 0xc544, 0x8bc0, 0x420, 0x327, 0x9af5, 0x1, 0x0);
        gbc.writeMem(0x992c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc544, gbc.sp());
        EXPECT(0x992e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x992c));
        EXPECT(0xe8, gbc.readMem(0x992d));
        // CB E8 0264
        gbc.setState(0x9680, 0x78ed, 0xedb0, 0x96a7, 0x2686, 0xf574, 0x0, 0x1);
        gbc.writeMem(0x9680, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x78ed, gbc.sp());
        EXPECT(0x9682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9680));
        EXPECT(0xe8, gbc.readMem(0x9681));
        // CB E8 0265
        gbc.setState(0x2d9a, 0x3eb1, 0xf4e0, 0xce30, 0xaf23, 0x5d03, 0x0, 0x1);
        gbc.writeMem(0x2d9a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3eb1, gbc.sp());
        EXPECT(0x2d9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0266
        gbc.setState(0x13d5, 0xace5, 0xaca0, 0xc886, 0x1871, 0xdeb6, 0x1, 0x1);
        gbc.writeMem(0x13d5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xace5, gbc.sp());
        EXPECT(0x13d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0267
        gbc.setState(0x7780, 0x729b, 0x90a0, 0xcd69, 0x7d38, 0xee90, 0x0, 0x1);
        gbc.writeMem(0x7780, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x729b, gbc.sp());
        EXPECT(0x7782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0268
        gbc.setState(0x3b32, 0xa7cf, 0x6a00, 0x4655, 0xb552, 0x1c10, 0x1, 0x1);
        gbc.writeMem(0x3b32, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa7cf, gbc.sp());
        EXPECT(0x3b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0269
        gbc.setState(0x51a7, 0x93c7, 0xeed0, 0x7670, 0x3039, 0xa70d, 0x1, 0x0);
        gbc.writeMem(0x51a7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x93c7, gbc.sp());
        EXPECT(0x51a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 026A
        gbc.setState(0x9a74, 0x439, 0x4430, 0xde0f, 0x821d, 0x218c, 0x1, 0x0);
        gbc.writeMem(0x9a74, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x439, gbc.sp());
        EXPECT(0x9a76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a74));
        EXPECT(0xe8, gbc.readMem(0x9a75));
        // CB E8 026B
        gbc.setState(0x33b2, 0x1013, 0x4680, 0x3bad, 0xffd2, 0xbcb6, 0x0, 0x1);
        gbc.writeMem(0x33b2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1013, gbc.sp());
        EXPECT(0x33b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 026C
        gbc.setState(0xba58, 0x3caf, 0xd590, 0x5e1f, 0x834a, 0xa9b3, 0x0, 0x0);
        gbc.writeMem(0xba58, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3caf, gbc.sp());
        EXPECT(0xba5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba58));
        EXPECT(0xe8, gbc.readMem(0xba59));
        // CB E8 026E
        gbc.setState(0xa59e, 0x22ac, 0x17e0, 0x255b, 0x1409, 0xe680, 0x1, 0x0);
        gbc.writeMem(0xa59e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x22ac, gbc.sp());
        EXPECT(0xa5a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa59e));
        EXPECT(0xe8, gbc.readMem(0xa59f));
        // CB E8 026F
        gbc.setState(0x70b9, 0x5193, 0x4b00, 0x8e7, 0xe63e, 0x630, 0x0, 0x0);
        gbc.writeMem(0x70b9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5193, gbc.sp());
        EXPECT(0x70bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0271
        gbc.setState(0x4ede, 0x41a, 0xdd20, 0xc53d, 0xde53, 0x61fd, 0x0, 0x0);
        gbc.writeMem(0x4ede, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x41a, gbc.sp());
        EXPECT(0x4ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0272
        gbc.setState(0x566c, 0xf57, 0x6c0, 0x8e49, 0xb59, 0x59b3, 0x0, 0x0);
        gbc.writeMem(0x566c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf57, gbc.sp());
        EXPECT(0x566e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0273
        gbc.setState(0x4630, 0xef14, 0x2140, 0xb0cd, 0x5994, 0x7fa0, 0x1, 0x1);
        gbc.writeMem(0x4630, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xef14, gbc.sp());
        EXPECT(0x4632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0274
        gbc.setState(0xee4c, 0x29f, 0x3710, 0xb441, 0x59d0, 0x98c3, 0x0, 0x1);
        gbc.writeMem(0xee4c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x29f, gbc.sp());
        EXPECT(0xee4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee4c));
        EXPECT(0xe8, gbc.readMem(0xee4d));
        // CB E8 0275
        gbc.setState(0x7483, 0x8a2c, 0x4cb0, 0x8b11, 0x84d, 0x698f, 0x0, 0x0);
        gbc.writeMem(0x7483, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8a2c, gbc.sp());
        EXPECT(0x7485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0276
        gbc.setState(0xe815, 0xb81a, 0x6960, 0x9d41, 0xe9c7, 0xef46, 0x1, 0x1);
        gbc.writeMem(0xe815, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb81a, gbc.sp());
        EXPECT(0xe817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe815));
        EXPECT(0xe8, gbc.readMem(0xe816));
        // CB E8 0277
        gbc.setState(0x21d4, 0x480d, 0xcf80, 0xf03b, 0x3ab3, 0x278d, 0x0, 0x1);
        gbc.writeMem(0x21d4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x480d, gbc.sp());
        EXPECT(0x21d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0278
        gbc.setState(0xac88, 0x390a, 0x24a0, 0xe03c, 0xedec, 0xca09, 0x0, 0x0);
        gbc.writeMem(0xac88, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x390a, gbc.sp());
        EXPECT(0xac8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac88));
        EXPECT(0xe8, gbc.readMem(0xac89));
        // CB E8 0279
        gbc.setState(0x78ed, 0xdf00, 0x76d0, 0xe173, 0x6c2b, 0x93a9, 0x1, 0x0);
        gbc.writeMem(0x78ed, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdf00, gbc.sp());
        EXPECT(0x78ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 027B
        gbc.setState(0x6f0f, 0x4ce, 0x7c00, 0x1b6c, 0x732a, 0x79b1, 0x0, 0x1);
        gbc.writeMem(0x6f0f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4ce, gbc.sp());
        EXPECT(0x6f11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 027C
        gbc.setState(0xba45, 0x7a36, 0x7b80, 0x7ff8, 0x48e6, 0x8585, 0x0, 0x1);
        gbc.writeMem(0xba45, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7a36, gbc.sp());
        EXPECT(0xba47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba45));
        EXPECT(0xe8, gbc.readMem(0xba46));
        // CB E8 027D
        gbc.setState(0x7cad, 0xea7d, 0x47e0, 0xbca0, 0x45f, 0xd7ae, 0x0, 0x1);
        gbc.writeMem(0x7cad, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xea7d, gbc.sp());
        EXPECT(0x7caf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 027E
        gbc.setState(0x6ba3, 0xabe9, 0xe70, 0x1991, 0x2561, 0x45de, 0x0, 0x0);
        gbc.writeMem(0x6ba3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xabe9, gbc.sp());
        EXPECT(0x6ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 027F
        gbc.setState(0xe0af, 0x8020, 0xfdb0, 0x406e, 0x99da, 0x6f65, 0x0, 0x0);
        gbc.writeMem(0xe0af, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8020, gbc.sp());
        EXPECT(0xe0b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0af));
        EXPECT(0xe8, gbc.readMem(0xe0b0));
        // CB E8 0280
        gbc.setState(0x53ec, 0x813e, 0xd2e0, 0x2c20, 0xcd55, 0xfe5b, 0x0, 0x0);
        gbc.writeMem(0x53ec, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x813e, gbc.sp());
        EXPECT(0x53ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0281
        gbc.setState(0xe997, 0xf513, 0xdcc0, 0xde89, 0x253d, 0x29f8, 0x1, 0x1);
        gbc.writeMem(0xe997, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf513, gbc.sp());
        EXPECT(0xe999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe997));
        EXPECT(0xe8, gbc.readMem(0xe998));
        // CB E8 0282
        gbc.setState(0x677e, 0x52ca, 0xecb0, 0x9c13, 0x32eb, 0xd34, 0x1, 0x1);
        gbc.writeMem(0x677e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x52ca, gbc.sp());
        EXPECT(0x6780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0283
        gbc.setState(0x2265, 0xad5c, 0x6a70, 0x7a1, 0xebab, 0x712d, 0x1, 0x1);
        gbc.writeMem(0x2265, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xad5c, gbc.sp());
        EXPECT(0x2267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0284
        gbc.setState(0x8a62, 0x5fef, 0x5390, 0x2116, 0x70a, 0xbb88, 0x1, 0x1);
        gbc.writeMem(0x8a62, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5fef, gbc.sp());
        EXPECT(0x8a64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a62));
        EXPECT(0xe8, gbc.readMem(0x8a63));
        // CB E8 0285
        gbc.setState(0x5f3e, 0x3f05, 0x28d0, 0x1540, 0x3125, 0xf231, 0x1, 0x0);
        gbc.writeMem(0x5f3e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3f05, gbc.sp());
        EXPECT(0x5f40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0286
        gbc.setState(0xd2, 0x7a9a, 0xe940, 0xbc34, 0x207d, 0xa45f, 0x0, 0x1);
        gbc.writeMem(0xd2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7a9a, gbc.sp());
        EXPECT(0xd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0287
        gbc.setState(0xb076, 0xe109, 0x2e80, 0x6db1, 0xb66c, 0xfb4f, 0x1, 0x0);
        gbc.writeMem(0xb076, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe109, gbc.sp());
        EXPECT(0xb078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb076));
        EXPECT(0xe8, gbc.readMem(0xb077));
        // CB E8 0289
        gbc.setState(0x7df7, 0x6b3c, 0x7d60, 0xf3a8, 0x7a95, 0x585, 0x1, 0x0);
        gbc.writeMem(0x7df7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6b3c, gbc.sp());
        EXPECT(0x7df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 028A
        gbc.setState(0x48d8, 0x402c, 0x1bf0, 0x7c37, 0xe8d6, 0xa82e, 0x0, 0x0);
        gbc.writeMem(0x48d8, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x402c, gbc.sp());
        EXPECT(0x48da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 028B
        gbc.setState(0x43e6, 0x3925, 0xb2d0, 0x2847, 0xede4, 0x9f76, 0x0, 0x1);
        gbc.writeMem(0x43e6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3925, gbc.sp());
        EXPECT(0x43e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 028D
        gbc.setState(0xc345, 0xdb5f, 0xaea0, 0xad44, 0xf497, 0xb1bc, 0x1, 0x0);
        gbc.writeMem(0xc345, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdb5f, gbc.sp());
        EXPECT(0xc347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc345));
        EXPECT(0xe8, gbc.readMem(0xc346));
        // CB E8 028E
        gbc.setState(0x8fb8, 0xe0e0, 0xc270, 0x5ceb, 0x48f2, 0xae7c, 0x0, 0x1);
        gbc.writeMem(0x8fb8, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe0e0, gbc.sp());
        EXPECT(0x8fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb8));
        EXPECT(0xe8, gbc.readMem(0x8fb9));
        // CB E8 028F
        gbc.setState(0x315d, 0x1552, 0x78b0, 0x11b7, 0xde43, 0xf04, 0x0, 0x1);
        gbc.writeMem(0x315d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1552, gbc.sp());
        EXPECT(0x315f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0290
        gbc.setState(0x6800, 0x8958, 0x7c90, 0x9189, 0x206e, 0xd299, 0x0, 0x1);
        gbc.writeMem(0x6800, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8958, gbc.sp());
        EXPECT(0x6802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0291
        gbc.setState(0xe0d9, 0x83cc, 0x2d60, 0x3c18, 0xf2a, 0xc797, 0x0, 0x1);
        gbc.writeMem(0xe0d9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x83cc, gbc.sp());
        EXPECT(0xe0db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0d9));
        EXPECT(0xe8, gbc.readMem(0xe0da));
        // CB E8 0292
        gbc.setState(0x6f9e, 0x999, 0xc050, 0xf94f, 0x5f7, 0x24f2, 0x1, 0x1);
        gbc.writeMem(0x6f9e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x999, gbc.sp());
        EXPECT(0x6fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0293
        gbc.setState(0x17be, 0xdd99, 0x2c60, 0xa79b, 0x2fee, 0x4a83, 0x0, 0x1);
        gbc.writeMem(0x17be, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdd99, gbc.sp());
        EXPECT(0x17c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0294
        gbc.setState(0x1910, 0x1bba, 0x36a0, 0x140e, 0x6377, 0x70e7, 0x0, 0x0);
        gbc.writeMem(0x1910, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1bba, gbc.sp());
        EXPECT(0x1912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0295
        gbc.setState(0x6514, 0x6be2, 0xcd20, 0x4f13, 0x243e, 0x1be, 0x0, 0x0);
        gbc.writeMem(0x6514, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6be2, gbc.sp());
        EXPECT(0x6516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0296
        gbc.setState(0x6f1c, 0x1d8d, 0x7190, 0x747a, 0x2d73, 0x737e, 0x0, 0x0);
        gbc.writeMem(0x6f1c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1d8d, gbc.sp());
        EXPECT(0x6f1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0297
        gbc.setState(0x41a8, 0x1e03, 0x7c10, 0x52e5, 0x64e4, 0xd3b4, 0x0, 0x1);
        gbc.writeMem(0x41a8, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1e03, gbc.sp());
        EXPECT(0x41aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0298
        gbc.setState(0xb6d1, 0xa702, 0x6450, 0xd702, 0x8ee5, 0xf288, 0x0, 0x1);
        gbc.writeMem(0xb6d1, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa702, gbc.sp());
        EXPECT(0xb6d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6d1));
        EXPECT(0xe8, gbc.readMem(0xb6d2));
        // CB E8 0299
        gbc.setState(0x87ff, 0xb083, 0xa900, 0x8456, 0xe968, 0x6a93, 0x1, 0x1);
        gbc.writeMem(0x87ff, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb083, gbc.sp());
        EXPECT(0x8801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ff));
        EXPECT(0xe8, gbc.readMem(0x8800));
        // CB E8 029A
        gbc.setState(0x3af7, 0x7f91, 0x30a0, 0x6064, 0xf3d8, 0xbfb8, 0x0, 0x1);
        gbc.writeMem(0x3af7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7f91, gbc.sp());
        EXPECT(0x3af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 029B
        gbc.setState(0xa9a2, 0x4c53, 0x2620, 0x25bf, 0x413e, 0x7dd1, 0x0, 0x0);
        gbc.writeMem(0xa9a2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4c53, gbc.sp());
        EXPECT(0xa9a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9a2));
        EXPECT(0xe8, gbc.readMem(0xa9a3));
        // CB E8 029C
        gbc.setState(0x90da, 0x432, 0x2180, 0xd54, 0x15f, 0xa7ad, 0x1, 0x1);
        gbc.writeMem(0x90da, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x432, gbc.sp());
        EXPECT(0x90dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90da));
        EXPECT(0xe8, gbc.readMem(0x90db));
        // CB E8 029D
        gbc.setState(0xe540, 0x6ad, 0x9300, 0xf3e9, 0x6485, 0x220e, 0x0, 0x1);
        gbc.writeMem(0xe540, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6ad, gbc.sp());
        EXPECT(0xe542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe540));
        EXPECT(0xe8, gbc.readMem(0xe541));
        // CB E8 029E
        gbc.setState(0xd79, 0x3cc4, 0x7d80, 0x1885, 0x861d, 0xfcdb, 0x1, 0x1);
        gbc.writeMem(0xd79, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3cc4, gbc.sp());
        EXPECT(0xd7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 029F
        gbc.setState(0xb193, 0xeec4, 0x6f60, 0x6be3, 0x8d37, 0x7ea2, 0x1, 0x0);
        gbc.writeMem(0xb193, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xeec4, gbc.sp());
        EXPECT(0xb195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb193));
        EXPECT(0xe8, gbc.readMem(0xb194));
        // CB E8 02A0
        gbc.setState(0xd4c6, 0x9cea, 0x70, 0xf20c, 0xba19, 0x9f16, 0x1, 0x1);
        gbc.writeMem(0xd4c6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9cea, gbc.sp());
        EXPECT(0xd4c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c6));
        EXPECT(0xe8, gbc.readMem(0xd4c7));
        // CB E8 02A1
        gbc.setState(0x5cee, 0x50f0, 0x12f0, 0x5efd, 0xf4d0, 0x4f8, 0x1, 0x0);
        gbc.writeMem(0x5cee, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x50f0, gbc.sp());
        EXPECT(0x5cf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02A3
        gbc.setState(0x3745, 0x2e16, 0x5f30, 0xa22c, 0xcf7b, 0x3b99, 0x1, 0x1);
        gbc.writeMem(0x3745, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2e16, gbc.sp());
        EXPECT(0x3747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02A4
        gbc.setState(0xdb16, 0x491, 0xeb00, 0xb7e0, 0xcf3f, 0xcad, 0x0, 0x1);
        gbc.writeMem(0xdb16, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x491, gbc.sp());
        EXPECT(0xdb18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb16));
        EXPECT(0xe8, gbc.readMem(0xdb17));
        // CB E8 02A6
        gbc.setState(0xa5b4, 0x3ae6, 0x37d0, 0x618e, 0x7034, 0xc39c, 0x1, 0x1);
        gbc.writeMem(0xa5b4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3ae6, gbc.sp());
        EXPECT(0xa5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5b4));
        EXPECT(0xe8, gbc.readMem(0xa5b5));
        // CB E8 02A7
        gbc.setState(0x320, 0xec0d, 0x5720, 0xc1a6, 0x646f, 0xc8ff, 0x1, 0x1);
        gbc.writeMem(0x320, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xec0d, gbc.sp());
        EXPECT(0x322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 02A8
        gbc.setState(0x8634, 0xeccc, 0x5380, 0x3018, 0x48f8, 0xa2fb, 0x1, 0x0);
        gbc.writeMem(0x8634, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xeccc, gbc.sp());
        EXPECT(0x8636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8634));
        EXPECT(0xe8, gbc.readMem(0x8635));
        // CB E8 02A9
        gbc.setState(0x1689, 0x8c93, 0xcc0, 0xc283, 0x6781, 0xa28f, 0x1, 0x0);
        gbc.writeMem(0x1689, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8c93, gbc.sp());
        EXPECT(0x168b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 02AA
        gbc.setState(0xa05c, 0xaddf, 0x3500, 0x6388, 0x428f, 0x772e, 0x0, 0x1);
        gbc.writeMem(0xa05c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xaddf, gbc.sp());
        EXPECT(0xa05e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa05c));
        EXPECT(0xe8, gbc.readMem(0xa05d));
        // CB E8 02AB
        gbc.setState(0x69, 0xa6e7, 0xe3a0, 0xaaa8, 0x4667, 0xfbd3, 0x1, 0x1);
        gbc.writeMem(0x69, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa6e7, gbc.sp());
        EXPECT(0x6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 02AC
        gbc.setState(0xd5f7, 0x8711, 0x8e70, 0xc842, 0x7be5, 0xb474, 0x0, 0x1);
        gbc.writeMem(0xd5f7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8711, gbc.sp());
        EXPECT(0xd5f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5f7));
        EXPECT(0xe8, gbc.readMem(0xd5f8));
        // CB E8 02AD
        gbc.setState(0x437c, 0x2ef5, 0x1720, 0xcba4, 0x9458, 0x3c94, 0x1, 0x1);
        gbc.writeMem(0x437c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2ef5, gbc.sp());
        EXPECT(0x437e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 02AE
        gbc.setState(0x5df9, 0x6814, 0xde50, 0x894a, 0xdb3, 0x14de, 0x0, 0x1);
        gbc.writeMem(0x5df9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6814, gbc.sp());
        EXPECT(0x5dfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02AF
        gbc.setState(0x760d, 0x702d, 0x7ad0, 0x8fe3, 0x3ad8, 0x5289, 0x1, 0x1);
        gbc.writeMem(0x760d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x702d, gbc.sp());
        EXPECT(0x760f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02B0
        gbc.setState(0x140f, 0x9465, 0x5cb0, 0xeac1, 0x3fd6, 0x7525, 0x1, 0x0);
        gbc.writeMem(0x140f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9465, gbc.sp());
        EXPECT(0x1411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02B2
        gbc.setState(0xfda, 0x41aa, 0xa410, 0x5859, 0x1eb4, 0x2e9d, 0x0, 0x1);
        gbc.writeMem(0xfda, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x41aa, gbc.sp());
        EXPECT(0xfdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02B3
        gbc.setState(0xa6f8, 0x2f3d, 0x38c0, 0xf607, 0x870c, 0x8b02, 0x1, 0x1);
        gbc.writeMem(0xa6f8, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2f3d, gbc.sp());
        EXPECT(0xa6fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f8));
        EXPECT(0xe8, gbc.readMem(0xa6f9));
        // CB E8 02B4
        gbc.setState(0xcfa, 0xda4f, 0x86d0, 0x3cbf, 0xac61, 0x3352, 0x1, 0x0);
        gbc.writeMem(0xcfa, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xda4f, gbc.sp());
        EXPECT(0xcfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02B5
        gbc.setState(0x8dc4, 0x54e7, 0xe680, 0x3c94, 0xe54e, 0x71e, 0x1, 0x0);
        gbc.writeMem(0x8dc4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x54e7, gbc.sp());
        EXPECT(0x8dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc4));
        EXPECT(0xe8, gbc.readMem(0x8dc5));
        // CB E8 02B6
        gbc.setState(0x42e5, 0x83d4, 0xc920, 0xe05c, 0x1848, 0x4fb0, 0x0, 0x1);
        gbc.writeMem(0x42e5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x83d4, gbc.sp());
        EXPECT(0x42e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 02B7
        gbc.setState(0x5b66, 0x8237, 0x6130, 0x8028, 0x28f, 0x4f8c, 0x1, 0x1);
        gbc.writeMem(0x5b66, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8237, gbc.sp());
        EXPECT(0x5b68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02B8
        gbc.setState(0xeced, 0x84be, 0x6450, 0x3b1d, 0xd3be, 0x25aa, 0x0, 0x0);
        gbc.writeMem(0xeced, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x84be, gbc.sp());
        EXPECT(0xecef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeced));
        EXPECT(0xe8, gbc.readMem(0xecee));
        // CB E8 02B9
        gbc.setState(0x96fa, 0xf21a, 0xfe0, 0xb174, 0x8d4d, 0xbac5, 0x0, 0x0);
        gbc.writeMem(0x96fa, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf21a, gbc.sp());
        EXPECT(0x96fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96fa));
        EXPECT(0xe8, gbc.readMem(0x96fb));
        // CB E8 02BA
        gbc.setState(0x3816, 0x9ad1, 0x7dd0, 0xbd22, 0x5436, 0x2b96, 0x0, 0x1);
        gbc.writeMem(0x3816, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9ad1, gbc.sp());
        EXPECT(0x3818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02BB
        gbc.setState(0x4251, 0x7acb, 0x5ea0, 0xe1be, 0xc416, 0x8158, 0x1, 0x1);
        gbc.writeMem(0x4251, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7acb, gbc.sp());
        EXPECT(0x4253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 02BC
        gbc.setState(0x4204, 0xc448, 0x57c0, 0x98af, 0x2106, 0x2c5, 0x1, 0x1);
        gbc.writeMem(0x4204, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc448, gbc.sp());
        EXPECT(0x4206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 02BD
        gbc.setState(0x6b35, 0xea69, 0xcdf0, 0x8ad9, 0x732a, 0xdb5b, 0x1, 0x1);
        gbc.writeMem(0x6b35, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xea69, gbc.sp());
        EXPECT(0x6b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02BF
        gbc.setState(0x369a, 0x9a22, 0xd600, 0xfb29, 0xbc47, 0x477a, 0x1, 0x1);
        gbc.writeMem(0x369a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9a22, gbc.sp());
        EXPECT(0x369c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 02C0
        gbc.setState(0xa3d0, 0x2f0d, 0xb880, 0x298a, 0x32cd, 0x7f14, 0x1, 0x1);
        gbc.writeMem(0xa3d0, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2f0d, gbc.sp());
        EXPECT(0xa3d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3d0));
        EXPECT(0xe8, gbc.readMem(0xa3d1));
        // CB E8 02C1
        gbc.setState(0x729d, 0xaed1, 0xe890, 0xcde4, 0x1225, 0x6e33, 0x1, 0x0);
        gbc.writeMem(0x729d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xaed1, gbc.sp());
        EXPECT(0x729f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02C3
        gbc.setState(0xbd0d, 0x3b90, 0x4760, 0x2669, 0xa93, 0xda90, 0x1, 0x0);
        gbc.writeMem(0xbd0d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3b90, gbc.sp());
        EXPECT(0xbd0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd0d));
        EXPECT(0xe8, gbc.readMem(0xbd0e));
        // CB E8 02C4
        gbc.setState(0x785, 0xf37a, 0x3c10, 0x8612, 0x90cc, 0x8b2b, 0x0, 0x1);
        gbc.writeMem(0x785, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf37a, gbc.sp());
        EXPECT(0x787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02C5
        gbc.setState(0x812, 0x8998, 0x7e90, 0xb7b3, 0xe625, 0x32fc, 0x0, 0x0);
        gbc.writeMem(0x812, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8998, gbc.sp());
        EXPECT(0x814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02C6
        gbc.setState(0x3d08, 0x4aa1, 0x1100, 0xed64, 0x5fd, 0x25e3, 0x0, 0x0);
        gbc.writeMem(0x3d08, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4aa1, gbc.sp());
        EXPECT(0x3d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 02C7
        gbc.setState(0x6476, 0x3576, 0xb190, 0xe28b, 0x9bec, 0xa257, 0x1, 0x0);
        gbc.writeMem(0x6476, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3576, gbc.sp());
        EXPECT(0x6478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02C8
        gbc.setState(0x8701, 0x4a3b, 0xd1e0, 0x4651, 0xe61e, 0x567c, 0x1, 0x1);
        gbc.writeMem(0x8701, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4a3b, gbc.sp());
        EXPECT(0x8703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8701));
        EXPECT(0xe8, gbc.readMem(0x8702));
        // CB E8 02C9
        gbc.setState(0x4703, 0x7c98, 0x75f0, 0x6bff, 0xf3b2, 0xa893, 0x0, 0x1);
        gbc.writeMem(0x4703, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7c98, gbc.sp());
        EXPECT(0x4705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02CA
        gbc.setState(0xc433, 0xeb3, 0x3cf0, 0x44cb, 0x53eb, 0xc231, 0x0, 0x1);
        gbc.writeMem(0xc433, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xeb3, gbc.sp());
        EXPECT(0xc435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc433));
        EXPECT(0xe8, gbc.readMem(0xc434));
        // CB E8 02CB
        gbc.setState(0xa8d1, 0xde3d, 0x43e0, 0xfd73, 0xac42, 0x3703, 0x0, 0x1);
        gbc.writeMem(0xa8d1, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xde3d, gbc.sp());
        EXPECT(0xa8d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d1));
        EXPECT(0xe8, gbc.readMem(0xa8d2));
        // CB E8 02CC
        gbc.setState(0x1a36, 0x6154, 0xa500, 0x94df, 0x8320, 0x3746, 0x1, 0x1);
        gbc.writeMem(0x1a36, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6154, gbc.sp());
        EXPECT(0x1a38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 02CD
        gbc.setState(0x7c82, 0xf399, 0xf410, 0xab2d, 0xe260, 0x1778, 0x0, 0x0);
        gbc.writeMem(0x7c82, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf399, gbc.sp());
        EXPECT(0x7c84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02CE
        gbc.setState(0xc173, 0xff28, 0x2690, 0x1638, 0xc4e9, 0xc696, 0x1, 0x0);
        gbc.writeMem(0xc173, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xff28, gbc.sp());
        EXPECT(0xc175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc173));
        EXPECT(0xe8, gbc.readMem(0xc174));
        // CB E8 02CF
        gbc.setState(0xa8ba, 0xbdcb, 0x6010, 0x73d0, 0x4696, 0x83b3, 0x1, 0x0);
        gbc.writeMem(0xa8ba, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xbdcb, gbc.sp());
        EXPECT(0xa8bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8ba));
        EXPECT(0xe8, gbc.readMem(0xa8bb));
        // CB E8 02D0
        gbc.setState(0x2a88, 0x6a75, 0x5930, 0xb6bc, 0xae04, 0x61f8, 0x1, 0x0);
        gbc.writeMem(0x2a88, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6a75, gbc.sp());
        EXPECT(0x2a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02D1
        gbc.setState(0x7f1a, 0xd78f, 0xb6e0, 0xbe78, 0xad89, 0xce04, 0x1, 0x0);
        gbc.writeMem(0x7f1a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd78f, gbc.sp());
        EXPECT(0x7f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 02D2
        gbc.setState(0xadbf, 0x73ce, 0x5570, 0x7cdd, 0x86a, 0x3ed6, 0x0, 0x1);
        gbc.writeMem(0xadbf, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x73ce, gbc.sp());
        EXPECT(0xadc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadbf));
        EXPECT(0xe8, gbc.readMem(0xadc0));
        // CB E8 02D3
        gbc.setState(0x2574, 0xed08, 0x65c0, 0x9835, 0xe442, 0x12c4, 0x0, 0x0);
        gbc.writeMem(0x2574, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xed08, gbc.sp());
        EXPECT(0x2576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 02D5
        gbc.setState(0x73e2, 0xab79, 0xa9c0, 0x577d, 0x6001, 0x1c26, 0x0, 0x0);
        gbc.writeMem(0x73e2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xab79, gbc.sp());
        EXPECT(0x73e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 02D6
        gbc.setState(0xdc9, 0xd20a, 0x8a70, 0x7f4f, 0xaa1b, 0xc418, 0x0, 0x0);
        gbc.writeMem(0xdc9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd20a, gbc.sp());
        EXPECT(0xdcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02D7
        gbc.setState(0xc58b, 0xd018, 0x5120, 0xb026, 0xd268, 0xf51c, 0x0, 0x1);
        gbc.writeMem(0xc58b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd018, gbc.sp());
        EXPECT(0xc58d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc58b));
        EXPECT(0xe8, gbc.readMem(0xc58c));
        // CB E8 02D8
        gbc.setState(0x371a, 0x4d9f, 0x75d0, 0x5e1, 0x74b0, 0xfcc3, 0x1, 0x1);
        gbc.writeMem(0x371a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4d9f, gbc.sp());
        EXPECT(0x371c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02D9
        gbc.setState(0x3d35, 0xcfe6, 0xb1d0, 0xb7bd, 0x139d, 0x78f2, 0x0, 0x0);
        gbc.writeMem(0x3d35, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcfe6, gbc.sp());
        EXPECT(0x3d37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02DA
        gbc.setState(0x1d1c, 0xf764, 0x0, 0x6399, 0x37a7, 0xecb5, 0x0, 0x0);
        gbc.writeMem(0x1d1c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf764, gbc.sp());
        EXPECT(0x1d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 02DB
        gbc.setState(0xd6b6, 0x88fd, 0xabc0, 0xe04d, 0xffe0, 0xac5c, 0x0, 0x1);
        gbc.writeMem(0xd6b6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x88fd, gbc.sp());
        EXPECT(0xd6b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6b6));
        EXPECT(0xe8, gbc.readMem(0xd6b7));
        // CB E8 02DC
        gbc.setState(0xe590, 0x73cd, 0x1a60, 0xc83e, 0x203a, 0xcb67, 0x1, 0x1);
        gbc.writeMem(0xe590, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x73cd, gbc.sp());
        EXPECT(0xe592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe590));
        EXPECT(0xe8, gbc.readMem(0xe591));
        // CB E8 02DD
        gbc.setState(0xf29, 0x3953, 0x9230, 0xdba, 0xad74, 0xcc8b, 0x0, 0x1);
        gbc.writeMem(0xf29, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3953, gbc.sp());
        EXPECT(0xf2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02DE
        gbc.setState(0x45e3, 0xe528, 0xc170, 0x9761, 0xb413, 0x93f6, 0x1, 0x1);
        gbc.writeMem(0x45e3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe528, gbc.sp());
        EXPECT(0x45e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02DF
        gbc.setState(0xeb3e, 0xbc5c, 0x4d60, 0x65e8, 0xebb1, 0xed6, 0x0, 0x1);
        gbc.writeMem(0xeb3e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xbc5c, gbc.sp());
        EXPECT(0xeb40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb3e));
        EXPECT(0xe8, gbc.readMem(0xeb3f));
        // CB E8 02E1
        gbc.setState(0xdd4b, 0x1d30, 0x2690, 0x3809, 0x2d3b, 0x37a0, 0x0, 0x0);
        gbc.writeMem(0xdd4b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1d30, gbc.sp());
        EXPECT(0xdd4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd4b));
        EXPECT(0xe8, gbc.readMem(0xdd4c));
        // CB E8 02E2
        gbc.setState(0x6b14, 0xffcf, 0xe50, 0x5a25, 0x69ba, 0x97c7, 0x1, 0x0);
        gbc.writeMem(0x6b14, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xffcf, gbc.sp());
        EXPECT(0x6b16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02E3
        gbc.setState(0x9896, 0x2b75, 0x9b80, 0xe53a, 0xa78f, 0x572a, 0x1, 0x0);
        gbc.writeMem(0x9896, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2b75, gbc.sp());
        EXPECT(0x9898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9896));
        EXPECT(0xe8, gbc.readMem(0x9897));
        // CB E8 02E4
        gbc.setState(0x6ba3, 0xca57, 0xcae0, 0x616c, 0x95fb, 0x512b, 0x0, 0x1);
        gbc.writeMem(0x6ba3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xca57, gbc.sp());
        EXPECT(0x6ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 02E5
        gbc.setState(0x808f, 0xe97b, 0x2fd0, 0x5cf8, 0x1976, 0xf457, 0x0, 0x1);
        gbc.writeMem(0x808f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe97b, gbc.sp());
        EXPECT(0x8091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x808f));
        EXPECT(0xe8, gbc.readMem(0x8090));
        // CB E8 02E6
        gbc.setState(0x8247, 0x2318, 0xcdb0, 0x5721, 0x85e5, 0x6402, 0x1, 0x0);
        gbc.writeMem(0x8247, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2318, gbc.sp());
        EXPECT(0x8249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8247));
        EXPECT(0xe8, gbc.readMem(0x8248));
        // CB E8 02E7
        gbc.setState(0x3fb6, 0xd8ee, 0xada0, 0xda6, 0xcd30, 0x3657, 0x0, 0x0);
        gbc.writeMem(0x3fb6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd8ee, gbc.sp());
        EXPECT(0x3fb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 02E8
        gbc.setState(0x71c9, 0xdc5b, 0x5b30, 0xe172, 0xc18, 0x4687, 0x0, 0x1);
        gbc.writeMem(0x71c9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xdc5b, gbc.sp());
        EXPECT(0x71cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02E9
        gbc.setState(0x92b6, 0x63b7, 0x7210, 0xc792, 0x6e5d, 0xdaf0, 0x0, 0x0);
        gbc.writeMem(0x92b6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x63b7, gbc.sp());
        EXPECT(0x92b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92b6));
        EXPECT(0xe8, gbc.readMem(0x92b7));
        // CB E8 02EA
        gbc.setState(0xfff, 0x9a5f, 0xebd0, 0xb15f, 0xc0d8, 0xb2c7, 0x0, 0x1);
        gbc.writeMem(0xfff, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9a5f, gbc.sp());
        EXPECT(0x1001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02EB
        gbc.setState(0x7201, 0xa2f, 0x2550, 0x4f18, 0xc54b, 0xba30, 0x1, 0x0);
        gbc.writeMem(0x7201, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa2f, gbc.sp());
        EXPECT(0x7203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02EC
        gbc.setState(0xa2c7, 0x4fe1, 0x1e50, 0xd935, 0x4374, 0xf767, 0x0, 0x0);
        gbc.writeMem(0xa2c7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4fe1, gbc.sp());
        EXPECT(0xa2c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c7));
        EXPECT(0xe8, gbc.readMem(0xa2c8));
        // CB E8 02ED
        gbc.setState(0x8ae9, 0xb748, 0x7730, 0x77b5, 0x249d, 0x96dd, 0x1, 0x0);
        gbc.writeMem(0x8ae9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb748, gbc.sp());
        EXPECT(0x8aeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae9));
        EXPECT(0xe8, gbc.readMem(0x8aea));
        // CB E8 02EE
        gbc.setState(0x5451, 0x8e51, 0x2180, 0x798a, 0x7b81, 0x66f9, 0x1, 0x0);
        gbc.writeMem(0x5451, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8e51, gbc.sp());
        EXPECT(0x5453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 02EF
        gbc.setState(0xe9b5, 0xd59c, 0x2150, 0x7f66, 0xf019, 0x71dd, 0x1, 0x0);
        gbc.writeMem(0xe9b5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd59c, gbc.sp());
        EXPECT(0xe9b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9b5));
        EXPECT(0xe8, gbc.readMem(0xe9b6));
        // CB E8 02F0
        gbc.setState(0xc14e, 0x991d, 0xdce0, 0xdaae, 0x501e, 0xd0de, 0x1, 0x0);
        gbc.writeMem(0xc14e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x991d, gbc.sp());
        EXPECT(0xc150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc14e));
        EXPECT(0xe8, gbc.readMem(0xc14f));
        // CB E8 02F1
        gbc.setState(0x20cc, 0xe20, 0x3d30, 0xaae7, 0x65bc, 0x35cf, 0x0, 0x0);
        gbc.writeMem(0x20cc, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe20, gbc.sp());
        EXPECT(0x20ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02F2
        gbc.setState(0xc1d5, 0xab95, 0x3db0, 0x30e, 0x766f, 0xdbf8, 0x1, 0x0);
        gbc.writeMem(0xc1d5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xab95, gbc.sp());
        EXPECT(0xc1d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1d5));
        EXPECT(0xe8, gbc.readMem(0xc1d6));
        // CB E8 02F3
        gbc.setState(0x8b4e, 0x5fd2, 0xc1a0, 0xa69d, 0xd250, 0x9bdf, 0x0, 0x0);
        gbc.writeMem(0x8b4e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5fd2, gbc.sp());
        EXPECT(0x8b50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b4e));
        EXPECT(0xe8, gbc.readMem(0x8b4f));
        // CB E8 02F5
        gbc.setState(0x3917, 0x5970, 0x20, 0xdbab, 0x9689, 0xa95d, 0x0, 0x0);
        gbc.writeMem(0x3917, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5970, gbc.sp());
        EXPECT(0x3919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 02F6
        gbc.setState(0x2b26, 0x991b, 0x1850, 0x27da, 0x1511, 0xec1b, 0x1, 0x0);
        gbc.writeMem(0x2b26, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x991b, gbc.sp());
        EXPECT(0x2b28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02F7
        gbc.setState(0x7475, 0xa092, 0xc4c0, 0xce8b, 0x1581, 0x1ce3, 0x1, 0x0);
        gbc.writeMem(0x7475, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa092, gbc.sp());
        EXPECT(0x7477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 02F8
        gbc.setState(0x8f0e, 0x5acd, 0x730, 0x141b, 0x418b, 0xdfee, 0x1, 0x0);
        gbc.writeMem(0x8f0e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5acd, gbc.sp());
        EXPECT(0x8f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f0e));
        EXPECT(0xe8, gbc.readMem(0x8f0f));
        // CB E8 02F9
        gbc.setState(0xc6a2, 0x50b4, 0xf7e0, 0x39cc, 0x831a, 0x74a4, 0x0, 0x1);
        gbc.writeMem(0xc6a2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x50b4, gbc.sp());
        EXPECT(0xc6a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6a2));
        EXPECT(0xe8, gbc.readMem(0xc6a3));
        // CB E8 02FA
        gbc.setState(0x163a, 0xf6dd, 0x1650, 0x30c0, 0xdd90, 0x509d, 0x1, 0x0);
        gbc.writeMem(0x163a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf6dd, gbc.sp());
        EXPECT(0x163c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02FB
        gbc.setState(0x8c3f, 0xc501, 0x4d90, 0xfaf7, 0x54ec, 0xe46, 0x0, 0x1);
        gbc.writeMem(0x8c3f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc501, gbc.sp());
        EXPECT(0x8c41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c3f));
        EXPECT(0xe8, gbc.readMem(0x8c40));
        // CB E8 02FC
        gbc.setState(0x3bc5, 0xf6c1, 0x6630, 0x6952, 0x9410, 0x2d87, 0x1, 0x0);
        gbc.writeMem(0x3bc5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf6c1, gbc.sp());
        EXPECT(0x3bc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02FD
        gbc.setState(0x3c68, 0x337d, 0x9c30, 0x7fbc, 0x9c2e, 0x7d63, 0x0, 0x0);
        gbc.writeMem(0x3c68, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x337d, gbc.sp());
        EXPECT(0x3c6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02FE
        gbc.setState(0x535f, 0xcb9d, 0x1cb0, 0xff72, 0x3f41, 0x92aa, 0x1, 0x0);
        gbc.writeMem(0x535f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xcb9d, gbc.sp());
        EXPECT(0x5361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 02FF
        gbc.setState(0xbfcc, 0x2ad9, 0x8780, 0xdd7d, 0x11d7, 0xc7b2, 0x0, 0x0);
        gbc.writeMem(0xbfcc, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2ad9, gbc.sp());
        EXPECT(0xbfce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfcc));
        EXPECT(0xe8, gbc.readMem(0xbfcd));
        // CB E8 0300
        gbc.setState(0xce4a, 0x58c8, 0x3900, 0xf3d6, 0x5867, 0x16f5, 0x0, 0x0);
        gbc.writeMem(0xce4a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x58c8, gbc.sp());
        EXPECT(0xce4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce4a));
        EXPECT(0xe8, gbc.readMem(0xce4b));
        // CB E8 0301
        gbc.setState(0xcbbd, 0x28d6, 0x430, 0x9d81, 0xbd0e, 0x9742, 0x0, 0x1);
        gbc.writeMem(0xcbbd, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x28d6, gbc.sp());
        EXPECT(0xcbbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbbd));
        EXPECT(0xe8, gbc.readMem(0xcbbe));
        // CB E8 0302
        gbc.setState(0x8b97, 0xe5d0, 0x5a20, 0x9de5, 0x75f8, 0x388, 0x0, 0x0);
        gbc.writeMem(0x8b97, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe5d0, gbc.sp());
        EXPECT(0x8b99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b97));
        EXPECT(0xe8, gbc.readMem(0x8b98));
        // CB E8 0303
        gbc.setState(0x6537, 0x7b6, 0x7a20, 0x73, 0x71b7, 0x7110, 0x0, 0x0);
        gbc.writeMem(0x6537, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7b6, gbc.sp());
        EXPECT(0x6539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0304
        gbc.setState(0x114b, 0x59e3, 0xbb50, 0x64e8, 0x1ab, 0x475e, 0x0, 0x0);
        gbc.writeMem(0x114b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x59e3, gbc.sp());
        EXPECT(0x114d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0305
        gbc.setState(0x68ce, 0xba5d, 0x1c30, 0xb95c, 0x578e, 0x9636, 0x1, 0x0);
        gbc.writeMem(0x68ce, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xba5d, gbc.sp());
        EXPECT(0x68d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0306
        gbc.setState(0x377a, 0x969, 0x8e40, 0x13b0, 0x46d0, 0x34b8, 0x1, 0x0);
        gbc.writeMem(0x377a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x969, gbc.sp());
        EXPECT(0x377c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0307
        gbc.setState(0xd171, 0xee0f, 0x9030, 0xd3a6, 0x57c1, 0x88c3, 0x1, 0x1);
        gbc.writeMem(0xd171, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xee0f, gbc.sp());
        EXPECT(0xd173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd171));
        EXPECT(0xe8, gbc.readMem(0xd172));
        // CB E8 0308
        gbc.setState(0xa7dd, 0xa56, 0x940, 0xef41, 0x2d8a, 0x6543, 0x1, 0x0);
        gbc.writeMem(0xa7dd, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa56, gbc.sp());
        EXPECT(0xa7df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7dd));
        EXPECT(0xe8, gbc.readMem(0xa7de));
        // CB E8 0309
        gbc.setState(0xe92, 0xbc68, 0xed0, 0xe312, 0xb1b6, 0xbd8, 0x0, 0x1);
        gbc.writeMem(0xe92, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbc68, gbc.sp());
        EXPECT(0xe94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 030A
        gbc.setState(0x568e, 0x56d1, 0x9c50, 0xdbff, 0x4c3, 0x60e8, 0x0, 0x1);
        gbc.writeMem(0x568e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x56d1, gbc.sp());
        EXPECT(0x5690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 030B
        gbc.setState(0x266a, 0x39d7, 0xc090, 0x9ab4, 0xfee7, 0xb0d2, 0x1, 0x1);
        gbc.writeMem(0x266a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x39d7, gbc.sp());
        EXPECT(0x266c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 030C
        gbc.setState(0x421e, 0xb549, 0x2f30, 0x1810, 0x3ecf, 0x9304, 0x1, 0x0);
        gbc.writeMem(0x421e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb549, gbc.sp());
        EXPECT(0x4220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 030D
        gbc.setState(0x65ef, 0x1b1f, 0x1ea0, 0x2261, 0x7cbf, 0x2274, 0x0, 0x0);
        gbc.writeMem(0x65ef, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1b1f, gbc.sp());
        EXPECT(0x65f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 030E
        gbc.setState(0xe390, 0xd2a, 0x5730, 0x26cd, 0x193a, 0xabd5, 0x1, 0x0);
        gbc.writeMem(0xe390, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd2a, gbc.sp());
        EXPECT(0xe392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe390));
        EXPECT(0xe8, gbc.readMem(0xe391));
        // CB E8 030F
        gbc.setState(0xca4f, 0x6737, 0xa010, 0x8896, 0xbb7c, 0xb82b, 0x1, 0x0);
        gbc.writeMem(0xca4f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6737, gbc.sp());
        EXPECT(0xca51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca4f));
        EXPECT(0xe8, gbc.readMem(0xca50));
        // CB E8 0310
        gbc.setState(0x61c5, 0xcfc7, 0x2270, 0x44e, 0x17c4, 0x38f8, 0x0, 0x1);
        gbc.writeMem(0x61c5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xcfc7, gbc.sp());
        EXPECT(0x61c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0311
        gbc.setState(0x1c67, 0xbe82, 0x6700, 0x61cd, 0xd6df, 0x84e1, 0x0, 0x1);
        gbc.writeMem(0x1c67, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbe82, gbc.sp());
        EXPECT(0x1c69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0312
        gbc.setState(0x3e39, 0xd4f8, 0xdc0, 0xb5a4, 0x2555, 0xd4c8, 0x1, 0x1);
        gbc.writeMem(0x3e39, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd4f8, gbc.sp());
        EXPECT(0x3e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0313
        gbc.setState(0x44eb, 0xf931, 0x1bf0, 0xdd92, 0xa317, 0x3586, 0x0, 0x1);
        gbc.writeMem(0x44eb, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf931, gbc.sp());
        EXPECT(0x44ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0314
        gbc.setState(0x1508, 0x3d1a, 0x2560, 0x5587, 0x57a3, 0x3423, 0x1, 0x0);
        gbc.writeMem(0x1508, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3d1a, gbc.sp());
        EXPECT(0x150a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0315
        gbc.setState(0x3fd, 0x10c9, 0xe4c0, 0x3d4a, 0x87f9, 0x3b66, 0x0, 0x0);
        gbc.writeMem(0x3fd, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x10c9, gbc.sp());
        EXPECT(0x3ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0316
        gbc.setState(0x770a, 0xfe0, 0xdd30, 0x9882, 0xa44e, 0xf0a0, 0x1, 0x1);
        gbc.writeMem(0x770a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfe0, gbc.sp());
        EXPECT(0x770c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0317
        gbc.setState(0x2d77, 0x79f, 0x9ab0, 0x107c, 0x56ef, 0xa5a6, 0x0, 0x1);
        gbc.writeMem(0x2d77, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x79f, gbc.sp());
        EXPECT(0x2d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0318
        gbc.setState(0x644, 0xe2e3, 0xfdc0, 0x774a, 0xe169, 0x2bdb, 0x1, 0x1);
        gbc.writeMem(0x644, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe2e3, gbc.sp());
        EXPECT(0x646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0319
        gbc.setState(0x92b4, 0x15a5, 0xede0, 0xb2b, 0xce02, 0x36b3, 0x1, 0x0);
        gbc.writeMem(0x92b4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x15a5, gbc.sp());
        EXPECT(0x92b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92b4));
        EXPECT(0xe8, gbc.readMem(0x92b5));
        // CB E8 031A
        gbc.setState(0x6f38, 0xc0e0, 0x9f30, 0xfc45, 0xca55, 0xe8df, 0x1, 0x1);
        gbc.writeMem(0x6f38, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc0e0, gbc.sp());
        EXPECT(0x6f3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 031B
        gbc.setState(0xcd72, 0x7161, 0x8fd0, 0xd763, 0x2083, 0x737c, 0x0, 0x1);
        gbc.writeMem(0xcd72, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7161, gbc.sp());
        EXPECT(0xcd74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd72));
        EXPECT(0xe8, gbc.readMem(0xcd73));
        // CB E8 031C
        gbc.setState(0x7cb, 0xe419, 0xa470, 0x5f0c, 0x4f01, 0xe9ef, 0x1, 0x1);
        gbc.writeMem(0x7cb, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe419, gbc.sp());
        EXPECT(0x7cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 031D
        gbc.setState(0xa400, 0x9cf6, 0xf260, 0xdf4b, 0x39f, 0xd120, 0x0, 0x1);
        gbc.writeMem(0xa400, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9cf6, gbc.sp());
        EXPECT(0xa402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa400));
        EXPECT(0xe8, gbc.readMem(0xa401));
        // CB E8 031E
        gbc.setState(0x553a, 0x4baf, 0x1830, 0x8f8f, 0x1062, 0x1fb5, 0x0, 0x0);
        gbc.writeMem(0x553a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4baf, gbc.sp());
        EXPECT(0x553c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0320
        gbc.setState(0x39c5, 0xac91, 0x1d10, 0x3ea3, 0x35e8, 0xb7a6, 0x0, 0x0);
        gbc.writeMem(0x39c5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xac91, gbc.sp());
        EXPECT(0x39c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0321
        gbc.setState(0x243e, 0x5042, 0xc1a0, 0x5505, 0xc9ed, 0x296, 0x0, 0x0);
        gbc.writeMem(0x243e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5042, gbc.sp());
        EXPECT(0x2440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0322
        gbc.setState(0x5fd, 0x2ff5, 0x5520, 0x7d8, 0x9f7d, 0x88d6, 0x1, 0x1);
        gbc.writeMem(0x5fd, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2ff5, gbc.sp());
        EXPECT(0x5ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0323
        gbc.setState(0x3e62, 0xdde0, 0x8ad0, 0x99a4, 0x712c, 0xfd54, 0x1, 0x1);
        gbc.writeMem(0x3e62, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xdde0, gbc.sp());
        EXPECT(0x3e64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0324
        gbc.setState(0xb5f, 0xda16, 0xc8d0, 0x2114, 0x5b80, 0x3c71, 0x1, 0x1);
        gbc.writeMem(0xb5f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xda16, gbc.sp());
        EXPECT(0xb61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0325
        gbc.setState(0x3710, 0x7a9d, 0x1830, 0xe501, 0x2a55, 0x51c4, 0x0, 0x1);
        gbc.writeMem(0x3710, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7a9d, gbc.sp());
        EXPECT(0x3712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0326
        gbc.setState(0x3e49, 0x67dd, 0xdae0, 0x336e, 0x2755, 0xa259, 0x1, 0x0);
        gbc.writeMem(0x3e49, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x67dd, gbc.sp());
        EXPECT(0x3e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0327
        gbc.setState(0x1ea7, 0x6970, 0xf5f0, 0x1a91, 0xd1c7, 0x1908, 0x0, 0x1);
        gbc.writeMem(0x1ea7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6970, gbc.sp());
        EXPECT(0x1ea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0328
        gbc.setState(0x41eb, 0xa556, 0x8290, 0x601f, 0x2041, 0x80e8, 0x0, 0x0);
        gbc.writeMem(0x41eb, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa556, gbc.sp());
        EXPECT(0x41ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0329
        gbc.setState(0x462a, 0x6f59, 0x8190, 0x5817, 0xf4d2, 0xc9c7, 0x0, 0x0);
        gbc.writeMem(0x462a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6f59, gbc.sp());
        EXPECT(0x462c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 032A
        gbc.setState(0x70da, 0x7d85, 0xb650, 0x582d, 0x50c0, 0xc208, 0x1, 0x0);
        gbc.writeMem(0x70da, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7d85, gbc.sp());
        EXPECT(0x70dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 032B
        gbc.setState(0x3959, 0x448a, 0x70a0, 0xfeb8, 0x2df8, 0x5036, 0x1, 0x0);
        gbc.writeMem(0x3959, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x448a, gbc.sp());
        EXPECT(0x395b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 032D
        gbc.setState(0x8ab3, 0x1391, 0x1120, 0x22fb, 0x37e0, 0xc8c6, 0x1, 0x0);
        gbc.writeMem(0x8ab3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1391, gbc.sp());
        EXPECT(0x8ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab3));
        EXPECT(0xe8, gbc.readMem(0x8ab4));
        // CB E8 032E
        gbc.setState(0x5309, 0xd220, 0xba60, 0x4287, 0xa20f, 0xc49f, 0x1, 0x1);
        gbc.writeMem(0x5309, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd220, gbc.sp());
        EXPECT(0x530b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 032F
        gbc.setState(0xa5fe, 0x6a50, 0xbe80, 0x31f3, 0x79ad, 0x3b29, 0x1, 0x0);
        gbc.writeMem(0xa5fe, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6a50, gbc.sp());
        EXPECT(0xa600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5fe));
        EXPECT(0xe8, gbc.readMem(0xa5ff));
        // CB E8 0330
        gbc.setState(0x5df4, 0xcff1, 0xca00, 0xb499, 0xd6ce, 0xdf1d, 0x1, 0x0);
        gbc.writeMem(0x5df4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcff1, gbc.sp());
        EXPECT(0x5df6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0331
        gbc.setState(0x5c1, 0x3e2f, 0x5010, 0x384e, 0xcc41, 0xb00c, 0x1, 0x1);
        gbc.writeMem(0x5c1, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3e2f, gbc.sp());
        EXPECT(0x5c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0332
        gbc.setState(0x2a5, 0xdc99, 0xb040, 0x529f, 0xa40, 0x67bd, 0x0, 0x0);
        gbc.writeMem(0x2a5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdc99, gbc.sp());
        EXPECT(0x2a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0333
        gbc.setState(0x8209, 0x7692, 0x5660, 0xb24b, 0x3bcc, 0x7479, 0x0, 0x0);
        gbc.writeMem(0x8209, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7692, gbc.sp());
        EXPECT(0x820b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8209));
        EXPECT(0xe8, gbc.readMem(0x820a));
        // CB E8 0334
        gbc.setState(0xedfe, 0xeab, 0x6d60, 0xe627, 0xf7db, 0x7673, 0x1, 0x1);
        gbc.writeMem(0xedfe, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xeab, gbc.sp());
        EXPECT(0xee00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedfe));
        EXPECT(0xe8, gbc.readMem(0xedff));
        // CB E8 0335
        gbc.setState(0x775, 0x2747, 0x3190, 0x2bcf, 0xd298, 0x4bd6, 0x0, 0x1);
        gbc.writeMem(0x775, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2747, gbc.sp());
        EXPECT(0x777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0336
        gbc.setState(0xd3ff, 0x576b, 0xdad0, 0x340e, 0x6575, 0x11f3, 0x0, 0x0);
        gbc.writeMem(0xd3ff, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x576b, gbc.sp());
        EXPECT(0xd401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ff));
        EXPECT(0xe8, gbc.readMem(0xd400));
        // CB E8 0337
        gbc.setState(0x51eb, 0xc202, 0x59e0, 0x3266, 0xcb24, 0xaf4b, 0x0, 0x0);
        gbc.writeMem(0x51eb, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc202, gbc.sp());
        EXPECT(0x51ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0338
        gbc.setState(0x1eb, 0xf068, 0x4ae0, 0x2953, 0x9334, 0xf658, 0x0, 0x1);
        gbc.writeMem(0x1eb, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf068, gbc.sp());
        EXPECT(0x1ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0339
        gbc.setState(0xa7c3, 0xbefb, 0x9490, 0x7f16, 0x431b, 0xc96c, 0x1, 0x1);
        gbc.writeMem(0xa7c3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbefb, gbc.sp());
        EXPECT(0xa7c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7c3));
        EXPECT(0xe8, gbc.readMem(0xa7c4));
        // CB E8 033A
        gbc.setState(0xde01, 0x8cd5, 0x1e00, 0x9536, 0xbaa3, 0xa1e1, 0x1, 0x1);
        gbc.writeMem(0xde01, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8cd5, gbc.sp());
        EXPECT(0xde03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde01));
        EXPECT(0xe8, gbc.readMem(0xde02));
        // CB E8 033B
        gbc.setState(0x885d, 0x58b2, 0x3e80, 0xff40, 0x4ed2, 0x524c, 0x0, 0x1);
        gbc.writeMem(0x885d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x58b2, gbc.sp());
        EXPECT(0x885f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x885d));
        EXPECT(0xe8, gbc.readMem(0x885e));
        // CB E8 033C
        gbc.setState(0xb643, 0x5448, 0x4a80, 0x4bfc, 0xd0e0, 0xf38d, 0x1, 0x0);
        gbc.writeMem(0xb643, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5448, gbc.sp());
        EXPECT(0xb645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb643));
        EXPECT(0xe8, gbc.readMem(0xb644));
        // CB E8 033D
        gbc.setState(0x1d12, 0xc33c, 0x93b0, 0xf678, 0x81a8, 0x833f, 0x0, 0x0);
        gbc.writeMem(0x1d12, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc33c, gbc.sp());
        EXPECT(0x1d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 033E
        gbc.setState(0x763, 0x18b2, 0x53c0, 0xfed3, 0x3935, 0xf81, 0x0, 0x1);
        gbc.writeMem(0x763, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x18b2, gbc.sp());
        EXPECT(0x765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 033F
        gbc.setState(0x1220, 0x32d, 0x3c00, 0x3565, 0x2855, 0x2481, 0x0, 0x1);
        gbc.writeMem(0x1220, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x32d, gbc.sp());
        EXPECT(0x1222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0340
        gbc.setState(0x9abb, 0xf350, 0x8780, 0xdbe5, 0x84ef, 0xe9af, 0x0, 0x0);
        gbc.writeMem(0x9abb, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf350, gbc.sp());
        EXPECT(0x9abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abb));
        EXPECT(0xe8, gbc.readMem(0x9abc));
        // CB E8 0341
        gbc.setState(0x9ffa, 0x211d, 0x7a80, 0x68c9, 0x52ef, 0xedbc, 0x1, 0x0);
        gbc.writeMem(0x9ffa, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x211d, gbc.sp());
        EXPECT(0x9ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ffa));
        EXPECT(0xe8, gbc.readMem(0x9ffb));
        // CB E8 0342
        gbc.setState(0x8bd5, 0xd0c0, 0x78b0, 0xec9, 0x57bf, 0x26dd, 0x1, 0x1);
        gbc.writeMem(0x8bd5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd0c0, gbc.sp());
        EXPECT(0x8bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd5));
        EXPECT(0xe8, gbc.readMem(0x8bd6));
        // CB E8 0344
        gbc.setState(0xa5c, 0x9cb1, 0xeb10, 0x1f6a, 0x782e, 0x92c6, 0x0, 0x0);
        gbc.writeMem(0xa5c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9cb1, gbc.sp());
        EXPECT(0xa5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0345
        gbc.setState(0x67c3, 0xe04b, 0xcfc0, 0xd8e3, 0xf9ce, 0x951e, 0x1, 0x0);
        gbc.writeMem(0x67c3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe04b, gbc.sp());
        EXPECT(0x67c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0346
        gbc.setState(0xd5b2, 0xc3b6, 0xf9d0, 0x1f0a, 0xcfb3, 0xfd0b, 0x0, 0x1);
        gbc.writeMem(0xd5b2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc3b6, gbc.sp());
        EXPECT(0xd5b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b2));
        EXPECT(0xe8, gbc.readMem(0xd5b3));
        // CB E8 0347
        gbc.setState(0x36be, 0x32bd, 0x2fa0, 0x1784, 0x494b, 0x3638, 0x1, 0x0);
        gbc.writeMem(0x36be, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x32bd, gbc.sp());
        EXPECT(0x36c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0348
        gbc.setState(0x6b8a, 0x795a, 0x12e0, 0xfb15, 0x8b8d, 0x762f, 0x1, 0x0);
        gbc.writeMem(0x6b8a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x795a, gbc.sp());
        EXPECT(0x6b8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0349
        gbc.setState(0x32bd, 0xd9a5, 0xa670, 0xa839, 0x8b1, 0x98dd, 0x0, 0x1);
        gbc.writeMem(0x32bd, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd9a5, gbc.sp());
        EXPECT(0x32bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 034B
        gbc.setState(0x3425, 0x669a, 0x4580, 0xf79f, 0x609a, 0xeff, 0x0, 0x0);
        gbc.writeMem(0x3425, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x669a, gbc.sp());
        EXPECT(0x3427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 034C
        gbc.setState(0xbe4, 0xe2d9, 0x6950, 0x2510, 0xb364, 0xe2d, 0x1, 0x0);
        gbc.writeMem(0xbe4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe2d9, gbc.sp());
        EXPECT(0xbe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 034D
        gbc.setState(0x3726, 0xa9c4, 0xb070, 0xf3ff, 0xcb11, 0xcb24, 0x0, 0x0);
        gbc.writeMem(0x3726, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa9c4, gbc.sp());
        EXPECT(0x3728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 034E
        gbc.setState(0x40f4, 0xa250, 0x4000, 0x4965, 0x7d3b, 0x1047, 0x0, 0x1);
        gbc.writeMem(0x40f4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa250, gbc.sp());
        EXPECT(0x40f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 034F
        gbc.setState(0x1214, 0xd117, 0x24d0, 0xed3e, 0x95d8, 0x569, 0x0, 0x0);
        gbc.writeMem(0x1214, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd117, gbc.sp());
        EXPECT(0x1216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0350
        gbc.setState(0xcc94, 0xc3f3, 0x4fd0, 0x5e0c, 0x9e0, 0x956c, 0x1, 0x0);
        gbc.writeMem(0xcc94, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc3f3, gbc.sp());
        EXPECT(0xcc96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc94));
        EXPECT(0xe8, gbc.readMem(0xcc95));
        // CB E8 0351
        gbc.setState(0xe14a, 0xa3f5, 0xf4c0, 0x871a, 0xce73, 0xb249, 0x0, 0x1);
        gbc.writeMem(0xe14a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa3f5, gbc.sp());
        EXPECT(0xe14c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe14a));
        EXPECT(0xe8, gbc.readMem(0xe14b));
        // CB E8 0352
        gbc.setState(0xed9e, 0x1c3d, 0x8f50, 0x3882, 0x13c1, 0x6851, 0x0, 0x1);
        gbc.writeMem(0xed9e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1c3d, gbc.sp());
        EXPECT(0xeda0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed9e));
        EXPECT(0xe8, gbc.readMem(0xed9f));
        // CB E8 0353
        gbc.setState(0x960e, 0x9f9e, 0xd240, 0x9b3e, 0xaec9, 0xb86c, 0x1, 0x0);
        gbc.writeMem(0x960e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9f9e, gbc.sp());
        EXPECT(0x9610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x960e));
        EXPECT(0xe8, gbc.readMem(0x960f));
        // CB E8 0354
        gbc.setState(0x1b7a, 0xcde7, 0x7ee0, 0x82b6, 0x6da9, 0xc6bc, 0x0, 0x0);
        gbc.writeMem(0x1b7a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xcde7, gbc.sp());
        EXPECT(0x1b7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0355
        gbc.setState(0x1aa6, 0x9954, 0x7d30, 0x13fc, 0x8fca, 0x7ac7, 0x0, 0x1);
        gbc.writeMem(0x1aa6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9954, gbc.sp());
        EXPECT(0x1aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0356
        gbc.setState(0x557, 0xce93, 0xc410, 0x78a3, 0x1b6b, 0x330d, 0x1, 0x0);
        gbc.writeMem(0x557, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xce93, gbc.sp());
        EXPECT(0x559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0357
        gbc.setState(0x6df2, 0x579, 0x8ab0, 0x546b, 0xec9c, 0x3ab2, 0x0, 0x0);
        gbc.writeMem(0x6df2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x579, gbc.sp());
        EXPECT(0x6df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0358
        gbc.setState(0xcc72, 0x2d08, 0x4dd0, 0x9af5, 0xe79, 0xe291, 0x0, 0x0);
        gbc.writeMem(0xcc72, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2d08, gbc.sp());
        EXPECT(0xcc74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc72));
        EXPECT(0xe8, gbc.readMem(0xcc73));
        // CB E8 0359
        gbc.setState(0x4210, 0x58cc, 0x5990, 0x834e, 0xd919, 0x2928, 0x0, 0x1);
        gbc.writeMem(0x4210, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x58cc, gbc.sp());
        EXPECT(0x4212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 035A
        gbc.setState(0xcab5, 0xcb5e, 0x7200, 0x4e47, 0xeb35, 0x4abd, 0x0, 0x1);
        gbc.writeMem(0xcab5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xcb5e, gbc.sp());
        EXPECT(0xcab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab5));
        EXPECT(0xe8, gbc.readMem(0xcab6));
        // CB E8 035B
        gbc.setState(0x2807, 0x6431, 0xe800, 0xd32, 0xc2ab, 0xa947, 0x1, 0x0);
        gbc.writeMem(0x2807, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6431, gbc.sp());
        EXPECT(0x2809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 035D
        gbc.setState(0x7c2f, 0x7d5f, 0x4fd0, 0x77f1, 0x4f48, 0x7456, 0x1, 0x0);
        gbc.writeMem(0x7c2f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7d5f, gbc.sp());
        EXPECT(0x7c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 035E
        gbc.setState(0xb76f, 0x53d0, 0xdd00, 0xb0a0, 0x7e05, 0x3dd9, 0x0, 0x0);
        gbc.writeMem(0xb76f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x53d0, gbc.sp());
        EXPECT(0xb771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb76f));
        EXPECT(0xe8, gbc.readMem(0xb770));
        // CB E8 035F
        gbc.setState(0xbc02, 0x8fe, 0x92f0, 0x1419, 0x9347, 0xe6e, 0x0, 0x0);
        gbc.writeMem(0xbc02, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8fe, gbc.sp());
        EXPECT(0xbc04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc02));
        EXPECT(0xe8, gbc.readMem(0xbc03));
        // CB E8 0360
        gbc.setState(0xeaa6, 0x7685, 0x2140, 0x71f4, 0xcc7b, 0x5a60, 0x1, 0x1);
        gbc.writeMem(0xeaa6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7685, gbc.sp());
        EXPECT(0xeaa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaa6));
        EXPECT(0xe8, gbc.readMem(0xeaa7));
        // CB E8 0361
        gbc.setState(0x5b42, 0xe420, 0x7860, 0xbecd, 0xfdba, 0x7035, 0x1, 0x1);
        gbc.writeMem(0x5b42, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe420, gbc.sp());
        EXPECT(0x5b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0362
        gbc.setState(0x791e, 0x5d4, 0x48d0, 0x35f8, 0x26db, 0x2d7d, 0x1, 0x0);
        gbc.writeMem(0x791e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5d4, gbc.sp());
        EXPECT(0x7920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0363
        gbc.setState(0x44a9, 0xc384, 0xc380, 0x719, 0xa0bf, 0x6dc1, 0x0, 0x0);
        gbc.writeMem(0x44a9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc384, gbc.sp());
        EXPECT(0x44ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0364
        gbc.setState(0xff5, 0x58ed, 0x77e0, 0xed7, 0x1590, 0x636f, 0x0, 0x0);
        gbc.writeMem(0xff5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x58ed, gbc.sp());
        EXPECT(0xff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0365
        gbc.setState(0xa658, 0xa3e9, 0xfbb0, 0x3724, 0x489a, 0x9a0e, 0x1, 0x0);
        gbc.writeMem(0xa658, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa3e9, gbc.sp());
        EXPECT(0xa65a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa658));
        EXPECT(0xe8, gbc.readMem(0xa659));
        // CB E8 0366
        gbc.setState(0x509, 0xe551, 0xcb30, 0x59bd, 0x909, 0xba63, 0x1, 0x0);
        gbc.writeMem(0x509, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe551, gbc.sp());
        EXPECT(0x50b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0367
        gbc.setState(0x7a3f, 0xfc96, 0x580, 0x3610, 0xfb1f, 0x37a9, 0x0, 0x0);
        gbc.writeMem(0x7a3f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfc96, gbc.sp());
        EXPECT(0x7a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0368
        gbc.setState(0xc61e, 0xa938, 0x8eb0, 0xa0b4, 0x3e05, 0xb35f, 0x1, 0x0);
        gbc.writeMem(0xc61e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa938, gbc.sp());
        EXPECT(0xc620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc61e));
        EXPECT(0xe8, gbc.readMem(0xc61f));
        // CB E8 0369
        gbc.setState(0x833c, 0xa56a, 0xc7d0, 0x42fc, 0x751e, 0xa2df, 0x1, 0x0);
        gbc.writeMem(0x833c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa56a, gbc.sp());
        EXPECT(0x833e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x833c));
        EXPECT(0xe8, gbc.readMem(0x833d));
        // CB E8 036A
        gbc.setState(0xbfcf, 0x9fd0, 0xf8d0, 0xeb45, 0xd3f6, 0x6b7f, 0x1, 0x1);
        gbc.writeMem(0xbfcf, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9fd0, gbc.sp());
        EXPECT(0xbfd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfcf));
        EXPECT(0xe8, gbc.readMem(0xbfd0));
        // CB E8 036B
        gbc.setState(0xda22, 0xb1a8, 0xfc30, 0xabd6, 0x5520, 0x598e, 0x1, 0x1);
        gbc.writeMem(0xda22, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb1a8, gbc.sp());
        EXPECT(0xda24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda22));
        EXPECT(0xe8, gbc.readMem(0xda23));
        // CB E8 036C
        gbc.setState(0x98dc, 0x72c2, 0x8680, 0xdcbc, 0x51a2, 0x5bcf, 0x1, 0x0);
        gbc.writeMem(0x98dc, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x72c2, gbc.sp());
        EXPECT(0x98de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98dc));
        EXPECT(0xe8, gbc.readMem(0x98dd));
        // CB E8 036E
        gbc.setState(0x2afb, 0xf787, 0xfc50, 0x2aa7, 0xe459, 0x7220, 0x1, 0x1);
        gbc.writeMem(0x2afb, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf787, gbc.sp());
        EXPECT(0x2afd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 036F
        gbc.setState(0xc11e, 0x22ce, 0x52e0, 0x39e2, 0x38b0, 0xdf81, 0x1, 0x0);
        gbc.writeMem(0xc11e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x22ce, gbc.sp());
        EXPECT(0xc120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc11e));
        EXPECT(0xe8, gbc.readMem(0xc11f));
        // CB E8 0370
        gbc.setState(0x166d, 0x339d, 0x6120, 0x5328, 0x11c9, 0xea33, 0x0, 0x1);
        gbc.writeMem(0x166d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x339d, gbc.sp());
        EXPECT(0x166f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0371
        gbc.setState(0x6d9e, 0x5277, 0xec60, 0xcbb7, 0x1c4c, 0x1ad2, 0x1, 0x0);
        gbc.writeMem(0x6d9e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5277, gbc.sp());
        EXPECT(0x6da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0372
        gbc.setState(0x9da0, 0x200, 0x8330, 0x344e, 0x92b, 0x7ef8, 0x1, 0x1);
        gbc.writeMem(0x9da0, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x200, gbc.sp());
        EXPECT(0x9da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9da0));
        EXPECT(0xe8, gbc.readMem(0x9da1));
        // CB E8 0373
        gbc.setState(0xbdb, 0x47a5, 0x10d0, 0xf43f, 0xb1af, 0xe971, 0x1, 0x0);
        gbc.writeMem(0xbdb, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x47a5, gbc.sp());
        EXPECT(0xbdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0374
        gbc.setState(0xa7b5, 0x81b6, 0xb7c0, 0xea26, 0xda3e, 0x4c58, 0x0, 0x1);
        gbc.writeMem(0xa7b5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x81b6, gbc.sp());
        EXPECT(0xa7b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7b5));
        EXPECT(0xe8, gbc.readMem(0xa7b6));
        // CB E8 0375
        gbc.setState(0x899b, 0x190f, 0x7570, 0x29d6, 0xef17, 0xc9f3, 0x1, 0x0);
        gbc.writeMem(0x899b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x190f, gbc.sp());
        EXPECT(0x899d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x899b));
        EXPECT(0xe8, gbc.readMem(0x899c));
        // CB E8 0376
        gbc.setState(0xbb31, 0x2d2e, 0x32c0, 0xc3e4, 0xdbb4, 0x7982, 0x0, 0x1);
        gbc.writeMem(0xbb31, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2d2e, gbc.sp());
        EXPECT(0xbb33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb31));
        EXPECT(0xe8, gbc.readMem(0xbb32));
        // CB E8 0377
        gbc.setState(0xbc0f, 0xdbda, 0x6780, 0xc463, 0x689f, 0x4fb8, 0x1, 0x1);
        gbc.writeMem(0xbc0f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xdbda, gbc.sp());
        EXPECT(0xbc11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc0f));
        EXPECT(0xe8, gbc.readMem(0xbc10));
        // CB E8 0378
        gbc.setState(0x1e67, 0x9c44, 0x40e0, 0xf139, 0xe01e, 0xee1, 0x1, 0x1);
        gbc.writeMem(0x1e67, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9c44, gbc.sp());
        EXPECT(0x1e69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 037A
        gbc.setState(0x1bd7, 0x52de, 0x35a0, 0x2707, 0x9c98, 0xd202, 0x0, 0x1);
        gbc.writeMem(0x1bd7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x52de, gbc.sp());
        EXPECT(0x1bd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 037B
        gbc.setState(0x535b, 0x2c27, 0xda00, 0xc7ac, 0x1f3, 0x8ea, 0x1, 0x0);
        gbc.writeMem(0x535b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2c27, gbc.sp());
        EXPECT(0x535d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 037C
        gbc.setState(0x40a7, 0x5286, 0xb90, 0x85e3, 0x962a, 0x1483, 0x1, 0x0);
        gbc.writeMem(0x40a7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5286, gbc.sp());
        EXPECT(0x40a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 037D
        gbc.setState(0xa63b, 0x523c, 0x88f0, 0xf600, 0xf338, 0xca43, 0x1, 0x0);
        gbc.writeMem(0xa63b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x523c, gbc.sp());
        EXPECT(0xa63d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa63b));
        EXPECT(0xe8, gbc.readMem(0xa63c));
        // CB E8 037E
        gbc.setState(0xa509, 0x6f37, 0x5d80, 0x47cf, 0x6726, 0xfb7c, 0x0, 0x0);
        gbc.writeMem(0xa509, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6f37, gbc.sp());
        EXPECT(0xa50b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa509));
        EXPECT(0xe8, gbc.readMem(0xa50a));
        // CB E8 0380
        gbc.setState(0x15c, 0xb1c3, 0x2ee0, 0x2c70, 0x182d, 0xd547, 0x0, 0x0);
        gbc.writeMem(0x15c, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb1c3, gbc.sp());
        EXPECT(0x15e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0381
        gbc.setState(0x1650, 0xd61, 0x3d50, 0x7c66, 0x87ea, 0x5de4, 0x1, 0x0);
        gbc.writeMem(0x1650, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd61, gbc.sp());
        EXPECT(0x1652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0382
        gbc.setState(0x89a3, 0x3aef, 0xf9c0, 0x50d6, 0xb682, 0xc892, 0x0, 0x0);
        gbc.writeMem(0x89a3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3aef, gbc.sp());
        EXPECT(0x89a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a3));
        EXPECT(0xe8, gbc.readMem(0x89a4));
        // CB E8 0383
        gbc.setState(0xc0c4, 0xc0f, 0x2af0, 0x1a8, 0x85b0, 0xf83b, 0x1, 0x1);
        gbc.writeMem(0xc0c4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc0f, gbc.sp());
        EXPECT(0xc0c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0c4));
        EXPECT(0xe8, gbc.readMem(0xc0c5));
        // CB E8 0385
        gbc.setState(0x9432, 0xcb35, 0xe4b0, 0xfeac, 0xbbc4, 0x13df, 0x1, 0x1);
        gbc.writeMem(0x9432, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xcb35, gbc.sp());
        EXPECT(0x9434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9432));
        EXPECT(0xe8, gbc.readMem(0x9433));
        // CB E8 0386
        gbc.setState(0xad3d, 0xaa7c, 0x1000, 0x709c, 0x5470, 0xed5, 0x0, 0x1);
        gbc.writeMem(0xad3d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xaa7c, gbc.sp());
        EXPECT(0xad3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad3d));
        EXPECT(0xe8, gbc.readMem(0xad3e));
        // CB E8 0387
        gbc.setState(0x9ec4, 0x16f9, 0xe420, 0x23d8, 0xdd75, 0xd4f1, 0x1, 0x1);
        gbc.writeMem(0x9ec4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x16f9, gbc.sp());
        EXPECT(0x9ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec4));
        EXPECT(0xe8, gbc.readMem(0x9ec5));
        // CB E8 0389
        gbc.setState(0xe9ea, 0x353c, 0x7ef0, 0x1777, 0xd0b, 0xcda6, 0x0, 0x1);
        gbc.writeMem(0xe9ea, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x353c, gbc.sp());
        EXPECT(0xe9ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ea));
        EXPECT(0xe8, gbc.readMem(0xe9eb));
        // CB E8 038A
        gbc.setState(0x4fc4, 0xae7d, 0xc6c0, 0x108c, 0xddc0, 0x6c1b, 0x1, 0x0);
        gbc.writeMem(0x4fc4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xae7d, gbc.sp());
        EXPECT(0x4fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 038B
        gbc.setState(0xe5f, 0x273e, 0x1ce0, 0xcaa8, 0x9425, 0x24c1, 0x0, 0x0);
        gbc.writeMem(0xe5f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x273e, gbc.sp());
        EXPECT(0xe61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 038C
        gbc.setState(0xc9a3, 0x88d4, 0x39e0, 0x1c67, 0xac50, 0xc4, 0x1, 0x0);
        gbc.writeMem(0xc9a3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x88d4, gbc.sp());
        EXPECT(0xc9a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a3));
        EXPECT(0xe8, gbc.readMem(0xc9a4));
        // CB E8 038D
        gbc.setState(0x188d, 0xd9bd, 0xe510, 0x9adc, 0x916, 0xf372, 0x1, 0x0);
        gbc.writeMem(0x188d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd9bd, gbc.sp());
        EXPECT(0x188f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 038E
        gbc.setState(0x53b9, 0x29b, 0x5800, 0x1019, 0x93c5, 0x8c4d, 0x0, 0x0);
        gbc.writeMem(0x53b9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x29b, gbc.sp());
        EXPECT(0x53bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 038F
        gbc.setState(0x1fa4, 0xd7b7, 0x67d0, 0xe8e4, 0x70b4, 0xd7d4, 0x0, 0x1);
        gbc.writeMem(0x1fa4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd7b7, gbc.sp());
        EXPECT(0x1fa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0390
        gbc.setState(0x840a, 0x35ba, 0x210, 0x8ba3, 0x41d4, 0x1623, 0x1, 0x0);
        gbc.writeMem(0x840a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x35ba, gbc.sp());
        EXPECT(0x840c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x840a));
        EXPECT(0xe8, gbc.readMem(0x840b));
        // CB E8 0391
        gbc.setState(0x9c96, 0xdae6, 0x3800, 0xd37, 0xc16f, 0x1d78, 0x0, 0x0);
        gbc.writeMem(0x9c96, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdae6, gbc.sp());
        EXPECT(0x9c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c96));
        EXPECT(0xe8, gbc.readMem(0x9c97));
        // CB E8 0392
        gbc.setState(0x1165, 0x9a3d, 0xf0c0, 0x4c1d, 0x5269, 0xd5e7, 0x1, 0x0);
        gbc.writeMem(0x1165, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9a3d, gbc.sp());
        EXPECT(0x1167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0393
        gbc.setState(0x5b70, 0x1dfc, 0x51e0, 0x95ac, 0xf986, 0xce96, 0x0, 0x0);
        gbc.writeMem(0x5b70, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1dfc, gbc.sp());
        EXPECT(0x5b72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0394
        gbc.setState(0x4b25, 0x5559, 0x28b0, 0x2f5, 0x4dbf, 0xd9ee, 0x0, 0x0);
        gbc.writeMem(0x4b25, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5559, gbc.sp());
        EXPECT(0x4b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0395
        gbc.setState(0x74fa, 0x73fd, 0x95c0, 0xf6e5, 0x4320, 0x22e, 0x1, 0x1);
        gbc.writeMem(0x74fa, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x73fd, gbc.sp());
        EXPECT(0x74fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0396
        gbc.setState(0xd2db, 0x68b0, 0xf390, 0x9547, 0xac87, 0xef20, 0x1, 0x0);
        gbc.writeMem(0xd2db, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x68b0, gbc.sp());
        EXPECT(0xd2dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2db));
        EXPECT(0xe8, gbc.readMem(0xd2dc));
        // CB E8 0397
        gbc.setState(0x74a5, 0x9168, 0x8880, 0x3475, 0x661a, 0xb2c, 0x1, 0x0);
        gbc.writeMem(0x74a5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9168, gbc.sp());
        EXPECT(0x74a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 0398
        gbc.setState(0x5388, 0xbcdf, 0x7b50, 0x6c24, 0xcbad, 0x678c, 0x0, 0x0);
        gbc.writeMem(0x5388, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xbcdf, gbc.sp());
        EXPECT(0x538a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 0399
        gbc.setState(0xe5b, 0xf039, 0x6150, 0xf279, 0x48c8, 0x3d27, 0x1, 0x0);
        gbc.writeMem(0xe5b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf039, gbc.sp());
        EXPECT(0xe5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 039A
        gbc.setState(0x6e06, 0x8442, 0xa600, 0xeb31, 0x92ad, 0x71b5, 0x1, 0x1);
        gbc.writeMem(0x6e06, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8442, gbc.sp());
        EXPECT(0x6e08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 039B
        gbc.setState(0x22f2, 0x78f1, 0x8ce0, 0xb435, 0x658e, 0x7235, 0x0, 0x0);
        gbc.writeMem(0x22f2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x78f1, gbc.sp());
        EXPECT(0x22f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 039C
        gbc.setState(0x782b, 0x46e5, 0x2780, 0x3c99, 0x62ad, 0x6dd, 0x0, 0x1);
        gbc.writeMem(0x782b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x46e5, gbc.sp());
        EXPECT(0x782d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 039D
        gbc.setState(0x44e5, 0xfa1f, 0x9200, 0xae76, 0x531a, 0xc83b, 0x1, 0x1);
        gbc.writeMem(0x44e5, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfa1f, gbc.sp());
        EXPECT(0x44e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 039E
        gbc.setState(0x2814, 0x7621, 0x5700, 0x4d72, 0x8483, 0x46a0, 0x1, 0x1);
        gbc.writeMem(0x2814, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7621, gbc.sp());
        EXPECT(0x2816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 039F
        gbc.setState(0x6525, 0x7a04, 0x9d00, 0x8354, 0x5132, 0x5a08, 0x1, 0x0);
        gbc.writeMem(0x6525, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7a04, gbc.sp());
        EXPECT(0x6527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 03A0
        gbc.setState(0x56cb, 0x1fbc, 0xa230, 0xf8a1, 0xc12b, 0xe567, 0x0, 0x1);
        gbc.writeMem(0x56cb, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1fbc, gbc.sp());
        EXPECT(0x56cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 03A1
        gbc.setState(0x37d3, 0x9bd8, 0x1940, 0x7efc, 0x10b5, 0x52ef, 0x0, 0x0);
        gbc.writeMem(0x37d3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9bd8, gbc.sp());
        EXPECT(0x37d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 03A2
        gbc.setState(0x7334, 0x66a6, 0x4f10, 0x1533, 0xb8e8, 0x1f28, 0x0, 0x0);
        gbc.writeMem(0x7334, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x66a6, gbc.sp());
        EXPECT(0x7336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 03A3
        gbc.setState(0xde22, 0x5f04, 0xd20, 0x3277, 0x161a, 0x4d6c, 0x1, 0x0);
        gbc.writeMem(0xde22, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5f04, gbc.sp());
        EXPECT(0xde24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde22));
        EXPECT(0xe8, gbc.readMem(0xde23));
        // CB E8 03A4
        gbc.setState(0x4630, 0xa726, 0xa7c0, 0xdf39, 0x7e08, 0xb555, 0x1, 0x0);
        gbc.writeMem(0x4630, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa726, gbc.sp());
        EXPECT(0x4632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 03A5
        gbc.setState(0x3a68, 0xb317, 0xac60, 0x3477, 0xb1a3, 0xe4ee, 0x0, 0x1);
        gbc.writeMem(0x3a68, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb317, gbc.sp());
        EXPECT(0x3a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 03A6
        gbc.setState(0x80c9, 0x7a46, 0xf910, 0x3283, 0x5924, 0x7e, 0x0, 0x1);
        gbc.writeMem(0x80c9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7a46, gbc.sp());
        EXPECT(0x80cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c9));
        EXPECT(0xe8, gbc.readMem(0x80ca));
        // CB E8 03A7
        gbc.setState(0x8085, 0xabae, 0x2220, 0x975c, 0xfb12, 0x959b, 0x0, 0x1);
        gbc.writeMem(0x8085, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xabae, gbc.sp());
        EXPECT(0x8087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8085));
        EXPECT(0xe8, gbc.readMem(0x8086));
        // CB E8 03A8
        gbc.setState(0x3615, 0xb3e5, 0x98b0, 0x46b7, 0xf89b, 0x2ff1, 0x1, 0x1);
        gbc.writeMem(0x3615, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb3e5, gbc.sp());
        EXPECT(0x3617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 03A9
        gbc.setState(0x9ed2, 0x8faa, 0xb2c0, 0x2a6, 0x6060, 0x6739, 0x0, 0x1);
        gbc.writeMem(0x9ed2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8faa, gbc.sp());
        EXPECT(0x9ed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed2));
        EXPECT(0xe8, gbc.readMem(0x9ed3));
        // CB E8 03AA
        gbc.setState(0x26f7, 0xdd2e, 0x4e80, 0xec77, 0x8e6f, 0xc3f1, 0x0, 0x0);
        gbc.writeMem(0x26f7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdd2e, gbc.sp());
        EXPECT(0x26f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 03AB
        gbc.setState(0x4550, 0x80e6, 0xb460, 0x64cf, 0x2692, 0xfa2a, 0x0, 0x1);
        gbc.writeMem(0x4550, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x80e6, gbc.sp());
        EXPECT(0x4552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 03AC
        gbc.setState(0x6789, 0xcb49, 0xdf90, 0xbc9c, 0x35bf, 0x63f2, 0x1, 0x1);
        gbc.writeMem(0x6789, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcb49, gbc.sp());
        EXPECT(0x678b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 03AE
        gbc.setState(0x93d0, 0xded0, 0x9a80, 0x32ab, 0xa2ec, 0x3258, 0x0, 0x1);
        gbc.writeMem(0x93d0, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xded0, gbc.sp());
        EXPECT(0x93d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93d0));
        EXPECT(0xe8, gbc.readMem(0x93d1));
        // CB E8 03AF
        gbc.setState(0x50fc, 0xfe3b, 0xbf50, 0x2761, 0x5805, 0x50e7, 0x0, 0x0);
        gbc.writeMem(0x50fc, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfe3b, gbc.sp());
        EXPECT(0x50fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 03B0
        gbc.setState(0x17af, 0x9c1b, 0x8bf0, 0xfa52, 0x373b, 0x46a4, 0x0, 0x0);
        gbc.writeMem(0x17af, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9c1b, gbc.sp());
        EXPECT(0x17b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 03B2
        gbc.setState(0x2161, 0xcb90, 0xbad0, 0x2013, 0x1071, 0xb4b, 0x1, 0x0);
        gbc.writeMem(0x2161, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xcb90, gbc.sp());
        EXPECT(0x2163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 03B3
        gbc.setState(0xcd18, 0xce34, 0xcb80, 0x174, 0xc520, 0xa740, 0x0, 0x1);
        gbc.writeMem(0xcd18, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xce34, gbc.sp());
        EXPECT(0xcd1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd18));
        EXPECT(0xe8, gbc.readMem(0xcd19));
        // CB E8 03B4
        gbc.setState(0x9f8f, 0xd0e5, 0x2070, 0x67ee, 0x92a7, 0xb77a, 0x0, 0x1);
        gbc.writeMem(0x9f8f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd0e5, gbc.sp());
        EXPECT(0x9f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f8f));
        EXPECT(0xe8, gbc.readMem(0x9f90));
        // CB E8 03B5
        gbc.setState(0xd126, 0xf408, 0x1700, 0x6ebf, 0x40ff, 0x31e4, 0x1, 0x1);
        gbc.writeMem(0xd126, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf408, gbc.sp());
        EXPECT(0xd128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd126));
        EXPECT(0xe8, gbc.readMem(0xd127));
        // CB E8 03B6
        gbc.setState(0xc7b0, 0x480e, 0x9ff0, 0xb084, 0x7365, 0x2025, 0x0, 0x0);
        gbc.writeMem(0xc7b0, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x480e, gbc.sp());
        EXPECT(0xc7b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b0));
        EXPECT(0xe8, gbc.readMem(0xc7b1));
        // CB E8 03B7
        gbc.setState(0x2c7f, 0xac53, 0x7660, 0x6ffc, 0x817a, 0xd56d, 0x1, 0x0);
        gbc.writeMem(0x2c7f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xac53, gbc.sp());
        EXPECT(0x2c81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 03B8
        gbc.setState(0x57af, 0x8e6, 0xba00, 0xaed2, 0xf9a3, 0xe228, 0x0, 0x1);
        gbc.writeMem(0x57af, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8e6, gbc.sp());
        EXPECT(0x57b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 03B9
        gbc.setState(0x9b12, 0xca1, 0x48d0, 0x180f, 0xb72d, 0x2918, 0x0, 0x0);
        gbc.writeMem(0x9b12, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xca1, gbc.sp());
        EXPECT(0x9b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b12));
        EXPECT(0xe8, gbc.readMem(0x9b13));
        // CB E8 03BA
        gbc.setState(0xa6, 0x2318, 0x8dd0, 0xdf49, 0xb2cf, 0x5be, 0x0, 0x0);
        gbc.writeMem(0xa6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2318, gbc.sp());
        EXPECT(0xa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 03BB
        gbc.setState(0xa5c8, 0xd128, 0x5040, 0xe3e1, 0x285c, 0x1612, 0x1, 0x0);
        gbc.writeMem(0xa5c8, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd128, gbc.sp());
        EXPECT(0xa5ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5c8));
        EXPECT(0xe8, gbc.readMem(0xa5c9));
        // CB E8 03BD
        gbc.setState(0x690f, 0xd0cf, 0x8150, 0xf265, 0x5d42, 0xde24, 0x0, 0x1);
        gbc.writeMem(0x690f, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd0cf, gbc.sp());
        EXPECT(0x6911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 03BE
        gbc.setState(0xb4ac, 0xc741, 0x6200, 0x4178, 0xc533, 0x851c, 0x1, 0x0);
        gbc.writeMem(0xb4ac, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc741, gbc.sp());
        EXPECT(0xb4ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ac));
        EXPECT(0xe8, gbc.readMem(0xb4ad));
        // CB E8 03BF
        gbc.setState(0x7713, 0x5ae6, 0xec80, 0x13f1, 0xdbaa, 0x93, 0x0, 0x1);
        gbc.writeMem(0x7713, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5ae6, gbc.sp());
        EXPECT(0x7715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 03C0
        gbc.setState(0xd89b, 0xb1ca, 0x9410, 0x53e0, 0xf133, 0x3e01, 0x0, 0x1);
        gbc.writeMem(0xd89b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb1ca, gbc.sp());
        EXPECT(0xd89d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89b));
        EXPECT(0xe8, gbc.readMem(0xd89c));
        // CB E8 03C1
        gbc.setState(0xc366, 0x73df, 0x7fa0, 0x2217, 0x4a50, 0xce30, 0x1, 0x1);
        gbc.writeMem(0xc366, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x73df, gbc.sp());
        EXPECT(0xc368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc366));
        EXPECT(0xe8, gbc.readMem(0xc367));
        // CB E8 03C2
        gbc.setState(0x5a00, 0xe088, 0xd20, 0xc399, 0x31d, 0x7dc5, 0x1, 0x0);
        gbc.writeMem(0x5a00, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe088, gbc.sp());
        EXPECT(0x5a02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 03C3
        gbc.setState(0x9dc6, 0xa634, 0x4b60, 0xc29e, 0x4e75, 0x3d30, 0x0, 0x1);
        gbc.writeMem(0x9dc6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa634, gbc.sp());
        EXPECT(0x9dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc6));
        EXPECT(0xe8, gbc.readMem(0x9dc7));
        // CB E8 03C4
        gbc.setState(0xc94e, 0x88f0, 0xe630, 0x72f7, 0xefee, 0x87b7, 0x0, 0x0);
        gbc.writeMem(0xc94e, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x88f0, gbc.sp());
        EXPECT(0xc950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc94e));
        EXPECT(0xe8, gbc.readMem(0xc94f));
        // CB E8 03C5
        gbc.setState(0xd69, 0xaa13, 0x78d0, 0x1c5, 0x10a2, 0x481f, 0x1, 0x1);
        gbc.writeMem(0xd69, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xaa13, gbc.sp());
        EXPECT(0xd6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 03C6
        gbc.setState(0xa228, 0x64ab, 0xd8b0, 0xe1fc, 0x7124, 0xd4be, 0x1, 0x1);
        gbc.writeMem(0xa228, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x64ab, gbc.sp());
        EXPECT(0xa22a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa228));
        EXPECT(0xe8, gbc.readMem(0xa229));
        // CB E8 03C8
        gbc.setState(0xa9d, 0xa0da, 0x5320, 0x9cfa, 0x5bcd, 0xc95d, 0x0, 0x1);
        gbc.writeMem(0xa9d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa0da, gbc.sp());
        EXPECT(0xa9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 03C9
        gbc.setState(0xd105, 0xcdc, 0x8f30, 0x13ac, 0xa4a3, 0x5a7, 0x1, 0x1);
        gbc.writeMem(0xd105, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcdc, gbc.sp());
        EXPECT(0xd107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd105));
        EXPECT(0xe8, gbc.readMem(0xd106));
        // CB E8 03CA
        gbc.setState(0x14ac, 0x3be, 0xd010, 0x35c2, 0x1eaf, 0xa848, 0x0, 0x1);
        gbc.writeMem(0x14ac, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3be, gbc.sp());
        EXPECT(0x14ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 03CB
        gbc.setState(0x7be3, 0x7d9d, 0x22c0, 0x4327, 0xabe4, 0x165c, 0x0, 0x0);
        gbc.writeMem(0x7be3, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7d9d, gbc.sp());
        EXPECT(0x7be5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 03CC
        gbc.setState(0x5cd9, 0x714c, 0x6910, 0xe813, 0xb5d9, 0xb00c, 0x0, 0x1);
        gbc.writeMem(0x5cd9, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x714c, gbc.sp());
        EXPECT(0x5cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 03CD
        gbc.setState(0x65f6, 0x21c9, 0x5fa0, 0xed7c, 0xc662, 0x4a7a, 0x1, 0x1);
        gbc.writeMem(0x65f6, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x21c9, gbc.sp());
        EXPECT(0x65f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 03CE
        gbc.setState(0xd9ca, 0x618d, 0xdd80, 0x873b, 0x37c1, 0x39, 0x1, 0x1);
        gbc.writeMem(0xd9ca, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x618d, gbc.sp());
        EXPECT(0xd9cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ca));
        EXPECT(0xe8, gbc.readMem(0xd9cb));
        // CB E8 03CF
        gbc.setState(0x9e03, 0x1b9e, 0xc3b0, 0x861, 0x2d6c, 0xd381, 0x0, 0x0);
        gbc.writeMem(0x9e03, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1b9e, gbc.sp());
        EXPECT(0x9e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e03));
        EXPECT(0xe8, gbc.readMem(0x9e04));
        // CB E8 03D0
        gbc.setState(0x623a, 0x6bd9, 0xd160, 0x250c, 0x243, 0x444b, 0x0, 0x0);
        gbc.writeMem(0x623a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6bd9, gbc.sp());
        EXPECT(0x623c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 03D1
        gbc.setState(0xe75d, 0xed23, 0xf5c0, 0x8ac3, 0x8bcf, 0x3f23, 0x1, 0x1);
        gbc.writeMem(0xe75d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xed23, gbc.sp());
        EXPECT(0xe75f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe75d));
        EXPECT(0xe8, gbc.readMem(0xe75e));
        // CB E8 03D2
        gbc.setState(0x3d05, 0xbad8, 0x5160, 0xf7a9, 0xcedf, 0x951b, 0x1, 0x0);
        gbc.writeMem(0x3d05, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbad8, gbc.sp());
        EXPECT(0x3d07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 03D3
        gbc.setState(0x4fe2, 0x775a, 0x99d0, 0xbf61, 0x34ca, 0x69c9, 0x1, 0x0);
        gbc.writeMem(0x4fe2, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x775a, gbc.sp());
        EXPECT(0x4fe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 03D4
        gbc.setState(0x6852, 0x7032, 0xfe0, 0xebea, 0x7702, 0x591a, 0x0, 0x0);
        gbc.writeMem(0x6852, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7032, gbc.sp());
        EXPECT(0x6854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 03D5
        gbc.setState(0xcade, 0x55ea, 0xe70, 0x68ae, 0xb961, 0x4695, 0x0, 0x0);
        gbc.writeMem(0xcade, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x55ea, gbc.sp());
        EXPECT(0xcae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcade));
        EXPECT(0xe8, gbc.readMem(0xcadf));
        // CB E8 03D6
        gbc.setState(0x5552, 0x4f88, 0x35e0, 0x538, 0xc8b3, 0x192, 0x1, 0x0);
        gbc.writeMem(0x5552, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4f88, gbc.sp());
        EXPECT(0x5554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E8 03D7
        gbc.setState(0x501, 0x9ee7, 0x31b0, 0xa418, 0x53a2, 0xfa1, 0x0, 0x0);
        gbc.writeMem(0x501, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9ee7, gbc.sp());
        EXPECT(0x503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 03D8
        gbc.setState(0xbfb7, 0x98fc, 0x190, 0x8d7e, 0x29eb, 0x2ece, 0x1, 0x0);
        gbc.writeMem(0xbfb7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x98fc, gbc.sp());
        EXPECT(0xbfb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfb7));
        EXPECT(0xe8, gbc.readMem(0xbfb8));
        // CB E8 03D9
        gbc.setState(0xe657, 0x6dfd, 0x8540, 0xcff1, 0xa7d6, 0x30a2, 0x0, 0x1);
        gbc.writeMem(0xe657, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6dfd, gbc.sp());
        EXPECT(0xe659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe657));
        EXPECT(0xe8, gbc.readMem(0xe658));
        // CB E8 03DA
        gbc.setState(0x3827, 0x5d46, 0xe8d0, 0x9452, 0x447d, 0xf58c, 0x0, 0x1);
        gbc.writeMem(0x3827, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5d46, gbc.sp());
        EXPECT(0x3829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 03DB
        gbc.setState(0xdb5b, 0xcd2d, 0xe3b0, 0x4b97, 0xe3b9, 0xb758, 0x1, 0x1);
        gbc.writeMem(0xdb5b, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xcd2d, gbc.sp());
        EXPECT(0xdb5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb5b));
        EXPECT(0xe8, gbc.readMem(0xdb5c));
        // CB E8 03DC
        gbc.setState(0xd380, 0xee78, 0x9830, 0x301c, 0x3cf0, 0xfd6d, 0x0, 0x0);
        gbc.writeMem(0xd380, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xee78, gbc.sp());
        EXPECT(0xd382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd380));
        EXPECT(0xe8, gbc.readMem(0xd381));
        // CB E8 03DD
        gbc.setState(0x6821, 0xd0c, 0x23d0, 0x4ea8, 0x9c6, 0xd520, 0x1, 0x1);
        gbc.writeMem(0x6821, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd0c, gbc.sp());
        EXPECT(0x6823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 03DE
        gbc.setState(0x1bf7, 0xde62, 0x17b0, 0x7b83, 0x7046, 0x7f31, 0x1, 0x1);
        gbc.writeMem(0x1bf7, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xde62, gbc.sp());
        EXPECT(0x1bf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 03DF
        gbc.setState(0x4e1a, 0xb149, 0x55d0, 0x518a, 0xd0fb, 0xf4e5, 0x1, 0x1);
        gbc.writeMem(0x4e1a, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb149, gbc.sp());
        EXPECT(0x4e1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 03E0
        gbc.setState(0x84ae, 0x7684, 0x31d0, 0xfeeb, 0xa5f7, 0x2abf, 0x0, 0x0);
        gbc.writeMem(0x84ae, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7684, gbc.sp());
        EXPECT(0x84b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ae));
        EXPECT(0xe8, gbc.readMem(0x84af));
        // CB E8 03E2
        gbc.setState(0xc384, 0x8f30, 0xe460, 0xe2e0, 0xa16, 0x47c0, 0x1, 0x0);
        gbc.writeMem(0xc384, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8f30, gbc.sp());
        EXPECT(0xc386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc384));
        EXPECT(0xe8, gbc.readMem(0xc385));
        // CB E8 03E4
        gbc.setState(0x6142, 0x36ee, 0xe370, 0x8da6, 0xf5ff, 0xcd13, 0x0, 0x1);
        gbc.writeMem(0x6142, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x36ee, gbc.sp());
        EXPECT(0x6144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 03E5
        gbc.setState(0x4174, 0x37f3, 0x43d0, 0xd052, 0x2366, 0x31bb, 0x1, 0x1);
        gbc.writeMem(0x4174, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x37f3, gbc.sp());
        EXPECT(0x4176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E8 03E6
        gbc.setState(0xcfa4, 0x920f, 0xcac0, 0xd232, 0x5b3f, 0x471, 0x0, 0x0);
        gbc.writeMem(0xcfa4, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x920f, gbc.sp());
        EXPECT(0xcfa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfa4));
        EXPECT(0xe8, gbc.readMem(0xcfa5));
        // CB E8 03E7
        gbc.setState(0x4a9d, 0x86fc, 0x2190, 0x1bed, 0xe3c6, 0x823e, 0x1, 0x0);
        gbc.writeMem(0x4a9d, { 0xcb, 0xe8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x86fc, gbc.sp());
        EXPECT(0x4a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
