    TEST(gbcemu, opcode_cb_53) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 53 0000
        gbc.setState(0xc03e, 0x10cb, 0x7800, 0xc0ef, 0xcfc2, 0x7fd3, 0x1, 0x1);
        gbc.writeMem(0xc03e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x10cb, gbc.sp());
        EXPECT(0xc040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc03e));
        EXPECT(0x53, gbc.readMem(0xc03f));
        // CB 53 0001
        gbc.setState(0x4df2, 0x2340, 0x39b0, 0x8f57, 0x73e5, 0x44a5, 0x1, 0x1);
        gbc.writeMem(0x4df2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2340, gbc.sp());
        EXPECT(0x4df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0002
        gbc.setState(0x3bf, 0x1f2e, 0x3900, 0x31ba, 0xefef, 0x7824, 0x0, 0x1);
        gbc.writeMem(0x3bf, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1f2e, gbc.sp());
        EXPECT(0x3c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0003
        gbc.setState(0x227, 0x6a14, 0x32f0, 0xdd51, 0xc435, 0x76f5, 0x1, 0x0);
        gbc.writeMem(0x227, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6a14, gbc.sp());
        EXPECT(0x229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0004
        gbc.setState(0xd043, 0x489d, 0x4750, 0x4448, 0xc34a, 0x7976, 0x1, 0x0);
        gbc.writeMem(0xd043, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x489d, gbc.sp());
        EXPECT(0xd045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd043));
        EXPECT(0x53, gbc.readMem(0xd044));
        // CB 53 0006
        gbc.setState(0xe1e9, 0xf91e, 0x2680, 0x2c6e, 0x522f, 0x8b42, 0x0, 0x1);
        gbc.writeMem(0xe1e9, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf91e, gbc.sp());
        EXPECT(0xe1eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1e9));
        EXPECT(0x53, gbc.readMem(0xe1ea));
        // CB 53 0007
        gbc.setState(0x9c99, 0x2c22, 0xfd00, 0xa401, 0x2cb8, 0x1df, 0x0, 0x0);
        gbc.writeMem(0x9c99, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2c22, gbc.sp());
        EXPECT(0x9c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c99));
        EXPECT(0x53, gbc.readMem(0x9c9a));
        // CB 53 0008
        gbc.setState(0xe76a, 0xb3c1, 0x6190, 0x11b4, 0xc3ff, 0xa8a, 0x0, 0x0);
        gbc.writeMem(0xe76a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb3c1, gbc.sp());
        EXPECT(0xe76c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe76a));
        EXPECT(0x53, gbc.readMem(0xe76b));
        // CB 53 0009
        gbc.setState(0x37a5, 0xe3d2, 0x4d30, 0x67a7, 0x70f0, 0x13cf, 0x0, 0x1);
        gbc.writeMem(0x37a5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe3d2, gbc.sp());
        EXPECT(0x37a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 000A
        gbc.setState(0x6bd9, 0x4c45, 0xf030, 0xb482, 0xe9ac, 0x593b, 0x1, 0x1);
        gbc.writeMem(0x6bd9, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4c45, gbc.sp());
        EXPECT(0x6bdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 000B
        gbc.setState(0x2c4a, 0xe6b5, 0x25d0, 0x7bd1, 0xda5f, 0x2f1c, 0x0, 0x0);
        gbc.writeMem(0x2c4a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe6b5, gbc.sp());
        EXPECT(0x2c4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 000C
        gbc.setState(0x652e, 0x509e, 0x8510, 0x9ae4, 0x25b7, 0x25d5, 0x1, 0x0);
        gbc.writeMem(0x652e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x509e, gbc.sp());
        EXPECT(0x6530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 000D
        gbc.setState(0x9539, 0xcf3c, 0xcb70, 0x25b2, 0x1011, 0x8bd2, 0x0, 0x0);
        gbc.writeMem(0x9539, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xcf3c, gbc.sp());
        EXPECT(0x953b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9539));
        EXPECT(0x53, gbc.readMem(0x953a));
        // CB 53 000E
        gbc.setState(0xe1a0, 0x5d3, 0x2330, 0x7211, 0x2676, 0x977f, 0x0, 0x1);
        gbc.writeMem(0xe1a0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5d3, gbc.sp());
        EXPECT(0xe1a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a0));
        EXPECT(0x53, gbc.readMem(0xe1a1));
        // CB 53 000F
        gbc.setState(0xe381, 0x8079, 0xde40, 0xcc0, 0xaa22, 0xaa87, 0x0, 0x0);
        gbc.writeMem(0xe381, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8079, gbc.sp());
        EXPECT(0xe383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe381));
        EXPECT(0x53, gbc.readMem(0xe382));
        // CB 53 0010
        gbc.setState(0xb097, 0x6de5, 0x2b50, 0x3b02, 0xf192, 0xafb0, 0x0, 0x1);
        gbc.writeMem(0xb097, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6de5, gbc.sp());
        EXPECT(0xb099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb097));
        EXPECT(0x53, gbc.readMem(0xb098));
        // CB 53 0011
        gbc.setState(0x5f5c, 0x1910, 0x150, 0xe2e, 0x3839, 0x99de, 0x1, 0x1);
        gbc.writeMem(0x5f5c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1910, gbc.sp());
        EXPECT(0x5f5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0012
        gbc.setState(0x8222, 0xfc1a, 0xc410, 0x1203, 0x7573, 0x86fa, 0x0, 0x1);
        gbc.writeMem(0x8222, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfc1a, gbc.sp());
        EXPECT(0x8224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8222));
        EXPECT(0x53, gbc.readMem(0x8223));
        // CB 53 0013
        gbc.setState(0x905e, 0x8d, 0xeeb0, 0x21d, 0x74d5, 0xa1ac, 0x0, 0x0);
        gbc.writeMem(0x905e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8d, gbc.sp());
        EXPECT(0x9060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x905e));
        EXPECT(0x53, gbc.readMem(0x905f));
        // CB 53 0014
        gbc.setState(0x31de, 0xe929, 0x7c80, 0xf31f, 0x4f39, 0x62b1, 0x0, 0x1);
        gbc.writeMem(0x31de, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe929, gbc.sp());
        EXPECT(0x31e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0015
        gbc.setState(0x6755, 0x9598, 0x4a60, 0xcbcc, 0xc060, 0xe400, 0x0, 0x1);
        gbc.writeMem(0x6755, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9598, gbc.sp());
        EXPECT(0x6757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0017
        gbc.setState(0xdaaf, 0x9697, 0xc360, 0xc346, 0x3617, 0x48ff, 0x1, 0x1);
        gbc.writeMem(0xdaaf, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9697, gbc.sp());
        EXPECT(0xdab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaaf));
        EXPECT(0x53, gbc.readMem(0xdab0));
        // CB 53 0018
        gbc.setState(0xed35, 0xa31b, 0x5920, 0xe4ac, 0x773d, 0xed15, 0x0, 0x0);
        gbc.writeMem(0xed35, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa31b, gbc.sp());
        EXPECT(0xed37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed35));
        EXPECT(0x53, gbc.readMem(0xed36));
        // CB 53 0019
        gbc.setState(0x5029, 0xf463, 0x1800, 0xb04, 0x23b, 0x5740, 0x1, 0x1);
        gbc.writeMem(0x5029, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf463, gbc.sp());
        EXPECT(0x502b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 001A
        gbc.setState(0x3ee5, 0xdca7, 0xfa20, 0xd00c, 0x8164, 0xe272, 0x1, 0x0);
        gbc.writeMem(0x3ee5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdca7, gbc.sp());
        EXPECT(0x3ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 001B
        gbc.setState(0x5ea6, 0x87e5, 0xf300, 0xdcd0, 0xf6c8, 0x9ac9, 0x1, 0x0);
        gbc.writeMem(0x5ea6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x87e5, gbc.sp());
        EXPECT(0x5ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 001D
        gbc.setState(0xbedd, 0x185c, 0x19a0, 0x4823, 0x712f, 0xb19c, 0x0, 0x1);
        gbc.writeMem(0xbedd, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x185c, gbc.sp());
        EXPECT(0xbedf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbedd));
        EXPECT(0x53, gbc.readMem(0xbede));
        // CB 53 001E
        gbc.setState(0xa381, 0x3133, 0xbdf0, 0x8c33, 0x61cb, 0xd143, 0x0, 0x0);
        gbc.writeMem(0xa381, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3133, gbc.sp());
        EXPECT(0xa383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa381));
        EXPECT(0x53, gbc.readMem(0xa382));
        // CB 53 001F
        gbc.setState(0x3efa, 0x73d6, 0x33f0, 0xbcfd, 0xcde, 0x2966, 0x1, 0x0);
        gbc.writeMem(0x3efa, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x73d6, gbc.sp());
        EXPECT(0x3efc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0020
        gbc.setState(0x7aeb, 0xc2a1, 0x1c50, 0x2af6, 0xbde, 0x2251, 0x0, 0x0);
        gbc.writeMem(0x7aeb, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc2a1, gbc.sp());
        EXPECT(0x7aed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0021
        gbc.setState(0xabcc, 0x4b4c, 0x2870, 0xdd78, 0x9d15, 0xa681, 0x0, 0x1);
        gbc.writeMem(0xabcc, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4b4c, gbc.sp());
        EXPECT(0xabce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabcc));
        EXPECT(0x53, gbc.readMem(0xabcd));
        // CB 53 0022
        gbc.setState(0xd2d7, 0x1f15, 0x420, 0x15f9, 0x5acc, 0xe083, 0x1, 0x1);
        gbc.writeMem(0xd2d7, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1f15, gbc.sp());
        EXPECT(0xd2d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d7));
        EXPECT(0x53, gbc.readMem(0xd2d8));
        // CB 53 0023
        gbc.setState(0x3801, 0xfeb4, 0x4c10, 0x1ce4, 0x74b0, 0xd8ee, 0x0, 0x1);
        gbc.writeMem(0x3801, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xfeb4, gbc.sp());
        EXPECT(0x3803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0024
        gbc.setState(0xb898, 0x97ff, 0x380, 0x20f3, 0x2506, 0xec23, 0x0, 0x0);
        gbc.writeMem(0xb898, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x97ff, gbc.sp());
        EXPECT(0xb89a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb898));
        EXPECT(0x53, gbc.readMem(0xb899));
        // CB 53 0025
        gbc.setState(0x1705, 0xb450, 0x9640, 0xf5b1, 0x7b00, 0x70b1, 0x0, 0x0);
        gbc.writeMem(0x1705, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb450, gbc.sp());
        EXPECT(0x1707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0026
        gbc.setState(0x3ef6, 0xc4bc, 0xab20, 0x6ca5, 0x8b1f, 0xbe50, 0x1, 0x1);
        gbc.writeMem(0x3ef6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc4bc, gbc.sp());
        EXPECT(0x3ef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0027
        gbc.setState(0x5bda, 0x8ff5, 0xee10, 0x1989, 0xa706, 0xa6ac, 0x1, 0x0);
        gbc.writeMem(0x5bda, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8ff5, gbc.sp());
        EXPECT(0x5bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0028
        gbc.setState(0xae46, 0xff1, 0x1920, 0xfa80, 0x1603, 0x33a7, 0x1, 0x1);
        gbc.writeMem(0xae46, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xff1, gbc.sp());
        EXPECT(0xae48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae46));
        EXPECT(0x53, gbc.readMem(0xae47));
        // CB 53 002A
        gbc.setState(0x2a78, 0x67be, 0xb610, 0x392c, 0x1a40, 0x6e, 0x1, 0x0);
        gbc.writeMem(0x2a78, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x67be, gbc.sp());
        EXPECT(0x2a7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 002B
        gbc.setState(0x4b89, 0xd694, 0x2ce0, 0xebbc, 0x12c7, 0x5c79, 0x0, 0x0);
        gbc.writeMem(0x4b89, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd694, gbc.sp());
        EXPECT(0x4b8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 002C
        gbc.setState(0x9e18, 0x992f, 0x270, 0x646, 0x4411, 0x73d4, 0x0, 0x1);
        gbc.writeMem(0x9e18, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x992f, gbc.sp());
        EXPECT(0x9e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e18));
        EXPECT(0x53, gbc.readMem(0x9e19));
        // CB 53 002D
        gbc.setState(0xa000, 0x3555, 0x56a0, 0x364d, 0x8056, 0xf112, 0x1, 0x1);
        gbc.writeMem(0xa000, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3555, gbc.sp());
        EXPECT(0xa002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa000));
        EXPECT(0x53, gbc.readMem(0xa001));
        // CB 53 002E
        gbc.setState(0x5bb0, 0x5320, 0x1010, 0x53e8, 0x9fe8, 0x83e6, 0x0, 0x0);
        gbc.writeMem(0x5bb0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5320, gbc.sp());
        EXPECT(0x5bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 002F
        gbc.setState(0x91b6, 0x2936, 0xd7e0, 0x2110, 0x981a, 0x541d, 0x1, 0x0);
        gbc.writeMem(0x91b6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2936, gbc.sp());
        EXPECT(0x91b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b6));
        EXPECT(0x53, gbc.readMem(0x91b7));
        // CB 53 0030
        gbc.setState(0xb083, 0xb202, 0x6150, 0x9a76, 0x8b43, 0x5b65, 0x1, 0x1);
        gbc.writeMem(0xb083, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb202, gbc.sp());
        EXPECT(0xb085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb083));
        EXPECT(0x53, gbc.readMem(0xb084));
        // CB 53 0031
        gbc.setState(0xb27, 0x528d, 0xdff0, 0x6d54, 0xe04c, 0x5464, 0x1, 0x0);
        gbc.writeMem(0xb27, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x528d, gbc.sp());
        EXPECT(0xb29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0032
        gbc.setState(0x1a39, 0x5a, 0x2d00, 0x32fc, 0x3e8b, 0x7d7a, 0x1, 0x1);
        gbc.writeMem(0x1a39, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5a, gbc.sp());
        EXPECT(0x1a3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0033
        gbc.setState(0x69d2, 0x36cb, 0x5080, 0x9e4d, 0x45cd, 0xa67b, 0x0, 0x0);
        gbc.writeMem(0x69d2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x36cb, gbc.sp());
        EXPECT(0x69d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0034
        gbc.setState(0x6de, 0xa3d2, 0x1270, 0xbc7d, 0x717f, 0xfea8, 0x1, 0x1);
        gbc.writeMem(0x6de, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa3d2, gbc.sp());
        EXPECT(0x6e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0035
        gbc.setState(0x84ca, 0xdf87, 0x6590, 0x8e6a, 0xb1a, 0x1f62, 0x0, 0x0);
        gbc.writeMem(0x84ca, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xdf87, gbc.sp());
        EXPECT(0x84cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ca));
        EXPECT(0x53, gbc.readMem(0x84cb));
        // CB 53 0036
        gbc.setState(0xa175, 0x9d6, 0x3510, 0x719a, 0xa3ab, 0x9c6d, 0x1, 0x0);
        gbc.writeMem(0xa175, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9d6, gbc.sp());
        EXPECT(0xa177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa175));
        EXPECT(0x53, gbc.readMem(0xa176));
        // CB 53 0037
        gbc.setState(0xe085, 0x5de3, 0x95d0, 0x3551, 0x157c, 0x9ed0, 0x1, 0x0);
        gbc.writeMem(0xe085, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5de3, gbc.sp());
        EXPECT(0xe087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe085));
        EXPECT(0x53, gbc.readMem(0xe086));
        // CB 53 0038
        gbc.setState(0x4445, 0x42f9, 0xcba0, 0xf25, 0xe97c, 0xf2eb, 0x1, 0x1);
        gbc.writeMem(0x4445, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x42f9, gbc.sp());
        EXPECT(0x4447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0039
        gbc.setState(0x9d99, 0x35e2, 0x6080, 0x6169, 0xf69b, 0x4360, 0x1, 0x0);
        gbc.writeMem(0x9d99, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x35e2, gbc.sp());
        EXPECT(0x9d9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d99));
        EXPECT(0x53, gbc.readMem(0x9d9a));
        // CB 53 003A
        gbc.setState(0x5ebc, 0x28d1, 0x7a00, 0x7cf, 0xaf7d, 0x2e1a, 0x1, 0x1);
        gbc.writeMem(0x5ebc, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x28d1, gbc.sp());
        EXPECT(0x5ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 003B
        gbc.setState(0x657a, 0x90fb, 0xea50, 0x6686, 0x9675, 0xf6ec, 0x1, 0x0);
        gbc.writeMem(0x657a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x90fb, gbc.sp());
        EXPECT(0x657c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 003D
        gbc.setState(0xc9bd, 0x3fcc, 0xa700, 0x9834, 0x8900, 0xd060, 0x0, 0x0);
        gbc.writeMem(0xc9bd, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3fcc, gbc.sp());
        EXPECT(0xc9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9bd));
        EXPECT(0x53, gbc.readMem(0xc9be));
        // CB 53 003E
        gbc.setState(0x40f9, 0xbdd8, 0x7f30, 0xc25e, 0x24eb, 0xd1e3, 0x1, 0x0);
        gbc.writeMem(0x40f9, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbdd8, gbc.sp());
        EXPECT(0x40fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 003F
        gbc.setState(0xc5f9, 0x5f77, 0xfd30, 0x18fa, 0x7cef, 0x723e, 0x0, 0x1);
        gbc.writeMem(0xc5f9, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5f77, gbc.sp());
        EXPECT(0xc5fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5f9));
        EXPECT(0x53, gbc.readMem(0xc5fa));
        // CB 53 0040
        gbc.setState(0xd4e7, 0x4d2e, 0xa110, 0x2546, 0xad1e, 0x5320, 0x0, 0x1);
        gbc.writeMem(0xd4e7, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4d2e, gbc.sp());
        EXPECT(0xd4e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4e7));
        EXPECT(0x53, gbc.readMem(0xd4e8));
        // CB 53 0041
        gbc.setState(0x91f2, 0x311b, 0x2e40, 0x8aa6, 0x926e, 0x3bc3, 0x0, 0x0);
        gbc.writeMem(0x91f2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x311b, gbc.sp());
        EXPECT(0x91f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f2));
        EXPECT(0x53, gbc.readMem(0x91f3));
        // CB 53 0042
        gbc.setState(0xdd95, 0x1950, 0x5070, 0xb39a, 0xe3b3, 0x6e00, 0x1, 0x1);
        gbc.writeMem(0xdd95, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1950, gbc.sp());
        EXPECT(0xdd97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd95));
        EXPECT(0x53, gbc.readMem(0xdd96));
        // CB 53 0043
        gbc.setState(0x53e3, 0x9df2, 0x69f0, 0x803b, 0x5e73, 0xec6c, 0x0, 0x1);
        gbc.writeMem(0x53e3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9df2, gbc.sp());
        EXPECT(0x53e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0044
        gbc.setState(0x1328, 0xeaca, 0x48a0, 0xbf21, 0x2f45, 0x6ef4, 0x1, 0x0);
        gbc.writeMem(0x1328, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xeaca, gbc.sp());
        EXPECT(0x132a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0045
        gbc.setState(0xcda5, 0x4547, 0x190, 0x71b5, 0x9db1, 0xaff, 0x1, 0x1);
        gbc.writeMem(0xcda5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4547, gbc.sp());
        EXPECT(0xcda7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcda5));
        EXPECT(0x53, gbc.readMem(0xcda6));
        // CB 53 0046
        gbc.setState(0x6670, 0x25fa, 0xc450, 0xd31c, 0x2e46, 0x914e, 0x0, 0x0);
        gbc.writeMem(0x6670, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x25fa, gbc.sp());
        EXPECT(0x6672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0047
        gbc.setState(0x811d, 0x7af2, 0x5530, 0x9f58, 0xb7ad, 0xe264, 0x0, 0x0);
        gbc.writeMem(0x811d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7af2, gbc.sp());
        EXPECT(0x811f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x811d));
        EXPECT(0x53, gbc.readMem(0x811e));
        // CB 53 0048
        gbc.setState(0x770c, 0x46e7, 0xc880, 0xae7b, 0x28a9, 0x3411, 0x1, 0x1);
        gbc.writeMem(0x770c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x46e7, gbc.sp());
        EXPECT(0x770e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0049
        gbc.setState(0xa79b, 0x3c41, 0x1e00, 0xa66c, 0xeede, 0xbe4b, 0x1, 0x1);
        gbc.writeMem(0xa79b, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3c41, gbc.sp());
        EXPECT(0xa79d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa79b));
        EXPECT(0x53, gbc.readMem(0xa79c));
        // CB 53 004A
        gbc.setState(0x8dd6, 0x5660, 0xa7b0, 0x46d7, 0x9c08, 0xbef3, 0x1, 0x0);
        gbc.writeMem(0x8dd6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5660, gbc.sp());
        EXPECT(0x8dd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dd6));
        EXPECT(0x53, gbc.readMem(0x8dd7));
        // CB 53 004C
        gbc.setState(0x8855, 0x2132, 0xb550, 0x5ed4, 0x5222, 0x7a64, 0x1, 0x0);
        gbc.writeMem(0x8855, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2132, gbc.sp());
        EXPECT(0x8857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8855));
        EXPECT(0x53, gbc.readMem(0x8856));
        // CB 53 004D
        gbc.setState(0xb1b2, 0x37f2, 0x2b30, 0x9b78, 0x61e0, 0xcb5f, 0x1, 0x0);
        gbc.writeMem(0xb1b2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x37f2, gbc.sp());
        EXPECT(0xb1b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1b2));
        EXPECT(0x53, gbc.readMem(0xb1b3));
        // CB 53 004E
        gbc.setState(0x307a, 0xfbe8, 0xae20, 0xedde, 0x6d9c, 0x43d9, 0x0, 0x0);
        gbc.writeMem(0x307a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xfbe8, gbc.sp());
        EXPECT(0x307c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 004F
        gbc.setState(0x4612, 0xe740, 0xdd80, 0xef9, 0x9d0a, 0x8cd5, 0x1, 0x1);
        gbc.writeMem(0x4612, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe740, gbc.sp());
        EXPECT(0x4614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0051
        gbc.setState(0x1001, 0x3b89, 0x5b70, 0x98bf, 0x7bd1, 0xfa40, 0x1, 0x0);
        gbc.writeMem(0x1001, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3b89, gbc.sp());
        EXPECT(0x1003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0052
        gbc.setState(0x2748, 0x3baa, 0x8930, 0x65f3, 0x71ae, 0x3b04, 0x0, 0x1);
        gbc.writeMem(0x2748, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3baa, gbc.sp());
        EXPECT(0x274a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0053
        gbc.setState(0x5c36, 0x37b5, 0xf250, 0x6163, 0xcf5e, 0xe5df, 0x1, 0x1);
        gbc.writeMem(0x5c36, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x37b5, gbc.sp());
        EXPECT(0x5c38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0054
        gbc.setState(0xd22d, 0xbacf, 0xfad0, 0xa95, 0x9b8c, 0x4519, 0x1, 0x0);
        gbc.writeMem(0xd22d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbacf, gbc.sp());
        EXPECT(0xd22f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd22d));
        EXPECT(0x53, gbc.readMem(0xd22e));
        // CB 53 0055
        gbc.setState(0xbc7f, 0x601d, 0x3250, 0x968f, 0x1b0a, 0x929f, 0x1, 0x0);
        gbc.writeMem(0xbc7f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x601d, gbc.sp());
        EXPECT(0xbc81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc7f));
        EXPECT(0x53, gbc.readMem(0xbc80));
        // CB 53 0056
        gbc.setState(0x2e8b, 0x104f, 0xa570, 0x3e8c, 0x4d9f, 0xf77b, 0x1, 0x1);
        gbc.writeMem(0x2e8b, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x104f, gbc.sp());
        EXPECT(0x2e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0057
        gbc.setState(0x1443, 0xc0ef, 0x4560, 0xa910, 0x975e, 0x5b67, 0x1, 0x0);
        gbc.writeMem(0x1443, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc0ef, gbc.sp());
        EXPECT(0x1445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0058
        gbc.setState(0x5c65, 0x1de7, 0x6640, 0x4ab4, 0x4f36, 0x8634, 0x0, 0x0);
        gbc.writeMem(0x5c65, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1de7, gbc.sp());
        EXPECT(0x5c67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0059
        gbc.setState(0x6754, 0x2c55, 0xaf30, 0xaf5e, 0x8b52, 0x2b6a, 0x0, 0x0);
        gbc.writeMem(0x6754, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2c55, gbc.sp());
        EXPECT(0x6756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 005A
        gbc.setState(0x8943, 0x7530, 0xb0b0, 0x2a74, 0x234d, 0x3a7d, 0x1, 0x1);
        gbc.writeMem(0x8943, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7530, gbc.sp());
        EXPECT(0x8945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8943));
        EXPECT(0x53, gbc.readMem(0x8944));
        // CB 53 005B
        gbc.setState(0x6773, 0x755a, 0x3bf0, 0xa928, 0xdb95, 0xa512, 0x0, 0x0);
        gbc.writeMem(0x6773, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x755a, gbc.sp());
        EXPECT(0x6775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 005D
        gbc.setState(0x364d, 0xbd38, 0x2d20, 0xadba, 0xf197, 0xd0b, 0x1, 0x1);
        gbc.writeMem(0x364d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbd38, gbc.sp());
        EXPECT(0x364f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 005F
        gbc.setState(0x12b7, 0x25e0, 0xa680, 0x35ae, 0xa608, 0xedf2, 0x0, 0x0);
        gbc.writeMem(0x12b7, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x25e0, gbc.sp());
        EXPECT(0x12b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0060
        gbc.setState(0x1ec5, 0xd6fa, 0xc490, 0xdd74, 0xb0be, 0x5ed2, 0x0, 0x0);
        gbc.writeMem(0x1ec5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd6fa, gbc.sp());
        EXPECT(0x1ec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0061
        gbc.setState(0xd445, 0xea50, 0x93d0, 0x6c7e, 0xebb7, 0x436e, 0x1, 0x0);
        gbc.writeMem(0xd445, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xea50, gbc.sp());
        EXPECT(0xd447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd445));
        EXPECT(0x53, gbc.readMem(0xd446));
        // CB 53 0062
        gbc.setState(0x119a, 0x91e2, 0xce40, 0x1167, 0x2f2e, 0x6f03, 0x0, 0x1);
        gbc.writeMem(0x119a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x91e2, gbc.sp());
        EXPECT(0x119c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0063
        gbc.setState(0xac38, 0xfb28, 0x1950, 0xff9d, 0xfb08, 0x6deb, 0x0, 0x0);
        gbc.writeMem(0xac38, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfb28, gbc.sp());
        EXPECT(0xac3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac38));
        EXPECT(0x53, gbc.readMem(0xac39));
        // CB 53 0064
        gbc.setState(0x5b5f, 0x56a7, 0xdbe0, 0x7f0d, 0xee9a, 0x79aa, 0x1, 0x1);
        gbc.writeMem(0x5b5f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x56a7, gbc.sp());
        EXPECT(0x5b61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0065
        gbc.setState(0x20bb, 0x2e9f, 0x8810, 0x6578, 0x8dae, 0x7bb4, 0x0, 0x1);
        gbc.writeMem(0x20bb, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2e9f, gbc.sp());
        EXPECT(0x20bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0066
        gbc.setState(0xdee2, 0x7291, 0x2b00, 0xd381, 0xf7a5, 0x79ef, 0x1, 0x1);
        gbc.writeMem(0xdee2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7291, gbc.sp());
        EXPECT(0xdee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdee2));
        EXPECT(0x53, gbc.readMem(0xdee3));
        // CB 53 0068
        gbc.setState(0xdf35, 0xbc5f, 0xdd90, 0x2ded, 0x6f53, 0x1e16, 0x1, 0x1);
        gbc.writeMem(0xdf35, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xbc5f, gbc.sp());
        EXPECT(0xdf37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf35));
        EXPECT(0x53, gbc.readMem(0xdf36));
        // CB 53 0069
        gbc.setState(0xc3a3, 0x1efe, 0xe30, 0xe226, 0x781c, 0xc6d4, 0x0, 0x0);
        gbc.writeMem(0xc3a3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1efe, gbc.sp());
        EXPECT(0xc3a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3a3));
        EXPECT(0x53, gbc.readMem(0xc3a4));
        // CB 53 006B
        gbc.setState(0x4655, 0x1354, 0x8af0, 0x9856, 0xe1be, 0x6be0, 0x1, 0x1);
        gbc.writeMem(0x4655, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1354, gbc.sp());
        EXPECT(0x4657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 006C
        gbc.setState(0xb091, 0x7e38, 0x2d40, 0xf429, 0x448e, 0xffb8, 0x0, 0x0);
        gbc.writeMem(0xb091, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7e38, gbc.sp());
        EXPECT(0xb093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb091));
        EXPECT(0x53, gbc.readMem(0xb092));
        // CB 53 006D
        gbc.setState(0xee87, 0x4f1f, 0xebf0, 0x6b65, 0xd34e, 0x9365, 0x1, 0x0);
        gbc.writeMem(0xee87, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4f1f, gbc.sp());
        EXPECT(0xee89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee87));
        EXPECT(0x53, gbc.readMem(0xee88));
        // CB 53 006E
        gbc.setState(0x504a, 0xc27b, 0xe7a0, 0x5c01, 0xaaa9, 0x8bf5, 0x1, 0x0);
        gbc.writeMem(0x504a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc27b, gbc.sp());
        EXPECT(0x504c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 006F
        gbc.setState(0xa6fc, 0xbeaf, 0x1320, 0xadd7, 0x11d3, 0x2e99, 0x1, 0x1);
        gbc.writeMem(0xa6fc, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbeaf, gbc.sp());
        EXPECT(0xa6fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6fc));
        EXPECT(0x53, gbc.readMem(0xa6fd));
        // CB 53 0071
        gbc.setState(0xc859, 0x5a37, 0xa230, 0xd24f, 0x6b6a, 0x2bf4, 0x1, 0x0);
        gbc.writeMem(0xc859, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5a37, gbc.sp());
        EXPECT(0xc85b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc859));
        EXPECT(0x53, gbc.readMem(0xc85a));
        // CB 53 0073
        gbc.setState(0x42c5, 0x6657, 0x7870, 0xa5f, 0xaa7f, 0x8daf, 0x1, 0x0);
        gbc.writeMem(0x42c5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6657, gbc.sp());
        EXPECT(0x42c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0074
        gbc.setState(0xc85, 0x59b3, 0xc260, 0x778a, 0xcc76, 0xe260, 0x1, 0x1);
        gbc.writeMem(0xc85, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x59b3, gbc.sp());
        EXPECT(0xc87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0075
        gbc.setState(0x7d78, 0xed20, 0xc560, 0xf455, 0xe88d, 0x1df0, 0x0, 0x0);
        gbc.writeMem(0x7d78, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xed20, gbc.sp());
        EXPECT(0x7d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0076
        gbc.setState(0x39b9, 0xd74b, 0x33b0, 0xcae, 0x1b88, 0xb3fc, 0x0, 0x0);
        gbc.writeMem(0x39b9, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd74b, gbc.sp());
        EXPECT(0x39bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0077
        gbc.setState(0x1a91, 0xfefa, 0x2820, 0xa73e, 0x7a48, 0xe9a0, 0x1, 0x1);
        gbc.writeMem(0x1a91, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfefa, gbc.sp());
        EXPECT(0x1a93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0078
        gbc.setState(0x7554, 0x34f, 0x62f0, 0x4604, 0x1d45, 0xcc3f, 0x0, 0x1);
        gbc.writeMem(0x7554, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x34f, gbc.sp());
        EXPECT(0x7556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 007A
        gbc.setState(0xa90a, 0x6b3d, 0xc6f0, 0x4acd, 0x207b, 0xbbc0, 0x1, 0x0);
        gbc.writeMem(0xa90a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6b3d, gbc.sp());
        EXPECT(0xa90c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa90a));
        EXPECT(0x53, gbc.readMem(0xa90b));
        // CB 53 007B
        gbc.setState(0x9079, 0xc3f7, 0x1c20, 0xb8ad, 0xe4fa, 0x4cb5, 0x1, 0x1);
        gbc.writeMem(0x9079, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc3f7, gbc.sp());
        EXPECT(0x907b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9079));
        EXPECT(0x53, gbc.readMem(0x907a));
        // CB 53 007C
        gbc.setState(0xb5da, 0xc9d7, 0x10, 0x181d, 0x6e85, 0xd602, 0x1, 0x0);
        gbc.writeMem(0xb5da, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc9d7, gbc.sp());
        EXPECT(0xb5dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5da));
        EXPECT(0x53, gbc.readMem(0xb5db));
        // CB 53 007D
        gbc.setState(0xa9ba, 0x3df2, 0x3850, 0x2e8a, 0xb847, 0x7cc4, 0x0, 0x1);
        gbc.writeMem(0xa9ba, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3df2, gbc.sp());
        EXPECT(0xa9bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ba));
        EXPECT(0x53, gbc.readMem(0xa9bb));
        // CB 53 007E
        gbc.setState(0x1320, 0x4a99, 0xc300, 0x732a, 0xd7e3, 0x6f31, 0x0, 0x0);
        gbc.writeMem(0x1320, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4a99, gbc.sp());
        EXPECT(0x1322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 007F
        gbc.setState(0x6739, 0x1fad, 0xd5a0, 0xbb05, 0x7609, 0x15c0, 0x0, 0x0);
        gbc.writeMem(0x6739, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1fad, gbc.sp());
        EXPECT(0x673b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0080
        gbc.setState(0xa0dc, 0x7c1a, 0xc410, 0xe965, 0x2d72, 0xe46e, 0x1, 0x0);
        gbc.writeMem(0xa0dc, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7c1a, gbc.sp());
        EXPECT(0xa0de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0dc));
        EXPECT(0x53, gbc.readMem(0xa0dd));
        // CB 53 0081
        gbc.setState(0xe694, 0xdb3, 0xf700, 0x1912, 0x4302, 0xb968, 0x0, 0x1);
        gbc.writeMem(0xe694, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xdb3, gbc.sp());
        EXPECT(0xe696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe694));
        EXPECT(0x53, gbc.readMem(0xe695));
        // CB 53 0082
        gbc.setState(0x404a, 0x9943, 0xd360, 0x1bf7, 0xa065, 0x811e, 0x0, 0x0);
        gbc.writeMem(0x404a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9943, gbc.sp());
        EXPECT(0x404c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0083
        gbc.setState(0x270a, 0x306b, 0xfe50, 0xdadd, 0x4766, 0x5e7b, 0x0, 0x1);
        gbc.writeMem(0x270a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x306b, gbc.sp());
        EXPECT(0x270c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0084
        gbc.setState(0x2e25, 0xafcf, 0x4b50, 0x25e2, 0x7392, 0xe12, 0x1, 0x0);
        gbc.writeMem(0x2e25, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xafcf, gbc.sp());
        EXPECT(0x2e27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0085
        gbc.setState(0x9a0d, 0xba60, 0x3880, 0x9913, 0xdef3, 0x6d5f, 0x0, 0x1);
        gbc.writeMem(0x9a0d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xba60, gbc.sp());
        EXPECT(0x9a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a0d));
        EXPECT(0x53, gbc.readMem(0x9a0e));
        // CB 53 0086
        gbc.setState(0xe8c, 0x2f21, 0xab30, 0x3ed2, 0x6cf4, 0x7d07, 0x0, 0x1);
        gbc.writeMem(0xe8c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2f21, gbc.sp());
        EXPECT(0xe8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0087
        gbc.setState(0x6e60, 0xec61, 0xc5e0, 0x71fc, 0x5873, 0xa48b, 0x0, 0x1);
        gbc.writeMem(0x6e60, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xec61, gbc.sp());
        EXPECT(0x6e62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0088
        gbc.setState(0xebb8, 0x304d, 0x3540, 0xbb61, 0xc58c, 0xf05, 0x1, 0x0);
        gbc.writeMem(0xebb8, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x304d, gbc.sp());
        EXPECT(0xebba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb8));
        EXPECT(0x53, gbc.readMem(0xebb9));
        // CB 53 0089
        gbc.setState(0xbbd2, 0xf50d, 0x2150, 0x5d2c, 0x4d0d, 0xb6fa, 0x0, 0x1);
        gbc.writeMem(0xbbd2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf50d, gbc.sp());
        EXPECT(0xbbd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd2));
        EXPECT(0x53, gbc.readMem(0xbbd3));
        // CB 53 008A
        gbc.setState(0x9237, 0x1e28, 0x270, 0x4ee1, 0xf439, 0x3a9, 0x1, 0x0);
        gbc.writeMem(0x9237, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1e28, gbc.sp());
        EXPECT(0x9239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9237));
        EXPECT(0x53, gbc.readMem(0x9238));
        // CB 53 008B
        gbc.setState(0x3dd1, 0x18d2, 0xe830, 0x6676, 0xa55e, 0xabdd, 0x1, 0x1);
        gbc.writeMem(0x3dd1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x18d2, gbc.sp());
        EXPECT(0x3dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 008C
        gbc.setState(0xbb2e, 0xf577, 0xe820, 0x9f69, 0xa663, 0xadd9, 0x1, 0x1);
        gbc.writeMem(0xbb2e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf577, gbc.sp());
        EXPECT(0xbb30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb2e));
        EXPECT(0x53, gbc.readMem(0xbb2f));
        // CB 53 008D
        gbc.setState(0xc727, 0xbfce, 0x70d0, 0x42c4, 0xa674, 0x9b02, 0x1, 0x1);
        gbc.writeMem(0xc727, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbfce, gbc.sp());
        EXPECT(0xc729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc727));
        EXPECT(0x53, gbc.readMem(0xc728));
        // CB 53 008E
        gbc.setState(0xd98e, 0x6353, 0x8650, 0xb8a9, 0xf482, 0x8b83, 0x1, 0x0);
        gbc.writeMem(0xd98e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6353, gbc.sp());
        EXPECT(0xd990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd98e));
        EXPECT(0x53, gbc.readMem(0xd98f));
        // CB 53 008F
        gbc.setState(0x7990, 0x3b75, 0xb40, 0xc6f2, 0x401b, 0xe727, 0x0, 0x0);
        gbc.writeMem(0x7990, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3b75, gbc.sp());
        EXPECT(0x7992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0090
        gbc.setState(0x94fc, 0x672f, 0x2fe0, 0x364b, 0x12d7, 0xe20e, 0x1, 0x0);
        gbc.writeMem(0x94fc, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x672f, gbc.sp());
        EXPECT(0x94fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94fc));
        EXPECT(0x53, gbc.readMem(0x94fd));
        // CB 53 0091
        gbc.setState(0x5160, 0x663c, 0xbfc0, 0x3763, 0x8ded, 0x8675, 0x1, 0x0);
        gbc.writeMem(0x5160, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x663c, gbc.sp());
        EXPECT(0x5162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0092
        gbc.setState(0xa68a, 0xa90b, 0xe9f0, 0x75c8, 0x78d6, 0x16ef, 0x1, 0x0);
        gbc.writeMem(0xa68a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa90b, gbc.sp());
        EXPECT(0xa68c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa68a));
        EXPECT(0x53, gbc.readMem(0xa68b));
        // CB 53 0093
        gbc.setState(0x5631, 0xff08, 0x7210, 0xfcc7, 0x3eed, 0xadaf, 0x1, 0x1);
        gbc.writeMem(0x5631, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xff08, gbc.sp());
        EXPECT(0x5633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0094
        gbc.setState(0xa0ba, 0x964, 0x7a70, 0x20e1, 0x3439, 0x5454, 0x1, 0x1);
        gbc.writeMem(0xa0ba, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x964, gbc.sp());
        EXPECT(0xa0bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ba));
        EXPECT(0x53, gbc.readMem(0xa0bb));
        // CB 53 0095
        gbc.setState(0x351a, 0x22fe, 0x6990, 0x41a7, 0xb9e3, 0x970, 0x1, 0x0);
        gbc.writeMem(0x351a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x22fe, gbc.sp());
        EXPECT(0x351c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0096
        gbc.setState(0xd4fb, 0xea99, 0x41f0, 0xbac, 0xce04, 0x5a91, 0x1, 0x0);
        gbc.writeMem(0xd4fb, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xea99, gbc.sp());
        EXPECT(0xd4fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4fb));
        EXPECT(0x53, gbc.readMem(0xd4fc));
        // CB 53 0097
        gbc.setState(0x518c, 0xcd8d, 0x4330, 0xd2e2, 0x6a36, 0xd310, 0x1, 0x0);
        gbc.writeMem(0x518c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcd8d, gbc.sp());
        EXPECT(0x518e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0099
        gbc.setState(0x1f43, 0x8d20, 0x6420, 0x1d4f, 0x96fa, 0xe67e, 0x1, 0x1);
        gbc.writeMem(0x1f43, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8d20, gbc.sp());
        EXPECT(0x1f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 009A
        gbc.setState(0xcdf5, 0x482a, 0x2530, 0x1ef3, 0x5b61, 0x1663, 0x0, 0x1);
        gbc.writeMem(0xcdf5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x482a, gbc.sp());
        EXPECT(0xcdf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdf5));
        EXPECT(0x53, gbc.readMem(0xcdf6));
        // CB 53 009B
        gbc.setState(0xd164, 0x1f2f, 0xf1d0, 0xe10a, 0xb6ee, 0xca1b, 0x1, 0x1);
        gbc.writeMem(0xd164, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1f2f, gbc.sp());
        EXPECT(0xd166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd164));
        EXPECT(0x53, gbc.readMem(0xd165));
        // CB 53 009C
        gbc.setState(0x6f61, 0x9828, 0x6850, 0xb59c, 0x587d, 0xf4df, 0x1, 0x1);
        gbc.writeMem(0x6f61, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9828, gbc.sp());
        EXPECT(0x6f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 009E
        gbc.setState(0x98ae, 0x70a6, 0x43b0, 0x8a45, 0x4f5a, 0xcdca, 0x1, 0x1);
        gbc.writeMem(0x98ae, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x70a6, gbc.sp());
        EXPECT(0x98b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ae));
        EXPECT(0x53, gbc.readMem(0x98af));
        // CB 53 009F
        gbc.setState(0x31e0, 0xab86, 0xddf0, 0x943b, 0xad3f, 0xe82a, 0x0, 0x0);
        gbc.writeMem(0x31e0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xab86, gbc.sp());
        EXPECT(0x31e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00A0
        gbc.setState(0x89b4, 0xaeb6, 0x2580, 0x8f1c, 0xa59c, 0x3d80, 0x1, 0x0);
        gbc.writeMem(0x89b4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xaeb6, gbc.sp());
        EXPECT(0x89b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b4));
        EXPECT(0x53, gbc.readMem(0x89b5));
        // CB 53 00A1
        gbc.setState(0x69e5, 0x238, 0x31f0, 0x2c6d, 0x3d68, 0xc6f0, 0x0, 0x0);
        gbc.writeMem(0x69e5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x238, gbc.sp());
        EXPECT(0x69e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00A2
        gbc.setState(0x2d39, 0xb591, 0xdd80, 0xf209, 0x4382, 0x365f, 0x1, 0x0);
        gbc.writeMem(0x2d39, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb591, gbc.sp());
        EXPECT(0x2d3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00A4
        gbc.setState(0x2139, 0x5f66, 0xa540, 0x6473, 0x4cd8, 0xd7ed, 0x0, 0x1);
        gbc.writeMem(0x2139, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5f66, gbc.sp());
        EXPECT(0x213b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00A5
        gbc.setState(0xceed, 0xe9ae, 0x5970, 0x7b6b, 0x7826, 0xb18a, 0x0, 0x1);
        gbc.writeMem(0xceed, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe9ae, gbc.sp());
        EXPECT(0xceef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceed));
        EXPECT(0x53, gbc.readMem(0xceee));
        // CB 53 00A6
        gbc.setState(0xabb0, 0xaa6d, 0x3090, 0xd2d, 0x70fd, 0xd28d, 0x0, 0x1);
        gbc.writeMem(0xabb0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xaa6d, gbc.sp());
        EXPECT(0xabb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb0));
        EXPECT(0x53, gbc.readMem(0xabb1));
        // CB 53 00A7
        gbc.setState(0x82a1, 0xeb09, 0x7a20, 0x77c3, 0x7533, 0x7f04, 0x0, 0x0);
        gbc.writeMem(0x82a1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xeb09, gbc.sp());
        EXPECT(0x82a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82a1));
        EXPECT(0x53, gbc.readMem(0x82a2));
        // CB 53 00A8
        gbc.setState(0x57ab, 0x4f67, 0x56b0, 0xe796, 0x4c3c, 0xe205, 0x0, 0x0);
        gbc.writeMem(0x57ab, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4f67, gbc.sp());
        EXPECT(0x57ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00A9
        gbc.setState(0x887f, 0xf69, 0x8e70, 0xf9f0, 0x7eed, 0xab4a, 0x1, 0x1);
        gbc.writeMem(0x887f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf69, gbc.sp());
        EXPECT(0x8881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x887f));
        EXPECT(0x53, gbc.readMem(0x8880));
        // CB 53 00AA
        gbc.setState(0xca23, 0x9cbc, 0xfe10, 0x567c, 0xe29d, 0x1a5d, 0x1, 0x0);
        gbc.writeMem(0xca23, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9cbc, gbc.sp());
        EXPECT(0xca25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca23));
        EXPECT(0x53, gbc.readMem(0xca24));
        // CB 53 00AB
        gbc.setState(0x57f2, 0x3b59, 0x3e50, 0xf949, 0xbab1, 0xb61c, 0x0, 0x0);
        gbc.writeMem(0x57f2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3b59, gbc.sp());
        EXPECT(0x57f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00AC
        gbc.setState(0x9a8c, 0x21ab, 0xa0b0, 0x2d85, 0x26b5, 0x251, 0x0, 0x0);
        gbc.writeMem(0x9a8c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x21ab, gbc.sp());
        EXPECT(0x9a8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a8c));
        EXPECT(0x53, gbc.readMem(0x9a8d));
        // CB 53 00AD
        gbc.setState(0x30f0, 0xdd0d, 0x75b0, 0x523e, 0x152c, 0xdd47, 0x0, 0x1);
        gbc.writeMem(0x30f0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xdd0d, gbc.sp());
        EXPECT(0x30f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00AE
        gbc.setState(0xbbba, 0x7574, 0x5820, 0x72d5, 0x23df, 0x660f, 0x0, 0x0);
        gbc.writeMem(0xbbba, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7574, gbc.sp());
        EXPECT(0xbbbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbba));
        EXPECT(0x53, gbc.readMem(0xbbbb));
        // CB 53 00AF
        gbc.setState(0xc038, 0xa235, 0xc540, 0x1a21, 0xccb1, 0xda34, 0x0, 0x1);
        gbc.writeMem(0xc038, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa235, gbc.sp());
        EXPECT(0xc03a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc038));
        EXPECT(0x53, gbc.readMem(0xc039));
        // CB 53 00B0
        gbc.setState(0xb099, 0xec10, 0xe40, 0x2cb6, 0x3ec0, 0x642e, 0x0, 0x1);
        gbc.writeMem(0xb099, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xec10, gbc.sp());
        EXPECT(0xb09b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb099));
        EXPECT(0x53, gbc.readMem(0xb09a));
        // CB 53 00B1
        gbc.setState(0x947e, 0xb822, 0x61b0, 0xcf1e, 0x79b6, 0x9c3f, 0x1, 0x1);
        gbc.writeMem(0x947e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb822, gbc.sp());
        EXPECT(0x9480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x947e));
        EXPECT(0x53, gbc.readMem(0x947f));
        // CB 53 00B2
        gbc.setState(0xdbfb, 0x1d4b, 0xb8b0, 0x3ed1, 0x7394, 0x726a, 0x1, 0x1);
        gbc.writeMem(0xdbfb, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1d4b, gbc.sp());
        EXPECT(0xdbfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbfb));
        EXPECT(0x53, gbc.readMem(0xdbfc));
        // CB 53 00B3
        gbc.setState(0xac22, 0x391b, 0x96f0, 0x38cb, 0xa535, 0x6730, 0x1, 0x0);
        gbc.writeMem(0xac22, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x391b, gbc.sp());
        EXPECT(0xac24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac22));
        EXPECT(0x53, gbc.readMem(0xac23));
        // CB 53 00B4
        gbc.setState(0xa236, 0x660f, 0xcf70, 0xf1d, 0xdd2a, 0x3fb3, 0x0, 0x0);
        gbc.writeMem(0xa236, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x660f, gbc.sp());
        EXPECT(0xa238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa236));
        EXPECT(0x53, gbc.readMem(0xa237));
        // CB 53 00B5
        gbc.setState(0x7faa, 0x8d04, 0xbcf0, 0x7e35, 0xa323, 0x3585, 0x1, 0x1);
        gbc.writeMem(0x7faa, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8d04, gbc.sp());
        EXPECT(0x7fac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00B6
        gbc.setState(0x706e, 0x9ef7, 0x9c30, 0x515, 0x2c7, 0x9b33, 0x1, 0x1);
        gbc.writeMem(0x706e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9ef7, gbc.sp());
        EXPECT(0x7070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00B7
        gbc.setState(0x50c0, 0xf712, 0xdd90, 0xd55e, 0x2e2, 0x3823, 0x0, 0x0);
        gbc.writeMem(0x50c0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf712, gbc.sp());
        EXPECT(0x50c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00B8
        gbc.setState(0x7ead, 0xe1ac, 0x4700, 0xd532, 0x8e69, 0xda1d, 0x1, 0x1);
        gbc.writeMem(0x7ead, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe1ac, gbc.sp());
        EXPECT(0x7eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00B9
        gbc.setState(0xba76, 0xfd37, 0x9490, 0x46dc, 0x8acf, 0x8e88, 0x0, 0x0);
        gbc.writeMem(0xba76, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfd37, gbc.sp());
        EXPECT(0xba78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba76));
        EXPECT(0x53, gbc.readMem(0xba77));
        // CB 53 00BA
        gbc.setState(0x94c3, 0xed3c, 0x10a0, 0xffd, 0x5ea0, 0xd208, 0x1, 0x1);
        gbc.writeMem(0x94c3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xed3c, gbc.sp());
        EXPECT(0x94c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c3));
        EXPECT(0x53, gbc.readMem(0x94c4));
        // CB 53 00BB
        gbc.setState(0x73db, 0xc90e, 0xd110, 0x6820, 0x94d9, 0x11f7, 0x1, 0x0);
        gbc.writeMem(0x73db, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc90e, gbc.sp());
        EXPECT(0x73dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00BC
        gbc.setState(0xb121, 0x6601, 0xf720, 0xd3b8, 0xcac0, 0x3be1, 0x1, 0x1);
        gbc.writeMem(0xb121, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6601, gbc.sp());
        EXPECT(0xb123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb121));
        EXPECT(0x53, gbc.readMem(0xb122));
        // CB 53 00BD
        gbc.setState(0xd9e2, 0x685, 0x6f10, 0x7f1d, 0x333, 0x263a, 0x1, 0x1);
        gbc.writeMem(0xd9e2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x685, gbc.sp());
        EXPECT(0xd9e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e2));
        EXPECT(0x53, gbc.readMem(0xd9e3));
        // CB 53 00BE
        gbc.setState(0x2a82, 0xf032, 0xb8b0, 0x79fa, 0x4337, 0xbe4, 0x1, 0x0);
        gbc.writeMem(0x2a82, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf032, gbc.sp());
        EXPECT(0x2a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00BF
        gbc.setState(0xdbb7, 0x4f1c, 0x12e0, 0xea26, 0xa910, 0xb12b, 0x1, 0x0);
        gbc.writeMem(0xdbb7, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4f1c, gbc.sp());
        EXPECT(0xdbb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb7));
        EXPECT(0x53, gbc.readMem(0xdbb8));
        // CB 53 00C0
        gbc.setState(0x90f7, 0xc7ab, 0xfeb0, 0xcc71, 0xa66e, 0xaccd, 0x0, 0x0);
        gbc.writeMem(0x90f7, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc7ab, gbc.sp());
        EXPECT(0x90f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f7));
        EXPECT(0x53, gbc.readMem(0x90f8));
        // CB 53 00C1
        gbc.setState(0x2fda, 0x7f2b, 0xf270, 0xac02, 0xd0b1, 0xae58, 0x1, 0x0);
        gbc.writeMem(0x2fda, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7f2b, gbc.sp());
        EXPECT(0x2fdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00C2
        gbc.setState(0x9b46, 0xfe58, 0x20d0, 0x3bf4, 0xd496, 0x1d19, 0x0, 0x1);
        gbc.writeMem(0x9b46, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfe58, gbc.sp());
        EXPECT(0x9b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b46));
        EXPECT(0x53, gbc.readMem(0x9b47));
        // CB 53 00C3
        gbc.setState(0x7c22, 0xe839, 0xf0f0, 0x78db, 0xe825, 0x5f2d, 0x0, 0x1);
        gbc.writeMem(0x7c22, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe839, gbc.sp());
        EXPECT(0x7c24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00C4
        gbc.setState(0xd87f, 0x796a, 0xea30, 0xca02, 0x89d1, 0x6ec6, 0x1, 0x1);
        gbc.writeMem(0xd87f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x796a, gbc.sp());
        EXPECT(0xd881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd87f));
        EXPECT(0x53, gbc.readMem(0xd880));
        // CB 53 00C5
        gbc.setState(0xc1f6, 0xf43, 0xb940, 0xc361, 0x3422, 0x654c, 0x1, 0x1);
        gbc.writeMem(0xc1f6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf43, gbc.sp());
        EXPECT(0xc1f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1f6));
        EXPECT(0x53, gbc.readMem(0xc1f7));
        // CB 53 00C6
        gbc.setState(0x1302, 0x90df, 0xa7c0, 0xcf18, 0xf092, 0x757f, 0x0, 0x1);
        gbc.writeMem(0x1302, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x90df, gbc.sp());
        EXPECT(0x1304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00C7
        gbc.setState(0x1538, 0x17ab, 0xcf80, 0x5d15, 0x62f4, 0x3386, 0x1, 0x0);
        gbc.writeMem(0x1538, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x17ab, gbc.sp());
        EXPECT(0x153a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00C8
        gbc.setState(0x93f3, 0xde9f, 0x16c0, 0xb843, 0x90e9, 0xab64, 0x1, 0x0);
        gbc.writeMem(0x93f3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xde9f, gbc.sp());
        EXPECT(0x93f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f3));
        EXPECT(0x53, gbc.readMem(0x93f4));
        // CB 53 00C9
        gbc.setState(0xbbc4, 0xff2c, 0x7370, 0xe757, 0x51ea, 0xd914, 0x0, 0x1);
        gbc.writeMem(0xbbc4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xff2c, gbc.sp());
        EXPECT(0xbbc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc4));
        EXPECT(0x53, gbc.readMem(0xbbc5));
        // CB 53 00CA
        gbc.setState(0x72b7, 0x7d89, 0x3220, 0x5e5a, 0xc24e, 0x965d, 0x0, 0x0);
        gbc.writeMem(0x72b7, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7d89, gbc.sp());
        EXPECT(0x72b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00CB
        gbc.setState(0xd344, 0x9a9d, 0x18d0, 0x1fca, 0x8e55, 0xea1a, 0x1, 0x0);
        gbc.writeMem(0xd344, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9a9d, gbc.sp());
        EXPECT(0xd346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd344));
        EXPECT(0x53, gbc.readMem(0xd345));
        // CB 53 00CC
        gbc.setState(0x4bee, 0x9ded, 0xcd50, 0x21c5, 0xccbf, 0xd48c, 0x1, 0x1);
        gbc.writeMem(0x4bee, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9ded, gbc.sp());
        EXPECT(0x4bf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00CD
        gbc.setState(0x7911, 0xc14d, 0x300, 0x9600, 0xde8d, 0x450f, 0x1, 0x0);
        gbc.writeMem(0x7911, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc14d, gbc.sp());
        EXPECT(0x7913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00CE
        gbc.setState(0x8b39, 0xfcb8, 0xd6d0, 0x86b9, 0x4576, 0x3990, 0x0, 0x0);
        gbc.writeMem(0x8b39, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfcb8, gbc.sp());
        EXPECT(0x8b3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b39));
        EXPECT(0x53, gbc.readMem(0x8b3a));
        // CB 53 00CF
        gbc.setState(0x4566, 0x3f86, 0xfd90, 0x7f99, 0x5a9e, 0x9cbb, 0x0, 0x1);
        gbc.writeMem(0x4566, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3f86, gbc.sp());
        EXPECT(0x4568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00D0
        gbc.setState(0xdb3e, 0x6622, 0x3540, 0x1b43, 0x45cc, 0x17e, 0x1, 0x1);
        gbc.writeMem(0xdb3e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6622, gbc.sp());
        EXPECT(0xdb40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb3e));
        EXPECT(0x53, gbc.readMem(0xdb3f));
        // CB 53 00D1
        gbc.setState(0x8f6c, 0xaf7, 0x4a80, 0xf778, 0x3ad1, 0x494c, 0x1, 0x1);
        gbc.writeMem(0x8f6c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xaf7, gbc.sp());
        EXPECT(0x8f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f6c));
        EXPECT(0x53, gbc.readMem(0x8f6d));
        // CB 53 00D2
        gbc.setState(0x65a6, 0x3be3, 0xab70, 0x5c46, 0x6dab, 0x323, 0x0, 0x0);
        gbc.writeMem(0x65a6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3be3, gbc.sp());
        EXPECT(0x65a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00D3
        gbc.setState(0x5c7d, 0x96d0, 0x6130, 0x41bf, 0xc2e0, 0x8cdc, 0x1, 0x1);
        gbc.writeMem(0x5c7d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x96d0, gbc.sp());
        EXPECT(0x5c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00D4
        gbc.setState(0x1685, 0xde89, 0x9310, 0x536, 0x286c, 0x5b90, 0x1, 0x0);
        gbc.writeMem(0x1685, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xde89, gbc.sp());
        EXPECT(0x1687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00D5
        gbc.setState(0xee3f, 0x9238, 0x9990, 0x118a, 0xff0a, 0x51ee, 0x1, 0x0);
        gbc.writeMem(0xee3f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9238, gbc.sp());
        EXPECT(0xee41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee3f));
        EXPECT(0x53, gbc.readMem(0xee40));
        // CB 53 00D6
        gbc.setState(0x5ace, 0x40c8, 0x67f0, 0xcccb, 0xea3b, 0x438b, 0x1, 0x0);
        gbc.writeMem(0x5ace, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x40c8, gbc.sp());
        EXPECT(0x5ad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00D7
        gbc.setState(0x18fa, 0xf748, 0xa690, 0x16d0, 0xd68d, 0xe64, 0x0, 0x1);
        gbc.writeMem(0x18fa, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf748, gbc.sp());
        EXPECT(0x18fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00D8
        gbc.setState(0xae4f, 0x1bc, 0x4f30, 0x4afb, 0x5691, 0xb894, 0x1, 0x1);
        gbc.writeMem(0xae4f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1bc, gbc.sp());
        EXPECT(0xae51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae4f));
        EXPECT(0x53, gbc.readMem(0xae50));
        // CB 53 00D9
        gbc.setState(0x8977, 0x3e00, 0x8c50, 0x2572, 0xac70, 0x8125, 0x1, 0x1);
        gbc.writeMem(0x8977, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3e00, gbc.sp());
        EXPECT(0x8979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8977));
        EXPECT(0x53, gbc.readMem(0x8978));
        // CB 53 00DA
        gbc.setState(0x3f2b, 0x6209, 0x6270, 0xfdcd, 0xb29f, 0x9f5e, 0x0, 0x1);
        gbc.writeMem(0x3f2b, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6209, gbc.sp());
        EXPECT(0x3f2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00DB
        gbc.setState(0x720, 0x7745, 0x560, 0x3adc, 0xe465, 0x4b5d, 0x1, 0x0);
        gbc.writeMem(0x720, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7745, gbc.sp());
        EXPECT(0x722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00DC
        gbc.setState(0x41e1, 0x52c5, 0xcc80, 0x69c8, 0x50e5, 0x1b85, 0x0, 0x1);
        gbc.writeMem(0x41e1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x52c5, gbc.sp());
        EXPECT(0x41e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00DD
        gbc.setState(0x41c4, 0x70a9, 0x5e30, 0x71de, 0x44f9, 0x57e7, 0x0, 0x0);
        gbc.writeMem(0x41c4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x70a9, gbc.sp());
        EXPECT(0x41c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00DE
        gbc.setState(0x4740, 0x221b, 0xa060, 0x82a5, 0x4a3d, 0x20c8, 0x0, 0x0);
        gbc.writeMem(0x4740, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x221b, gbc.sp());
        EXPECT(0x4742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00DF
        gbc.setState(0xc93, 0x10f9, 0x5190, 0xe4b3, 0xb0f3, 0x960c, 0x1, 0x1);
        gbc.writeMem(0xc93, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x10f9, gbc.sp());
        EXPECT(0xc95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00E0
        gbc.setState(0x4c36, 0xe4d6, 0x2000, 0xc281, 0xcf9a, 0x3a94, 0x1, 0x0);
        gbc.writeMem(0x4c36, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe4d6, gbc.sp());
        EXPECT(0x4c38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00E1
        gbc.setState(0x3847, 0x74c5, 0xb80, 0x71ca, 0xb205, 0xd5c, 0x1, 0x1);
        gbc.writeMem(0x3847, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x74c5, gbc.sp());
        EXPECT(0x3849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00E2
        gbc.setState(0x4738, 0x86a0, 0xbd40, 0xcabe, 0x1f70, 0x238d, 0x1, 0x0);
        gbc.writeMem(0x4738, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x86a0, gbc.sp());
        EXPECT(0x473a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00E3
        gbc.setState(0x23d4, 0x4f60, 0x9c60, 0x45d9, 0x4f27, 0x31bd, 0x0, 0x0);
        gbc.writeMem(0x23d4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4f60, gbc.sp());
        EXPECT(0x23d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00E4
        gbc.setState(0x6865, 0xb539, 0x6ea0, 0x3465, 0x2c64, 0x2ffa, 0x0, 0x0);
        gbc.writeMem(0x6865, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb539, gbc.sp());
        EXPECT(0x6867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00E5
        gbc.setState(0xa3ad, 0xcd19, 0xdb0, 0x611f, 0xe2d8, 0x2424, 0x1, 0x0);
        gbc.writeMem(0xa3ad, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcd19, gbc.sp());
        EXPECT(0xa3af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ad));
        EXPECT(0x53, gbc.readMem(0xa3ae));
        // CB 53 00E6
        gbc.setState(0x6b89, 0x16a2, 0x5570, 0x73c7, 0x73d1, 0xd2f8, 0x0, 0x0);
        gbc.writeMem(0x6b89, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x16a2, gbc.sp());
        EXPECT(0x6b8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00E7
        gbc.setState(0x225b, 0xe64a, 0xcae0, 0xd006, 0xc7df, 0x5803, 0x1, 0x0);
        gbc.writeMem(0x225b, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe64a, gbc.sp());
        EXPECT(0x225d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00E8
        gbc.setState(0xdae2, 0x2907, 0x4a40, 0xa5d9, 0x2622, 0x8da1, 0x0, 0x0);
        gbc.writeMem(0xdae2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2907, gbc.sp());
        EXPECT(0xdae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae2));
        EXPECT(0x53, gbc.readMem(0xdae3));
        // CB 53 00E9
        gbc.setState(0x8bf1, 0xe225, 0xd8d0, 0x702e, 0x1c7, 0xb888, 0x0, 0x1);
        gbc.writeMem(0x8bf1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe225, gbc.sp());
        EXPECT(0x8bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf1));
        EXPECT(0x53, gbc.readMem(0x8bf2));
        // CB 53 00EA
        gbc.setState(0x2849, 0xe3be, 0x33a0, 0x48f9, 0x6aa8, 0x4152, 0x1, 0x1);
        gbc.writeMem(0x2849, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe3be, gbc.sp());
        EXPECT(0x284b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00EB
        gbc.setState(0xa9e1, 0x263f, 0xed10, 0xb220, 0x402f, 0xf269, 0x1, 0x0);
        gbc.writeMem(0xa9e1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x263f, gbc.sp());
        EXPECT(0xa9e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9e1));
        EXPECT(0x53, gbc.readMem(0xa9e2));
        // CB 53 00EC
        gbc.setState(0x32fb, 0xd68d, 0x4c30, 0x7e, 0xc847, 0x11d2, 0x0, 0x1);
        gbc.writeMem(0x32fb, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd68d, gbc.sp());
        EXPECT(0x32fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00ED
        gbc.setState(0x3d64, 0x3f26, 0x65a0, 0x8735, 0x17ca, 0x3670, 0x1, 0x1);
        gbc.writeMem(0x3d64, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3f26, gbc.sp());
        EXPECT(0x3d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00EE
        gbc.setState(0x9957, 0x7488, 0x4250, 0x28ae, 0xdc79, 0xbf9d, 0x1, 0x0);
        gbc.writeMem(0x9957, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7488, gbc.sp());
        EXPECT(0x9959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9957));
        EXPECT(0x53, gbc.readMem(0x9958));
        // CB 53 00EF
        gbc.setState(0x88c6, 0xfcbd, 0x5190, 0x96fc, 0xee49, 0x5cf1, 0x0, 0x0);
        gbc.writeMem(0x88c6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfcbd, gbc.sp());
        EXPECT(0x88c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c6));
        EXPECT(0x53, gbc.readMem(0x88c7));
        // CB 53 00F0
        gbc.setState(0x1bd4, 0xf721, 0x8b0, 0x833b, 0x300a, 0x3753, 0x0, 0x1);
        gbc.writeMem(0x1bd4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf721, gbc.sp());
        EXPECT(0x1bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00F1
        gbc.setState(0x9da4, 0xb0dd, 0x30e0, 0xec4c, 0x33fd, 0x5145, 0x1, 0x0);
        gbc.writeMem(0x9da4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb0dd, gbc.sp());
        EXPECT(0x9da6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9da4));
        EXPECT(0x53, gbc.readMem(0x9da5));
        // CB 53 00F2
        gbc.setState(0x5060, 0x191, 0x7050, 0x7ffd, 0x3b0b, 0xb122, 0x0, 0x1);
        gbc.writeMem(0x5060, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x191, gbc.sp());
        EXPECT(0x5062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00F3
        gbc.setState(0x8d21, 0x687c, 0xa1a0, 0x644c, 0x590c, 0x899f, 0x1, 0x1);
        gbc.writeMem(0x8d21, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x687c, gbc.sp());
        EXPECT(0x8d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d21));
        EXPECT(0x53, gbc.readMem(0x8d22));
        // CB 53 00F4
        gbc.setState(0xaae2, 0xe5a6, 0x2800, 0xda0f, 0xe8fa, 0x8343, 0x1, 0x1);
        gbc.writeMem(0xaae2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe5a6, gbc.sp());
        EXPECT(0xaae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaae2));
        EXPECT(0x53, gbc.readMem(0xaae3));
        // CB 53 00F5
        gbc.setState(0x28f1, 0xc21b, 0xff40, 0xeec4, 0x8130, 0x2570, 0x0, 0x1);
        gbc.writeMem(0x28f1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc21b, gbc.sp());
        EXPECT(0x28f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00F6
        gbc.setState(0xc97, 0x3c99, 0x25f0, 0xcdb2, 0x5090, 0xd8f1, 0x0, 0x0);
        gbc.writeMem(0xc97, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3c99, gbc.sp());
        EXPECT(0xc99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00F7
        gbc.setState(0xaa50, 0xf2a7, 0x7240, 0x3977, 0xa468, 0x591e, 0x1, 0x0);
        gbc.writeMem(0xaa50, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf2a7, gbc.sp());
        EXPECT(0xaa52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa50));
        EXPECT(0x53, gbc.readMem(0xaa51));
        // CB 53 00F8
        gbc.setState(0x4cfa, 0x2e43, 0x41e0, 0xe8cf, 0x8d46, 0xd0b5, 0x0, 0x1);
        gbc.writeMem(0x4cfa, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2e43, gbc.sp());
        EXPECT(0x4cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00F9
        gbc.setState(0xa1b2, 0x7232, 0xbfa0, 0xd28a, 0xba30, 0x2fea, 0x1, 0x0);
        gbc.writeMem(0xa1b2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7232, gbc.sp());
        EXPECT(0xa1b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b2));
        EXPECT(0x53, gbc.readMem(0xa1b3));
        // CB 53 00FA
        gbc.setState(0x5c98, 0xdc8b, 0x5a40, 0xf2a, 0xb8de, 0xf113, 0x1, 0x0);
        gbc.writeMem(0x5c98, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xdc8b, gbc.sp());
        EXPECT(0x5c9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00FB
        gbc.setState(0x2c25, 0x1f1b, 0x9f40, 0x679a, 0xd42a, 0xeb8c, 0x0, 0x1);
        gbc.writeMem(0x2c25, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1f1b, gbc.sp());
        EXPECT(0x2c27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00FC
        gbc.setState(0x5d83, 0xd493, 0xd2a0, 0xcc83, 0xdb56, 0xad62, 0x1, 0x0);
        gbc.writeMem(0x5d83, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd493, gbc.sp());
        EXPECT(0x5d85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 00FD
        gbc.setState(0x4d2, 0x56f4, 0x1930, 0xbcff, 0xacfe, 0xfa9f, 0x1, 0x0);
        gbc.writeMem(0x4d2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x56f4, gbc.sp());
        EXPECT(0x4d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 00FF
        gbc.setState(0x5bd4, 0x144d, 0x4890, 0x7524, 0xc3b4, 0x6976, 0x0, 0x1);
        gbc.writeMem(0x5bd4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x144d, gbc.sp());
        EXPECT(0x5bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0100
        gbc.setState(0x3ace, 0xb665, 0xf1b0, 0x48e3, 0x1b4f, 0xa8f4, 0x0, 0x1);
        gbc.writeMem(0x3ace, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb665, gbc.sp());
        EXPECT(0x3ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0101
        gbc.setState(0xb36, 0x1aaa, 0x430, 0x2626, 0x879e, 0x612a, 0x0, 0x1);
        gbc.writeMem(0xb36, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1aaa, gbc.sp());
        EXPECT(0xb38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0102
        gbc.setState(0x93c0, 0xc1d3, 0xf430, 0x6856, 0x8ac4, 0xd45f, 0x0, 0x1);
        gbc.writeMem(0x93c0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc1d3, gbc.sp());
        EXPECT(0x93c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93c0));
        EXPECT(0x53, gbc.readMem(0x93c1));
        // CB 53 0103
        gbc.setState(0x7253, 0x5971, 0x3c70, 0xcbf6, 0x8ca2, 0x63b9, 0x1, 0x1);
        gbc.writeMem(0x7253, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5971, gbc.sp());
        EXPECT(0x7255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0104
        gbc.setState(0x2858, 0xf4b8, 0x37e0, 0xbc5d, 0x902b, 0xa392, 0x1, 0x1);
        gbc.writeMem(0x2858, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf4b8, gbc.sp());
        EXPECT(0x285a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0105
        gbc.setState(0x2032, 0x6e4e, 0xb830, 0xf1bd, 0x816f, 0x99a2, 0x1, 0x1);
        gbc.writeMem(0x2032, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6e4e, gbc.sp());
        EXPECT(0x2034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0106
        gbc.setState(0xad1d, 0x95e5, 0x8a0, 0xb00d, 0x58de, 0x88a2, 0x1, 0x1);
        gbc.writeMem(0xad1d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x95e5, gbc.sp());
        EXPECT(0xad1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad1d));
        EXPECT(0x53, gbc.readMem(0xad1e));
        // CB 53 0107
        gbc.setState(0x9c25, 0xfdef, 0x3770, 0x9c25, 0x3196, 0xdb85, 0x0, 0x0);
        gbc.writeMem(0x9c25, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfdef, gbc.sp());
        EXPECT(0x9c27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c25));
        EXPECT(0x53, gbc.readMem(0x9c26));
        // CB 53 0108
        gbc.setState(0x5ba1, 0xa3f5, 0x91a0, 0x5458, 0x2d94, 0x62d6, 0x0, 0x1);
        gbc.writeMem(0x5ba1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa3f5, gbc.sp());
        EXPECT(0x5ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0109
        gbc.setState(0x5bee, 0x6940, 0x3750, 0x59d5, 0xbc92, 0x1f0c, 0x0, 0x1);
        gbc.writeMem(0x5bee, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6940, gbc.sp());
        EXPECT(0x5bf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 010A
        gbc.setState(0x6209, 0x75b6, 0xfda0, 0xafbf, 0xb4f5, 0x2196, 0x0, 0x1);
        gbc.writeMem(0x6209, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x75b6, gbc.sp());
        EXPECT(0x620b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 010B
        gbc.setState(0xb360, 0x7259, 0xa30, 0x6ce1, 0xc82d, 0x3559, 0x0, 0x1);
        gbc.writeMem(0xb360, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7259, gbc.sp());
        EXPECT(0xb362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb360));
        EXPECT(0x53, gbc.readMem(0xb361));
        // CB 53 010D
        gbc.setState(0x78f1, 0x981e, 0x5b70, 0x98ec, 0xb982, 0x6d60, 0x1, 0x0);
        gbc.writeMem(0x78f1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x981e, gbc.sp());
        EXPECT(0x78f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 010E
        gbc.setState(0xa8dc, 0xbd22, 0x9bb0, 0x716a, 0x355c, 0xc57b, 0x0, 0x1);
        gbc.writeMem(0xa8dc, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbd22, gbc.sp());
        EXPECT(0xa8de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8dc));
        EXPECT(0x53, gbc.readMem(0xa8dd));
        // CB 53 010F
        gbc.setState(0x672, 0xe32c, 0xfc60, 0x6ee8, 0xa63a, 0xf770, 0x1, 0x0);
        gbc.writeMem(0x672, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe32c, gbc.sp());
        EXPECT(0x674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0110
        gbc.setState(0xd1af, 0x530d, 0xcf50, 0xa37d, 0xac7f, 0xb890, 0x0, 0x0);
        gbc.writeMem(0xd1af, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x530d, gbc.sp());
        EXPECT(0xd1b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1af));
        EXPECT(0x53, gbc.readMem(0xd1b0));
        // CB 53 0111
        gbc.setState(0xc853, 0x14ec, 0x85f0, 0xc1fe, 0xa3a0, 0xb794, 0x1, 0x1);
        gbc.writeMem(0xc853, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x14ec, gbc.sp());
        EXPECT(0xc855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc853));
        EXPECT(0x53, gbc.readMem(0xc854));
        // CB 53 0112
        gbc.setState(0x6dae, 0x543a, 0x38d0, 0xa7, 0x46f4, 0xd25d, 0x1, 0x0);
        gbc.writeMem(0x6dae, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x543a, gbc.sp());
        EXPECT(0x6db0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0114
        gbc.setState(0xb404, 0x9c1f, 0xc960, 0xb4c, 0xcc91, 0x4f3a, 0x1, 0x1);
        gbc.writeMem(0xb404, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9c1f, gbc.sp());
        EXPECT(0xb406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb404));
        EXPECT(0x53, gbc.readMem(0xb405));
        // CB 53 0115
        gbc.setState(0x1d68, 0xa5a7, 0xb3e0, 0xa278, 0xc760, 0x9036, 0x1, 0x0);
        gbc.writeMem(0x1d68, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa5a7, gbc.sp());
        EXPECT(0x1d6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0116
        gbc.setState(0x6996, 0xb9a9, 0xaed0, 0x6a1c, 0xcf53, 0xe586, 0x0, 0x1);
        gbc.writeMem(0x6996, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb9a9, gbc.sp());
        EXPECT(0x6998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0117
        gbc.setState(0x3be8, 0xd414, 0x8770, 0xa4ba, 0x26c, 0x1eaf, 0x1, 0x1);
        gbc.writeMem(0x3be8, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd414, gbc.sp());
        EXPECT(0x3bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0118
        gbc.setState(0x4f9f, 0xaf95, 0xd5c0, 0xe5df, 0x6437, 0x3d03, 0x0, 0x1);
        gbc.writeMem(0x4f9f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xaf95, gbc.sp());
        EXPECT(0x4fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0119
        gbc.setState(0x8074, 0x97e2, 0x1150, 0x115e, 0x4016, 0xea8e, 0x1, 0x1);
        gbc.writeMem(0x8074, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x97e2, gbc.sp());
        EXPECT(0x8076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8074));
        EXPECT(0x53, gbc.readMem(0x8075));
        // CB 53 011A
        gbc.setState(0x5625, 0xefc9, 0xff0, 0xb0aa, 0xfcf8, 0x477e, 0x1, 0x0);
        gbc.writeMem(0x5625, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xefc9, gbc.sp());
        EXPECT(0x5627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 011B
        gbc.setState(0x5589, 0x565, 0x5e10, 0x3b6e, 0xa715, 0x840c, 0x1, 0x0);
        gbc.writeMem(0x5589, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x565, gbc.sp());
        EXPECT(0x558b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 011D
        gbc.setState(0xd008, 0xd469, 0x2410, 0xe5cc, 0x9de1, 0x5764, 0x1, 0x1);
        gbc.writeMem(0xd008, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd469, gbc.sp());
        EXPECT(0xd00a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd008));
        EXPECT(0x53, gbc.readMem(0xd009));
        // CB 53 011E
        gbc.setState(0xc31c, 0x901b, 0xc0f0, 0x97b8, 0xa154, 0x99f1, 0x1, 0x0);
        gbc.writeMem(0xc31c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x901b, gbc.sp());
        EXPECT(0xc31e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc31c));
        EXPECT(0x53, gbc.readMem(0xc31d));
        // CB 53 011F
        gbc.setState(0x4166, 0x29ab, 0x2890, 0xbbd3, 0xadec, 0xba80, 0x1, 0x1);
        gbc.writeMem(0x4166, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x29ab, gbc.sp());
        EXPECT(0x4168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0120
        gbc.setState(0x4130, 0x3017, 0x270, 0xac41, 0x56f5, 0xf690, 0x0, 0x1);
        gbc.writeMem(0x4130, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3017, gbc.sp());
        EXPECT(0x4132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0121
        gbc.setState(0xc250, 0xb0b, 0xe790, 0x3b19, 0xeca0, 0x58a2, 0x1, 0x1);
        gbc.writeMem(0xc250, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb0b, gbc.sp());
        EXPECT(0xc252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc250));
        EXPECT(0x53, gbc.readMem(0xc251));
        // CB 53 0122
        gbc.setState(0x7b39, 0xcbc4, 0xae20, 0x1b73, 0x8539, 0x6050, 0x1, 0x1);
        gbc.writeMem(0x7b39, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xcbc4, gbc.sp());
        EXPECT(0x7b3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0123
        gbc.setState(0xb421, 0xf91c, 0xde0, 0x1338, 0x3b65, 0xed8a, 0x0, 0x1);
        gbc.writeMem(0xb421, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf91c, gbc.sp());
        EXPECT(0xb423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb421));
        EXPECT(0x53, gbc.readMem(0xb422));
        // CB 53 0124
        gbc.setState(0x7ecf, 0xf53f, 0x57e0, 0xfa25, 0x131b, 0xa4c4, 0x1, 0x1);
        gbc.writeMem(0x7ecf, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf53f, gbc.sp());
        EXPECT(0x7ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0125
        gbc.setState(0xdd18, 0x23d9, 0xaa70, 0x5165, 0xe0c4, 0x2a85, 0x0, 0x0);
        gbc.writeMem(0xdd18, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x23d9, gbc.sp());
        EXPECT(0xdd1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd18));
        EXPECT(0x53, gbc.readMem(0xdd19));
        // CB 53 0126
        gbc.setState(0x94d4, 0x1622, 0xb7d0, 0xf20, 0x4fcc, 0x4515, 0x1, 0x0);
        gbc.writeMem(0x94d4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1622, gbc.sp());
        EXPECT(0x94d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d4));
        EXPECT(0x53, gbc.readMem(0x94d5));
        // CB 53 0127
        gbc.setState(0xf28, 0x18d0, 0x2270, 0x3614, 0xe79d, 0xa7b4, 0x0, 0x1);
        gbc.writeMem(0xf28, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x18d0, gbc.sp());
        EXPECT(0xf2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0128
        gbc.setState(0xe47f, 0x7e0d, 0x12a0, 0x1577, 0xafb6, 0x545b, 0x1, 0x0);
        gbc.writeMem(0xe47f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7e0d, gbc.sp());
        EXPECT(0xe481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe47f));
        EXPECT(0x53, gbc.readMem(0xe480));
        // CB 53 0129
        gbc.setState(0x700f, 0xc74b, 0x1fa0, 0xf870, 0x88bc, 0x4ee6, 0x0, 0x1);
        gbc.writeMem(0x700f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc74b, gbc.sp());
        EXPECT(0x7011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 012A
        gbc.setState(0x582b, 0x8b90, 0x7fb0, 0x361d, 0x53f4, 0x333b, 0x0, 0x1);
        gbc.writeMem(0x582b, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8b90, gbc.sp());
        EXPECT(0x582d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 012B
        gbc.setState(0x30e0, 0xf5e6, 0xa2f0, 0x7949, 0x31b9, 0x1530, 0x0, 0x0);
        gbc.writeMem(0x30e0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf5e6, gbc.sp());
        EXPECT(0x30e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 012C
        gbc.setState(0x8bb3, 0xda40, 0xae60, 0x8588, 0xb3ff, 0xf9ec, 0x0, 0x1);
        gbc.writeMem(0x8bb3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xda40, gbc.sp());
        EXPECT(0x8bb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb3));
        EXPECT(0x53, gbc.readMem(0x8bb4));
        // CB 53 012D
        gbc.setState(0x4fda, 0xa060, 0x9ba0, 0x3751, 0xf4d0, 0xc107, 0x0, 0x0);
        gbc.writeMem(0x4fda, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa060, gbc.sp());
        EXPECT(0x4fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 012E
        gbc.setState(0x85d8, 0x9cc2, 0xbb50, 0x8c0b, 0xeb5e, 0xc3d0, 0x0, 0x0);
        gbc.writeMem(0x85d8, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9cc2, gbc.sp());
        EXPECT(0x85da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d8));
        EXPECT(0x53, gbc.readMem(0x85d9));
        // CB 53 012F
        gbc.setState(0x7f90, 0xc128, 0x4e70, 0x4780, 0x6b1a, 0xeb5d, 0x1, 0x0);
        gbc.writeMem(0x7f90, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc128, gbc.sp());
        EXPECT(0x7f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0130
        gbc.setState(0x5105, 0xbad8, 0xfd60, 0x8af7, 0x7347, 0x5236, 0x0, 0x1);
        gbc.writeMem(0x5105, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbad8, gbc.sp());
        EXPECT(0x5107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0132
        gbc.setState(0x8298, 0x301f, 0xd8f0, 0xceca, 0x2430, 0xdc02, 0x1, 0x0);
        gbc.writeMem(0x8298, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x301f, gbc.sp());
        EXPECT(0x829a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8298));
        EXPECT(0x53, gbc.readMem(0x8299));
        // CB 53 0133
        gbc.setState(0x36a3, 0x2f29, 0xa540, 0x4d2f, 0xffc3, 0xcbe2, 0x0, 0x0);
        gbc.writeMem(0x36a3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2f29, gbc.sp());
        EXPECT(0x36a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0134
        gbc.setState(0x54cb, 0x56d, 0xa090, 0x3ebb, 0x8926, 0xcff9, 0x1, 0x1);
        gbc.writeMem(0x54cb, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x56d, gbc.sp());
        EXPECT(0x54cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0135
        gbc.setState(0xde62, 0xad96, 0x2940, 0x9d49, 0xc192, 0x5aba, 0x1, 0x1);
        gbc.writeMem(0xde62, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xad96, gbc.sp());
        EXPECT(0xde64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde62));
        EXPECT(0x53, gbc.readMem(0xde63));
        // CB 53 0136
        gbc.setState(0xad72, 0xedf6, 0xbf30, 0xffd0, 0xd066, 0xf22e, 0x1, 0x1);
        gbc.writeMem(0xad72, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xedf6, gbc.sp());
        EXPECT(0xad74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad72));
        EXPECT(0x53, gbc.readMem(0xad73));
        // CB 53 0137
        gbc.setState(0xea6c, 0xed96, 0xa810, 0x266f, 0xd64, 0xd57b, 0x0, 0x1);
        gbc.writeMem(0xea6c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xed96, gbc.sp());
        EXPECT(0xea6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea6c));
        EXPECT(0x53, gbc.readMem(0xea6d));
        // CB 53 0138
        gbc.setState(0x5688, 0xf659, 0x2b50, 0x7067, 0xd84a, 0x8d57, 0x0, 0x0);
        gbc.writeMem(0x5688, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf659, gbc.sp());
        EXPECT(0x568a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0139
        gbc.setState(0x421f, 0x8644, 0xd680, 0x520c, 0x4422, 0x38ec, 0x1, 0x1);
        gbc.writeMem(0x421f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8644, gbc.sp());
        EXPECT(0x4221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 013A
        gbc.setState(0xe3cf, 0x6ddf, 0x3610, 0x475a, 0x2e0a, 0x35a3, 0x0, 0x0);
        gbc.writeMem(0xe3cf, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6ddf, gbc.sp());
        EXPECT(0xe3d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3cf));
        EXPECT(0x53, gbc.readMem(0xe3d0));
        // CB 53 013B
        gbc.setState(0xc285, 0x7578, 0xc810, 0x89c4, 0x1139, 0xddd0, 0x1, 0x0);
        gbc.writeMem(0xc285, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7578, gbc.sp());
        EXPECT(0xc287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc285));
        EXPECT(0x53, gbc.readMem(0xc286));
        // CB 53 013C
        gbc.setState(0x2c2a, 0xc029, 0xa2c0, 0x1c35, 0x8b2a, 0x9e5b, 0x0, 0x1);
        gbc.writeMem(0x2c2a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc029, gbc.sp());
        EXPECT(0x2c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 013D
        gbc.setState(0xb328, 0xc814, 0xd500, 0xe77, 0x775c, 0x3831, 0x0, 0x1);
        gbc.writeMem(0xb328, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc814, gbc.sp());
        EXPECT(0xb32a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb328));
        EXPECT(0x53, gbc.readMem(0xb329));
        // CB 53 013E
        gbc.setState(0x485d, 0x2dba, 0x1f90, 0x6ab9, 0x1209, 0xaee8, 0x1, 0x1);
        gbc.writeMem(0x485d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2dba, gbc.sp());
        EXPECT(0x485f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 013F
        gbc.setState(0x7863, 0x8cdb, 0xaec0, 0x74e5, 0x6c9a, 0xa4c8, 0x0, 0x1);
        gbc.writeMem(0x7863, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8cdb, gbc.sp());
        EXPECT(0x7865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0140
        gbc.setState(0x1b82, 0xf897, 0x5900, 0x30a8, 0xcbd2, 0x1c39, 0x1, 0x0);
        gbc.writeMem(0x1b82, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf897, gbc.sp());
        EXPECT(0x1b84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0141
        gbc.setState(0x2917, 0x2c63, 0xf9c0, 0xac3c, 0xf53c, 0xe2e7, 0x1, 0x0);
        gbc.writeMem(0x2917, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2c63, gbc.sp());
        EXPECT(0x2919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0142
        gbc.setState(0x9b2c, 0xbd66, 0xff40, 0x49d9, 0x5de2, 0xcb70, 0x0, 0x1);
        gbc.writeMem(0x9b2c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbd66, gbc.sp());
        EXPECT(0x9b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b2c));
        EXPECT(0x53, gbc.readMem(0x9b2d));
        // CB 53 0143
        gbc.setState(0x303f, 0xac15, 0x14b0, 0x5ce5, 0xf4c7, 0x2b1c, 0x1, 0x0);
        gbc.writeMem(0x303f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xac15, gbc.sp());
        EXPECT(0x3041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0144
        gbc.setState(0x6253, 0x8c9b, 0x5500, 0x75, 0x48e2, 0x936c, 0x0, 0x1);
        gbc.writeMem(0x6253, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8c9b, gbc.sp());
        EXPECT(0x6255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0145
        gbc.setState(0x5af2, 0x2891, 0x7e90, 0xc0df, 0xcee9, 0x6d8f, 0x1, 0x0);
        gbc.writeMem(0x5af2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2891, gbc.sp());
        EXPECT(0x5af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0146
        gbc.setState(0x26a3, 0xda3, 0x9e70, 0x1244, 0xe7a1, 0x6b69, 0x1, 0x1);
        gbc.writeMem(0x26a3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xda3, gbc.sp());
        EXPECT(0x26a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0147
        gbc.setState(0x3917, 0xe4b2, 0x8180, 0xcdb5, 0x13cf, 0xc700, 0x1, 0x1);
        gbc.writeMem(0x3917, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe4b2, gbc.sp());
        EXPECT(0x3919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0148
        gbc.setState(0x52b9, 0x9073, 0x2d30, 0x13aa, 0xd09e, 0x96dc, 0x1, 0x1);
        gbc.writeMem(0x52b9, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9073, gbc.sp());
        EXPECT(0x52bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0149
        gbc.setState(0x1e61, 0x9ff0, 0xd200, 0xe890, 0x42ce, 0x575a, 0x0, 0x1);
        gbc.writeMem(0x1e61, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9ff0, gbc.sp());
        EXPECT(0x1e63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 014A
        gbc.setState(0xeb9d, 0xda3e, 0xfa40, 0x32ef, 0x3b1c, 0x35a3, 0x1, 0x1);
        gbc.writeMem(0xeb9d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xda3e, gbc.sp());
        EXPECT(0xeb9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb9d));
        EXPECT(0x53, gbc.readMem(0xeb9e));
        // CB 53 014B
        gbc.setState(0xbd07, 0x7e9a, 0xad70, 0xad50, 0x907e, 0xc7a7, 0x1, 0x1);
        gbc.writeMem(0xbd07, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7e9a, gbc.sp());
        EXPECT(0xbd09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd07));
        EXPECT(0x53, gbc.readMem(0xbd08));
        // CB 53 014C
        gbc.setState(0xb4d5, 0xe075, 0x9340, 0x715, 0xcf76, 0xd2bd, 0x1, 0x0);
        gbc.writeMem(0xb4d5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe075, gbc.sp());
        EXPECT(0xb4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4d5));
        EXPECT(0x53, gbc.readMem(0xb4d6));
        // CB 53 014D
        gbc.setState(0x184d, 0x9a44, 0x9e0, 0xac0b, 0xa778, 0xc81c, 0x1, 0x0);
        gbc.writeMem(0x184d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9a44, gbc.sp());
        EXPECT(0x184f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 014E
        gbc.setState(0x11f5, 0xc40a, 0x6940, 0x9ee8, 0xfac7, 0xbf32, 0x0, 0x0);
        gbc.writeMem(0x11f5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc40a, gbc.sp());
        EXPECT(0x11f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 014F
        gbc.setState(0x52fc, 0x956e, 0x9ef0, 0x4fae, 0xf4b4, 0x3a39, 0x0, 0x1);
        gbc.writeMem(0x52fc, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x956e, gbc.sp());
        EXPECT(0x52fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0150
        gbc.setState(0xa47d, 0xdb94, 0xef60, 0x1d5c, 0x13ab, 0xff60, 0x0, 0x1);
        gbc.writeMem(0xa47d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdb94, gbc.sp());
        EXPECT(0xa47f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa47d));
        EXPECT(0x53, gbc.readMem(0xa47e));
        // CB 53 0151
        gbc.setState(0x3b7b, 0x1c57, 0xdd60, 0x2522, 0x55c9, 0xd554, 0x1, 0x0);
        gbc.writeMem(0x3b7b, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1c57, gbc.sp());
        EXPECT(0x3b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0152
        gbc.setState(0x15, 0x5b73, 0x14f0, 0x3ef, 0x7204, 0x3f77, 0x1, 0x0);
        gbc.writeMem(0x15, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5b73, gbc.sp());
        EXPECT(0x17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0153
        gbc.setState(0x28ae, 0x538d, 0xed90, 0xd848, 0xb998, 0x761, 0x1, 0x0);
        gbc.writeMem(0x28ae, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x538d, gbc.sp());
        EXPECT(0x28b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0154
        gbc.setState(0x16b5, 0xca4d, 0x4500, 0xf989, 0xd698, 0x45e2, 0x1, 0x0);
        gbc.writeMem(0x16b5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xca4d, gbc.sp());
        EXPECT(0x16b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0155
        gbc.setState(0x141c, 0x80b9, 0x50d0, 0xc7ae, 0x9193, 0x4a41, 0x1, 0x0);
        gbc.writeMem(0x141c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x80b9, gbc.sp());
        EXPECT(0x141e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0156
        gbc.setState(0xb2ca, 0x1b9c, 0x8ec0, 0x26a2, 0x83a9, 0x8d4d, 0x1, 0x1);
        gbc.writeMem(0xb2ca, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1b9c, gbc.sp());
        EXPECT(0xb2cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ca));
        EXPECT(0x53, gbc.readMem(0xb2cb));
        // CB 53 0157
        gbc.setState(0x2104, 0xd7ce, 0xbe60, 0xe237, 0x505c, 0x53a7, 0x0, 0x1);
        gbc.writeMem(0x2104, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd7ce, gbc.sp());
        EXPECT(0x2106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0158
        gbc.setState(0x99fb, 0xc93, 0x2830, 0x1c7f, 0x1e8, 0x513e, 0x0, 0x1);
        gbc.writeMem(0x99fb, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc93, gbc.sp());
        EXPECT(0x99fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99fb));
        EXPECT(0x53, gbc.readMem(0x99fc));
        // CB 53 0159
        gbc.setState(0x5ab1, 0x78ca, 0x2040, 0x999b, 0xe6ca, 0x861, 0x0, 0x1);
        gbc.writeMem(0x5ab1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x78ca, gbc.sp());
        EXPECT(0x5ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 015A
        gbc.setState(0x162d, 0xfdbd, 0x7d00, 0x6708, 0xea13, 0x4645, 0x0, 0x1);
        gbc.writeMem(0x162d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfdbd, gbc.sp());
        EXPECT(0x162f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 015B
        gbc.setState(0xb871, 0xfd74, 0x6a90, 0xaf15, 0xb46c, 0xf26, 0x0, 0x1);
        gbc.writeMem(0xb871, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xfd74, gbc.sp());
        EXPECT(0xb873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb871));
        EXPECT(0x53, gbc.readMem(0xb872));
        // CB 53 015C
        gbc.setState(0x4fb8, 0x2cd8, 0xf640, 0xf166, 0x627d, 0xdee2, 0x1, 0x1);
        gbc.writeMem(0x4fb8, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2cd8, gbc.sp());
        EXPECT(0x4fba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 015D
        gbc.setState(0xd8f4, 0x6a3c, 0xfd20, 0x8b3c, 0xa226, 0x1c2c, 0x1, 0x1);
        gbc.writeMem(0xd8f4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6a3c, gbc.sp());
        EXPECT(0xd8f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8f4));
        EXPECT(0x53, gbc.readMem(0xd8f5));
        // CB 53 015E
        gbc.setState(0xeb88, 0x325e, 0xd90, 0x9166, 0x4ce2, 0xbb0d, 0x0, 0x0);
        gbc.writeMem(0xeb88, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x325e, gbc.sp());
        EXPECT(0xeb8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb88));
        EXPECT(0x53, gbc.readMem(0xeb89));
        // CB 53 015F
        gbc.setState(0xe3ab, 0xcb9f, 0x15c0, 0x8a66, 0x6dd7, 0x8a1b, 0x1, 0x0);
        gbc.writeMem(0xe3ab, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xcb9f, gbc.sp());
        EXPECT(0xe3ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ab));
        EXPECT(0x53, gbc.readMem(0xe3ac));
        // CB 53 0160
        gbc.setState(0xda2e, 0xab22, 0x3270, 0x8508, 0xe0c5, 0xe72a, 0x0, 0x1);
        gbc.writeMem(0xda2e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xab22, gbc.sp());
        EXPECT(0xda30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda2e));
        EXPECT(0x53, gbc.readMem(0xda2f));
        // CB 53 0161
        gbc.setState(0x1da0, 0xa236, 0xea10, 0x764d, 0x4dcd, 0xb643, 0x0, 0x0);
        gbc.writeMem(0x1da0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa236, gbc.sp());
        EXPECT(0x1da2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0162
        gbc.setState(0x7588, 0xb9c9, 0xdf90, 0x6a1d, 0xa1a6, 0x1d85, 0x1, 0x0);
        gbc.writeMem(0x7588, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb9c9, gbc.sp());
        EXPECT(0x758a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0163
        gbc.setState(0x2ba4, 0xddb3, 0x4ce0, 0x7151, 0xac11, 0xb3a, 0x0, 0x0);
        gbc.writeMem(0x2ba4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xddb3, gbc.sp());
        EXPECT(0x2ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0164
        gbc.setState(0xa981, 0x7e25, 0x9200, 0x9c8, 0x88b3, 0xe7c4, 0x1, 0x1);
        gbc.writeMem(0xa981, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7e25, gbc.sp());
        EXPECT(0xa983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa981));
        EXPECT(0x53, gbc.readMem(0xa982));
        // CB 53 0165
        gbc.setState(0x6c42, 0x5e8a, 0x37e0, 0xf0d4, 0x20f, 0x37da, 0x1, 0x0);
        gbc.writeMem(0x6c42, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5e8a, gbc.sp());
        EXPECT(0x6c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0166
        gbc.setState(0x4ea, 0x7a56, 0x3aa0, 0x7045, 0xdc17, 0x5c9, 0x0, 0x0);
        gbc.writeMem(0x4ea, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7a56, gbc.sp());
        EXPECT(0x4ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0167
        gbc.setState(0x8271, 0x326c, 0xf090, 0xb4d, 0x4bfa, 0xb2ef, 0x1, 0x1);
        gbc.writeMem(0x8271, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x326c, gbc.sp());
        EXPECT(0x8273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8271));
        EXPECT(0x53, gbc.readMem(0x8272));
        // CB 53 0168
        gbc.setState(0xc859, 0x3ee9, 0xba40, 0x3070, 0x3ffe, 0x89c9, 0x1, 0x1);
        gbc.writeMem(0xc859, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3ee9, gbc.sp());
        EXPECT(0xc85b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc859));
        EXPECT(0x53, gbc.readMem(0xc85a));
        // CB 53 0169
        gbc.setState(0xdc87, 0x440a, 0x65a0, 0x56bc, 0x1929, 0xa868, 0x1, 0x1);
        gbc.writeMem(0xdc87, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x440a, gbc.sp());
        EXPECT(0xdc89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc87));
        EXPECT(0x53, gbc.readMem(0xdc88));
        // CB 53 016A
        gbc.setState(0xb7be, 0x5714, 0xd670, 0x57d9, 0x7a0e, 0x79f4, 0x0, 0x0);
        gbc.writeMem(0xb7be, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5714, gbc.sp());
        EXPECT(0xb7c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7be));
        EXPECT(0x53, gbc.readMem(0xb7bf));
        // CB 53 016B
        gbc.setState(0xc129, 0x5e74, 0x2f10, 0x5011, 0x6946, 0x8752, 0x1, 0x1);
        gbc.writeMem(0xc129, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5e74, gbc.sp());
        EXPECT(0xc12b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc129));
        EXPECT(0x53, gbc.readMem(0xc12a));
        // CB 53 016C
        gbc.setState(0x1221, 0xee4e, 0x3270, 0x1f41, 0xa1bd, 0x3235, 0x0, 0x1);
        gbc.writeMem(0x1221, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xee4e, gbc.sp());
        EXPECT(0x1223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 016D
        gbc.setState(0x9f9b, 0x34ea, 0xb5a0, 0xe0fb, 0x661b, 0x3cf, 0x1, 0x0);
        gbc.writeMem(0x9f9b, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x34ea, gbc.sp());
        EXPECT(0x9f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f9b));
        EXPECT(0x53, gbc.readMem(0x9f9c));
        // CB 53 016E
        gbc.setState(0x2734, 0xb767, 0xc300, 0x52ea, 0x84f4, 0xd837, 0x0, 0x0);
        gbc.writeMem(0x2734, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb767, gbc.sp());
        EXPECT(0x2736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 016F
        gbc.setState(0x6dc6, 0xcd29, 0xe240, 0x9706, 0x1e03, 0x5fd6, 0x1, 0x1);
        gbc.writeMem(0x6dc6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xcd29, gbc.sp());
        EXPECT(0x6dc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0170
        gbc.setState(0x80b6, 0x7979, 0x47d0, 0x4745, 0x59d7, 0xcdc5, 0x0, 0x0);
        gbc.writeMem(0x80b6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7979, gbc.sp());
        EXPECT(0x80b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80b6));
        EXPECT(0x53, gbc.readMem(0x80b7));
        // CB 53 0171
        gbc.setState(0x29f0, 0xe8d3, 0x1d00, 0xd79, 0x6026, 0x5073, 0x0, 0x1);
        gbc.writeMem(0x29f0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe8d3, gbc.sp());
        EXPECT(0x29f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0172
        gbc.setState(0x8d83, 0xc9cc, 0xd110, 0xcf3d, 0xed27, 0xa45c, 0x0, 0x0);
        gbc.writeMem(0x8d83, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc9cc, gbc.sp());
        EXPECT(0x8d85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d83));
        EXPECT(0x53, gbc.readMem(0x8d84));
        // CB 53 0173
        gbc.setState(0xd46, 0xeeee, 0x2760, 0xfe6e, 0xdb1f, 0xf67e, 0x0, 0x1);
        gbc.writeMem(0xd46, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xeeee, gbc.sp());
        EXPECT(0xd48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0174
        gbc.setState(0xae33, 0x100f, 0xfc50, 0xc290, 0xfcc6, 0xf647, 0x1, 0x1);
        gbc.writeMem(0xae33, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x100f, gbc.sp());
        EXPECT(0xae35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae33));
        EXPECT(0x53, gbc.readMem(0xae34));
        // CB 53 0175
        gbc.setState(0x342c, 0x223f, 0x5ed0, 0xc1f0, 0x8608, 0x254a, 0x1, 0x0);
        gbc.writeMem(0x342c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x223f, gbc.sp());
        EXPECT(0x342e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0176
        gbc.setState(0x9c0e, 0x3ffd, 0xb3c0, 0x1882, 0xe10b, 0x9ed2, 0x1, 0x1);
        gbc.writeMem(0x9c0e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3ffd, gbc.sp());
        EXPECT(0x9c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c0e));
        EXPECT(0x53, gbc.readMem(0x9c0f));
        // CB 53 0177
        gbc.setState(0x269c, 0x6a14, 0x84c0, 0x94d0, 0x5d0f, 0x7e56, 0x1, 0x1);
        gbc.writeMem(0x269c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6a14, gbc.sp());
        EXPECT(0x269e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0178
        gbc.setState(0x4a13, 0x8eed, 0xddb0, 0x4d54, 0x2cab, 0xe5e5, 0x0, 0x0);
        gbc.writeMem(0x4a13, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8eed, gbc.sp());
        EXPECT(0x4a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0179
        gbc.setState(0xce86, 0x1f71, 0x3740, 0xda49, 0xa407, 0x8141, 0x0, 0x0);
        gbc.writeMem(0xce86, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1f71, gbc.sp());
        EXPECT(0xce88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce86));
        EXPECT(0x53, gbc.readMem(0xce87));
        // CB 53 017A
        gbc.setState(0x6c61, 0xb43c, 0xf140, 0x6205, 0x8856, 0xa669, 0x0, 0x0);
        gbc.writeMem(0x6c61, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb43c, gbc.sp());
        EXPECT(0x6c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 017C
        gbc.setState(0x40bd, 0x2e7b, 0xe080, 0xd8ca, 0x7e65, 0x2f9f, 0x0, 0x0);
        gbc.writeMem(0x40bd, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2e7b, gbc.sp());
        EXPECT(0x40bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 017D
        gbc.setState(0xe23a, 0x4ee5, 0x36d0, 0x732f, 0xdba6, 0xb05f, 0x1, 0x0);
        gbc.writeMem(0xe23a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4ee5, gbc.sp());
        EXPECT(0xe23c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe23a));
        EXPECT(0x53, gbc.readMem(0xe23b));
        // CB 53 017E
        gbc.setState(0x3571, 0xb5d8, 0xc190, 0xe281, 0x7639, 0x62d8, 0x0, 0x0);
        gbc.writeMem(0x3571, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb5d8, gbc.sp());
        EXPECT(0x3573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 017F
        gbc.setState(0xb59d, 0xd6f4, 0x7510, 0x7e8f, 0x7fb4, 0xcc4e, 0x0, 0x1);
        gbc.writeMem(0xb59d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd6f4, gbc.sp());
        EXPECT(0xb59f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb59d));
        EXPECT(0x53, gbc.readMem(0xb59e));
        // CB 53 0180
        gbc.setState(0xd119, 0x602b, 0x5180, 0xce93, 0x9d25, 0x5668, 0x1, 0x1);
        gbc.writeMem(0xd119, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x602b, gbc.sp());
        EXPECT(0xd11b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd119));
        EXPECT(0x53, gbc.readMem(0xd11a));
        // CB 53 0181
        gbc.setState(0x59f2, 0x4e2a, 0x69e0, 0xa88e, 0x7efe, 0x9084, 0x0, 0x0);
        gbc.writeMem(0x59f2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4e2a, gbc.sp());
        EXPECT(0x59f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0182
        gbc.setState(0x292a, 0x77d7, 0xe680, 0xe96a, 0x53b3, 0xdf64, 0x0, 0x0);
        gbc.writeMem(0x292a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x77d7, gbc.sp());
        EXPECT(0x292c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0183
        gbc.setState(0xd076, 0x9120, 0x7cc0, 0x3994, 0x8cf3, 0xb4bd, 0x1, 0x0);
        gbc.writeMem(0xd076, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9120, gbc.sp());
        EXPECT(0xd078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd076));
        EXPECT(0x53, gbc.readMem(0xd077));
        // CB 53 0184
        gbc.setState(0x38bc, 0xf3d1, 0x2070, 0x7302, 0xe9be, 0xdf5b, 0x1, 0x0);
        gbc.writeMem(0x38bc, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf3d1, gbc.sp());
        EXPECT(0x38be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0185
        gbc.setState(0x5bf3, 0xe475, 0xfef0, 0x58f4, 0x8e35, 0x2a43, 0x0, 0x0);
        gbc.writeMem(0x5bf3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe475, gbc.sp());
        EXPECT(0x5bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0186
        gbc.setState(0x2024, 0x2866, 0x3d0, 0x98e0, 0x1986, 0xa2e7, 0x0, 0x0);
        gbc.writeMem(0x2024, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2866, gbc.sp());
        EXPECT(0x2026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0187
        gbc.setState(0xbdb7, 0x5f61, 0x83b0, 0x7c60, 0xa6f4, 0x47d1, 0x1, 0x1);
        gbc.writeMem(0xbdb7, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5f61, gbc.sp());
        EXPECT(0xbdb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb7));
        EXPECT(0x53, gbc.readMem(0xbdb8));
        // CB 53 0188
        gbc.setState(0x549, 0x7226, 0x22c0, 0x85fa, 0xe3a3, 0xe89f, 0x0, 0x0);
        gbc.writeMem(0x549, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7226, gbc.sp());
        EXPECT(0x54b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0189
        gbc.setState(0xe9e3, 0xb680, 0x2d80, 0x6603, 0x7715, 0x3147, 0x0, 0x1);
        gbc.writeMem(0xe9e3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb680, gbc.sp());
        EXPECT(0xe9e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9e3));
        EXPECT(0x53, gbc.readMem(0xe9e4));
        // CB 53 018A
        gbc.setState(0x4ccc, 0x3c95, 0xc020, 0x9500, 0x9be1, 0x8dea, 0x0, 0x1);
        gbc.writeMem(0x4ccc, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3c95, gbc.sp());
        EXPECT(0x4cce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 018C
        gbc.setState(0x9f04, 0xe13e, 0x5500, 0x5d3a, 0x6521, 0x8485, 0x1, 0x1);
        gbc.writeMem(0x9f04, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe13e, gbc.sp());
        EXPECT(0x9f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f04));
        EXPECT(0x53, gbc.readMem(0x9f05));
        // CB 53 018D
        gbc.setState(0x8301, 0x7183, 0xbd0, 0x71d5, 0xec59, 0x66de, 0x1, 0x0);
        gbc.writeMem(0x8301, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7183, gbc.sp());
        EXPECT(0x8303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8301));
        EXPECT(0x53, gbc.readMem(0x8302));
        // CB 53 018E
        gbc.setState(0xdb1f, 0x9c8b, 0xa6e0, 0x6c36, 0xaa23, 0xddf3, 0x1, 0x1);
        gbc.writeMem(0xdb1f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9c8b, gbc.sp());
        EXPECT(0xdb21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb1f));
        EXPECT(0x53, gbc.readMem(0xdb20));
        // CB 53 018F
        gbc.setState(0xb50f, 0xd4a8, 0xd70, 0x56e2, 0x5f44, 0xaabe, 0x0, 0x0);
        gbc.writeMem(0xb50f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd4a8, gbc.sp());
        EXPECT(0xb511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb50f));
        EXPECT(0x53, gbc.readMem(0xb510));
        // CB 53 0190
        gbc.setState(0x7da9, 0x8710, 0xba90, 0x76c8, 0x32c5, 0xe68d, 0x1, 0x0);
        gbc.writeMem(0x7da9, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8710, gbc.sp());
        EXPECT(0x7dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0191
        gbc.setState(0xe6f3, 0x548b, 0xff70, 0xa2bb, 0x519c, 0x6324, 0x0, 0x0);
        gbc.writeMem(0xe6f3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x548b, gbc.sp());
        EXPECT(0xe6f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6f3));
        EXPECT(0x53, gbc.readMem(0xe6f4));
        // CB 53 0192
        gbc.setState(0x8dde, 0xd5e5, 0xde40, 0xe1d8, 0xf52e, 0xf943, 0x1, 0x0);
        gbc.writeMem(0x8dde, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd5e5, gbc.sp());
        EXPECT(0x8de0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dde));
        EXPECT(0x53, gbc.readMem(0x8ddf));
        // CB 53 0193
        gbc.setState(0xc94f, 0x5b44, 0xc0a0, 0xb22d, 0x2029, 0x686d, 0x0, 0x0);
        gbc.writeMem(0xc94f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5b44, gbc.sp());
        EXPECT(0xc951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc94f));
        EXPECT(0x53, gbc.readMem(0xc950));
        // CB 53 0194
        gbc.setState(0x1c9, 0x616f, 0x7330, 0x5a55, 0x507b, 0xe373, 0x1, 0x0);
        gbc.writeMem(0x1c9, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x616f, gbc.sp());
        EXPECT(0x1cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0195
        gbc.setState(0xe3aa, 0x130d, 0xb4d0, 0xa78b, 0xfd40, 0x7a24, 0x0, 0x0);
        gbc.writeMem(0xe3aa, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x130d, gbc.sp());
        EXPECT(0xe3ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3aa));
        EXPECT(0x53, gbc.readMem(0xe3ab));
        // CB 53 0196
        gbc.setState(0x3287, 0x7814, 0x5cf0, 0x2b77, 0xdfe8, 0x124d, 0x1, 0x1);
        gbc.writeMem(0x3287, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7814, gbc.sp());
        EXPECT(0x3289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0197
        gbc.setState(0xc646, 0x6a86, 0x7fa0, 0x5306, 0xda4e, 0xb557, 0x0, 0x1);
        gbc.writeMem(0xc646, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6a86, gbc.sp());
        EXPECT(0xc648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc646));
        EXPECT(0x53, gbc.readMem(0xc647));
        // CB 53 0198
        gbc.setState(0xaff4, 0xf73a, 0x9550, 0x4b8b, 0xadcb, 0x5d06, 0x0, 0x0);
        gbc.writeMem(0xaff4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf73a, gbc.sp());
        EXPECT(0xaff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff4));
        EXPECT(0x53, gbc.readMem(0xaff5));
        // CB 53 0199
        gbc.setState(0x51, 0xcfe, 0x7af0, 0xf383, 0x3a2f, 0xb0c8, 0x0, 0x0);
        gbc.writeMem(0x51, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcfe, gbc.sp());
        EXPECT(0x53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 019A
        gbc.setState(0x2682, 0xbca4, 0xc930, 0x8a9, 0x21b0, 0x8e08, 0x0, 0x1);
        gbc.writeMem(0x2682, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbca4, gbc.sp());
        EXPECT(0x2684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 019B
        gbc.setState(0x18e5, 0x7c6b, 0xdf60, 0x8c2, 0x363, 0xd03f, 0x0, 0x0);
        gbc.writeMem(0x18e5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7c6b, gbc.sp());
        EXPECT(0x18e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 019C
        gbc.setState(0xaa66, 0x8205, 0x6e00, 0xbf53, 0x6cca, 0x4728, 0x0, 0x1);
        gbc.writeMem(0xaa66, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8205, gbc.sp());
        EXPECT(0xaa68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa66));
        EXPECT(0x53, gbc.readMem(0xaa67));
        // CB 53 019D
        gbc.setState(0x657c, 0x904b, 0xe7f0, 0x6e7d, 0x35ef, 0x135c, 0x0, 0x0);
        gbc.writeMem(0x657c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x904b, gbc.sp());
        EXPECT(0x657e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 019E
        gbc.setState(0xa111, 0xec23, 0xf070, 0xb6a6, 0xa2de, 0xd1b, 0x1, 0x0);
        gbc.writeMem(0xa111, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xec23, gbc.sp());
        EXPECT(0xa113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa111));
        EXPECT(0x53, gbc.readMem(0xa112));
        // CB 53 019F
        gbc.setState(0x64b1, 0xb653, 0x2110, 0xbe37, 0x3342, 0x2194, 0x0, 0x1);
        gbc.writeMem(0x64b1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb653, gbc.sp());
        EXPECT(0x64b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01A0
        gbc.setState(0xeeb6, 0x2c94, 0x4f10, 0x6e70, 0x8895, 0xae3a, 0x1, 0x0);
        gbc.writeMem(0xeeb6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2c94, gbc.sp());
        EXPECT(0xeeb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb6));
        EXPECT(0x53, gbc.readMem(0xeeb7));
        // CB 53 01A1
        gbc.setState(0x6441, 0x15ba, 0xcce0, 0x606b, 0xfee4, 0x51e, 0x0, 0x0);
        gbc.writeMem(0x6441, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x15ba, gbc.sp());
        EXPECT(0x6443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01A2
        gbc.setState(0xccf, 0xbb82, 0x2da0, 0x2e61, 0xd505, 0xb8d2, 0x0, 0x1);
        gbc.writeMem(0xccf, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbb82, gbc.sp());
        EXPECT(0xcd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01A3
        gbc.setState(0x929b, 0x3415, 0x8e60, 0xe889, 0xae0e, 0x3f66, 0x0, 0x1);
        gbc.writeMem(0x929b, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3415, gbc.sp());
        EXPECT(0x929d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x929b));
        EXPECT(0x53, gbc.readMem(0x929c));
        // CB 53 01A4
        gbc.setState(0x6033, 0xc87b, 0xb670, 0x7f52, 0xe82, 0x465e, 0x1, 0x0);
        gbc.writeMem(0x6033, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc87b, gbc.sp());
        EXPECT(0x6035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01A5
        gbc.setState(0x2bb6, 0xb515, 0xb1a0, 0xa518, 0xf10d, 0x2c93, 0x0, 0x0);
        gbc.writeMem(0x2bb6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb515, gbc.sp());
        EXPECT(0x2bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01A6
        gbc.setState(0xce24, 0x68b2, 0xd050, 0xffa0, 0x454e, 0x1b50, 0x1, 0x0);
        gbc.writeMem(0xce24, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x68b2, gbc.sp());
        EXPECT(0xce26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce24));
        EXPECT(0x53, gbc.readMem(0xce25));
        // CB 53 01A7
        gbc.setState(0xdc1e, 0xe904, 0xe4d0, 0x71bc, 0xcae2, 0x8496, 0x0, 0x0);
        gbc.writeMem(0xdc1e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe904, gbc.sp());
        EXPECT(0xdc20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc1e));
        EXPECT(0x53, gbc.readMem(0xdc1f));
        // CB 53 01A8
        gbc.setState(0x56a0, 0x3982, 0x2d70, 0xcb6c, 0xc159, 0xe9fb, 0x0, 0x1);
        gbc.writeMem(0x56a0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3982, gbc.sp());
        EXPECT(0x56a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01A9
        gbc.setState(0xa1b0, 0xea63, 0xc950, 0xcea4, 0x14bc, 0xeb13, 0x0, 0x1);
        gbc.writeMem(0xa1b0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xea63, gbc.sp());
        EXPECT(0xa1b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b0));
        EXPECT(0x53, gbc.readMem(0xa1b1));
        // CB 53 01AA
        gbc.setState(0x6461, 0xe8a7, 0x5d70, 0xe583, 0xc6c, 0xa20f, 0x0, 0x1);
        gbc.writeMem(0x6461, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe8a7, gbc.sp());
        EXPECT(0x6463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01AB
        gbc.setState(0x79b7, 0xf14f, 0xfb00, 0x108d, 0xf77b, 0xd178, 0x0, 0x1);
        gbc.writeMem(0x79b7, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf14f, gbc.sp());
        EXPECT(0x79b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01AC
        gbc.setState(0xcf3f, 0xa137, 0xf100, 0x83ee, 0x5f8a, 0x828c, 0x0, 0x0);
        gbc.writeMem(0xcf3f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa137, gbc.sp());
        EXPECT(0xcf41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf3f));
        EXPECT(0x53, gbc.readMem(0xcf40));
        // CB 53 01AD
        gbc.setState(0x1467, 0xd11b, 0x6a30, 0xdd9e, 0xfc4, 0xf93a, 0x0, 0x1);
        gbc.writeMem(0x1467, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd11b, gbc.sp());
        EXPECT(0x1469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01AE
        gbc.setState(0x1202, 0x23a4, 0xba10, 0x1c5b, 0xc1af, 0x5161, 0x0, 0x1);
        gbc.writeMem(0x1202, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x23a4, gbc.sp());
        EXPECT(0x1204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01AF
        gbc.setState(0xc5cd, 0x354e, 0x2ad0, 0xe6c3, 0xe65a, 0xd3b6, 0x1, 0x1);
        gbc.writeMem(0xc5cd, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x354e, gbc.sp());
        EXPECT(0xc5cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5cd));
        EXPECT(0x53, gbc.readMem(0xc5ce));
        // CB 53 01B2
        gbc.setState(0xb5e4, 0x3339, 0x90b0, 0xb534, 0xd058, 0x161b, 0x1, 0x0);
        gbc.writeMem(0xb5e4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3339, gbc.sp());
        EXPECT(0xb5e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5e4));
        EXPECT(0x53, gbc.readMem(0xb5e5));
        // CB 53 01B3
        gbc.setState(0x93fe, 0x84ef, 0x41f0, 0x1afd, 0x6680, 0x804, 0x1, 0x0);
        gbc.writeMem(0x93fe, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x84ef, gbc.sp());
        EXPECT(0x9400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93fe));
        EXPECT(0x53, gbc.readMem(0x93ff));
        // CB 53 01B4
        gbc.setState(0x238d, 0x43bb, 0xc9a0, 0x3a75, 0x43a2, 0xf95a, 0x0, 0x1);
        gbc.writeMem(0x238d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x43bb, gbc.sp());
        EXPECT(0x238f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01B5
        gbc.setState(0x7b59, 0x2950, 0x5530, 0x388d, 0x307c, 0xe153, 0x0, 0x0);
        gbc.writeMem(0x7b59, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2950, gbc.sp());
        EXPECT(0x7b5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01B6
        gbc.setState(0x2aab, 0xea71, 0xf380, 0xdb81, 0xe0a0, 0xe322, 0x0, 0x0);
        gbc.writeMem(0x2aab, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xea71, gbc.sp());
        EXPECT(0x2aad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01B7
        gbc.setState(0x802d, 0x9e67, 0xd410, 0x6155, 0x6d6d, 0xb33e, 0x1, 0x0);
        gbc.writeMem(0x802d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9e67, gbc.sp());
        EXPECT(0x802f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x802d));
        EXPECT(0x53, gbc.readMem(0x802e));
        // CB 53 01B8
        gbc.setState(0x285d, 0xeeff, 0x9730, 0x4425, 0xc3de, 0xb219, 0x1, 0x1);
        gbc.writeMem(0x285d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xeeff, gbc.sp());
        EXPECT(0x285f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01B9
        gbc.setState(0xecb0, 0x28b0, 0xe9c0, 0x7451, 0xb4b, 0x6dc4, 0x1, 0x1);
        gbc.writeMem(0xecb0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x28b0, gbc.sp());
        EXPECT(0xecb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb0));
        EXPECT(0x53, gbc.readMem(0xecb1));
        // CB 53 01BA
        gbc.setState(0xe65f, 0xd98f, 0xafd0, 0xe3f7, 0x5e6f, 0x149a, 0x0, 0x0);
        gbc.writeMem(0xe65f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd98f, gbc.sp());
        EXPECT(0xe661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe65f));
        EXPECT(0x53, gbc.readMem(0xe660));
        // CB 53 01BB
        gbc.setState(0xe2e8, 0x7d9, 0xeef0, 0x2e9, 0x7ca3, 0x942, 0x1, 0x0);
        gbc.writeMem(0xe2e8, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7d9, gbc.sp());
        EXPECT(0xe2ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e8));
        EXPECT(0x53, gbc.readMem(0xe2e9));
        // CB 53 01BC
        gbc.setState(0x458e, 0xeef0, 0xa140, 0x3a31, 0x3e6a, 0x8510, 0x0, 0x0);
        gbc.writeMem(0x458e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xeef0, gbc.sp());
        EXPECT(0x4590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01BD
        gbc.setState(0x44dd, 0xbb17, 0x2b00, 0x97f7, 0x8a10, 0x716e, 0x1, 0x1);
        gbc.writeMem(0x44dd, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbb17, gbc.sp());
        EXPECT(0x44df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01BE
        gbc.setState(0xb4b1, 0xbcdc, 0xe810, 0xcf29, 0x950a, 0xca1b, 0x1, 0x0);
        gbc.writeMem(0xb4b1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbcdc, gbc.sp());
        EXPECT(0xb4b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4b1));
        EXPECT(0x53, gbc.readMem(0xb4b2));
        // CB 53 01BF
        gbc.setState(0x73fb, 0x3651, 0x1010, 0xdfd3, 0x6252, 0xef0a, 0x1, 0x0);
        gbc.writeMem(0x73fb, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3651, gbc.sp());
        EXPECT(0x73fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01C0
        gbc.setState(0x239e, 0x8207, 0xee00, 0xc2af, 0x45d3, 0xedb2, 0x1, 0x1);
        gbc.writeMem(0x239e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8207, gbc.sp());
        EXPECT(0x23a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01C2
        gbc.setState(0x9c5e, 0x5cb7, 0xca30, 0x43f9, 0xf2cc, 0xe707, 0x1, 0x0);
        gbc.writeMem(0x9c5e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5cb7, gbc.sp());
        EXPECT(0x9c60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c5e));
        EXPECT(0x53, gbc.readMem(0x9c5f));
        // CB 53 01C3
        gbc.setState(0xd2a, 0x41b, 0xb0a0, 0x6b81, 0x65cf, 0xb0e4, 0x0, 0x1);
        gbc.writeMem(0xd2a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x41b, gbc.sp());
        EXPECT(0xd2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01C4
        gbc.setState(0xdb54, 0x8722, 0x5df0, 0x28da, 0x1c8, 0x2093, 0x1, 0x0);
        gbc.writeMem(0xdb54, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8722, gbc.sp());
        EXPECT(0xdb56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb54));
        EXPECT(0x53, gbc.readMem(0xdb55));
        // CB 53 01C6
        gbc.setState(0x8cf, 0x3143, 0xdf50, 0x52, 0x5c2a, 0xa3a3, 0x0, 0x0);
        gbc.writeMem(0x8cf, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3143, gbc.sp());
        EXPECT(0x8d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01C7
        gbc.setState(0x48e3, 0x42cf, 0x1720, 0x4ce3, 0xc0ea, 0xcd92, 0x0, 0x1);
        gbc.writeMem(0x48e3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x42cf, gbc.sp());
        EXPECT(0x48e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01C8
        gbc.setState(0x9727, 0x1b64, 0x4870, 0x6f0d, 0x8ca1, 0xbbff, 0x1, 0x0);
        gbc.writeMem(0x9727, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1b64, gbc.sp());
        EXPECT(0x9729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9727));
        EXPECT(0x53, gbc.readMem(0x9728));
        // CB 53 01C9
        gbc.setState(0x8a90, 0xbe6a, 0xde00, 0xc833, 0x60fc, 0x3475, 0x1, 0x0);
        gbc.writeMem(0x8a90, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xbe6a, gbc.sp());
        EXPECT(0x8a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a90));
        EXPECT(0x53, gbc.readMem(0x8a91));
        // CB 53 01CB
        gbc.setState(0xeebe, 0x1ba5, 0x34b0, 0xa04f, 0xc6ce, 0x6b76, 0x1, 0x1);
        gbc.writeMem(0xeebe, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1ba5, gbc.sp());
        EXPECT(0xeec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeebe));
        EXPECT(0x53, gbc.readMem(0xeebf));
        // CB 53 01CC
        gbc.setState(0x1045, 0xaec7, 0xd8b0, 0xfca8, 0xec5c, 0xbca, 0x0, 0x1);
        gbc.writeMem(0x1045, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xaec7, gbc.sp());
        EXPECT(0x1047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01CD
        gbc.setState(0xab32, 0x3321, 0x4920, 0xd680, 0xf111, 0xf24a, 0x0, 0x0);
        gbc.writeMem(0xab32, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3321, gbc.sp());
        EXPECT(0xab34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab32));
        EXPECT(0x53, gbc.readMem(0xab33));
        // CB 53 01CE
        gbc.setState(0x7b33, 0x9415, 0x2c50, 0x7ab8, 0x7ed4, 0xe5a9, 0x1, 0x0);
        gbc.writeMem(0x7b33, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9415, gbc.sp());
        EXPECT(0x7b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01CF
        gbc.setState(0xb0f8, 0x2123, 0x9260, 0x961f, 0x6410, 0x475c, 0x0, 0x0);
        gbc.writeMem(0xb0f8, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2123, gbc.sp());
        EXPECT(0xb0fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f8));
        EXPECT(0x53, gbc.readMem(0xb0f9));
        // CB 53 01D0
        gbc.setState(0xdaec, 0xa855, 0x1400, 0xfd87, 0xcfc, 0xe98d, 0x0, 0x1);
        gbc.writeMem(0xdaec, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa855, gbc.sp());
        EXPECT(0xdaee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaec));
        EXPECT(0x53, gbc.readMem(0xdaed));
        // CB 53 01D1
        gbc.setState(0x3e97, 0xbc51, 0x7e10, 0xa3ee, 0x3150, 0xe76c, 0x0, 0x1);
        gbc.writeMem(0x3e97, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbc51, gbc.sp());
        EXPECT(0x3e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01D2
        gbc.setState(0x1f98, 0x635d, 0x5650, 0x1479, 0x870e, 0x940c, 0x0, 0x0);
        gbc.writeMem(0x1f98, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x635d, gbc.sp());
        EXPECT(0x1f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01D3
        gbc.setState(0x87b0, 0x47e0, 0x5320, 0xa812, 0xdcea, 0x4b79, 0x1, 0x0);
        gbc.writeMem(0x87b0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x47e0, gbc.sp());
        EXPECT(0x87b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87b0));
        EXPECT(0x53, gbc.readMem(0x87b1));
        // CB 53 01D4
        gbc.setState(0x1316, 0xa512, 0x8bb0, 0x5345, 0xc362, 0x8db9, 0x0, 0x1);
        gbc.writeMem(0x1316, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa512, gbc.sp());
        EXPECT(0x1318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01D5
        gbc.setState(0x3f73, 0x8ba6, 0x3f80, 0xa001, 0x881a, 0x1f21, 0x1, 0x1);
        gbc.writeMem(0x3f73, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8ba6, gbc.sp());
        EXPECT(0x3f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01D6
        gbc.setState(0x1d7e, 0xbcc9, 0xac50, 0x398a, 0x68e0, 0x7a6c, 0x1, 0x0);
        gbc.writeMem(0x1d7e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbcc9, gbc.sp());
        EXPECT(0x1d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01D7
        gbc.setState(0x642e, 0x50a9, 0xa7d0, 0xe6bc, 0x4d83, 0x84ab, 0x1, 0x0);
        gbc.writeMem(0x642e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x50a9, gbc.sp());
        EXPECT(0x6430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01D9
        gbc.setState(0xb0a3, 0xef56, 0x18b0, 0xc038, 0xc8b5, 0xa1c5, 0x0, 0x1);
        gbc.writeMem(0xb0a3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xef56, gbc.sp());
        EXPECT(0xb0a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a3));
        EXPECT(0x53, gbc.readMem(0xb0a4));
        // CB 53 01DA
        gbc.setState(0x4ed7, 0x563, 0xdc40, 0xfbe, 0xecab, 0x302, 0x1, 0x0);
        gbc.writeMem(0x4ed7, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x563, gbc.sp());
        EXPECT(0x4ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01DB
        gbc.setState(0xd825, 0x2d6d, 0x91b0, 0x28c1, 0x33be, 0x3655, 0x0, 0x0);
        gbc.writeMem(0xd825, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2d6d, gbc.sp());
        EXPECT(0xd827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd825));
        EXPECT(0x53, gbc.readMem(0xd826));
        // CB 53 01DC
        gbc.setState(0x44a1, 0x67ab, 0x870, 0xa0ad, 0xa733, 0xb352, 0x0, 0x0);
        gbc.writeMem(0x44a1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x67ab, gbc.sp());
        EXPECT(0x44a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01DD
        gbc.setState(0xca1a, 0x5dc4, 0x6640, 0x457, 0xeae5, 0x1031, 0x1, 0x0);
        gbc.writeMem(0xca1a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5dc4, gbc.sp());
        EXPECT(0xca1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca1a));
        EXPECT(0x53, gbc.readMem(0xca1b));
        // CB 53 01DF
        gbc.setState(0xab8e, 0xdc8f, 0x7140, 0x331c, 0xafc7, 0x4487, 0x0, 0x0);
        gbc.writeMem(0xab8e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xdc8f, gbc.sp());
        EXPECT(0xab90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab8e));
        EXPECT(0x53, gbc.readMem(0xab8f));
        // CB 53 01E0
        gbc.setState(0x23d6, 0xbe4a, 0x7ca0, 0x4b9c, 0xc37a, 0x5f7f, 0x1, 0x0);
        gbc.writeMem(0x23d6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xbe4a, gbc.sp());
        EXPECT(0x23d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01E1
        gbc.setState(0xd092, 0x516, 0x6730, 0x2b3a, 0x421f, 0x939e, 0x1, 0x1);
        gbc.writeMem(0xd092, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x516, gbc.sp());
        EXPECT(0xd094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd092));
        EXPECT(0x53, gbc.readMem(0xd093));
        // CB 53 01E2
        gbc.setState(0xe322, 0xa502, 0x1e00, 0x60d4, 0xc3f2, 0x5e35, 0x1, 0x0);
        gbc.writeMem(0xe322, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa502, gbc.sp());
        EXPECT(0xe324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe322));
        EXPECT(0x53, gbc.readMem(0xe323));
        // CB 53 01E3
        gbc.setState(0x6f4, 0x6952, 0x9c20, 0x2c50, 0xc3ce, 0xd49f, 0x1, 0x0);
        gbc.writeMem(0x6f4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6952, gbc.sp());
        EXPECT(0x6f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01E4
        gbc.setState(0x414e, 0xcee2, 0xdeb0, 0x331, 0xc973, 0x955f, 0x1, 0x0);
        gbc.writeMem(0x414e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcee2, gbc.sp());
        EXPECT(0x4150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01E5
        gbc.setState(0x6b6c, 0xc3c3, 0x15f0, 0x5549, 0xd57b, 0x542, 0x1, 0x1);
        gbc.writeMem(0x6b6c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc3c3, gbc.sp());
        EXPECT(0x6b6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01E6
        gbc.setState(0x1aaf, 0x23c9, 0x90e0, 0x6023, 0xc124, 0x81a1, 0x1, 0x1);
        gbc.writeMem(0x1aaf, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x23c9, gbc.sp());
        EXPECT(0x1ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01E7
        gbc.setState(0x7eae, 0x1608, 0x820, 0xd41c, 0xe98c, 0xca06, 0x0, 0x0);
        gbc.writeMem(0x7eae, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1608, gbc.sp());
        EXPECT(0x7eb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01E8
        gbc.setState(0x5c59, 0x24e3, 0xa390, 0x3d15, 0x2c83, 0xaafa, 0x1, 0x0);
        gbc.writeMem(0x5c59, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x24e3, gbc.sp());
        EXPECT(0x5c5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01E9
        gbc.setState(0xd689, 0xf759, 0xce90, 0xf991, 0x69a, 0x1642, 0x1, 0x0);
        gbc.writeMem(0xd689, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf759, gbc.sp());
        EXPECT(0xd68b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd689));
        EXPECT(0x53, gbc.readMem(0xd68a));
        // CB 53 01EA
        gbc.setState(0xbe3c, 0x8f8b, 0x2580, 0xd1da, 0xf26, 0xd0a8, 0x1, 0x1);
        gbc.writeMem(0xbe3c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8f8b, gbc.sp());
        EXPECT(0xbe3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe3c));
        EXPECT(0x53, gbc.readMem(0xbe3d));
        // CB 53 01EB
        gbc.setState(0x5ad, 0x139e, 0xd560, 0xc19f, 0x1579, 0xc531, 0x1, 0x0);
        gbc.writeMem(0x5ad, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x139e, gbc.sp());
        EXPECT(0x5af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01EC
        gbc.setState(0xdc43, 0xdf62, 0xf150, 0xb017, 0x7220, 0x184e, 0x0, 0x0);
        gbc.writeMem(0xdc43, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xdf62, gbc.sp());
        EXPECT(0xdc45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc43));
        EXPECT(0x53, gbc.readMem(0xdc44));
        // CB 53 01ED
        gbc.setState(0x4a22, 0x6a59, 0x49c0, 0xdda8, 0xd780, 0x62a8, 0x0, 0x0);
        gbc.writeMem(0x4a22, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6a59, gbc.sp());
        EXPECT(0x4a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01EE
        gbc.setState(0x57a6, 0x39a1, 0x5e90, 0x3ac0, 0x25de, 0x2c76, 0x0, 0x1);
        gbc.writeMem(0x57a6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x39a1, gbc.sp());
        EXPECT(0x57a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01EF
        gbc.setState(0x5f44, 0xfa84, 0x4fb0, 0x679, 0xc038, 0xcb62, 0x1, 0x0);
        gbc.writeMem(0x5f44, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfa84, gbc.sp());
        EXPECT(0x5f46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01F0
        gbc.setState(0x180c, 0x59ee, 0xf5c0, 0x9447, 0xf8fa, 0x1f30, 0x1, 0x0);
        gbc.writeMem(0x180c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x59ee, gbc.sp());
        EXPECT(0x180e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01F1
        gbc.setState(0x99fa, 0xb7d7, 0x12e0, 0x73a0, 0x8723, 0xe224, 0x1, 0x0);
        gbc.writeMem(0x99fa, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb7d7, gbc.sp());
        EXPECT(0x99fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99fa));
        EXPECT(0x53, gbc.readMem(0x99fb));
        // CB 53 01F2
        gbc.setState(0x5cc5, 0x4ff1, 0x800, 0x132c, 0x17f9, 0x6e83, 0x1, 0x0);
        gbc.writeMem(0x5cc5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4ff1, gbc.sp());
        EXPECT(0x5cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01F4
        gbc.setState(0x8fb, 0x5130, 0xf4f0, 0x21dc, 0x6502, 0xd931, 0x1, 0x1);
        gbc.writeMem(0x8fb, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5130, gbc.sp());
        EXPECT(0x8fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01F5
        gbc.setState(0xef89, 0x7532, 0xcf90, 0xeef4, 0x27f4, 0xf51e, 0x0, 0x0);
        gbc.writeMem(0xef89, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7532, gbc.sp());
        EXPECT(0xef8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef89));
        EXPECT(0x53, gbc.readMem(0xef8a));
        // CB 53 01F6
        gbc.setState(0x3ae5, 0x27fe, 0xfa80, 0x5ef2, 0x1a35, 0xa715, 0x0, 0x0);
        gbc.writeMem(0x3ae5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x27fe, gbc.sp());
        EXPECT(0x3ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01F7
        gbc.setState(0xbe7, 0x7dfc, 0xfc00, 0x145e, 0x1faa, 0xc7df, 0x1, 0x0);
        gbc.writeMem(0xbe7, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7dfc, gbc.sp());
        EXPECT(0xbe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01F8
        gbc.setState(0x4171, 0x6cd8, 0x53f0, 0x9f25, 0xf096, 0x87c1, 0x1, 0x0);
        gbc.writeMem(0x4171, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6cd8, gbc.sp());
        EXPECT(0x4173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01F9
        gbc.setState(0x6e4e, 0xbfac, 0x16d0, 0x49da, 0x8f33, 0x22a7, 0x0, 0x1);
        gbc.writeMem(0x6e4e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbfac, gbc.sp());
        EXPECT(0x6e50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01FA
        gbc.setState(0xd3ff, 0xb9f1, 0x28d0, 0x5117, 0xf05a, 0x3a, 0x0, 0x1);
        gbc.writeMem(0xd3ff, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb9f1, gbc.sp());
        EXPECT(0xd401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ff));
        EXPECT(0x53, gbc.readMem(0xd400));
        // CB 53 01FB
        gbc.setState(0x621a, 0xc690, 0x3490, 0x5564, 0xfc87, 0x5ff3, 0x0, 0x1);
        gbc.writeMem(0x621a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc690, gbc.sp());
        EXPECT(0x621c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01FC
        gbc.setState(0x7e59, 0x41f6, 0x3420, 0xd45a, 0xcd86, 0xd82d, 0x1, 0x1);
        gbc.writeMem(0x7e59, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x41f6, gbc.sp());
        EXPECT(0x7e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 01FD
        gbc.setState(0x570, 0x30c, 0xe030, 0x8273, 0xebba, 0xe98e, 0x0, 0x1);
        gbc.writeMem(0x570, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x30c, gbc.sp());
        EXPECT(0x572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 01FE
        gbc.setState(0xc132, 0x97f9, 0x1120, 0x7c76, 0x61a, 0xa703, 0x1, 0x1);
        gbc.writeMem(0xc132, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x97f9, gbc.sp());
        EXPECT(0xc134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc132));
        EXPECT(0x53, gbc.readMem(0xc133));
        // CB 53 0200
        gbc.setState(0x2d86, 0x1262, 0x13a0, 0x8093, 0xc370, 0x2d44, 0x1, 0x0);
        gbc.writeMem(0x2d86, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1262, gbc.sp());
        EXPECT(0x2d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0201
        gbc.setState(0xaed7, 0x719a, 0x1a40, 0xae58, 0xf9b7, 0x9e33, 0x1, 0x1);
        gbc.writeMem(0xaed7, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x719a, gbc.sp());
        EXPECT(0xaed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed7));
        EXPECT(0x53, gbc.readMem(0xaed8));
        // CB 53 0202
        gbc.setState(0x856f, 0x3174, 0x3870, 0x58f8, 0x4096, 0xad0a, 0x1, 0x1);
        gbc.writeMem(0x856f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3174, gbc.sp());
        EXPECT(0x8571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x856f));
        EXPECT(0x53, gbc.readMem(0x8570));
        // CB 53 0204
        gbc.setState(0xb3c4, 0x1281, 0xd930, 0xa2ac, 0x8e96, 0x707e, 0x1, 0x1);
        gbc.writeMem(0xb3c4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1281, gbc.sp());
        EXPECT(0xb3c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3c4));
        EXPECT(0x53, gbc.readMem(0xb3c5));
        // CB 53 0205
        gbc.setState(0xe50f, 0xcefe, 0x2ef0, 0x6467, 0xe0d2, 0x2974, 0x0, 0x1);
        gbc.writeMem(0xe50f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcefe, gbc.sp());
        EXPECT(0xe511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe50f));
        EXPECT(0x53, gbc.readMem(0xe510));
        // CB 53 0206
        gbc.setState(0x1e89, 0xf4a6, 0x5d30, 0xf24b, 0x4970, 0x1f1, 0x0, 0x0);
        gbc.writeMem(0x1e89, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf4a6, gbc.sp());
        EXPECT(0x1e8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0207
        gbc.setState(0x5ab8, 0xf216, 0x47a0, 0x3a95, 0x4b9f, 0x726c, 0x1, 0x0);
        gbc.writeMem(0x5ab8, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf216, gbc.sp());
        EXPECT(0x5aba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0208
        gbc.setState(0x156a, 0xb35e, 0xded0, 0xba98, 0x13e6, 0xd948, 0x0, 0x1);
        gbc.writeMem(0x156a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb35e, gbc.sp());
        EXPECT(0x156c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0209
        gbc.setState(0x6e94, 0xf159, 0xaef0, 0x9be4, 0x248e, 0x21b4, 0x0, 0x0);
        gbc.writeMem(0x6e94, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf159, gbc.sp());
        EXPECT(0x6e96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 020A
        gbc.setState(0xd769, 0x941, 0xd4d0, 0x8fac, 0x4bd0, 0xcb8b, 0x1, 0x0);
        gbc.writeMem(0xd769, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x941, gbc.sp());
        EXPECT(0xd76b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd769));
        EXPECT(0x53, gbc.readMem(0xd76a));
        // CB 53 020B
        gbc.setState(0x82d3, 0xc254, 0xf260, 0x61aa, 0x79f, 0xdc1d, 0x0, 0x1);
        gbc.writeMem(0x82d3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc254, gbc.sp());
        EXPECT(0x82d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d3));
        EXPECT(0x53, gbc.readMem(0x82d4));
        // CB 53 020D
        gbc.setState(0xc9af, 0xf8fa, 0xd50, 0x5464, 0x9206, 0x48a3, 0x0, 0x0);
        gbc.writeMem(0xc9af, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf8fa, gbc.sp());
        EXPECT(0xc9b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9af));
        EXPECT(0x53, gbc.readMem(0xc9b0));
        // CB 53 020E
        gbc.setState(0x83e2, 0x826b, 0x2120, 0x7654, 0x3643, 0x21a4, 0x1, 0x1);
        gbc.writeMem(0x83e2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x826b, gbc.sp());
        EXPECT(0x83e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e2));
        EXPECT(0x53, gbc.readMem(0x83e3));
        // CB 53 0210
        gbc.setState(0x5b2d, 0x173, 0x52c0, 0x101a, 0xb69d, 0xfd0e, 0x1, 0x0);
        gbc.writeMem(0x5b2d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x173, gbc.sp());
        EXPECT(0x5b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0211
        gbc.setState(0xdf70, 0xec73, 0x2a50, 0xa71f, 0x3604, 0x811f, 0x1, 0x0);
        gbc.writeMem(0xdf70, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xec73, gbc.sp());
        EXPECT(0xdf72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf70));
        EXPECT(0x53, gbc.readMem(0xdf71));
        // CB 53 0212
        gbc.setState(0x8014, 0x363e, 0x12e0, 0xdfdc, 0x265b, 0x8bd5, 0x1, 0x1);
        gbc.writeMem(0x8014, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x363e, gbc.sp());
        EXPECT(0x8016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8014));
        EXPECT(0x53, gbc.readMem(0x8015));
        // CB 53 0213
        gbc.setState(0xbf65, 0x9457, 0x33f0, 0x4f5a, 0x33bc, 0x5933, 0x0, 0x0);
        gbc.writeMem(0xbf65, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9457, gbc.sp());
        EXPECT(0xbf67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf65));
        EXPECT(0x53, gbc.readMem(0xbf66));
        // CB 53 0214
        gbc.setState(0xb7e8, 0x335c, 0xd490, 0x6729, 0x1773, 0xf1d4, 0x1, 0x1);
        gbc.writeMem(0xb7e8, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x335c, gbc.sp());
        EXPECT(0xb7ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e8));
        EXPECT(0x53, gbc.readMem(0xb7e9));
        // CB 53 0215
        gbc.setState(0x218e, 0x6dd9, 0x48d0, 0x54e6, 0x2f8d, 0x5fd0, 0x0, 0x0);
        gbc.writeMem(0x218e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6dd9, gbc.sp());
        EXPECT(0x2190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0216
        gbc.setState(0x6950, 0x7b08, 0x6c70, 0x9a0, 0xefef, 0x54cd, 0x0, 0x0);
        gbc.writeMem(0x6950, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7b08, gbc.sp());
        EXPECT(0x6952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0218
        gbc.setState(0x7829, 0xa1c0, 0xff50, 0xc223, 0xf7c0, 0x8adc, 0x0, 0x0);
        gbc.writeMem(0x7829, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa1c0, gbc.sp());
        EXPECT(0x782b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0219
        gbc.setState(0xb869, 0xca96, 0x3b30, 0xe539, 0xba8f, 0xd4ea, 0x0, 0x0);
        gbc.writeMem(0xb869, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xca96, gbc.sp());
        EXPECT(0xb86b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb869));
        EXPECT(0x53, gbc.readMem(0xb86a));
        // CB 53 021A
        gbc.setState(0xd73d, 0x5636, 0x730, 0x6845, 0x96ae, 0x5ef0, 0x1, 0x1);
        gbc.writeMem(0xd73d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5636, gbc.sp());
        EXPECT(0xd73f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd73d));
        EXPECT(0x53, gbc.readMem(0xd73e));
        // CB 53 021B
        gbc.setState(0x3e72, 0xaab8, 0xb570, 0x1e6b, 0xb895, 0xe7f6, 0x1, 0x1);
        gbc.writeMem(0x3e72, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xaab8, gbc.sp());
        EXPECT(0x3e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 021C
        gbc.setState(0x94bd, 0x5f8b, 0xc6a0, 0x415a, 0xbb25, 0x5e30, 0x1, 0x0);
        gbc.writeMem(0x94bd, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5f8b, gbc.sp());
        EXPECT(0x94bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94bd));
        EXPECT(0x53, gbc.readMem(0x94be));
        // CB 53 021D
        gbc.setState(0x3966, 0xfe53, 0xe5f0, 0xc692, 0x82f4, 0x3f, 0x1, 0x1);
        gbc.writeMem(0x3966, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xfe53, gbc.sp());
        EXPECT(0x3968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 021E
        gbc.setState(0xbcdb, 0xacb5, 0x36a0, 0xec74, 0xf3d, 0xe6c3, 0x0, 0x0);
        gbc.writeMem(0xbcdb, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xacb5, gbc.sp());
        EXPECT(0xbcdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcdb));
        EXPECT(0x53, gbc.readMem(0xbcdc));
        // CB 53 021F
        gbc.setState(0xb66e, 0xea6a, 0x15e0, 0x5ccb, 0xca8f, 0xad47, 0x1, 0x0);
        gbc.writeMem(0xb66e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xea6a, gbc.sp());
        EXPECT(0xb670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb66e));
        EXPECT(0x53, gbc.readMem(0xb66f));
        // CB 53 0220
        gbc.setState(0x4c76, 0x7b63, 0x60e0, 0x8f5d, 0xd089, 0x2140, 0x0, 0x1);
        gbc.writeMem(0x4c76, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7b63, gbc.sp());
        EXPECT(0x4c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0221
        gbc.setState(0x199e, 0x5dc5, 0x68e0, 0xbd38, 0x921d, 0x28ac, 0x1, 0x1);
        gbc.writeMem(0x199e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5dc5, gbc.sp());
        EXPECT(0x19a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0222
        gbc.setState(0xc7c4, 0xa80d, 0x5bd0, 0x7ef4, 0x71fc, 0x8c0, 0x0, 0x0);
        gbc.writeMem(0xc7c4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa80d, gbc.sp());
        EXPECT(0xc7c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7c4));
        EXPECT(0x53, gbc.readMem(0xc7c5));
        // CB 53 0224
        gbc.setState(0x6280, 0xfc57, 0x54d0, 0x3509, 0x819, 0x5eef, 0x1, 0x0);
        gbc.writeMem(0x6280, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xfc57, gbc.sp());
        EXPECT(0x6282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0225
        gbc.setState(0x29da, 0xf9ee, 0xec00, 0x651, 0xba4d, 0x5cc3, 0x0, 0x1);
        gbc.writeMem(0x29da, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf9ee, gbc.sp());
        EXPECT(0x29dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0226
        gbc.setState(0x30f1, 0xec64, 0x1d30, 0xe616, 0xd3fa, 0xb34e, 0x0, 0x1);
        gbc.writeMem(0x30f1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xec64, gbc.sp());
        EXPECT(0x30f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0227
        gbc.setState(0x36ae, 0x5253, 0xdf10, 0x4d5b, 0x6d60, 0x94e0, 0x0, 0x0);
        gbc.writeMem(0x36ae, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5253, gbc.sp());
        EXPECT(0x36b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0228
        gbc.setState(0xbdb7, 0x6350, 0xfc30, 0xff75, 0x1237, 0x896b, 0x1, 0x0);
        gbc.writeMem(0xbdb7, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6350, gbc.sp());
        EXPECT(0xbdb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb7));
        EXPECT(0x53, gbc.readMem(0xbdb8));
        // CB 53 0229
        gbc.setState(0x9953, 0xa6d5, 0x62d0, 0xb625, 0xa612, 0x4b0a, 0x0, 0x0);
        gbc.writeMem(0x9953, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa6d5, gbc.sp());
        EXPECT(0x9955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9953));
        EXPECT(0x53, gbc.readMem(0x9954));
        // CB 53 022A
        gbc.setState(0xa8c4, 0x95c6, 0x4d20, 0x7fa8, 0x36eb, 0xd2d8, 0x1, 0x0);
        gbc.writeMem(0xa8c4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x95c6, gbc.sp());
        EXPECT(0xa8c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c4));
        EXPECT(0x53, gbc.readMem(0xa8c5));
        // CB 53 022B
        gbc.setState(0x561d, 0xd7e6, 0xeb50, 0x63ef, 0xf006, 0x7baf, 0x1, 0x1);
        gbc.writeMem(0x561d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd7e6, gbc.sp());
        EXPECT(0x561f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 022C
        gbc.setState(0x7256, 0xbea6, 0x6d0, 0xc109, 0x3397, 0x2aaf, 0x1, 0x0);
        gbc.writeMem(0x7256, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbea6, gbc.sp());
        EXPECT(0x7258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 022D
        gbc.setState(0x96e7, 0xab02, 0x5220, 0xf82a, 0xa27e, 0xd656, 0x1, 0x1);
        gbc.writeMem(0x96e7, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xab02, gbc.sp());
        EXPECT(0x96e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e7));
        EXPECT(0x53, gbc.readMem(0x96e8));
        // CB 53 022E
        gbc.setState(0xd245, 0xc104, 0xf500, 0xd443, 0xe3d6, 0xc3cd, 0x1, 0x0);
        gbc.writeMem(0xd245, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc104, gbc.sp());
        EXPECT(0xd247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd245));
        EXPECT(0x53, gbc.readMem(0xd246));
        // CB 53 0230
        gbc.setState(0xe78e, 0x3c05, 0x9d90, 0x8cf8, 0x8a2d, 0xb645, 0x1, 0x1);
        gbc.writeMem(0xe78e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3c05, gbc.sp());
        EXPECT(0xe790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe78e));
        EXPECT(0x53, gbc.readMem(0xe78f));
        // CB 53 0231
        gbc.setState(0x54eb, 0xc095, 0xa7b0, 0x2ca0, 0x3940, 0xf586, 0x1, 0x1);
        gbc.writeMem(0x54eb, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc095, gbc.sp());
        EXPECT(0x54ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0232
        gbc.setState(0x6181, 0x325d, 0xa960, 0x8e5e, 0xf687, 0x9d70, 0x0, 0x1);
        gbc.writeMem(0x6181, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x325d, gbc.sp());
        EXPECT(0x6183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0233
        gbc.setState(0x3dc7, 0x47f3, 0x6820, 0x5745, 0x4a92, 0x55af, 0x0, 0x0);
        gbc.writeMem(0x3dc7, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x47f3, gbc.sp());
        EXPECT(0x3dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0234
        gbc.setState(0x1d91, 0x1791, 0x9a10, 0x1188, 0x1e98, 0x5f77, 0x1, 0x0);
        gbc.writeMem(0x1d91, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1791, gbc.sp());
        EXPECT(0x1d93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0235
        gbc.setState(0x74b6, 0x97a, 0x4a40, 0x203e, 0x182d, 0x237b, 0x1, 0x0);
        gbc.writeMem(0x74b6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x97a, gbc.sp());
        EXPECT(0x74b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0236
        gbc.setState(0xe597, 0xb822, 0xe620, 0xda26, 0xeda8, 0x1817, 0x1, 0x1);
        gbc.writeMem(0xe597, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb822, gbc.sp());
        EXPECT(0xe599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe597));
        EXPECT(0x53, gbc.readMem(0xe598));
        // CB 53 0237
        gbc.setState(0x4969, 0x147d, 0x3ac0, 0xb79b, 0x696d, 0x91cd, 0x1, 0x0);
        gbc.writeMem(0x4969, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x147d, gbc.sp());
        EXPECT(0x496b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0238
        gbc.setState(0x23e1, 0x6dc7, 0xc0b0, 0x3b94, 0x839d, 0xfa71, 0x0, 0x0);
        gbc.writeMem(0x23e1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6dc7, gbc.sp());
        EXPECT(0x23e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0239
        gbc.setState(0x5aef, 0x6b88, 0xe2a0, 0xd574, 0x5f51, 0xf75a, 0x1, 0x0);
        gbc.writeMem(0x5aef, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6b88, gbc.sp());
        EXPECT(0x5af1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 023B
        gbc.setState(0x77f6, 0x733, 0x17f0, 0x6fae, 0x8b85, 0xc5f5, 0x0, 0x0);
        gbc.writeMem(0x77f6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x733, gbc.sp());
        EXPECT(0x77f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 023C
        gbc.setState(0xd807, 0xb0b3, 0x1040, 0x335f, 0x5242, 0xd3da, 0x0, 0x0);
        gbc.writeMem(0xd807, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb0b3, gbc.sp());
        EXPECT(0xd809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd807));
        EXPECT(0x53, gbc.readMem(0xd808));
        // CB 53 023D
        gbc.setState(0x61d4, 0x464, 0x890, 0x8b9f, 0xabcc, 0xc6c, 0x1, 0x0);
        gbc.writeMem(0x61d4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x464, gbc.sp());
        EXPECT(0x61d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 023E
        gbc.setState(0x8f4e, 0x211e, 0x9210, 0x7489, 0xb5ca, 0x8f61, 0x1, 0x0);
        gbc.writeMem(0x8f4e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x211e, gbc.sp());
        EXPECT(0x8f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f4e));
        EXPECT(0x53, gbc.readMem(0x8f4f));
        // CB 53 0240
        gbc.setState(0xa13c, 0xa15a, 0xa530, 0x361a, 0x1169, 0x29f9, 0x0, 0x1);
        gbc.writeMem(0xa13c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa15a, gbc.sp());
        EXPECT(0xa13e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa13c));
        EXPECT(0x53, gbc.readMem(0xa13d));
        // CB 53 0241
        gbc.setState(0xd46a, 0x3356, 0x23c0, 0xc611, 0xece7, 0x1752, 0x1, 0x0);
        gbc.writeMem(0xd46a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3356, gbc.sp());
        EXPECT(0xd46c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd46a));
        EXPECT(0x53, gbc.readMem(0xd46b));
        // CB 53 0242
        gbc.setState(0x35af, 0x7e95, 0xa9f0, 0x60e5, 0xcff, 0x3305, 0x1, 0x0);
        gbc.writeMem(0x35af, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7e95, gbc.sp());
        EXPECT(0x35b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0243
        gbc.setState(0x7be1, 0x59ec, 0xb5f0, 0x356d, 0x4600, 0xd122, 0x1, 0x0);
        gbc.writeMem(0x7be1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x59ec, gbc.sp());
        EXPECT(0x7be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0244
        gbc.setState(0x23f3, 0xd617, 0x17b0, 0x680a, 0x7850, 0x96af, 0x0, 0x0);
        gbc.writeMem(0x23f3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd617, gbc.sp());
        EXPECT(0x23f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0245
        gbc.setState(0x11e0, 0x8602, 0xdca0, 0x8f26, 0xc339, 0x3e75, 0x0, 0x1);
        gbc.writeMem(0x11e0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8602, gbc.sp());
        EXPECT(0x11e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0246
        gbc.setState(0x127a, 0x2dda, 0x2910, 0x2e40, 0x1567, 0xa992, 0x0, 0x1);
        gbc.writeMem(0x127a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2dda, gbc.sp());
        EXPECT(0x127c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0247
        gbc.setState(0xbb3f, 0xb1e8, 0x32e0, 0x744a, 0x4a4e, 0xe78d, 0x0, 0x0);
        gbc.writeMem(0xbb3f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb1e8, gbc.sp());
        EXPECT(0xbb41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb3f));
        EXPECT(0x53, gbc.readMem(0xbb40));
        // CB 53 0248
        gbc.setState(0xb89d, 0x6f46, 0xef90, 0x6a28, 0xdb96, 0x81ab, 0x1, 0x0);
        gbc.writeMem(0xb89d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6f46, gbc.sp());
        EXPECT(0xb89f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb89d));
        EXPECT(0x53, gbc.readMem(0xb89e));
        // CB 53 0249
        gbc.setState(0x730c, 0x5e2c, 0x7cf0, 0xecb5, 0xca4a, 0x53a9, 0x1, 0x0);
        gbc.writeMem(0x730c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5e2c, gbc.sp());
        EXPECT(0x730e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 024B
        gbc.setState(0x22bf, 0xe019, 0x1ff0, 0x1606, 0x2829, 0x31f4, 0x1, 0x0);
        gbc.writeMem(0x22bf, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe019, gbc.sp());
        EXPECT(0x22c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 024C
        gbc.setState(0xc1c8, 0x2e6a, 0x4780, 0x7b81, 0x6ab2, 0xc7e7, 0x0, 0x0);
        gbc.writeMem(0xc1c8, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2e6a, gbc.sp());
        EXPECT(0xc1ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c8));
        EXPECT(0x53, gbc.readMem(0xc1c9));
        // CB 53 024D
        gbc.setState(0x37e9, 0x7fde, 0x49a0, 0x1547, 0xdfc6, 0x1956, 0x1, 0x0);
        gbc.writeMem(0x37e9, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7fde, gbc.sp());
        EXPECT(0x37eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 024E
        gbc.setState(0x7515, 0x1593, 0x1460, 0x2139, 0x289f, 0xc213, 0x0, 0x0);
        gbc.writeMem(0x7515, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1593, gbc.sp());
        EXPECT(0x7517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0250
        gbc.setState(0x21dd, 0x83f3, 0x8900, 0xd3d1, 0xfa40, 0x302b, 0x1, 0x1);
        gbc.writeMem(0x21dd, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x83f3, gbc.sp());
        EXPECT(0x21df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0251
        gbc.setState(0xd275, 0x84e8, 0xa500, 0xb497, 0x8612, 0xf259, 0x0, 0x1);
        gbc.writeMem(0xd275, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x84e8, gbc.sp());
        EXPECT(0xd277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd275));
        EXPECT(0x53, gbc.readMem(0xd276));
        // CB 53 0252
        gbc.setState(0xc989, 0xd964, 0x7f40, 0x67f3, 0xc156, 0x6bd9, 0x0, 0x0);
        gbc.writeMem(0xc989, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd964, gbc.sp());
        EXPECT(0xc98b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc989));
        EXPECT(0x53, gbc.readMem(0xc98a));
        // CB 53 0254
        gbc.setState(0xde09, 0xcac5, 0x4970, 0x7e56, 0xe883, 0x8a04, 0x1, 0x0);
        gbc.writeMem(0xde09, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcac5, gbc.sp());
        EXPECT(0xde0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde09));
        EXPECT(0x53, gbc.readMem(0xde0a));
        // CB 53 0255
        gbc.setState(0xe5b, 0x8857, 0xd4a0, 0x5f75, 0xc948, 0x3dd3, 0x0, 0x1);
        gbc.writeMem(0xe5b, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8857, gbc.sp());
        EXPECT(0xe5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0256
        gbc.setState(0xed02, 0x46d1, 0x3800, 0xb7ec, 0x6809, 0x6739, 0x0, 0x1);
        gbc.writeMem(0xed02, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x46d1, gbc.sp());
        EXPECT(0xed04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed02));
        EXPECT(0x53, gbc.readMem(0xed03));
        // CB 53 0257
        gbc.setState(0x6607, 0xbcf2, 0x2fa0, 0x4bcb, 0xe83a, 0xeaa, 0x0, 0x0);
        gbc.writeMem(0x6607, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbcf2, gbc.sp());
        EXPECT(0x6609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0258
        gbc.setState(0x719, 0x659a, 0xfe60, 0x34c2, 0xf564, 0x95a8, 0x1, 0x1);
        gbc.writeMem(0x719, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x659a, gbc.sp());
        EXPECT(0x71b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0259
        gbc.setState(0xc59b, 0x12db, 0x540, 0x8e4f, 0x5e9c, 0xa828, 0x0, 0x1);
        gbc.writeMem(0xc59b, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x12db, gbc.sp());
        EXPECT(0xc59d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc59b));
        EXPECT(0x53, gbc.readMem(0xc59c));
        // CB 53 025A
        gbc.setState(0xa9eb, 0x4a7e, 0x51c0, 0x7c17, 0xe567, 0x8c4, 0x1, 0x1);
        gbc.writeMem(0xa9eb, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4a7e, gbc.sp());
        EXPECT(0xa9ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9eb));
        EXPECT(0x53, gbc.readMem(0xa9ec));
        // CB 53 025B
        gbc.setState(0x461, 0x4173, 0xadc0, 0x8440, 0xce89, 0xf300, 0x0, 0x0);
        gbc.writeMem(0x461, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4173, gbc.sp());
        EXPECT(0x463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 025C
        gbc.setState(0xaddc, 0x8ca6, 0xb8a0, 0xb2d9, 0x3392, 0xb36d, 0x1, 0x0);
        gbc.writeMem(0xaddc, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8ca6, gbc.sp());
        EXPECT(0xadde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaddc));
        EXPECT(0x53, gbc.readMem(0xaddd));
        // CB 53 025D
        gbc.setState(0x11e5, 0x463c, 0xf030, 0xd8ef, 0x9a01, 0xa2a7, 0x1, 0x0);
        gbc.writeMem(0x11e5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x463c, gbc.sp());
        EXPECT(0x11e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 025E
        gbc.setState(0xc512, 0xd2e0, 0xebc0, 0xb9c6, 0xb347, 0x5ac2, 0x1, 0x1);
        gbc.writeMem(0xc512, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd2e0, gbc.sp());
        EXPECT(0xc514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc512));
        EXPECT(0x53, gbc.readMem(0xc513));
        // CB 53 025F
        gbc.setState(0xab7d, 0xbb8, 0x6700, 0x5172, 0x6fdd, 0x56a3, 0x0, 0x1);
        gbc.writeMem(0xab7d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbb8, gbc.sp());
        EXPECT(0xab7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab7d));
        EXPECT(0x53, gbc.readMem(0xab7e));
        // CB 53 0260
        gbc.setState(0x6692, 0xf5ea, 0x27e0, 0x94ca, 0x9ba3, 0x774b, 0x0, 0x1);
        gbc.writeMem(0x6692, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf5ea, gbc.sp());
        EXPECT(0x6694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0261
        gbc.setState(0xa9b6, 0x7662, 0xa230, 0x75fb, 0x120f, 0x1ff7, 0x1, 0x1);
        gbc.writeMem(0xa9b6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7662, gbc.sp());
        EXPECT(0xa9b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b6));
        EXPECT(0x53, gbc.readMem(0xa9b7));
        // CB 53 0262
        gbc.setState(0x5bf0, 0xf294, 0x1ce0, 0xe838, 0x6d7e, 0x9ece, 0x0, 0x1);
        gbc.writeMem(0x5bf0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf294, gbc.sp());
        EXPECT(0x5bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0263
        gbc.setState(0x8eb3, 0xe5f9, 0xd00, 0x3199, 0x51e1, 0xe60a, 0x0, 0x1);
        gbc.writeMem(0x8eb3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe5f9, gbc.sp());
        EXPECT(0x8eb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb3));
        EXPECT(0x53, gbc.readMem(0x8eb4));
        // CB 53 0264
        gbc.setState(0x2b67, 0x82ca, 0x17d0, 0x3b96, 0x1d29, 0x1210, 0x0, 0x1);
        gbc.writeMem(0x2b67, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x82ca, gbc.sp());
        EXPECT(0x2b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0265
        gbc.setState(0x5ed2, 0xaca9, 0x7f40, 0xd912, 0x8956, 0x9b1c, 0x0, 0x1);
        gbc.writeMem(0x5ed2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xaca9, gbc.sp());
        EXPECT(0x5ed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0266
        gbc.setState(0x6ff4, 0xea25, 0x7360, 0x137d, 0x44b3, 0x7546, 0x0, 0x1);
        gbc.writeMem(0x6ff4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xea25, gbc.sp());
        EXPECT(0x6ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0267
        gbc.setState(0xa2ad, 0xdace, 0x7e10, 0x6f0a, 0xcbb5, 0xa6a2, 0x1, 0x1);
        gbc.writeMem(0xa2ad, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xdace, gbc.sp());
        EXPECT(0xa2af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ad));
        EXPECT(0x53, gbc.readMem(0xa2ae));
        // CB 53 0268
        gbc.setState(0x84bb, 0x5eb5, 0xd500, 0xda26, 0xa50, 0x8022, 0x0, 0x1);
        gbc.writeMem(0x84bb, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5eb5, gbc.sp());
        EXPECT(0x84bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84bb));
        EXPECT(0x53, gbc.readMem(0x84bc));
        // CB 53 0269
        gbc.setState(0x31e6, 0x667, 0x7f0, 0xd203, 0xbca0, 0x336e, 0x0, 0x0);
        gbc.writeMem(0x31e6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x667, gbc.sp());
        EXPECT(0x31e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 026A
        gbc.setState(0x3e9e, 0xf686, 0xe880, 0x1a68, 0xbd68, 0xa4ee, 0x1, 0x0);
        gbc.writeMem(0x3e9e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf686, gbc.sp());
        EXPECT(0x3ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 026B
        gbc.setState(0xc844, 0x98dc, 0xc3c0, 0xa0bf, 0xdc0b, 0x173a, 0x0, 0x1);
        gbc.writeMem(0xc844, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x98dc, gbc.sp());
        EXPECT(0xc846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc844));
        EXPECT(0x53, gbc.readMem(0xc845));
        // CB 53 026C
        gbc.setState(0x923f, 0x4dfd, 0xf540, 0x5e80, 0x2a9, 0x1bd4, 0x0, 0x1);
        gbc.writeMem(0x923f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4dfd, gbc.sp());
        EXPECT(0x9241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x923f));
        EXPECT(0x53, gbc.readMem(0x9240));
        // CB 53 026D
        gbc.setState(0xbc62, 0x6712, 0x9260, 0x7ba4, 0x76af, 0xa552, 0x0, 0x1);
        gbc.writeMem(0xbc62, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6712, gbc.sp());
        EXPECT(0xbc64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc62));
        EXPECT(0x53, gbc.readMem(0xbc63));
        // CB 53 026E
        gbc.setState(0xb350, 0xaeab, 0x2890, 0x1e62, 0xa4e0, 0xdb30, 0x1, 0x1);
        gbc.writeMem(0xb350, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xaeab, gbc.sp());
        EXPECT(0xb352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb350));
        EXPECT(0x53, gbc.readMem(0xb351));
        // CB 53 026F
        gbc.setState(0xeaf7, 0xc2e3, 0xf680, 0x2caf, 0x9e3, 0xde30, 0x0, 0x1);
        gbc.writeMem(0xeaf7, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc2e3, gbc.sp());
        EXPECT(0xeaf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaf7));
        EXPECT(0x53, gbc.readMem(0xeaf8));
        // CB 53 0270
        gbc.setState(0x94b7, 0x6f7f, 0x41f0, 0x6c03, 0x638e, 0x1a76, 0x0, 0x1);
        gbc.writeMem(0x94b7, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6f7f, gbc.sp());
        EXPECT(0x94b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94b7));
        EXPECT(0x53, gbc.readMem(0x94b8));
        // CB 53 0271
        gbc.setState(0xe09e, 0x5e0f, 0xcc40, 0x8450, 0xcc74, 0x6d31, 0x0, 0x1);
        gbc.writeMem(0xe09e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5e0f, gbc.sp());
        EXPECT(0xe0a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe09e));
        EXPECT(0x53, gbc.readMem(0xe09f));
        // CB 53 0272
        gbc.setState(0xdf4b, 0xd00, 0xe240, 0xd2bb, 0x1a4f, 0x1ba4, 0x1, 0x0);
        gbc.writeMem(0xdf4b, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd00, gbc.sp());
        EXPECT(0xdf4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf4b));
        EXPECT(0x53, gbc.readMem(0xdf4c));
        // CB 53 0273
        gbc.setState(0x1054, 0xb1c4, 0xe980, 0x5a3c, 0x610a, 0x8ca7, 0x1, 0x0);
        gbc.writeMem(0x1054, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb1c4, gbc.sp());
        EXPECT(0x1056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0274
        gbc.setState(0xb0b2, 0x5088, 0xdb80, 0xbe16, 0xa63a, 0xebb, 0x1, 0x0);
        gbc.writeMem(0xb0b2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5088, gbc.sp());
        EXPECT(0xb0b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0b2));
        EXPECT(0x53, gbc.readMem(0xb0b3));
        // CB 53 0275
        gbc.setState(0xa6a0, 0x3137, 0xdc40, 0xbafe, 0x9aad, 0x8649, 0x1, 0x1);
        gbc.writeMem(0xa6a0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3137, gbc.sp());
        EXPECT(0xa6a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a0));
        EXPECT(0x53, gbc.readMem(0xa6a1));
        // CB 53 0276
        gbc.setState(0x8c72, 0xa683, 0xb840, 0xaa2b, 0x5a7a, 0x70e6, 0x0, 0x0);
        gbc.writeMem(0x8c72, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa683, gbc.sp());
        EXPECT(0x8c74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c72));
        EXPECT(0x53, gbc.readMem(0x8c73));
        // CB 53 0277
        gbc.setState(0xd7e6, 0x99a9, 0x48b0, 0x3c0a, 0xac6a, 0xce98, 0x1, 0x1);
        gbc.writeMem(0xd7e6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x99a9, gbc.sp());
        EXPECT(0xd7e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e6));
        EXPECT(0x53, gbc.readMem(0xd7e7));
        // CB 53 0278
        gbc.setState(0x1961, 0x74e, 0xb550, 0x1dd9, 0x87f2, 0x2689, 0x0, 0x0);
        gbc.writeMem(0x1961, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x74e, gbc.sp());
        EXPECT(0x1963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0279
        gbc.setState(0x8111, 0x789c, 0x2b50, 0x6461, 0x8cdc, 0xb652, 0x1, 0x0);
        gbc.writeMem(0x8111, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x789c, gbc.sp());
        EXPECT(0x8113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8111));
        EXPECT(0x53, gbc.readMem(0x8112));
        // CB 53 027A
        gbc.setState(0x499a, 0x616b, 0x4e40, 0xb953, 0x364d, 0x279b, 0x0, 0x1);
        gbc.writeMem(0x499a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x616b, gbc.sp());
        EXPECT(0x499c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 027B
        gbc.setState(0x2209, 0x4256, 0x4780, 0xd034, 0x5aab, 0xc544, 0x1, 0x1);
        gbc.writeMem(0x2209, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4256, gbc.sp());
        EXPECT(0x220b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 027C
        gbc.setState(0xb097, 0x1e52, 0x7fd0, 0xbf0e, 0xc898, 0x8019, 0x1, 0x1);
        gbc.writeMem(0xb097, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1e52, gbc.sp());
        EXPECT(0xb099, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb097));
        EXPECT(0x53, gbc.readMem(0xb098));
        // CB 53 027D
        gbc.setState(0x9e2d, 0x220c, 0x5bc0, 0xe8fe, 0xd1d9, 0x2bff, 0x1, 0x0);
        gbc.writeMem(0x9e2d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x220c, gbc.sp());
        EXPECT(0x9e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e2d));
        EXPECT(0x53, gbc.readMem(0x9e2e));
        // CB 53 027E
        gbc.setState(0x7de9, 0xc029, 0xe870, 0xe768, 0xc46f, 0xe9f, 0x0, 0x0);
        gbc.writeMem(0x7de9, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc029, gbc.sp());
        EXPECT(0x7deb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 027F
        gbc.setState(0xa1f1, 0x770f, 0x11d0, 0x3b43, 0xca60, 0xd68b, 0x1, 0x1);
        gbc.writeMem(0xa1f1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x770f, gbc.sp());
        EXPECT(0xa1f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f1));
        EXPECT(0x53, gbc.readMem(0xa1f2));
        // CB 53 0280
        gbc.setState(0xdc88, 0x1ea6, 0x7050, 0x1806, 0x2db1, 0x9fab, 0x1, 0x1);
        gbc.writeMem(0xdc88, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1ea6, gbc.sp());
        EXPECT(0xdc8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc88));
        EXPECT(0x53, gbc.readMem(0xdc89));
        // CB 53 0281
        gbc.setState(0xc241, 0xf743, 0x20b0, 0x42da, 0x1b08, 0x735c, 0x1, 0x0);
        gbc.writeMem(0xc241, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf743, gbc.sp());
        EXPECT(0xc243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc241));
        EXPECT(0x53, gbc.readMem(0xc242));
        // CB 53 0282
        gbc.setState(0xc08, 0xa356, 0x21e0, 0xc7eb, 0x1e48, 0x39b9, 0x1, 0x0);
        gbc.writeMem(0xc08, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa356, gbc.sp());
        EXPECT(0xc0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0283
        gbc.setState(0x9de1, 0xbfc7, 0xc8d0, 0xbfcf, 0x6950, 0xb97b, 0x0, 0x0);
        gbc.writeMem(0x9de1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbfc7, gbc.sp());
        EXPECT(0x9de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de1));
        EXPECT(0x53, gbc.readMem(0x9de2));
        // CB 53 0284
        gbc.setState(0x4843, 0x3224, 0xc340, 0xbffe, 0xb1c, 0x88e4, 0x0, 0x0);
        gbc.writeMem(0x4843, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3224, gbc.sp());
        EXPECT(0x4845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0285
        gbc.setState(0x530, 0xb73, 0xfff0, 0xfefa, 0x594, 0x1c54, 0x0, 0x1);
        gbc.writeMem(0x530, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb73, gbc.sp());
        EXPECT(0x532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0286
        gbc.setState(0xe467, 0xb783, 0x8450, 0xc74d, 0x3a9b, 0x94aa, 0x0, 0x0);
        gbc.writeMem(0xe467, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb783, gbc.sp());
        EXPECT(0xe469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe467));
        EXPECT(0x53, gbc.readMem(0xe468));
        // CB 53 0287
        gbc.setState(0xa6af, 0x2a94, 0x4f60, 0xf49e, 0x2399, 0xf9d5, 0x0, 0x0);
        gbc.writeMem(0xa6af, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2a94, gbc.sp());
        EXPECT(0xa6b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6af));
        EXPECT(0x53, gbc.readMem(0xa6b0));
        // CB 53 0288
        gbc.setState(0x299f, 0x4296, 0x35b0, 0xace7, 0x7d36, 0xf46f, 0x0, 0x1);
        gbc.writeMem(0x299f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4296, gbc.sp());
        EXPECT(0x29a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0289
        gbc.setState(0xfc9, 0x416a, 0xb880, 0xac4b, 0x4ead, 0xbd2e, 0x1, 0x1);
        gbc.writeMem(0xfc9, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x416a, gbc.sp());
        EXPECT(0xfcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 028A
        gbc.setState(0x9148, 0xe189, 0x3ac0, 0x2942, 0x1980, 0x9d48, 0x1, 0x1);
        gbc.writeMem(0x9148, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe189, gbc.sp());
        EXPECT(0x914a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9148));
        EXPECT(0x53, gbc.readMem(0x9149));
        // CB 53 028B
        gbc.setState(0xb2c8, 0x67d3, 0xe150, 0xf3c0, 0x5e5a, 0xc6f2, 0x0, 0x1);
        gbc.writeMem(0xb2c8, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x67d3, gbc.sp());
        EXPECT(0xb2ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2c8));
        EXPECT(0x53, gbc.readMem(0xb2c9));
        // CB 53 028C
        gbc.setState(0x3c90, 0x48ae, 0xe20, 0x913e, 0x6ed2, 0xa0a4, 0x0, 0x1);
        gbc.writeMem(0x3c90, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x48ae, gbc.sp());
        EXPECT(0x3c92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 028E
        gbc.setState(0xebc, 0x6041, 0x3a50, 0x9f74, 0xdb36, 0x612d, 0x1, 0x0);
        gbc.writeMem(0xebc, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6041, gbc.sp());
        EXPECT(0xebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 028F
        gbc.setState(0x84c, 0x4d9b, 0xfaa0, 0xee15, 0x192c, 0xdf27, 0x0, 0x0);
        gbc.writeMem(0x84c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4d9b, gbc.sp());
        EXPECT(0x84e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0290
        gbc.setState(0x3d48, 0x32f5, 0xfd60, 0xd258, 0xfcfe, 0x22ff, 0x1, 0x1);
        gbc.writeMem(0x3d48, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x32f5, gbc.sp());
        EXPECT(0x3d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0291
        gbc.setState(0xe25f, 0xc083, 0x3350, 0x3d90, 0x1acb, 0x9969, 0x0, 0x1);
        gbc.writeMem(0xe25f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc083, gbc.sp());
        EXPECT(0xe261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe25f));
        EXPECT(0x53, gbc.readMem(0xe260));
        // CB 53 0292
        gbc.setState(0x29e7, 0xb1e4, 0x1650, 0xdafb, 0x5d95, 0x8801, 0x0, 0x1);
        gbc.writeMem(0x29e7, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb1e4, gbc.sp());
        EXPECT(0x29e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0293
        gbc.setState(0xa990, 0x4f74, 0xaf70, 0xdf0f, 0xa4b5, 0x7b9f, 0x1, 0x1);
        gbc.writeMem(0xa990, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4f74, gbc.sp());
        EXPECT(0xa992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa990));
        EXPECT(0x53, gbc.readMem(0xa991));
        // CB 53 0294
        gbc.setState(0x99a0, 0xcffa, 0x6010, 0x1d51, 0x8500, 0x880c, 0x0, 0x1);
        gbc.writeMem(0x99a0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xcffa, gbc.sp());
        EXPECT(0x99a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99a0));
        EXPECT(0x53, gbc.readMem(0x99a1));
        // CB 53 0295
        gbc.setState(0xa2a9, 0x26fa, 0x1170, 0xcf7a, 0x454, 0xf18d, 0x1, 0x0);
        gbc.writeMem(0xa2a9, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x26fa, gbc.sp());
        EXPECT(0xa2ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a9));
        EXPECT(0x53, gbc.readMem(0xa2aa));
        // CB 53 0296
        gbc.setState(0xc8dc, 0x5bd3, 0x8d0, 0xddc2, 0xe212, 0x5497, 0x1, 0x0);
        gbc.writeMem(0xc8dc, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5bd3, gbc.sp());
        EXPECT(0xc8de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8dc));
        EXPECT(0x53, gbc.readMem(0xc8dd));
        // CB 53 0298
        gbc.setState(0xc2ab, 0xbebb, 0xf100, 0x3a2d, 0x6b3f, 0x504d, 0x0, 0x1);
        gbc.writeMem(0xc2ab, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbebb, gbc.sp());
        EXPECT(0xc2ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ab));
        EXPECT(0x53, gbc.readMem(0xc2ac));
        // CB 53 0299
        gbc.setState(0x35b0, 0xfb50, 0xc270, 0xffd2, 0x24ef, 0x423d, 0x1, 0x1);
        gbc.writeMem(0x35b0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfb50, gbc.sp());
        EXPECT(0x35b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 029A
        gbc.setState(0x125a, 0xff58, 0xca20, 0xee07, 0xc17, 0x3b87, 0x0, 0x0);
        gbc.writeMem(0x125a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xff58, gbc.sp());
        EXPECT(0x125c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 029B
        gbc.setState(0x7a18, 0x3b97, 0x2dd0, 0x6699, 0xb487, 0x83a6, 0x0, 0x0);
        gbc.writeMem(0x7a18, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3b97, gbc.sp());
        EXPECT(0x7a1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 029C
        gbc.setState(0x1573, 0xbaaf, 0xc6a0, 0xc7d9, 0x2441, 0x5d0f, 0x1, 0x1);
        gbc.writeMem(0x1573, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbaaf, gbc.sp());
        EXPECT(0x1575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 029D
        gbc.setState(0x70f, 0x826, 0x87f0, 0x5cff, 0xb7f, 0x27a4, 0x1, 0x0);
        gbc.writeMem(0x70f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x826, gbc.sp());
        EXPECT(0x711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 029E
        gbc.setState(0x521e, 0xa0ee, 0xb4c0, 0x5f25, 0xdf3f, 0x4dc9, 0x1, 0x0);
        gbc.writeMem(0x521e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa0ee, gbc.sp());
        EXPECT(0x5220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 029F
        gbc.setState(0x6284, 0x1771, 0x9580, 0xda73, 0xb7ac, 0xb6f3, 0x1, 0x1);
        gbc.writeMem(0x6284, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1771, gbc.sp());
        EXPECT(0x6286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02A0
        gbc.setState(0x7598, 0x1d7f, 0xfc90, 0xc438, 0x47fc, 0x85, 0x0, 0x1);
        gbc.writeMem(0x7598, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1d7f, gbc.sp());
        EXPECT(0x759a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02A1
        gbc.setState(0xddec, 0x120, 0xd450, 0xba98, 0xd856, 0x920c, 0x0, 0x1);
        gbc.writeMem(0xddec, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x120, gbc.sp());
        EXPECT(0xddee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddec));
        EXPECT(0x53, gbc.readMem(0xdded));
        // CB 53 02A2
        gbc.setState(0x6212, 0x4370, 0xdd60, 0x9abf, 0x6295, 0xbac2, 0x0, 0x1);
        gbc.writeMem(0x6212, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4370, gbc.sp());
        EXPECT(0x6214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02A3
        gbc.setState(0x5634, 0x7b01, 0x2260, 0x9d7d, 0xa96f, 0x63d6, 0x0, 0x0);
        gbc.writeMem(0x5634, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7b01, gbc.sp());
        EXPECT(0x5636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02A4
        gbc.setState(0x5e0b, 0x944c, 0xf520, 0x3b4a, 0x5aa7, 0x69e4, 0x0, 0x0);
        gbc.writeMem(0x5e0b, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x944c, gbc.sp());
        EXPECT(0x5e0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02A5
        gbc.setState(0x2b6e, 0xaee2, 0x4c00, 0x4e13, 0x3d3, 0x9dff, 0x1, 0x1);
        gbc.writeMem(0x2b6e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xaee2, gbc.sp());
        EXPECT(0x2b70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02A6
        gbc.setState(0x474e, 0x3911, 0x8410, 0xfdd, 0x5ce8, 0x3eea, 0x0, 0x1);
        gbc.writeMem(0x474e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3911, gbc.sp());
        EXPECT(0x4750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02A7
        gbc.setState(0xb122, 0x6f3, 0xfba0, 0x8133, 0x4f87, 0xf53a, 0x0, 0x0);
        gbc.writeMem(0xb122, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6f3, gbc.sp());
        EXPECT(0xb124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb122));
        EXPECT(0x53, gbc.readMem(0xb123));
        // CB 53 02A8
        gbc.setState(0x2665, 0xef9, 0xd460, 0x3a20, 0xb011, 0xf5c9, 0x0, 0x0);
        gbc.writeMem(0x2665, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xef9, gbc.sp());
        EXPECT(0x2667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02A9
        gbc.setState(0x40f2, 0x6edc, 0x3b90, 0xba40, 0x7f16, 0x4957, 0x1, 0x0);
        gbc.writeMem(0x40f2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6edc, gbc.sp());
        EXPECT(0x40f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02AA
        gbc.setState(0xe783, 0xc7d8, 0xcd0, 0x483, 0xd5f8, 0xc2be, 0x0, 0x1);
        gbc.writeMem(0xe783, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc7d8, gbc.sp());
        EXPECT(0xe785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe783));
        EXPECT(0x53, gbc.readMem(0xe784));
        // CB 53 02AB
        gbc.setState(0xa60d, 0xda16, 0x66f0, 0xe1a8, 0x94d1, 0xc340, 0x1, 0x0);
        gbc.writeMem(0xa60d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xda16, gbc.sp());
        EXPECT(0xa60f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa60d));
        EXPECT(0x53, gbc.readMem(0xa60e));
        // CB 53 02AC
        gbc.setState(0x98ea, 0x3c4d, 0xbc50, 0xe90a, 0x7532, 0xab84, 0x0, 0x0);
        gbc.writeMem(0x98ea, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3c4d, gbc.sp());
        EXPECT(0x98ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ea));
        EXPECT(0x53, gbc.readMem(0x98eb));
        // CB 53 02AD
        gbc.setState(0x9ae3, 0xb09, 0x2880, 0x7690, 0x159d, 0x3c5f, 0x1, 0x1);
        gbc.writeMem(0x9ae3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb09, gbc.sp());
        EXPECT(0x9ae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae3));
        EXPECT(0x53, gbc.readMem(0x9ae4));
        // CB 53 02AE
        gbc.setState(0x5c44, 0xddda, 0x8300, 0x77b, 0xa236, 0x1eaa, 0x0, 0x1);
        gbc.writeMem(0x5c44, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xddda, gbc.sp());
        EXPECT(0x5c46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02AF
        gbc.setState(0x7b0e, 0xbd10, 0x66c0, 0xafd8, 0x6698, 0x2692, 0x0, 0x0);
        gbc.writeMem(0x7b0e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbd10, gbc.sp());
        EXPECT(0x7b10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02B0
        gbc.setState(0x6fc5, 0xcd0f, 0x88a0, 0x14b6, 0x6f7b, 0x39cf, 0x0, 0x0);
        gbc.writeMem(0x6fc5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xcd0f, gbc.sp());
        EXPECT(0x6fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02B1
        gbc.setState(0x7940, 0xaa7a, 0x9940, 0xea39, 0xfe0b, 0xd83d, 0x0, 0x0);
        gbc.writeMem(0x7940, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xaa7a, gbc.sp());
        EXPECT(0x7942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02B2
        gbc.setState(0x700c, 0x46b9, 0x3ed0, 0xfbdc, 0xc75, 0x1623, 0x1, 0x0);
        gbc.writeMem(0x700c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x46b9, gbc.sp());
        EXPECT(0x700e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02B3
        gbc.setState(0x7c02, 0x9008, 0xce00, 0xc39a, 0x1ece, 0x5d7e, 0x1, 0x1);
        gbc.writeMem(0x7c02, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9008, gbc.sp());
        EXPECT(0x7c04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02B4
        gbc.setState(0x22ca, 0xa4f0, 0xc130, 0x8644, 0xc12, 0xe046, 0x0, 0x0);
        gbc.writeMem(0x22ca, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa4f0, gbc.sp());
        EXPECT(0x22cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02B5
        gbc.setState(0x9673, 0xd7b4, 0xbdc0, 0x46c8, 0xe8b3, 0xd8e, 0x0, 0x1);
        gbc.writeMem(0x9673, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd7b4, gbc.sp());
        EXPECT(0x9675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9673));
        EXPECT(0x53, gbc.readMem(0x9674));
        // CB 53 02B7
        gbc.setState(0x4cd2, 0x4671, 0xc280, 0xf9, 0x5fa6, 0x13dc, 0x1, 0x0);
        gbc.writeMem(0x4cd2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4671, gbc.sp());
        EXPECT(0x4cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02B8
        gbc.setState(0xd57a, 0x5c1b, 0xf190, 0xd9a3, 0x9b4d, 0xa68, 0x0, 0x1);
        gbc.writeMem(0xd57a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5c1b, gbc.sp());
        EXPECT(0xd57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd57a));
        EXPECT(0x53, gbc.readMem(0xd57b));
        // CB 53 02BA
        gbc.setState(0x28fd, 0x18a0, 0x1e20, 0xe61f, 0x1405, 0x4919, 0x1, 0x1);
        gbc.writeMem(0x28fd, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x18a0, gbc.sp());
        EXPECT(0x28ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02BB
        gbc.setState(0x89e1, 0x6777, 0x8140, 0x276f, 0x563, 0xb89a, 0x0, 0x0);
        gbc.writeMem(0x89e1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6777, gbc.sp());
        EXPECT(0x89e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e1));
        EXPECT(0x53, gbc.readMem(0x89e2));
        // CB 53 02BC
        gbc.setState(0x2e21, 0x3af4, 0x2310, 0xb290, 0xdee, 0xbf6, 0x0, 0x0);
        gbc.writeMem(0x2e21, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3af4, gbc.sp());
        EXPECT(0x2e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02BD
        gbc.setState(0x7f23, 0xe2e5, 0x5af0, 0x75eb, 0x34a8, 0x5950, 0x0, 0x0);
        gbc.writeMem(0x7f23, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe2e5, gbc.sp());
        EXPECT(0x7f25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02BE
        gbc.setState(0xca2b, 0x6ec1, 0x4db0, 0x6b96, 0x11ae, 0xbd6e, 0x0, 0x1);
        gbc.writeMem(0xca2b, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6ec1, gbc.sp());
        EXPECT(0xca2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca2b));
        EXPECT(0x53, gbc.readMem(0xca2c));
        // CB 53 02BF
        gbc.setState(0x28e, 0xac4f, 0xf420, 0x1b74, 0xdf10, 0xc29c, 0x1, 0x1);
        gbc.writeMem(0x28e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xac4f, gbc.sp());
        EXPECT(0x290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02C0
        gbc.setState(0x6bb0, 0x8a5e, 0x7d40, 0x89b6, 0xa1e8, 0x552, 0x1, 0x1);
        gbc.writeMem(0x6bb0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8a5e, gbc.sp());
        EXPECT(0x6bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02C1
        gbc.setState(0x4a83, 0x6bc4, 0x1310, 0xba46, 0xec4, 0xc515, 0x0, 0x1);
        gbc.writeMem(0x4a83, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6bc4, gbc.sp());
        EXPECT(0x4a85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02C2
        gbc.setState(0xcc0, 0xac69, 0x4e10, 0x3b26, 0xe8ca, 0x3960, 0x0, 0x0);
        gbc.writeMem(0xcc0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xac69, gbc.sp());
        EXPECT(0xcc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02C3
        gbc.setState(0x1063, 0x70db, 0x1770, 0x33c6, 0x3853, 0x775a, 0x0, 0x1);
        gbc.writeMem(0x1063, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x70db, gbc.sp());
        EXPECT(0x1065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02C4
        gbc.setState(0x49a5, 0xc47a, 0xe590, 0xd533, 0x3003, 0xfb04, 0x0, 0x1);
        gbc.writeMem(0x49a5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc47a, gbc.sp());
        EXPECT(0x49a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02C5
        gbc.setState(0xc84e, 0x2ae0, 0x9b70, 0x8542, 0x4fe5, 0x560b, 0x0, 0x0);
        gbc.writeMem(0xc84e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2ae0, gbc.sp());
        EXPECT(0xc850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc84e));
        EXPECT(0x53, gbc.readMem(0xc84f));
        // CB 53 02C6
        gbc.setState(0x746b, 0x83bd, 0x7220, 0x4f09, 0xa1d1, 0xed36, 0x0, 0x0);
        gbc.writeMem(0x746b, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x83bd, gbc.sp());
        EXPECT(0x746d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02C7
        gbc.setState(0x6f51, 0xb65b, 0x7150, 0x7796, 0x5c22, 0xd5a3, 0x1, 0x1);
        gbc.writeMem(0x6f51, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb65b, gbc.sp());
        EXPECT(0x6f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02C8
        gbc.setState(0x3112, 0x4e82, 0xa720, 0x1676, 0xd1bc, 0x6b3a, 0x1, 0x1);
        gbc.writeMem(0x3112, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4e82, gbc.sp());
        EXPECT(0x3114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02C9
        gbc.setState(0x91ad, 0xf2fd, 0x8970, 0x4fda, 0xd10a, 0x6759, 0x0, 0x1);
        gbc.writeMem(0x91ad, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf2fd, gbc.sp());
        EXPECT(0x91af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ad));
        EXPECT(0x53, gbc.readMem(0x91ae));
        // CB 53 02CB
        gbc.setState(0x9c66, 0x40af, 0xc570, 0xea25, 0x2e02, 0x31a0, 0x1, 0x0);
        gbc.writeMem(0x9c66, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x40af, gbc.sp());
        EXPECT(0x9c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c66));
        EXPECT(0x53, gbc.readMem(0x9c67));
        // CB 53 02CC
        gbc.setState(0x22d, 0x5622, 0x230, 0x7d4f, 0x9ae5, 0xd325, 0x0, 0x0);
        gbc.writeMem(0x22d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5622, gbc.sp());
        EXPECT(0x22f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02CE
        gbc.setState(0x13c3, 0x2dfb, 0x34c0, 0x1444, 0x5cd5, 0x5f6f, 0x0, 0x1);
        gbc.writeMem(0x13c3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2dfb, gbc.sp());
        EXPECT(0x13c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02CF
        gbc.setState(0xbae, 0x8263, 0x48a0, 0x790d, 0xce62, 0x34ae, 0x0, 0x0);
        gbc.writeMem(0xbae, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8263, gbc.sp());
        EXPECT(0xbb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02D0
        gbc.setState(0x9b0, 0x31d5, 0xfc90, 0x9053, 0x8397, 0x5090, 0x0, 0x1);
        gbc.writeMem(0x9b0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x31d5, gbc.sp());
        EXPECT(0x9b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02D1
        gbc.setState(0x58cc, 0x8405, 0x7c00, 0x810f, 0xeb50, 0x589c, 0x0, 0x0);
        gbc.writeMem(0x58cc, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8405, gbc.sp());
        EXPECT(0x58ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02D2
        gbc.setState(0x7341, 0x32f0, 0xba50, 0x580f, 0x5140, 0x2ae9, 0x0, 0x1);
        gbc.writeMem(0x7341, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x32f0, gbc.sp());
        EXPECT(0x7343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02D3
        gbc.setState(0xe040, 0x9c0d, 0x7a80, 0xb530, 0x892f, 0xea42, 0x1, 0x0);
        gbc.writeMem(0xe040, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9c0d, gbc.sp());
        EXPECT(0xe042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe040));
        EXPECT(0x53, gbc.readMem(0xe041));
        // CB 53 02D4
        gbc.setState(0x946b, 0x1d81, 0xc60, 0x8bb7, 0x9c2f, 0x6646, 0x0, 0x1);
        gbc.writeMem(0x946b, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1d81, gbc.sp());
        EXPECT(0x946d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x946b));
        EXPECT(0x53, gbc.readMem(0x946c));
        // CB 53 02D5
        gbc.setState(0x6745, 0x6927, 0x7720, 0xddb7, 0x22d2, 0x6a10, 0x1, 0x0);
        gbc.writeMem(0x6745, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6927, gbc.sp());
        EXPECT(0x6747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02D6
        gbc.setState(0xa856, 0xd5a1, 0x34a0, 0x802d, 0x9840, 0xa0b7, 0x0, 0x1);
        gbc.writeMem(0xa856, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd5a1, gbc.sp());
        EXPECT(0xa858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa856));
        EXPECT(0x53, gbc.readMem(0xa857));
        // CB 53 02D7
        gbc.setState(0xc143, 0x21a6, 0x4980, 0xff2, 0x7b5d, 0x31b3, 0x0, 0x1);
        gbc.writeMem(0xc143, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x21a6, gbc.sp());
        EXPECT(0xc145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc143));
        EXPECT(0x53, gbc.readMem(0xc144));
        // CB 53 02D8
        gbc.setState(0xcddd, 0xc5e4, 0xd30, 0xae9f, 0xfe50, 0x59a3, 0x0, 0x0);
        gbc.writeMem(0xcddd, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc5e4, gbc.sp());
        EXPECT(0xcddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcddd));
        EXPECT(0x53, gbc.readMem(0xcdde));
        // CB 53 02D9
        gbc.setState(0x1f96, 0x90a1, 0x3410, 0xad3d, 0x4be9, 0xca4e, 0x0, 0x0);
        gbc.writeMem(0x1f96, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x90a1, gbc.sp());
        EXPECT(0x1f98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02DA
        gbc.setState(0xe1f5, 0xcc9b, 0xe0a0, 0xf4b3, 0xdf37, 0x191d, 0x0, 0x0);
        gbc.writeMem(0xe1f5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcc9b, gbc.sp());
        EXPECT(0xe1f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f5));
        EXPECT(0x53, gbc.readMem(0xe1f6));
        // CB 53 02DB
        gbc.setState(0x201b, 0xc2cc, 0x3d30, 0x89, 0xc53a, 0xabb3, 0x1, 0x0);
        gbc.writeMem(0x201b, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc2cc, gbc.sp());
        EXPECT(0x201d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02DC
        gbc.setState(0x4eb5, 0x44dd, 0x8780, 0xd99c, 0xb743, 0x1fbf, 0x1, 0x1);
        gbc.writeMem(0x4eb5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x44dd, gbc.sp());
        EXPECT(0x4eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02DD
        gbc.setState(0x34e4, 0xcdd5, 0x7d70, 0xa216, 0xbd, 0x330f, 0x1, 0x0);
        gbc.writeMem(0x34e4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcdd5, gbc.sp());
        EXPECT(0x34e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02DE
        gbc.setState(0x2bef, 0x6bb9, 0xc970, 0xabf2, 0x32fa, 0xab2b, 0x0, 0x0);
        gbc.writeMem(0x2bef, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6bb9, gbc.sp());
        EXPECT(0x2bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02DF
        gbc.setState(0x2e2, 0x49e0, 0xb610, 0x221f, 0xf39, 0xcf00, 0x1, 0x1);
        gbc.writeMem(0x2e2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x49e0, gbc.sp());
        EXPECT(0x2e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02E0
        gbc.setState(0xa81b, 0xbe69, 0xe330, 0x8478, 0x1a82, 0x6a3d, 0x0, 0x1);
        gbc.writeMem(0xa81b, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbe69, gbc.sp());
        EXPECT(0xa81d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa81b));
        EXPECT(0x53, gbc.readMem(0xa81c));
        // CB 53 02E1
        gbc.setState(0x7548, 0xdc4b, 0x7470, 0xbc19, 0xbed2, 0x1ff4, 0x1, 0x1);
        gbc.writeMem(0x7548, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdc4b, gbc.sp());
        EXPECT(0x754a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02E2
        gbc.setState(0x27e9, 0x647, 0x5d80, 0x1bcf, 0x90ea, 0x397a, 0x0, 0x0);
        gbc.writeMem(0x27e9, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x647, gbc.sp());
        EXPECT(0x27eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02E3
        gbc.setState(0xeade, 0x7e81, 0x6600, 0xf94b, 0x2295, 0x25a8, 0x1, 0x0);
        gbc.writeMem(0xeade, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7e81, gbc.sp());
        EXPECT(0xeae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeade));
        EXPECT(0x53, gbc.readMem(0xeadf));
        // CB 53 02E4
        gbc.setState(0x5020, 0xe8a5, 0xa730, 0x74ec, 0x8788, 0x7c5b, 0x1, 0x0);
        gbc.writeMem(0x5020, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe8a5, gbc.sp());
        EXPECT(0x5022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02E5
        gbc.setState(0xa501, 0x8a2b, 0x550, 0x3e38, 0xca72, 0x9a2b, 0x1, 0x0);
        gbc.writeMem(0xa501, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8a2b, gbc.sp());
        EXPECT(0xa503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa501));
        EXPECT(0x53, gbc.readMem(0xa502));
        // CB 53 02E6
        gbc.setState(0x44b3, 0x141b, 0xa110, 0x6e10, 0x279c, 0x5e08, 0x1, 0x1);
        gbc.writeMem(0x44b3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x141b, gbc.sp());
        EXPECT(0x44b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02E7
        gbc.setState(0xae46, 0x6ece, 0x3c0, 0xe492, 0xab, 0xce6d, 0x1, 0x0);
        gbc.writeMem(0xae46, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6ece, gbc.sp());
        EXPECT(0xae48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae46));
        EXPECT(0x53, gbc.readMem(0xae47));
        // CB 53 02E9
        gbc.setState(0x60d6, 0x4380, 0x7de0, 0xb635, 0x3a3, 0x4375, 0x1, 0x0);
        gbc.writeMem(0x60d6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4380, gbc.sp());
        EXPECT(0x60d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02EA
        gbc.setState(0x9676, 0xd634, 0x3730, 0xbcca, 0x127c, 0xe144, 0x0, 0x0);
        gbc.writeMem(0x9676, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd634, gbc.sp());
        EXPECT(0x9678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9676));
        EXPECT(0x53, gbc.readMem(0x9677));
        // CB 53 02EB
        gbc.setState(0x2786, 0x7029, 0x5b20, 0xa659, 0x8896, 0x20f1, 0x1, 0x1);
        gbc.writeMem(0x2786, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7029, gbc.sp());
        EXPECT(0x2788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02EC
        gbc.setState(0x6365, 0xf0f4, 0x8840, 0xa9ee, 0x3b51, 0x589c, 0x0, 0x0);
        gbc.writeMem(0x6365, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf0f4, gbc.sp());
        EXPECT(0x6367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02ED
        gbc.setState(0xa68c, 0xcb41, 0x64e0, 0x67a0, 0x20d5, 0x92cc, 0x0, 0x0);
        gbc.writeMem(0xa68c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcb41, gbc.sp());
        EXPECT(0xa68e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa68c));
        EXPECT(0x53, gbc.readMem(0xa68d));
        // CB 53 02EE
        gbc.setState(0x48ba, 0x93da, 0xadc0, 0x6d2a, 0x48fd, 0x8a4a, 0x0, 0x0);
        gbc.writeMem(0x48ba, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x93da, gbc.sp());
        EXPECT(0x48bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02EF
        gbc.setState(0xd250, 0xae95, 0x5870, 0x33e4, 0xf2d7, 0x2e15, 0x1, 0x1);
        gbc.writeMem(0xd250, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xae95, gbc.sp());
        EXPECT(0xd252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd250));
        EXPECT(0x53, gbc.readMem(0xd251));
        // CB 53 02F0
        gbc.setState(0xdb95, 0x4085, 0x65f0, 0xf49b, 0xff1e, 0x8fed, 0x1, 0x1);
        gbc.writeMem(0xdb95, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4085, gbc.sp());
        EXPECT(0xdb97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb95));
        EXPECT(0x53, gbc.readMem(0xdb96));
        // CB 53 02F1
        gbc.setState(0xaf7, 0x6cbe, 0x6cb0, 0x3efa, 0x930d, 0xca2d, 0x0, 0x1);
        gbc.writeMem(0xaf7, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6cbe, gbc.sp());
        EXPECT(0xaf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02F2
        gbc.setState(0x9832, 0xf2b2, 0x9bc0, 0x1689, 0x25ae, 0x2643, 0x0, 0x0);
        gbc.writeMem(0x9832, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf2b2, gbc.sp());
        EXPECT(0x9834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9832));
        EXPECT(0x53, gbc.readMem(0x9833));
        // CB 53 02F3
        gbc.setState(0x67ac, 0x18a7, 0x3480, 0xa0ca, 0xb3ff, 0x9230, 0x0, 0x0);
        gbc.writeMem(0x67ac, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x18a7, gbc.sp());
        EXPECT(0x67ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02F4
        gbc.setState(0xae8d, 0x6187, 0x3350, 0x51f8, 0x7d64, 0xc791, 0x0, 0x1);
        gbc.writeMem(0xae8d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6187, gbc.sp());
        EXPECT(0xae8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae8d));
        EXPECT(0x53, gbc.readMem(0xae8e));
        // CB 53 02F5
        gbc.setState(0x397c, 0x30fc, 0x60f0, 0x3d65, 0x6aa4, 0x1b6b, 0x0, 0x0);
        gbc.writeMem(0x397c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x30fc, gbc.sp());
        EXPECT(0x397e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02F6
        gbc.setState(0xbc02, 0xc509, 0xe40, 0x9465, 0xf38, 0x3bb4, 0x0, 0x1);
        gbc.writeMem(0xbc02, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc509, gbc.sp());
        EXPECT(0xbc04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc02));
        EXPECT(0x53, gbc.readMem(0xbc03));
        // CB 53 02F7
        gbc.setState(0x3502, 0x49fa, 0xfdf0, 0x76f9, 0x27fa, 0xfbfc, 0x1, 0x0);
        gbc.writeMem(0x3502, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x49fa, gbc.sp());
        EXPECT(0x3504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02F8
        gbc.setState(0x5847, 0xde87, 0x30c0, 0x2212, 0x3b1e, 0xa79f, 0x0, 0x0);
        gbc.writeMem(0x5847, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xde87, gbc.sp());
        EXPECT(0x5849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02F9
        gbc.setState(0x8b47, 0x64c, 0xca40, 0x3706, 0xad35, 0xa111, 0x1, 0x0);
        gbc.writeMem(0x8b47, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x64c, gbc.sp());
        EXPECT(0x8b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b47));
        EXPECT(0x53, gbc.readMem(0x8b48));
        // CB 53 02FA
        gbc.setState(0x95e7, 0x1d82, 0xaef0, 0xbdd, 0xbd11, 0xd7f7, 0x0, 0x1);
        gbc.writeMem(0x95e7, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1d82, gbc.sp());
        EXPECT(0x95e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e7));
        EXPECT(0x53, gbc.readMem(0x95e8));
        // CB 53 02FB
        gbc.setState(0x4810, 0xa62c, 0xe660, 0x83fe, 0xaa41, 0x3d67, 0x1, 0x0);
        gbc.writeMem(0x4810, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa62c, gbc.sp());
        EXPECT(0x4812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 02FC
        gbc.setState(0xbac4, 0xfd50, 0x6d70, 0xa68d, 0x45b1, 0x4640, 0x1, 0x0);
        gbc.writeMem(0xbac4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfd50, gbc.sp());
        EXPECT(0xbac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac4));
        EXPECT(0x53, gbc.readMem(0xbac5));
        // CB 53 02FD
        gbc.setState(0x38ab, 0x1736, 0x4a50, 0x9b11, 0xdec3, 0x1c8b, 0x1, 0x1);
        gbc.writeMem(0x38ab, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1736, gbc.sp());
        EXPECT(0x38ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 02FE
        gbc.setState(0xb0ff, 0x17bc, 0xdf90, 0x81ba, 0x72ec, 0x75fc, 0x0, 0x0);
        gbc.writeMem(0xb0ff, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x17bc, gbc.sp());
        EXPECT(0xb101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ff));
        EXPECT(0x53, gbc.readMem(0xb100));
        // CB 53 02FF
        gbc.setState(0x9406, 0x5d73, 0xb7e0, 0xa008, 0x510e, 0xcf34, 0x1, 0x1);
        gbc.writeMem(0x9406, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5d73, gbc.sp());
        EXPECT(0x9408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9406));
        EXPECT(0x53, gbc.readMem(0x9407));
        // CB 53 0300
        gbc.setState(0x48a2, 0xbacd, 0x2770, 0x6751, 0x9c72, 0x780f, 0x1, 0x1);
        gbc.writeMem(0x48a2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbacd, gbc.sp());
        EXPECT(0x48a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0301
        gbc.setState(0x8ed4, 0x9d88, 0xe8a0, 0xe4ab, 0x3b03, 0x9c65, 0x0, 0x0);
        gbc.writeMem(0x8ed4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9d88, gbc.sp());
        EXPECT(0x8ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed4));
        EXPECT(0x53, gbc.readMem(0x8ed5));
        // CB 53 0302
        gbc.setState(0xc933, 0x8a1c, 0xa0c0, 0x1ee6, 0x8aa4, 0xc46d, 0x0, 0x0);
        gbc.writeMem(0xc933, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8a1c, gbc.sp());
        EXPECT(0xc935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc933));
        EXPECT(0x53, gbc.readMem(0xc934));
        // CB 53 0303
        gbc.setState(0x16c0, 0xc043, 0x7740, 0xaeba, 0x7649, 0x8a55, 0x1, 0x0);
        gbc.writeMem(0x16c0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc043, gbc.sp());
        EXPECT(0x16c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0304
        gbc.setState(0x4d7d, 0xb919, 0x28a0, 0x771f, 0xfa3, 0xd872, 0x1, 0x1);
        gbc.writeMem(0x4d7d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb919, gbc.sp());
        EXPECT(0x4d7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0305
        gbc.setState(0xec12, 0x16e6, 0xd9f0, 0xe0ac, 0x8b08, 0xdcd2, 0x0, 0x1);
        gbc.writeMem(0xec12, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x16e6, gbc.sp());
        EXPECT(0xec14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec12));
        EXPECT(0x53, gbc.readMem(0xec13));
        // CB 53 0306
        gbc.setState(0xe769, 0x379f, 0x5a10, 0xe255, 0xfe1f, 0xfe29, 0x0, 0x1);
        gbc.writeMem(0xe769, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x379f, gbc.sp());
        EXPECT(0xe76b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe769));
        EXPECT(0x53, gbc.readMem(0xe76a));
        // CB 53 0307
        gbc.setState(0x9955, 0x4f94, 0xf50, 0xc8bd, 0x8fff, 0x28fa, 0x1, 0x0);
        gbc.writeMem(0x9955, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4f94, gbc.sp());
        EXPECT(0x9957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9955));
        EXPECT(0x53, gbc.readMem(0x9956));
        // CB 53 0308
        gbc.setState(0x91f8, 0x64d5, 0x6200, 0x9843, 0x9dae, 0xe516, 0x0, 0x0);
        gbc.writeMem(0x91f8, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x64d5, gbc.sp());
        EXPECT(0x91fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f8));
        EXPECT(0x53, gbc.readMem(0x91f9));
        // CB 53 0309
        gbc.setState(0xe7c0, 0x107d, 0x3ca0, 0x1360, 0x59c8, 0xc767, 0x0, 0x0);
        gbc.writeMem(0xe7c0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x107d, gbc.sp());
        EXPECT(0xe7c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7c0));
        EXPECT(0x53, gbc.readMem(0xe7c1));
        // CB 53 030A
        gbc.setState(0x53e1, 0x14e7, 0x160, 0xb485, 0x9df1, 0x4fd6, 0x0, 0x0);
        gbc.writeMem(0x53e1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x14e7, gbc.sp());
        EXPECT(0x53e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 030B
        gbc.setState(0x8f9c, 0xe513, 0xfb20, 0xf6, 0xf2be, 0x9635, 0x0, 0x0);
        gbc.writeMem(0x8f9c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe513, gbc.sp());
        EXPECT(0x8f9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f9c));
        EXPECT(0x53, gbc.readMem(0x8f9d));
        // CB 53 030C
        gbc.setState(0x2b8f, 0x4087, 0xf780, 0xd006, 0xcfe3, 0x8216, 0x0, 0x1);
        gbc.writeMem(0x2b8f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4087, gbc.sp());
        EXPECT(0x2b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 030D
        gbc.setState(0x650d, 0x5f12, 0x5b20, 0x2109, 0xdbb1, 0x7c41, 0x1, 0x1);
        gbc.writeMem(0x650d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5f12, gbc.sp());
        EXPECT(0x650f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 030E
        gbc.setState(0xa26, 0x234b, 0xefb0, 0xaed1, 0x20de, 0x23d6, 0x1, 0x1);
        gbc.writeMem(0xa26, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x234b, gbc.sp());
        EXPECT(0xa28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 030F
        gbc.setState(0x1111, 0x50e3, 0xebb0, 0x3a8c, 0x9996, 0x75e8, 0x0, 0x1);
        gbc.writeMem(0x1111, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x50e3, gbc.sp());
        EXPECT(0x1113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0310
        gbc.setState(0x2600, 0xd4c0, 0x4a70, 0x7397, 0xf85b, 0xa067, 0x1, 0x1);
        gbc.writeMem(0x2600, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd4c0, gbc.sp());
        EXPECT(0x2602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0311
        gbc.setState(0x6299, 0x3d1e, 0xd6c0, 0x2b71, 0xc9a9, 0xbd1d, 0x0, 0x1);
        gbc.writeMem(0x6299, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3d1e, gbc.sp());
        EXPECT(0x629b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0312
        gbc.setState(0xb6e, 0x8230, 0x7190, 0x4a21, 0x4a5c, 0xc490, 0x1, 0x1);
        gbc.writeMem(0xb6e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8230, gbc.sp());
        EXPECT(0xb70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0313
        gbc.setState(0x802b, 0x9175, 0x1930, 0xdf7b, 0x5723, 0x7a5f, 0x0, 0x0);
        gbc.writeMem(0x802b, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9175, gbc.sp());
        EXPECT(0x802d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x802b));
        EXPECT(0x53, gbc.readMem(0x802c));
        // CB 53 0314
        gbc.setState(0x84e3, 0x7e2e, 0xdc20, 0xc833, 0x3619, 0xb88a, 0x1, 0x0);
        gbc.writeMem(0x84e3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7e2e, gbc.sp());
        EXPECT(0x84e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e3));
        EXPECT(0x53, gbc.readMem(0x84e4));
        // CB 53 0315
        gbc.setState(0x756d, 0x7607, 0xdd0, 0xe93d, 0xafe5, 0x6f5a, 0x0, 0x0);
        gbc.writeMem(0x756d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7607, gbc.sp());
        EXPECT(0x756f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0316
        gbc.setState(0x6717, 0xe025, 0xc140, 0xdc11, 0xa636, 0x35f7, 0x1, 0x1);
        gbc.writeMem(0x6717, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe025, gbc.sp());
        EXPECT(0x6719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0317
        gbc.setState(0x1c2, 0x128, 0x9870, 0x7d4b, 0x32e, 0x7a71, 0x0, 0x0);
        gbc.writeMem(0x1c2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x128, gbc.sp());
        EXPECT(0x1c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0318
        gbc.setState(0xd927, 0x144b, 0x38a0, 0xa490, 0xd75c, 0xb6de, 0x1, 0x0);
        gbc.writeMem(0xd927, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x144b, gbc.sp());
        EXPECT(0xd929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd927));
        EXPECT(0x53, gbc.readMem(0xd928));
        // CB 53 0319
        gbc.setState(0x25e9, 0x20f4, 0xd90, 0xfc9e, 0x71ec, 0xe7f6, 0x0, 0x0);
        gbc.writeMem(0x25e9, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x20f4, gbc.sp());
        EXPECT(0x25eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 031A
        gbc.setState(0x3e54, 0x442f, 0xbd30, 0x5e18, 0x6446, 0x9956, 0x1, 0x0);
        gbc.writeMem(0x3e54, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x442f, gbc.sp());
        EXPECT(0x3e56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 031B
        gbc.setState(0x47c5, 0x1299, 0xfe90, 0xcbfd, 0x372, 0xc0d, 0x1, 0x0);
        gbc.writeMem(0x47c5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1299, gbc.sp());
        EXPECT(0x47c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 031C
        gbc.setState(0xe1a1, 0xbe74, 0x3ca0, 0x5416, 0x1f15, 0x1b6c, 0x0, 0x0);
        gbc.writeMem(0xe1a1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbe74, gbc.sp());
        EXPECT(0xe1a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a1));
        EXPECT(0x53, gbc.readMem(0xe1a2));
        // CB 53 031D
        gbc.setState(0x4a00, 0xfa8b, 0xaf50, 0x1c0b, 0x6071, 0x3ac0, 0x0, 0x1);
        gbc.writeMem(0x4a00, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfa8b, gbc.sp());
        EXPECT(0x4a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 031E
        gbc.setState(0x7513, 0xe43d, 0x9c30, 0xb84d, 0x6340, 0x5092, 0x1, 0x0);
        gbc.writeMem(0x7513, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe43d, gbc.sp());
        EXPECT(0x7515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 031F
        gbc.setState(0xaf59, 0x21f6, 0x8d40, 0xa610, 0xdd9c, 0x13cb, 0x1, 0x1);
        gbc.writeMem(0xaf59, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x21f6, gbc.sp());
        EXPECT(0xaf5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf59));
        EXPECT(0x53, gbc.readMem(0xaf5a));
        // CB 53 0320
        gbc.setState(0x4c86, 0x51cb, 0x2370, 0x7c84, 0x1400, 0xfd23, 0x1, 0x1);
        gbc.writeMem(0x4c86, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x51cb, gbc.sp());
        EXPECT(0x4c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0321
        gbc.setState(0x7481, 0x2993, 0xdfc0, 0x1eda, 0x95c0, 0xd914, 0x1, 0x0);
        gbc.writeMem(0x7481, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2993, gbc.sp());
        EXPECT(0x7483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0322
        gbc.setState(0xc397, 0xf122, 0x83c0, 0xedfb, 0x19e7, 0x20b7, 0x1, 0x0);
        gbc.writeMem(0xc397, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf122, gbc.sp());
        EXPECT(0xc399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc397));
        EXPECT(0x53, gbc.readMem(0xc398));
        // CB 53 0323
        gbc.setState(0x251d, 0x4078, 0x1360, 0x376e, 0x2122, 0xfffd, 0x1, 0x1);
        gbc.writeMem(0x251d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4078, gbc.sp());
        EXPECT(0x251f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0324
        gbc.setState(0x4947, 0xb64b, 0x7710, 0x3395, 0xba3a, 0x392e, 0x0, 0x1);
        gbc.writeMem(0x4947, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb64b, gbc.sp());
        EXPECT(0x4949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0325
        gbc.setState(0x8293, 0xb39f, 0xf350, 0x294a, 0x747b, 0x59eb, 0x0, 0x1);
        gbc.writeMem(0x8293, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb39f, gbc.sp());
        EXPECT(0x8295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8293));
        EXPECT(0x53, gbc.readMem(0x8294));
        // CB 53 0326
        gbc.setState(0x361e, 0x7d70, 0xd220, 0x3936, 0x3b8c, 0x9b38, 0x1, 0x0);
        gbc.writeMem(0x361e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7d70, gbc.sp());
        EXPECT(0x3620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0327
        gbc.setState(0x8b67, 0xb1da, 0x65e0, 0x47c7, 0x129c, 0xc79f, 0x0, 0x1);
        gbc.writeMem(0x8b67, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb1da, gbc.sp());
        EXPECT(0x8b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b67));
        EXPECT(0x53, gbc.readMem(0x8b68));
        // CB 53 0328
        gbc.setState(0x7d4d, 0xb71, 0xccc0, 0x3063, 0x10cf, 0x3ba6, 0x1, 0x1);
        gbc.writeMem(0x7d4d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb71, gbc.sp());
        EXPECT(0x7d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0329
        gbc.setState(0x721c, 0xb342, 0x81e0, 0x6526, 0xbb6f, 0x8ec1, 0x0, 0x0);
        gbc.writeMem(0x721c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb342, gbc.sp());
        EXPECT(0x721e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 032A
        gbc.setState(0xe911, 0xa203, 0x59b0, 0x7103, 0xa0b2, 0x9a90, 0x0, 0x1);
        gbc.writeMem(0xe911, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa203, gbc.sp());
        EXPECT(0xe913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe911));
        EXPECT(0x53, gbc.readMem(0xe912));
        // CB 53 032B
        gbc.setState(0xa0ef, 0xde0f, 0xef70, 0xa756, 0x5f9d, 0x43e6, 0x1, 0x0);
        gbc.writeMem(0xa0ef, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xde0f, gbc.sp());
        EXPECT(0xa0f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ef));
        EXPECT(0x53, gbc.readMem(0xa0f0));
        // CB 53 032C
        gbc.setState(0xdfb6, 0x6aa, 0xe3d0, 0xb50a, 0x5896, 0xa92c, 0x1, 0x0);
        gbc.writeMem(0xdfb6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6aa, gbc.sp());
        EXPECT(0xdfb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb6));
        EXPECT(0x53, gbc.readMem(0xdfb7));
        // CB 53 032D
        gbc.setState(0x7c03, 0x7082, 0x2940, 0x23f3, 0xc2d9, 0x20f3, 0x1, 0x0);
        gbc.writeMem(0x7c03, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7082, gbc.sp());
        EXPECT(0x7c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 032E
        gbc.setState(0xa12, 0x9125, 0x73c0, 0xc17e, 0x677a, 0x53ed, 0x0, 0x1);
        gbc.writeMem(0xa12, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9125, gbc.sp());
        EXPECT(0xa14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 032F
        gbc.setState(0x4607, 0x932c, 0x8b10, 0x41c0, 0xd108, 0xaaa3, 0x1, 0x1);
        gbc.writeMem(0x4607, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x932c, gbc.sp());
        EXPECT(0x4609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0330
        gbc.setState(0x67b4, 0x2315, 0x7880, 0x7ec0, 0xaa4f, 0x1cdd, 0x1, 0x0);
        gbc.writeMem(0x67b4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2315, gbc.sp());
        EXPECT(0x67b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0331
        gbc.setState(0xd0aa, 0xc0aa, 0x8f20, 0x1e49, 0x889e, 0xaf06, 0x0, 0x1);
        gbc.writeMem(0xd0aa, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc0aa, gbc.sp());
        EXPECT(0xd0ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0aa));
        EXPECT(0x53, gbc.readMem(0xd0ab));
        // CB 53 0332
        gbc.setState(0x36a1, 0xabfa, 0xd400, 0x6c64, 0x2ae, 0x39fc, 0x1, 0x0);
        gbc.writeMem(0x36a1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xabfa, gbc.sp());
        EXPECT(0x36a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0333
        gbc.setState(0x5d7d, 0x77a8, 0x5140, 0xdf65, 0x2475, 0x5600, 0x0, 0x0);
        gbc.writeMem(0x5d7d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x77a8, gbc.sp());
        EXPECT(0x5d7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0335
        gbc.setState(0x483, 0x5f35, 0xa5e0, 0x7c0f, 0x874d, 0xd11e, 0x0, 0x1);
        gbc.writeMem(0x483, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5f35, gbc.sp());
        EXPECT(0x485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0336
        gbc.setState(0x46de, 0xf18c, 0xbc80, 0x6be6, 0x28f0, 0xe48, 0x1, 0x1);
        gbc.writeMem(0x46de, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf18c, gbc.sp());
        EXPECT(0x46e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0338
        gbc.setState(0x7de1, 0xb1de, 0xe850, 0x52ed, 0x69b6, 0x708c, 0x1, 0x1);
        gbc.writeMem(0x7de1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb1de, gbc.sp());
        EXPECT(0x7de3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0339
        gbc.setState(0x7ddf, 0xb0fd, 0x7ef0, 0x4543, 0xfe74, 0xeb35, 0x1, 0x1);
        gbc.writeMem(0x7ddf, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb0fd, gbc.sp());
        EXPECT(0x7de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 033A
        gbc.setState(0x84f0, 0x800c, 0xc0d0, 0x84e4, 0xc611, 0x3c91, 0x1, 0x1);
        gbc.writeMem(0x84f0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x800c, gbc.sp());
        EXPECT(0x84f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f0));
        EXPECT(0x53, gbc.readMem(0x84f1));
        // CB 53 033B
        gbc.setState(0x467c, 0x13b9, 0x4ef0, 0x312e, 0xa78e, 0xd69c, 0x0, 0x0);
        gbc.writeMem(0x467c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x13b9, gbc.sp());
        EXPECT(0x467e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 033C
        gbc.setState(0x3a65, 0xa282, 0x30c0, 0xeb89, 0xaf4c, 0x4782, 0x0, 0x0);
        gbc.writeMem(0x3a65, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa282, gbc.sp());
        EXPECT(0x3a67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 033D
        gbc.setState(0x9023, 0xfce1, 0x2a40, 0xa245, 0x63dd, 0xed8d, 0x1, 0x0);
        gbc.writeMem(0x9023, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xfce1, gbc.sp());
        EXPECT(0x9025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9023));
        EXPECT(0x53, gbc.readMem(0x9024));
        // CB 53 033E
        gbc.setState(0x5497, 0x5833, 0xe180, 0x8a5b, 0x5ae7, 0x65eb, 0x0, 0x0);
        gbc.writeMem(0x5497, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5833, gbc.sp());
        EXPECT(0x5499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 033F
        gbc.setState(0x63ab, 0x22fe, 0x43f0, 0x1bc8, 0x5015, 0x28d6, 0x0, 0x1);
        gbc.writeMem(0x63ab, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x22fe, gbc.sp());
        EXPECT(0x63ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0340
        gbc.setState(0x946, 0x96d7, 0xbc20, 0x308, 0x6d29, 0x1ffc, 0x1, 0x0);
        gbc.writeMem(0x946, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x96d7, gbc.sp());
        EXPECT(0x948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0341
        gbc.setState(0xaad1, 0x1f68, 0xde50, 0x7712, 0xfaeb, 0x3bf1, 0x0, 0x1);
        gbc.writeMem(0xaad1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1f68, gbc.sp());
        EXPECT(0xaad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad1));
        EXPECT(0x53, gbc.readMem(0xaad2));
        // CB 53 0342
        gbc.setState(0x8f92, 0xe997, 0x6420, 0xc85, 0x4c3b, 0x74d5, 0x0, 0x0);
        gbc.writeMem(0x8f92, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe997, gbc.sp());
        EXPECT(0x8f94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f92));
        EXPECT(0x53, gbc.readMem(0x8f93));
        // CB 53 0343
        gbc.setState(0xa82c, 0x6a36, 0x2c00, 0x357c, 0x34f7, 0x2f5, 0x1, 0x1);
        gbc.writeMem(0xa82c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6a36, gbc.sp());
        EXPECT(0xa82e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa82c));
        EXPECT(0x53, gbc.readMem(0xa82d));
        // CB 53 0344
        gbc.setState(0x97d8, 0xcfbb, 0x60f0, 0xa210, 0xb146, 0x1664, 0x0, 0x1);
        gbc.writeMem(0x97d8, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcfbb, gbc.sp());
        EXPECT(0x97da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d8));
        EXPECT(0x53, gbc.readMem(0x97d9));
        // CB 53 0346
        gbc.setState(0x9105, 0x6f56, 0xaee0, 0x984d, 0xcf7d, 0x2653, 0x0, 0x0);
        gbc.writeMem(0x9105, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6f56, gbc.sp());
        EXPECT(0x9107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9105));
        EXPECT(0x53, gbc.readMem(0x9106));
        // CB 53 0347
        gbc.setState(0x2b6c, 0x77a2, 0xe030, 0x8604, 0xe3b, 0xa8e7, 0x1, 0x1);
        gbc.writeMem(0x2b6c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x77a2, gbc.sp());
        EXPECT(0x2b6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0348
        gbc.setState(0xe05, 0xcc23, 0x2240, 0xd517, 0xff20, 0x7567, 0x1, 0x0);
        gbc.writeMem(0xe05, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xcc23, gbc.sp());
        EXPECT(0xe07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0349
        gbc.setState(0x255d, 0x6e14, 0x6540, 0xb577, 0x686f, 0xfde1, 0x0, 0x1);
        gbc.writeMem(0x255d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6e14, gbc.sp());
        EXPECT(0x255f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 034A
        gbc.setState(0xd1d2, 0x8675, 0x1c00, 0xbcdc, 0x498b, 0x2485, 0x1, 0x1);
        gbc.writeMem(0xd1d2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8675, gbc.sp());
        EXPECT(0xd1d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d2));
        EXPECT(0x53, gbc.readMem(0xd1d3));
        // CB 53 034B
        gbc.setState(0x6389, 0x2c6c, 0x23a0, 0xfac8, 0xc3a7, 0xe090, 0x1, 0x1);
        gbc.writeMem(0x6389, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2c6c, gbc.sp());
        EXPECT(0x638b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 034C
        gbc.setState(0x93b2, 0xb8bc, 0x7f40, 0x5b15, 0x5f48, 0x53a7, 0x0, 0x0);
        gbc.writeMem(0x93b2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb8bc, gbc.sp());
        EXPECT(0x93b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93b2));
        EXPECT(0x53, gbc.readMem(0x93b3));
        // CB 53 034D
        gbc.setState(0x53e1, 0xd0b8, 0xbe00, 0xbecd, 0xc0e3, 0xf75e, 0x0, 0x0);
        gbc.writeMem(0x53e1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd0b8, gbc.sp());
        EXPECT(0x53e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 034E
        gbc.setState(0x42a1, 0xccde, 0x4500, 0xfd8d, 0x6453, 0xf1e6, 0x1, 0x1);
        gbc.writeMem(0x42a1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xccde, gbc.sp());
        EXPECT(0x42a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 034F
        gbc.setState(0xd36f, 0x859b, 0x1b80, 0x2a1e, 0xed1e, 0x3f9b, 0x0, 0x1);
        gbc.writeMem(0xd36f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x859b, gbc.sp());
        EXPECT(0xd371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd36f));
        EXPECT(0x53, gbc.readMem(0xd370));
        // CB 53 0350
        gbc.setState(0x82ca, 0x2261, 0x51c0, 0xa610, 0xb6e4, 0xedac, 0x0, 0x1);
        gbc.writeMem(0x82ca, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2261, gbc.sp());
        EXPECT(0x82cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ca));
        EXPECT(0x53, gbc.readMem(0x82cb));
        // CB 53 0351
        gbc.setState(0xc245, 0xafdc, 0xeec0, 0x2cf, 0x1efe, 0xec92, 0x1, 0x0);
        gbc.writeMem(0xc245, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xafdc, gbc.sp());
        EXPECT(0xc247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc245));
        EXPECT(0x53, gbc.readMem(0xc246));
        // CB 53 0352
        gbc.setState(0x8214, 0x8934, 0xf5f0, 0xb7c9, 0xf689, 0xc41d, 0x0, 0x1);
        gbc.writeMem(0x8214, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8934, gbc.sp());
        EXPECT(0x8216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8214));
        EXPECT(0x53, gbc.readMem(0x8215));
        // CB 53 0353
        gbc.setState(0xb4ed, 0xa813, 0x69b0, 0x203c, 0x11a2, 0x40b3, 0x0, 0x0);
        gbc.writeMem(0xb4ed, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa813, gbc.sp());
        EXPECT(0xb4ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ed));
        EXPECT(0x53, gbc.readMem(0xb4ee));
        // CB 53 0354
        gbc.setState(0x2a05, 0xe991, 0xd510, 0xb58f, 0x3aa1, 0x4f2e, 0x1, 0x1);
        gbc.writeMem(0x2a05, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe991, gbc.sp());
        EXPECT(0x2a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0355
        gbc.setState(0x21d5, 0x66f3, 0x3a10, 0xd474, 0x5876, 0xcb73, 0x0, 0x1);
        gbc.writeMem(0x21d5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x66f3, gbc.sp());
        EXPECT(0x21d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0356
        gbc.setState(0x2bac, 0x2766, 0x7c80, 0xabd7, 0x18c6, 0xabef, 0x1, 0x1);
        gbc.writeMem(0x2bac, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2766, gbc.sp());
        EXPECT(0x2bae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0357
        gbc.setState(0xadd3, 0xbd, 0xf3b0, 0xe926, 0x49ee, 0x5e02, 0x0, 0x0);
        gbc.writeMem(0xadd3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbd, gbc.sp());
        EXPECT(0xadd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadd3));
        EXPECT(0x53, gbc.readMem(0xadd4));
        // CB 53 0358
        gbc.setState(0x5e0, 0x5fb8, 0xf1c0, 0x9b75, 0xf474, 0x8101, 0x1, 0x1);
        gbc.writeMem(0x5e0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5fb8, gbc.sp());
        EXPECT(0x5e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 035A
        gbc.setState(0x2e08, 0xb9e0, 0x3610, 0xc0eb, 0x6288, 0xd3f4, 0x1, 0x1);
        gbc.writeMem(0x2e08, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb9e0, gbc.sp());
        EXPECT(0x2e0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 035B
        gbc.setState(0xdd50, 0x51ad, 0xad80, 0x5213, 0x4d4e, 0x55aa, 0x0, 0x0);
        gbc.writeMem(0xdd50, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x51ad, gbc.sp());
        EXPECT(0xdd52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd50));
        EXPECT(0x53, gbc.readMem(0xdd51));
        // CB 53 035C
        gbc.setState(0xb66a, 0xcd34, 0x5830, 0x8b9d, 0x9e67, 0x21fe, 0x0, 0x1);
        gbc.writeMem(0xb66a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xcd34, gbc.sp());
        EXPECT(0xb66c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb66a));
        EXPECT(0x53, gbc.readMem(0xb66b));
        // CB 53 035D
        gbc.setState(0xc2a5, 0xb932, 0x2850, 0x9c22, 0xfd93, 0x8267, 0x0, 0x1);
        gbc.writeMem(0xc2a5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb932, gbc.sp());
        EXPECT(0xc2a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a5));
        EXPECT(0x53, gbc.readMem(0xc2a6));
        // CB 53 035E
        gbc.setState(0xa466, 0x65c, 0xd090, 0x4a27, 0x5145, 0x2be8, 0x0, 0x1);
        gbc.writeMem(0xa466, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x65c, gbc.sp());
        EXPECT(0xa468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa466));
        EXPECT(0x53, gbc.readMem(0xa467));
        // CB 53 035F
        gbc.setState(0x6e0d, 0x7459, 0xba40, 0xd69a, 0x5c2b, 0x217f, 0x0, 0x0);
        gbc.writeMem(0x6e0d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7459, gbc.sp());
        EXPECT(0x6e0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0360
        gbc.setState(0xd640, 0x72c7, 0x6410, 0x6826, 0xcc37, 0xc8bb, 0x1, 0x0);
        gbc.writeMem(0xd640, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x72c7, gbc.sp());
        EXPECT(0xd642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd640));
        EXPECT(0x53, gbc.readMem(0xd641));
        // CB 53 0361
        gbc.setState(0x9b2e, 0x6944, 0x9920, 0xc183, 0xcbbf, 0x8dca, 0x1, 0x1);
        gbc.writeMem(0x9b2e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6944, gbc.sp());
        EXPECT(0x9b30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b2e));
        EXPECT(0x53, gbc.readMem(0x9b2f));
        // CB 53 0362
        gbc.setState(0x32c, 0xba56, 0xf8f0, 0x7aa1, 0xc676, 0xa1f5, 0x0, 0x1);
        gbc.writeMem(0x32c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xba56, gbc.sp());
        EXPECT(0x32e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0364
        gbc.setState(0x245d, 0x1937, 0x750, 0x7c6d, 0x886d, 0x7c49, 0x0, 0x0);
        gbc.writeMem(0x245d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1937, gbc.sp());
        EXPECT(0x245f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0365
        gbc.setState(0x594a, 0xa914, 0xdbb0, 0xbfaa, 0x6351, 0x6a59, 0x0, 0x0);
        gbc.writeMem(0x594a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa914, gbc.sp());
        EXPECT(0x594c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0366
        gbc.setState(0x7d90, 0xc5dc, 0xf5b0, 0x5318, 0x44e0, 0xc4e6, 0x0, 0x0);
        gbc.writeMem(0x7d90, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc5dc, gbc.sp());
        EXPECT(0x7d92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0367
        gbc.setState(0xafa2, 0x5fb4, 0x5980, 0x1e27, 0x4c58, 0xb921, 0x1, 0x1);
        gbc.writeMem(0xafa2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5fb4, gbc.sp());
        EXPECT(0xafa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa2));
        EXPECT(0x53, gbc.readMem(0xafa3));
        // CB 53 0368
        gbc.setState(0x3808, 0x136d, 0x3d00, 0x9ea4, 0xe, 0x3aeb, 0x1, 0x0);
        gbc.writeMem(0x3808, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x136d, gbc.sp());
        EXPECT(0x380a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0369
        gbc.setState(0x6284, 0x7dbc, 0xe870, 0x67b2, 0x2770, 0x7e2, 0x0, 0x0);
        gbc.writeMem(0x6284, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7dbc, gbc.sp());
        EXPECT(0x6286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 036A
        gbc.setState(0xa89f, 0x153c, 0x71b0, 0xf33a, 0xbac2, 0x3509, 0x1, 0x1);
        gbc.writeMem(0xa89f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x153c, gbc.sp());
        EXPECT(0xa8a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa89f));
        EXPECT(0x53, gbc.readMem(0xa8a0));
        // CB 53 036B
        gbc.setState(0xd8fe, 0x6a5, 0x5640, 0x5885, 0x78e1, 0x2b85, 0x1, 0x0);
        gbc.writeMem(0xd8fe, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6a5, gbc.sp());
        EXPECT(0xd900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8fe));
        EXPECT(0x53, gbc.readMem(0xd8ff));
        // CB 53 036C
        gbc.setState(0xa6f8, 0x2853, 0x4be0, 0x21f, 0x6f74, 0x61f6, 0x1, 0x1);
        gbc.writeMem(0xa6f8, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2853, gbc.sp());
        EXPECT(0xa6fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f8));
        EXPECT(0x53, gbc.readMem(0xa6f9));
        // CB 53 036D
        gbc.setState(0x13a9, 0x3435, 0xd30, 0xf807, 0x5c6b, 0x9811, 0x1, 0x1);
        gbc.writeMem(0x13a9, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3435, gbc.sp());
        EXPECT(0x13ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 036E
        gbc.setState(0x12a6, 0x613, 0x890, 0x6af5, 0xdf34, 0xf275, 0x0, 0x1);
        gbc.writeMem(0x12a6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x613, gbc.sp());
        EXPECT(0x12a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 036F
        gbc.setState(0xa001, 0x25ff, 0x47b0, 0x9f62, 0x9367, 0x10e0, 0x0, 0x0);
        gbc.writeMem(0xa001, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x25ff, gbc.sp());
        EXPECT(0xa003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa001));
        EXPECT(0x53, gbc.readMem(0xa002));
        // CB 53 0370
        gbc.setState(0x7751, 0x23c1, 0xab10, 0xa4b4, 0xc1bc, 0xe8b, 0x0, 0x0);
        gbc.writeMem(0x7751, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x23c1, gbc.sp());
        EXPECT(0x7753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0372
        gbc.setState(0x7440, 0xd5c1, 0x45e0, 0x5c57, 0xfdac, 0x45e5, 0x0, 0x0);
        gbc.writeMem(0x7440, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd5c1, gbc.sp());
        EXPECT(0x7442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0373
        gbc.setState(0x643d, 0xdc8, 0x86b0, 0x1501, 0x60df, 0xb492, 0x0, 0x1);
        gbc.writeMem(0x643d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xdc8, gbc.sp());
        EXPECT(0x643f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0374
        gbc.setState(0x33d7, 0xf4d1, 0xfb90, 0xfbc7, 0xa4b7, 0x7794, 0x0, 0x1);
        gbc.writeMem(0x33d7, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf4d1, gbc.sp());
        EXPECT(0x33d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0375
        gbc.setState(0x1678, 0x2d5b, 0x15b0, 0x663e, 0xcef7, 0x347, 0x1, 0x0);
        gbc.writeMem(0x1678, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2d5b, gbc.sp());
        EXPECT(0x167a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0376
        gbc.setState(0x4902, 0x2572, 0xe090, 0x5dca, 0x4bcc, 0xe2a8, 0x0, 0x0);
        gbc.writeMem(0x4902, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2572, gbc.sp());
        EXPECT(0x4904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0377
        gbc.setState(0xc7e3, 0x2a30, 0x3d60, 0x7fa8, 0xa93c, 0x5df9, 0x0, 0x0);
        gbc.writeMem(0xc7e3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2a30, gbc.sp());
        EXPECT(0xc7e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7e3));
        EXPECT(0x53, gbc.readMem(0xc7e4));
        // CB 53 0378
        gbc.setState(0xb873, 0xc8dc, 0x8150, 0xa255, 0x8967, 0x30ca, 0x1, 0x1);
        gbc.writeMem(0xb873, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc8dc, gbc.sp());
        EXPECT(0xb875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb873));
        EXPECT(0x53, gbc.readMem(0xb874));
        // CB 53 037A
        gbc.setState(0x472e, 0x55ab, 0xa7b0, 0xe5f9, 0x6e8f, 0xdfe9, 0x1, 0x1);
        gbc.writeMem(0x472e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x55ab, gbc.sp());
        EXPECT(0x4730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 037B
        gbc.setState(0x354, 0x9c3e, 0x4c30, 0x404d, 0x64d4, 0xfc1a, 0x0, 0x1);
        gbc.writeMem(0x354, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9c3e, gbc.sp());
        EXPECT(0x356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 037C
        gbc.setState(0x35c5, 0x6242, 0xb200, 0x6133, 0x6c9f, 0xd5af, 0x1, 0x1);
        gbc.writeMem(0x35c5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6242, gbc.sp());
        EXPECT(0x35c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 037D
        gbc.setState(0x91a5, 0xd577, 0x3a50, 0xfe05, 0x80ca, 0x9de7, 0x1, 0x1);
        gbc.writeMem(0x91a5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd577, gbc.sp());
        EXPECT(0x91a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91a5));
        EXPECT(0x53, gbc.readMem(0x91a6));
        // CB 53 037E
        gbc.setState(0x3ef0, 0x35e0, 0x6e70, 0x5e5b, 0x42d4, 0x275d, 0x0, 0x1);
        gbc.writeMem(0x3ef0, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x35e0, gbc.sp());
        EXPECT(0x3ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 037F
        gbc.setState(0x1223, 0x58ee, 0xf620, 0xaad, 0xac68, 0x7f28, 0x1, 0x0);
        gbc.writeMem(0x1223, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x58ee, gbc.sp());
        EXPECT(0x1225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0380
        gbc.setState(0xec20, 0x4afb, 0x5430, 0x420f, 0xe694, 0x685b, 0x1, 0x1);
        gbc.writeMem(0xec20, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4afb, gbc.sp());
        EXPECT(0xec22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec20));
        EXPECT(0x53, gbc.readMem(0xec21));
        // CB 53 0381
        gbc.setState(0xbad5, 0x99ec, 0x5ca0, 0x5d69, 0x8b16, 0xc691, 0x1, 0x0);
        gbc.writeMem(0xbad5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x99ec, gbc.sp());
        EXPECT(0xbad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad5));
        EXPECT(0x53, gbc.readMem(0xbad6));
        // CB 53 0382
        gbc.setState(0x2468, 0xdb6c, 0x9240, 0x2df5, 0x5bb8, 0x6fde, 0x0, 0x1);
        gbc.writeMem(0x2468, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xdb6c, gbc.sp());
        EXPECT(0x246a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0383
        gbc.setState(0x1644, 0xd9c2, 0x5bd0, 0x2ca9, 0x1335, 0xd482, 0x1, 0x1);
        gbc.writeMem(0x1644, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd9c2, gbc.sp());
        EXPECT(0x1646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0384
        gbc.setState(0xefc3, 0x5067, 0xf850, 0x9aa2, 0x44f0, 0x2872, 0x1, 0x1);
        gbc.writeMem(0xefc3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5067, gbc.sp());
        EXPECT(0xefc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc3));
        EXPECT(0x53, gbc.readMem(0xefc4));
        // CB 53 0385
        gbc.setState(0xa886, 0x120b, 0xb20, 0x856b, 0xf674, 0x51b3, 0x1, 0x0);
        gbc.writeMem(0xa886, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x120b, gbc.sp());
        EXPECT(0xa888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa886));
        EXPECT(0x53, gbc.readMem(0xa887));
        // CB 53 0386
        gbc.setState(0x4e1d, 0x7404, 0x2a60, 0x2056, 0x4b0f, 0x7b7f, 0x0, 0x1);
        gbc.writeMem(0x4e1d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7404, gbc.sp());
        EXPECT(0x4e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0387
        gbc.setState(0x8382, 0xfee5, 0x7fe0, 0x66ea, 0x6233, 0xf60c, 0x1, 0x1);
        gbc.writeMem(0x8382, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfee5, gbc.sp());
        EXPECT(0x8384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8382));
        EXPECT(0x53, gbc.readMem(0x8383));
        // CB 53 0388
        gbc.setState(0x33d2, 0x9dbf, 0x280, 0xb063, 0x20ee, 0xeae4, 0x0, 0x0);
        gbc.writeMem(0x33d2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9dbf, gbc.sp());
        EXPECT(0x33d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0389
        gbc.setState(0x8534, 0x7f0c, 0x6540, 0x3674, 0xde59, 0x1965, 0x1, 0x1);
        gbc.writeMem(0x8534, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7f0c, gbc.sp());
        EXPECT(0x8536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8534));
        EXPECT(0x53, gbc.readMem(0x8535));
        // CB 53 038A
        gbc.setState(0x8f27, 0x29c, 0x6910, 0xb44, 0x2a24, 0x67f8, 0x0, 0x0);
        gbc.writeMem(0x8f27, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x29c, gbc.sp());
        EXPECT(0x8f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f27));
        EXPECT(0x53, gbc.readMem(0x8f28));
        // CB 53 038B
        gbc.setState(0x28ae, 0x1609, 0xa010, 0x583e, 0x82e4, 0x97de, 0x1, 0x1);
        gbc.writeMem(0x28ae, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1609, gbc.sp());
        EXPECT(0x28b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 038C
        gbc.setState(0xaed3, 0xd06b, 0x2c30, 0x233, 0xa1ad, 0x1678, 0x1, 0x1);
        gbc.writeMem(0xaed3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd06b, gbc.sp());
        EXPECT(0xaed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed3));
        EXPECT(0x53, gbc.readMem(0xaed4));
        // CB 53 038D
        gbc.setState(0xd4f3, 0xe8d3, 0xe3d0, 0xd46a, 0xe60c, 0xef9f, 0x1, 0x1);
        gbc.writeMem(0xd4f3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe8d3, gbc.sp());
        EXPECT(0xd4f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f3));
        EXPECT(0x53, gbc.readMem(0xd4f4));
        // CB 53 038E
        gbc.setState(0xcb56, 0x8ca1, 0x9fa0, 0xc86f, 0x21d0, 0x468a, 0x1, 0x1);
        gbc.writeMem(0xcb56, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8ca1, gbc.sp());
        EXPECT(0xcb58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb56));
        EXPECT(0x53, gbc.readMem(0xcb57));
        // CB 53 038F
        gbc.setState(0x4c21, 0xd2d, 0x7fc0, 0xafc1, 0x5b03, 0xd83b, 0x0, 0x0);
        gbc.writeMem(0x4c21, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd2d, gbc.sp());
        EXPECT(0x4c23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 0390
        gbc.setState(0x97c1, 0x2814, 0xd6c0, 0x813e, 0xe40f, 0x1b3a, 0x0, 0x1);
        gbc.writeMem(0x97c1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2814, gbc.sp());
        EXPECT(0x97c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97c1));
        EXPECT(0x53, gbc.readMem(0x97c2));
        // CB 53 0391
        gbc.setState(0xcf5c, 0xdb94, 0x5960, 0x6099, 0x7af9, 0x8c3c, 0x0, 0x1);
        gbc.writeMem(0xcf5c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdb94, gbc.sp());
        EXPECT(0xcf5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf5c));
        EXPECT(0x53, gbc.readMem(0xcf5d));
        // CB 53 0392
        gbc.setState(0x5f94, 0xebfa, 0x7310, 0x39c1, 0x4cea, 0xb05c, 0x1, 0x0);
        gbc.writeMem(0x5f94, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xebfa, gbc.sp());
        EXPECT(0x5f96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 0393
        gbc.setState(0x892f, 0x236d, 0xb0b0, 0xbb71, 0x9b66, 0x48a2, 0x1, 0x0);
        gbc.writeMem(0x892f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x236d, gbc.sp());
        EXPECT(0x8931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x892f));
        EXPECT(0x53, gbc.readMem(0x8930));
        // CB 53 0394
        gbc.setState(0xe447, 0xee84, 0xb370, 0x318d, 0xa539, 0xbb8b, 0x1, 0x1);
        gbc.writeMem(0xe447, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xee84, gbc.sp());
        EXPECT(0xe449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe447));
        EXPECT(0x53, gbc.readMem(0xe448));
        // CB 53 0397
        gbc.setState(0xdb19, 0x8bfd, 0x8d0, 0xb8fd, 0xd668, 0xe8a, 0x1, 0x0);
        gbc.writeMem(0xdb19, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8bfd, gbc.sp());
        EXPECT(0xdb1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb19));
        EXPECT(0x53, gbc.readMem(0xdb1a));
        // CB 53 0398
        gbc.setState(0xef3e, 0xadf6, 0x5df0, 0x1eec, 0x5ecc, 0x52e7, 0x1, 0x1);
        gbc.writeMem(0xef3e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xadf6, gbc.sp());
        EXPECT(0xef40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef3e));
        EXPECT(0x53, gbc.readMem(0xef3f));
        // CB 53 0399
        gbc.setState(0xb065, 0x7f82, 0xf9f0, 0x2c1f, 0xf78f, 0xcbc9, 0x1, 0x0);
        gbc.writeMem(0xb065, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7f82, gbc.sp());
        EXPECT(0xb067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb065));
        EXPECT(0x53, gbc.readMem(0xb066));
        // CB 53 039A
        gbc.setState(0xbdcf, 0xb088, 0x6ec0, 0x9e1a, 0xa709, 0x9c95, 0x1, 0x0);
        gbc.writeMem(0xbdcf, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb088, gbc.sp());
        EXPECT(0xbdd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdcf));
        EXPECT(0x53, gbc.readMem(0xbdd0));
        // CB 53 039B
        gbc.setState(0x2205, 0x9f2, 0x93c0, 0xaaf9, 0x612d, 0x4b64, 0x0, 0x1);
        gbc.writeMem(0x2205, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9f2, gbc.sp());
        EXPECT(0x2207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 039C
        gbc.setState(0x8001, 0xcec5, 0xdae0, 0xe723, 0xc30d, 0x2fe2, 0x0, 0x1);
        gbc.writeMem(0x8001, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xcec5, gbc.sp());
        EXPECT(0x8003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8001));
        EXPECT(0x53, gbc.readMem(0x8002));
        // CB 53 039D
        gbc.setState(0xedae, 0x39c1, 0xb10, 0xbb94, 0x86e8, 0x73f1, 0x0, 0x1);
        gbc.writeMem(0xedae, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x39c1, gbc.sp());
        EXPECT(0xedb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedae));
        EXPECT(0x53, gbc.readMem(0xedaf));
        // CB 53 039E
        gbc.setState(0xeab9, 0x2b54, 0x3560, 0x6501, 0x68a1, 0xc045, 0x0, 0x1);
        gbc.writeMem(0xeab9, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2b54, gbc.sp());
        EXPECT(0xeabb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeab9));
        EXPECT(0x53, gbc.readMem(0xeaba));
        // CB 53 039F
        gbc.setState(0x9e00, 0x559d, 0xbc0, 0xb4e2, 0x267e, 0x299d, 0x0, 0x0);
        gbc.writeMem(0x9e00, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x559d, gbc.sp());
        EXPECT(0x9e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e00));
        EXPECT(0x53, gbc.readMem(0x9e01));
        // CB 53 03A0
        gbc.setState(0xc602, 0x56f4, 0x6b00, 0xe677, 0x5c1a, 0x9389, 0x1, 0x0);
        gbc.writeMem(0xc602, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x56f4, gbc.sp());
        EXPECT(0xc604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc602));
        EXPECT(0x53, gbc.readMem(0xc603));
        // CB 53 03A1
        gbc.setState(0x1e59, 0x452, 0x440, 0xf75e, 0x9d4e, 0x372c, 0x0, 0x1);
        gbc.writeMem(0x1e59, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x452, gbc.sp());
        EXPECT(0x1e5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 03A2
        gbc.setState(0xce06, 0xbd82, 0x3f40, 0xff01, 0xde86, 0x5e72, 0x1, 0x0);
        gbc.writeMem(0xce06, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbd82, gbc.sp());
        EXPECT(0xce08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce06));
        EXPECT(0x53, gbc.readMem(0xce07));
        // CB 53 03A3
        gbc.setState(0x59db, 0x4475, 0xced0, 0xba56, 0xe2c9, 0x659c, 0x1, 0x1);
        gbc.writeMem(0x59db, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4475, gbc.sp());
        EXPECT(0x59dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 03A4
        gbc.setState(0x7056, 0xe017, 0x9430, 0x3540, 0x9156, 0x6b2b, 0x1, 0x1);
        gbc.writeMem(0x7056, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe017, gbc.sp());
        EXPECT(0x7058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 03A5
        gbc.setState(0x6c44, 0x699b, 0xea40, 0xeba, 0xb863, 0x23bd, 0x1, 0x0);
        gbc.writeMem(0x6c44, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x699b, gbc.sp());
        EXPECT(0x6c46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 03A6
        gbc.setState(0x579f, 0xcf03, 0x7e80, 0xee65, 0x5413, 0x7d5b, 0x0, 0x1);
        gbc.writeMem(0x579f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xcf03, gbc.sp());
        EXPECT(0x57a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 03A7
        gbc.setState(0x9b1f, 0xbe3f, 0xedf0, 0xba63, 0x5562, 0x5e84, 0x1, 0x0);
        gbc.writeMem(0x9b1f, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbe3f, gbc.sp());
        EXPECT(0x9b21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b1f));
        EXPECT(0x53, gbc.readMem(0x9b20));
        // CB 53 03A8
        gbc.setState(0x4ef1, 0xa7c, 0x2c20, 0xf2ac, 0x4e2b, 0xe000, 0x0, 0x0);
        gbc.writeMem(0x4ef1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa7c, gbc.sp());
        EXPECT(0x4ef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 03AA
        gbc.setState(0x80c5, 0x109e, 0xb640, 0x6a83, 0x28fb, 0xbaf5, 0x1, 0x1);
        gbc.writeMem(0x80c5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x109e, gbc.sp());
        EXPECT(0x80c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c5));
        EXPECT(0x53, gbc.readMem(0x80c6));
        // CB 53 03AB
        gbc.setState(0x8bea, 0xb617, 0x1e80, 0xecca, 0x1648, 0xeb31, 0x1, 0x0);
        gbc.writeMem(0x8bea, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb617, gbc.sp());
        EXPECT(0x8bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bea));
        EXPECT(0x53, gbc.readMem(0x8beb));
        // CB 53 03AC
        gbc.setState(0x3072, 0xa541, 0x8f50, 0x4706, 0xc9d5, 0x372f, 0x0, 0x0);
        gbc.writeMem(0x3072, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa541, gbc.sp());
        EXPECT(0x3074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 03AD
        gbc.setState(0x30cb, 0x5342, 0x6fe0, 0x37b7, 0xe24a, 0x807d, 0x0, 0x0);
        gbc.writeMem(0x30cb, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5342, gbc.sp());
        EXPECT(0x30cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 03AE
        gbc.setState(0xb84d, 0xebf9, 0x91f0, 0xf4bb, 0xcc5a, 0xddb9, 0x1, 0x1);
        gbc.writeMem(0xb84d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xebf9, gbc.sp());
        EXPECT(0xb84f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb84d));
        EXPECT(0x53, gbc.readMem(0xb84e));
        // CB 53 03AF
        gbc.setState(0xee68, 0x18e6, 0xe20, 0x36fc, 0x2dcd, 0xc736, 0x0, 0x1);
        gbc.writeMem(0xee68, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x18e6, gbc.sp());
        EXPECT(0xee6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee68));
        EXPECT(0x53, gbc.readMem(0xee69));
        // CB 53 03B1
        gbc.setState(0xb424, 0x6994, 0xac70, 0x12c, 0x589c, 0x25c0, 0x0, 0x0);
        gbc.writeMem(0xb424, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6994, gbc.sp());
        EXPECT(0xb426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb424));
        EXPECT(0x53, gbc.readMem(0xb425));
        // CB 53 03B2
        gbc.setState(0x4532, 0x2e62, 0xe7e0, 0x8cd3, 0x69ae, 0xde03, 0x1, 0x1);
        gbc.writeMem(0x4532, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2e62, gbc.sp());
        EXPECT(0x4534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 03B3
        gbc.setState(0x4767, 0x83ef, 0xb510, 0x14e1, 0x2fb2, 0xaf74, 0x1, 0x1);
        gbc.writeMem(0x4767, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x83ef, gbc.sp());
        EXPECT(0x4769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 03B4
        gbc.setState(0x7645, 0xd70, 0x3e90, 0x9a2d, 0xfcc1, 0xc8d1, 0x0, 0x0);
        gbc.writeMem(0x7645, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd70, gbc.sp());
        EXPECT(0x7647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 03B5
        gbc.setState(0x77e, 0x8929, 0xe500, 0x401, 0xf3bc, 0xb173, 0x1, 0x1);
        gbc.writeMem(0x77e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8929, gbc.sp());
        EXPECT(0x780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 03B6
        gbc.setState(0x7fd2, 0xb864, 0x6fc0, 0x14fe, 0x82b7, 0xbf3d, 0x1, 0x0);
        gbc.writeMem(0x7fd2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb864, gbc.sp());
        EXPECT(0x7fd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 03B8
        gbc.setState(0x25e6, 0xc3e8, 0x3260, 0xed28, 0x83a1, 0xa0d6, 0x0, 0x1);
        gbc.writeMem(0x25e6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc3e8, gbc.sp());
        EXPECT(0x25e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 03B9
        gbc.setState(0xd947, 0xf78c, 0xc3a0, 0x5b89, 0xb419, 0x6c4c, 0x1, 0x1);
        gbc.writeMem(0xd947, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf78c, gbc.sp());
        EXPECT(0xd949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd947));
        EXPECT(0x53, gbc.readMem(0xd948));
        // CB 53 03BA
        gbc.setState(0x17a8, 0x3493, 0xf7d0, 0xf1d3, 0x5912, 0x36fe, 0x1, 0x1);
        gbc.writeMem(0x17a8, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3493, gbc.sp());
        EXPECT(0x17aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 03BB
        gbc.setState(0xc6fe, 0xc545, 0xd000, 0x4211, 0x2eec, 0xd3a3, 0x0, 0x1);
        gbc.writeMem(0xc6fe, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc545, gbc.sp());
        EXPECT(0xc700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6fe));
        EXPECT(0x53, gbc.readMem(0xc6ff));
        // CB 53 03BC
        gbc.setState(0x80ba, 0x9d4a, 0xacf0, 0x8861, 0x359, 0x1179, 0x1, 0x0);
        gbc.writeMem(0x80ba, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9d4a, gbc.sp());
        EXPECT(0x80bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ba));
        EXPECT(0x53, gbc.readMem(0x80bb));
        // CB 53 03BD
        gbc.setState(0x1fb3, 0x6cf5, 0x2300, 0xa7d3, 0xa73d, 0xa654, 0x0, 0x0);
        gbc.writeMem(0x1fb3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6cf5, gbc.sp());
        EXPECT(0x1fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 03BE
        gbc.setState(0x93d5, 0x9736, 0x6f70, 0xfd20, 0x1d29, 0x27a9, 0x0, 0x0);
        gbc.writeMem(0x93d5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9736, gbc.sp());
        EXPECT(0x93d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93d5));
        EXPECT(0x53, gbc.readMem(0x93d6));
        // CB 53 03BF
        gbc.setState(0xdeeb, 0xa34d, 0xb110, 0xf87e, 0x6703, 0x49f2, 0x1, 0x0);
        gbc.writeMem(0xdeeb, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa34d, gbc.sp());
        EXPECT(0xdeed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeeb));
        EXPECT(0x53, gbc.readMem(0xdeec));
        // CB 53 03C0
        gbc.setState(0x6dde, 0xe0e6, 0x84c0, 0xa2a3, 0x8d22, 0x6261, 0x0, 0x1);
        gbc.writeMem(0x6dde, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe0e6, gbc.sp());
        EXPECT(0x6de0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 03C1
        gbc.setState(0x7b51, 0x874, 0x2e80, 0xdcdb, 0xed, 0xb580, 0x0, 0x0);
        gbc.writeMem(0x7b51, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x874, gbc.sp());
        EXPECT(0x7b53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 03C2
        gbc.setState(0x16c2, 0x6737, 0x2240, 0x5105, 0xb8b4, 0x418f, 0x0, 0x0);
        gbc.writeMem(0x16c2, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6737, gbc.sp());
        EXPECT(0x16c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 03C3
        gbc.setState(0x4481, 0x80dc, 0xaf0, 0x7f20, 0x391c, 0xd630, 0x0, 0x1);
        gbc.writeMem(0x4481, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x80dc, gbc.sp());
        EXPECT(0x4483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 03C4
        gbc.setState(0xb89e, 0x6604, 0x7f40, 0x47a5, 0x9029, 0x44ad, 0x0, 0x0);
        gbc.writeMem(0xb89e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6604, gbc.sp());
        EXPECT(0xb8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb89e));
        EXPECT(0x53, gbc.readMem(0xb89f));
        // CB 53 03C5
        gbc.setState(0x887c, 0xa5b2, 0x1650, 0xf355, 0xcab, 0x1d28, 0x0, 0x0);
        gbc.writeMem(0x887c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa5b2, gbc.sp());
        EXPECT(0x887e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x887c));
        EXPECT(0x53, gbc.readMem(0x887d));
        // CB 53 03C6
        gbc.setState(0xd6f1, 0xdb20, 0x5100, 0x5332, 0xc925, 0xed3c, 0x1, 0x1);
        gbc.writeMem(0xd6f1, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdb20, gbc.sp());
        EXPECT(0xd6f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f1));
        EXPECT(0x53, gbc.readMem(0xd6f2));
        // CB 53 03C7
        gbc.setState(0x4e46, 0xb995, 0xf530, 0x51e0, 0x9ca9, 0x6fc9, 0x1, 0x0);
        gbc.writeMem(0x4e46, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb995, gbc.sp());
        EXPECT(0x4e48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 03C8
        gbc.setState(0x20a9, 0x779b, 0x96b0, 0x11ec, 0x1199, 0x3b2a, 0x1, 0x1);
        gbc.writeMem(0x20a9, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x779b, gbc.sp());
        EXPECT(0x20ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 03C9
        gbc.setState(0x525, 0x8a3c, 0x5850, 0xd32d, 0x6423, 0x4357, 0x1, 0x0);
        gbc.writeMem(0x525, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8a3c, gbc.sp());
        EXPECT(0x527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 03CA
        gbc.setState(0x7476, 0xfe6f, 0xc310, 0xf986, 0x48fa, 0x4b3a, 0x0, 0x1);
        gbc.writeMem(0x7476, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfe6f, gbc.sp());
        EXPECT(0x7478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 03CB
        gbc.setState(0xe498, 0xc7ea, 0x88d0, 0xcd90, 0x8b8b, 0x68e, 0x0, 0x1);
        gbc.writeMem(0xe498, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc7ea, gbc.sp());
        EXPECT(0xe49a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe498));
        EXPECT(0x53, gbc.readMem(0xe499));
        // CB 53 03CC
        gbc.setState(0x8562, 0x17d6, 0xba90, 0xed95, 0x4e96, 0x34dc, 0x0, 0x0);
        gbc.writeMem(0x8562, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x17d6, gbc.sp());
        EXPECT(0x8564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8562));
        EXPECT(0x53, gbc.readMem(0x8563));
        // CB 53 03CD
        gbc.setState(0x4142, 0xb19f, 0x53d0, 0xa8bc, 0x4b4b, 0x2dbf, 0x0, 0x1);
        gbc.writeMem(0x4142, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb19f, gbc.sp());
        EXPECT(0x4144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 03CE
        gbc.setState(0xe8d, 0x71bf, 0xf300, 0x142c, 0x3d5e, 0x4a90, 0x1, 0x0);
        gbc.writeMem(0xe8d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x71bf, gbc.sp());
        EXPECT(0xe8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 03CF
        gbc.setState(0x18fc, 0xadbc, 0xac0, 0x8f33, 0x38a6, 0x15b2, 0x1, 0x0);
        gbc.writeMem(0x18fc, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xadbc, gbc.sp());
        EXPECT(0x18fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 03D0
        gbc.setState(0xb99d, 0x4f3, 0x7fd0, 0x516d, 0xbef3, 0x24b7, 0x1, 0x1);
        gbc.writeMem(0xb99d, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4f3, gbc.sp());
        EXPECT(0xb99f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb99d));
        EXPECT(0x53, gbc.readMem(0xb99e));
        // CB 53 03D1
        gbc.setState(0xccb5, 0xaf90, 0x2ad0, 0x58ce, 0x7d64, 0x56ec, 0x1, 0x0);
        gbc.writeMem(0xccb5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xaf90, gbc.sp());
        EXPECT(0xccb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb5));
        EXPECT(0x53, gbc.readMem(0xccb6));
        // CB 53 03D2
        gbc.setState(0x9a10, 0x4f2a, 0x17c0, 0xd7f5, 0x42fe, 0x89fc, 0x1, 0x0);
        gbc.writeMem(0x9a10, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4f2a, gbc.sp());
        EXPECT(0x9a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a10));
        EXPECT(0x53, gbc.readMem(0x9a11));
        // CB 53 03D3
        gbc.setState(0x3545, 0xab5, 0xefb0, 0xe7e1, 0x3340, 0x6e0c, 0x0, 0x0);
        gbc.writeMem(0x3545, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xab5, gbc.sp());
        EXPECT(0x3547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 03D4
        gbc.setState(0x696b, 0x847b, 0xef20, 0x259, 0xa93e, 0x9534, 0x0, 0x0);
        gbc.writeMem(0x696b, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x847b, gbc.sp());
        EXPECT(0x696d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 03D5
        gbc.setState(0x5c84, 0x9953, 0xa110, 0xcb5, 0xd278, 0x7d09, 0x1, 0x0);
        gbc.writeMem(0x5c84, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9953, gbc.sp());
        EXPECT(0x5c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 03D6
        gbc.setState(0xd6b4, 0x62f6, 0x7cc0, 0x4896, 0xbe74, 0x6b1c, 0x1, 0x1);
        gbc.writeMem(0xd6b4, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x62f6, gbc.sp());
        EXPECT(0xd6b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6b4));
        EXPECT(0x53, gbc.readMem(0xd6b5));
        // CB 53 03D7
        gbc.setState(0x1877, 0x1c79, 0xe980, 0xefb0, 0xb8b, 0x8d3d, 0x1, 0x0);
        gbc.writeMem(0x1877, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1c79, gbc.sp());
        EXPECT(0x1879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 03D8
        gbc.setState(0x3e6, 0x79f8, 0xf1f0, 0x7066, 0xc98b, 0xd472, 0x1, 0x0);
        gbc.writeMem(0x3e6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x79f8, gbc.sp());
        EXPECT(0x3e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 03D9
        gbc.setState(0xeb3, 0xc690, 0x3a20, 0x1304, 0x7d77, 0xb7bd, 0x1, 0x0);
        gbc.writeMem(0xeb3, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc690, gbc.sp());
        EXPECT(0xeb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 53 03DA
        gbc.setState(0x8377, 0xf18, 0xced0, 0x6cac, 0xc1ee, 0xc64c, 0x0, 0x1);
        gbc.writeMem(0x8377, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf18, gbc.sp());
        EXPECT(0x8379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8377));
        EXPECT(0x53, gbc.readMem(0x8378));
        // CB 53 03DB
        gbc.setState(0x3e89, 0x32a5, 0xb1d0, 0x72d9, 0x846d, 0xbd7, 0x0, 0x0);
        gbc.writeMem(0x3e89, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x32a5, gbc.sp());
        EXPECT(0x3e8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 03DC
        gbc.setState(0x1c40, 0xbb87, 0x45f0, 0x8d4, 0xeefb, 0xe7aa, 0x0, 0x0);
        gbc.writeMem(0x1c40, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbb87, gbc.sp());
        EXPECT(0x1c42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 03DE
        gbc.setState(0xcd71, 0x18c4, 0xbfd0, 0x693e, 0x22e9, 0x5d50, 0x1, 0x1);
        gbc.writeMem(0xcd71, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x18c4, gbc.sp());
        EXPECT(0xcd73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd71));
        EXPECT(0x53, gbc.readMem(0xcd72));
        // CB 53 03DF
        gbc.setState(0x9721, 0x200d, 0xfa60, 0x317e, 0x808a, 0xa70b, 0x0, 0x1);
        gbc.writeMem(0x9721, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x200d, gbc.sp());
        EXPECT(0x9723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9721));
        EXPECT(0x53, gbc.readMem(0x9722));
        // CB 53 03E0
        gbc.setState(0xd9fd, 0x67d0, 0x5780, 0xcb2, 0x44f, 0xccba, 0x0, 0x0);
        gbc.writeMem(0xd9fd, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x67d0, gbc.sp());
        EXPECT(0xd9ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9fd));
        EXPECT(0x53, gbc.readMem(0xd9fe));
        // CB 53 03E1
        gbc.setState(0xe77e, 0x1613, 0x43c0, 0x99de, 0x41c9, 0x81a9, 0x1, 0x0);
        gbc.writeMem(0xe77e, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1613, gbc.sp());
        EXPECT(0xe780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe77e));
        EXPECT(0x53, gbc.readMem(0xe77f));
        // CB 53 03E2
        gbc.setState(0x2f6a, 0xebfb, 0x97d0, 0x8009, 0x4274, 0x1e6a, 0x0, 0x1);
        gbc.writeMem(0x2f6a, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xebfb, gbc.sp());
        EXPECT(0x2f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 03E3
        gbc.setState(0x28e5, 0x9dd5, 0x3db0, 0x9d8, 0x6ac5, 0xe1e5, 0x0, 0x1);
        gbc.writeMem(0x28e5, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9dd5, gbc.sp());
        EXPECT(0x28e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 53 03E4
        gbc.setState(0xa7bf, 0x2e04, 0x2a20, 0xd8d2, 0x505f, 0xf0a4, 0x0, 0x1);
        gbc.writeMem(0xa7bf, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2e04, gbc.sp());
        EXPECT(0xa7c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7bf));
        EXPECT(0x53, gbc.readMem(0xa7c0));
        // CB 53 03E5
        gbc.setState(0xb0b7, 0xb769, 0x5030, 0x38c5, 0x18e3, 0xb573, 0x0, 0x0);
        gbc.writeMem(0xb0b7, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb769, gbc.sp());
        EXPECT(0xb0b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0b7));
        EXPECT(0x53, gbc.readMem(0xb0b8));
        // CB 53 03E6
        gbc.setState(0x8c7c, 0x86a7, 0x5af0, 0x8c87, 0x7772, 0xaaaf, 0x0, 0x1);
        gbc.writeMem(0x8c7c, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x86a7, gbc.sp());
        EXPECT(0x8c7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c7c));
        EXPECT(0x53, gbc.readMem(0x8c7d));
        // CB 53 03E7
        gbc.setState(0x7ea6, 0xfca5, 0x5510, 0x48de, 0xb809, 0x4cb8, 0x1, 0x0);
        gbc.writeMem(0x7ea6, { 0xcb, 0x53 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfca5, gbc.sp());
        EXPECT(0x7ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
