#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_79)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_79) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 79 0000
        gbc.setState(0x5328, 0x8bad, 0x5060, 0x16ce, 0x6b68, 0xb096, 0x1, 0x0);
        gbc.writeMem(0x5328, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x8bad);
        EXPECT(gbc.pc(), 0x532a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0001
        gbc.setState(0x801a, 0x3f73, 0x150, 0xf8cb, 0x3f49, 0xb334, 0x0, 0x1);
        gbc.writeMem(0x801a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3f73);
        EXPECT(gbc.pc(), 0x801c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x801a), 0xcb);
        EXPECT(gbc.readMem(0x801b), 0x79);
        // CB 79 0002
        gbc.setState(0xab9d, 0x7b9e, 0x84d0, 0xc51, 0x3ce5, 0x99f7, 0x1, 0x0);
        gbc.writeMem(0xab9d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x7b9e);
        EXPECT(gbc.pc(), 0xab9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab9d), 0xcb);
        EXPECT(gbc.readMem(0xab9e), 0x79);
        // CB 79 0003
        gbc.setState(0xdf1a, 0x40ee, 0xc3a0, 0x614b, 0x65a6, 0x420e, 0x0, 0x1);
        gbc.writeMem(0xdf1a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x40ee);
        EXPECT(gbc.pc(), 0xdf1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf1a), 0xcb);
        EXPECT(gbc.readMem(0xdf1b), 0x79);
        // CB 79 0004
        gbc.setState(0xbf, 0x9e1b, 0x1e30, 0x511c, 0xa0b0, 0x92c8, 0x1, 0x1);
        gbc.writeMem(0xbf, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9e1b);
        EXPECT(gbc.pc(), 0xc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0005
        gbc.setState(0x126d, 0x543d, 0x4ac0, 0xe455, 0xdc0e, 0x95e0, 0x0, 0x0);
        gbc.writeMem(0x126d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x543d);
        EXPECT(gbc.pc(), 0x126f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0006
        gbc.setState(0x3c, 0xe81d, 0xd040, 0xc4b0, 0xc8bf, 0xb12c, 0x1, 0x1);
        gbc.writeMem(0x3c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe81d);
        EXPECT(gbc.pc(), 0x3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0007
        gbc.setState(0x6718, 0xc99c, 0x5d20, 0x8e8f, 0xe98d, 0x7597, 0x0, 0x0);
        gbc.writeMem(0x6718, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc99c);
        EXPECT(gbc.pc(), 0x671a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0009
        gbc.setState(0xa8d, 0x6d3d, 0x9900, 0x2674, 0xacde, 0x595a, 0x0, 0x0);
        gbc.writeMem(0xa8d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6d3d);
        EXPECT(gbc.pc(), 0xa8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 000A
        gbc.setState(0x46f5, 0x90b8, 0x5420, 0x1f2e, 0xe44, 0x8f9b, 0x1, 0x1);
        gbc.writeMem(0x46f5, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x90b8);
        EXPECT(gbc.pc(), 0x46f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 000B
        gbc.setState(0xc4c7, 0xc260, 0x1fc0, 0xf459, 0x53d3, 0x70ae, 0x0, 0x1);
        gbc.writeMem(0xc4c7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc260);
        EXPECT(gbc.pc(), 0xc4c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4c7), 0xcb);
        EXPECT(gbc.readMem(0xc4c8), 0x79);
        // CB 79 000C
        gbc.setState(0x7769, 0xfae0, 0x47a0, 0xa14c, 0x4fe6, 0xf2f1, 0x0, 0x0);
        gbc.writeMem(0x7769, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xfae0);
        EXPECT(gbc.pc(), 0x776b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 000D
        gbc.setState(0x2979, 0xa9ff, 0x55d0, 0x84b6, 0x1645, 0xec78, 0x1, 0x0);
        gbc.writeMem(0x2979, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa9ff);
        EXPECT(gbc.pc(), 0x297b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 000E
        gbc.setState(0xdaff, 0x2839, 0xe3a0, 0x1b14, 0xea03, 0x323c, 0x1, 0x1);
        gbc.writeMem(0xdaff, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2839);
        EXPECT(gbc.pc(), 0xdb01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaff), 0xcb);
        EXPECT(gbc.readMem(0xdb00), 0x79);
        // CB 79 000F
        gbc.setState(0x3b24, 0x62ac, 0x1580, 0xe5db, 0xd56b, 0x6903, 0x1, 0x1);
        gbc.writeMem(0x3b24, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x62ac);
        EXPECT(gbc.pc(), 0x3b26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0010
        gbc.setState(0x27a7, 0x99bc, 0x6770, 0x3fba, 0x5a7f, 0x3224, 0x0, 0x0);
        gbc.writeMem(0x27a7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x99bc);
        EXPECT(gbc.pc(), 0x27a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0011
        gbc.setState(0x20d7, 0xb5b9, 0x9fd0, 0x71c8, 0xdc92, 0x3062, 0x1, 0x0);
        gbc.writeMem(0x20d7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb5b9);
        EXPECT(gbc.pc(), 0x20d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0012
        gbc.setState(0x80a, 0xf284, 0x7250, 0x6595, 0xeee5, 0x763a, 0x1, 0x1);
        gbc.writeMem(0x80a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf284);
        EXPECT(gbc.pc(), 0x80c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0013
        gbc.setState(0x4e83, 0x1339, 0x38d0, 0x561d, 0x4b55, 0xdc8c, 0x1, 0x1);
        gbc.writeMem(0x4e83, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1339);
        EXPECT(gbc.pc(), 0x4e85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0014
        gbc.setState(0xa87a, 0x40d0, 0x85a0, 0xb557, 0x688, 0x25a9, 0x0, 0x0);
        gbc.writeMem(0xa87a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x40d0);
        EXPECT(gbc.pc(), 0xa87c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa87a), 0xcb);
        EXPECT(gbc.readMem(0xa87b), 0x79);
        // CB 79 0015
        gbc.setState(0xc83c, 0x95c5, 0x9980, 0xe98b, 0xf335, 0xd573, 0x0, 0x0);
        gbc.writeMem(0xc83c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x95c5);
        EXPECT(gbc.pc(), 0xc83e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc83c), 0xcb);
        EXPECT(gbc.readMem(0xc83d), 0x79);
        // CB 79 0016
        gbc.setState(0x1cbb, 0xc0ad, 0x70d0, 0x626c, 0x9f5c, 0x11ee, 0x1, 0x0);
        gbc.writeMem(0x1cbb, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc0ad);
        EXPECT(gbc.pc(), 0x1cbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0017
        gbc.setState(0xd2cf, 0xc7cc, 0xf630, 0x7508, 0x81f7, 0x5123, 0x0, 0x0);
        gbc.writeMem(0xd2cf, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc7cc);
        EXPECT(gbc.pc(), 0xd2d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2cf), 0xcb);
        EXPECT(gbc.readMem(0xd2d0), 0x79);
        // CB 79 0018
        gbc.setState(0xc45d, 0x16b1, 0xc0a0, 0x8740, 0xa671, 0x95c2, 0x1, 0x0);
        gbc.writeMem(0xc45d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x16b1);
        EXPECT(gbc.pc(), 0xc45f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc45d), 0xcb);
        EXPECT(gbc.readMem(0xc45e), 0x79);
        // CB 79 0019
        gbc.setState(0xaf6f, 0x629d, 0x1750, 0x6be4, 0x41b7, 0x47cc, 0x0, 0x1);
        gbc.writeMem(0xaf6f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x629d);
        EXPECT(gbc.pc(), 0xaf71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf6f), 0xcb);
        EXPECT(gbc.readMem(0xaf70), 0x79);
        // CB 79 001A
        gbc.setState(0x7dc8, 0x6f03, 0xf00, 0x68, 0xde9c, 0xf06c, 0x0, 0x0);
        gbc.writeMem(0x7dc8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6f03);
        EXPECT(gbc.pc(), 0x7dca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 001B
        gbc.setState(0x2206, 0x5e57, 0x9aa0, 0x41b7, 0x675c, 0xf6cf, 0x1, 0x1);
        gbc.writeMem(0x2206, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5e57);
        EXPECT(gbc.pc(), 0x2208);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 001C
        gbc.setState(0xea65, 0xcae5, 0x37a0, 0xddf4, 0x86be, 0x95eb, 0x1, 0x0);
        gbc.writeMem(0xea65, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xcae5);
        EXPECT(gbc.pc(), 0xea67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea65), 0xcb);
        EXPECT(gbc.readMem(0xea66), 0x79);
        // CB 79 001D
        gbc.setState(0xac20, 0xbef4, 0x6480, 0xd667, 0xcbb9, 0x2fd0, 0x1, 0x1);
        gbc.writeMem(0xac20, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xbef4);
        EXPECT(gbc.pc(), 0xac22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac20), 0xcb);
        EXPECT(gbc.readMem(0xac21), 0x79);
        // CB 79 001E
        gbc.setState(0xcfcc, 0x19ff, 0xad20, 0x622, 0x1b1d, 0xae4c, 0x0, 0x1);
        gbc.writeMem(0xcfcc, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x19ff);
        EXPECT(gbc.pc(), 0xcfce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfcc), 0xcb);
        EXPECT(gbc.readMem(0xcfcd), 0x79);
        // CB 79 001F
        gbc.setState(0x7ab7, 0xb749, 0xda00, 0x1c26, 0x4c2e, 0xccb5, 0x0, 0x1);
        gbc.writeMem(0x7ab7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb749);
        EXPECT(gbc.pc(), 0x7ab9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0020
        gbc.setState(0x2c8d, 0x795, 0x300, 0xf20e, 0x97d6, 0x6433, 0x0, 0x1);
        gbc.writeMem(0x2c8d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x795);
        EXPECT(gbc.pc(), 0x2c8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0021
        gbc.setState(0xd1aa, 0xd8b8, 0x2080, 0x3198, 0xdb82, 0xd67f, 0x1, 0x0);
        gbc.writeMem(0xd1aa, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd8b8);
        EXPECT(gbc.pc(), 0xd1ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1aa), 0xcb);
        EXPECT(gbc.readMem(0xd1ab), 0x79);
        // CB 79 0022
        gbc.setState(0x86a0, 0x82ce, 0xe760, 0x1aae, 0x4fa1, 0xc9c9, 0x0, 0x1);
        gbc.writeMem(0x86a0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x82ce);
        EXPECT(gbc.pc(), 0x86a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86a0), 0xcb);
        EXPECT(gbc.readMem(0x86a1), 0x79);
        // CB 79 0023
        gbc.setState(0x55e4, 0xdf2d, 0xf560, 0xe7b4, 0x5d7c, 0xf0d5, 0x0, 0x1);
        gbc.writeMem(0x55e4, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xdf2d);
        EXPECT(gbc.pc(), 0x55e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0024
        gbc.setState(0x9e8e, 0x6f36, 0x6750, 0xfdbf, 0x4c44, 0x888b, 0x1, 0x1);
        gbc.writeMem(0x9e8e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6f36);
        EXPECT(gbc.pc(), 0x9e90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e8e), 0xcb);
        EXPECT(gbc.readMem(0x9e8f), 0x79);
        // CB 79 0025
        gbc.setState(0x9385, 0x8e70, 0x6ab0, 0xa74, 0xb945, 0x50ad, 0x0, 0x0);
        gbc.writeMem(0x9385, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8e70);
        EXPECT(gbc.pc(), 0x9387);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9385), 0xcb);
        EXPECT(gbc.readMem(0x9386), 0x79);
        // CB 79 0026
        gbc.setState(0xddde, 0xc0b1, 0x5760, 0x4312, 0x5b6b, 0x9cf3, 0x0, 0x1);
        gbc.writeMem(0xddde, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc0b1);
        EXPECT(gbc.pc(), 0xdde0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddde), 0xcb);
        EXPECT(gbc.readMem(0xdddf), 0x79);
        // CB 79 0027
        gbc.setState(0xc32b, 0xa6e4, 0x6250, 0x5149, 0xf54b, 0xaee7, 0x0, 0x0);
        gbc.writeMem(0xc32b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa6e4);
        EXPECT(gbc.pc(), 0xc32d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc32b), 0xcb);
        EXPECT(gbc.readMem(0xc32c), 0x79);
        // CB 79 0028
        gbc.setState(0xa182, 0x26ed, 0xe7f0, 0x67ca, 0xabb4, 0x5d07, 0x1, 0x1);
        gbc.writeMem(0xa182, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x26ed);
        EXPECT(gbc.pc(), 0xa184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa182), 0xcb);
        EXPECT(gbc.readMem(0xa183), 0x79);
        // CB 79 0029
        gbc.setState(0x2a79, 0x2c1d, 0x5880, 0x11dc, 0xcd12, 0x2484, 0x1, 0x1);
        gbc.writeMem(0x2a79, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2c1d);
        EXPECT(gbc.pc(), 0x2a7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 002A
        gbc.setState(0xd216, 0x672b, 0x7a0, 0x26b6, 0xbc26, 0x241e, 0x1, 0x1);
        gbc.writeMem(0xd216, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x672b);
        EXPECT(gbc.pc(), 0xd218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd216), 0xcb);
        EXPECT(gbc.readMem(0xd217), 0x79);
        // CB 79 002B
        gbc.setState(0x695b, 0x79d4, 0xf960, 0x186e, 0xeffc, 0xe607, 0x1, 0x1);
        gbc.writeMem(0x695b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x79d4);
        EXPECT(gbc.pc(), 0x695d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 002C
        gbc.setState(0x3be7, 0xc280, 0xdd30, 0xe3ec, 0xe462, 0x949f, 0x1, 0x1);
        gbc.writeMem(0x3be7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc280);
        EXPECT(gbc.pc(), 0x3be9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 002D
        gbc.setState(0xd047, 0xb177, 0x1ee0, 0x5f7e, 0x91d2, 0x4689, 0x1, 0x0);
        gbc.writeMem(0xd047, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb177);
        EXPECT(gbc.pc(), 0xd049);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd047), 0xcb);
        EXPECT(gbc.readMem(0xd048), 0x79);
        // CB 79 002E
        gbc.setState(0xba8f, 0x5640, 0x69f0, 0x5d63, 0x7122, 0x6da0, 0x1, 0x1);
        gbc.writeMem(0xba8f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5640);
        EXPECT(gbc.pc(), 0xba91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba8f), 0xcb);
        EXPECT(gbc.readMem(0xba90), 0x79);
        // CB 79 002F
        gbc.setState(0x2dc, 0x78c7, 0x95d0, 0xbdd3, 0x2330, 0x9ba9, 0x0, 0x0);
        gbc.writeMem(0x2dc, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x78c7);
        EXPECT(gbc.pc(), 0x2de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0030
        gbc.setState(0x25e9, 0x9775, 0xb4b0, 0x341f, 0x9e9a, 0x3021, 0x0, 0x0);
        gbc.writeMem(0x25e9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9775);
        EXPECT(gbc.pc(), 0x25eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0031
        gbc.setState(0xb73d, 0x79b4, 0x1120, 0x81d6, 0xee89, 0xb507, 0x0, 0x0);
        gbc.writeMem(0xb73d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x79b4);
        EXPECT(gbc.pc(), 0xb73f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb73d), 0xcb);
        EXPECT(gbc.readMem(0xb73e), 0x79);
        // CB 79 0032
        gbc.setState(0x2d1e, 0x535c, 0xb60, 0xbe1f, 0xd384, 0x627e, 0x1, 0x0);
        gbc.writeMem(0x2d1e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x535c);
        EXPECT(gbc.pc(), 0x2d20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0033
        gbc.setState(0xaf81, 0x4405, 0xf7b0, 0x9827, 0xa64f, 0x2aa9, 0x0, 0x0);
        gbc.writeMem(0xaf81, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4405);
        EXPECT(gbc.pc(), 0xaf83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf81), 0xcb);
        EXPECT(gbc.readMem(0xaf82), 0x79);
        // CB 79 0034
        gbc.setState(0xc0e0, 0xac17, 0xbcb0, 0x9b65, 0x50ad, 0x4ca3, 0x0, 0x1);
        gbc.writeMem(0xc0e0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xac17);
        EXPECT(gbc.pc(), 0xc0e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0e0), 0xcb);
        EXPECT(gbc.readMem(0xc0e1), 0x79);
        // CB 79 0035
        gbc.setState(0x8263, 0x1dc3, 0x25f0, 0x6649, 0xe19, 0xfe7a, 0x1, 0x0);
        gbc.writeMem(0x8263, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x1dc3);
        EXPECT(gbc.pc(), 0x8265);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8263), 0xcb);
        EXPECT(gbc.readMem(0x8264), 0x79);
        // CB 79 0036
        gbc.setState(0x240, 0xd11, 0xc990, 0xbda5, 0xff3e, 0x7138, 0x1, 0x0);
        gbc.writeMem(0x240, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xd11);
        EXPECT(gbc.pc(), 0x242);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0037
        gbc.setState(0xefb1, 0x7476, 0x33a0, 0x22ab, 0x2ba6, 0x2e33, 0x0, 0x0);
        gbc.writeMem(0xefb1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7476);
        EXPECT(gbc.pc(), 0xefb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefb1), 0xcb);
        EXPECT(gbc.readMem(0xefb2), 0x79);
        // CB 79 0038
        gbc.setState(0x951b, 0x8eda, 0x3f80, 0x1d1e, 0x6cfb, 0xcc2d, 0x0, 0x0);
        gbc.writeMem(0x951b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8eda);
        EXPECT(gbc.pc(), 0x951d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x951b), 0xcb);
        EXPECT(gbc.readMem(0x951c), 0x79);
        // CB 79 0039
        gbc.setState(0xcf9d, 0xd30a, 0x29a0, 0xea51, 0xade7, 0x9c17, 0x0, 0x1);
        gbc.writeMem(0xcf9d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xd30a);
        EXPECT(gbc.pc(), 0xcf9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf9d), 0xcb);
        EXPECT(gbc.readMem(0xcf9e), 0x79);
        // CB 79 003A
        gbc.setState(0x4fa1, 0x425f, 0x6a30, 0x7ec5, 0xe935, 0xf12e, 0x1, 0x1);
        gbc.writeMem(0x4fa1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x425f);
        EXPECT(gbc.pc(), 0x4fa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 003B
        gbc.setState(0xb55f, 0x7ca5, 0x74f0, 0x353, 0xc54e, 0xb42e, 0x0, 0x1);
        gbc.writeMem(0xb55f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7ca5);
        EXPECT(gbc.pc(), 0xb561);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb55f), 0xcb);
        EXPECT(gbc.readMem(0xb560), 0x79);
        // CB 79 003C
        gbc.setState(0x90d7, 0x57ee, 0xa8c0, 0x6d54, 0xd451, 0x23d4, 0x1, 0x0);
        gbc.writeMem(0x90d7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x57ee);
        EXPECT(gbc.pc(), 0x90d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90d7), 0xcb);
        EXPECT(gbc.readMem(0x90d8), 0x79);
        // CB 79 003D
        gbc.setState(0xc252, 0x4f9d, 0x42b0, 0xd90f, 0x6e79, 0xc248, 0x1, 0x0);
        gbc.writeMem(0xc252, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4f9d);
        EXPECT(gbc.pc(), 0xc254);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc252), 0xcb);
        EXPECT(gbc.readMem(0xc253), 0x79);
        // CB 79 003E
        gbc.setState(0x8607, 0xd791, 0xb460, 0xd28a, 0x39a, 0x41d8, 0x1, 0x0);
        gbc.writeMem(0x8607, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd791);
        EXPECT(gbc.pc(), 0x8609);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8607), 0xcb);
        EXPECT(gbc.readMem(0x8608), 0x79);
        // CB 79 003F
        gbc.setState(0x457d, 0x89cc, 0xdc40, 0xe14, 0x3e39, 0x47cb, 0x1, 0x0);
        gbc.writeMem(0x457d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x89cc);
        EXPECT(gbc.pc(), 0x457f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0040
        gbc.setState(0x6a37, 0x8863, 0x2050, 0x4340, 0xe7cd, 0xd3ec, 0x1, 0x0);
        gbc.writeMem(0x6a37, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8863);
        EXPECT(gbc.pc(), 0x6a39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0041
        gbc.setState(0x7508, 0x4dbe, 0xb6d0, 0x41f, 0xb88a, 0x509e, 0x0, 0x0);
        gbc.writeMem(0x7508, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4dbe);
        EXPECT(gbc.pc(), 0x750a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0042
        gbc.setState(0x5aba, 0x26f1, 0xb650, 0x68c1, 0x4049, 0x1dbe, 0x0, 0x0);
        gbc.writeMem(0x5aba, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x26f1);
        EXPECT(gbc.pc(), 0x5abc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0043
        gbc.setState(0x1bdf, 0x9fbd, 0x5880, 0xa409, 0x7594, 0x127b, 0x0, 0x0);
        gbc.writeMem(0x1bdf, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9fbd);
        EXPECT(gbc.pc(), 0x1be1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0044
        gbc.setState(0x821c, 0x3581, 0x540, 0x3500, 0x7ab3, 0xd104, 0x1, 0x1);
        gbc.writeMem(0x821c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3581);
        EXPECT(gbc.pc(), 0x821e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x821c), 0xcb);
        EXPECT(gbc.readMem(0x821d), 0x79);
        // CB 79 0045
        gbc.setState(0xac61, 0xb770, 0xbfb0, 0xa73d, 0x9446, 0x39e9, 0x0, 0x0);
        gbc.writeMem(0xac61, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb770);
        EXPECT(gbc.pc(), 0xac63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac61), 0xcb);
        EXPECT(gbc.readMem(0xac62), 0x79);
        // CB 79 0046
        gbc.setState(0xeab4, 0x332b, 0x5d10, 0x430, 0x95c1, 0x4123, 0x1, 0x1);
        gbc.writeMem(0xeab4, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x332b);
        EXPECT(gbc.pc(), 0xeab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeab4), 0xcb);
        EXPECT(gbc.readMem(0xeab5), 0x79);
        // CB 79 0047
        gbc.setState(0x54e0, 0xdd95, 0xba60, 0x3fe9, 0xf2e, 0x872b, 0x1, 0x0);
        gbc.writeMem(0x54e0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xdd95);
        EXPECT(gbc.pc(), 0x54e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0048
        gbc.setState(0x1a42, 0x1b00, 0xb340, 0x2323, 0x33da, 0x6b1, 0x1, 0x1);
        gbc.writeMem(0x1a42, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1b00);
        EXPECT(gbc.pc(), 0x1a44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0049
        gbc.setState(0xd7ff, 0x2daa, 0xde90, 0x927d, 0x3b23, 0xc, 0x1, 0x0);
        gbc.writeMem(0xd7ff, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2daa);
        EXPECT(gbc.pc(), 0xd801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ff), 0xcb);
        EXPECT(gbc.readMem(0xd800), 0x79);
        // CB 79 004A
        gbc.setState(0x1698, 0xf35c, 0x98f0, 0x58a7, 0x199, 0xdf87, 0x1, 0x0);
        gbc.writeMem(0x1698, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf35c);
        EXPECT(gbc.pc(), 0x169a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 004B
        gbc.setState(0x53, 0x9cbb, 0xf380, 0xb4a8, 0x356b, 0x83e3, 0x1, 0x0);
        gbc.writeMem(0x53, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x9cbb);
        EXPECT(gbc.pc(), 0x55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 004C
        gbc.setState(0xa753, 0xc74d, 0x38c0, 0x2e7c, 0xc3f8, 0x3764, 0x0, 0x1);
        gbc.writeMem(0xa753, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc74d);
        EXPECT(gbc.pc(), 0xa755);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa753), 0xcb);
        EXPECT(gbc.readMem(0xa754), 0x79);
        // CB 79 004D
        gbc.setState(0xe54e, 0xfcde, 0x54d0, 0x6c5, 0x6752, 0xe6ae, 0x0, 0x1);
        gbc.writeMem(0xe54e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xfcde);
        EXPECT(gbc.pc(), 0xe550);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe54e), 0xcb);
        EXPECT(gbc.readMem(0xe54f), 0x79);
        // CB 79 004E
        gbc.setState(0x64af, 0x8bc9, 0x2220, 0xa5c9, 0x30ad, 0x84f9, 0x0, 0x1);
        gbc.writeMem(0x64af, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8bc9);
        EXPECT(gbc.pc(), 0x64b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 004F
        gbc.setState(0xa295, 0x8426, 0x6f50, 0x30d5, 0x60ce, 0x9253, 0x1, 0x1);
        gbc.writeMem(0xa295, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8426);
        EXPECT(gbc.pc(), 0xa297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa295), 0xcb);
        EXPECT(gbc.readMem(0xa296), 0x79);
        // CB 79 0050
        gbc.setState(0x5cca, 0x41b5, 0x8190, 0x5ab, 0x8672, 0xfc3, 0x0, 0x1);
        gbc.writeMem(0x5cca, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x41b5);
        EXPECT(gbc.pc(), 0x5ccc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0051
        gbc.setState(0x8222, 0xdcd6, 0xc70, 0xf7e4, 0xfe77, 0x3de, 0x1, 0x0);
        gbc.writeMem(0x8222, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xdcd6);
        EXPECT(gbc.pc(), 0x8224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8222), 0xcb);
        EXPECT(gbc.readMem(0x8223), 0x79);
        // CB 79 0052
        gbc.setState(0xab89, 0x8f9c, 0xfc60, 0x79f3, 0xe5fb, 0xc4f, 0x1, 0x1);
        gbc.writeMem(0xab89, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8f9c);
        EXPECT(gbc.pc(), 0xab8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab89), 0xcb);
        EXPECT(gbc.readMem(0xab8a), 0x79);
        // CB 79 0053
        gbc.setState(0x2c45, 0x6912, 0x3b90, 0x83ae, 0x6b67, 0x9212, 0x1, 0x1);
        gbc.writeMem(0x2c45, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6912);
        EXPECT(gbc.pc(), 0x2c47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0054
        gbc.setState(0xc6d0, 0x2d70, 0x37b0, 0xd635, 0x7043, 0x902f, 0x1, 0x1);
        gbc.writeMem(0xc6d0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2d70);
        EXPECT(gbc.pc(), 0xc6d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6d0), 0xcb);
        EXPECT(gbc.readMem(0xc6d1), 0x79);
        // CB 79 0055
        gbc.setState(0xb79f, 0x122f, 0x41f0, 0x330, 0xf8f1, 0x2528, 0x0, 0x1);
        gbc.writeMem(0xb79f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x122f);
        EXPECT(gbc.pc(), 0xb7a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb79f), 0xcb);
        EXPECT(gbc.readMem(0xb7a0), 0x79);
        // CB 79 0056
        gbc.setState(0xc2d5, 0xe242, 0xa130, 0x16ed, 0xd162, 0xcd60, 0x0, 0x1);
        gbc.writeMem(0xc2d5, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe242);
        EXPECT(gbc.pc(), 0xc2d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2d5), 0xcb);
        EXPECT(gbc.readMem(0xc2d6), 0x79);
        // CB 79 0057
        gbc.setState(0x65ca, 0x34f4, 0xee10, 0x8177, 0x657d, 0x222a, 0x0, 0x0);
        gbc.writeMem(0x65ca, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x34f4);
        EXPECT(gbc.pc(), 0x65cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0058
        gbc.setState(0x93d9, 0x4ba8, 0x31e0, 0xcc91, 0x9057, 0x6add, 0x1, 0x1);
        gbc.writeMem(0x93d9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4ba8);
        EXPECT(gbc.pc(), 0x93db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93d9), 0xcb);
        EXPECT(gbc.readMem(0x93da), 0x79);
        // CB 79 0059
        gbc.setState(0x6ec8, 0xd949, 0x7450, 0x364b, 0x8c24, 0xb735, 0x0, 0x1);
        gbc.writeMem(0x6ec8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xd949);
        EXPECT(gbc.pc(), 0x6eca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 005A
        gbc.setState(0xad50, 0x5d21, 0x6b50, 0x102c, 0xfaf9, 0x34f4, 0x1, 0x1);
        gbc.writeMem(0xad50, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5d21);
        EXPECT(gbc.pc(), 0xad52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad50), 0xcb);
        EXPECT(gbc.readMem(0xad51), 0x79);
        // CB 79 005B
        gbc.setState(0xa617, 0x9b9, 0xc700, 0xe03, 0x1b24, 0x7387, 0x0, 0x0);
        gbc.writeMem(0xa617, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9b9);
        EXPECT(gbc.pc(), 0xa619);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa617), 0xcb);
        EXPECT(gbc.readMem(0xa618), 0x79);
        // CB 79 005C
        gbc.setState(0xa8e3, 0x2849, 0x70f0, 0x5e48, 0xdc99, 0x1110, 0x0, 0x0);
        gbc.writeMem(0xa8e3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2849);
        EXPECT(gbc.pc(), 0xa8e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8e3), 0xcb);
        EXPECT(gbc.readMem(0xa8e4), 0x79);
        // CB 79 005D
        gbc.setState(0x60c6, 0x38d7, 0x43d0, 0x8417, 0x4554, 0x7b8a, 0x0, 0x0);
        gbc.writeMem(0x60c6, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x38d7);
        EXPECT(gbc.pc(), 0x60c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 005E
        gbc.setState(0xb7b, 0x6c62, 0x3b0, 0x97bf, 0x19fb, 0x3b8, 0x1, 0x1);
        gbc.writeMem(0xb7b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x6c62);
        EXPECT(gbc.pc(), 0xb7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 005F
        gbc.setState(0xd1de, 0xc12d, 0xbea0, 0xa1e6, 0x6a75, 0xc5eb, 0x0, 0x1);
        gbc.writeMem(0xd1de, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc12d);
        EXPECT(gbc.pc(), 0xd1e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1de), 0xcb);
        EXPECT(gbc.readMem(0xd1df), 0x79);
        // CB 79 0060
        gbc.setState(0x2cbb, 0x13e7, 0x1c20, 0x1caf, 0x2345, 0xb5a6, 0x0, 0x0);
        gbc.writeMem(0x2cbb, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x13e7);
        EXPECT(gbc.pc(), 0x2cbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0061
        gbc.setState(0xbc26, 0x926e, 0x7ae0, 0x2b77, 0x65f1, 0x3abd, 0x1, 0x1);
        gbc.writeMem(0xbc26, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x926e);
        EXPECT(gbc.pc(), 0xbc28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc26), 0xcb);
        EXPECT(gbc.readMem(0xbc27), 0x79);
        // CB 79 0062
        gbc.setState(0x370c, 0xa9f4, 0x81e0, 0xfbf7, 0xbff2, 0x6284, 0x0, 0x1);
        gbc.writeMem(0x370c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa9f4);
        EXPECT(gbc.pc(), 0x370e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0063
        gbc.setState(0x465e, 0x1e8e, 0x2e30, 0x14ac, 0x5e75, 0x86ab, 0x0, 0x0);
        gbc.writeMem(0x465e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1e8e);
        EXPECT(gbc.pc(), 0x4660);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0064
        gbc.setState(0x9525, 0x5e0d, 0xe750, 0x9037, 0x1e79, 0x98dc, 0x0, 0x0);
        gbc.writeMem(0x9525, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5e0d);
        EXPECT(gbc.pc(), 0x9527);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9525), 0xcb);
        EXPECT(gbc.readMem(0x9526), 0x79);
        // CB 79 0065
        gbc.setState(0x98c7, 0xa7bd, 0xdb80, 0xe2a, 0xd54f, 0x15e1, 0x0, 0x1);
        gbc.writeMem(0x98c7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa7bd);
        EXPECT(gbc.pc(), 0x98c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c7), 0xcb);
        EXPECT(gbc.readMem(0x98c8), 0x79);
        // CB 79 0066
        gbc.setState(0xd6a1, 0x10ef, 0x1a70, 0x449d, 0x268d, 0xf355, 0x1, 0x1);
        gbc.writeMem(0xd6a1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x10ef);
        EXPECT(gbc.pc(), 0xd6a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6a1), 0xcb);
        EXPECT(gbc.readMem(0xd6a2), 0x79);
        // CB 79 0067
        gbc.setState(0x5ee7, 0x21bc, 0x98a0, 0xd835, 0x76b7, 0xdf7b, 0x1, 0x1);
        gbc.writeMem(0x5ee7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x21bc);
        EXPECT(gbc.pc(), 0x5ee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0068
        gbc.setState(0x1148, 0x702e, 0xd5c0, 0xd68d, 0xb63c, 0x22a9, 0x0, 0x0);
        gbc.writeMem(0x1148, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x702e);
        EXPECT(gbc.pc(), 0x114a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0069
        gbc.setState(0x4a0f, 0x376d, 0x6820, 0x96a0, 0xeb22, 0x5f7d, 0x1, 0x0);
        gbc.writeMem(0x4a0f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x376d);
        EXPECT(gbc.pc(), 0x4a11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 006A
        gbc.setState(0x210b, 0xd3ed, 0x160, 0x67d4, 0x36a5, 0xabf1, 0x1, 0x0);
        gbc.writeMem(0x210b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd3ed);
        EXPECT(gbc.pc(), 0x210d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 006B
        gbc.setState(0x38f9, 0x540d, 0x6cd0, 0x4bd0, 0xb708, 0xfbe0, 0x0, 0x1);
        gbc.writeMem(0x38f9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x540d);
        EXPECT(gbc.pc(), 0x38fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 006C
        gbc.setState(0x1192, 0xc2f4, 0x5b30, 0x5edc, 0x8618, 0x52e, 0x1, 0x0);
        gbc.writeMem(0x1192, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc2f4);
        EXPECT(gbc.pc(), 0x1194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 006D
        gbc.setState(0xe456, 0x80ae, 0x41e0, 0x1e0d, 0xb0a, 0x7684, 0x1, 0x0);
        gbc.writeMem(0xe456, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x80ae);
        EXPECT(gbc.pc(), 0xe458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe456), 0xcb);
        EXPECT(gbc.readMem(0xe457), 0x79);
        // CB 79 006E
        gbc.setState(0xc1f2, 0x9cb6, 0xd1f0, 0xc6c5, 0xc6b9, 0xf933, 0x1, 0x0);
        gbc.writeMem(0xc1f2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x9cb6);
        EXPECT(gbc.pc(), 0xc1f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1f2), 0xcb);
        EXPECT(gbc.readMem(0xc1f3), 0x79);
        // CB 79 006F
        gbc.setState(0x2b70, 0xebe1, 0xdaa0, 0x274c, 0x7353, 0x171, 0x0, 0x1);
        gbc.writeMem(0x2b70, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xebe1);
        EXPECT(gbc.pc(), 0x2b72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0070
        gbc.setState(0xc00b, 0xb75, 0x8750, 0x680e, 0x4fdc, 0x8c3b, 0x0, 0x0);
        gbc.writeMem(0xc00b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb75);
        EXPECT(gbc.pc(), 0xc00d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc00b), 0xcb);
        EXPECT(gbc.readMem(0xc00c), 0x79);
        // CB 79 0071
        gbc.setState(0xea68, 0x54ef, 0x7880, 0xe29, 0x914b, 0x52e7, 0x1, 0x0);
        gbc.writeMem(0xea68, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x54ef);
        EXPECT(gbc.pc(), 0xea6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea68), 0xcb);
        EXPECT(gbc.readMem(0xea69), 0x79);
        // CB 79 0072
        gbc.setState(0x491d, 0xd97e, 0x1e00, 0x58fa, 0x30a1, 0x954d, 0x1, 0x0);
        gbc.writeMem(0x491d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd97e);
        EXPECT(gbc.pc(), 0x491f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0073
        gbc.setState(0xcd35, 0x772b, 0x24e0, 0xc09c, 0x8182, 0x1f8b, 0x1, 0x0);
        gbc.writeMem(0xcd35, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x772b);
        EXPECT(gbc.pc(), 0xcd37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd35), 0xcb);
        EXPECT(gbc.readMem(0xcd36), 0x79);
        // CB 79 0074
        gbc.setState(0xb2c7, 0xbb56, 0x3650, 0xb45, 0xc7d0, 0xdd54, 0x1, 0x1);
        gbc.writeMem(0xb2c7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xbb56);
        EXPECT(gbc.pc(), 0xb2c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2c7), 0xcb);
        EXPECT(gbc.readMem(0xb2c8), 0x79);
        // CB 79 0075
        gbc.setState(0x6ce2, 0xde40, 0x71d0, 0x5918, 0xd6c2, 0xf383, 0x1, 0x0);
        gbc.writeMem(0x6ce2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xde40);
        EXPECT(gbc.pc(), 0x6ce4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0076
        gbc.setState(0xe600, 0xaef3, 0xf780, 0x349b, 0x36b7, 0xac20, 0x1, 0x0);
        gbc.writeMem(0xe600, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xaef3);
        EXPECT(gbc.pc(), 0xe602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe600), 0xcb);
        EXPECT(gbc.readMem(0xe601), 0x79);
        // CB 79 0077
        gbc.setState(0xe2bd, 0xb4e1, 0x7410, 0xdfb, 0xe864, 0x552e, 0x0, 0x0);
        gbc.writeMem(0xe2bd, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb4e1);
        EXPECT(gbc.pc(), 0xe2bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2bd), 0xcb);
        EXPECT(gbc.readMem(0xe2be), 0x79);
        // CB 79 0078
        gbc.setState(0x6b75, 0x300e, 0x4d80, 0x2782, 0x9753, 0xe3f3, 0x1, 0x1);
        gbc.writeMem(0x6b75, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x300e);
        EXPECT(gbc.pc(), 0x6b77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0079
        gbc.setState(0x4a63, 0x90c1, 0xfc50, 0x3f10, 0xb84e, 0x92cb, 0x1, 0x0);
        gbc.writeMem(0x4a63, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x90c1);
        EXPECT(gbc.pc(), 0x4a65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 007A
        gbc.setState(0x64c9, 0x6982, 0x6b00, 0x32af, 0x2064, 0xee1b, 0x1, 0x1);
        gbc.writeMem(0x64c9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6982);
        EXPECT(gbc.pc(), 0x64cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 007B
        gbc.setState(0xe298, 0x20d4, 0x63a0, 0x4e32, 0xf0b6, 0x1345, 0x0, 0x1);
        gbc.writeMem(0xe298, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x20d4);
        EXPECT(gbc.pc(), 0xe29a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe298), 0xcb);
        EXPECT(gbc.readMem(0xe299), 0x79);
        // CB 79 007C
        gbc.setState(0x6bab, 0x983f, 0xc1c0, 0x6341, 0xa41f, 0xc6d6, 0x0, 0x0);
        gbc.writeMem(0x6bab, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x983f);
        EXPECT(gbc.pc(), 0x6bad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 007D
        gbc.setState(0x96a8, 0x6ff7, 0xd8a0, 0x764f, 0xd710, 0x66a, 0x1, 0x0);
        gbc.writeMem(0x96a8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6ff7);
        EXPECT(gbc.pc(), 0x96aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96a8), 0xcb);
        EXPECT(gbc.readMem(0x96a9), 0x79);
        // CB 79 007E
        gbc.setState(0xced2, 0x41fb, 0x19f0, 0xcfe5, 0xad5, 0xbb94, 0x1, 0x0);
        gbc.writeMem(0xced2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x41fb);
        EXPECT(gbc.pc(), 0xced4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xced2), 0xcb);
        EXPECT(gbc.readMem(0xced3), 0x79);
        // CB 79 007F
        gbc.setState(0x936e, 0xe935, 0x1080, 0x85c3, 0xa1a9, 0xee2c, 0x0, 0x0);
        gbc.writeMem(0x936e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe935);
        EXPECT(gbc.pc(), 0x9370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x936e), 0xcb);
        EXPECT(gbc.readMem(0x936f), 0x79);
        // CB 79 0080
        gbc.setState(0x6e10, 0x417d, 0x1fc0, 0xd802, 0xae59, 0x2386, 0x1, 0x0);
        gbc.writeMem(0x6e10, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x417d);
        EXPECT(gbc.pc(), 0x6e12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0081
        gbc.setState(0x8945, 0x58c2, 0xeb0, 0x3c35, 0x86a6, 0x5238, 0x0, 0x0);
        gbc.writeMem(0x8945, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x58c2);
        EXPECT(gbc.pc(), 0x8947);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8945), 0xcb);
        EXPECT(gbc.readMem(0x8946), 0x79);
        // CB 79 0082
        gbc.setState(0x8f26, 0x79ab, 0xfed0, 0xb633, 0x58e5, 0x2d0c, 0x1, 0x1);
        gbc.writeMem(0x8f26, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x79ab);
        EXPECT(gbc.pc(), 0x8f28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f26), 0xcb);
        EXPECT(gbc.readMem(0x8f27), 0x79);
        // CB 79 0083
        gbc.setState(0x3ef0, 0x5b93, 0x6cc0, 0xf3f8, 0xfa25, 0xab5a, 0x0, 0x1);
        gbc.writeMem(0x3ef0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x5b93);
        EXPECT(gbc.pc(), 0x3ef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0084
        gbc.setState(0x16a, 0x13f7, 0xdf80, 0xd678, 0x1dd5, 0xa4cb, 0x0, 0x0);
        gbc.writeMem(0x16a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x13f7);
        EXPECT(gbc.pc(), 0x16c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0085
        gbc.setState(0xcdb7, 0xa6b2, 0xc850, 0x6370, 0x4768, 0x52eb, 0x0, 0x1);
        gbc.writeMem(0xcdb7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa6b2);
        EXPECT(gbc.pc(), 0xcdb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdb7), 0xcb);
        EXPECT(gbc.readMem(0xcdb8), 0x79);
        // CB 79 0086
        gbc.setState(0x1cbe, 0x354a, 0x9d80, 0x78c1, 0xa815, 0xc219, 0x0, 0x0);
        gbc.writeMem(0x1cbe, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x354a);
        EXPECT(gbc.pc(), 0x1cc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0087
        gbc.setState(0x3d93, 0xa4d5, 0x1e40, 0xc7c, 0xfe99, 0x99a7, 0x0, 0x0);
        gbc.writeMem(0x3d93, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa4d5);
        EXPECT(gbc.pc(), 0x3d95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0088
        gbc.setState(0x2350, 0xfd1, 0x4ca0, 0x4ba9, 0xbb8c, 0x804c, 0x0, 0x0);
        gbc.writeMem(0x2350, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xfd1);
        EXPECT(gbc.pc(), 0x2352);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0089
        gbc.setState(0x560c, 0xa4c2, 0x7250, 0xcdfb, 0xb32a, 0xdbc9, 0x1, 0x0);
        gbc.writeMem(0x560c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa4c2);
        EXPECT(gbc.pc(), 0x560e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 008A
        gbc.setState(0x346b, 0x777b, 0x60b0, 0xb275, 0x55e1, 0x2666, 0x0, 0x1);
        gbc.writeMem(0x346b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x777b);
        EXPECT(gbc.pc(), 0x346d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 008C
        gbc.setState(0x2a37, 0xd2ed, 0x4990, 0x7222, 0xe799, 0x214d, 0x1, 0x0);
        gbc.writeMem(0x2a37, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd2ed);
        EXPECT(gbc.pc(), 0x2a39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 008D
        gbc.setState(0xae14, 0x6079, 0x96c0, 0x94bb, 0xb6c0, 0x8ac8, 0x1, 0x1);
        gbc.writeMem(0xae14, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x6079);
        EXPECT(gbc.pc(), 0xae16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae14), 0xcb);
        EXPECT(gbc.readMem(0xae15), 0x79);
        // CB 79 008E
        gbc.setState(0x111d, 0x94d8, 0xc4a0, 0xe881, 0xc378, 0x1ac4, 0x0, 0x0);
        gbc.writeMem(0x111d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x94d8);
        EXPECT(gbc.pc(), 0x111f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 008F
        gbc.setState(0xd29b, 0x62c9, 0x7c20, 0x908d, 0x4f13, 0x13fe, 0x0, 0x1);
        gbc.writeMem(0xd29b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x62c9);
        EXPECT(gbc.pc(), 0xd29d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd29b), 0xcb);
        EXPECT(gbc.readMem(0xd29c), 0x79);
        // CB 79 0090
        gbc.setState(0x4cac, 0xbba3, 0x64f0, 0x754, 0x7adb, 0xf5c9, 0x1, 0x1);
        gbc.writeMem(0x4cac, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xbba3);
        EXPECT(gbc.pc(), 0x4cae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0091
        gbc.setState(0xd5d, 0x76a0, 0x4df0, 0x395f, 0x848, 0x1e7e, 0x1, 0x1);
        gbc.writeMem(0xd5d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x76a0);
        EXPECT(gbc.pc(), 0xd5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0092
        gbc.setState(0xa283, 0x10dc, 0xe110, 0xb866, 0x3c6f, 0x69c, 0x1, 0x0);
        gbc.writeMem(0xa283, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x10dc);
        EXPECT(gbc.pc(), 0xa285);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa283), 0xcb);
        EXPECT(gbc.readMem(0xa284), 0x79);
        // CB 79 0093
        gbc.setState(0xddc9, 0x39d8, 0xb230, 0x1590, 0xde00, 0x8694, 0x0, 0x1);
        gbc.writeMem(0xddc9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x39d8);
        EXPECT(gbc.pc(), 0xddcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddc9), 0xcb);
        EXPECT(gbc.readMem(0xddca), 0x79);
        // CB 79 0095
        gbc.setState(0xd2b, 0x41f3, 0xb340, 0xfa88, 0x778a, 0xd1c7, 0x1, 0x1);
        gbc.writeMem(0xd2b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x41f3);
        EXPECT(gbc.pc(), 0xd2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0096
        gbc.setState(0xdb58, 0x30f6, 0x1900, 0x7082, 0xdd7c, 0x1e36, 0x0, 0x1);
        gbc.writeMem(0xdb58, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x30f6);
        EXPECT(gbc.pc(), 0xdb5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb58), 0xcb);
        EXPECT(gbc.readMem(0xdb59), 0x79);
        // CB 79 0098
        gbc.setState(0x3746, 0xf975, 0xd400, 0x107c, 0x2315, 0xdb6b, 0x0, 0x1);
        gbc.writeMem(0x3746, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf975);
        EXPECT(gbc.pc(), 0x3748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0099
        gbc.setState(0xa04e, 0x1b8b, 0x1260, 0xb8d1, 0xf526, 0x2213, 0x0, 0x0);
        gbc.writeMem(0xa04e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1b8b);
        EXPECT(gbc.pc(), 0xa050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa04e), 0xcb);
        EXPECT(gbc.readMem(0xa04f), 0x79);
        // CB 79 009A
        gbc.setState(0x4543, 0xf819, 0xbef0, 0x379d, 0xfd72, 0x357c, 0x0, 0x1);
        gbc.writeMem(0x4543, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf819);
        EXPECT(gbc.pc(), 0x4545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 009B
        gbc.setState(0x1e4f, 0xe1af, 0xadf0, 0x4c37, 0x7f54, 0x2d2b, 0x0, 0x0);
        gbc.writeMem(0x1e4f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe1af);
        EXPECT(gbc.pc(), 0x1e51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 009C
        gbc.setState(0x3d06, 0x1703, 0xb970, 0x85d6, 0xb263, 0x6e07, 0x1, 0x0);
        gbc.writeMem(0x3d06, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1703);
        EXPECT(gbc.pc(), 0x3d08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 009D
        gbc.setState(0x8806, 0xe743, 0x6080, 0x5e58, 0x3c46, 0x40e6, 0x0, 0x0);
        gbc.writeMem(0x8806, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe743);
        EXPECT(gbc.pc(), 0x8808);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8806), 0xcb);
        EXPECT(gbc.readMem(0x8807), 0x79);
        // CB 79 009E
        gbc.setState(0x73a3, 0x2d4b, 0x5f80, 0x2a29, 0x74fd, 0x66a, 0x1, 0x0);
        gbc.writeMem(0x73a3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x2d4b);
        EXPECT(gbc.pc(), 0x73a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 009F
        gbc.setState(0xb7a2, 0xc1e4, 0x1040, 0xea01, 0x3f30, 0x2b7b, 0x0, 0x0);
        gbc.writeMem(0xb7a2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc1e4);
        EXPECT(gbc.pc(), 0xb7a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7a2), 0xcb);
        EXPECT(gbc.readMem(0xb7a3), 0x79);
        // CB 79 00A0
        gbc.setState(0xe4ac, 0x2813, 0xc0e0, 0x44cd, 0x26f6, 0x8f7e, 0x0, 0x1);
        gbc.writeMem(0xe4ac, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2813);
        EXPECT(gbc.pc(), 0xe4ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4ac), 0xcb);
        EXPECT(gbc.readMem(0xe4ad), 0x79);
        // CB 79 00A1
        gbc.setState(0x927e, 0x2f7c, 0x1060, 0x5d1f, 0x2f2a, 0xcb0d, 0x0, 0x0);
        gbc.writeMem(0x927e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2f7c);
        EXPECT(gbc.pc(), 0x9280);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x927e), 0xcb);
        EXPECT(gbc.readMem(0x927f), 0x79);
        // CB 79 00A2
        gbc.setState(0xb4ed, 0x8b7e, 0xf670, 0x80e9, 0x548d, 0x26ad, 0x0, 0x0);
        gbc.writeMem(0xb4ed, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8b7e);
        EXPECT(gbc.pc(), 0xb4ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ed), 0xcb);
        EXPECT(gbc.readMem(0xb4ee), 0x79);
        // CB 79 00A3
        gbc.setState(0x88d0, 0xb652, 0x5640, 0x2250, 0x30e4, 0x6490, 0x0, 0x1);
        gbc.writeMem(0x88d0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xb652);
        EXPECT(gbc.pc(), 0x88d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88d0), 0xcb);
        EXPECT(gbc.readMem(0x88d1), 0x79);
        // CB 79 00A4
        gbc.setState(0x44b1, 0xac27, 0xfa80, 0x9138, 0xb325, 0xac57, 0x0, 0x0);
        gbc.writeMem(0x44b1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xac27);
        EXPECT(gbc.pc(), 0x44b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 00A5
        gbc.setState(0x5e8, 0x3d5f, 0x30c0, 0xf46a, 0x2565, 0xcccb, 0x0, 0x1);
        gbc.writeMem(0x5e8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3d5f);
        EXPECT(gbc.pc(), 0x5ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 00A6
        gbc.setState(0xa876, 0x1d29, 0xe690, 0x79e0, 0x2d9c, 0x5ed8, 0x1, 0x0);
        gbc.writeMem(0xa876, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1d29);
        EXPECT(gbc.pc(), 0xa878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa876), 0xcb);
        EXPECT(gbc.readMem(0xa877), 0x79);
        // CB 79 00A7
        gbc.setState(0x33d8, 0x5e11, 0x5f70, 0x34a2, 0xd185, 0x1201, 0x0, 0x1);
        gbc.writeMem(0x33d8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5e11);
        EXPECT(gbc.pc(), 0x33da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00A8
        gbc.setState(0xbf0d, 0x9433, 0xe230, 0x7a37, 0xd864, 0x144e, 0x0, 0x0);
        gbc.writeMem(0xbf0d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9433);
        EXPECT(gbc.pc(), 0xbf0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf0d), 0xcb);
        EXPECT(gbc.readMem(0xbf0e), 0x79);
        // CB 79 00A9
        gbc.setState(0x7d5d, 0xc22c, 0xc910, 0x7c51, 0x8f49, 0xbd3a, 0x0, 0x0);
        gbc.writeMem(0x7d5d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc22c);
        EXPECT(gbc.pc(), 0x7d5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00AA
        gbc.setState(0x2c7e, 0x407b, 0x8600, 0xdef7, 0x7a3c, 0x5c05, 0x1, 0x0);
        gbc.writeMem(0x2c7e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x407b);
        EXPECT(gbc.pc(), 0x2c80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 00AB
        gbc.setState(0x1cc5, 0x3810, 0x2960, 0xba3c, 0xd436, 0x9714, 0x1, 0x0);
        gbc.writeMem(0x1cc5, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3810);
        EXPECT(gbc.pc(), 0x1cc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 00AC
        gbc.setState(0x14d, 0x1077, 0x6800, 0x4d7, 0x81f0, 0x522, 0x1, 0x0);
        gbc.writeMem(0x14d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1077);
        EXPECT(gbc.pc(), 0x14f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 00AE
        gbc.setState(0xd952, 0xbc23, 0x6840, 0xed54, 0xdc19, 0xe013, 0x1, 0x0);
        gbc.writeMem(0xd952, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xbc23);
        EXPECT(gbc.pc(), 0xd954);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd952), 0xcb);
        EXPECT(gbc.readMem(0xd953), 0x79);
        // CB 79 00AF
        gbc.setState(0x52dd, 0xaacf, 0xfb10, 0xd164, 0xf53a, 0x86d3, 0x1, 0x0);
        gbc.writeMem(0x52dd, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xaacf);
        EXPECT(gbc.pc(), 0x52df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00B0
        gbc.setState(0x1d3, 0x94b5, 0x4a30, 0xdbb, 0x7861, 0x4a88, 0x1, 0x1);
        gbc.writeMem(0x1d3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x94b5);
        EXPECT(gbc.pc(), 0x1d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00B1
        gbc.setState(0x7360, 0x8c2, 0xc390, 0x17b, 0xca26, 0xd906, 0x1, 0x0);
        gbc.writeMem(0x7360, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x8c2);
        EXPECT(gbc.pc(), 0x7362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00B2
        gbc.setState(0xacd, 0xdf00, 0x6f60, 0xa9e4, 0x9df7, 0x8e06, 0x0, 0x1);
        gbc.writeMem(0xacd, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xdf00);
        EXPECT(gbc.pc(), 0xacf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 00B3
        gbc.setState(0x1f49, 0x4762, 0xa330, 0x556e, 0x18a, 0x3b9f, 0x0, 0x1);
        gbc.writeMem(0x1f49, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4762);
        EXPECT(gbc.pc(), 0x1f4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00B4
        gbc.setState(0x97f0, 0xf672, 0x4c0, 0x5332, 0xce5d, 0x581b, 0x0, 0x1);
        gbc.writeMem(0x97f0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf672);
        EXPECT(gbc.pc(), 0x97f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97f0), 0xcb);
        EXPECT(gbc.readMem(0x97f1), 0x79);
        // CB 79 00B5
        gbc.setState(0x6fc0, 0xacd4, 0xdbb0, 0xbe92, 0x3a40, 0xe468, 0x1, 0x1);
        gbc.writeMem(0x6fc0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xacd4);
        EXPECT(gbc.pc(), 0x6fc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00B6
        gbc.setState(0x77a8, 0xa9cb, 0x24e0, 0x1f76, 0xad47, 0x5d7c, 0x0, 0x0);
        gbc.writeMem(0x77a8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa9cb);
        EXPECT(gbc.pc(), 0x77aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 00B7
        gbc.setState(0xaba2, 0x7746, 0x2840, 0xbf67, 0x4557, 0x2c1d, 0x0, 0x0);
        gbc.writeMem(0xaba2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x7746);
        EXPECT(gbc.pc(), 0xaba4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaba2), 0xcb);
        EXPECT(gbc.readMem(0xaba3), 0x79);
        // CB 79 00B8
        gbc.setState(0x513, 0x6ff1, 0x8dc0, 0x1bf5, 0xcdb3, 0xfc1d, 0x0, 0x0);
        gbc.writeMem(0x513, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6ff1);
        EXPECT(gbc.pc(), 0x515);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 00B9
        gbc.setState(0x17a2, 0x670f, 0xd730, 0xa3a4, 0x6632, 0xf974, 0x1, 0x1);
        gbc.writeMem(0x17a2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x670f);
        EXPECT(gbc.pc(), 0x17a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00BA
        gbc.setState(0x2c4, 0xd4d6, 0x4e70, 0xe818, 0x8c53, 0x64ac, 0x0, 0x0);
        gbc.writeMem(0x2c4, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd4d6);
        EXPECT(gbc.pc(), 0x2c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00BC
        gbc.setState(0x757c, 0xc8b1, 0x2c30, 0xd593, 0x621, 0x62d7, 0x0, 0x1);
        gbc.writeMem(0x757c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc8b1);
        EXPECT(gbc.pc(), 0x757e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00BD
        gbc.setState(0x49fa, 0x7bb2, 0x5ac0, 0x92dc, 0x75c7, 0x3de6, 0x1, 0x0);
        gbc.writeMem(0x49fa, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7bb2);
        EXPECT(gbc.pc(), 0x49fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 00BE
        gbc.setState(0xdc40, 0x3f99, 0x50c0, 0x6faf, 0x9ad5, 0xd3a, 0x1, 0x1);
        gbc.writeMem(0xdc40, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3f99);
        EXPECT(gbc.pc(), 0xdc42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc40), 0xcb);
        EXPECT(gbc.readMem(0xdc41), 0x79);
        // CB 79 00BF
        gbc.setState(0x9da8, 0x89df, 0x3300, 0x73eb, 0xbb3, 0xd8ce, 0x1, 0x1);
        gbc.writeMem(0x9da8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x89df);
        EXPECT(gbc.pc(), 0x9daa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9da8), 0xcb);
        EXPECT(gbc.readMem(0x9da9), 0x79);
        // CB 79 00C0
        gbc.setState(0xc20, 0x645f, 0x9410, 0xb841, 0x3aac, 0x581a, 0x1, 0x1);
        gbc.writeMem(0xc20, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x645f);
        EXPECT(gbc.pc(), 0xc22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00C1
        gbc.setState(0x8f88, 0xa512, 0x80a0, 0x30b2, 0x1336, 0xd7ba, 0x1, 0x0);
        gbc.writeMem(0x8f88, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa512);
        EXPECT(gbc.pc(), 0x8f8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f88), 0xcb);
        EXPECT(gbc.readMem(0x8f89), 0x79);
        // CB 79 00C2
        gbc.setState(0x4267, 0x9272, 0x6130, 0xb71c, 0x3069, 0xdfff, 0x1, 0x0);
        gbc.writeMem(0x4267, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x9272);
        EXPECT(gbc.pc(), 0x4269);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00C4
        gbc.setState(0xc058, 0x73b, 0xb650, 0xaedc, 0xc622, 0xca36, 0x1, 0x1);
        gbc.writeMem(0xc058, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x73b);
        EXPECT(gbc.pc(), 0xc05a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc058), 0xcb);
        EXPECT(gbc.readMem(0xc059), 0x79);
        // CB 79 00C5
        gbc.setState(0x4ba9, 0xfc0a, 0x5140, 0xef81, 0x6ec0, 0xbd3b, 0x0, 0x0);
        gbc.writeMem(0x4ba9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xfc0a);
        EXPECT(gbc.pc(), 0x4bab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 00C6
        gbc.setState(0x93af, 0x4498, 0x4930, 0x7cc0, 0x8dff, 0xcc36, 0x1, 0x1);
        gbc.writeMem(0x93af, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4498);
        EXPECT(gbc.pc(), 0x93b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93af), 0xcb);
        EXPECT(gbc.readMem(0x93b0), 0x79);
        // CB 79 00C7
        gbc.setState(0xcd2c, 0x3f77, 0x2440, 0xf858, 0x9bb9, 0x4895, 0x1, 0x1);
        gbc.writeMem(0xcd2c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3f77);
        EXPECT(gbc.pc(), 0xcd2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd2c), 0xcb);
        EXPECT(gbc.readMem(0xcd2d), 0x79);
        // CB 79 00C8
        gbc.setState(0x7fd9, 0x247d, 0xf230, 0xb34d, 0x171b, 0xc871, 0x0, 0x1);
        gbc.writeMem(0x7fd9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x247d);
        EXPECT(gbc.pc(), 0x7fdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00C9
        gbc.setState(0x9a54, 0xd96c, 0x7820, 0x62ae, 0x5646, 0xa097, 0x1, 0x1);
        gbc.writeMem(0x9a54, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd96c);
        EXPECT(gbc.pc(), 0x9a56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a54), 0xcb);
        EXPECT(gbc.readMem(0x9a55), 0x79);
        // CB 79 00CA
        gbc.setState(0x4a47, 0xba5f, 0x62a0, 0x762b, 0xe172, 0xf0b, 0x1, 0x0);
        gbc.writeMem(0x4a47, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xba5f);
        EXPECT(gbc.pc(), 0x4a49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 00CB
        gbc.setState(0xa7f7, 0x6712, 0xd1c0, 0x27b1, 0xf4f7, 0xfbf1, 0x1, 0x1);
        gbc.writeMem(0xa7f7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6712);
        EXPECT(gbc.pc(), 0xa7f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7f7), 0xcb);
        EXPECT(gbc.readMem(0xa7f8), 0x79);
        // CB 79 00CD
        gbc.setState(0x4a26, 0x254e, 0x7b10, 0x5b75, 0xf4e6, 0x501, 0x0, 0x0);
        gbc.writeMem(0x4a26, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x254e);
        EXPECT(gbc.pc(), 0x4a28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00CE
        gbc.setState(0xa57f, 0x585d, 0xc070, 0xe1dc, 0x5460, 0xbfd4, 0x1, 0x1);
        gbc.writeMem(0xa57f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x585d);
        EXPECT(gbc.pc(), 0xa581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa57f), 0xcb);
        EXPECT(gbc.readMem(0xa580), 0x79);
        // CB 79 00CF
        gbc.setState(0x215f, 0xa5bb, 0x6d50, 0x726a, 0xac99, 0x4a26, 0x1, 0x0);
        gbc.writeMem(0x215f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xa5bb);
        EXPECT(gbc.pc(), 0x2161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00D0
        gbc.setState(0xb745, 0x4dd2, 0x80c0, 0x389b, 0x3f8d, 0x1756, 0x1, 0x1);
        gbc.writeMem(0xb745, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x4dd2);
        EXPECT(gbc.pc(), 0xb747);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb745), 0xcb);
        EXPECT(gbc.readMem(0xb746), 0x79);
        // CB 79 00D1
        gbc.setState(0x4671, 0x415e, 0xfb10, 0xc6d7, 0x2af2, 0xc140, 0x1, 0x1);
        gbc.writeMem(0x4671, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x415e);
        EXPECT(gbc.pc(), 0x4673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00D2
        gbc.setState(0x1722, 0x6df3, 0xc780, 0xf3d8, 0xabda, 0x72f0, 0x0, 0x0);
        gbc.writeMem(0x1722, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6df3);
        EXPECT(gbc.pc(), 0x1724);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 00D3
        gbc.setState(0x7111, 0xfacd, 0x7a60, 0xe594, 0x90c2, 0xecc3, 0x0, 0x1);
        gbc.writeMem(0x7111, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xfacd);
        EXPECT(gbc.pc(), 0x7113);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 00D4
        gbc.setState(0xcf30, 0x84e3, 0x63f0, 0x6153, 0xbc91, 0xf190, 0x1, 0x0);
        gbc.writeMem(0xcf30, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x84e3);
        EXPECT(gbc.pc(), 0xcf32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf30), 0xcb);
        EXPECT(gbc.readMem(0xcf31), 0x79);
        // CB 79 00D5
        gbc.setState(0x9b14, 0x85c1, 0x20e0, 0xf65d, 0x6a9b, 0xaa57, 0x1, 0x1);
        gbc.writeMem(0x9b14, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x85c1);
        EXPECT(gbc.pc(), 0x9b16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b14), 0xcb);
        EXPECT(gbc.readMem(0x9b15), 0x79);
        // CB 79 00D6
        gbc.setState(0xb069, 0x5472, 0x96b0, 0x2f52, 0x9f49, 0x9b3c, 0x1, 0x0);
        gbc.writeMem(0xb069, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x5472);
        EXPECT(gbc.pc(), 0xb06b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb069), 0xcb);
        EXPECT(gbc.readMem(0xb06a), 0x79);
        // CB 79 00D7
        gbc.setState(0x734d, 0xf4d1, 0xd230, 0xc14d, 0x4ee4, 0x3d5a, 0x0, 0x1);
        gbc.writeMem(0x734d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xf4d1);
        EXPECT(gbc.pc(), 0x734f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00D8
        gbc.setState(0x1481, 0xb869, 0x8370, 0x8218, 0xcf38, 0x87ef, 0x0, 0x0);
        gbc.writeMem(0x1481, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb869);
        EXPECT(gbc.pc(), 0x1483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00D9
        gbc.setState(0x867c, 0x77c0, 0x7860, 0xc197, 0xd4a6, 0xf162, 0x1, 0x1);
        gbc.writeMem(0x867c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x77c0);
        EXPECT(gbc.pc(), 0x867e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x867c), 0xcb);
        EXPECT(gbc.readMem(0x867d), 0x79);
        // CB 79 00DA
        gbc.setState(0x9ee9, 0xb7de, 0x8a50, 0x9606, 0x2281, 0xf74, 0x1, 0x0);
        gbc.writeMem(0x9ee9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb7de);
        EXPECT(gbc.pc(), 0x9eeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ee9), 0xcb);
        EXPECT(gbc.readMem(0x9eea), 0x79);
        // CB 79 00DB
        gbc.setState(0xce4b, 0xff2c, 0x41d0, 0x7f67, 0x5dff, 0xd5b0, 0x1, 0x1);
        gbc.writeMem(0xce4b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xff2c);
        EXPECT(gbc.pc(), 0xce4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce4b), 0xcb);
        EXPECT(gbc.readMem(0xce4c), 0x79);
        // CB 79 00DC
        gbc.setState(0x1ec5, 0x8155, 0xd8e0, 0xc227, 0x7751, 0x1357, 0x0, 0x1);
        gbc.writeMem(0x1ec5, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8155);
        EXPECT(gbc.pc(), 0x1ec7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 00DE
        gbc.setState(0x9129, 0xb975, 0xe200, 0x69ea, 0xf4ec, 0x605e, 0x0, 0x1);
        gbc.writeMem(0x9129, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb975);
        EXPECT(gbc.pc(), 0x912b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9129), 0xcb);
        EXPECT(gbc.readMem(0x912a), 0x79);
        // CB 79 00DF
        gbc.setState(0x8268, 0x473a, 0xd9d0, 0x8292, 0x7567, 0xcb1b, 0x1, 0x1);
        gbc.writeMem(0x8268, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x473a);
        EXPECT(gbc.pc(), 0x826a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8268), 0xcb);
        EXPECT(gbc.readMem(0x8269), 0x79);
        // CB 79 00E0
        gbc.setState(0xa7d1, 0x82c9, 0x5190, 0xe43, 0x88fe, 0xa2a4, 0x1, 0x1);
        gbc.writeMem(0xa7d1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x82c9);
        EXPECT(gbc.pc(), 0xa7d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7d1), 0xcb);
        EXPECT(gbc.readMem(0xa7d2), 0x79);
        // CB 79 00E1
        gbc.setState(0xbe30, 0xad4a, 0x6bd0, 0x435e, 0x5d49, 0xf3df, 0x1, 0x1);
        gbc.writeMem(0xbe30, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xad4a);
        EXPECT(gbc.pc(), 0xbe32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe30), 0xcb);
        EXPECT(gbc.readMem(0xbe31), 0x79);
        // CB 79 00E2
        gbc.setState(0x7c5e, 0x52c1, 0x2170, 0x8425, 0xe2b5, 0xa0db, 0x0, 0x0);
        gbc.writeMem(0x7c5e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x52c1);
        EXPECT(gbc.pc(), 0x7c60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00E3
        gbc.setState(0x266c, 0x880e, 0xf3d0, 0x2c9d, 0xa51f, 0x6c32, 0x1, 0x0);
        gbc.writeMem(0x266c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x880e);
        EXPECT(gbc.pc(), 0x266e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00E4
        gbc.setState(0x97d8, 0xcf45, 0xefb0, 0xbc92, 0xc2e1, 0x74a8, 0x0, 0x0);
        gbc.writeMem(0x97d8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xcf45);
        EXPECT(gbc.pc(), 0x97da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97d8), 0xcb);
        EXPECT(gbc.readMem(0x97d9), 0x79);
        // CB 79 00E5
        gbc.setState(0x8115, 0x5b5d, 0x5030, 0x763f, 0x9a90, 0x58b9, 0x1, 0x0);
        gbc.writeMem(0x8115, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5b5d);
        EXPECT(gbc.pc(), 0x8117);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8115), 0xcb);
        EXPECT(gbc.readMem(0x8116), 0x79);
        // CB 79 00E6
        gbc.setState(0x8319, 0x24a7, 0x7c90, 0x46b6, 0xf895, 0x2cad, 0x1, 0x1);
        gbc.writeMem(0x8319, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x24a7);
        EXPECT(gbc.pc(), 0x831b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8319), 0xcb);
        EXPECT(gbc.readMem(0x831a), 0x79);
        // CB 79 00E7
        gbc.setState(0x83ba, 0x3bac, 0x2c80, 0xa9d1, 0x651a, 0xeb5a, 0x0, 0x1);
        gbc.writeMem(0x83ba, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3bac);
        EXPECT(gbc.pc(), 0x83bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ba), 0xcb);
        EXPECT(gbc.readMem(0x83bb), 0x79);
        // CB 79 00E8
        gbc.setState(0x1232, 0xb1b0, 0xd9a0, 0x4908, 0x1ec4, 0x250d, 0x0, 0x1);
        gbc.writeMem(0x1232, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb1b0);
        EXPECT(gbc.pc(), 0x1234);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 00E9
        gbc.setState(0x2c13, 0x22b2, 0xa7c0, 0xade, 0x7bb1, 0x18fd, 0x0, 0x1);
        gbc.writeMem(0x2c13, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x22b2);
        EXPECT(gbc.pc(), 0x2c15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 00EA
        gbc.setState(0x964b, 0x6a63, 0x5ed0, 0x3290, 0x4f61, 0x5293, 0x0, 0x1);
        gbc.writeMem(0x964b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x6a63);
        EXPECT(gbc.pc(), 0x964d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x964b), 0xcb);
        EXPECT(gbc.readMem(0x964c), 0x79);
        // CB 79 00EC
        gbc.setState(0x2146, 0x1fb0, 0x7620, 0x50af, 0x2d2c, 0xc03, 0x0, 0x0);
        gbc.writeMem(0x2146, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1fb0);
        EXPECT(gbc.pc(), 0x2148);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 00ED
        gbc.setState(0x197d, 0x457e, 0xd760, 0x5463, 0x9d4d, 0xc63f, 0x0, 0x1);
        gbc.writeMem(0x197d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x457e);
        EXPECT(gbc.pc(), 0x197f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 00EE
        gbc.setState(0xc6dc, 0x55f3, 0xd9f0, 0x28e, 0x3938, 0xca93, 0x0, 0x1);
        gbc.writeMem(0xc6dc, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x55f3);
        EXPECT(gbc.pc(), 0xc6de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6dc), 0xcb);
        EXPECT(gbc.readMem(0xc6dd), 0x79);
        // CB 79 00EF
        gbc.setState(0x38ce, 0x8ba8, 0x2f10, 0x2204, 0xb030, 0x38f1, 0x0, 0x0);
        gbc.writeMem(0x38ce, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x8ba8);
        EXPECT(gbc.pc(), 0x38d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00F0
        gbc.setState(0x32c, 0x7e3c, 0x7230, 0xcda0, 0x5560, 0xa51b, 0x0, 0x1);
        gbc.writeMem(0x32c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7e3c);
        EXPECT(gbc.pc(), 0x32e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00F1
        gbc.setState(0xb2cd, 0x49b4, 0xe120, 0xd649, 0x6211, 0x7388, 0x1, 0x0);
        gbc.writeMem(0xb2cd, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x49b4);
        EXPECT(gbc.pc(), 0xb2cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2cd), 0xcb);
        EXPECT(gbc.readMem(0xb2ce), 0x79);
        // CB 79 00F2
        gbc.setState(0x58b7, 0x9ff5, 0x5610, 0x3a6, 0x5f19, 0xf8fd, 0x0, 0x0);
        gbc.writeMem(0x58b7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9ff5);
        EXPECT(gbc.pc(), 0x58b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00F3
        gbc.setState(0xe986, 0x9edc, 0x97a0, 0xe9ca, 0x3933, 0x34cc, 0x1, 0x0);
        gbc.writeMem(0xe986, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9edc);
        EXPECT(gbc.pc(), 0xe988);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe986), 0xcb);
        EXPECT(gbc.readMem(0xe987), 0x79);
        // CB 79 00F4
        gbc.setState(0xd980, 0x93b, 0x6cf0, 0x64d0, 0x9889, 0x83c2, 0x1, 0x0);
        gbc.writeMem(0xd980, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x93b);
        EXPECT(gbc.pc(), 0xd982);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd980), 0xcb);
        EXPECT(gbc.readMem(0xd981), 0x79);
        // CB 79 00F5
        gbc.setState(0x91fa, 0xc13e, 0xe230, 0x65f, 0xc371, 0xa617, 0x1, 0x0);
        gbc.writeMem(0x91fa, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc13e);
        EXPECT(gbc.pc(), 0x91fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91fa), 0xcb);
        EXPECT(gbc.readMem(0x91fb), 0x79);
        // CB 79 00F6
        gbc.setState(0xd979, 0x195d, 0xc570, 0x50ea, 0xdba2, 0x8a78, 0x1, 0x0);
        gbc.writeMem(0xd979, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x195d);
        EXPECT(gbc.pc(), 0xd97b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd979), 0xcb);
        EXPECT(gbc.readMem(0xd97a), 0x79);
        // CB 79 00F7
        gbc.setState(0x3f0d, 0xf0f1, 0xd570, 0x439a, 0x646e, 0x3c3b, 0x0, 0x0);
        gbc.writeMem(0x3f0d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf0f1);
        EXPECT(gbc.pc(), 0x3f0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 00F8
        gbc.setState(0x855d, 0x36eb, 0xef20, 0x9b5e, 0xd33b, 0x45f7, 0x0, 0x0);
        gbc.writeMem(0x855d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x36eb);
        EXPECT(gbc.pc(), 0x855f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x855d), 0xcb);
        EXPECT(gbc.readMem(0x855e), 0x79);
        // CB 79 00F9
        gbc.setState(0x1c53, 0x5df2, 0xbde0, 0xc856, 0x3304, 0x59ce, 0x0, 0x0);
        gbc.writeMem(0x1c53, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5df2);
        EXPECT(gbc.pc(), 0x1c55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 00FA
        gbc.setState(0x921a, 0x6cfa, 0x5e30, 0x5600, 0x504c, 0xbb2b, 0x0, 0x1);
        gbc.writeMem(0x921a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6cfa);
        EXPECT(gbc.pc(), 0x921c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x921a), 0xcb);
        EXPECT(gbc.readMem(0x921b), 0x79);
        // CB 79 00FB
        gbc.setState(0xbbe8, 0xbc20, 0x6340, 0x26cb, 0xe8e6, 0x83d6, 0x0, 0x0);
        gbc.writeMem(0xbbe8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xbc20);
        EXPECT(gbc.pc(), 0xbbea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbe8), 0xcb);
        EXPECT(gbc.readMem(0xbbe9), 0x79);
        // CB 79 00FC
        gbc.setState(0xe831, 0xfcf0, 0xdb20, 0xf393, 0x4807, 0xd03, 0x0, 0x0);
        gbc.writeMem(0xe831, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xfcf0);
        EXPECT(gbc.pc(), 0xe833);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe831), 0xcb);
        EXPECT(gbc.readMem(0xe832), 0x79);
        // CB 79 00FD
        gbc.setState(0xa9a6, 0x3674, 0xd560, 0x8e45, 0xd6d6, 0x103d, 0x0, 0x1);
        gbc.writeMem(0xa9a6, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3674);
        EXPECT(gbc.pc(), 0xa9a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9a6), 0xcb);
        EXPECT(gbc.readMem(0xa9a7), 0x79);
        // CB 79 00FE
        gbc.setState(0x977d, 0x8162, 0x2ab0, 0x1004, 0x38d9, 0xedec, 0x1, 0x1);
        gbc.writeMem(0x977d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8162);
        EXPECT(gbc.pc(), 0x977f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x977d), 0xcb);
        EXPECT(gbc.readMem(0x977e), 0x79);
        // CB 79 0100
        gbc.setState(0xce74, 0x8008, 0xd3b0, 0x2578, 0x5374, 0xd63c, 0x1, 0x0);
        gbc.writeMem(0xce74, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8008);
        EXPECT(gbc.pc(), 0xce76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce74), 0xcb);
        EXPECT(gbc.readMem(0xce75), 0x79);
        // CB 79 0101
        gbc.setState(0x914a, 0xfde6, 0x13d0, 0x4c6f, 0xac00, 0x510e, 0x1, 0x0);
        gbc.writeMem(0x914a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xfde6);
        EXPECT(gbc.pc(), 0x914c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x914a), 0xcb);
        EXPECT(gbc.readMem(0x914b), 0x79);
        // CB 79 0102
        gbc.setState(0xa561, 0x3baf, 0x9310, 0xe26d, 0xe01b, 0x5e29, 0x0, 0x0);
        gbc.writeMem(0xa561, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3baf);
        EXPECT(gbc.pc(), 0xa563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa561), 0xcb);
        EXPECT(gbc.readMem(0xa562), 0x79);
        // CB 79 0103
        gbc.setState(0x1a52, 0x5c70, 0xa730, 0x861b, 0xc52d, 0x9fca, 0x0, 0x1);
        gbc.writeMem(0x1a52, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5c70);
        EXPECT(gbc.pc(), 0x1a54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0104
        gbc.setState(0xe51e, 0xc008, 0xa6d0, 0xb5f3, 0x8954, 0xdf13, 0x1, 0x1);
        gbc.writeMem(0xe51e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc008);
        EXPECT(gbc.pc(), 0xe520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe51e), 0xcb);
        EXPECT(gbc.readMem(0xe51f), 0x79);
        // CB 79 0105
        gbc.setState(0xe540, 0xce41, 0xd480, 0x1a91, 0xeef1, 0x95ad, 0x0, 0x0);
        gbc.writeMem(0xe540, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xce41);
        EXPECT(gbc.pc(), 0xe542);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe540), 0xcb);
        EXPECT(gbc.readMem(0xe541), 0x79);
        // CB 79 0106
        gbc.setState(0x15e8, 0xe417, 0x9f20, 0xe34a, 0xdf2e, 0x860c, 0x1, 0x1);
        gbc.writeMem(0x15e8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe417);
        EXPECT(gbc.pc(), 0x15ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0107
        gbc.setState(0x1511, 0xabf4, 0xa370, 0x5683, 0x7205, 0xdc7d, 0x1, 0x1);
        gbc.writeMem(0x1511, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xabf4);
        EXPECT(gbc.pc(), 0x1513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0108
        gbc.setState(0x452, 0x491c, 0x2bc0, 0x583e, 0xea34, 0xd40c, 0x0, 0x0);
        gbc.writeMem(0x452, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x491c);
        EXPECT(gbc.pc(), 0x454);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0109
        gbc.setState(0x102c, 0x45f4, 0xcc40, 0xca6d, 0x35df, 0x729c, 0x1, 0x0);
        gbc.writeMem(0x102c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x45f4);
        EXPECT(gbc.pc(), 0x102e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 010A
        gbc.setState(0x4cfa, 0x70da, 0xf70, 0xc436, 0x57fc, 0x3357, 0x1, 0x1);
        gbc.writeMem(0x4cfa, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x70da);
        EXPECT(gbc.pc(), 0x4cfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 010B
        gbc.setState(0xb910, 0x9fea, 0x7a0, 0x102d, 0xb67b, 0x78ad, 0x0, 0x0);
        gbc.writeMem(0xb910, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9fea);
        EXPECT(gbc.pc(), 0xb912);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb910), 0xcb);
        EXPECT(gbc.readMem(0xb911), 0x79);
        // CB 79 010C
        gbc.setState(0x2e46, 0xbcff, 0xe250, 0xb2ea, 0xf58b, 0x40d6, 0x0, 0x1);
        gbc.writeMem(0x2e46, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xbcff);
        EXPECT(gbc.pc(), 0x2e48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 010D
        gbc.setState(0xdcf1, 0xfcf, 0xbe90, 0xfe3c, 0x4589, 0xd6fe, 0x1, 0x0);
        gbc.writeMem(0xdcf1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xfcf);
        EXPECT(gbc.pc(), 0xdcf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcf1), 0xcb);
        EXPECT(gbc.readMem(0xdcf2), 0x79);
        // CB 79 010E
        gbc.setState(0xdf5, 0x44c6, 0x3ab0, 0xdefb, 0x826b, 0x8db0, 0x1, 0x0);
        gbc.writeMem(0xdf5, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x44c6);
        EXPECT(gbc.pc(), 0xdf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 010F
        gbc.setState(0xed9, 0x9faf, 0x9f50, 0xb6de, 0xec54, 0x6d6b, 0x0, 0x0);
        gbc.writeMem(0xed9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9faf);
        EXPECT(gbc.pc(), 0xedb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0111
        gbc.setState(0x9eda, 0xb3af, 0xf7c0, 0xcf48, 0x6579, 0x8c4e, 0x0, 0x0);
        gbc.writeMem(0x9eda, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xb3af);
        EXPECT(gbc.pc(), 0x9edc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eda), 0xcb);
        EXPECT(gbc.readMem(0x9edb), 0x79);
        // CB 79 0112
        gbc.setState(0xcd68, 0xc218, 0xf200, 0xf9d1, 0xd276, 0xe79c, 0x1, 0x1);
        gbc.writeMem(0xcd68, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc218);
        EXPECT(gbc.pc(), 0xcd6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd68), 0xcb);
        EXPECT(gbc.readMem(0xcd69), 0x79);
        // CB 79 0113
        gbc.setState(0x3214, 0x9a69, 0x8730, 0xfd5e, 0x5685, 0xe634, 0x0, 0x1);
        gbc.writeMem(0x3214, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9a69);
        EXPECT(gbc.pc(), 0x3216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0114
        gbc.setState(0x7312, 0x644e, 0x39a0, 0x7251, 0x3428, 0x79f9, 0x0, 0x1);
        gbc.writeMem(0x7312, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x644e);
        EXPECT(gbc.pc(), 0x7314);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0115
        gbc.setState(0x349d, 0xdc27, 0x1630, 0xeb31, 0x7707, 0xc81, 0x1, 0x1);
        gbc.writeMem(0x349d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xdc27);
        EXPECT(gbc.pc(), 0x349f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0116
        gbc.setState(0x11cc, 0x97f7, 0xdfe0, 0xbc92, 0xf096, 0x462e, 0x0, 0x1);
        gbc.writeMem(0x11cc, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x97f7);
        EXPECT(gbc.pc(), 0x11ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0117
        gbc.setState(0x4d32, 0x6cb8, 0xeba0, 0xeda0, 0x7341, 0xd865, 0x0, 0x0);
        gbc.writeMem(0x4d32, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6cb8);
        EXPECT(gbc.pc(), 0x4d34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0118
        gbc.setState(0x9caa, 0x7b7c, 0x67d0, 0x723a, 0x58d9, 0xe3e9, 0x0, 0x0);
        gbc.writeMem(0x9caa, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7b7c);
        EXPECT(gbc.pc(), 0x9cac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9caa), 0xcb);
        EXPECT(gbc.readMem(0x9cab), 0x79);
        // CB 79 0119
        gbc.setState(0x6bc0, 0x2d3d, 0x4a90, 0x32eb, 0xde0d, 0x6e6c, 0x0, 0x0);
        gbc.writeMem(0x6bc0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2d3d);
        EXPECT(gbc.pc(), 0x6bc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 011A
        gbc.setState(0x563b, 0x491e, 0x5070, 0xd09a, 0x6d9c, 0x5e27, 0x0, 0x0);
        gbc.writeMem(0x563b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x491e);
        EXPECT(gbc.pc(), 0x563d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 011B
        gbc.setState(0xa0b, 0x1410, 0x570, 0xdc61, 0x4928, 0x86ae, 0x0, 0x1);
        gbc.writeMem(0xa0b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1410);
        EXPECT(gbc.pc(), 0xa0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 011C
        gbc.setState(0x208f, 0x55ad, 0x5410, 0x11a7, 0x126b, 0x3b13, 0x1, 0x1);
        gbc.writeMem(0x208f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x55ad);
        EXPECT(gbc.pc(), 0x2091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 011D
        gbc.setState(0xdde2, 0x3c84, 0x48e0, 0xe2fc, 0x307, 0x2081, 0x1, 0x1);
        gbc.writeMem(0xdde2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3c84);
        EXPECT(gbc.pc(), 0xdde4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdde2), 0xcb);
        EXPECT(gbc.readMem(0xdde3), 0x79);
        // CB 79 011E
        gbc.setState(0xa800, 0xf283, 0x5900, 0xa111, 0xbf3a, 0x6859, 0x0, 0x1);
        gbc.writeMem(0xa800, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf283);
        EXPECT(gbc.pc(), 0xa802);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa800), 0xcb);
        EXPECT(gbc.readMem(0xa801), 0x79);
        // CB 79 011F
        gbc.setState(0x78ad, 0x4817, 0x950, 0xd88b, 0x6b08, 0x8044, 0x0, 0x1);
        gbc.writeMem(0x78ad, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x4817);
        EXPECT(gbc.pc(), 0x78af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0120
        gbc.setState(0x74ae, 0xbcac, 0x190, 0x9491, 0x3739, 0xf1cb, 0x0, 0x0);
        gbc.writeMem(0x74ae, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xbcac);
        EXPECT(gbc.pc(), 0x74b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0121
        gbc.setState(0x1965, 0x42d5, 0xb610, 0x5574, 0xbd14, 0x906f, 0x0, 0x1);
        gbc.writeMem(0x1965, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x42d5);
        EXPECT(gbc.pc(), 0x1967);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0122
        gbc.setState(0xe5ba, 0x91b, 0x97c0, 0x5ea3, 0x3910, 0x13db, 0x0, 0x1);
        gbc.writeMem(0xe5ba, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x91b);
        EXPECT(gbc.pc(), 0xe5bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5ba), 0xcb);
        EXPECT(gbc.readMem(0xe5bb), 0x79);
        // CB 79 0123
        gbc.setState(0xb1cf, 0xdc7f, 0x7030, 0x79bc, 0x2da8, 0x78ac, 0x1, 0x0);
        gbc.writeMem(0xb1cf, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xdc7f);
        EXPECT(gbc.pc(), 0xb1d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1cf), 0xcb);
        EXPECT(gbc.readMem(0xb1d0), 0x79);
        // CB 79 0124
        gbc.setState(0xbd6a, 0x4336, 0xa8b0, 0xbd99, 0x194a, 0x4586, 0x0, 0x1);
        gbc.writeMem(0xbd6a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4336);
        EXPECT(gbc.pc(), 0xbd6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd6a), 0xcb);
        EXPECT(gbc.readMem(0xbd6b), 0x79);
        // CB 79 0125
        gbc.setState(0x13ae, 0x7a70, 0xa460, 0xbaed, 0x1e95, 0x4dec, 0x1, 0x0);
        gbc.writeMem(0x13ae, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7a70);
        EXPECT(gbc.pc(), 0x13b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0126
        gbc.setState(0xb730, 0x8c6f, 0x52a0, 0xb2e6, 0x25e5, 0x7cb1, 0x0, 0x0);
        gbc.writeMem(0xb730, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8c6f);
        EXPECT(gbc.pc(), 0xb732);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb730), 0xcb);
        EXPECT(gbc.readMem(0xb731), 0x79);
        // CB 79 0127
        gbc.setState(0x5a4a, 0x573b, 0xb170, 0xf62a, 0x3994, 0xb287, 0x1, 0x0);
        gbc.writeMem(0x5a4a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x573b);
        EXPECT(gbc.pc(), 0x5a4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0128
        gbc.setState(0x1609, 0x1367, 0xcf90, 0xb8e9, 0x5302, 0xd221, 0x0, 0x0);
        gbc.writeMem(0x1609, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1367);
        EXPECT(gbc.pc(), 0x160b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0129
        gbc.setState(0x4fc4, 0x93b9, 0xa570, 0xea5a, 0xf08e, 0x8315, 0x0, 0x0);
        gbc.writeMem(0x4fc4, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x93b9);
        EXPECT(gbc.pc(), 0x4fc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 012A
        gbc.setState(0x5ea, 0xf52d, 0x7fe0, 0xbc27, 0x97d2, 0xc913, 0x0, 0x0);
        gbc.writeMem(0x5ea, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf52d);
        EXPECT(gbc.pc(), 0x5ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 012B
        gbc.setState(0x5dac, 0x6806, 0x9c10, 0xfcb9, 0x7366, 0xcca8, 0x0, 0x0);
        gbc.writeMem(0x5dac, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6806);
        EXPECT(gbc.pc(), 0x5dae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 012C
        gbc.setState(0xcdee, 0x4097, 0xb360, 0x30b4, 0x4d16, 0x12c5, 0x1, 0x1);
        gbc.writeMem(0xcdee, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4097);
        EXPECT(gbc.pc(), 0xcdf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdee), 0xcb);
        EXPECT(gbc.readMem(0xcdef), 0x79);
        // CB 79 012D
        gbc.setState(0x9ffc, 0x738c, 0xe080, 0x5062, 0x1e91, 0x886b, 0x1, 0x1);
        gbc.writeMem(0x9ffc, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x738c);
        EXPECT(gbc.pc(), 0x9ffe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ffc), 0xcb);
        EXPECT(gbc.readMem(0x9ffd), 0x79);
        // CB 79 012F
        gbc.setState(0x3099, 0x87, 0x3f50, 0xee59, 0x2f5a, 0x515f, 0x1, 0x1);
        gbc.writeMem(0x3099, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x87);
        EXPECT(gbc.pc(), 0x309b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0130
        gbc.setState(0xb0a9, 0x42ca, 0xc0f0, 0x311, 0xedd, 0x820a, 0x0, 0x0);
        gbc.writeMem(0xb0a9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x42ca);
        EXPECT(gbc.pc(), 0xb0ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0a9), 0xcb);
        EXPECT(gbc.readMem(0xb0aa), 0x79);
        // CB 79 0131
        gbc.setState(0x321c, 0x2d7a, 0xfcd0, 0x3615, 0x524d, 0xbe07, 0x0, 0x1);
        gbc.writeMem(0x321c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2d7a);
        EXPECT(gbc.pc(), 0x321e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0132
        gbc.setState(0xb8d, 0x9022, 0xf040, 0xa841, 0x2bb, 0x3e39, 0x0, 0x1);
        gbc.writeMem(0xb8d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9022);
        EXPECT(gbc.pc(), 0xb8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0133
        gbc.setState(0xe75d, 0xf6a9, 0xd820, 0xb2fc, 0xa03a, 0x85b, 0x0, 0x1);
        gbc.writeMem(0xe75d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf6a9);
        EXPECT(gbc.pc(), 0xe75f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe75d), 0xcb);
        EXPECT(gbc.readMem(0xe75e), 0x79);
        // CB 79 0134
        gbc.setState(0x9abd, 0xf07f, 0xacc0, 0x6916, 0xa202, 0x36e7, 0x1, 0x0);
        gbc.writeMem(0x9abd, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf07f);
        EXPECT(gbc.pc(), 0x9abf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9abd), 0xcb);
        EXPECT(gbc.readMem(0x9abe), 0x79);
        // CB 79 0135
        gbc.setState(0x9a42, 0x14c7, 0x8c70, 0x3fdc, 0x9d6f, 0xaf56, 0x0, 0x1);
        gbc.writeMem(0x9a42, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x14c7);
        EXPECT(gbc.pc(), 0x9a44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a42), 0xcb);
        EXPECT(gbc.readMem(0x9a43), 0x79);
        // CB 79 0136
        gbc.setState(0x51f8, 0x23ed, 0xa110, 0xa29, 0xadd0, 0x3c84, 0x1, 0x1);
        gbc.writeMem(0x51f8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x23ed);
        EXPECT(gbc.pc(), 0x51fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0137
        gbc.setState(0x8bbd, 0xfe30, 0x73d0, 0xb47f, 0x8228, 0xbb3f, 0x1, 0x0);
        gbc.writeMem(0x8bbd, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xfe30);
        EXPECT(gbc.pc(), 0x8bbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bbd), 0xcb);
        EXPECT(gbc.readMem(0x8bbe), 0x79);
        // CB 79 0138
        gbc.setState(0x2a24, 0xc233, 0x8da0, 0x9108, 0x949b, 0xa646, 0x0, 0x1);
        gbc.writeMem(0x2a24, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc233);
        EXPECT(gbc.pc(), 0x2a26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0139
        gbc.setState(0x99fd, 0xcb21, 0xf90, 0x3980, 0xda9b, 0x550b, 0x0, 0x1);
        gbc.writeMem(0x99fd, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xcb21);
        EXPECT(gbc.pc(), 0x99ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99fd), 0xcb);
        EXPECT(gbc.readMem(0x99fe), 0x79);
        // CB 79 013A
        gbc.setState(0xb2df, 0x3fb5, 0xcf0, 0x2902, 0x168a, 0x68ca, 0x1, 0x1);
        gbc.writeMem(0xb2df, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3fb5);
        EXPECT(gbc.pc(), 0xb2e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2df), 0xcb);
        EXPECT(gbc.readMem(0xb2e0), 0x79);
        // CB 79 013B
        gbc.setState(0x85ff, 0xd07f, 0x45d0, 0xc414, 0x5551, 0xa16d, 0x0, 0x0);
        gbc.writeMem(0x85ff, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xd07f);
        EXPECT(gbc.pc(), 0x8601);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85ff), 0xcb);
        EXPECT(gbc.readMem(0x8600), 0x79);
        // CB 79 013C
        gbc.setState(0x5875, 0xafef, 0x1f30, 0xfafc, 0xf636, 0x7f38, 0x1, 0x0);
        gbc.writeMem(0x5875, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xafef);
        EXPECT(gbc.pc(), 0x5877);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 013D
        gbc.setState(0xe434, 0xad5e, 0xb5e0, 0xb287, 0xb715, 0xf5db, 0x1, 0x1);
        gbc.writeMem(0xe434, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xad5e);
        EXPECT(gbc.pc(), 0xe436);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe434), 0xcb);
        EXPECT(gbc.readMem(0xe435), 0x79);
        // CB 79 013E
        gbc.setState(0x34c1, 0x31ba, 0xa360, 0xaef6, 0x5438, 0x9972, 0x0, 0x1);
        gbc.writeMem(0x34c1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x31ba);
        EXPECT(gbc.pc(), 0x34c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 013F
        gbc.setState(0xbbd5, 0x38e2, 0xaf10, 0x6bcf, 0x41d5, 0xd918, 0x0, 0x0);
        gbc.writeMem(0xbbd5, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x38e2);
        EXPECT(gbc.pc(), 0xbbd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbd5), 0xcb);
        EXPECT(gbc.readMem(0xbbd6), 0x79);
        // CB 79 0140
        gbc.setState(0x8a2f, 0xc967, 0xd600, 0x1a0d, 0x28db, 0xbcde, 0x1, 0x0);
        gbc.writeMem(0x8a2f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc967);
        EXPECT(gbc.pc(), 0x8a31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a2f), 0xcb);
        EXPECT(gbc.readMem(0x8a30), 0x79);
        // CB 79 0141
        gbc.setState(0x7a99, 0xd609, 0x7cb0, 0x28ee, 0x3225, 0xde88, 0x0, 0x0);
        gbc.writeMem(0x7a99, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd609);
        EXPECT(gbc.pc(), 0x7a9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0142
        gbc.setState(0xe828, 0x552a, 0xfb90, 0xd003, 0x5971, 0xb412, 0x1, 0x0);
        gbc.writeMem(0xe828, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x552a);
        EXPECT(gbc.pc(), 0xe82a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe828), 0xcb);
        EXPECT(gbc.readMem(0xe829), 0x79);
        // CB 79 0143
        gbc.setState(0xc221, 0x5b3e, 0xe8f0, 0xffef, 0xa0b9, 0x9a79, 0x1, 0x1);
        gbc.writeMem(0xc221, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x5b3e);
        EXPECT(gbc.pc(), 0xc223);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc221), 0xcb);
        EXPECT(gbc.readMem(0xc222), 0x79);
        // CB 79 0144
        gbc.setState(0xea08, 0xc8b8, 0xfe00, 0xa166, 0x86b2, 0x4cf9, 0x0, 0x1);
        gbc.writeMem(0xea08, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc8b8);
        EXPECT(gbc.pc(), 0xea0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea08), 0xcb);
        EXPECT(gbc.readMem(0xea09), 0x79);
        // CB 79 0145
        gbc.setState(0xe75e, 0x45cf, 0xd830, 0x60aa, 0x9798, 0x2794, 0x1, 0x0);
        gbc.writeMem(0xe75e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x45cf);
        EXPECT(gbc.pc(), 0xe760);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe75e), 0xcb);
        EXPECT(gbc.readMem(0xe75f), 0x79);
        // CB 79 0147
        gbc.setState(0x3c19, 0x9135, 0xd880, 0x5c0d, 0x10bc, 0xcc8e, 0x1, 0x0);
        gbc.writeMem(0x3c19, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9135);
        EXPECT(gbc.pc(), 0x3c1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0148
        gbc.setState(0xd882, 0x51b2, 0xe0d0, 0x727c, 0x326e, 0xe39b, 0x0, 0x1);
        gbc.writeMem(0xd882, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x51b2);
        EXPECT(gbc.pc(), 0xd884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd882), 0xcb);
        EXPECT(gbc.readMem(0xd883), 0x79);
        // CB 79 0149
        gbc.setState(0x9792, 0xb6d8, 0xf0a0, 0x16a9, 0xe2d, 0x720c, 0x1, 0x0);
        gbc.writeMem(0x9792, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb6d8);
        EXPECT(gbc.pc(), 0x9794);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9792), 0xcb);
        EXPECT(gbc.readMem(0x9793), 0x79);
        // CB 79 014A
        gbc.setState(0x17f8, 0x8573, 0xf6c0, 0xe5f4, 0xe969, 0xe40e, 0x0, 0x0);
        gbc.writeMem(0x17f8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8573);
        EXPECT(gbc.pc(), 0x17fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 014B
        gbc.setState(0xb05b, 0x4d8e, 0x7aa0, 0x75dc, 0x25a7, 0x6890, 0x0, 0x1);
        gbc.writeMem(0xb05b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4d8e);
        EXPECT(gbc.pc(), 0xb05d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb05b), 0xcb);
        EXPECT(gbc.readMem(0xb05c), 0x79);
        // CB 79 014C
        gbc.setState(0xc446, 0xa3cd, 0x5a20, 0x8e2f, 0x9a89, 0x44c3, 0x1, 0x0);
        gbc.writeMem(0xc446, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa3cd);
        EXPECT(gbc.pc(), 0xc448);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc446), 0xcb);
        EXPECT(gbc.readMem(0xc447), 0x79);
        // CB 79 014D
        gbc.setState(0xd12, 0xb0f5, 0x5370, 0x2b2e, 0xa130, 0x2626, 0x0, 0x1);
        gbc.writeMem(0xd12, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb0f5);
        EXPECT(gbc.pc(), 0xd14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 014E
        gbc.setState(0xee59, 0x5c1a, 0xf3c0, 0x5b11, 0xbfe7, 0xd0fc, 0x0, 0x0);
        gbc.writeMem(0xee59, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x5c1a);
        EXPECT(gbc.pc(), 0xee5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee59), 0xcb);
        EXPECT(gbc.readMem(0xee5a), 0x79);
        // CB 79 014F
        gbc.setState(0x29f5, 0xde91, 0xe850, 0x75f7, 0x2cda, 0xe2a1, 0x1, 0x1);
        gbc.writeMem(0x29f5, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xde91);
        EXPECT(gbc.pc(), 0x29f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0150
        gbc.setState(0x8727, 0x75dd, 0x15e0, 0x3eec, 0x5efd, 0xb0e5, 0x1, 0x0);
        gbc.writeMem(0x8727, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x75dd);
        EXPECT(gbc.pc(), 0x8729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8727), 0xcb);
        EXPECT(gbc.readMem(0x8728), 0x79);
        // CB 79 0151
        gbc.setState(0x2860, 0x2d1b, 0x94a0, 0x35df, 0x5308, 0xbfec, 0x1, 0x1);
        gbc.writeMem(0x2860, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2d1b);
        EXPECT(gbc.pc(), 0x2862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0152
        gbc.setState(0x86c6, 0x4408, 0x4580, 0x99a0, 0xffa3, 0xec77, 0x1, 0x1);
        gbc.writeMem(0x86c6, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4408);
        EXPECT(gbc.pc(), 0x86c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86c6), 0xcb);
        EXPECT(gbc.readMem(0x86c7), 0x79);
        // CB 79 0153
        gbc.setState(0x45f, 0x41f3, 0x7760, 0x2298, 0xd321, 0x4ec5, 0x1, 0x1);
        gbc.writeMem(0x45f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x41f3);
        EXPECT(gbc.pc(), 0x461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0154
        gbc.setState(0x18c3, 0x4e94, 0xed70, 0xc248, 0xb70d, 0xc777, 0x1, 0x0);
        gbc.writeMem(0x18c3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4e94);
        EXPECT(gbc.pc(), 0x18c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0155
        gbc.setState(0xa674, 0x999f, 0xcd0, 0x8ec2, 0x3bfe, 0xa4d2, 0x1, 0x1);
        gbc.writeMem(0xa674, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x999f);
        EXPECT(gbc.pc(), 0xa676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa674), 0xcb);
        EXPECT(gbc.readMem(0xa675), 0x79);
        // CB 79 0156
        gbc.setState(0xe129, 0x9f1f, 0x4dc0, 0x5424, 0x9f42, 0x9de9, 0x1, 0x0);
        gbc.writeMem(0xe129, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9f1f);
        EXPECT(gbc.pc(), 0xe12b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe129), 0xcb);
        EXPECT(gbc.readMem(0xe12a), 0x79);
        // CB 79 0157
        gbc.setState(0xcb02, 0xf84a, 0x2070, 0x81a8, 0xe31, 0x9ece, 0x1, 0x1);
        gbc.writeMem(0xcb02, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf84a);
        EXPECT(gbc.pc(), 0xcb04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb02), 0xcb);
        EXPECT(gbc.readMem(0xcb03), 0x79);
        // CB 79 0158
        gbc.setState(0x9e6d, 0x7712, 0x69d0, 0xce66, 0x2177, 0xace7, 0x0, 0x0);
        gbc.writeMem(0x9e6d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7712);
        EXPECT(gbc.pc(), 0x9e6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e6d), 0xcb);
        EXPECT(gbc.readMem(0x9e6e), 0x79);
        // CB 79 0159
        gbc.setState(0x8452, 0x27ea, 0x9b50, 0xf315, 0x7f75, 0x12cb, 0x1, 0x0);
        gbc.writeMem(0x8452, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x27ea);
        EXPECT(gbc.pc(), 0x8454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8452), 0xcb);
        EXPECT(gbc.readMem(0x8453), 0x79);
        // CB 79 015A
        gbc.setState(0x4a0e, 0xdbc3, 0x2820, 0x3fe6, 0x17c7, 0xf14a, 0x0, 0x1);
        gbc.writeMem(0x4a0e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xdbc3);
        EXPECT(gbc.pc(), 0x4a10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 015B
        gbc.setState(0x9a6e, 0xa56b, 0x6340, 0xa960, 0x429b, 0x7853, 0x0, 0x0);
        gbc.writeMem(0x9a6e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xa56b);
        EXPECT(gbc.pc(), 0x9a70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a6e), 0xcb);
        EXPECT(gbc.readMem(0x9a6f), 0x79);
        // CB 79 015C
        gbc.setState(0x5751, 0xf57c, 0x2b70, 0x4967, 0x885c, 0x291b, 0x0, 0x0);
        gbc.writeMem(0x5751, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf57c);
        EXPECT(gbc.pc(), 0x5753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 015D
        gbc.setState(0xe7bf, 0x9e7c, 0x9530, 0x13da, 0x5dbd, 0x2b83, 0x0, 0x1);
        gbc.writeMem(0xe7bf, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9e7c);
        EXPECT(gbc.pc(), 0xe7c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7bf), 0xcb);
        EXPECT(gbc.readMem(0xe7c0), 0x79);
        // CB 79 015E
        gbc.setState(0x70f3, 0x2ac5, 0x1c70, 0x4273, 0xc41e, 0xc06d, 0x0, 0x1);
        gbc.writeMem(0x70f3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2ac5);
        EXPECT(gbc.pc(), 0x70f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 015F
        gbc.setState(0x3880, 0x710d, 0xbae0, 0xba40, 0x8974, 0xd4e3, 0x1, 0x1);
        gbc.writeMem(0x3880, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x710d);
        EXPECT(gbc.pc(), 0x3882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0160
        gbc.setState(0x56d9, 0x7ab4, 0xd090, 0x945, 0x4cfd, 0xc62c, 0x1, 0x0);
        gbc.writeMem(0x56d9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7ab4);
        EXPECT(gbc.pc(), 0x56db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0161
        gbc.setState(0x3c51, 0x4402, 0x39a0, 0x59e5, 0xe6c2, 0x71f6, 0x0, 0x0);
        gbc.writeMem(0x3c51, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4402);
        EXPECT(gbc.pc(), 0x3c53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0162
        gbc.setState(0x4cce, 0x9360, 0x90, 0xdc41, 0xa371, 0x5090, 0x0, 0x0);
        gbc.writeMem(0x4cce, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9360);
        EXPECT(gbc.pc(), 0x4cd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0163
        gbc.setState(0x9ec6, 0x26d8, 0xb520, 0xb8c7, 0x8e8, 0xbee3, 0x1, 0x0);
        gbc.writeMem(0x9ec6, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x26d8);
        EXPECT(gbc.pc(), 0x9ec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ec6), 0xcb);
        EXPECT(gbc.readMem(0x9ec7), 0x79);
        // CB 79 0164
        gbc.setState(0x3589, 0x80aa, 0xfbe0, 0xd33, 0x275d, 0x3706, 0x1, 0x1);
        gbc.writeMem(0x3589, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x80aa);
        EXPECT(gbc.pc(), 0x358b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0165
        gbc.setState(0xe8be, 0x4708, 0xb930, 0xb43b, 0xcd69, 0x9b34, 0x1, 0x1);
        gbc.writeMem(0xe8be, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4708);
        EXPECT(gbc.pc(), 0xe8c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8be), 0xcb);
        EXPECT(gbc.readMem(0xe8bf), 0x79);
        // CB 79 0166
        gbc.setState(0x8e49, 0x85da, 0x3750, 0xdcce, 0x526b, 0x1842, 0x0, 0x1);
        gbc.writeMem(0x8e49, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x85da);
        EXPECT(gbc.pc(), 0x8e4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e49), 0xcb);
        EXPECT(gbc.readMem(0x8e4a), 0x79);
        // CB 79 0167
        gbc.setState(0xbd7f, 0x8bcc, 0x4ce0, 0x7b24, 0xe758, 0xa299, 0x0, 0x0);
        gbc.writeMem(0xbd7f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8bcc);
        EXPECT(gbc.pc(), 0xbd81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd7f), 0xcb);
        EXPECT(gbc.readMem(0xbd80), 0x79);
        // CB 79 0168
        gbc.setState(0x77f8, 0xc6b2, 0xba70, 0xc5f5, 0x40c7, 0xeb1c, 0x1, 0x1);
        gbc.writeMem(0x77f8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc6b2);
        EXPECT(gbc.pc(), 0x77fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0169
        gbc.setState(0x9523, 0xb229, 0xd380, 0x92e2, 0xc061, 0xc8e6, 0x1, 0x0);
        gbc.writeMem(0x9523, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb229);
        EXPECT(gbc.pc(), 0x9525);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9523), 0xcb);
        EXPECT(gbc.readMem(0x9524), 0x79);
        // CB 79 016A
        gbc.setState(0x53df, 0x2226, 0xb0e0, 0xb1a6, 0xab71, 0x22bb, 0x1, 0x0);
        gbc.writeMem(0x53df, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2226);
        EXPECT(gbc.pc(), 0x53e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 016B
        gbc.setState(0x4a42, 0xab6b, 0xc3c0, 0xeff1, 0xcb9a, 0x7308, 0x1, 0x0);
        gbc.writeMem(0x4a42, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xab6b);
        EXPECT(gbc.pc(), 0x4a44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 016C
        gbc.setState(0xb645, 0x29d8, 0x9880, 0xa97d, 0xd34a, 0xe70f, 0x0, 0x0);
        gbc.writeMem(0xb645, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x29d8);
        EXPECT(gbc.pc(), 0xb647);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb645), 0xcb);
        EXPECT(gbc.readMem(0xb646), 0x79);
        // CB 79 016D
        gbc.setState(0x65fa, 0xaf3d, 0x4360, 0xc657, 0x4f1f, 0xb9d, 0x1, 0x1);
        gbc.writeMem(0x65fa, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xaf3d);
        EXPECT(gbc.pc(), 0x65fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 016E
        gbc.setState(0x3610, 0xfaa1, 0xba20, 0xbf81, 0x3951, 0x9865, 0x0, 0x0);
        gbc.writeMem(0x3610, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xfaa1);
        EXPECT(gbc.pc(), 0x3612);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 016F
        gbc.setState(0x317f, 0xada0, 0x34f0, 0x3f61, 0x64e9, 0x4043, 0x1, 0x0);
        gbc.writeMem(0x317f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xada0);
        EXPECT(gbc.pc(), 0x3181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0170
        gbc.setState(0xe97a, 0xd8e4, 0x7670, 0xb479, 0x9831, 0xc5a1, 0x0, 0x1);
        gbc.writeMem(0xe97a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd8e4);
        EXPECT(gbc.pc(), 0xe97c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe97a), 0xcb);
        EXPECT(gbc.readMem(0xe97b), 0x79);
        // CB 79 0171
        gbc.setState(0xae7a, 0xcea0, 0xb0b0, 0x5f47, 0xc0fe, 0x27a1, 0x0, 0x1);
        gbc.writeMem(0xae7a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xcea0);
        EXPECT(gbc.pc(), 0xae7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae7a), 0xcb);
        EXPECT(gbc.readMem(0xae7b), 0x79);
        // CB 79 0172
        gbc.setState(0x52b9, 0x64f9, 0x4ab0, 0x854d, 0xd77, 0xb8a, 0x1, 0x1);
        gbc.writeMem(0x52b9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x64f9);
        EXPECT(gbc.pc(), 0x52bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0173
        gbc.setState(0x5aec, 0x1a9, 0xf5a0, 0xc8d4, 0x5cd, 0xc65e, 0x0, 0x1);
        gbc.writeMem(0x5aec, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1a9);
        EXPECT(gbc.pc(), 0x5aee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0174
        gbc.setState(0x2094, 0x44f, 0x58e0, 0xeec4, 0x2a47, 0xe795, 0x0, 0x1);
        gbc.writeMem(0x2094, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x44f);
        EXPECT(gbc.pc(), 0x2096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0175
        gbc.setState(0x22be, 0xc5ec, 0x6990, 0x1d49, 0x77be, 0x3ecf, 0x1, 0x0);
        gbc.writeMem(0x22be, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc5ec);
        EXPECT(gbc.pc(), 0x22c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0176
        gbc.setState(0x2d8, 0x7b9a, 0xce70, 0xb67a, 0xa781, 0x4698, 0x1, 0x1);
        gbc.writeMem(0x2d8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7b9a);
        EXPECT(gbc.pc(), 0x2da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0177
        gbc.setState(0x2993, 0x9d9, 0xf620, 0xb156, 0x227b, 0x251a, 0x1, 0x0);
        gbc.writeMem(0x2993, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9d9);
        EXPECT(gbc.pc(), 0x2995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0178
        gbc.setState(0x55cf, 0x5d96, 0xb010, 0xbced, 0xd72d, 0xe666, 0x1, 0x0);
        gbc.writeMem(0x55cf, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5d96);
        EXPECT(gbc.pc(), 0x55d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0179
        gbc.setState(0x1c19, 0x66f8, 0x6f30, 0x5034, 0x20fc, 0xe0c1, 0x0, 0x1);
        gbc.writeMem(0x1c19, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x66f8);
        EXPECT(gbc.pc(), 0x1c1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 017A
        gbc.setState(0xb746, 0x969b, 0x56a0, 0x343a, 0x565d, 0xedcf, 0x0, 0x1);
        gbc.writeMem(0xb746, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x969b);
        EXPECT(gbc.pc(), 0xb748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb746), 0xcb);
        EXPECT(gbc.readMem(0xb747), 0x79);
        // CB 79 017C
        gbc.setState(0xb1cd, 0x75e7, 0x7d30, 0x2a7c, 0x1257, 0xa182, 0x1, 0x0);
        gbc.writeMem(0xb1cd, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x75e7);
        EXPECT(gbc.pc(), 0xb1cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1cd), 0xcb);
        EXPECT(gbc.readMem(0xb1ce), 0x79);
        // CB 79 017D
        gbc.setState(0x3ca9, 0xb292, 0x3280, 0x75bd, 0x4b45, 0xd126, 0x0, 0x1);
        gbc.writeMem(0x3ca9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb292);
        EXPECT(gbc.pc(), 0x3cab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 017E
        gbc.setState(0x8ba9, 0x1a39, 0x2a60, 0xce12, 0xc4c, 0x3a79, 0x0, 0x1);
        gbc.writeMem(0x8ba9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x1a39);
        EXPECT(gbc.pc(), 0x8bab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ba9), 0xcb);
        EXPECT(gbc.readMem(0x8baa), 0x79);
        // CB 79 017F
        gbc.setState(0xc471, 0xe901, 0xe200, 0xd3fc, 0xacb4, 0x952e, 0x0, 0x1);
        gbc.writeMem(0xc471, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe901);
        EXPECT(gbc.pc(), 0xc473);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc471), 0xcb);
        EXPECT(gbc.readMem(0xc472), 0x79);
        // CB 79 0180
        gbc.setState(0xa0d8, 0xc958, 0xbd30, 0x468e, 0xb85b, 0xeba8, 0x1, 0x1);
        gbc.writeMem(0xa0d8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc958);
        EXPECT(gbc.pc(), 0xa0da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0d8), 0xcb);
        EXPECT(gbc.readMem(0xa0d9), 0x79);
        // CB 79 0181
        gbc.setState(0xbce8, 0xd625, 0x7d20, 0xa20b, 0x88d9, 0xba57, 0x1, 0x1);
        gbc.writeMem(0xbce8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd625);
        EXPECT(gbc.pc(), 0xbcea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbce8), 0xcb);
        EXPECT(gbc.readMem(0xbce9), 0x79);
        // CB 79 0182
        gbc.setState(0x39e1, 0x102, 0x68a0, 0xb882, 0x4495, 0xe07d, 0x1, 0x1);
        gbc.writeMem(0x39e1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x102);
        EXPECT(gbc.pc(), 0x39e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0183
        gbc.setState(0x25fb, 0x678a, 0x1e90, 0xde7a, 0x1bc, 0xad75, 0x1, 0x0);
        gbc.writeMem(0x25fb, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x678a);
        EXPECT(gbc.pc(), 0x25fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0184
        gbc.setState(0x47ff, 0x4d09, 0x19c0, 0xead2, 0x594a, 0xfcd8, 0x1, 0x1);
        gbc.writeMem(0x47ff, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x4d09);
        EXPECT(gbc.pc(), 0x4801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0185
        gbc.setState(0xd626, 0x3f5, 0x160, 0x60e8, 0xc929, 0xbff5, 0x0, 0x1);
        gbc.writeMem(0xd626, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x3f5);
        EXPECT(gbc.pc(), 0xd628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd626), 0xcb);
        EXPECT(gbc.readMem(0xd627), 0x79);
        // CB 79 0186
        gbc.setState(0x9f09, 0x3f17, 0xcfa0, 0xf02d, 0xecdc, 0xc1b1, 0x1, 0x1);
        gbc.writeMem(0x9f09, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3f17);
        EXPECT(gbc.pc(), 0x9f0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f09), 0xcb);
        EXPECT(gbc.readMem(0x9f0a), 0x79);
        // CB 79 0187
        gbc.setState(0x93f2, 0x25a0, 0xca50, 0x8422, 0x21ba, 0x40aa, 0x1, 0x1);
        gbc.writeMem(0x93f2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x25a0);
        EXPECT(gbc.pc(), 0x93f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93f2), 0xcb);
        EXPECT(gbc.readMem(0x93f3), 0x79);
        // CB 79 0188
        gbc.setState(0x5538, 0x1565, 0x4360, 0x2def, 0xc8e8, 0x8571, 0x0, 0x0);
        gbc.writeMem(0x5538, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x1565);
        EXPECT(gbc.pc(), 0x553a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0189
        gbc.setState(0x73eb, 0x8562, 0x2a80, 0xe668, 0x3812, 0xb520, 0x0, 0x0);
        gbc.writeMem(0x73eb, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8562);
        EXPECT(gbc.pc(), 0x73ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 018A
        gbc.setState(0xbbe8, 0x7ec0, 0x7970, 0x416b, 0xb5c0, 0x71ec, 0x0, 0x0);
        gbc.writeMem(0xbbe8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7ec0);
        EXPECT(gbc.pc(), 0xbbea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe8), 0xcb);
        EXPECT(gbc.readMem(0xbbe9), 0x79);
        // CB 79 018B
        gbc.setState(0x6107, 0x7506, 0x98e0, 0x1ef5, 0x5c9f, 0x9ce3, 0x1, 0x0);
        gbc.writeMem(0x6107, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x7506);
        EXPECT(gbc.pc(), 0x6109);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 018C
        gbc.setState(0x75be, 0x2bea, 0xc70, 0x8186, 0x66f1, 0xcfbe, 0x0, 0x1);
        gbc.writeMem(0x75be, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x2bea);
        EXPECT(gbc.pc(), 0x75c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 018D
        gbc.setState(0x4e49, 0xe889, 0xf30, 0x6776, 0xf4e8, 0x56b6, 0x0, 0x0);
        gbc.writeMem(0x4e49, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe889);
        EXPECT(gbc.pc(), 0x4e4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 018E
        gbc.setState(0x6e8e, 0xf4ff, 0x46f0, 0x3a63, 0x3b8c, 0x1578, 0x0, 0x1);
        gbc.writeMem(0x6e8e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf4ff);
        EXPECT(gbc.pc(), 0x6e90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 018F
        gbc.setState(0x1aac, 0x5815, 0x76a0, 0x189f, 0xad45, 0x82b5, 0x0, 0x1);
        gbc.writeMem(0x1aac, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5815);
        EXPECT(gbc.pc(), 0x1aae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0190
        gbc.setState(0x84e1, 0x3f6f, 0x7e50, 0xe985, 0x3030, 0x1627, 0x0, 0x0);
        gbc.writeMem(0x84e1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3f6f);
        EXPECT(gbc.pc(), 0x84e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84e1), 0xcb);
        EXPECT(gbc.readMem(0x84e2), 0x79);
        // CB 79 0191
        gbc.setState(0x8729, 0x1165, 0x3a40, 0xca0e, 0x1adc, 0xff83, 0x0, 0x0);
        gbc.writeMem(0x8729, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1165);
        EXPECT(gbc.pc(), 0x872b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8729), 0xcb);
        EXPECT(gbc.readMem(0x872a), 0x79);
        // CB 79 0192
        gbc.setState(0xdc73, 0x611c, 0xead0, 0xef23, 0x991e, 0x5f47, 0x1, 0x0);
        gbc.writeMem(0xdc73, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x611c);
        EXPECT(gbc.pc(), 0xdc75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc73), 0xcb);
        EXPECT(gbc.readMem(0xdc74), 0x79);
        // CB 79 0193
        gbc.setState(0xad2, 0x47e4, 0xc630, 0x603, 0x2925, 0x9552, 0x1, 0x1);
        gbc.writeMem(0xad2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x47e4);
        EXPECT(gbc.pc(), 0xad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0194
        gbc.setState(0x530c, 0x26d5, 0x9c20, 0x4cdc, 0x2a0e, 0xe8b8, 0x0, 0x0);
        gbc.writeMem(0x530c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x26d5);
        EXPECT(gbc.pc(), 0x530e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0195
        gbc.setState(0x10d6, 0x9036, 0x80d0, 0xb553, 0xe65f, 0x845a, 0x1, 0x1);
        gbc.writeMem(0x10d6, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9036);
        EXPECT(gbc.pc(), 0x10d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0196
        gbc.setState(0xd5e9, 0x65c8, 0xd970, 0x5432, 0x3362, 0xb93c, 0x1, 0x0);
        gbc.writeMem(0xd5e9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x65c8);
        EXPECT(gbc.pc(), 0xd5eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5e9), 0xcb);
        EXPECT(gbc.readMem(0xd5ea), 0x79);
        // CB 79 0197
        gbc.setState(0x1567, 0x9c10, 0x63c0, 0x359, 0xd3f6, 0xcc01, 0x0, 0x1);
        gbc.writeMem(0x1567, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9c10);
        EXPECT(gbc.pc(), 0x1569);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0199
        gbc.setState(0xc3c6, 0x74cf, 0xf5b0, 0x464a, 0xe3fb, 0x2246, 0x0, 0x0);
        gbc.writeMem(0xc3c6, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x74cf);
        EXPECT(gbc.pc(), 0xc3c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3c6), 0xcb);
        EXPECT(gbc.readMem(0xc3c7), 0x79);
        // CB 79 019A
        gbc.setState(0x86b7, 0xcdec, 0x6990, 0x8da2, 0x82f4, 0xb4ef, 0x1, 0x1);
        gbc.writeMem(0x86b7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xcdec);
        EXPECT(gbc.pc(), 0x86b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86b7), 0xcb);
        EXPECT(gbc.readMem(0x86b8), 0x79);
        // CB 79 019B
        gbc.setState(0x4eaf, 0x66af, 0x86d0, 0x686c, 0x7bec, 0x6db9, 0x0, 0x1);
        gbc.writeMem(0x4eaf, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x66af);
        EXPECT(gbc.pc(), 0x4eb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 019C
        gbc.setState(0x1282, 0x3b51, 0xaaf0, 0x2336, 0x4fad, 0xee05, 0x0, 0x0);
        gbc.writeMem(0x1282, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3b51);
        EXPECT(gbc.pc(), 0x1284);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 019D
        gbc.setState(0x148, 0xeddc, 0x4450, 0xb2ac, 0x4b9f, 0x33b0, 0x0, 0x1);
        gbc.writeMem(0x148, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xeddc);
        EXPECT(gbc.pc(), 0x14a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 019E
        gbc.setState(0x3442, 0x3fc4, 0x1670, 0x7278, 0x61aa, 0x8bcc, 0x0, 0x0);
        gbc.writeMem(0x3442, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x3fc4);
        EXPECT(gbc.pc(), 0x3444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 019F
        gbc.setState(0x7d27, 0xb881, 0xf60, 0x5c2b, 0xcf23, 0x3f7f, 0x1, 0x0);
        gbc.writeMem(0x7d27, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb881);
        EXPECT(gbc.pc(), 0x7d29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01A0
        gbc.setState(0x3f5b, 0x21ed, 0xf680, 0xb28a, 0xf912, 0x63eb, 0x0, 0x0);
        gbc.writeMem(0x3f5b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x21ed);
        EXPECT(gbc.pc(), 0x3f5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01A1
        gbc.setState(0x3761, 0x3683, 0x2780, 0xb377, 0x28d2, 0x40f5, 0x1, 0x0);
        gbc.writeMem(0x3761, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x3683);
        EXPECT(gbc.pc(), 0x3763);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01A2
        gbc.setState(0xabf6, 0x18f3, 0x8720, 0xac63, 0x83f8, 0x3250, 0x1, 0x0);
        gbc.writeMem(0xabf6, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x18f3);
        EXPECT(gbc.pc(), 0xabf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabf6), 0xcb);
        EXPECT(gbc.readMem(0xabf7), 0x79);
        // CB 79 01A3
        gbc.setState(0xbd36, 0xc6f9, 0xb620, 0x4401, 0x58f, 0x5e17, 0x0, 0x0);
        gbc.writeMem(0xbd36, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc6f9);
        EXPECT(gbc.pc(), 0xbd38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd36), 0xcb);
        EXPECT(gbc.readMem(0xbd37), 0x79);
        // CB 79 01A4
        gbc.setState(0xd495, 0xd851, 0x8710, 0x163, 0x1e3b, 0x7058, 0x0, 0x1);
        gbc.writeMem(0xd495, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xd851);
        EXPECT(gbc.pc(), 0xd497);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd495), 0xcb);
        EXPECT(gbc.readMem(0xd496), 0x79);
        // CB 79 01A5
        gbc.setState(0xc960, 0xfee3, 0xb6d0, 0xe010, 0x97d7, 0x609a, 0x1, 0x0);
        gbc.writeMem(0xc960, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xfee3);
        EXPECT(gbc.pc(), 0xc962);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc960), 0xcb);
        EXPECT(gbc.readMem(0xc961), 0x79);
        // CB 79 01A6
        gbc.setState(0x18df, 0xdbb1, 0xd900, 0x85e1, 0x2d2b, 0x3c67, 0x0, 0x1);
        gbc.writeMem(0x18df, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xdbb1);
        EXPECT(gbc.pc(), 0x18e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01A7
        gbc.setState(0x749, 0x9fee, 0x2e20, 0xa4e3, 0x7854, 0x73b0, 0x1, 0x1);
        gbc.writeMem(0x749, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9fee);
        EXPECT(gbc.pc(), 0x74b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01A8
        gbc.setState(0x2a1, 0x5c43, 0x2e60, 0xf34d, 0xcc84, 0xea4a, 0x1, 0x0);
        gbc.writeMem(0x2a1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5c43);
        EXPECT(gbc.pc(), 0x2a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01A9
        gbc.setState(0xb06b, 0x784e, 0x5c0, 0xfc53, 0x9fff, 0xa77c, 0x0, 0x0);
        gbc.writeMem(0xb06b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x784e);
        EXPECT(gbc.pc(), 0xb06d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb06b), 0xcb);
        EXPECT(gbc.readMem(0xb06c), 0x79);
        // CB 79 01AA
        gbc.setState(0x6671, 0xab13, 0xc420, 0x4928, 0xb59f, 0xc063, 0x0, 0x1);
        gbc.writeMem(0x6671, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xab13);
        EXPECT(gbc.pc(), 0x6673);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01AC
        gbc.setState(0xa548, 0x291d, 0x7a10, 0x51e0, 0xe8e5, 0x7ae9, 0x0, 0x1);
        gbc.writeMem(0xa548, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x291d);
        EXPECT(gbc.pc(), 0xa54a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa548), 0xcb);
        EXPECT(gbc.readMem(0xa549), 0x79);
        // CB 79 01AD
        gbc.setState(0xe79b, 0xa1f7, 0x1660, 0x1e8c, 0x89e8, 0xfbd5, 0x0, 0x1);
        gbc.writeMem(0xe79b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa1f7);
        EXPECT(gbc.pc(), 0xe79d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe79b), 0xcb);
        EXPECT(gbc.readMem(0xe79c), 0x79);
        // CB 79 01AE
        gbc.setState(0x26c2, 0x7b5c, 0xb4e0, 0x1a79, 0xba0e, 0x628e, 0x1, 0x0);
        gbc.writeMem(0x26c2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7b5c);
        EXPECT(gbc.pc(), 0x26c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01AF
        gbc.setState(0x67bd, 0xd42a, 0x6850, 0x3ed1, 0x9dcb, 0x3b0b, 0x0, 0x0);
        gbc.writeMem(0x67bd, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd42a);
        EXPECT(gbc.pc(), 0x67bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01B0
        gbc.setState(0x3ba1, 0xb5a3, 0x30, 0x5b51, 0x3189, 0xcc2b, 0x1, 0x1);
        gbc.writeMem(0x3ba1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb5a3);
        EXPECT(gbc.pc(), 0x3ba3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01B1
        gbc.setState(0x57de, 0x7b8a, 0x75e0, 0xf95e, 0xc85, 0xb9a1, 0x1, 0x1);
        gbc.writeMem(0x57de, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7b8a);
        EXPECT(gbc.pc(), 0x57e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01B2
        gbc.setState(0x2696, 0x698f, 0xc610, 0x48c3, 0x7bb6, 0xeefa, 0x1, 0x1);
        gbc.writeMem(0x2696, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x698f);
        EXPECT(gbc.pc(), 0x2698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01B3
        gbc.setState(0x63c5, 0x61a1, 0x16c0, 0x5815, 0xb961, 0x9bb1, 0x1, 0x1);
        gbc.writeMem(0x63c5, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x61a1);
        EXPECT(gbc.pc(), 0x63c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01B4
        gbc.setState(0x3f2c, 0x5d2, 0x6500, 0xae20, 0x1a54, 0xb752, 0x1, 0x1);
        gbc.writeMem(0x3f2c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5d2);
        EXPECT(gbc.pc(), 0x3f2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01B5
        gbc.setState(0xe72, 0xa771, 0x21b0, 0x55ef, 0xeb31, 0x940c, 0x0, 0x0);
        gbc.writeMem(0xe72, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa771);
        EXPECT(gbc.pc(), 0xe74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01B6
        gbc.setState(0xc6d0, 0xa118, 0x4ea0, 0x5a22, 0xa148, 0xea4c, 0x0, 0x0);
        gbc.writeMem(0xc6d0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa118);
        EXPECT(gbc.pc(), 0xc6d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6d0), 0xcb);
        EXPECT(gbc.readMem(0xc6d1), 0x79);
        // CB 79 01B7
        gbc.setState(0x5a76, 0x2246, 0xb2c0, 0xcad6, 0x2d21, 0xf574, 0x0, 0x1);
        gbc.writeMem(0x5a76, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2246);
        EXPECT(gbc.pc(), 0x5a78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01B8
        gbc.setState(0x8124, 0xb132, 0xe380, 0x46cd, 0x20f7, 0x7914, 0x0, 0x0);
        gbc.writeMem(0x8124, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb132);
        EXPECT(gbc.pc(), 0x8126);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8124), 0xcb);
        EXPECT(gbc.readMem(0x8125), 0x79);
        // CB 79 01B9
        gbc.setState(0xe019, 0x9cd3, 0xc6c0, 0x9bbb, 0xfd99, 0x2a8d, 0x1, 0x1);
        gbc.writeMem(0xe019, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x9cd3);
        EXPECT(gbc.pc(), 0xe01b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe019), 0xcb);
        EXPECT(gbc.readMem(0xe01a), 0x79);
        // CB 79 01BA
        gbc.setState(0x6f8, 0x8a80, 0x6f50, 0x4402, 0xfa74, 0xf9e0, 0x1, 0x0);
        gbc.writeMem(0x6f8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8a80);
        EXPECT(gbc.pc(), 0x6fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01BB
        gbc.setState(0xc9c3, 0x8c0d, 0xcd20, 0x4a7d, 0xbd6a, 0x9947, 0x0, 0x0);
        gbc.writeMem(0xc9c3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8c0d);
        EXPECT(gbc.pc(), 0xc9c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9c3), 0xcb);
        EXPECT(gbc.readMem(0xc9c4), 0x79);
        // CB 79 01BC
        gbc.setState(0x63ac, 0xe6de, 0xa870, 0xdcfc, 0xf816, 0x868c, 0x0, 0x1);
        gbc.writeMem(0x63ac, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe6de);
        EXPECT(gbc.pc(), 0x63ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01BD
        gbc.setState(0xd354, 0xedad, 0xc490, 0x310e, 0xd4e0, 0x6000, 0x1, 0x0);
        gbc.writeMem(0xd354, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xedad);
        EXPECT(gbc.pc(), 0xd356);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd354), 0xcb);
        EXPECT(gbc.readMem(0xd355), 0x79);
        // CB 79 01BE
        gbc.setState(0xb034, 0x7cb2, 0x3dd0, 0xbf12, 0x353d, 0xe0a1, 0x1, 0x0);
        gbc.writeMem(0xb034, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7cb2);
        EXPECT(gbc.pc(), 0xb036);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb034), 0xcb);
        EXPECT(gbc.readMem(0xb035), 0x79);
        // CB 79 01BF
        gbc.setState(0x7308, 0x54b7, 0x30b0, 0x4d77, 0x9b4d, 0x894b, 0x1, 0x0);
        gbc.writeMem(0x7308, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x54b7);
        EXPECT(gbc.pc(), 0x730a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01C0
        gbc.setState(0xd2dc, 0xc7d7, 0xfd70, 0x232, 0x91ad, 0x1e43, 0x0, 0x0);
        gbc.writeMem(0xd2dc, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc7d7);
        EXPECT(gbc.pc(), 0xd2de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2dc), 0xcb);
        EXPECT(gbc.readMem(0xd2dd), 0x79);
        // CB 79 01C1
        gbc.setState(0x628e, 0xdfbf, 0xe0d0, 0xafdd, 0xad05, 0xb827, 0x0, 0x0);
        gbc.writeMem(0x628e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xdfbf);
        EXPECT(gbc.pc(), 0x6290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01C2
        gbc.setState(0xbefb, 0x7769, 0x2550, 0xde70, 0xd84a, 0xa9a2, 0x1, 0x1);
        gbc.writeMem(0xbefb, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7769);
        EXPECT(gbc.pc(), 0xbefd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbefb), 0xcb);
        EXPECT(gbc.readMem(0xbefc), 0x79);
        // CB 79 01C3
        gbc.setState(0x322e, 0x9e26, 0xb4e0, 0x6641, 0x181e, 0xf23d, 0x0, 0x1);
        gbc.writeMem(0x322e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9e26);
        EXPECT(gbc.pc(), 0x3230);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01C4
        gbc.setState(0xa266, 0x48bd, 0x780, 0xa810, 0x5c41, 0x1317, 0x0, 0x1);
        gbc.writeMem(0xa266, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x48bd);
        EXPECT(gbc.pc(), 0xa268);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa266), 0xcb);
        EXPECT(gbc.readMem(0xa267), 0x79);
        // CB 79 01C5
        gbc.setState(0x2dac, 0x5557, 0xdc10, 0xf3c0, 0x296c, 0xf2b5, 0x1, 0x1);
        gbc.writeMem(0x2dac, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5557);
        EXPECT(gbc.pc(), 0x2dae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01C6
        gbc.setState(0xe127, 0xff6a, 0xaf20, 0x6e6b, 0xd60a, 0xfd3d, 0x0, 0x0);
        gbc.writeMem(0xe127, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xff6a);
        EXPECT(gbc.pc(), 0xe129);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe127), 0xcb);
        EXPECT(gbc.readMem(0xe128), 0x79);
        // CB 79 01C7
        gbc.setState(0x1ab9, 0x7750, 0xe910, 0x2be7, 0x766, 0x6e96, 0x1, 0x1);
        gbc.writeMem(0x1ab9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7750);
        EXPECT(gbc.pc(), 0x1abb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01C8
        gbc.setState(0x9609, 0xec33, 0xc640, 0x5cb4, 0x4ea8, 0xf506, 0x0, 0x1);
        gbc.writeMem(0x9609, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xec33);
        EXPECT(gbc.pc(), 0x960b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9609), 0xcb);
        EXPECT(gbc.readMem(0x960a), 0x79);
        // CB 79 01C9
        gbc.setState(0x598b, 0x95f6, 0x57d0, 0xa63d, 0x802a, 0x579a, 0x1, 0x0);
        gbc.writeMem(0x598b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x95f6);
        EXPECT(gbc.pc(), 0x598d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01CA
        gbc.setState(0xc087, 0xd687, 0xb8d0, 0x114, 0x13ec, 0x906a, 0x0, 0x0);
        gbc.writeMem(0xc087, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd687);
        EXPECT(gbc.pc(), 0xc089);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc087), 0xcb);
        EXPECT(gbc.readMem(0xc088), 0x79);
        // CB 79 01CB
        gbc.setState(0x4dad, 0x36, 0x2c30, 0x71c4, 0x3804, 0xba30, 0x0, 0x1);
        gbc.writeMem(0x4dad, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x36);
        EXPECT(gbc.pc(), 0x4daf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01CC
        gbc.setState(0xb863, 0x271a, 0x8b70, 0x16df, 0xc7c, 0x8f4d, 0x1, 0x0);
        gbc.writeMem(0xb863, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x271a);
        EXPECT(gbc.pc(), 0xb865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb863), 0xcb);
        EXPECT(gbc.readMem(0xb864), 0x79);
        // CB 79 01CD
        gbc.setState(0xb54e, 0x6fc9, 0xc310, 0x4d7f, 0x5f0d, 0x56f1, 0x1, 0x0);
        gbc.writeMem(0xb54e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6fc9);
        EXPECT(gbc.pc(), 0xb550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb54e), 0xcb);
        EXPECT(gbc.readMem(0xb54f), 0x79);
        // CB 79 01CE
        gbc.setState(0x7a6, 0x226, 0xf360, 0x4040, 0x78a8, 0xa340, 0x0, 0x0);
        gbc.writeMem(0x7a6, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x226);
        EXPECT(gbc.pc(), 0x7a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01CF
        gbc.setState(0x2b09, 0xf09b, 0x4e40, 0x25e2, 0x295a, 0xc9d7, 0x1, 0x1);
        gbc.writeMem(0x2b09, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf09b);
        EXPECT(gbc.pc(), 0x2b0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01D0
        gbc.setState(0x4926, 0x2bf7, 0x7830, 0xdf8f, 0xb1fd, 0x8138, 0x1, 0x1);
        gbc.writeMem(0x4926, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2bf7);
        EXPECT(gbc.pc(), 0x4928);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01D1
        gbc.setState(0x66ea, 0x66d7, 0x8190, 0xc7cb, 0x416c, 0xeafd, 0x1, 0x1);
        gbc.writeMem(0x66ea, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x66d7);
        EXPECT(gbc.pc(), 0x66ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01D3
        gbc.setState(0xdeb2, 0x7512, 0xaa20, 0x3710, 0x86b1, 0x9839, 0x0, 0x0);
        gbc.writeMem(0xdeb2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7512);
        EXPECT(gbc.pc(), 0xdeb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeb2), 0xcb);
        EXPECT(gbc.readMem(0xdeb3), 0x79);
        // CB 79 01D4
        gbc.setState(0x99e1, 0x3e24, 0xb1b0, 0x9401, 0x43c, 0x9e59, 0x0, 0x0);
        gbc.writeMem(0x99e1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x3e24);
        EXPECT(gbc.pc(), 0x99e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99e1), 0xcb);
        EXPECT(gbc.readMem(0x99e2), 0x79);
        // CB 79 01D5
        gbc.setState(0xd51d, 0x7c6, 0x120, 0x1bd4, 0xb9c0, 0x125a, 0x1, 0x0);
        gbc.writeMem(0xd51d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x7c6);
        EXPECT(gbc.pc(), 0xd51f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd51d), 0xcb);
        EXPECT(gbc.readMem(0xd51e), 0x79);
        // CB 79 01D7
        gbc.setState(0x5d76, 0xfb57, 0x8530, 0x66ae, 0xbcb6, 0x4f4, 0x0, 0x1);
        gbc.writeMem(0x5d76, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xfb57);
        EXPECT(gbc.pc(), 0x5d78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01D8
        gbc.setState(0x92a3, 0xfb86, 0xb440, 0x627a, 0xca1b, 0xf4a6, 0x1, 0x1);
        gbc.writeMem(0x92a3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xfb86);
        EXPECT(gbc.pc(), 0x92a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92a3), 0xcb);
        EXPECT(gbc.readMem(0x92a4), 0x79);
        // CB 79 01D9
        gbc.setState(0xeb38, 0xa88f, 0xd3b0, 0x8a98, 0x5bb2, 0x7078, 0x0, 0x0);
        gbc.writeMem(0xeb38, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa88f);
        EXPECT(gbc.pc(), 0xeb3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb38), 0xcb);
        EXPECT(gbc.readMem(0xeb39), 0x79);
        // CB 79 01DA
        gbc.setState(0x6845, 0x8229, 0x9210, 0x7cec, 0x14f0, 0xe10c, 0x0, 0x1);
        gbc.writeMem(0x6845, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8229);
        EXPECT(gbc.pc(), 0x6847);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01DB
        gbc.setState(0x11b1, 0x6a19, 0xb0d0, 0x6611, 0x265e, 0x8232, 0x1, 0x0);
        gbc.writeMem(0x11b1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6a19);
        EXPECT(gbc.pc(), 0x11b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01DC
        gbc.setState(0x4f8f, 0xfd4, 0x4e60, 0x42e8, 0xb0de, 0x61e2, 0x0, 0x1);
        gbc.writeMem(0x4f8f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xfd4);
        EXPECT(gbc.pc(), 0x4f91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01DD
        gbc.setState(0x860a, 0xb306, 0xcb0, 0x7aae, 0xe6a7, 0x9cca, 0x1, 0x1);
        gbc.writeMem(0x860a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xb306);
        EXPECT(gbc.pc(), 0x860c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x860a), 0xcb);
        EXPECT(gbc.readMem(0x860b), 0x79);
        // CB 79 01DE
        gbc.setState(0x6e5b, 0xc236, 0x5200, 0x159c, 0xf887, 0xe59c, 0x0, 0x1);
        gbc.writeMem(0x6e5b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc236);
        EXPECT(gbc.pc(), 0x6e5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01DF
        gbc.setState(0x2eb3, 0xf07a, 0x2010, 0x3b32, 0x7a29, 0x15f0, 0x1, 0x0);
        gbc.writeMem(0x2eb3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf07a);
        EXPECT(gbc.pc(), 0x2eb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01E0
        gbc.setState(0x2abf, 0x6971, 0x4f90, 0x653c, 0xdaa1, 0x9e5f, 0x1, 0x0);
        gbc.writeMem(0x2abf, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x6971);
        EXPECT(gbc.pc(), 0x2ac1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01E1
        gbc.setState(0x8ccb, 0xcbbc, 0x5f70, 0xa3be, 0x9851, 0x33ff, 0x0, 0x0);
        gbc.writeMem(0x8ccb, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xcbbc);
        EXPECT(gbc.pc(), 0x8ccd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ccb), 0xcb);
        EXPECT(gbc.readMem(0x8ccc), 0x79);
        // CB 79 01E2
        gbc.setState(0xad27, 0x48c7, 0xca0, 0xdd90, 0x4bad, 0xa10a, 0x1, 0x1);
        gbc.writeMem(0xad27, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x48c7);
        EXPECT(gbc.pc(), 0xad29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad27), 0xcb);
        EXPECT(gbc.readMem(0xad28), 0x79);
        // CB 79 01E3
        gbc.setState(0xd6c1, 0x2c05, 0x7e80, 0x896f, 0x34b1, 0xcbc2, 0x1, 0x0);
        gbc.writeMem(0xd6c1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2c05);
        EXPECT(gbc.pc(), 0xd6c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c1), 0xcb);
        EXPECT(gbc.readMem(0xd6c2), 0x79);
        // CB 79 01E4
        gbc.setState(0xfc1, 0x3057, 0xdcc0, 0x65d8, 0x3fcf, 0x8c2d, 0x1, 0x0);
        gbc.writeMem(0xfc1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3057);
        EXPECT(gbc.pc(), 0xfc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01E5
        gbc.setState(0x3c6a, 0xebe2, 0x2190, 0x9783, 0xf8b6, 0x722e, 0x1, 0x1);
        gbc.writeMem(0x3c6a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xebe2);
        EXPECT(gbc.pc(), 0x3c6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01E6
        gbc.setState(0xbf40, 0xbbc6, 0x9ee0, 0x3487, 0xec1c, 0x34e3, 0x0, 0x0);
        gbc.writeMem(0xbf40, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xbbc6);
        EXPECT(gbc.pc(), 0xbf42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf40), 0xcb);
        EXPECT(gbc.readMem(0xbf41), 0x79);
        // CB 79 01E7
        gbc.setState(0xa8bd, 0xaadf, 0x2810, 0xe143, 0xcd99, 0x48fd, 0x0, 0x1);
        gbc.writeMem(0xa8bd, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xaadf);
        EXPECT(gbc.pc(), 0xa8bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8bd), 0xcb);
        EXPECT(gbc.readMem(0xa8be), 0x79);
        // CB 79 01E8
        gbc.setState(0xd225, 0x6c43, 0x2550, 0x723e, 0x714f, 0xcccb, 0x1, 0x0);
        gbc.writeMem(0xd225, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6c43);
        EXPECT(gbc.pc(), 0xd227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd225), 0xcb);
        EXPECT(gbc.readMem(0xd226), 0x79);
        // CB 79 01E9
        gbc.setState(0xc21d, 0x4694, 0xf810, 0xdae3, 0x2655, 0x18e6, 0x0, 0x0);
        gbc.writeMem(0xc21d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4694);
        EXPECT(gbc.pc(), 0xc21f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc21d), 0xcb);
        EXPECT(gbc.readMem(0xc21e), 0x79);
        // CB 79 01EA
        gbc.setState(0xca7d, 0x589c, 0x380, 0x334f, 0x8d04, 0x21a6, 0x1, 0x0);
        gbc.writeMem(0xca7d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x589c);
        EXPECT(gbc.pc(), 0xca7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca7d), 0xcb);
        EXPECT(gbc.readMem(0xca7e), 0x79);
        // CB 79 01EB
        gbc.setState(0xbc36, 0xfbe6, 0x7c10, 0x51cf, 0x47ca, 0x5f99, 0x1, 0x0);
        gbc.writeMem(0xbc36, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xfbe6);
        EXPECT(gbc.pc(), 0xbc38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc36), 0xcb);
        EXPECT(gbc.readMem(0xbc37), 0x79);
        // CB 79 01EC
        gbc.setState(0x7b69, 0x9378, 0x6f70, 0x103a, 0x5e41, 0x23c7, 0x0, 0x0);
        gbc.writeMem(0x7b69, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9378);
        EXPECT(gbc.pc(), 0x7b6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01EE
        gbc.setState(0x4ac1, 0xdd16, 0xf0c0, 0xece4, 0x6383, 0xf14d, 0x1, 0x1);
        gbc.writeMem(0x4ac1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xdd16);
        EXPECT(gbc.pc(), 0x4ac3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01EF
        gbc.setState(0x525f, 0x81ac, 0x2cc0, 0x148f, 0x4540, 0x6928, 0x1, 0x1);
        gbc.writeMem(0x525f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x81ac);
        EXPECT(gbc.pc(), 0x5261);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01F0
        gbc.setState(0xcbc3, 0xeeb5, 0x6a60, 0x7897, 0xdf48, 0x5f64, 0x0, 0x0);
        gbc.writeMem(0xcbc3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xeeb5);
        EXPECT(gbc.pc(), 0xcbc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbc3), 0xcb);
        EXPECT(gbc.readMem(0xcbc4), 0x79);
        // CB 79 01F1
        gbc.setState(0x7c54, 0xcf1e, 0x1890, 0xcace, 0x7368, 0x7b22, 0x0, 0x1);
        gbc.writeMem(0x7c54, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xcf1e);
        EXPECT(gbc.pc(), 0x7c56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01F2
        gbc.setState(0x6515, 0x3849, 0xee30, 0xb0ca, 0x98c3, 0x990d, 0x1, 0x1);
        gbc.writeMem(0x6515, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x3849);
        EXPECT(gbc.pc(), 0x6517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01F3
        gbc.setState(0x5c4c, 0x70b7, 0x6690, 0xf9d6, 0x39e8, 0xe323, 0x1, 0x0);
        gbc.writeMem(0x5c4c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x70b7);
        EXPECT(gbc.pc(), 0x5c4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01F4
        gbc.setState(0xca9, 0x8727, 0xb880, 0xa072, 0x9263, 0x437c, 0x1, 0x1);
        gbc.writeMem(0xca9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8727);
        EXPECT(gbc.pc(), 0xcab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01F5
        gbc.setState(0xcc0, 0x1a33, 0x550, 0xf35e, 0x9a69, 0x513b, 0x0, 0x0);
        gbc.writeMem(0xcc0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1a33);
        EXPECT(gbc.pc(), 0xcc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01F6
        gbc.setState(0x5c00, 0x2728, 0x73a0, 0xfd31, 0xe497, 0xc75, 0x1, 0x0);
        gbc.writeMem(0x5c00, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2728);
        EXPECT(gbc.pc(), 0x5c02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01F8
        gbc.setState(0x1ede, 0x806f, 0xdc0, 0x38bf, 0x8279, 0xd00c, 0x1, 0x1);
        gbc.writeMem(0x1ede, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x806f);
        EXPECT(gbc.pc(), 0x1ee0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01F9
        gbc.setState(0x7b5f, 0x6b7c, 0x1c0, 0xfb83, 0x890a, 0x7eac, 0x1, 0x0);
        gbc.writeMem(0x7b5f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6b7c);
        EXPECT(gbc.pc(), 0x7b61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01FA
        gbc.setState(0x5c4b, 0x8e29, 0x8bb0, 0xfe7c, 0xea15, 0x45f8, 0x1, 0x1);
        gbc.writeMem(0x5c4b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8e29);
        EXPECT(gbc.pc(), 0x5c4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01FB
        gbc.setState(0x1ddc, 0xce3d, 0xa6a0, 0x56e0, 0xd26e, 0x86f1, 0x1, 0x0);
        gbc.writeMem(0x1ddc, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xce3d);
        EXPECT(gbc.pc(), 0x1dde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 01FC
        gbc.setState(0xd315, 0x5249, 0xe140, 0x4029, 0x9348, 0x8d9e, 0x0, 0x1);
        gbc.writeMem(0xd315, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5249);
        EXPECT(gbc.pc(), 0xd317);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd315), 0xcb);
        EXPECT(gbc.readMem(0xd316), 0x79);
        // CB 79 01FD
        gbc.setState(0xbd8, 0x1d35, 0x1150, 0x9537, 0x89e4, 0xb0d, 0x0, 0x1);
        gbc.writeMem(0xbd8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1d35);
        EXPECT(gbc.pc(), 0xbda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 01FE
        gbc.setState(0x9c49, 0xf3de, 0xe7f0, 0x4454, 0xb093, 0x8273, 0x0, 0x0);
        gbc.writeMem(0x9c49, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf3de);
        EXPECT(gbc.pc(), 0x9c4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c49), 0xcb);
        EXPECT(gbc.readMem(0x9c4a), 0x79);
        // CB 79 0200
        gbc.setState(0x1ef7, 0x2a44, 0x8eb0, 0xbe0f, 0x631d, 0xe9e2, 0x0, 0x1);
        gbc.writeMem(0x1ef7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2a44);
        EXPECT(gbc.pc(), 0x1ef9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0201
        gbc.setState(0x49a2, 0x8cfd, 0x4fe0, 0x8bc1, 0x1135, 0x5933, 0x1, 0x0);
        gbc.writeMem(0x49a2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8cfd);
        EXPECT(gbc.pc(), 0x49a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0202
        gbc.setState(0xbb74, 0xe092, 0x4f30, 0xae62, 0x963e, 0x2599, 0x1, 0x0);
        gbc.writeMem(0xbb74, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe092);
        EXPECT(gbc.pc(), 0xbb76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb74), 0xcb);
        EXPECT(gbc.readMem(0xbb75), 0x79);
        // CB 79 0203
        gbc.setState(0x685c, 0x936c, 0x9a00, 0xc129, 0x8cc, 0x13de, 0x0, 0x1);
        gbc.writeMem(0x685c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x936c);
        EXPECT(gbc.pc(), 0x685e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0204
        gbc.setState(0x7fd5, 0x2c6b, 0xf670, 0x7d5e, 0x6854, 0x2e8, 0x0, 0x1);
        gbc.writeMem(0x7fd5, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2c6b);
        EXPECT(gbc.pc(), 0x7fd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0205
        gbc.setState(0x7045, 0x971b, 0xa490, 0xacad, 0xf7dd, 0x144d, 0x1, 0x1);
        gbc.writeMem(0x7045, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x971b);
        EXPECT(gbc.pc(), 0x7047);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0207
        gbc.setState(0x69db, 0x8b3e, 0x2b40, 0x8edd, 0xaa5b, 0x606f, 0x0, 0x0);
        gbc.writeMem(0x69db, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x8b3e);
        EXPECT(gbc.pc(), 0x69dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0208
        gbc.setState(0x1bc6, 0x636d, 0x4f10, 0x48cb, 0xb040, 0x8651, 0x1, 0x0);
        gbc.writeMem(0x1bc6, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x636d);
        EXPECT(gbc.pc(), 0x1bc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 020A
        gbc.setState(0xdf08, 0xe75f, 0xf500, 0x8581, 0x7699, 0x728d, 0x1, 0x1);
        gbc.writeMem(0xdf08, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe75f);
        EXPECT(gbc.pc(), 0xdf0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf08), 0xcb);
        EXPECT(gbc.readMem(0xdf09), 0x79);
        // CB 79 020B
        gbc.setState(0xe3c6, 0x8870, 0xfd10, 0xd349, 0xfe4b, 0x2f48, 0x0, 0x1);
        gbc.writeMem(0xe3c6, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8870);
        EXPECT(gbc.pc(), 0xe3c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3c6), 0xcb);
        EXPECT(gbc.readMem(0xe3c7), 0x79);
        // CB 79 020D
        gbc.setState(0xd8d1, 0xe2a8, 0x8eb0, 0xb6ef, 0xdc67, 0x8b89, 0x0, 0x0);
        gbc.writeMem(0xd8d1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe2a8);
        EXPECT(gbc.pc(), 0xd8d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8d1), 0xcb);
        EXPECT(gbc.readMem(0xd8d2), 0x79);
        // CB 79 020E
        gbc.setState(0x461d, 0x207d, 0x6d80, 0x436e, 0xf686, 0xe2a8, 0x0, 0x0);
        gbc.writeMem(0x461d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x207d);
        EXPECT(gbc.pc(), 0x461f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 020F
        gbc.setState(0x486f, 0x4b2f, 0x8530, 0xface, 0x9114, 0x6a40, 0x0, 0x0);
        gbc.writeMem(0x486f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4b2f);
        EXPECT(gbc.pc(), 0x4871);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0210
        gbc.setState(0x5bb7, 0xcf0f, 0x3740, 0x8634, 0xc336, 0xb8c4, 0x0, 0x1);
        gbc.writeMem(0x5bb7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xcf0f);
        EXPECT(gbc.pc(), 0x5bb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0211
        gbc.setState(0xc112, 0x937a, 0x3ac0, 0x467e, 0xc199, 0xaa5b, 0x1, 0x0);
        gbc.writeMem(0xc112, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x937a);
        EXPECT(gbc.pc(), 0xc114);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc112), 0xcb);
        EXPECT(gbc.readMem(0xc113), 0x79);
        // CB 79 0212
        gbc.setState(0x5481, 0x45c7, 0x2a30, 0x3c68, 0x4ab2, 0x1474, 0x0, 0x0);
        gbc.writeMem(0x5481, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x45c7);
        EXPECT(gbc.pc(), 0x5483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0213
        gbc.setState(0x7c98, 0x26a1, 0xe3a0, 0xb7d1, 0xfe00, 0xfb07, 0x1, 0x1);
        gbc.writeMem(0x7c98, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x26a1);
        EXPECT(gbc.pc(), 0x7c9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0214
        gbc.setState(0xdb41, 0x4cf, 0x7f10, 0x4bef, 0xcb1d, 0x2fa1, 0x0, 0x1);
        gbc.writeMem(0xdb41, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4cf);
        EXPECT(gbc.pc(), 0xdb43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb41), 0xcb);
        EXPECT(gbc.readMem(0xdb42), 0x79);
        // CB 79 0215
        gbc.setState(0xf8d, 0x91e, 0x4240, 0xc679, 0x59eb, 0x10c3, 0x0, 0x0);
        gbc.writeMem(0xf8d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x91e);
        EXPECT(gbc.pc(), 0xf8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0216
        gbc.setState(0x1125, 0x2e12, 0x3190, 0x8e87, 0x7ce4, 0x819c, 0x1, 0x0);
        gbc.writeMem(0x1125, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2e12);
        EXPECT(gbc.pc(), 0x1127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0217
        gbc.setState(0x8e7e, 0x76a8, 0x6ba0, 0x665a, 0x388d, 0x66d2, 0x0, 0x1);
        gbc.writeMem(0x8e7e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x76a8);
        EXPECT(gbc.pc(), 0x8e80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e7e), 0xcb);
        EXPECT(gbc.readMem(0x8e7f), 0x79);
        // CB 79 0218
        gbc.setState(0x27b0, 0x3bf8, 0x500, 0xd83f, 0xb6c1, 0xe22, 0x0, 0x1);
        gbc.writeMem(0x27b0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3bf8);
        EXPECT(gbc.pc(), 0x27b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0219
        gbc.setState(0x4937, 0xcd1c, 0xfa90, 0xf745, 0x941d, 0x7bd0, 0x1, 0x1);
        gbc.writeMem(0x4937, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xcd1c);
        EXPECT(gbc.pc(), 0x4939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 021A
        gbc.setState(0x7220, 0x75b9, 0x9790, 0x2528, 0x531e, 0x52d0, 0x0, 0x0);
        gbc.writeMem(0x7220, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x75b9);
        EXPECT(gbc.pc(), 0x7222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 021B
        gbc.setState(0xd5e2, 0x9527, 0xae10, 0xd84a, 0xeec3, 0x84c1, 0x1, 0x0);
        gbc.writeMem(0xd5e2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9527);
        EXPECT(gbc.pc(), 0xd5e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5e2), 0xcb);
        EXPECT(gbc.readMem(0xd5e3), 0x79);
        // CB 79 021C
        gbc.setState(0x49ab, 0x1771, 0x6110, 0x54b7, 0x5a3c, 0x1312, 0x1, 0x0);
        gbc.writeMem(0x49ab, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1771);
        EXPECT(gbc.pc(), 0x49ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 021D
        gbc.setState(0xae42, 0x2aaa, 0x5400, 0x347, 0x778d, 0x1b6f, 0x0, 0x1);
        gbc.writeMem(0xae42, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x2aaa);
        EXPECT(gbc.pc(), 0xae44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae42), 0xcb);
        EXPECT(gbc.readMem(0xae43), 0x79);
        // CB 79 021E
        gbc.setState(0xefb3, 0x2c7d, 0xa480, 0x4c8f, 0xf300, 0xad4f, 0x1, 0x0);
        gbc.writeMem(0xefb3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2c7d);
        EXPECT(gbc.pc(), 0xefb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefb3), 0xcb);
        EXPECT(gbc.readMem(0xefb4), 0x79);
        // CB 79 021F
        gbc.setState(0x6e16, 0xe927, 0x46b0, 0xe36, 0x7080, 0x5622, 0x0, 0x0);
        gbc.writeMem(0x6e16, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe927);
        EXPECT(gbc.pc(), 0x6e18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0220
        gbc.setState(0x74da, 0x1a00, 0x18d0, 0xcd2, 0xdc70, 0xc3b9, 0x1, 0x1);
        gbc.writeMem(0x74da, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1a00);
        EXPECT(gbc.pc(), 0x74dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0221
        gbc.setState(0xa88b, 0xe73e, 0x9d40, 0xdf52, 0xf15, 0x398f, 0x0, 0x0);
        gbc.writeMem(0xa88b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe73e);
        EXPECT(gbc.pc(), 0xa88d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa88b), 0xcb);
        EXPECT(gbc.readMem(0xa88c), 0x79);
        // CB 79 0222
        gbc.setState(0xbf01, 0xb98c, 0x1d30, 0x110c, 0xcf6d, 0x363c, 0x1, 0x0);
        gbc.writeMem(0xbf01, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb98c);
        EXPECT(gbc.pc(), 0xbf03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf01), 0xcb);
        EXPECT(gbc.readMem(0xbf02), 0x79);
        // CB 79 0223
        gbc.setState(0xe3ac, 0x378f, 0x9350, 0xc0dd, 0xde21, 0xed42, 0x0, 0x0);
        gbc.writeMem(0xe3ac, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x378f);
        EXPECT(gbc.pc(), 0xe3ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ac), 0xcb);
        EXPECT(gbc.readMem(0xe3ad), 0x79);
        // CB 79 0224
        gbc.setState(0xa859, 0xf98, 0x76d0, 0x885a, 0xa906, 0x8c8, 0x0, 0x1);
        gbc.writeMem(0xa859, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf98);
        EXPECT(gbc.pc(), 0xa85b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa859), 0xcb);
        EXPECT(gbc.readMem(0xa85a), 0x79);
        // CB 79 0225
        gbc.setState(0x54ab, 0x4937, 0x28c0, 0x316c, 0x47ff, 0x94ca, 0x0, 0x1);
        gbc.writeMem(0x54ab, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4937);
        EXPECT(gbc.pc(), 0x54ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0226
        gbc.setState(0xece8, 0xeab5, 0xe940, 0xd29, 0x6c6a, 0x1516, 0x0, 0x0);
        gbc.writeMem(0xece8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xeab5);
        EXPECT(gbc.pc(), 0xecea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xece8), 0xcb);
        EXPECT(gbc.readMem(0xece9), 0x79);
        // CB 79 0227
        gbc.setState(0x3199, 0xea7e, 0xa150, 0x64d9, 0x133a, 0x6f89, 0x0, 0x0);
        gbc.writeMem(0x3199, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xea7e);
        EXPECT(gbc.pc(), 0x319b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0228
        gbc.setState(0xc41f, 0x3efc, 0x4270, 0x2312, 0x2b31, 0x97cc, 0x1, 0x1);
        gbc.writeMem(0xc41f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x3efc);
        EXPECT(gbc.pc(), 0xc421);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc41f), 0xcb);
        EXPECT(gbc.readMem(0xc420), 0x79);
        // CB 79 0229
        gbc.setState(0x6d9d, 0x351e, 0xe100, 0xa048, 0xd352, 0x7ded, 0x0, 0x1);
        gbc.writeMem(0x6d9d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x351e);
        EXPECT(gbc.pc(), 0x6d9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 022A
        gbc.setState(0xab5f, 0x75c9, 0x1940, 0x937d, 0x15ec, 0x9b0e, 0x1, 0x1);
        gbc.writeMem(0xab5f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x75c9);
        EXPECT(gbc.pc(), 0xab61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab5f), 0xcb);
        EXPECT(gbc.readMem(0xab60), 0x79);
        // CB 79 022B
        gbc.setState(0xa11e, 0xddd5, 0x1c10, 0x142e, 0x1a05, 0x42ae, 0x0, 0x0);
        gbc.writeMem(0xa11e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xddd5);
        EXPECT(gbc.pc(), 0xa120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa11e), 0xcb);
        EXPECT(gbc.readMem(0xa11f), 0x79);
        // CB 79 022D
        gbc.setState(0xe902, 0x562e, 0xc780, 0x7d16, 0x8123, 0xd767, 0x0, 0x0);
        gbc.writeMem(0xe902, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x562e);
        EXPECT(gbc.pc(), 0xe904);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe902), 0xcb);
        EXPECT(gbc.readMem(0xe903), 0x79);
        // CB 79 022E
        gbc.setState(0x609f, 0xb66c, 0x46e0, 0xc84, 0x1eb4, 0x8460, 0x1, 0x0);
        gbc.writeMem(0x609f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb66c);
        EXPECT(gbc.pc(), 0x60a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 022F
        gbc.setState(0xa8a8, 0xc3a3, 0xc1c0, 0xf4d0, 0xdd0b, 0x6d43, 0x1, 0x1);
        gbc.writeMem(0xa8a8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc3a3);
        EXPECT(gbc.pc(), 0xa8aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8a8), 0xcb);
        EXPECT(gbc.readMem(0xa8a9), 0x79);
        // CB 79 0230
        gbc.setState(0xb95d, 0x8f25, 0x6130, 0x3cf9, 0x8ee6, 0x44cf, 0x0, 0x1);
        gbc.writeMem(0xb95d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x8f25);
        EXPECT(gbc.pc(), 0xb95f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb95d), 0xcb);
        EXPECT(gbc.readMem(0xb95e), 0x79);
        // CB 79 0231
        gbc.setState(0x3dac, 0x9966, 0xefb0, 0x9489, 0x13e8, 0x443c, 0x0, 0x0);
        gbc.writeMem(0x3dac, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9966);
        EXPECT(gbc.pc(), 0x3dae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0232
        gbc.setState(0x1be8, 0xaa5b, 0x6c60, 0xe601, 0x5262, 0x640c, 0x0, 0x0);
        gbc.writeMem(0x1be8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xaa5b);
        EXPECT(gbc.pc(), 0x1bea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0233
        gbc.setState(0x1b5a, 0x56ed, 0x9b50, 0x271c, 0x2579, 0xb501, 0x1, 0x1);
        gbc.writeMem(0x1b5a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x56ed);
        EXPECT(gbc.pc(), 0x1b5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0234
        gbc.setState(0xd4f3, 0x397, 0xbc70, 0x44a5, 0xe209, 0x13d0, 0x1, 0x0);
        gbc.writeMem(0xd4f3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x397);
        EXPECT(gbc.pc(), 0xd4f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4f3), 0xcb);
        EXPECT(gbc.readMem(0xd4f4), 0x79);
        // CB 79 0235
        gbc.setState(0xde19, 0xeee, 0x8570, 0x7e9d, 0x7bef, 0xeb93, 0x0, 0x1);
        gbc.writeMem(0xde19, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xeee);
        EXPECT(gbc.pc(), 0xde1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde19), 0xcb);
        EXPECT(gbc.readMem(0xde1a), 0x79);
        // CB 79 0236
        gbc.setState(0x1f78, 0xc578, 0x9910, 0x84b1, 0xc147, 0x9040, 0x0, 0x1);
        gbc.writeMem(0x1f78, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc578);
        EXPECT(gbc.pc(), 0x1f7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0237
        gbc.setState(0xc503, 0xe055, 0xf9c0, 0x6e49, 0x916, 0x96d3, 0x0, 0x1);
        gbc.writeMem(0xc503, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe055);
        EXPECT(gbc.pc(), 0xc505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc503), 0xcb);
        EXPECT(gbc.readMem(0xc504), 0x79);
        // CB 79 0238
        gbc.setState(0xbfdc, 0x7fed, 0x6a10, 0x410f, 0x87c6, 0x3e45, 0x1, 0x0);
        gbc.writeMem(0xbfdc, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7fed);
        EXPECT(gbc.pc(), 0xbfde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfdc), 0xcb);
        EXPECT(gbc.readMem(0xbfdd), 0x79);
        // CB 79 0239
        gbc.setState(0xc892, 0x4224, 0xb450, 0x64e0, 0x8502, 0xee30, 0x0, 0x0);
        gbc.writeMem(0xc892, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x4224);
        EXPECT(gbc.pc(), 0xc894);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc892), 0xcb);
        EXPECT(gbc.readMem(0xc893), 0x79);
        // CB 79 023B
        gbc.setState(0x8fb8, 0x36c2, 0x3e50, 0xc659, 0x9299, 0x6e92, 0x1, 0x0);
        gbc.writeMem(0x8fb8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x36c2);
        EXPECT(gbc.pc(), 0x8fba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fb8), 0xcb);
        EXPECT(gbc.readMem(0x8fb9), 0x79);
        // CB 79 023C
        gbc.setState(0xd9cd, 0x1243, 0x4b60, 0xc7e3, 0x8ccd, 0x673e, 0x0, 0x1);
        gbc.writeMem(0xd9cd, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1243);
        EXPECT(gbc.pc(), 0xd9cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9cd), 0xcb);
        EXPECT(gbc.readMem(0xd9ce), 0x79);
        // CB 79 023D
        gbc.setState(0xd4bb, 0x7d1, 0xebb0, 0x8bad, 0xec23, 0x8658, 0x0, 0x1);
        gbc.writeMem(0xd4bb, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7d1);
        EXPECT(gbc.pc(), 0xd4bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4bb), 0xcb);
        EXPECT(gbc.readMem(0xd4bc), 0x79);
        // CB 79 023E
        gbc.setState(0xbb2a, 0x5587, 0x9b90, 0xeca9, 0xeced, 0x5efe, 0x0, 0x1);
        gbc.writeMem(0xbb2a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x5587);
        EXPECT(gbc.pc(), 0xbb2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb2a), 0xcb);
        EXPECT(gbc.readMem(0xbb2b), 0x79);
        // CB 79 023F
        gbc.setState(0x1124, 0x52ba, 0xbe60, 0xacf1, 0x22f8, 0x9681, 0x0, 0x1);
        gbc.writeMem(0x1124, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x52ba);
        EXPECT(gbc.pc(), 0x1126);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0240
        gbc.setState(0x859c, 0x6812, 0xff90, 0x2780, 0xa3ee, 0x3b43, 0x0, 0x0);
        gbc.writeMem(0x859c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x6812);
        EXPECT(gbc.pc(), 0x859e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x859c), 0xcb);
        EXPECT(gbc.readMem(0x859d), 0x79);
        // CB 79 0241
        gbc.setState(0x77f7, 0xd2e3, 0x7880, 0xfd75, 0x9e25, 0x830, 0x1, 0x1);
        gbc.writeMem(0x77f7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd2e3);
        EXPECT(gbc.pc(), 0x77f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0242
        gbc.setState(0x6ecc, 0x5ae2, 0x8f10, 0x24d, 0x6a4c, 0x836c, 0x0, 0x1);
        gbc.writeMem(0x6ecc, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5ae2);
        EXPECT(gbc.pc(), 0x6ece);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0243
        gbc.setState(0x1ab1, 0x230, 0xf310, 0x74e1, 0xe896, 0xe16b, 0x0, 0x1);
        gbc.writeMem(0x1ab1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x230);
        EXPECT(gbc.pc(), 0x1ab3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0244
        gbc.setState(0xd6d2, 0x7129, 0x600, 0x7de8, 0x1011, 0x96ab, 0x0, 0x1);
        gbc.writeMem(0xd6d2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7129);
        EXPECT(gbc.pc(), 0xd6d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6d2), 0xcb);
        EXPECT(gbc.readMem(0xd6d3), 0x79);
        // CB 79 0245
        gbc.setState(0xc6d2, 0xb669, 0x8b10, 0x6966, 0xf80f, 0x791, 0x0, 0x0);
        gbc.writeMem(0xc6d2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb669);
        EXPECT(gbc.pc(), 0xc6d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6d2), 0xcb);
        EXPECT(gbc.readMem(0xc6d3), 0x79);
        // CB 79 0246
        gbc.setState(0xdc63, 0xa223, 0x2350, 0x93c4, 0xa45a, 0x23e3, 0x1, 0x0);
        gbc.writeMem(0xdc63, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa223);
        EXPECT(gbc.pc(), 0xdc65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc63), 0xcb);
        EXPECT(gbc.readMem(0xdc64), 0x79);
        // CB 79 0248
        gbc.setState(0x72c8, 0x98a, 0x4280, 0x6dcb, 0x4d7e, 0x49d5, 0x0, 0x0);
        gbc.writeMem(0x72c8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x98a);
        EXPECT(gbc.pc(), 0x72ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0249
        gbc.setState(0xc9d6, 0xd59e, 0x5d20, 0xd413, 0x220, 0x4e2c, 0x0, 0x0);
        gbc.writeMem(0xc9d6, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd59e);
        EXPECT(gbc.pc(), 0xc9d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9d6), 0xcb);
        EXPECT(gbc.readMem(0xc9d7), 0x79);
        // CB 79 024A
        gbc.setState(0x14e3, 0xddc3, 0x8640, 0x4afe, 0x124a, 0x2f85, 0x0, 0x0);
        gbc.writeMem(0x14e3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xddc3);
        EXPECT(gbc.pc(), 0x14e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 024C
        gbc.setState(0xc230, 0x85e7, 0xb2d0, 0x87aa, 0x877b, 0xc31f, 0x0, 0x0);
        gbc.writeMem(0xc230, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x85e7);
        EXPECT(gbc.pc(), 0xc232);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc230), 0xcb);
        EXPECT(gbc.readMem(0xc231), 0x79);
        // CB 79 024D
        gbc.setState(0x6177, 0xebe4, 0x1100, 0x6d0c, 0x1164, 0xa675, 0x0, 0x1);
        gbc.writeMem(0x6177, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xebe4);
        EXPECT(gbc.pc(), 0x6179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 024E
        gbc.setState(0xb380, 0xde36, 0xd210, 0x9cf1, 0xf685, 0x6896, 0x0, 0x1);
        gbc.writeMem(0xb380, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xde36);
        EXPECT(gbc.pc(), 0xb382);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb380), 0xcb);
        EXPECT(gbc.readMem(0xb381), 0x79);
        // CB 79 024F
        gbc.setState(0xa758, 0xa214, 0x43a0, 0xf0ef, 0xb913, 0xe7ff, 0x1, 0x1);
        gbc.writeMem(0xa758, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa214);
        EXPECT(gbc.pc(), 0xa75a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa758), 0xcb);
        EXPECT(gbc.readMem(0xa759), 0x79);
        // CB 79 0250
        gbc.setState(0xb309, 0x17b2, 0x3b20, 0x353d, 0xf4a7, 0x40af, 0x1, 0x0);
        gbc.writeMem(0xb309, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x17b2);
        EXPECT(gbc.pc(), 0xb30b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb309), 0xcb);
        EXPECT(gbc.readMem(0xb30a), 0x79);
        // CB 79 0251
        gbc.setState(0x6168, 0xd8e8, 0x32a0, 0xe5e4, 0x33d7, 0x8870, 0x0, 0x0);
        gbc.writeMem(0x6168, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd8e8);
        EXPECT(gbc.pc(), 0x616a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0252
        gbc.setState(0xe43, 0xa512, 0xa0c0, 0xfe82, 0x7600, 0xe8fa, 0x1, 0x0);
        gbc.writeMem(0xe43, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa512);
        EXPECT(gbc.pc(), 0xe45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0253
        gbc.setState(0x99f2, 0x824f, 0xf5e0, 0x37b1, 0x4a03, 0x1b90, 0x1, 0x0);
        gbc.writeMem(0x99f2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x824f);
        EXPECT(gbc.pc(), 0x99f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99f2), 0xcb);
        EXPECT(gbc.readMem(0x99f3), 0x79);
        // CB 79 0254
        gbc.setState(0x31d7, 0x6ba0, 0xcc0, 0x407c, 0x979f, 0x4cfc, 0x1, 0x0);
        gbc.writeMem(0x31d7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6ba0);
        EXPECT(gbc.pc(), 0x31d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0255
        gbc.setState(0xb856, 0x6670, 0xe0e0, 0x8329, 0x9b25, 0x654d, 0x0, 0x0);
        gbc.writeMem(0xb856, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6670);
        EXPECT(gbc.pc(), 0xb858);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb856), 0xcb);
        EXPECT(gbc.readMem(0xb857), 0x79);
        // CB 79 0256
        gbc.setState(0xb5e4, 0x93e1, 0x6d90, 0xc7d9, 0x1e7d, 0x981e, 0x0, 0x0);
        gbc.writeMem(0xb5e4, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x93e1);
        EXPECT(gbc.pc(), 0xb5e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5e4), 0xcb);
        EXPECT(gbc.readMem(0xb5e5), 0x79);
        // CB 79 0257
        gbc.setState(0x91cc, 0xb5f, 0x6000, 0x5a14, 0x2474, 0x1b4c, 0x1, 0x0);
        gbc.writeMem(0x91cc, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb5f);
        EXPECT(gbc.pc(), 0x91ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91cc), 0xcb);
        EXPECT(gbc.readMem(0x91cd), 0x79);
        // CB 79 0259
        gbc.setState(0x6654, 0x4d18, 0xcf60, 0xee16, 0x31f0, 0x1667, 0x1, 0x1);
        gbc.writeMem(0x6654, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4d18);
        EXPECT(gbc.pc(), 0x6656);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 025A
        gbc.setState(0xeb38, 0xd9e, 0x5ba0, 0x194, 0x983b, 0x9e8e, 0x1, 0x0);
        gbc.writeMem(0xeb38, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd9e);
        EXPECT(gbc.pc(), 0xeb3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb38), 0xcb);
        EXPECT(gbc.readMem(0xeb39), 0x79);
        // CB 79 025B
        gbc.setState(0xa1e4, 0x562d, 0x46c0, 0xe6bb, 0x5b30, 0xe16f, 0x1, 0x1);
        gbc.writeMem(0xa1e4, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x562d);
        EXPECT(gbc.pc(), 0xa1e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1e4), 0xcb);
        EXPECT(gbc.readMem(0xa1e5), 0x79);
        // CB 79 025C
        gbc.setState(0x5958, 0x3e3e, 0x880, 0xf7e3, 0x926d, 0x1efa, 0x0, 0x0);
        gbc.writeMem(0x5958, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x3e3e);
        EXPECT(gbc.pc(), 0x595a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 025D
        gbc.setState(0x1599, 0x92f4, 0x9bf0, 0xfcca, 0x1d33, 0x836, 0x0, 0x1);
        gbc.writeMem(0x1599, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x92f4);
        EXPECT(gbc.pc(), 0x159b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 025E
        gbc.setState(0xde50, 0x5164, 0x6a30, 0x3c0a, 0x1183, 0x3ddf, 0x1, 0x0);
        gbc.writeMem(0xde50, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5164);
        EXPECT(gbc.pc(), 0xde52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde50), 0xcb);
        EXPECT(gbc.readMem(0xde51), 0x79);
        // CB 79 025F
        gbc.setState(0x1d0e, 0xd32, 0x3020, 0x4c0d, 0xaf6d, 0xdd39, 0x1, 0x1);
        gbc.writeMem(0x1d0e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd32);
        EXPECT(gbc.pc(), 0x1d10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0260
        gbc.setState(0x393a, 0x685c, 0xf9c0, 0x4b32, 0xa91d, 0xb3ab, 0x0, 0x0);
        gbc.writeMem(0x393a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x685c);
        EXPECT(gbc.pc(), 0x393c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0261
        gbc.setState(0xd46, 0x58e0, 0x4ef0, 0x50b4, 0x954c, 0x99cc, 0x1, 0x1);
        gbc.writeMem(0xd46, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x58e0);
        EXPECT(gbc.pc(), 0xd48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0262
        gbc.setState(0x1925, 0x941b, 0xdd40, 0xb740, 0xa9c4, 0x2d91, 0x1, 0x0);
        gbc.writeMem(0x1925, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x941b);
        EXPECT(gbc.pc(), 0x1927);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0264
        gbc.setState(0xe43, 0xbbce, 0xe810, 0x9bf3, 0xbc47, 0x905, 0x1, 0x1);
        gbc.writeMem(0xe43, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbbce);
        EXPECT(gbc.pc(), 0xe45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0265
        gbc.setState(0x7f00, 0x839b, 0xa170, 0x2401, 0xb573, 0x894e, 0x1, 0x0);
        gbc.writeMem(0x7f00, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x839b);
        EXPECT(gbc.pc(), 0x7f02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0267
        gbc.setState(0x1ed2, 0x4f42, 0x8ef0, 0x976c, 0x49e5, 0x604f, 0x0, 0x0);
        gbc.writeMem(0x1ed2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4f42);
        EXPECT(gbc.pc(), 0x1ed4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0268
        gbc.setState(0xa920, 0x60f7, 0x7db0, 0xc533, 0x6fc8, 0x601a, 0x1, 0x1);
        gbc.writeMem(0xa920, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x60f7);
        EXPECT(gbc.pc(), 0xa922);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa920), 0xcb);
        EXPECT(gbc.readMem(0xa921), 0x79);
        // CB 79 0269
        gbc.setState(0xa051, 0x881a, 0xf380, 0x4dc2, 0x2c3f, 0x645, 0x1, 0x1);
        gbc.writeMem(0xa051, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x881a);
        EXPECT(gbc.pc(), 0xa053);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa051), 0xcb);
        EXPECT(gbc.readMem(0xa052), 0x79);
        // CB 79 026A
        gbc.setState(0x7f7e, 0x8b7e, 0xee10, 0x1b64, 0xf5e3, 0x92b, 0x0, 0x0);
        gbc.writeMem(0x7f7e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8b7e);
        EXPECT(gbc.pc(), 0x7f80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 026B
        gbc.setState(0x801c, 0x7f97, 0xf6b0, 0xfe4d, 0xa1c5, 0xf1e4, 0x1, 0x0);
        gbc.writeMem(0x801c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7f97);
        EXPECT(gbc.pc(), 0x801e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x801c), 0xcb);
        EXPECT(gbc.readMem(0x801d), 0x79);
        // CB 79 026C
        gbc.setState(0x6d2d, 0x2d76, 0x4870, 0xf36, 0x23d0, 0xd319, 0x1, 0x0);
        gbc.writeMem(0x6d2d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2d76);
        EXPECT(gbc.pc(), 0x6d2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 026D
        gbc.setState(0xb687, 0x6553, 0x90f0, 0xbc61, 0x4d04, 0x9a1b, 0x1, 0x0);
        gbc.writeMem(0xb687, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6553);
        EXPECT(gbc.pc(), 0xb689);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb687), 0xcb);
        EXPECT(gbc.readMem(0xb688), 0x79);
        // CB 79 026E
        gbc.setState(0x17a0, 0x7bc, 0x42e0, 0xb7dc, 0x93a1, 0x3a7d, 0x0, 0x1);
        gbc.writeMem(0x17a0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7bc);
        EXPECT(gbc.pc(), 0x17a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 026F
        gbc.setState(0x7ee, 0x323f, 0x7c50, 0x3550, 0x281a, 0x40fb, 0x1, 0x1);
        gbc.writeMem(0x7ee, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x323f);
        EXPECT(gbc.pc(), 0x7f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0270
        gbc.setState(0x3809, 0x7359, 0x7c20, 0x4e1b, 0xdffb, 0x3bfd, 0x0, 0x0);
        gbc.writeMem(0x3809, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x7359);
        EXPECT(gbc.pc(), 0x380b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0271
        gbc.setState(0xd316, 0x5eb7, 0x6ce0, 0x9a13, 0xaaae, 0x91b9, 0x0, 0x0);
        gbc.writeMem(0xd316, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5eb7);
        EXPECT(gbc.pc(), 0xd318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd316), 0xcb);
        EXPECT(gbc.readMem(0xd317), 0x79);
        // CB 79 0272
        gbc.setState(0x5a78, 0xf98a, 0x3ec0, 0x75bd, 0xcb0e, 0x6117, 0x0, 0x1);
        gbc.writeMem(0x5a78, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf98a);
        EXPECT(gbc.pc(), 0x5a7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0273
        gbc.setState(0xca93, 0x9d14, 0xbbf0, 0xa7c0, 0xd1a4, 0xcca2, 0x0, 0x0);
        gbc.writeMem(0xca93, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9d14);
        EXPECT(gbc.pc(), 0xca95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca93), 0xcb);
        EXPECT(gbc.readMem(0xca94), 0x79);
        // CB 79 0274
        gbc.setState(0xcc7c, 0x8175, 0x7c30, 0x59a2, 0xb1d8, 0xe57a, 0x1, 0x0);
        gbc.writeMem(0xcc7c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8175);
        EXPECT(gbc.pc(), 0xcc7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc7c), 0xcb);
        EXPECT(gbc.readMem(0xcc7d), 0x79);
        // CB 79 0275
        gbc.setState(0x3eab, 0xad0a, 0xef50, 0xeb29, 0x6b33, 0xebe2, 0x1, 0x1);
        gbc.writeMem(0x3eab, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xad0a);
        EXPECT(gbc.pc(), 0x3ead);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0276
        gbc.setState(0x2d0c, 0xa17b, 0xac80, 0x5b9b, 0x1185, 0x483b, 0x1, 0x0);
        gbc.writeMem(0x2d0c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa17b);
        EXPECT(gbc.pc(), 0x2d0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0277
        gbc.setState(0xd54b, 0xa6f, 0xe50, 0xfa01, 0x4f92, 0x296d, 0x1, 0x0);
        gbc.writeMem(0xd54b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa6f);
        EXPECT(gbc.pc(), 0xd54d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd54b), 0xcb);
        EXPECT(gbc.readMem(0xd54c), 0x79);
        // CB 79 0278
        gbc.setState(0x7a2a, 0xd383, 0xb430, 0x73cc, 0x17d8, 0x54c3, 0x1, 0x0);
        gbc.writeMem(0x7a2a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd383);
        EXPECT(gbc.pc(), 0x7a2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0279
        gbc.setState(0x3099, 0xf878, 0xa2c0, 0x3823, 0x134f, 0x26ac, 0x1, 0x1);
        gbc.writeMem(0x3099, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf878);
        EXPECT(gbc.pc(), 0x309b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 027A
        gbc.setState(0x6ce4, 0xa75f, 0xc050, 0x83d2, 0x53ef, 0xec87, 0x1, 0x0);
        gbc.writeMem(0x6ce4, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa75f);
        EXPECT(gbc.pc(), 0x6ce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 027B
        gbc.setState(0xc09a, 0xfb9e, 0x39a0, 0x2c7c, 0x12f0, 0xed71, 0x0, 0x0);
        gbc.writeMem(0xc09a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xfb9e);
        EXPECT(gbc.pc(), 0xc09c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc09a), 0xcb);
        EXPECT(gbc.readMem(0xc09b), 0x79);
        // CB 79 027C
        gbc.setState(0xdcf8, 0xf6, 0x3c60, 0xd87f, 0xc4cc, 0xebc3, 0x0, 0x1);
        gbc.writeMem(0xdcf8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf6);
        EXPECT(gbc.pc(), 0xdcfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcf8), 0xcb);
        EXPECT(gbc.readMem(0xdcf9), 0x79);
        // CB 79 027D
        gbc.setState(0xf0e, 0x8855, 0xe480, 0xacc9, 0x773d, 0x465a, 0x0, 0x1);
        gbc.writeMem(0xf0e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8855);
        EXPECT(gbc.pc(), 0xf10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 027E
        gbc.setState(0xafc2, 0xd5e6, 0xf5d0, 0x2097, 0x1baf, 0x72dd, 0x1, 0x0);
        gbc.writeMem(0xafc2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd5e6);
        EXPECT(gbc.pc(), 0xafc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafc2), 0xcb);
        EXPECT(gbc.readMem(0xafc3), 0x79);
        // CB 79 027F
        gbc.setState(0xd2da, 0xe180, 0x23c0, 0xd6dc, 0x4c90, 0x5343, 0x0, 0x1);
        gbc.writeMem(0xd2da, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe180);
        EXPECT(gbc.pc(), 0xd2dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2da), 0xcb);
        EXPECT(gbc.readMem(0xd2db), 0x79);
        // CB 79 0280
        gbc.setState(0x706b, 0x2cf3, 0xb230, 0x5e46, 0x3730, 0xeecd, 0x1, 0x0);
        gbc.writeMem(0x706b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2cf3);
        EXPECT(gbc.pc(), 0x706d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0281
        gbc.setState(0xc6c3, 0x13df, 0xf490, 0x9406, 0x5b8c, 0xcefa, 0x0, 0x1);
        gbc.writeMem(0xc6c3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x13df);
        EXPECT(gbc.pc(), 0xc6c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c3), 0xcb);
        EXPECT(gbc.readMem(0xc6c4), 0x79);
        // CB 79 0282
        gbc.setState(0xb5e5, 0x58ad, 0x16e0, 0xd35c, 0x7541, 0xde13, 0x0, 0x1);
        gbc.writeMem(0xb5e5, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x58ad);
        EXPECT(gbc.pc(), 0xb5e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5e5), 0xcb);
        EXPECT(gbc.readMem(0xb5e6), 0x79);
        // CB 79 0283
        gbc.setState(0xdd43, 0x2727, 0x89d0, 0x15e9, 0x6294, 0xa098, 0x1, 0x0);
        gbc.writeMem(0xdd43, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2727);
        EXPECT(gbc.pc(), 0xdd45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd43), 0xcb);
        EXPECT(gbc.readMem(0xdd44), 0x79);
        // CB 79 0284
        gbc.setState(0xd1cf, 0xc872, 0xd390, 0x4066, 0xfe31, 0xebf8, 0x1, 0x1);
        gbc.writeMem(0xd1cf, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xc872);
        EXPECT(gbc.pc(), 0xd1d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1cf), 0xcb);
        EXPECT(gbc.readMem(0xd1d0), 0x79);
        // CB 79 0285
        gbc.setState(0x7025, 0xcf66, 0x3270, 0xdb17, 0x2c9a, 0x1e21, 0x1, 0x0);
        gbc.writeMem(0x7025, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xcf66);
        EXPECT(gbc.pc(), 0x7027);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0286
        gbc.setState(0x5b70, 0xa8f, 0xf280, 0x6950, 0xb5af, 0xc05a, 0x0, 0x0);
        gbc.writeMem(0x5b70, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa8f);
        EXPECT(gbc.pc(), 0x5b72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0288
        gbc.setState(0x837f, 0x4be0, 0x2ce0, 0xd332, 0x162e, 0xcc21, 0x1, 0x1);
        gbc.writeMem(0x837f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4be0);
        EXPECT(gbc.pc(), 0x8381);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x837f), 0xcb);
        EXPECT(gbc.readMem(0x8380), 0x79);
        // CB 79 0289
        gbc.setState(0x8a6c, 0x6f36, 0x4770, 0x1d1c, 0x8996, 0x2b4f, 0x0, 0x0);
        gbc.writeMem(0x8a6c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6f36);
        EXPECT(gbc.pc(), 0x8a6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a6c), 0xcb);
        EXPECT(gbc.readMem(0x8a6d), 0x79);
        // CB 79 028A
        gbc.setState(0xb914, 0x7b15, 0xfbc0, 0xe1f5, 0xc2be, 0xcfc9, 0x1, 0x0);
        gbc.writeMem(0xb914, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7b15);
        EXPECT(gbc.pc(), 0xb916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb914), 0xcb);
        EXPECT(gbc.readMem(0xb915), 0x79);
        // CB 79 028B
        gbc.setState(0x5b97, 0x5c01, 0xa450, 0xf731, 0x35af, 0xc404, 0x0, 0x1);
        gbc.writeMem(0x5b97, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5c01);
        EXPECT(gbc.pc(), 0x5b99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 028C
        gbc.setState(0x1d5f, 0xb7db, 0x7b60, 0x1f95, 0x7881, 0xc2f9, 0x1, 0x0);
        gbc.writeMem(0x1d5f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb7db);
        EXPECT(gbc.pc(), 0x1d61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 028D
        gbc.setState(0xec36, 0x79b6, 0xd250, 0x2d53, 0x4e3a, 0x817d, 0x1, 0x0);
        gbc.writeMem(0xec36, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x79b6);
        EXPECT(gbc.pc(), 0xec38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec36), 0xcb);
        EXPECT(gbc.readMem(0xec37), 0x79);
        // CB 79 028E
        gbc.setState(0x2726, 0x1196, 0xcca0, 0x6834, 0xe272, 0x243, 0x0, 0x1);
        gbc.writeMem(0x2726, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1196);
        EXPECT(gbc.pc(), 0x2728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 028F
        gbc.setState(0x7b7, 0x616b, 0xa150, 0x63df, 0x2fc1, 0x1f6f, 0x0, 0x1);
        gbc.writeMem(0x7b7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x616b);
        EXPECT(gbc.pc(), 0x7b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0290
        gbc.setState(0x7e6d, 0xdf82, 0xd6e0, 0xcc3c, 0x5da2, 0xab0a, 0x0, 0x1);
        gbc.writeMem(0x7e6d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xdf82);
        EXPECT(gbc.pc(), 0x7e6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0291
        gbc.setState(0x6d69, 0x2880, 0x5ab0, 0x281, 0x80d2, 0xf74b, 0x0, 0x0);
        gbc.writeMem(0x6d69, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2880);
        EXPECT(gbc.pc(), 0x6d6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0292
        gbc.setState(0x1d53, 0x301d, 0x6c90, 0xb3bc, 0x2752, 0x7b8, 0x0, 0x0);
        gbc.writeMem(0x1d53, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x301d);
        EXPECT(gbc.pc(), 0x1d55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0293
        gbc.setState(0xbb3c, 0x14cd, 0x29d0, 0x8fdc, 0x1747, 0x96b8, 0x0, 0x0);
        gbc.writeMem(0xbb3c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x14cd);
        EXPECT(gbc.pc(), 0xbb3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb3c), 0xcb);
        EXPECT(gbc.readMem(0xbb3d), 0x79);
        // CB 79 0294
        gbc.setState(0xae34, 0xa2d0, 0x9ff0, 0xb72d, 0x2df9, 0xcff9, 0x0, 0x1);
        gbc.writeMem(0xae34, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa2d0);
        EXPECT(gbc.pc(), 0xae36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae34), 0xcb);
        EXPECT(gbc.readMem(0xae35), 0x79);
        // CB 79 0295
        gbc.setState(0x17ba, 0x529, 0xd050, 0xf5a4, 0xe8fe, 0x8ed3, 0x1, 0x1);
        gbc.writeMem(0x17ba, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x529);
        EXPECT(gbc.pc(), 0x17bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0296
        gbc.setState(0x7ea4, 0x8357, 0x7ea0, 0xc307, 0xdec1, 0xdb0c, 0x1, 0x0);
        gbc.writeMem(0x7ea4, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8357);
        EXPECT(gbc.pc(), 0x7ea6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0297
        gbc.setState(0x331d, 0xda01, 0x4b30, 0x19f7, 0xe549, 0x4a94, 0x1, 0x1);
        gbc.writeMem(0x331d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xda01);
        EXPECT(gbc.pc(), 0x331f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0298
        gbc.setState(0x707b, 0x3056, 0xe310, 0xda44, 0xbedd, 0x9209, 0x1, 0x1);
        gbc.writeMem(0x707b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3056);
        EXPECT(gbc.pc(), 0x707d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0299
        gbc.setState(0xc13c, 0xb3cc, 0xf160, 0xdecc, 0x590a, 0xbf66, 0x0, 0x1);
        gbc.writeMem(0xc13c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb3cc);
        EXPECT(gbc.pc(), 0xc13e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc13c), 0xcb);
        EXPECT(gbc.readMem(0xc13d), 0x79);
        // CB 79 029A
        gbc.setState(0x2fe5, 0x3aba, 0x2870, 0xfd17, 0x300a, 0x56f2, 0x1, 0x0);
        gbc.writeMem(0x2fe5, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3aba);
        EXPECT(gbc.pc(), 0x2fe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 029B
        gbc.setState(0x4665, 0xed11, 0x3c40, 0x5ddc, 0xd68, 0x297, 0x0, 0x0);
        gbc.writeMem(0x4665, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xed11);
        EXPECT(gbc.pc(), 0x4667);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 029C
        gbc.setState(0x9483, 0xd33d, 0x3bc0, 0x48b7, 0x8a53, 0xfd1d, 0x0, 0x0);
        gbc.writeMem(0x9483, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd33d);
        EXPECT(gbc.pc(), 0x9485);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9483), 0xcb);
        EXPECT(gbc.readMem(0x9484), 0x79);
        // CB 79 029D
        gbc.setState(0x460c, 0x298a, 0xb7c0, 0xb405, 0xb903, 0x78a, 0x1, 0x0);
        gbc.writeMem(0x460c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x298a);
        EXPECT(gbc.pc(), 0x460e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 029E
        gbc.setState(0x4b40, 0x5fce, 0xd1a0, 0x89c6, 0x7323, 0xfe48, 0x1, 0x1);
        gbc.writeMem(0x4b40, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x5fce);
        EXPECT(gbc.pc(), 0x4b42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 029F
        gbc.setState(0x46ba, 0x3d28, 0x85a0, 0x12bc, 0x9f40, 0xce8, 0x1, 0x1);
        gbc.writeMem(0x46ba, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3d28);
        EXPECT(gbc.pc(), 0x46bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02A0
        gbc.setState(0xa9eb, 0xe23d, 0x1e90, 0x98d2, 0xc899, 0x3d77, 0x1, 0x1);
        gbc.writeMem(0xa9eb, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe23d);
        EXPECT(gbc.pc(), 0xa9ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9eb), 0xcb);
        EXPECT(gbc.readMem(0xa9ec), 0x79);
        // CB 79 02A1
        gbc.setState(0x6480, 0x19c9, 0xfe70, 0x535, 0x22a, 0xbb31, 0x0, 0x1);
        gbc.writeMem(0x6480, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x19c9);
        EXPECT(gbc.pc(), 0x6482);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02A2
        gbc.setState(0xae63, 0x78b0, 0x7c60, 0xf3e6, 0xb9ec, 0x2964, 0x0, 0x1);
        gbc.writeMem(0xae63, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x78b0);
        EXPECT(gbc.pc(), 0xae65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae63), 0xcb);
        EXPECT(gbc.readMem(0xae64), 0x79);
        // CB 79 02A3
        gbc.setState(0x50e7, 0x9fc2, 0xfb0, 0x67c9, 0x98fb, 0x976c, 0x1, 0x1);
        gbc.writeMem(0x50e7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9fc2);
        EXPECT(gbc.pc(), 0x50e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02A4
        gbc.setState(0x9f1c, 0x2b39, 0x8180, 0xb87a, 0x6ccd, 0x8b92, 0x1, 0x0);
        gbc.writeMem(0x9f1c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2b39);
        EXPECT(gbc.pc(), 0x9f1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f1c), 0xcb);
        EXPECT(gbc.readMem(0x9f1d), 0x79);
        // CB 79 02A5
        gbc.setState(0x4eb0, 0x9992, 0xd310, 0x6a4f, 0x7ba2, 0xae58, 0x0, 0x1);
        gbc.writeMem(0x4eb0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9992);
        EXPECT(gbc.pc(), 0x4eb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02A6
        gbc.setState(0x76be, 0x2a15, 0x1cb0, 0x560c, 0x43a8, 0x2b99, 0x0, 0x0);
        gbc.writeMem(0x76be, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2a15);
        EXPECT(gbc.pc(), 0x76c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02A7
        gbc.setState(0x1c6b, 0x1bae, 0x1e0, 0x7412, 0x56b0, 0x940b, 0x0, 0x1);
        gbc.writeMem(0x1c6b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1bae);
        EXPECT(gbc.pc(), 0x1c6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02A8
        gbc.setState(0x807, 0xae5d, 0xb960, 0x8d3c, 0xc177, 0x2607, 0x0, 0x0);
        gbc.writeMem(0x807, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xae5d);
        EXPECT(gbc.pc(), 0x809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02A9
        gbc.setState(0x10b, 0x8f7a, 0x42b0, 0x6095, 0xa6a5, 0xe835, 0x1, 0x1);
        gbc.writeMem(0x10b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8f7a);
        EXPECT(gbc.pc(), 0x10d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02AA
        gbc.setState(0x7461, 0xdce4, 0xa0f0, 0xfdd1, 0xe031, 0xb6fa, 0x1, 0x1);
        gbc.writeMem(0x7461, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xdce4);
        EXPECT(gbc.pc(), 0x7463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02AB
        gbc.setState(0xe9e, 0xb6b8, 0x77b0, 0x4d1e, 0xb368, 0xaa04, 0x1, 0x0);
        gbc.writeMem(0xe9e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb6b8);
        EXPECT(gbc.pc(), 0xea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02AC
        gbc.setState(0x44bf, 0x88cf, 0x5670, 0x7903, 0x2b6b, 0x37a6, 0x0, 0x0);
        gbc.writeMem(0x44bf, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x88cf);
        EXPECT(gbc.pc(), 0x44c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02AD
        gbc.setState(0x8be4, 0x26e7, 0x47b0, 0x9029, 0x4467, 0xb87c, 0x0, 0x0);
        gbc.writeMem(0x8be4, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x26e7);
        EXPECT(gbc.pc(), 0x8be6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8be4), 0xcb);
        EXPECT(gbc.readMem(0x8be5), 0x79);
        // CB 79 02AE
        gbc.setState(0xe9ac, 0x4516, 0xacd0, 0x5d2f, 0x2656, 0x7026, 0x1, 0x1);
        gbc.writeMem(0xe9ac, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x4516);
        EXPECT(gbc.pc(), 0xe9ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9ac), 0xcb);
        EXPECT(gbc.readMem(0xe9ad), 0x79);
        // CB 79 02AF
        gbc.setState(0xdb8b, 0x44a7, 0x64e0, 0x269c, 0xc5a6, 0x3a6b, 0x0, 0x0);
        gbc.writeMem(0xdb8b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x44a7);
        EXPECT(gbc.pc(), 0xdb8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb8b), 0xcb);
        EXPECT(gbc.readMem(0xdb8c), 0x79);
        // CB 79 02B0
        gbc.setState(0x3156, 0x7a1f, 0x32b0, 0x8a47, 0x8a65, 0xb2e1, 0x1, 0x1);
        gbc.writeMem(0x3156, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7a1f);
        EXPECT(gbc.pc(), 0x3158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02B1
        gbc.setState(0x4995, 0x6b7a, 0x1c60, 0xdb56, 0x7e87, 0xd559, 0x0, 0x0);
        gbc.writeMem(0x4995, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x6b7a);
        EXPECT(gbc.pc(), 0x4997);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02B2
        gbc.setState(0x9dd3, 0xe5c2, 0xdfb0, 0x28fc, 0xfe17, 0x7188, 0x0, 0x1);
        gbc.writeMem(0x9dd3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe5c2);
        EXPECT(gbc.pc(), 0x9dd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dd3), 0xcb);
        EXPECT(gbc.readMem(0x9dd4), 0x79);
        // CB 79 02B3
        gbc.setState(0x26ee, 0x2ef3, 0x2e40, 0x82f0, 0x2ec9, 0x741c, 0x1, 0x0);
        gbc.writeMem(0x26ee, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2ef3);
        EXPECT(gbc.pc(), 0x26f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02B4
        gbc.setState(0x769c, 0xf3ce, 0x9970, 0xb963, 0xe065, 0x6ee3, 0x1, 0x0);
        gbc.writeMem(0x769c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf3ce);
        EXPECT(gbc.pc(), 0x769e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02B5
        gbc.setState(0xe011, 0xd912, 0xad10, 0x6f0c, 0x2e5d, 0xf711, 0x1, 0x0);
        gbc.writeMem(0xe011, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xd912);
        EXPECT(gbc.pc(), 0xe013);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe011), 0xcb);
        EXPECT(gbc.readMem(0xe012), 0x79);
        // CB 79 02B6
        gbc.setState(0x3a3c, 0x1cf1, 0x86b0, 0x7d03, 0x4446, 0xcf92, 0x0, 0x1);
        gbc.writeMem(0x3a3c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1cf1);
        EXPECT(gbc.pc(), 0x3a3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02B7
        gbc.setState(0x4dc1, 0x4651, 0x70c0, 0x290f, 0xb65e, 0x21cd, 0x1, 0x0);
        gbc.writeMem(0x4dc1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4651);
        EXPECT(gbc.pc(), 0x4dc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02B9
        gbc.setState(0xd315, 0x84e, 0xfb20, 0xd7cd, 0x46e1, 0xfa9c, 0x1, 0x1);
        gbc.writeMem(0xd315, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x84e);
        EXPECT(gbc.pc(), 0xd317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd315), 0xcb);
        EXPECT(gbc.readMem(0xd316), 0x79);
        // CB 79 02BA
        gbc.setState(0xb512, 0x8dbc, 0x9730, 0x27b2, 0x8c51, 0x8076, 0x0, 0x0);
        gbc.writeMem(0xb512, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8dbc);
        EXPECT(gbc.pc(), 0xb514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb512), 0xcb);
        EXPECT(gbc.readMem(0xb513), 0x79);
        // CB 79 02BB
        gbc.setState(0x533a, 0x38e4, 0x2fa0, 0x6315, 0x200b, 0x517f, 0x1, 0x0);
        gbc.writeMem(0x533a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x38e4);
        EXPECT(gbc.pc(), 0x533c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02BC
        gbc.setState(0xbb46, 0x722e, 0x9fe0, 0xe545, 0xf436, 0x4f83, 0x1, 0x1);
        gbc.writeMem(0xbb46, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x722e);
        EXPECT(gbc.pc(), 0xbb48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb46), 0xcb);
        EXPECT(gbc.readMem(0xbb47), 0x79);
        // CB 79 02BD
        gbc.setState(0xccff, 0x381, 0x7030, 0x8835, 0x1c0a, 0xedfa, 0x0, 0x0);
        gbc.writeMem(0xccff, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x381);
        EXPECT(gbc.pc(), 0xcd01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccff), 0xcb);
        EXPECT(gbc.readMem(0xcd00), 0x79);
        // CB 79 02BE
        gbc.setState(0xd6d1, 0x7f61, 0x4580, 0xdf57, 0x9e5d, 0x323f, 0x0, 0x1);
        gbc.writeMem(0xd6d1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7f61);
        EXPECT(gbc.pc(), 0xd6d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6d1), 0xcb);
        EXPECT(gbc.readMem(0xd6d2), 0x79);
        // CB 79 02BF
        gbc.setState(0xd8a3, 0x5514, 0xb4e0, 0xa0ff, 0x9596, 0x9069, 0x0, 0x1);
        gbc.writeMem(0xd8a3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5514);
        EXPECT(gbc.pc(), 0xd8a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8a3), 0xcb);
        EXPECT(gbc.readMem(0xd8a4), 0x79);
        // CB 79 02C0
        gbc.setState(0x1f6c, 0x7c49, 0x5f00, 0x7dfc, 0x6df6, 0x81e6, 0x0, 0x0);
        gbc.writeMem(0x1f6c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7c49);
        EXPECT(gbc.pc(), 0x1f6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02C1
        gbc.setState(0xa1e7, 0x5d18, 0x23a0, 0x286d, 0x2bd0, 0x4a48, 0x0, 0x0);
        gbc.writeMem(0xa1e7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x5d18);
        EXPECT(gbc.pc(), 0xa1e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1e7), 0xcb);
        EXPECT(gbc.readMem(0xa1e8), 0x79);
        // CB 79 02C2
        gbc.setState(0xc159, 0xa9f1, 0xa210, 0xaac, 0xf5ed, 0xf131, 0x1, 0x0);
        gbc.writeMem(0xc159, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa9f1);
        EXPECT(gbc.pc(), 0xc15b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc159), 0xcb);
        EXPECT(gbc.readMem(0xc15a), 0x79);
        // CB 79 02C3
        gbc.setState(0x585, 0xa2f5, 0x94a0, 0x578d, 0x30c6, 0xbf5d, 0x0, 0x0);
        gbc.writeMem(0x585, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa2f5);
        EXPECT(gbc.pc(), 0x587);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02C4
        gbc.setState(0xae86, 0xfe8f, 0x7da0, 0x1905, 0xc70f, 0x2bd1, 0x0, 0x1);
        gbc.writeMem(0xae86, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xfe8f);
        EXPECT(gbc.pc(), 0xae88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae86), 0xcb);
        EXPECT(gbc.readMem(0xae87), 0x79);
        // CB 79 02C5
        gbc.setState(0xb0db, 0xcfe3, 0x8950, 0x654f, 0xa705, 0xa57f, 0x1, 0x1);
        gbc.writeMem(0xb0db, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xcfe3);
        EXPECT(gbc.pc(), 0xb0dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0db), 0xcb);
        EXPECT(gbc.readMem(0xb0dc), 0x79);
        // CB 79 02C6
        gbc.setState(0xe6f3, 0x8ada, 0xd1e0, 0x7754, 0xeb69, 0x9062, 0x0, 0x1);
        gbc.writeMem(0xe6f3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8ada);
        EXPECT(gbc.pc(), 0xe6f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6f3), 0xcb);
        EXPECT(gbc.readMem(0xe6f4), 0x79);
        // CB 79 02C7
        gbc.setState(0x22cf, 0x1d44, 0x8ef0, 0x847b, 0xcbf9, 0xfd71, 0x1, 0x0);
        gbc.writeMem(0x22cf, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x1d44);
        EXPECT(gbc.pc(), 0x22d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02C8
        gbc.setState(0x289f, 0xc65f, 0x70, 0x7b9a, 0x560, 0xa980, 0x0, 0x1);
        gbc.writeMem(0x289f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc65f);
        EXPECT(gbc.pc(), 0x28a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02C9
        gbc.setState(0x7f80, 0xa6cf, 0x7630, 0xc556, 0xf10, 0xb0eb, 0x0, 0x1);
        gbc.writeMem(0x7f80, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa6cf);
        EXPECT(gbc.pc(), 0x7f82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02CA
        gbc.setState(0x6f9f, 0x8c87, 0x1550, 0x4e1e, 0xc38c, 0xdbd8, 0x0, 0x0);
        gbc.writeMem(0x6f9f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8c87);
        EXPECT(gbc.pc(), 0x6fa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02CC
        gbc.setState(0x3398, 0xae15, 0x5470, 0x8ed3, 0xc02f, 0xaa65, 0x1, 0x0);
        gbc.writeMem(0x3398, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xae15);
        EXPECT(gbc.pc(), 0x339a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02CD
        gbc.setState(0xa35d, 0x802d, 0xd2f0, 0x9c1b, 0x9690, 0x4af8, 0x1, 0x0);
        gbc.writeMem(0xa35d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x802d);
        EXPECT(gbc.pc(), 0xa35f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa35d), 0xcb);
        EXPECT(gbc.readMem(0xa35e), 0x79);
        // CB 79 02CE
        gbc.setState(0x101d, 0x2d2, 0x5f80, 0x5879, 0x8f38, 0x7faf, 0x1, 0x1);
        gbc.writeMem(0x101d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2d2);
        EXPECT(gbc.pc(), 0x101f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02CF
        gbc.setState(0x41e1, 0x7d74, 0x2580, 0x35c1, 0x8e85, 0xd2d, 0x1, 0x1);
        gbc.writeMem(0x41e1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7d74);
        EXPECT(gbc.pc(), 0x41e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02D0
        gbc.setState(0x2469, 0x7b3f, 0x8720, 0x935e, 0xa363, 0x39b2, 0x0, 0x0);
        gbc.writeMem(0x2469, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7b3f);
        EXPECT(gbc.pc(), 0x246b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02D1
        gbc.setState(0xda3a, 0x2b14, 0x4d40, 0x6fe4, 0x8e5d, 0xd881, 0x1, 0x1);
        gbc.writeMem(0xda3a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2b14);
        EXPECT(gbc.pc(), 0xda3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda3a), 0xcb);
        EXPECT(gbc.readMem(0xda3b), 0x79);
        // CB 79 02D2
        gbc.setState(0xc30d, 0xcaae, 0x34e0, 0x86b9, 0xf2f, 0x3a43, 0x1, 0x0);
        gbc.writeMem(0xc30d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xcaae);
        EXPECT(gbc.pc(), 0xc30f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc30d), 0xcb);
        EXPECT(gbc.readMem(0xc30e), 0x79);
        // CB 79 02D4
        gbc.setState(0x4db5, 0x4ffa, 0xf0a0, 0x49f1, 0x61a4, 0xe766, 0x1, 0x0);
        gbc.writeMem(0x4db5, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4ffa);
        EXPECT(gbc.pc(), 0x4db7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02D5
        gbc.setState(0xd599, 0x3a33, 0xd820, 0xbed4, 0x9656, 0x6f3d, 0x0, 0x1);
        gbc.writeMem(0xd599, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3a33);
        EXPECT(gbc.pc(), 0xd59b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd599), 0xcb);
        EXPECT(gbc.readMem(0xd59a), 0x79);
        // CB 79 02D6
        gbc.setState(0x8ca, 0x2ad, 0xa1c0, 0xe67c, 0x40f9, 0x93c4, 0x0, 0x0);
        gbc.writeMem(0x8ca, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2ad);
        EXPECT(gbc.pc(), 0x8cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02D7
        gbc.setState(0x48a3, 0x36e2, 0x2da0, 0x286a, 0x1ed, 0x3a87, 0x1, 0x1);
        gbc.writeMem(0x48a3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x36e2);
        EXPECT(gbc.pc(), 0x48a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02D8
        gbc.setState(0x7542, 0x4814, 0xd8b0, 0x3040, 0xe575, 0x7acf, 0x1, 0x0);
        gbc.writeMem(0x7542, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4814);
        EXPECT(gbc.pc(), 0x7544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02D9
        gbc.setState(0x813d, 0x350, 0x8e70, 0x84f3, 0xa209, 0x67e2, 0x1, 0x1);
        gbc.writeMem(0x813d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x350);
        EXPECT(gbc.pc(), 0x813f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x813d), 0xcb);
        EXPECT(gbc.readMem(0x813e), 0x79);
        // CB 79 02DA
        gbc.setState(0x15df, 0x9b9c, 0x5bf0, 0xa64d, 0xc9d7, 0x28b4, 0x0, 0x1);
        gbc.writeMem(0x15df, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9b9c);
        EXPECT(gbc.pc(), 0x15e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02DB
        gbc.setState(0x9b1e, 0x956e, 0x2300, 0x2542, 0x1d30, 0x22f3, 0x0, 0x1);
        gbc.writeMem(0x9b1e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x956e);
        EXPECT(gbc.pc(), 0x9b20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b1e), 0xcb);
        EXPECT(gbc.readMem(0x9b1f), 0x79);
        // CB 79 02DC
        gbc.setState(0x1d9e, 0x18eb, 0x4ce0, 0xe26e, 0xbe17, 0x55f3, 0x0, 0x0);
        gbc.writeMem(0x1d9e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x18eb);
        EXPECT(gbc.pc(), 0x1da0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02DD
        gbc.setState(0x602f, 0x49a4, 0xbb00, 0x2ffe, 0x86ff, 0x69eb, 0x0, 0x1);
        gbc.writeMem(0x602f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x49a4);
        EXPECT(gbc.pc(), 0x6031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02DE
        gbc.setState(0xc732, 0x6119, 0xa360, 0x103, 0xaf99, 0x39c9, 0x0, 0x1);
        gbc.writeMem(0xc732, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6119);
        EXPECT(gbc.pc(), 0xc734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc732), 0xcb);
        EXPECT(gbc.readMem(0xc733), 0x79);
        // CB 79 02DF
        gbc.setState(0x7acd, 0xa0da, 0x1be0, 0x2a05, 0x5c28, 0xe609, 0x0, 0x1);
        gbc.writeMem(0x7acd, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa0da);
        EXPECT(gbc.pc(), 0x7acf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02E0
        gbc.setState(0x258f, 0x77d5, 0x9d10, 0xd4bf, 0xfde3, 0xc47, 0x0, 0x0);
        gbc.writeMem(0x258f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x77d5);
        EXPECT(gbc.pc(), 0x2591);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02E1
        gbc.setState(0xc6c6, 0xe22a, 0xb320, 0xaaf7, 0xaef7, 0x35f, 0x1, 0x1);
        gbc.writeMem(0xc6c6, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe22a);
        EXPECT(gbc.pc(), 0xc6c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6c6), 0xcb);
        EXPECT(gbc.readMem(0xc6c7), 0x79);
        // CB 79 02E2
        gbc.setState(0x8267, 0xf0cf, 0xe4d0, 0xcb19, 0x9748, 0xa196, 0x0, 0x1);
        gbc.writeMem(0x8267, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf0cf);
        EXPECT(gbc.pc(), 0x8269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8267), 0xcb);
        EXPECT(gbc.readMem(0x8268), 0x79);
        // CB 79 02E3
        gbc.setState(0x8684, 0x9401, 0xe3b0, 0x57b7, 0xc930, 0x17b6, 0x1, 0x0);
        gbc.writeMem(0x8684, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9401);
        EXPECT(gbc.pc(), 0x8686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8684), 0xcb);
        EXPECT(gbc.readMem(0x8685), 0x79);
        // CB 79 02E4
        gbc.setState(0x81eb, 0x9911, 0x900, 0xdc6a, 0xac81, 0xde09, 0x0, 0x1);
        gbc.writeMem(0x81eb, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x9911);
        EXPECT(gbc.pc(), 0x81ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81eb), 0xcb);
        EXPECT(gbc.readMem(0x81ec), 0x79);
        // CB 79 02E5
        gbc.setState(0xb56a, 0xa6e1, 0x3b0, 0xe347, 0xbfe9, 0xce46, 0x0, 0x0);
        gbc.writeMem(0xb56a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa6e1);
        EXPECT(gbc.pc(), 0xb56c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb56a), 0xcb);
        EXPECT(gbc.readMem(0xb56b), 0x79);
        // CB 79 02E6
        gbc.setState(0x638e, 0x7eee, 0xb70, 0xc9ef, 0x387c, 0xff49, 0x0, 0x1);
        gbc.writeMem(0x638e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x7eee);
        EXPECT(gbc.pc(), 0x6390);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02E7
        gbc.setState(0x7cbd, 0xca86, 0x7a40, 0x9e02, 0x9bd7, 0xa508, 0x1, 0x1);
        gbc.writeMem(0x7cbd, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xca86);
        EXPECT(gbc.pc(), 0x7cbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02E8
        gbc.setState(0xa712, 0xf7a1, 0xeef0, 0xc1c6, 0x91ce, 0x24b1, 0x1, 0x0);
        gbc.writeMem(0xa712, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf7a1);
        EXPECT(gbc.pc(), 0xa714);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa712), 0xcb);
        EXPECT(gbc.readMem(0xa713), 0x79);
        // CB 79 02E9
        gbc.setState(0xcf9e, 0x75e1, 0x4550, 0x9ff2, 0xecaf, 0xc3e1, 0x0, 0x0);
        gbc.writeMem(0xcf9e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x75e1);
        EXPECT(gbc.pc(), 0xcfa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf9e), 0xcb);
        EXPECT(gbc.readMem(0xcf9f), 0x79);
        // CB 79 02EA
        gbc.setState(0x10f1, 0x7d1e, 0x28b0, 0x231, 0x4708, 0x64c4, 0x1, 0x1);
        gbc.writeMem(0x10f1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x7d1e);
        EXPECT(gbc.pc(), 0x10f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02EB
        gbc.setState(0x53ef, 0xec4a, 0xee40, 0xdd6a, 0x4139, 0xf6ce, 0x1, 0x0);
        gbc.writeMem(0x53ef, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xec4a);
        EXPECT(gbc.pc(), 0x53f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02EC
        gbc.setState(0x9ad3, 0x4286, 0x7580, 0xc6ab, 0x857f, 0x5b99, 0x0, 0x1);
        gbc.writeMem(0x9ad3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4286);
        EXPECT(gbc.pc(), 0x9ad5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ad3), 0xcb);
        EXPECT(gbc.readMem(0x9ad4), 0x79);
        // CB 79 02ED
        gbc.setState(0xe16e, 0x36c5, 0xa390, 0xa01a, 0x5c09, 0x91aa, 0x0, 0x0);
        gbc.writeMem(0xe16e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x36c5);
        EXPECT(gbc.pc(), 0xe170);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe16e), 0xcb);
        EXPECT(gbc.readMem(0xe16f), 0x79);
        // CB 79 02EE
        gbc.setState(0x2b15, 0xe1d, 0x1f30, 0xb5cf, 0x3771, 0x6f9c, 0x1, 0x0);
        gbc.writeMem(0x2b15, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe1d);
        EXPECT(gbc.pc(), 0x2b17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02EF
        gbc.setState(0x78e0, 0x3814, 0x5c30, 0x3a6c, 0x33ab, 0xcf0b, 0x0, 0x0);
        gbc.writeMem(0x78e0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3814);
        EXPECT(gbc.pc(), 0x78e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02F0
        gbc.setState(0x78bd, 0x1f1c, 0xa5c0, 0x5198, 0x49d7, 0x9da7, 0x0, 0x1);
        gbc.writeMem(0x78bd, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x1f1c);
        EXPECT(gbc.pc(), 0x78bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02F1
        gbc.setState(0xeccf, 0xa771, 0xcc30, 0xe4cd, 0x984c, 0x1b61, 0x0, 0x0);
        gbc.writeMem(0xeccf, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xa771);
        EXPECT(gbc.pc(), 0xecd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeccf), 0xcb);
        EXPECT(gbc.readMem(0xecd0), 0x79);
        // CB 79 02F2
        gbc.setState(0x200d, 0xd21d, 0xa2f0, 0x7c11, 0x7c59, 0x4c71, 0x1, 0x1);
        gbc.writeMem(0x200d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd21d);
        EXPECT(gbc.pc(), 0x200f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02F3
        gbc.setState(0x4d12, 0x5dff, 0x8190, 0x39dd, 0xda51, 0xe83c, 0x0, 0x0);
        gbc.writeMem(0x4d12, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x5dff);
        EXPECT(gbc.pc(), 0x4d14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02F4
        gbc.setState(0x7543, 0x6f37, 0x84c0, 0x72b0, 0x1cf5, 0x51f3, 0x1, 0x1);
        gbc.writeMem(0x7543, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6f37);
        EXPECT(gbc.pc(), 0x7545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02F6
        gbc.setState(0xb7b0, 0x7957, 0xb160, 0x72c5, 0xad86, 0xf9cd, 0x1, 0x1);
        gbc.writeMem(0xb7b0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x7957);
        EXPECT(gbc.pc(), 0xb7b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7b0), 0xcb);
        EXPECT(gbc.readMem(0xb7b1), 0x79);
        // CB 79 02F7
        gbc.setState(0x17b8, 0xb4c4, 0x2680, 0x7b7f, 0xd61d, 0x4cfd, 0x0, 0x0);
        gbc.writeMem(0x17b8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb4c4);
        EXPECT(gbc.pc(), 0x17ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 02F8
        gbc.setState(0x7b10, 0xcecf, 0x4090, 0xf829, 0x2f6f, 0xb3c5, 0x0, 0x1);
        gbc.writeMem(0x7b10, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xcecf);
        EXPECT(gbc.pc(), 0x7b12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02F9
        gbc.setState(0x9837, 0x9e5c, 0x67b0, 0xa246, 0x8162, 0xe718, 0x0, 0x1);
        gbc.writeMem(0x9837, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9e5c);
        EXPECT(gbc.pc(), 0x9839);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9837), 0xcb);
        EXPECT(gbc.readMem(0x9838), 0x79);
        // CB 79 02FA
        gbc.setState(0x9917, 0x92b6, 0x500, 0xa6f4, 0x5803, 0x5b9b, 0x1, 0x1);
        gbc.writeMem(0x9917, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x92b6);
        EXPECT(gbc.pc(), 0x9919);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9917), 0xcb);
        EXPECT(gbc.readMem(0x9918), 0x79);
        // CB 79 02FB
        gbc.setState(0x8542, 0xef22, 0x2e50, 0x46f5, 0x29bb, 0x30f3, 0x0, 0x0);
        gbc.writeMem(0x8542, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xef22);
        EXPECT(gbc.pc(), 0x8544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8542), 0xcb);
        EXPECT(gbc.readMem(0x8543), 0x79);
        // CB 79 02FC
        gbc.setState(0x3d42, 0x225b, 0xcb0, 0xf7ea, 0x518c, 0xfb86, 0x0, 0x0);
        gbc.writeMem(0x3d42, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x225b);
        EXPECT(gbc.pc(), 0x3d44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 02FD
        gbc.setState(0x8ba2, 0x8f5e, 0x9d50, 0x45c2, 0x213b, 0xc1fa, 0x0, 0x1);
        gbc.writeMem(0x8ba2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8f5e);
        EXPECT(gbc.pc(), 0x8ba4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ba2), 0xcb);
        EXPECT(gbc.readMem(0x8ba3), 0x79);
        // CB 79 02FF
        gbc.setState(0x7cb3, 0xf7f0, 0xa4b0, 0x5bbe, 0xdb0e, 0x7532, 0x0, 0x1);
        gbc.writeMem(0x7cb3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf7f0);
        EXPECT(gbc.pc(), 0x7cb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0300
        gbc.setState(0xcba4, 0x99fe, 0x5510, 0x959f, 0x67b6, 0x68fa, 0x0, 0x0);
        gbc.writeMem(0xcba4, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x99fe);
        EXPECT(gbc.pc(), 0xcba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcba4), 0xcb);
        EXPECT(gbc.readMem(0xcba5), 0x79);
        // CB 79 0301
        gbc.setState(0x3f71, 0x5fb8, 0xa370, 0xef5a, 0xc684, 0x140d, 0x0, 0x0);
        gbc.writeMem(0x3f71, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5fb8);
        EXPECT(gbc.pc(), 0x3f73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0302
        gbc.setState(0xd431, 0xc2ff, 0xdb00, 0xa611, 0x8ec9, 0x592f, 0x0, 0x0);
        gbc.writeMem(0xd431, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc2ff);
        EXPECT(gbc.pc(), 0xd433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd431), 0xcb);
        EXPECT(gbc.readMem(0xd432), 0x79);
        // CB 79 0303
        gbc.setState(0x1318, 0x3842, 0x2150, 0x503f, 0xc8b7, 0x32e, 0x0, 0x1);
        gbc.writeMem(0x1318, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3842);
        EXPECT(gbc.pc(), 0x131a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0304
        gbc.setState(0x2b8a, 0xe2ab, 0x4580, 0xf500, 0xda68, 0x7d55, 0x0, 0x1);
        gbc.writeMem(0x2b8a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe2ab);
        EXPECT(gbc.pc(), 0x2b8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0305
        gbc.setState(0xc56c, 0x8c78, 0xd460, 0x5b23, 0xdc1b, 0x3db8, 0x1, 0x0);
        gbc.writeMem(0xc56c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x8c78);
        EXPECT(gbc.pc(), 0xc56e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc56c), 0xcb);
        EXPECT(gbc.readMem(0xc56d), 0x79);
        // CB 79 0306
        gbc.setState(0xda23, 0x7b8a, 0x800, 0x726f, 0x896d, 0x6133, 0x1, 0x1);
        gbc.writeMem(0xda23, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7b8a);
        EXPECT(gbc.pc(), 0xda25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda23), 0xcb);
        EXPECT(gbc.readMem(0xda24), 0x79);
        // CB 79 0307
        gbc.setState(0xc74a, 0x5ede, 0x3320, 0xd720, 0x270f, 0xc9bf, 0x1, 0x1);
        gbc.writeMem(0xc74a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5ede);
        EXPECT(gbc.pc(), 0xc74c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc74a), 0xcb);
        EXPECT(gbc.readMem(0xc74b), 0x79);
        // CB 79 0308
        gbc.setState(0xce8, 0x5f24, 0x3070, 0x7c97, 0xd471, 0x4e58, 0x0, 0x0);
        gbc.writeMem(0xce8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5f24);
        EXPECT(gbc.pc(), 0xcea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 030A
        gbc.setState(0xe87a, 0x711c, 0x5790, 0x5a81, 0x1832, 0x7d08, 0x0, 0x0);
        gbc.writeMem(0xe87a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x711c);
        EXPECT(gbc.pc(), 0xe87c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe87a), 0xcb);
        EXPECT(gbc.readMem(0xe87b), 0x79);
        // CB 79 030B
        gbc.setState(0x6bc, 0x7b3c, 0x8ca0, 0x94c4, 0x9040, 0x9e45, 0x0, 0x1);
        gbc.writeMem(0x6bc, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7b3c);
        EXPECT(gbc.pc(), 0x6be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 030C
        gbc.setState(0x1dab, 0xc2f0, 0x4080, 0x478d, 0x4dc9, 0xbe6a, 0x0, 0x1);
        gbc.writeMem(0x1dab, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc2f0);
        EXPECT(gbc.pc(), 0x1dad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 030D
        gbc.setState(0xdd18, 0xf0fc, 0x21b0, 0xacb9, 0x2a96, 0xa560, 0x1, 0x0);
        gbc.writeMem(0xdd18, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf0fc);
        EXPECT(gbc.pc(), 0xdd1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd18), 0xcb);
        EXPECT(gbc.readMem(0xdd19), 0x79);
        // CB 79 030E
        gbc.setState(0x9ae3, 0xf8cd, 0x6230, 0x8176, 0xa2e3, 0x5514, 0x1, 0x0);
        gbc.writeMem(0x9ae3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf8cd);
        EXPECT(gbc.pc(), 0x9ae5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ae3), 0xcb);
        EXPECT(gbc.readMem(0x9ae4), 0x79);
        // CB 79 030F
        gbc.setState(0x62e9, 0xeb76, 0x14f0, 0xbddd, 0xc03d, 0x6138, 0x1, 0x1);
        gbc.writeMem(0x62e9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xeb76);
        EXPECT(gbc.pc(), 0x62eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0310
        gbc.setState(0x3c95, 0x9ce8, 0xb8b0, 0x56cd, 0xc357, 0x56cb, 0x1, 0x1);
        gbc.writeMem(0x3c95, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9ce8);
        EXPECT(gbc.pc(), 0x3c97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0311
        gbc.setState(0xc155, 0x896, 0x8080, 0xbafb, 0x10b3, 0xb691, 0x0, 0x0);
        gbc.writeMem(0xc155, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x896);
        EXPECT(gbc.pc(), 0xc157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc155), 0xcb);
        EXPECT(gbc.readMem(0xc156), 0x79);
        // CB 79 0312
        gbc.setState(0x6ceb, 0x4fab, 0x2230, 0x1b8a, 0xb557, 0x6007, 0x0, 0x1);
        gbc.writeMem(0x6ceb, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4fab);
        EXPECT(gbc.pc(), 0x6ced);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0313
        gbc.setState(0xc78d, 0xc7c0, 0x2060, 0x7de1, 0xbeae, 0x9c06, 0x1, 0x0);
        gbc.writeMem(0xc78d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc7c0);
        EXPECT(gbc.pc(), 0xc78f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc78d), 0xcb);
        EXPECT(gbc.readMem(0xc78e), 0x79);
        // CB 79 0314
        gbc.setState(0x753c, 0x2bc5, 0x6c10, 0x3aad, 0xfd08, 0x8e5f, 0x0, 0x1);
        gbc.writeMem(0x753c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2bc5);
        EXPECT(gbc.pc(), 0x753e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0315
        gbc.setState(0xc071, 0x85a5, 0x87a0, 0x4650, 0xd5d1, 0x740a, 0x1, 0x1);
        gbc.writeMem(0xc071, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x85a5);
        EXPECT(gbc.pc(), 0xc073);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc071), 0xcb);
        EXPECT(gbc.readMem(0xc072), 0x79);
        // CB 79 0316
        gbc.setState(0x6b23, 0x76c3, 0xd0, 0x1702, 0x71b8, 0xfb7d, 0x1, 0x1);
        gbc.writeMem(0x6b23, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x76c3);
        EXPECT(gbc.pc(), 0x6b25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0317
        gbc.setState(0x1c82, 0x1737, 0x3810, 0x9d3e, 0xa31d, 0x50d0, 0x0, 0x1);
        gbc.writeMem(0x1c82, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1737);
        EXPECT(gbc.pc(), 0x1c84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0318
        gbc.setState(0x4c0f, 0x45ea, 0x8330, 0x2a08, 0x215a, 0x365c, 0x0, 0x0);
        gbc.writeMem(0x4c0f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x45ea);
        EXPECT(gbc.pc(), 0x4c11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0319
        gbc.setState(0xd334, 0xd9a2, 0x2aa0, 0x398a, 0xaf7d, 0xdf63, 0x1, 0x1);
        gbc.writeMem(0xd334, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd9a2);
        EXPECT(gbc.pc(), 0xd336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd334), 0xcb);
        EXPECT(gbc.readMem(0xd335), 0x79);
        // CB 79 031A
        gbc.setState(0xd7ba, 0x613a, 0x9d0, 0x68f8, 0x867e, 0xf008, 0x1, 0x0);
        gbc.writeMem(0xd7ba, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x613a);
        EXPECT(gbc.pc(), 0xd7bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ba), 0xcb);
        EXPECT(gbc.readMem(0xd7bb), 0x79);
        // CB 79 031B
        gbc.setState(0x6ec0, 0x308f, 0xc130, 0x923e, 0xb7e7, 0xaf17, 0x0, 0x1);
        gbc.writeMem(0x6ec0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x308f);
        EXPECT(gbc.pc(), 0x6ec2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 031C
        gbc.setState(0xde2a, 0x7225, 0x5590, 0x9238, 0x2e96, 0x139a, 0x0, 0x0);
        gbc.writeMem(0xde2a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7225);
        EXPECT(gbc.pc(), 0xde2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde2a), 0xcb);
        EXPECT(gbc.readMem(0xde2b), 0x79);
        // CB 79 031D
        gbc.setState(0x73e, 0x2432, 0x1e00, 0xd037, 0x2cab, 0xf8eb, 0x0, 0x1);
        gbc.writeMem(0x73e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x2432);
        EXPECT(gbc.pc(), 0x740);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 031E
        gbc.setState(0x91f5, 0xe8b3, 0x3880, 0xe45f, 0x830c, 0xd360, 0x1, 0x0);
        gbc.writeMem(0x91f5, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe8b3);
        EXPECT(gbc.pc(), 0x91f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91f5), 0xcb);
        EXPECT(gbc.readMem(0x91f6), 0x79);
        // CB 79 031F
        gbc.setState(0x9c7e, 0x7dc1, 0x26b0, 0x8699, 0x16a, 0x67c7, 0x1, 0x1);
        gbc.writeMem(0x9c7e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7dc1);
        EXPECT(gbc.pc(), 0x9c80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c7e), 0xcb);
        EXPECT(gbc.readMem(0x9c7f), 0x79);
        // CB 79 0320
        gbc.setState(0xb895, 0xd3ea, 0x4aa0, 0xbff9, 0x37a8, 0xdc33, 0x0, 0x1);
        gbc.writeMem(0xb895, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd3ea);
        EXPECT(gbc.pc(), 0xb897);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb895), 0xcb);
        EXPECT(gbc.readMem(0xb896), 0x79);
        // CB 79 0321
        gbc.setState(0x4e6b, 0xa557, 0x3f80, 0x5c29, 0x51dd, 0xca74, 0x0, 0x0);
        gbc.writeMem(0x4e6b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa557);
        EXPECT(gbc.pc(), 0x4e6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0322
        gbc.setState(0xabbb, 0x4f5, 0xd210, 0x54ff, 0x17f0, 0x1c57, 0x0, 0x0);
        gbc.writeMem(0xabbb, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4f5);
        EXPECT(gbc.pc(), 0xabbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabbb), 0xcb);
        EXPECT(gbc.readMem(0xabbc), 0x79);
        // CB 79 0323
        gbc.setState(0x3e6b, 0x70e6, 0x31f0, 0x7d53, 0xb27, 0x700f, 0x1, 0x1);
        gbc.writeMem(0x3e6b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x70e6);
        EXPECT(gbc.pc(), 0x3e6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0324
        gbc.setState(0xb5c6, 0x4fbc, 0xd320, 0xea7b, 0xad96, 0x95b3, 0x0, 0x0);
        gbc.writeMem(0xb5c6, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4fbc);
        EXPECT(gbc.pc(), 0xb5c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5c6), 0xcb);
        EXPECT(gbc.readMem(0xb5c7), 0x79);
        // CB 79 0325
        gbc.setState(0xca46, 0xa9b8, 0x1dd0, 0xbe6d, 0x8bd5, 0x57fb, 0x1, 0x1);
        gbc.writeMem(0xca46, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa9b8);
        EXPECT(gbc.pc(), 0xca48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca46), 0xcb);
        EXPECT(gbc.readMem(0xca47), 0x79);
        // CB 79 0326
        gbc.setState(0xc77a, 0xed88, 0x2680, 0x787b, 0xfd20, 0x12f8, 0x1, 0x0);
        gbc.writeMem(0xc77a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xed88);
        EXPECT(gbc.pc(), 0xc77c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc77a), 0xcb);
        EXPECT(gbc.readMem(0xc77b), 0x79);
        // CB 79 0327
        gbc.setState(0x5b50, 0x9f09, 0x3950, 0xdb9b, 0xb9f7, 0x4ef5, 0x1, 0x0);
        gbc.writeMem(0x5b50, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9f09);
        EXPECT(gbc.pc(), 0x5b52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0328
        gbc.setState(0xe987, 0x491c, 0xe430, 0x119b, 0x5280, 0xdc96, 0x1, 0x0);
        gbc.writeMem(0xe987, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x491c);
        EXPECT(gbc.pc(), 0xe989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe987), 0xcb);
        EXPECT(gbc.readMem(0xe988), 0x79);
        // CB 79 0329
        gbc.setState(0xaf67, 0x1c43, 0x90f0, 0x7e07, 0x9fe2, 0xd1d, 0x0, 0x1);
        gbc.writeMem(0xaf67, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1c43);
        EXPECT(gbc.pc(), 0xaf69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf67), 0xcb);
        EXPECT(gbc.readMem(0xaf68), 0x79);
        // CB 79 032A
        gbc.setState(0x16f6, 0xc07b, 0x9510, 0x60a7, 0x7f25, 0xf57d, 0x0, 0x1);
        gbc.writeMem(0x16f6, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc07b);
        EXPECT(gbc.pc(), 0x16f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 032B
        gbc.setState(0x5356, 0x8fcf, 0x4620, 0x9b7b, 0x3d3, 0x1e25, 0x1, 0x0);
        gbc.writeMem(0x5356, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8fcf);
        EXPECT(gbc.pc(), 0x5358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 032C
        gbc.setState(0x8d, 0x6b0, 0xe70, 0xd34e, 0xaeb2, 0x9169, 0x0, 0x0);
        gbc.writeMem(0x8d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x6b0);
        EXPECT(gbc.pc(), 0x8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 032D
        gbc.setState(0x239e, 0xc302, 0x5470, 0x4743, 0x7c17, 0xa0ba, 0x1, 0x0);
        gbc.writeMem(0x239e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc302);
        EXPECT(gbc.pc(), 0x23a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 032E
        gbc.setState(0x30f4, 0x52a, 0x19d0, 0xd5dc, 0xf21c, 0x269e, 0x1, 0x0);
        gbc.writeMem(0x30f4, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x52a);
        EXPECT(gbc.pc(), 0x30f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 032F
        gbc.setState(0x2170, 0x4efd, 0xc7c0, 0x9e58, 0xae39, 0xcd46, 0x1, 0x0);
        gbc.writeMem(0x2170, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x4efd);
        EXPECT(gbc.pc(), 0x2172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0330
        gbc.setState(0xa769, 0xa69c, 0xecd0, 0xb5d1, 0x317c, 0x5f31, 0x0, 0x1);
        gbc.writeMem(0xa769, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa69c);
        EXPECT(gbc.pc(), 0xa76b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa769), 0xcb);
        EXPECT(gbc.readMem(0xa76a), 0x79);
        // CB 79 0331
        gbc.setState(0x57a5, 0x7188, 0x60b0, 0xb003, 0x9eca, 0x60b, 0x1, 0x1);
        gbc.writeMem(0x57a5, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7188);
        EXPECT(gbc.pc(), 0x57a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0332
        gbc.setState(0x31ab, 0x2138, 0x5660, 0xecaa, 0x402a, 0x4d4b, 0x1, 0x1);
        gbc.writeMem(0x31ab, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2138);
        EXPECT(gbc.pc(), 0x31ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0333
        gbc.setState(0x6fc0, 0x7c60, 0x6c80, 0x9180, 0x135, 0x8dfd, 0x1, 0x1);
        gbc.writeMem(0x6fc0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x7c60);
        EXPECT(gbc.pc(), 0x6fc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0334
        gbc.setState(0xecd0, 0x7ab1, 0x4ff0, 0x4ef0, 0x87aa, 0x543f, 0x1, 0x0);
        gbc.writeMem(0xecd0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7ab1);
        EXPECT(gbc.pc(), 0xecd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecd0), 0xcb);
        EXPECT(gbc.readMem(0xecd1), 0x79);
        // CB 79 0335
        gbc.setState(0xea91, 0x6dcf, 0xccf0, 0xeef, 0xc15a, 0xadcb, 0x1, 0x1);
        gbc.writeMem(0xea91, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6dcf);
        EXPECT(gbc.pc(), 0xea93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea91), 0xcb);
        EXPECT(gbc.readMem(0xea92), 0x79);
        // CB 79 0336
        gbc.setState(0xd02d, 0xc53f, 0x2c80, 0xf9b8, 0x43e7, 0x88ec, 0x0, 0x1);
        gbc.writeMem(0xd02d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc53f);
        EXPECT(gbc.pc(), 0xd02f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd02d), 0xcb);
        EXPECT(gbc.readMem(0xd02e), 0x79);
        // CB 79 0337
        gbc.setState(0xc5c9, 0x1a56, 0x84d0, 0xd063, 0xd86d, 0x17e2, 0x0, 0x0);
        gbc.writeMem(0xc5c9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1a56);
        EXPECT(gbc.pc(), 0xc5cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5c9), 0xcb);
        EXPECT(gbc.readMem(0xc5ca), 0x79);
        // CB 79 0338
        gbc.setState(0xba49, 0xd3d7, 0x7c00, 0xef87, 0x50f, 0x7f44, 0x1, 0x1);
        gbc.writeMem(0xba49, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd3d7);
        EXPECT(gbc.pc(), 0xba4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba49), 0xcb);
        EXPECT(gbc.readMem(0xba4a), 0x79);
        // CB 79 0339
        gbc.setState(0xaeb3, 0x9746, 0xf20, 0x356f, 0xd74f, 0xe924, 0x0, 0x1);
        gbc.writeMem(0xaeb3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9746);
        EXPECT(gbc.pc(), 0xaeb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeb3), 0xcb);
        EXPECT(gbc.readMem(0xaeb4), 0x79);
        // CB 79 033A
        gbc.setState(0x718a, 0x520d, 0xdc70, 0xc2de, 0xa957, 0xb100, 0x1, 0x1);
        gbc.writeMem(0x718a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x520d);
        EXPECT(gbc.pc(), 0x718c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 033B
        gbc.setState(0x8e6a, 0x83c2, 0x7830, 0xf346, 0x2a56, 0xb6d2, 0x0, 0x1);
        gbc.writeMem(0x8e6a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x83c2);
        EXPECT(gbc.pc(), 0x8e6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e6a), 0xcb);
        EXPECT(gbc.readMem(0x8e6b), 0x79);
        // CB 79 033C
        gbc.setState(0xdfc2, 0x94db, 0x7110, 0x9b69, 0x9d10, 0xde6a, 0x1, 0x1);
        gbc.writeMem(0xdfc2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x94db);
        EXPECT(gbc.pc(), 0xdfc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfc2), 0xcb);
        EXPECT(gbc.readMem(0xdfc3), 0x79);
        // CB 79 033D
        gbc.setState(0xb571, 0x3b83, 0x2c80, 0xf0ff, 0x538f, 0xa5f2, 0x1, 0x1);
        gbc.writeMem(0xb571, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3b83);
        EXPECT(gbc.pc(), 0xb573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb571), 0xcb);
        EXPECT(gbc.readMem(0xb572), 0x79);
        // CB 79 033E
        gbc.setState(0xb19, 0x8f00, 0x900, 0x3243, 0x1c72, 0x6464, 0x1, 0x0);
        gbc.writeMem(0xb19, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8f00);
        EXPECT(gbc.pc(), 0xb1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 033F
        gbc.setState(0xe4e4, 0x2ed0, 0x61c0, 0x26b, 0x9db, 0xd79e, 0x1, 0x0);
        gbc.writeMem(0xe4e4, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2ed0);
        EXPECT(gbc.pc(), 0xe4e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4e4), 0xcb);
        EXPECT(gbc.readMem(0xe4e5), 0x79);
        // CB 79 0340
        gbc.setState(0x1d4d, 0x5877, 0x99a0, 0x6163, 0x9354, 0xa52d, 0x1, 0x0);
        gbc.writeMem(0x1d4d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5877);
        EXPECT(gbc.pc(), 0x1d4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0341
        gbc.setState(0x9080, 0x618c, 0x5880, 0x5795, 0x7ec4, 0xd312, 0x0, 0x0);
        gbc.writeMem(0x9080, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x618c);
        EXPECT(gbc.pc(), 0x9082);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9080), 0xcb);
        EXPECT(gbc.readMem(0x9081), 0x79);
        // CB 79 0343
        gbc.setState(0x963c, 0x973d, 0x7d20, 0x70ed, 0x47b3, 0x7083, 0x1, 0x1);
        gbc.writeMem(0x963c, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x973d);
        EXPECT(gbc.pc(), 0x963e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x963c), 0xcb);
        EXPECT(gbc.readMem(0x963d), 0x79);
        // CB 79 0344
        gbc.setState(0x7450, 0x5b29, 0x1850, 0x5a00, 0x81cd, 0xde81, 0x0, 0x0);
        gbc.writeMem(0x7450, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5b29);
        EXPECT(gbc.pc(), 0x7452);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0345
        gbc.setState(0x90f4, 0x820b, 0x3610, 0x8055, 0x2358, 0x858f, 0x0, 0x1);
        gbc.writeMem(0x90f4, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x820b);
        EXPECT(gbc.pc(), 0x90f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90f4), 0xcb);
        EXPECT(gbc.readMem(0x90f5), 0x79);
        // CB 79 0346
        gbc.setState(0x84ee, 0x33fd, 0xb560, 0x63c8, 0x1f3d, 0x10e1, 0x0, 0x1);
        gbc.writeMem(0x84ee, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x33fd);
        EXPECT(gbc.pc(), 0x84f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84ee), 0xcb);
        EXPECT(gbc.readMem(0x84ef), 0x79);
        // CB 79 0347
        gbc.setState(0xaa3f, 0x6eb9, 0xfc50, 0x9ef5, 0x6064, 0x84ca, 0x1, 0x1);
        gbc.writeMem(0xaa3f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6eb9);
        EXPECT(gbc.pc(), 0xaa41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa3f), 0xcb);
        EXPECT(gbc.readMem(0xaa40), 0x79);
        // CB 79 0348
        gbc.setState(0x88fd, 0x7fc6, 0x90, 0x6189, 0x3362, 0xa006, 0x1, 0x0);
        gbc.writeMem(0x88fd, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7fc6);
        EXPECT(gbc.pc(), 0x88ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88fd), 0xcb);
        EXPECT(gbc.readMem(0x88fe), 0x79);
        // CB 79 0349
        gbc.setState(0xe28d, 0xf4d8, 0xe00, 0xf2bb, 0xabde, 0xc9b4, 0x0, 0x1);
        gbc.writeMem(0xe28d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf4d8);
        EXPECT(gbc.pc(), 0xe28f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe28d), 0xcb);
        EXPECT(gbc.readMem(0xe28e), 0x79);
        // CB 79 034A
        gbc.setState(0x5b9f, 0x2665, 0x73d0, 0x80d1, 0xc754, 0x1d36, 0x1, 0x0);
        gbc.writeMem(0x5b9f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2665);
        EXPECT(gbc.pc(), 0x5ba1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 034B
        gbc.setState(0x510, 0xd484, 0x72f0, 0x3736, 0xa8f, 0x9bfa, 0x0, 0x1);
        gbc.writeMem(0x510, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd484);
        EXPECT(gbc.pc(), 0x512);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 034C
        gbc.setState(0xcb89, 0x91db, 0x1350, 0x5528, 0xe43, 0xc8f8, 0x0, 0x1);
        gbc.writeMem(0xcb89, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x91db);
        EXPECT(gbc.pc(), 0xcb8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb89), 0xcb);
        EXPECT(gbc.readMem(0xcb8a), 0x79);
        // CB 79 034D
        gbc.setState(0x42e9, 0xf6c9, 0xb920, 0x8434, 0x6b98, 0xed1e, 0x0, 0x1);
        gbc.writeMem(0x42e9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf6c9);
        EXPECT(gbc.pc(), 0x42eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 034E
        gbc.setState(0x5ff2, 0xceda, 0xcc30, 0xc5d4, 0x605c, 0x610d, 0x0, 0x0);
        gbc.writeMem(0x5ff2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xceda);
        EXPECT(gbc.pc(), 0x5ff4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 034F
        gbc.setState(0x76bd, 0xe414, 0x960, 0xd2e3, 0x43ef, 0xb29a, 0x1, 0x1);
        gbc.writeMem(0x76bd, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe414);
        EXPECT(gbc.pc(), 0x76bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0350
        gbc.setState(0x53fa, 0xe4e3, 0xe8f0, 0x85b1, 0xd8c5, 0xb490, 0x1, 0x1);
        gbc.writeMem(0x53fa, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe4e3);
        EXPECT(gbc.pc(), 0x53fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0351
        gbc.setState(0x1c9e, 0xb2a1, 0x6840, 0xca4, 0xc17b, 0x1b7e, 0x0, 0x0);
        gbc.writeMem(0x1c9e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb2a1);
        EXPECT(gbc.pc(), 0x1ca0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0352
        gbc.setState(0x1bf0, 0xd6c2, 0x2f80, 0x2a3c, 0x5ac0, 0xaac5, 0x0, 0x1);
        gbc.writeMem(0x1bf0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd6c2);
        EXPECT(gbc.pc(), 0x1bf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0353
        gbc.setState(0xcfd0, 0x6503, 0xe4b0, 0x4eec, 0xaeda, 0x1a82, 0x1, 0x1);
        gbc.writeMem(0xcfd0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x6503);
        EXPECT(gbc.pc(), 0xcfd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfd0), 0xcb);
        EXPECT(gbc.readMem(0xcfd1), 0x79);
        // CB 79 0354
        gbc.setState(0xd31f, 0x8e8f, 0xe1b0, 0xea3a, 0x6f20, 0xe36, 0x1, 0x1);
        gbc.writeMem(0xd31f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x8e8f);
        EXPECT(gbc.pc(), 0xd321);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd31f), 0xcb);
        EXPECT(gbc.readMem(0xd320), 0x79);
        // CB 79 0355
        gbc.setState(0xadba, 0x3656, 0xe3e0, 0xefb0, 0x12bb, 0x698d, 0x0, 0x0);
        gbc.writeMem(0xadba, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x3656);
        EXPECT(gbc.pc(), 0xadbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadba), 0xcb);
        EXPECT(gbc.readMem(0xadbb), 0x79);
        // CB 79 0356
        gbc.setState(0x398, 0xad63, 0xe020, 0xecf2, 0xa889, 0xd82b, 0x1, 0x1);
        gbc.writeMem(0x398, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xad63);
        EXPECT(gbc.pc(), 0x39a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0357
        gbc.setState(0x362, 0x9c1c, 0xf500, 0x5aac, 0xc225, 0xf61c, 0x1, 0x1);
        gbc.writeMem(0x362, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9c1c);
        EXPECT(gbc.pc(), 0x364);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0358
        gbc.setState(0x2097, 0xb2c1, 0x7300, 0x9206, 0x5cbc, 0xd3b8, 0x1, 0x0);
        gbc.writeMem(0x2097, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb2c1);
        EXPECT(gbc.pc(), 0x2099);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0359
        gbc.setState(0xccf7, 0x268d, 0xe0, 0x63e2, 0xd152, 0xa562, 0x1, 0x1);
        gbc.writeMem(0xccf7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x268d);
        EXPECT(gbc.pc(), 0xccf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccf7), 0xcb);
        EXPECT(gbc.readMem(0xccf8), 0x79);
        // CB 79 035A
        gbc.setState(0x78a4, 0x7b4b, 0x7780, 0x7902, 0x821b, 0xcbb4, 0x0, 0x0);
        gbc.writeMem(0x78a4, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7b4b);
        EXPECT(gbc.pc(), 0x78a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 035B
        gbc.setState(0xb378, 0xc285, 0xddb0, 0x9fea, 0x82a6, 0x32e9, 0x1, 0x1);
        gbc.writeMem(0xb378, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc285);
        EXPECT(gbc.pc(), 0xb37a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb378), 0xcb);
        EXPECT(gbc.readMem(0xb379), 0x79);
        // CB 79 035C
        gbc.setState(0x6bd5, 0xe249, 0x8210, 0x6ea5, 0x7e89, 0x6613, 0x1, 0x1);
        gbc.writeMem(0x6bd5, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe249);
        EXPECT(gbc.pc(), 0x6bd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 035D
        gbc.setState(0x143a, 0x6e3b, 0x55d0, 0xe8a1, 0xc6cd, 0xa94e, 0x1, 0x1);
        gbc.writeMem(0x143a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6e3b);
        EXPECT(gbc.pc(), 0x143c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 035E
        gbc.setState(0x1a51, 0x6d7d, 0x3990, 0xc75e, 0xbe7f, 0x45d5, 0x0, 0x0);
        gbc.writeMem(0x1a51, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6d7d);
        EXPECT(gbc.pc(), 0x1a53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 035F
        gbc.setState(0xdac0, 0xc220, 0x1e90, 0x7ef3, 0x3949, 0x1ee5, 0x1, 0x1);
        gbc.writeMem(0xdac0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc220);
        EXPECT(gbc.pc(), 0xdac2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdac0), 0xcb);
        EXPECT(gbc.readMem(0xdac1), 0x79);
        // CB 79 0360
        gbc.setState(0xa06e, 0x978d, 0xa140, 0xeec5, 0xf08a, 0x8237, 0x1, 0x1);
        gbc.writeMem(0xa06e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x978d);
        EXPECT(gbc.pc(), 0xa070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa06e), 0xcb);
        EXPECT(gbc.readMem(0xa06f), 0x79);
        // CB 79 0361
        gbc.setState(0x1e54, 0xb93e, 0xbba0, 0xb884, 0x7e3d, 0xcd03, 0x0, 0x1);
        gbc.writeMem(0x1e54, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb93e);
        EXPECT(gbc.pc(), 0x1e56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0362
        gbc.setState(0x5164, 0x8ed4, 0x5b70, 0xe0dc, 0x5964, 0xfaf4, 0x0, 0x1);
        gbc.writeMem(0x5164, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8ed4);
        EXPECT(gbc.pc(), 0x5166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0363
        gbc.setState(0x940d, 0xab00, 0x94b0, 0x6547, 0x4c3c, 0x9e2e, 0x0, 0x1);
        gbc.writeMem(0x940d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xab00);
        EXPECT(gbc.pc(), 0x940f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x940d), 0xcb);
        EXPECT(gbc.readMem(0x940e), 0x79);
        // CB 79 0364
        gbc.setState(0x2c19, 0x6e50, 0xdba0, 0x104, 0x29c7, 0xd183, 0x1, 0x0);
        gbc.writeMem(0x2c19, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6e50);
        EXPECT(gbc.pc(), 0x2c1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0365
        gbc.setState(0x99fc, 0x7397, 0xe170, 0x8935, 0x6dc2, 0x2e17, 0x0, 0x0);
        gbc.writeMem(0x99fc, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7397);
        EXPECT(gbc.pc(), 0x99fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99fc), 0xcb);
        EXPECT(gbc.readMem(0x99fd), 0x79);
        // CB 79 0366
        gbc.setState(0xb4b0, 0x9b1e, 0x5be0, 0x2a94, 0x3cf9, 0xad59, 0x1, 0x1);
        gbc.writeMem(0xb4b0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9b1e);
        EXPECT(gbc.pc(), 0xb4b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4b0), 0xcb);
        EXPECT(gbc.readMem(0xb4b1), 0x79);
        // CB 79 0367
        gbc.setState(0x3d17, 0x776a, 0x4080, 0x7d87, 0xea44, 0x69a6, 0x0, 0x1);
        gbc.writeMem(0x3d17, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x776a);
        EXPECT(gbc.pc(), 0x3d19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0368
        gbc.setState(0xe49e, 0xbd71, 0xe6f0, 0x2f5e, 0x2511, 0xb38b, 0x0, 0x0);
        gbc.writeMem(0xe49e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xbd71);
        EXPECT(gbc.pc(), 0xe4a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe49e), 0xcb);
        EXPECT(gbc.readMem(0xe49f), 0x79);
        // CB 79 0369
        gbc.setState(0xda22, 0x38, 0x8a90, 0x175, 0x8ab8, 0x8147, 0x1, 0x0);
        gbc.writeMem(0xda22, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x38);
        EXPECT(gbc.pc(), 0xda24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda22), 0xcb);
        EXPECT(gbc.readMem(0xda23), 0x79);
        // CB 79 036A
        gbc.setState(0x3af1, 0x7e1f, 0xd020, 0x3a6b, 0x9a2f, 0x64c6, 0x0, 0x0);
        gbc.writeMem(0x3af1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x7e1f);
        EXPECT(gbc.pc(), 0x3af3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 036B
        gbc.setState(0x2cc5, 0xe69f, 0x50c0, 0x35af, 0x5b99, 0x7f5b, 0x1, 0x1);
        gbc.writeMem(0x2cc5, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe69f);
        EXPECT(gbc.pc(), 0x2cc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 036C
        gbc.setState(0x7926, 0xe9b0, 0x5350, 0xac10, 0x5223, 0x8ec1, 0x1, 0x1);
        gbc.writeMem(0x7926, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe9b0);
        EXPECT(gbc.pc(), 0x7928);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 036D
        gbc.setState(0x26d8, 0x2b52, 0x3890, 0x16e2, 0x58f, 0xee83, 0x0, 0x1);
        gbc.writeMem(0x26d8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2b52);
        EXPECT(gbc.pc(), 0x26da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 036E
        gbc.setState(0xbc79, 0xbde0, 0x33f0, 0x27ce, 0xf80e, 0xa835, 0x1, 0x1);
        gbc.writeMem(0xbc79, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xbde0);
        EXPECT(gbc.pc(), 0xbc7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc79), 0xcb);
        EXPECT(gbc.readMem(0xbc7a), 0x79);
        // CB 79 0370
        gbc.setState(0xea76, 0x8c5d, 0xa120, 0x2cba, 0xe694, 0x8d74, 0x0, 0x0);
        gbc.writeMem(0xea76, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8c5d);
        EXPECT(gbc.pc(), 0xea78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea76), 0xcb);
        EXPECT(gbc.readMem(0xea77), 0x79);
        // CB 79 0371
        gbc.setState(0x6600, 0xd42, 0x60b0, 0x9376, 0x7626, 0xb7e5, 0x1, 0x1);
        gbc.writeMem(0x6600, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd42);
        EXPECT(gbc.pc(), 0x6602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0372
        gbc.setState(0x5235, 0x58ad, 0xbb20, 0xea49, 0xbc59, 0x8f65, 0x1, 0x0);
        gbc.writeMem(0x5235, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x58ad);
        EXPECT(gbc.pc(), 0x5237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0373
        gbc.setState(0xae3, 0x1b03, 0xb940, 0xc6b9, 0x2045, 0xec9f, 0x1, 0x1);
        gbc.writeMem(0xae3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x1b03);
        EXPECT(gbc.pc(), 0xae5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0374
        gbc.setState(0x8ec4, 0x3423, 0xe740, 0x37b9, 0x3aab, 0x5784, 0x1, 0x1);
        gbc.writeMem(0x8ec4, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3423);
        EXPECT(gbc.pc(), 0x8ec6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ec4), 0xcb);
        EXPECT(gbc.readMem(0x8ec5), 0x79);
        // CB 79 0375
        gbc.setState(0x6a85, 0x9ed9, 0xa0a0, 0x7851, 0x968d, 0xb22b, 0x0, 0x1);
        gbc.writeMem(0x6a85, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x9ed9);
        EXPECT(gbc.pc(), 0x6a87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0376
        gbc.setState(0xac88, 0x62ec, 0xe920, 0xb50d, 0x2998, 0x39f8, 0x1, 0x0);
        gbc.writeMem(0xac88, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x62ec);
        EXPECT(gbc.pc(), 0xac8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac88), 0xcb);
        EXPECT(gbc.readMem(0xac89), 0x79);
        // CB 79 0377
        gbc.setState(0xba15, 0x6628, 0x7020, 0xe296, 0x7994, 0x42a8, 0x1, 0x1);
        gbc.writeMem(0xba15, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6628);
        EXPECT(gbc.pc(), 0xba17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba15), 0xcb);
        EXPECT(gbc.readMem(0xba16), 0x79);
        // CB 79 0378
        gbc.setState(0x44b6, 0x5662, 0x5ac0, 0xc16e, 0xebdf, 0x3451, 0x1, 0x1);
        gbc.writeMem(0x44b6, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5662);
        EXPECT(gbc.pc(), 0x44b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0379
        gbc.setState(0x5de1, 0xf574, 0xe1d0, 0x5464, 0x408a, 0x9cd, 0x0, 0x0);
        gbc.writeMem(0x5de1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf574);
        EXPECT(gbc.pc(), 0x5de3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 037A
        gbc.setState(0x510d, 0x3321, 0x4310, 0x1e7f, 0x135e, 0x4f50, 0x1, 0x0);
        gbc.writeMem(0x510d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3321);
        EXPECT(gbc.pc(), 0x510f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 037B
        gbc.setState(0x6ff0, 0xd67, 0x8510, 0xd6f3, 0x25c0, 0xd7a1, 0x0, 0x0);
        gbc.writeMem(0x6ff0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd67);
        EXPECT(gbc.pc(), 0x6ff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 037C
        gbc.setState(0xa450, 0x8e46, 0x24a0, 0x2ebd, 0x738e, 0xcdf2, 0x0, 0x0);
        gbc.writeMem(0xa450, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8e46);
        EXPECT(gbc.pc(), 0xa452);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa450), 0xcb);
        EXPECT(gbc.readMem(0xa451), 0x79);
        // CB 79 037D
        gbc.setState(0xbdf2, 0x40a0, 0xdf70, 0xdc88, 0x3e7a, 0x524d, 0x1, 0x1);
        gbc.writeMem(0xbdf2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x40a0);
        EXPECT(gbc.pc(), 0xbdf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdf2), 0xcb);
        EXPECT(gbc.readMem(0xbdf3), 0x79);
        // CB 79 037E
        gbc.setState(0x2ca1, 0xcfa5, 0xa750, 0x3b18, 0x3552, 0x3ce8, 0x1, 0x1);
        gbc.writeMem(0x2ca1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xcfa5);
        EXPECT(gbc.pc(), 0x2ca3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 037F
        gbc.setState(0x16b9, 0xdd58, 0x1f10, 0x541, 0xcdb7, 0x9077, 0x0, 0x1);
        gbc.writeMem(0x16b9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xdd58);
        EXPECT(gbc.pc(), 0x16bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0380
        gbc.setState(0xbef3, 0x77b3, 0xf7d0, 0x9c7, 0x5302, 0x6ec2, 0x0, 0x0);
        gbc.writeMem(0xbef3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x77b3);
        EXPECT(gbc.pc(), 0xbef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbef3), 0xcb);
        EXPECT(gbc.readMem(0xbef4), 0x79);
        // CB 79 0381
        gbc.setState(0xeb3e, 0xe3e4, 0xfed0, 0xee98, 0xd0b0, 0x7cdd, 0x0, 0x1);
        gbc.writeMem(0xeb3e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe3e4);
        EXPECT(gbc.pc(), 0xeb40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb3e), 0xcb);
        EXPECT(gbc.readMem(0xeb3f), 0x79);
        // CB 79 0382
        gbc.setState(0x4a14, 0xae26, 0x50e0, 0x82c1, 0xbbb8, 0x11d7, 0x0, 0x1);
        gbc.writeMem(0x4a14, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xae26);
        EXPECT(gbc.pc(), 0x4a16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0383
        gbc.setState(0xcd1b, 0x75a7, 0xd620, 0xe2c8, 0xc574, 0xa1ce, 0x0, 0x0);
        gbc.writeMem(0xcd1b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x75a7);
        EXPECT(gbc.pc(), 0xcd1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd1b), 0xcb);
        EXPECT(gbc.readMem(0xcd1c), 0x79);
        // CB 79 0385
        gbc.setState(0xdac4, 0x683b, 0x1080, 0x8cb8, 0xf410, 0x4662, 0x1, 0x0);
        gbc.writeMem(0xdac4, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x683b);
        EXPECT(gbc.pc(), 0xdac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdac4), 0xcb);
        EXPECT(gbc.readMem(0xdac5), 0x79);
        // CB 79 0386
        gbc.setState(0x12e7, 0xf0f2, 0xd2e0, 0xf5f, 0xeb19, 0xa923, 0x1, 0x0);
        gbc.writeMem(0x12e7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf0f2);
        EXPECT(gbc.pc(), 0x12e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0387
        gbc.setState(0xdf7, 0xf4a3, 0xc920, 0x3af2, 0x1908, 0x74a9, 0x1, 0x1);
        gbc.writeMem(0xdf7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf4a3);
        EXPECT(gbc.pc(), 0xdf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0388
        gbc.setState(0x36e4, 0x7599, 0x30a0, 0x3607, 0x4bcf, 0xa9b3, 0x1, 0x1);
        gbc.writeMem(0x36e4, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7599);
        EXPECT(gbc.pc(), 0x36e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0389
        gbc.setState(0x53a7, 0xfab9, 0xb650, 0x4ac8, 0xa94c, 0xd80c, 0x1, 0x1);
        gbc.writeMem(0x53a7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xfab9);
        EXPECT(gbc.pc(), 0x53a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 038A
        gbc.setState(0x7b4, 0x92ff, 0x6450, 0xbc5, 0x6fc9, 0x8fe7, 0x1, 0x0);
        gbc.writeMem(0x7b4, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x92ff);
        EXPECT(gbc.pc(), 0x7b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 038B
        gbc.setState(0xe599, 0x100a, 0x1f20, 0x8a26, 0x5278, 0x5307, 0x0, 0x1);
        gbc.writeMem(0xe599, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x100a);
        EXPECT(gbc.pc(), 0xe59b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe599), 0xcb);
        EXPECT(gbc.readMem(0xe59a), 0x79);
        // CB 79 038C
        gbc.setState(0x476, 0x44e5, 0xf4f0, 0x8b7, 0x8341, 0xd879, 0x0, 0x1);
        gbc.writeMem(0x476, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x44e5);
        EXPECT(gbc.pc(), 0x478);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 038D
        gbc.setState(0x8488, 0xcffa, 0x2dd0, 0x764e, 0x893a, 0xa47a, 0x0, 0x0);
        gbc.writeMem(0x8488, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xcffa);
        EXPECT(gbc.pc(), 0x848a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8488), 0xcb);
        EXPECT(gbc.readMem(0x8489), 0x79);
        // CB 79 038E
        gbc.setState(0x8957, 0x78f1, 0x67a0, 0x2e75, 0x226c, 0xbae3, 0x1, 0x1);
        gbc.writeMem(0x8957, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x78f1);
        EXPECT(gbc.pc(), 0x8959);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8957), 0xcb);
        EXPECT(gbc.readMem(0x8958), 0x79);
        // CB 79 038F
        gbc.setState(0x59a5, 0xf9a, 0xa600, 0x99cc, 0xa927, 0x2445, 0x1, 0x0);
        gbc.writeMem(0x59a5, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf9a);
        EXPECT(gbc.pc(), 0x59a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0390
        gbc.setState(0x3ff5, 0xbf5d, 0x8f70, 0xefc1, 0xa25, 0xb627, 0x0, 0x0);
        gbc.writeMem(0x3ff5, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbf5d);
        EXPECT(gbc.pc(), 0x3ff7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0391
        gbc.setState(0x43ff, 0x3601, 0x3f40, 0x48ee, 0xf7f9, 0xc28f, 0x1, 0x0);
        gbc.writeMem(0x43ff, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3601);
        EXPECT(gbc.pc(), 0x4401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0392
        gbc.setState(0x7e77, 0xd6d9, 0x5ca0, 0xe1aa, 0x3d5d, 0x87b, 0x0, 0x1);
        gbc.writeMem(0x7e77, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd6d9);
        EXPECT(gbc.pc(), 0x7e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0393
        gbc.setState(0x7214, 0x912d, 0xeaa0, 0x1cd1, 0xa1c, 0x2dad, 0x0, 0x1);
        gbc.writeMem(0x7214, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x912d);
        EXPECT(gbc.pc(), 0x7216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0394
        gbc.setState(0x8a2, 0x8c53, 0x290, 0xe2c5, 0x4d6f, 0x8355, 0x0, 0x1);
        gbc.writeMem(0x8a2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8c53);
        EXPECT(gbc.pc(), 0x8a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0395
        gbc.setState(0x7713, 0xa88e, 0x660, 0x28e6, 0x9a31, 0x15ad, 0x0, 0x1);
        gbc.writeMem(0x7713, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa88e);
        EXPECT(gbc.pc(), 0x7715);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0396
        gbc.setState(0x7007, 0xbe62, 0x8660, 0xf19d, 0x52d0, 0x9dca, 0x0, 0x1);
        gbc.writeMem(0x7007, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xbe62);
        EXPECT(gbc.pc(), 0x7009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0397
        gbc.setState(0x61db, 0xa845, 0x38e0, 0x44c7, 0x16f1, 0x7796, 0x1, 0x0);
        gbc.writeMem(0x61db, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xa845);
        EXPECT(gbc.pc(), 0x61dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 0398
        gbc.setState(0x162, 0x68ed, 0x3850, 0x33df, 0x96b0, 0x94e6, 0x1, 0x1);
        gbc.writeMem(0x162, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x68ed);
        EXPECT(gbc.pc(), 0x164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 0399
        gbc.setState(0x6707, 0x13aa, 0xa6e0, 0x8ce0, 0x21c1, 0xc815, 0x1, 0x1);
        gbc.writeMem(0x6707, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x13aa);
        EXPECT(gbc.pc(), 0x6709);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 039A
        gbc.setState(0x5d67, 0x38f5, 0xabc0, 0xe2e1, 0x7176, 0xc5fd, 0x0, 0x1);
        gbc.writeMem(0x5d67, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x38f5);
        EXPECT(gbc.pc(), 0x5d69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 039B
        gbc.setState(0x4f97, 0x7c89, 0xce30, 0xb645, 0x60ac, 0xf22c, 0x0, 0x1);
        gbc.writeMem(0x4f97, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7c89);
        EXPECT(gbc.pc(), 0x4f99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 039C
        gbc.setState(0x1898, 0x2496, 0x6e10, 0xe1df, 0x4c23, 0xe45, 0x0, 0x0);
        gbc.writeMem(0x1898, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2496);
        EXPECT(gbc.pc(), 0x189a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 039D
        gbc.setState(0x74f0, 0xcaea, 0x7370, 0x29f, 0x41d, 0xced8, 0x1, 0x1);
        gbc.writeMem(0x74f0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xcaea);
        EXPECT(gbc.pc(), 0x74f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 039E
        gbc.setState(0x88c6, 0xf36f, 0xc300, 0xe853, 0x7828, 0x7504, 0x1, 0x1);
        gbc.writeMem(0x88c6, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf36f);
        EXPECT(gbc.pc(), 0x88c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88c6), 0xcb);
        EXPECT(gbc.readMem(0x88c7), 0x79);
        // CB 79 039F
        gbc.setState(0xef93, 0x2b62, 0x4200, 0x1455, 0xf105, 0x23c2, 0x0, 0x1);
        gbc.writeMem(0xef93, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2b62);
        EXPECT(gbc.pc(), 0xef95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef93), 0xcb);
        EXPECT(gbc.readMem(0xef94), 0x79);
        // CB 79 03A0
        gbc.setState(0x2431, 0x3837, 0x1540, 0xbdd, 0x58a4, 0xd8c5, 0x1, 0x0);
        gbc.writeMem(0x2431, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3837);
        EXPECT(gbc.pc(), 0x2433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 03A1
        gbc.setState(0x14d0, 0xac52, 0x8920, 0x8907, 0xf35e, 0x9ae6, 0x1, 0x1);
        gbc.writeMem(0x14d0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xac52);
        EXPECT(gbc.pc(), 0x14d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 03A3
        gbc.setState(0x4d05, 0x8887, 0xabc0, 0x5b27, 0x2c58, 0x7077, 0x1, 0x0);
        gbc.writeMem(0x4d05, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x8887);
        EXPECT(gbc.pc(), 0x4d07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 03A4
        gbc.setState(0x6ebf, 0x4811, 0x6a00, 0x26f1, 0xe3d, 0xe2d5, 0x0, 0x1);
        gbc.writeMem(0x6ebf, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4811);
        EXPECT(gbc.pc(), 0x6ec1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 03A5
        gbc.setState(0xee09, 0x8c83, 0x6720, 0xf5a9, 0xaaea, 0xea5b, 0x0, 0x1);
        gbc.writeMem(0xee09, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8c83);
        EXPECT(gbc.pc(), 0xee0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee09), 0xcb);
        EXPECT(gbc.readMem(0xee0a), 0x79);
        // CB 79 03A6
        gbc.setState(0x60a0, 0x951b, 0xafa0, 0x4b27, 0x7acd, 0x90, 0x0, 0x1);
        gbc.writeMem(0x60a0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x951b);
        EXPECT(gbc.pc(), 0x60a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 03A7
        gbc.setState(0xe5b2, 0xa34a, 0x2260, 0x8d7c, 0xdad6, 0xde7d, 0x0, 0x0);
        gbc.writeMem(0xe5b2, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa34a);
        EXPECT(gbc.pc(), 0xe5b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5b2), 0xcb);
        EXPECT(gbc.readMem(0xe5b3), 0x79);
        // CB 79 03A8
        gbc.setState(0x2654, 0xa489, 0xcdd0, 0x1018, 0x1bb6, 0xd1b3, 0x1, 0x0);
        gbc.writeMem(0x2654, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa489);
        EXPECT(gbc.pc(), 0x2656);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 03A9
        gbc.setState(0x75ab, 0x84ab, 0x2ac0, 0x5c19, 0x7507, 0xaab0, 0x1, 0x0);
        gbc.writeMem(0x75ab, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x84ab);
        EXPECT(gbc.pc(), 0x75ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 03AA
        gbc.setState(0x2785, 0x2996, 0xaf60, 0x4263, 0xdc3b, 0x95ba, 0x0, 0x0);
        gbc.writeMem(0x2785, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x2996);
        EXPECT(gbc.pc(), 0x2787);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 03AB
        gbc.setState(0xf5d, 0x317c, 0x2110, 0x41b4, 0xebd7, 0xc873, 0x0, 0x1);
        gbc.writeMem(0xf5d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x317c);
        EXPECT(gbc.pc(), 0xf5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 03AC
        gbc.setState(0xdf80, 0x937c, 0x7db0, 0x6b0c, 0x37fe, 0x4ba7, 0x0, 0x0);
        gbc.writeMem(0xdf80, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x937c);
        EXPECT(gbc.pc(), 0xdf82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf80), 0xcb);
        EXPECT(gbc.readMem(0xdf81), 0x79);
        // CB 79 03AD
        gbc.setState(0x8b0, 0x7937, 0x2570, 0x2179, 0x8ce, 0x4b37, 0x0, 0x0);
        gbc.writeMem(0x8b0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7937);
        EXPECT(gbc.pc(), 0x8b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 03AE
        gbc.setState(0xbfd3, 0x272f, 0xcde0, 0x7d36, 0x244, 0xf315, 0x1, 0x1);
        gbc.writeMem(0xbfd3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x272f);
        EXPECT(gbc.pc(), 0xbfd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfd3), 0xcb);
        EXPECT(gbc.readMem(0xbfd4), 0x79);
        // CB 79 03AF
        gbc.setState(0x2fca, 0x5c59, 0x63b0, 0x7420, 0xe0a8, 0x8512, 0x0, 0x0);
        gbc.writeMem(0x2fca, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5c59);
        EXPECT(gbc.pc(), 0x2fcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 03B0
        gbc.setState(0xe0d8, 0x173b, 0x690, 0x712, 0x6708, 0x2768, 0x1, 0x0);
        gbc.writeMem(0xe0d8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x173b);
        EXPECT(gbc.pc(), 0xe0da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0d8), 0xcb);
        EXPECT(gbc.readMem(0xe0d9), 0x79);
        // CB 79 03B1
        gbc.setState(0x846, 0xfb2c, 0x94f0, 0x9b63, 0x2c58, 0x192a, 0x1, 0x0);
        gbc.writeMem(0x846, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfb2c);
        EXPECT(gbc.pc(), 0x848);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 03B2
        gbc.setState(0xcbb, 0x1757, 0xc6d0, 0x686f, 0xd7a4, 0x780e, 0x0, 0x1);
        gbc.writeMem(0xcbb, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1757);
        EXPECT(gbc.pc(), 0xcbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 03B3
        gbc.setState(0xa785, 0x9edb, 0x4840, 0x25db, 0xa6d3, 0x8c64, 0x1, 0x0);
        gbc.writeMem(0xa785, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9edb);
        EXPECT(gbc.pc(), 0xa787);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa785), 0xcb);
        EXPECT(gbc.readMem(0xa786), 0x79);
        // CB 79 03B5
        gbc.setState(0xe1db, 0x3ea6, 0xb5d0, 0x2809, 0xf0a5, 0x9458, 0x1, 0x1);
        gbc.writeMem(0xe1db, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3ea6);
        EXPECT(gbc.pc(), 0xe1dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1db), 0xcb);
        EXPECT(gbc.readMem(0xe1dc), 0x79);
        // CB 79 03B6
        gbc.setState(0xce79, 0xa03f, 0x8530, 0x2bf1, 0x7134, 0x70a4, 0x0, 0x0);
        gbc.writeMem(0xce79, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa03f);
        EXPECT(gbc.pc(), 0xce7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce79), 0xcb);
        EXPECT(gbc.readMem(0xce7a), 0x79);
        // CB 79 03B7
        gbc.setState(0x703e, 0x1e8, 0x28f0, 0xcfee, 0xb86e, 0x8c3, 0x0, 0x1);
        gbc.writeMem(0x703e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1e8);
        EXPECT(gbc.pc(), 0x7040);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 03B8
        gbc.setState(0x53ca, 0x560d, 0x6720, 0x2a07, 0x2a69, 0x7da, 0x1, 0x0);
        gbc.writeMem(0x53ca, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x560d);
        EXPECT(gbc.pc(), 0x53cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 03B9
        gbc.setState(0x8225, 0xaff9, 0xa6f0, 0xba9b, 0xd44f, 0x6eb5, 0x1, 0x0);
        gbc.writeMem(0x8225, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xaff9);
        EXPECT(gbc.pc(), 0x8227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8225), 0xcb);
        EXPECT(gbc.readMem(0x8226), 0x79);
        // CB 79 03BA
        gbc.setState(0xb43b, 0x3906, 0xaa80, 0xcc2d, 0x8cac, 0x47ff, 0x0, 0x1);
        gbc.writeMem(0xb43b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3906);
        EXPECT(gbc.pc(), 0xb43d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb43b), 0xcb);
        EXPECT(gbc.readMem(0xb43c), 0x79);
        // CB 79 03BB
        gbc.setState(0xe0c9, 0x7905, 0x1f0, 0x8e8e, 0x6776, 0xeac9, 0x0, 0x0);
        gbc.writeMem(0xe0c9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7905);
        EXPECT(gbc.pc(), 0xe0cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0c9), 0xcb);
        EXPECT(gbc.readMem(0xe0ca), 0x79);
        // CB 79 03BC
        gbc.setState(0x5441, 0x5288, 0xb2b0, 0x4669, 0x484c, 0x4e35, 0x0, 0x1);
        gbc.writeMem(0x5441, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5288);
        EXPECT(gbc.pc(), 0x5443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 03BD
        gbc.setState(0xb0dc, 0x7887, 0x270, 0xfcfa, 0xba8a, 0xc1bc, 0x0, 0x1);
        gbc.writeMem(0xb0dc, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7887);
        EXPECT(gbc.pc(), 0xb0de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0dc), 0xcb);
        EXPECT(gbc.readMem(0xb0dd), 0x79);
        // CB 79 03BE
        gbc.setState(0x1156, 0xb9c9, 0xdc60, 0xcbe, 0x1068, 0x1dee, 0x1, 0x1);
        gbc.writeMem(0x1156, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xb9c9);
        EXPECT(gbc.pc(), 0x1158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 03BF
        gbc.setState(0x88ec, 0x932b, 0x2c00, 0x85c6, 0xc0fc, 0xa90e, 0x0, 0x0);
        gbc.writeMem(0x88ec, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x932b);
        EXPECT(gbc.pc(), 0x88ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88ec), 0xcb);
        EXPECT(gbc.readMem(0x88ed), 0x79);
        // CB 79 03C0
        gbc.setState(0x5eb7, 0xfeb8, 0x59d0, 0xf428, 0x28a9, 0x746b, 0x1, 0x1);
        gbc.writeMem(0x5eb7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xfeb8);
        EXPECT(gbc.pc(), 0x5eb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 03C1
        gbc.setState(0xdb70, 0x42df, 0xaae0, 0xd307, 0xe469, 0xcd6b, 0x0, 0x1);
        gbc.writeMem(0xdb70, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x42df);
        EXPECT(gbc.pc(), 0xdb72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb70), 0xcb);
        EXPECT(gbc.readMem(0xdb71), 0x79);
        // CB 79 03C2
        gbc.setState(0x95c9, 0x2f3b, 0xd050, 0x10cf, 0x6c1, 0x9f59, 0x1, 0x1);
        gbc.writeMem(0x95c9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x2f3b);
        EXPECT(gbc.pc(), 0x95cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95c9), 0xcb);
        EXPECT(gbc.readMem(0x95ca), 0x79);
        // CB 79 03C3
        gbc.setState(0x27da, 0x9d8e, 0xbf80, 0x4792, 0x51f4, 0x46af, 0x1, 0x0);
        gbc.writeMem(0x27da, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9d8e);
        EXPECT(gbc.pc(), 0x27dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 03C4
        gbc.setState(0x197, 0x73b0, 0x7bc0, 0x21a5, 0xbd49, 0x7565, 0x1, 0x0);
        gbc.writeMem(0x197, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x73b0);
        EXPECT(gbc.pc(), 0x199);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 03C5
        gbc.setState(0x3ece, 0x8e7c, 0x13f0, 0xfe26, 0x30c4, 0xf9b2, 0x1, 0x1);
        gbc.writeMem(0x3ece, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8e7c);
        EXPECT(gbc.pc(), 0x3ed0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 03C6
        gbc.setState(0x3f9, 0xf6d9, 0x670, 0x6d9a, 0xfe7a, 0x2aac, 0x1, 0x0);
        gbc.writeMem(0x3f9, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf6d9);
        EXPECT(gbc.pc(), 0x3fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 03C7
        gbc.setState(0xbcb, 0x95b0, 0xb5a0, 0x23d7, 0xea46, 0xcea, 0x0, 0x0);
        gbc.writeMem(0xbcb, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x95b0);
        EXPECT(gbc.pc(), 0xbcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 03C8
        gbc.setState(0x1751, 0xa4e6, 0x8210, 0xb8b2, 0xea5b, 0xf0f, 0x1, 0x1);
        gbc.writeMem(0x1751, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xa4e6);
        EXPECT(gbc.pc(), 0x1753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 03C9
        gbc.setState(0xa733, 0x7e8d, 0x5ce0, 0x7d8b, 0x9542, 0x780f, 0x1, 0x0);
        gbc.writeMem(0xa733, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7e8d);
        EXPECT(gbc.pc(), 0xa735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa733), 0xcb);
        EXPECT(gbc.readMem(0xa734), 0x79);
        // CB 79 03CA
        gbc.setState(0x7731, 0xa839, 0x4f0, 0x8f6f, 0x652c, 0x9098, 0x0, 0x1);
        gbc.writeMem(0x7731, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa839);
        EXPECT(gbc.pc(), 0x7733);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 03CB
        gbc.setState(0xa7da, 0xf3d3, 0xf5b0, 0xdd0e, 0xf457, 0x302e, 0x1, 0x0);
        gbc.writeMem(0xa7da, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf3d3);
        EXPECT(gbc.pc(), 0xa7dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7da), 0xcb);
        EXPECT(gbc.readMem(0xa7db), 0x79);
        // CB 79 03CC
        gbc.setState(0x5b5e, 0x138f, 0xe80, 0x269c, 0xe4a8, 0xcc36, 0x1, 0x1);
        gbc.writeMem(0x5b5e, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x138f);
        EXPECT(gbc.pc(), 0x5b60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 03CD
        gbc.setState(0xfb3, 0xa4cd, 0x47a0, 0xddeb, 0xf624, 0x602c, 0x0, 0x1);
        gbc.writeMem(0xfb3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa4cd);
        EXPECT(gbc.pc(), 0xfb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 03CE
        gbc.setState(0x8f06, 0x526a, 0x45f0, 0xcd26, 0x97e0, 0xa4fd, 0x0, 0x1);
        gbc.writeMem(0x8f06, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x526a);
        EXPECT(gbc.pc(), 0x8f08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f06), 0xcb);
        EXPECT(gbc.readMem(0x8f07), 0x79);
        // CB 79 03CF
        gbc.setState(0xa8b5, 0x8ec1, 0x5b30, 0xa300, 0x1335, 0xb849, 0x1, 0x0);
        gbc.writeMem(0xa8b5, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8ec1);
        EXPECT(gbc.pc(), 0xa8b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8b5), 0xcb);
        EXPECT(gbc.readMem(0xa8b6), 0x79);
        // CB 79 03D0
        gbc.setState(0x909b, 0x606e, 0x3700, 0xeb2c, 0x4316, 0xc6db, 0x0, 0x0);
        gbc.writeMem(0x909b, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x606e);
        EXPECT(gbc.pc(), 0x909d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x909b), 0xcb);
        EXPECT(gbc.readMem(0x909c), 0x79);
        // CB 79 03D1
        gbc.setState(0x56bf, 0xcf65, 0x9f20, 0x48a2, 0x7d26, 0x466c, 0x1, 0x0);
        gbc.writeMem(0x56bf, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xcf65);
        EXPECT(gbc.pc(), 0x56c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 03D2
        gbc.setState(0x4596, 0x4229, 0x3480, 0x25a, 0x5b36, 0x168c, 0x1, 0x0);
        gbc.writeMem(0x4596, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4229);
        EXPECT(gbc.pc(), 0x4598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 03D3
        gbc.setState(0x46f8, 0xb8b5, 0x96c0, 0x5777, 0x1e1c, 0xbff3, 0x0, 0x1);
        gbc.writeMem(0x46f8, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb8b5);
        EXPECT(gbc.pc(), 0x46fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 03D5
        gbc.setState(0xed7a, 0x2064, 0xe9d0, 0x7571, 0x6ea, 0x2607, 0x1, 0x1);
        gbc.writeMem(0xed7a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2064);
        EXPECT(gbc.pc(), 0xed7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed7a), 0xcb);
        EXPECT(gbc.readMem(0xed7b), 0x79);
        // CB 79 03D6
        gbc.setState(0xa694, 0x7a5d, 0x3ef0, 0x5c27, 0xd085, 0xc104, 0x0, 0x0);
        gbc.writeMem(0xa694, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x7a5d);
        EXPECT(gbc.pc(), 0xa696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa694), 0xcb);
        EXPECT(gbc.readMem(0xa695), 0x79);
        // CB 79 03D7
        gbc.setState(0x927d, 0x2c18, 0x2c30, 0x269a, 0x288b, 0xcb4, 0x1, 0x0);
        gbc.writeMem(0x927d, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2c18);
        EXPECT(gbc.pc(), 0x927f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x927d), 0xcb);
        EXPECT(gbc.readMem(0x927e), 0x79);
        // CB 79 03D8
        gbc.setState(0x47ee, 0x3b2a, 0x82f0, 0xe34c, 0x3d99, 0xc15e, 0x0, 0x1);
        gbc.writeMem(0x47ee, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3b2a);
        EXPECT(gbc.pc(), 0x47f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 03D9
        gbc.setState(0x40f, 0xf0e5, 0xf6f0, 0x8601, 0x5054, 0x8ace, 0x1, 0x0);
        gbc.writeMem(0x40f, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf0e5);
        EXPECT(gbc.pc(), 0x411);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 03DA
        gbc.setState(0xc6d0, 0x171, 0x6650, 0x364c, 0x60f7, 0xa58e, 0x1, 0x1);
        gbc.writeMem(0xc6d0, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x171);
        EXPECT(gbc.pc(), 0xc6d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6d0), 0xcb);
        EXPECT(gbc.readMem(0xc6d1), 0x79);
        // CB 79 03DB
        gbc.setState(0xd042, 0x6fa4, 0xa80, 0x89b, 0x30a6, 0xe806, 0x0, 0x1);
        gbc.writeMem(0xd042, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6fa4);
        EXPECT(gbc.pc(), 0xd044);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd042), 0xcb);
        EXPECT(gbc.readMem(0xd043), 0x79);
        // CB 79 03DC
        gbc.setState(0xc1, 0x640c, 0x9540, 0x4998, 0xdbb4, 0xabf2, 0x1, 0x0);
        gbc.writeMem(0xc1, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x640c);
        EXPECT(gbc.pc(), 0xc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 03DD
        gbc.setState(0x58b7, 0xf06e, 0x460, 0xec16, 0x825f, 0x6685, 0x1, 0x0);
        gbc.writeMem(0x58b7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf06e);
        EXPECT(gbc.pc(), 0x58b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 03DE
        gbc.setState(0x30c3, 0xccf6, 0x2e30, 0x7c73, 0x69a4, 0x15c5, 0x0, 0x0);
        gbc.writeMem(0x30c3, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xccf6);
        EXPECT(gbc.pc(), 0x30c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 03DF
        gbc.setState(0x94fd, 0x76f9, 0x79e0, 0xa288, 0x419f, 0xb4ab, 0x1, 0x0);
        gbc.writeMem(0x94fd, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x76f9);
        EXPECT(gbc.pc(), 0x94ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94fd), 0xcb);
        EXPECT(gbc.readMem(0x94fe), 0x79);
        // CB 79 03E0
        gbc.setState(0xe9a7, 0x7b16, 0x2e0, 0x9556, 0x6e89, 0x75d0, 0x0, 0x0);
        gbc.writeMem(0xe9a7, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7b16);
        EXPECT(gbc.pc(), 0xe9a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9a7), 0xcb);
        EXPECT(gbc.readMem(0xe9a8), 0x79);
        // CB 79 03E1
        gbc.setState(0x1bff, 0xeb23, 0xa3a0, 0xc5d1, 0x6c80, 0xb1dc, 0x0, 0x1);
        gbc.writeMem(0x1bff, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xeb23);
        EXPECT(gbc.pc(), 0x1c01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 79 03E3
        gbc.setState(0x4c3a, 0xf44f, 0x5d70, 0xd338, 0x40b0, 0x29f6, 0x1, 0x1);
        gbc.writeMem(0x4c3a, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf44f);
        EXPECT(gbc.pc(), 0x4c3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 03E4
        gbc.setState(0x9cb6, 0xd8b2, 0x23c0, 0xaa0f, 0x238f, 0x8ed, 0x1, 0x0);
        gbc.writeMem(0x9cb6, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd8b2);
        EXPECT(gbc.pc(), 0x9cb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb6), 0xcb);
        EXPECT(gbc.readMem(0x9cb7), 0x79);
        // CB 79 03E6
        gbc.setState(0x6451, 0x7871, 0xbf10, 0x7906, 0x289d, 0x4881, 0x1, 0x0);
        gbc.writeMem(0x6451, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7871);
        EXPECT(gbc.pc(), 0x6453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 79 03E7
        gbc.setState(0x50c5, 0x14dc, 0x6b70, 0x7de3, 0xeaaf, 0xf216, 0x1, 0x1);
        gbc.writeMem(0x50c5, { 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x14dc);
        EXPECT(gbc.pc(), 0x50c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
}
#endif
