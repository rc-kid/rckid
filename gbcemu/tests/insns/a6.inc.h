    TEST(gbcemu, opcode_a6) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // A6 0001
        gbc.setState(0xcd5a, 0xb702, 0xc8d0, 0x6b9d, 0x4c19, 0x64ad, 0x1, 0x0);
        gbc.writeMem(0x64ad, { 0x1 });
        gbc.writeMem(0xcd5a, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb702, gbc.sp());
        EXPECT(0xcd5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xcd5a));
        // A6 0002
        gbc.setState(0xa9f2, 0xc48c, 0x5e90, 0xb81b, 0x3dd1, 0x928e, 0x1, 0x0);
        gbc.writeMem(0x928e, { 0x4 });
        gbc.writeMem(0xa9f2, { 0xa6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc48c, gbc.sp());
        EXPECT(0xa9f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x928e));
        EXPECT(0xa6, gbc.readMem(0xa9f2));
        // A6 0003
        gbc.setState(0x9ed8, 0x58da, 0xc10, 0x8ac0, 0xbca0, 0xbab6, 0x0, 0x0);
        gbc.writeMem(0x9ed8, { 0xa6 });
        gbc.writeMem(0xbab6, { 0x6a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x58da, gbc.sp());
        EXPECT(0x9ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9ed8));
        EXPECT(0x6a, gbc.readMem(0xbab6));
        // A6 0004
        gbc.setState(0xa3a9, 0xac52, 0x3db0, 0xdf8e, 0x9329, 0x6f4a, 0x1, 0x1);
        gbc.writeMem(0x6f4a, { 0x1e });
        gbc.writeMem(0xa3a9, { 0xa6 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xac52, gbc.sp());
        EXPECT(0xa3aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa3a9));
        // A6 0005
        gbc.setState(0x1fd8, 0xb257, 0x1db0, 0x12a5, 0xa855, 0xaf0f, 0x1, 0x1);
        gbc.writeMem(0x1fd8, { 0xa6 });
        gbc.writeMem(0xaf0f, { 0xc6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb257, gbc.sp());
        EXPECT(0x1fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xaf0f));
        // A6 0006
        gbc.setState(0x8c87, 0x2e5e, 0x6710, 0x378, 0x83be, 0x4f0c, 0x0, 0x1);
        gbc.writeMem(0x4f0c, { 0x83 });
        gbc.writeMem(0x8c87, { 0xa6 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2e5e, gbc.sp());
        EXPECT(0x8c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8c87));
        // A6 0008
        gbc.setState(0x4cb9, 0x8ffe, 0x4c60, 0xf6e7, 0xce7b, 0x8319, 0x0, 0x0);
        gbc.writeMem(0x4cb9, { 0xa6 });
        gbc.writeMem(0x8319, { 0xd0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8ffe, gbc.sp());
        EXPECT(0x4cba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8319));
        // A6 0009
        gbc.setState(0x5347, 0xdc0f, 0x1010, 0x8a41, 0xbeef, 0xc55a, 0x0, 0x0);
        gbc.writeMem(0x5347, { 0xa6 });
        gbc.writeMem(0xc55a, { 0x49 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdc0f, gbc.sp());
        EXPECT(0x5348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc55a));
        // A6 000A
        gbc.setState(0x83e2, 0x82eb, 0x53e0, 0x28fa, 0x9c5d, 0x4997, 0x1, 0x1);
        gbc.writeMem(0x4997, { 0x13 });
        gbc.writeMem(0x83e2, { 0xa6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x82eb, gbc.sp());
        EXPECT(0x83e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x83e2));
        // A6 000B
        gbc.setState(0x8c9e, 0x55fc, 0x8220, 0x3c94, 0x94d4, 0xd5cf, 0x1, 0x0);
        gbc.writeMem(0x8c9e, { 0xa6 });
        gbc.writeMem(0xd5cf, { 0xbf });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x55fc, gbc.sp());
        EXPECT(0x8c9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8c9e));
        EXPECT(0xbf, gbc.readMem(0xd5cf));
        // A6 000C
        gbc.setState(0xaf3d, 0xd82, 0x8440, 0x734e, 0x6f4a, 0xfda0, 0x0, 0x0);
        gbc.writeMem(0xaf3d, { 0xa6 });
        gbc.writeMem(0xfda0, { 0x69 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd82, gbc.sp());
        EXPECT(0xaf3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xaf3d));
        EXPECT(0x69, gbc.readMem(0xfda0));
        // A6 000D
        gbc.setState(0xbb7d, 0x6ba, 0xafd0, 0xbf6, 0xa04d, 0xc61e, 0x1, 0x1);
        gbc.writeMem(0xbb7d, { 0xa6 });
        gbc.writeMem(0xc61e, { 0xd4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6ba, gbc.sp());
        EXPECT(0xbb7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbb7d));
        EXPECT(0xd4, gbc.readMem(0xc61e));
        // A6 000E
        gbc.setState(0x7a34, 0xe71f, 0x5100, 0x5516, 0xdfc, 0x5f8, 0x0, 0x1);
        gbc.writeMem(0x5f8, { 0xb });
        gbc.writeMem(0x7a34, { 0xa6 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe71f, gbc.sp());
        EXPECT(0x7a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 000F
        gbc.setState(0x44f1, 0x9ec6, 0x99d0, 0x709, 0xadc2, 0xb9b, 0x1, 0x0);
        gbc.writeMem(0xb9b, { 0xea });
        gbc.writeMem(0x44f1, { 0xa6 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9ec6, gbc.sp());
        EXPECT(0x44f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0010
        gbc.setState(0x1e04, 0xb391, 0xe0, 0x8052, 0xc4f5, 0x18b2, 0x1, 0x0);
        gbc.writeMem(0x18b2, { 0x53 });
        gbc.writeMem(0x1e04, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb391, gbc.sp());
        EXPECT(0x1e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0011
        gbc.setState(0x48a7, 0xe49d, 0x26c0, 0x92ce, 0x44bc, 0xcc4a, 0x1, 0x0);
        gbc.writeMem(0x48a7, { 0xa6 });
        gbc.writeMem(0xcc4a, { 0x11 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe49d, gbc.sp());
        EXPECT(0x48a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcc4a));
        // A6 0012
        gbc.setState(0x3ca2, 0x466a, 0x9c50, 0xf876, 0x54e7, 0x5550, 0x0, 0x0);
        gbc.writeMem(0x3ca2, { 0xa6 });
        gbc.writeMem(0x5550, { 0xa5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x466a, gbc.sp());
        EXPECT(0x3ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0013
        gbc.setState(0xa5f2, 0x9f3f, 0x5b40, 0x4a7d, 0x90a1, 0x830c, 0x1, 0x1);
        gbc.writeMem(0x830c, { 0x8e });
        gbc.writeMem(0xa5f2, { 0xa6 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9f3f, gbc.sp());
        EXPECT(0xa5f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x830c));
        EXPECT(0xa6, gbc.readMem(0xa5f2));
        // A6 0015
        gbc.setState(0xe888, 0x71f0, 0x5890, 0xe659, 0x3f21, 0xb4c3, 0x0, 0x1);
        gbc.writeMem(0xb4c3, { 0x15 });
        gbc.writeMem(0xe888, { 0xa6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x71f0, gbc.sp());
        EXPECT(0xe889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb4c3));
        EXPECT(0xa6, gbc.readMem(0xe888));
        // A6 0016
        gbc.setState(0xef3c, 0x6a46, 0xf1f0, 0xb887, 0xd0e1, 0x74d7, 0x1, 0x1);
        gbc.writeMem(0x74d7, { 0x94 });
        gbc.writeMem(0xef3c, { 0xa6 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6a46, gbc.sp());
        EXPECT(0xef3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xef3c));
        // A6 0017
        gbc.setState(0x9d14, 0x3f1c, 0x4b60, 0xadab, 0x6508, 0xe6ad, 0x0, 0x0);
        gbc.writeMem(0x9d14, { 0xa6 });
        gbc.writeMem(0xe6ad, { 0xd3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3f1c, gbc.sp());
        EXPECT(0x9d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9d14));
        EXPECT(0xd3, gbc.readMem(0xe6ad));
        // A6 0018
        gbc.setState(0x1fec, 0x6747, 0x8240, 0x4540, 0xe0c7, 0xc3d3, 0x0, 0x1);
        gbc.writeMem(0x1fec, { 0xa6 });
        gbc.writeMem(0xc3d3, { 0xb2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6747, gbc.sp());
        EXPECT(0x1fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc3d3));
        // A6 0019
        gbc.setState(0x6507, 0x8798, 0x54e0, 0xa7c2, 0xb398, 0x6ce3, 0x0, 0x1);
        gbc.writeMem(0x6507, { 0xa6 });
        gbc.writeMem(0x6ce3, { 0x1f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8798, gbc.sp());
        EXPECT(0x6508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 001A
        gbc.setState(0xbd39, 0x4a04, 0xd3d0, 0x5744, 0x4c38, 0xb7e3, 0x1, 0x1);
        gbc.writeMem(0xb7e3, { 0xe4 });
        gbc.writeMem(0xbd39, { 0xa6 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4a04, gbc.sp());
        EXPECT(0xbd3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xb7e3));
        EXPECT(0xa6, gbc.readMem(0xbd39));
        // A6 001B
        gbc.setState(0xbcb5, 0xcb27, 0xa1e0, 0xa7eb, 0xf4ee, 0x90ca, 0x0, 0x1);
        gbc.writeMem(0x90ca, { 0x54 });
        gbc.writeMem(0xbcb5, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xcb27, gbc.sp());
        EXPECT(0xbcb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x90ca));
        EXPECT(0xa6, gbc.readMem(0xbcb5));
        // A6 001C
        gbc.setState(0x4835, 0xde95, 0x6e0, 0x3335, 0xa53d, 0x8062, 0x0, 0x1);
        gbc.writeMem(0x4835, { 0xa6 });
        gbc.writeMem(0x8062, { 0x1d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xde95, gbc.sp());
        EXPECT(0x4836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8062));
        // A6 001D
        gbc.setState(0xb12b, 0x5f38, 0x2080, 0x9767, 0x5c1c, 0xe5d2, 0x0, 0x1);
        gbc.writeMem(0xb12b, { 0xa6 });
        gbc.writeMem(0xe5d2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5f38, gbc.sp());
        EXPECT(0xb12c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb12b));
        EXPECT(0x97, gbc.readMem(0xe5d2));
        // A6 001E
        gbc.setState(0x6b6a, 0x7299, 0x3010, 0x9bc6, 0x66f9, 0x4a06, 0x1, 0x1);
        gbc.writeMem(0x4a06, { 0xca });
        gbc.writeMem(0x6b6a, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7299, gbc.sp());
        EXPECT(0x6b6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 001F
        gbc.setState(0xefbf, 0x2862, 0x74e0, 0xf1aa, 0x5e60, 0x400c, 0x1, 0x1);
        gbc.writeMem(0x400c, { 0xd6 });
        gbc.writeMem(0xefbf, { 0xa6 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2862, gbc.sp());
        EXPECT(0xefc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xefbf));
        // A6 0020
        gbc.setState(0x3511, 0x2421, 0xb0f0, 0xffc6, 0xc791, 0x6e05, 0x0, 0x0);
        gbc.writeMem(0x3511, { 0xa6 });
        gbc.writeMem(0x6e05, { 0x7b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2421, gbc.sp());
        EXPECT(0x3512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0021
        gbc.setState(0x1595, 0xf2e6, 0x64a0, 0xa9dc, 0xac16, 0x9ebb, 0x1, 0x0);
        gbc.writeMem(0x1595, { 0xa6 });
        gbc.writeMem(0x9ebb, { 0xc6 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf2e6, gbc.sp());
        EXPECT(0x1596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9ebb));
        // A6 0022
        gbc.setState(0x5a33, 0x3158, 0xa6a0, 0xcba5, 0x44c8, 0x99b0, 0x0, 0x0);
        gbc.writeMem(0x5a33, { 0xa6 });
        gbc.writeMem(0x99b0, { 0xde });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3158, gbc.sp());
        EXPECT(0x5a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x99b0));
        // A6 0023
        gbc.setState(0xaa40, 0x2ecc, 0xa700, 0x1ee7, 0x7cbb, 0x7583, 0x0, 0x1);
        gbc.writeMem(0x7583, { 0x37 });
        gbc.writeMem(0xaa40, { 0xa6 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2ecc, gbc.sp());
        EXPECT(0xaa41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xaa40));
        // A6 0024
        gbc.setState(0x133a, 0xb409, 0x7a00, 0xbc7b, 0x43b9, 0xfa4, 0x0, 0x0);
        gbc.writeMem(0xfa4, { 0xc9 });
        gbc.writeMem(0x133a, { 0xa6 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb409, gbc.sp());
        EXPECT(0x133b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0025
        gbc.setState(0x560d, 0x9c89, 0x3510, 0x4275, 0x389f, 0xdff6, 0x1, 0x0);
        gbc.writeMem(0x560d, { 0xa6 });
        gbc.writeMem(0xdff6, { 0x7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9c89, gbc.sp());
        EXPECT(0x560e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xdff6));
        // A6 0026
        gbc.setState(0x9f95, 0x2baa, 0x2c20, 0x5088, 0xe9ee, 0x306f, 0x0, 0x1);
        gbc.writeMem(0x306f, { 0x16 });
        gbc.writeMem(0x9f95, { 0xa6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2baa, gbc.sp());
        EXPECT(0x9f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9f95));
        // A6 0028
        gbc.setState(0x2452, 0x629d, 0xf60, 0xe05a, 0x545b, 0x693a, 0x1, 0x0);
        gbc.writeMem(0x2452, { 0xa6 });
        gbc.writeMem(0x693a, { 0x28 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x629d, gbc.sp());
        EXPECT(0x2453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0029
        gbc.setState(0x6e3, 0x596e, 0xb590, 0xce9, 0x8d34, 0x2901, 0x0, 0x1);
        gbc.writeMem(0x6e3, { 0xa6 });
        gbc.writeMem(0x2901, { 0xe0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x596e, gbc.sp());
        EXPECT(0x6e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 002A
        gbc.setState(0x59d6, 0x1657, 0x99f0, 0xbcba, 0x9c9b, 0xf0d0, 0x1, 0x0);
        gbc.writeMem(0x59d6, { 0xa6 });
        gbc.writeMem(0xf0d0, { 0x3c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1657, gbc.sp());
        EXPECT(0x59d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xf0d0));
        // A6 002B
        gbc.setState(0x5e2, 0xc15e, 0xe6c0, 0xe786, 0xade6, 0xac2f, 0x0, 0x1);
        gbc.writeMem(0x5e2, { 0xa6 });
        gbc.writeMem(0xac2f, { 0xbc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc15e, gbc.sp());
        EXPECT(0x5e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xac2f));
        // A6 002C
        gbc.setState(0x983c, 0x8c90, 0xc320, 0xf44d, 0x7386, 0x3fbb, 0x1, 0x0);
        gbc.writeMem(0x3fbb, { 0xd4 });
        gbc.writeMem(0x983c, { 0xa6 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8c90, gbc.sp());
        EXPECT(0x983d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x983c));
        // A6 002D
        gbc.setState(0xcce4, 0xa806, 0x8280, 0x72c, 0x5ad0, 0x983e, 0x1, 0x0);
        gbc.writeMem(0x983e, { 0xd8 });
        gbc.writeMem(0xcce4, { 0xa6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa806, gbc.sp());
        EXPECT(0xcce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x983e));
        EXPECT(0xa6, gbc.readMem(0xcce4));
        // A6 002E
        gbc.setState(0x1d55, 0xca6a, 0xcd00, 0x9e5f, 0x509c, 0x4986, 0x1, 0x0);
        gbc.writeMem(0x1d55, { 0xa6 });
        gbc.writeMem(0x4986, { 0xf0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xca6a, gbc.sp());
        EXPECT(0x1d56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 002F
        gbc.setState(0x46e4, 0x1fa, 0xbbf0, 0x3782, 0x725a, 0x4dc, 0x0, 0x0);
        gbc.writeMem(0x4dc, { 0x68 });
        gbc.writeMem(0x46e4, { 0xa6 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1fa, gbc.sp());
        EXPECT(0x46e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0030
        gbc.setState(0x3704, 0x5ad, 0xa940, 0x7fd5, 0xa8e3, 0x3329, 0x1, 0x0);
        gbc.writeMem(0x3329, { 0x97 });
        gbc.writeMem(0x3704, { 0xa6 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5ad, gbc.sp());
        EXPECT(0x3705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0031
        gbc.setState(0x6aeb, 0x6823, 0xcc30, 0x7273, 0x3dc6, 0xf422, 0x1, 0x0);
        gbc.writeMem(0x6aeb, { 0xa6 });
        gbc.writeMem(0xf422, { 0x2e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6823, gbc.sp());
        EXPECT(0x6aec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xf422));
        // A6 0032
        gbc.setState(0xd01d, 0x465c, 0x8ec0, 0xa2b0, 0xedb5, 0x295c, 0x0, 0x0);
        gbc.writeMem(0x295c, { 0x42 });
        gbc.writeMem(0xd01d, { 0xa6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x465c, gbc.sp());
        EXPECT(0xd01e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd01d));
        // A6 0033
        gbc.setState(0x1009, 0x52d2, 0x760, 0xc624, 0x7a64, 0x18fd, 0x1, 0x1);
        gbc.writeMem(0x1009, { 0xa6 });
        gbc.writeMem(0x18fd, { 0xda });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x52d2, gbc.sp());
        EXPECT(0x100a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0034
        gbc.setState(0xc879, 0xea7f, 0x5140, 0x82, 0x138, 0x87e4, 0x0, 0x1);
        gbc.writeMem(0x87e4, { 0x6f });
        gbc.writeMem(0xc879, { 0xa6 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xea7f, gbc.sp());
        EXPECT(0xc87a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x87e4));
        EXPECT(0xa6, gbc.readMem(0xc879));
        // A6 0035
        gbc.setState(0xc53e, 0xac2f, 0xa20, 0xd35e, 0xb8ca, 0x3439, 0x1, 0x1);
        gbc.writeMem(0x3439, { 0x23 });
        gbc.writeMem(0xc53e, { 0xa6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xac2f, gbc.sp());
        EXPECT(0xc53f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc53e));
        // A6 0036
        gbc.setState(0x98c, 0x29b9, 0xf360, 0xa2a7, 0xfdc9, 0xefd4, 0x1, 0x1);
        gbc.writeMem(0x98c, { 0xa6 });
        gbc.writeMem(0xefd4, { 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x29b9, gbc.sp());
        EXPECT(0x98d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xefd4));
        // A6 0037
        gbc.setState(0x48e0, 0x1c49, 0x6d00, 0x30fb, 0xd77, 0x1a, 0x0, 0x1);
        gbc.writeMem(0x1a, { 0xec });
        gbc.writeMem(0x48e0, { 0xa6 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1c49, gbc.sp());
        EXPECT(0x48e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0038
        gbc.setState(0xad33, 0xdb97, 0xac60, 0x8f75, 0x7a58, 0x45b3, 0x1, 0x0);
        gbc.writeMem(0x45b3, { 0x59 });
        gbc.writeMem(0xad33, { 0xa6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xdb97, gbc.sp());
        EXPECT(0xad34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xad33));
        // A6 0039
        gbc.setState(0x1f60, 0x9c86, 0xc410, 0x1681, 0x406a, 0x2cf8, 0x1, 0x1);
        gbc.writeMem(0x1f60, { 0xa6 });
        gbc.writeMem(0x2cf8, { 0xf2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9c86, gbc.sp());
        EXPECT(0x1f61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 003C
        gbc.setState(0x6592, 0x1e43, 0x6b20, 0x8dda, 0xec89, 0x650f, 0x0, 0x0);
        gbc.writeMem(0x650f, { 0x7 });
        gbc.writeMem(0x6592, { 0xa6 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1e43, gbc.sp());
        EXPECT(0x6593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 003D
        gbc.setState(0x253b, 0xd808, 0x6950, 0x6e42, 0xf86c, 0x913b, 0x1, 0x0);
        gbc.writeMem(0x253b, { 0xa6 });
        gbc.writeMem(0x913b, { 0xee });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd808, gbc.sp());
        EXPECT(0x253c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x913b));
        // A6 003E
        gbc.setState(0xb7d2, 0xf338, 0xa7d0, 0x3cc7, 0x45e6, 0x2c82, 0x0, 0x1);
        gbc.writeMem(0x2c82, { 0xc2 });
        gbc.writeMem(0xb7d2, { 0xa6 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf338, gbc.sp());
        EXPECT(0xb7d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb7d2));
        // A6 003F
        gbc.setState(0x28de, 0x6aa8, 0xe800, 0xd6b2, 0xdf9, 0xaf14, 0x0, 0x0);
        gbc.writeMem(0x28de, { 0xa6 });
        gbc.writeMem(0xaf14, { 0x86 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6aa8, gbc.sp());
        EXPECT(0x28df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xaf14));
        // A6 0040
        gbc.setState(0x38f5, 0x82f8, 0xf860, 0x6d2c, 0xd61b, 0x99dd, 0x1, 0x1);
        gbc.writeMem(0x38f5, { 0xa6 });
        gbc.writeMem(0x99dd, { 0x6f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x82f8, gbc.sp());
        EXPECT(0x38f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x99dd));
        // A6 0041
        gbc.setState(0x1ed1, 0x6089, 0xe440, 0x81bc, 0xdc49, 0x7045, 0x1, 0x1);
        gbc.writeMem(0x1ed1, { 0xa6 });
        gbc.writeMem(0x7045, { 0xb5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6089, gbc.sp());
        EXPECT(0x1ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0042
        gbc.setState(0xdb12, 0x4bdf, 0x8900, 0x1cd2, 0x1cd4, 0xfbf8, 0x1, 0x0);
        gbc.writeMem(0xdb12, { 0xa6 });
        gbc.writeMem(0xfbf8, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4bdf, gbc.sp());
        EXPECT(0xdb13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xdb12));
        EXPECT(0xa2, gbc.readMem(0xfbf8));
        // A6 0043
        gbc.setState(0x4e8c, 0xabf2, 0x80b0, 0x7305, 0x417a, 0xf41b, 0x1, 0x0);
        gbc.writeMem(0x4e8c, { 0xa6 });
        gbc.writeMem(0xf41b, { 0xd5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xabf2, gbc.sp());
        EXPECT(0x4e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xf41b));
        // A6 0044
        gbc.setState(0xbf83, 0xfe6d, 0xd050, 0x89e9, 0x6849, 0x4c04, 0x1, 0x0);
        gbc.writeMem(0x4c04, { 0x12 });
        gbc.writeMem(0xbf83, { 0xa6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xfe6d, gbc.sp());
        EXPECT(0xbf84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbf83));
        // A6 0045
        gbc.setState(0x2135, 0xc351, 0xde60, 0x4624, 0xf079, 0xf9e0, 0x0, 0x0);
        gbc.writeMem(0x2135, { 0xa6 });
        gbc.writeMem(0xf9e0, { 0xdd });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc351, gbc.sp());
        EXPECT(0x2136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xf9e0));
        // A6 0046
        gbc.setState(0xc31b, 0x9e82, 0x45c0, 0x245b, 0xe2ab, 0x8268, 0x0, 0x0);
        gbc.writeMem(0x8268, { 0x65 });
        gbc.writeMem(0xc31b, { 0xa6 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9e82, gbc.sp());
        EXPECT(0xc31c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8268));
        EXPECT(0xa6, gbc.readMem(0xc31b));
        // A6 0048
        gbc.setState(0x2b52, 0xd2b2, 0x4a50, 0x379, 0x6936, 0xf498, 0x1, 0x1);
        gbc.writeMem(0x2b52, { 0xa6 });
        gbc.writeMem(0xf498, { 0xae });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd2b2, gbc.sp());
        EXPECT(0x2b53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xf498));
        // A6 0049
        gbc.setState(0x447f, 0x8147, 0x3060, 0x1db0, 0x61a8, 0xa10d, 0x0, 0x1);
        gbc.writeMem(0x447f, { 0xa6 });
        gbc.writeMem(0xa10d, { 0x3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8147, gbc.sp());
        EXPECT(0x4480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa10d));
        // A6 004A
        gbc.setState(0x6cc0, 0x8404, 0x4710, 0xa863, 0x378d, 0xfccd, 0x0, 0x0);
        gbc.writeMem(0x6cc0, { 0xa6 });
        gbc.writeMem(0xfccd, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8404, gbc.sp());
        EXPECT(0x6cc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xfccd));
        // A6 004B
        gbc.setState(0xd4d4, 0xa2c, 0xe9d0, 0x89f9, 0xeb62, 0x3507, 0x0, 0x1);
        gbc.writeMem(0x3507, { 0x86 });
        gbc.writeMem(0xd4d4, { 0xa6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa2c, gbc.sp());
        EXPECT(0xd4d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd4d4));
        // A6 004C
        gbc.setState(0x5b9, 0x6592, 0x2c20, 0xe955, 0xc800, 0x9258, 0x1, 0x0);
        gbc.writeMem(0x5b9, { 0xa6 });
        gbc.writeMem(0x9258, { 0x71 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6592, gbc.sp());
        EXPECT(0x5ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9258));
        // A6 004D
        gbc.setState(0x94d2, 0x5452, 0xd90, 0x5126, 0x741f, 0x8bb0, 0x0, 0x1);
        gbc.writeMem(0x8bb0, { 0xe5 });
        gbc.writeMem(0x94d2, { 0xa6 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5452, gbc.sp());
        EXPECT(0x94d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x8bb0));
        EXPECT(0xa6, gbc.readMem(0x94d2));
        // A6 004E
        gbc.setState(0x227e, 0xc98a, 0xb80, 0xeafe, 0x3f25, 0xeecb, 0x1, 0x0);
        gbc.writeMem(0x227e, { 0xa6 });
        gbc.writeMem(0xeecb, { 0xf9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc98a, gbc.sp());
        EXPECT(0x227f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xeecb));
        // A6 004F
        gbc.setState(0xc720, 0x2d68, 0x9590, 0x8433, 0xcc7c, 0x68f0, 0x1, 0x0);
        gbc.writeMem(0x68f0, { 0xfc });
        gbc.writeMem(0xc720, { 0xa6 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2d68, gbc.sp());
        EXPECT(0xc721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc720));
        // A6 0050
        gbc.setState(0xee35, 0x8830, 0x8be0, 0x3fa6, 0x2e74, 0xb4ad, 0x0, 0x1);
        gbc.writeMem(0xb4ad, { 0x3e });
        gbc.writeMem(0xee35, { 0xa6 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8830, gbc.sp());
        EXPECT(0xee36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb4ad));
        EXPECT(0xa6, gbc.readMem(0xee35));
        // A6 0051
        gbc.setState(0x7212, 0x6f84, 0xbc10, 0x807d, 0x9066, 0x5b0a, 0x0, 0x1);
        gbc.writeMem(0x5b0a, { 0xf2 });
        gbc.writeMem(0x7212, { 0xa6 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6f84, gbc.sp());
        EXPECT(0x7213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0052
        gbc.setState(0x505d, 0xa6a0, 0x3c50, 0xac67, 0x95ae, 0xa2ad, 0x1, 0x0);
        gbc.writeMem(0x505d, { 0xa6 });
        gbc.writeMem(0xa2ad, { 0x4c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa6a0, gbc.sp());
        EXPECT(0x505e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa2ad));
        // A6 0053
        gbc.setState(0x7362, 0xefcd, 0x8d20, 0x7a06, 0xf2f, 0xb577, 0x1, 0x1);
        gbc.writeMem(0x7362, { 0xa6 });
        gbc.writeMem(0xb577, { 0xb3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xefcd, gbc.sp());
        EXPECT(0x7363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb577));
        // A6 0054
        gbc.setState(0xc18d, 0xe902, 0xbf30, 0x2498, 0x5ce5, 0x4b42, 0x1, 0x1);
        gbc.writeMem(0x4b42, { 0x3a });
        gbc.writeMem(0xc18d, { 0xa6 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe902, gbc.sp());
        EXPECT(0xc18e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc18d));
        // A6 0055
        gbc.setState(0x1ef0, 0xacdd, 0xf0e0, 0x98de, 0x7e7c, 0x470e, 0x0, 0x0);
        gbc.writeMem(0x1ef0, { 0xa6 });
        gbc.writeMem(0x470e, { 0xa9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xacdd, gbc.sp());
        EXPECT(0x1ef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0056
        gbc.setState(0x56f9, 0x391b, 0xd1f0, 0xe335, 0x500d, 0x3743, 0x1, 0x1);
        gbc.writeMem(0x3743, { 0xea });
        gbc.writeMem(0x56f9, { 0xa6 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x391b, gbc.sp());
        EXPECT(0x56fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0057
        gbc.setState(0xe1fa, 0x7f24, 0x54f0, 0xd6f1, 0x216b, 0xcd24, 0x1, 0x1);
        gbc.writeMem(0xcd24, { 0x60 });
        gbc.writeMem(0xe1fa, { 0xa6 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7f24, gbc.sp());
        EXPECT(0xe1fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xcd24));
        EXPECT(0xa6, gbc.readMem(0xe1fa));
        // A6 0058
        gbc.setState(0x6378, 0x18ae, 0xbb60, 0xc2df, 0x8971, 0xad1c, 0x1, 0x0);
        gbc.writeMem(0x6378, { 0xa6 });
        gbc.writeMem(0xad1c, { 0xcb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x18ae, gbc.sp());
        EXPECT(0x6379, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad1c));
        // A6 0059
        gbc.setState(0x59c3, 0x8296, 0x2b00, 0x9fe0, 0xdd21, 0xec38, 0x0, 0x0);
        gbc.writeMem(0x59c3, { 0xa6 });
        gbc.writeMem(0xec38, { 0x24 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8296, gbc.sp());
        EXPECT(0x59c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xec38));
        // A6 005A
        gbc.setState(0xb7c6, 0xdadd, 0x1980, 0x5131, 0x9e25, 0xd798, 0x1, 0x1);
        gbc.writeMem(0xb7c6, { 0xa6 });
        gbc.writeMem(0xd798, { 0x6a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xdadd, gbc.sp());
        EXPECT(0xb7c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb7c6));
        EXPECT(0x6a, gbc.readMem(0xd798));
        // A6 005C
        gbc.setState(0x47e5, 0x37f6, 0x3370, 0x13b, 0x831b, 0x20f6, 0x1, 0x0);
        gbc.writeMem(0x20f6, { 0x3d });
        gbc.writeMem(0x47e5, { 0xa6 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x37f6, gbc.sp());
        EXPECT(0x47e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 005E
        gbc.setState(0xdc60, 0xdb08, 0xb2a0, 0xe756, 0x8ebb, 0x103b, 0x0, 0x0);
        gbc.writeMem(0x103b, { 0x22 });
        gbc.writeMem(0xdc60, { 0xa6 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdb08, gbc.sp());
        EXPECT(0xdc61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xdc60));
        // A6 005F
        gbc.setState(0x3398, 0xf3a, 0x4e10, 0x18f9, 0xa090, 0x461d, 0x0, 0x0);
        gbc.writeMem(0x3398, { 0xa6 });
        gbc.writeMem(0x461d, { 0x1f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf3a, gbc.sp());
        EXPECT(0x3399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0060
        gbc.setState(0x7375, 0x75d4, 0xe990, 0xd820, 0x3a79, 0xaa78, 0x0, 0x1);
        gbc.writeMem(0x7375, { 0xa6 });
        gbc.writeMem(0xaa78, { 0xa7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x75d4, gbc.sp());
        EXPECT(0x7376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xaa78));
        // A6 0061
        gbc.setState(0x372f, 0x42e9, 0xfdc0, 0xd778, 0xc5c7, 0x9479, 0x0, 0x1);
        gbc.writeMem(0x372f, { 0xa6 });
        gbc.writeMem(0x9479, { 0x59 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x42e9, gbc.sp());
        EXPECT(0x3730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x9479));
        // A6 0062
        gbc.setState(0x6432, 0x6f51, 0xeb80, 0x79b8, 0x4350, 0x7bd9, 0x0, 0x0);
        gbc.writeMem(0x6432, { 0xa6 });
        gbc.writeMem(0x7bd9, { 0x72 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6f51, gbc.sp());
        EXPECT(0x6433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0064
        gbc.setState(0x4b56, 0xe706, 0xb80, 0xf83c, 0xe680, 0x5e8c, 0x1, 0x1);
        gbc.writeMem(0x4b56, { 0xa6 });
        gbc.writeMem(0x5e8c, { 0x9f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe706, gbc.sp());
        EXPECT(0x4b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0066
        gbc.setState(0x4b76, 0x4cdf, 0x4240, 0x84cb, 0x7f17, 0xf2c1, 0x1, 0x1);
        gbc.writeMem(0x4b76, { 0xa6 });
        gbc.writeMem(0xf2c1, { 0xec });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4cdf, gbc.sp());
        EXPECT(0x4b77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xf2c1));
        // A6 0067
        gbc.setState(0x209e, 0x6802, 0xf590, 0x311a, 0x2d0d, 0xcced, 0x1, 0x0);
        gbc.writeMem(0x209e, { 0xa6 });
        gbc.writeMem(0xcced, { 0x7a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6802, gbc.sp());
        EXPECT(0x209f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xcced));
        // A6 0068
        gbc.setState(0xd004, 0x404e, 0x53e0, 0x2626, 0x8b98, 0x8e26, 0x1, 0x0);
        gbc.writeMem(0x8e26, { 0xc4 });
        gbc.writeMem(0xd004, { 0xa6 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x404e, gbc.sp());
        EXPECT(0xd005, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x8e26));
        EXPECT(0xa6, gbc.readMem(0xd004));
        // A6 0069
        gbc.setState(0x6a7d, 0xd8e9, 0x1020, 0x1f62, 0x4d9c, 0xb850, 0x0, 0x1);
        gbc.writeMem(0x6a7d, { 0xa6 });
        gbc.writeMem(0xb850, { 0x9c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd8e9, gbc.sp());
        EXPECT(0x6a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb850));
        // A6 006A
        gbc.setState(0x48a2, 0xfc7a, 0xc010, 0xb47d, 0x802, 0x94f4, 0x1, 0x1);
        gbc.writeMem(0x48a2, { 0xa6 });
        gbc.writeMem(0x94f4, { 0x75 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfc7a, gbc.sp());
        EXPECT(0x48a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x94f4));
        // A6 006B
        gbc.setState(0x6564, 0x3891, 0x2a0, 0x6e5d, 0x5e3c, 0x311b, 0x1, 0x0);
        gbc.writeMem(0x311b, { 0x83 });
        gbc.writeMem(0x6564, { 0xa6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3891, gbc.sp());
        EXPECT(0x6565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 006C
        gbc.setState(0x76b0, 0x2be5, 0x6e0, 0x96f5, 0x3905, 0x361b, 0x1, 0x0);
        gbc.writeMem(0x361b, { 0x9d });
        gbc.writeMem(0x76b0, { 0xa6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2be5, gbc.sp());
        EXPECT(0x76b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 006D
        gbc.setState(0x7b85, 0x59f1, 0x3d20, 0x16ca, 0x4780, 0x1621, 0x1, 0x0);
        gbc.writeMem(0x1621, { 0x53 });
        gbc.writeMem(0x7b85, { 0xa6 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x59f1, gbc.sp());
        EXPECT(0x7b86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 006E
        gbc.setState(0xde9a, 0x3af9, 0x6100, 0x1a87, 0xe072, 0xfc0b, 0x0, 0x0);
        gbc.writeMem(0xde9a, { 0xa6 });
        gbc.writeMem(0xfc0b, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3af9, gbc.sp());
        EXPECT(0xde9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xde9a));
        EXPECT(0xa0, gbc.readMem(0xfc0b));
        // A6 006F
        gbc.setState(0x2875, 0x9d14, 0x42a0, 0x3335, 0x9f9c, 0xf5d2, 0x0, 0x0);
        gbc.writeMem(0x2875, { 0xa6 });
        gbc.writeMem(0xf5d2, { 0x3f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9d14, gbc.sp());
        EXPECT(0x2876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xf5d2));
        // A6 0070
        gbc.setState(0xbb4f, 0x3ab7, 0xd7b0, 0x504, 0x65a5, 0x2ccd, 0x0, 0x0);
        gbc.writeMem(0x2ccd, { 0xb5 });
        gbc.writeMem(0xbb4f, { 0xa6 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3ab7, gbc.sp());
        EXPECT(0xbb50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbb4f));
        // A6 0071
        gbc.setState(0xa800, 0xd8cf, 0x6f80, 0x3296, 0xf73d, 0xd4bf, 0x1, 0x1);
        gbc.writeMem(0xa800, { 0xa6 });
        gbc.writeMem(0xd4bf, { 0xd1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd8cf, gbc.sp());
        EXPECT(0xa801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa800));
        EXPECT(0xd1, gbc.readMem(0xd4bf));
        // A6 0073
        gbc.setState(0x297a, 0xab4c, 0x42a0, 0x5d53, 0xcb3e, 0x91d, 0x0, 0x1);
        gbc.writeMem(0x91d, { 0x95 });
        gbc.writeMem(0x297a, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xab4c, gbc.sp());
        EXPECT(0x297b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0074
        gbc.setState(0xe8d9, 0x2af7, 0x9860, 0xa336, 0x94c0, 0x5aff, 0x0, 0x1);
        gbc.writeMem(0x5aff, { 0x28 });
        gbc.writeMem(0xe8d9, { 0xa6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2af7, gbc.sp());
        EXPECT(0xe8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe8d9));
        // A6 0075
        gbc.setState(0x60f1, 0xc837, 0x9c10, 0xa7b, 0xe3cb, 0x8ae8, 0x1, 0x0);
        gbc.writeMem(0x60f1, { 0xa6 });
        gbc.writeMem(0x8ae8, { 0x2f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc837, gbc.sp());
        EXPECT(0x60f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8ae8));
        // A6 0076
        gbc.setState(0xaff6, 0xdabe, 0x4d80, 0x6efc, 0x17f8, 0x38d2, 0x1, 0x0);
        gbc.writeMem(0x38d2, { 0x87 });
        gbc.writeMem(0xaff6, { 0xa6 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdabe, gbc.sp());
        EXPECT(0xaff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xaff6));
        // A6 0077
        gbc.setState(0xea9c, 0x6b63, 0x43d0, 0xb386, 0x9820, 0x82d5, 0x1, 0x0);
        gbc.writeMem(0x82d5, { 0x8d });
        gbc.writeMem(0xea9c, { 0xa6 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6b63, gbc.sp());
        EXPECT(0xea9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x82d5));
        EXPECT(0xa6, gbc.readMem(0xea9c));
        // A6 0078
        gbc.setState(0x9fd, 0x62cd, 0x61c0, 0x3266, 0xabb4, 0x1059, 0x1, 0x0);
        gbc.writeMem(0x9fd, { 0xa6 });
        gbc.writeMem(0x1059, { 0x73 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x62cd, gbc.sp());
        EXPECT(0x9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0079
        gbc.setState(0x40e0, 0x9ff5, 0xb470, 0xfbcb, 0x4663, 0xa45f, 0x0, 0x1);
        gbc.writeMem(0x40e0, { 0xa6 });
        gbc.writeMem(0xa45f, { 0x2a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9ff5, gbc.sp());
        EXPECT(0x40e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xa45f));
        // A6 007A
        gbc.setState(0xbc6d, 0x5c21, 0xf830, 0xb1a7, 0x564f, 0x2bf9, 0x1, 0x1);
        gbc.writeMem(0x2bf9, { 0xa });
        gbc.writeMem(0xbc6d, { 0xa6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5c21, gbc.sp());
        EXPECT(0xbc6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbc6d));
        // A6 007B
        gbc.setState(0x2392, 0x7cf9, 0xfc70, 0x7c37, 0xdb98, 0x7972, 0x1, 0x1);
        gbc.writeMem(0x2392, { 0xa6 });
        gbc.writeMem(0x7972, { 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7cf9, gbc.sp());
        EXPECT(0x2393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 007C
        gbc.setState(0x75f6, 0x2872, 0xc570, 0xe589, 0x242f, 0xca28, 0x0, 0x0);
        gbc.writeMem(0x75f6, { 0xa6 });
        gbc.writeMem(0xca28, { 0x48 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2872, gbc.sp());
        EXPECT(0x75f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xca28));
        // A6 007D
        gbc.setState(0x1ff, 0x383d, 0x57c0, 0xee9b, 0xa8a3, 0x16a, 0x1, 0x1);
        gbc.writeMem(0x16a, { 0xe6 });
        gbc.writeMem(0x1ff, { 0xa6 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x383d, gbc.sp());
        EXPECT(0x200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 007E
        gbc.setState(0x98d0, 0xb9f3, 0x87d0, 0x77c8, 0xf60e, 0x22e6, 0x1, 0x0);
        gbc.writeMem(0x22e6, { 0x40 });
        gbc.writeMem(0x98d0, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb9f3, gbc.sp());
        EXPECT(0x98d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x98d0));
        // A6 007F
        gbc.setState(0x634f, 0x53e3, 0xac10, 0xcb55, 0x40f2, 0xcc31, 0x1, 0x0);
        gbc.writeMem(0x634f, { 0xa6 });
        gbc.writeMem(0xcc31, { 0x73 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x53e3, gbc.sp());
        EXPECT(0x6350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xcc31));
        // A6 0080
        gbc.setState(0x72b1, 0x4375, 0xdcf0, 0x88e, 0xa759, 0x8376, 0x0, 0x0);
        gbc.writeMem(0x72b1, { 0xa6 });
        gbc.writeMem(0x8376, { 0xcf });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4375, gbc.sp());
        EXPECT(0x72b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x8376));
        // A6 0081
        gbc.setState(0x751b, 0x8ac9, 0x2880, 0x667c, 0xd8ef, 0x395f, 0x1, 0x0);
        gbc.writeMem(0x395f, { 0x3c });
        gbc.writeMem(0x751b, { 0xa6 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8ac9, gbc.sp());
        EXPECT(0x751c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0082
        gbc.setState(0xa99e, 0x46cd, 0xe2a0, 0x259f, 0x835a, 0xbf62, 0x1, 0x0);
        gbc.writeMem(0xa99e, { 0xa6 });
        gbc.writeMem(0xbf62, { 0x8a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x46cd, gbc.sp());
        EXPECT(0xa99f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa99e));
        EXPECT(0x8a, gbc.readMem(0xbf62));
        // A6 0083
        gbc.setState(0x3f5, 0x5b59, 0x59b0, 0x43dc, 0xcf3, 0x3fa9, 0x1, 0x0);
        gbc.writeMem(0x3f5, { 0xa6 });
        gbc.writeMem(0x3fa9, { 0xc7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5b59, gbc.sp());
        EXPECT(0x3f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0084
        gbc.setState(0x66c3, 0x6beb, 0x8590, 0x7b74, 0xd519, 0x5c2a, 0x0, 0x1);
        gbc.writeMem(0x5c2a, { 0xcc });
        gbc.writeMem(0x66c3, { 0xa6 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6beb, gbc.sp());
        EXPECT(0x66c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0085
        gbc.setState(0x90f1, 0x7408, 0xb380, 0x48e9, 0x560b, 0xb638, 0x1, 0x0);
        gbc.writeMem(0x90f1, { 0xa6 });
        gbc.writeMem(0xb638, { 0x32 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7408, gbc.sp());
        EXPECT(0x90f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x90f1));
        EXPECT(0x32, gbc.readMem(0xb638));
        // A6 0086
        gbc.setState(0xcab7, 0xc3d, 0x8470, 0x5520, 0x8a7, 0x88d6, 0x1, 0x1);
        gbc.writeMem(0x88d6, { 0x2f });
        gbc.writeMem(0xcab7, { 0xa6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc3d, gbc.sp());
        EXPECT(0xcab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x88d6));
        EXPECT(0xa6, gbc.readMem(0xcab7));
        // A6 0087
        gbc.setState(0x5872, 0x6103, 0xe850, 0xf898, 0x6797, 0x9a71, 0x1, 0x1);
        gbc.writeMem(0x5872, { 0xa6 });
        gbc.writeMem(0x9a71, { 0x8b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6103, gbc.sp());
        EXPECT(0x5873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x9a71));
        // A6 0088
        gbc.setState(0x739c, 0x4da7, 0x2e40, 0x41aa, 0x1944, 0xa056, 0x1, 0x1);
        gbc.writeMem(0x739c, { 0xa6 });
        gbc.writeMem(0xa056, { 0x9e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4da7, gbc.sp());
        EXPECT(0x739d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa056));
        // A6 008A
        gbc.setState(0xe346, 0x9333, 0x65a0, 0x9cc5, 0x5f0e, 0x9d22, 0x0, 0x1);
        gbc.writeMem(0x9d22, { 0xa4 });
        gbc.writeMem(0xe346, { 0xa6 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9333, gbc.sp());
        EXPECT(0xe347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9d22));
        EXPECT(0xa6, gbc.readMem(0xe346));
        // A6 008B
        gbc.setState(0x79c7, 0x672e, 0x43b0, 0x86a4, 0x8345, 0x1b0d, 0x1, 0x0);
        gbc.writeMem(0x1b0d, { 0x84 });
        gbc.writeMem(0x79c7, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x672e, gbc.sp());
        EXPECT(0x79c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 008C
        gbc.setState(0x18f6, 0x725d, 0x1b40, 0xc368, 0x9d9, 0x50b8, 0x0, 0x0);
        gbc.writeMem(0x18f6, { 0xa6 });
        gbc.writeMem(0x50b8, { 0xe6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x725d, gbc.sp());
        EXPECT(0x18f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 008D
        gbc.setState(0xa923, 0x41d6, 0x7c00, 0x9b2c, 0x43b8, 0x1193, 0x1, 0x0);
        gbc.writeMem(0x1193, { 0xc2 });
        gbc.writeMem(0xa923, { 0xa6 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x41d6, gbc.sp());
        EXPECT(0xa924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa923));
        // A6 008E
        gbc.setState(0x9860, 0x73b5, 0xe030, 0x9d82, 0x4697, 0x4890, 0x0, 0x1);
        gbc.writeMem(0x4890, { 0x8f });
        gbc.writeMem(0x9860, { 0xa6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x73b5, gbc.sp());
        EXPECT(0x9861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9860));
        // A6 008F
        gbc.setState(0xf31, 0x1e5f, 0x7450, 0xb482, 0x329e, 0x8b34, 0x1, 0x1);
        gbc.writeMem(0xf31, { 0xa6 });
        gbc.writeMem(0x8b34, { 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1e5f, gbc.sp());
        EXPECT(0xf32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8b34));
        // A6 0090
        gbc.setState(0x5526, 0x55b9, 0x1c00, 0xb3f2, 0x1c42, 0x8d83, 0x0, 0x1);
        gbc.writeMem(0x5526, { 0xa6 });
        gbc.writeMem(0x8d83, { 0xc9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x55b9, gbc.sp());
        EXPECT(0x5527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8d83));
        // A6 0092
        gbc.setState(0x70c9, 0x6bb3, 0x7b00, 0xc324, 0x38be, 0x6d83, 0x0, 0x0);
        gbc.writeMem(0x6d83, { 0x59 });
        gbc.writeMem(0x70c9, { 0xa6 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6bb3, gbc.sp());
        EXPECT(0x70ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0093
        gbc.setState(0x69ae, 0xb54c, 0x82d0, 0x5e22, 0xa869, 0x208, 0x1, 0x1);
        gbc.writeMem(0x208, { 0xef });
        gbc.writeMem(0x69ae, { 0xa6 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb54c, gbc.sp());
        EXPECT(0x69af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0094
        gbc.setState(0x1349, 0x258c, 0xcf0, 0xb2b6, 0xae32, 0xf0a6, 0x1, 0x0);
        gbc.writeMem(0x1349, { 0xa6 });
        gbc.writeMem(0xf0a6, { 0x3f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x258c, gbc.sp());
        EXPECT(0x134a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xf0a6));
        // A6 0095
        gbc.setState(0xd812, 0xe41f, 0xaed0, 0x2e5e, 0x71f7, 0x1edf, 0x1, 0x0);
        gbc.writeMem(0x1edf, { 0x3c });
        gbc.writeMem(0xd812, { 0xa6 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe41f, gbc.sp());
        EXPECT(0xd813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd812));
        // A6 0096
        gbc.setState(0x4061, 0x8669, 0xa510, 0xeb51, 0x2909, 0x5889, 0x1, 0x1);
        gbc.writeMem(0x4061, { 0xa6 });
        gbc.writeMem(0x5889, { 0xb });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8669, gbc.sp());
        EXPECT(0x4062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0097
        gbc.setState(0x11fa, 0xd38d, 0xabf0, 0x86a5, 0xc670, 0xcd57, 0x0, 0x0);
        gbc.writeMem(0x11fa, { 0xa6 });
        gbc.writeMem(0xcd57, { 0xb3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd38d, gbc.sp());
        EXPECT(0x11fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcd57));
        // A6 0098
        gbc.setState(0x1944, 0x7f32, 0x1860, 0x562e, 0x7cb0, 0x9ade, 0x0, 0x1);
        gbc.writeMem(0x1944, { 0xa6 });
        gbc.writeMem(0x9ade, { 0xbc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7f32, gbc.sp());
        EXPECT(0x1945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9ade));
        // A6 0099
        gbc.setState(0x6576, 0xb8af, 0x3950, 0xc1fa, 0x13ca, 0xdb35, 0x0, 0x1);
        gbc.writeMem(0x6576, { 0xa6 });
        gbc.writeMem(0xdb35, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb8af, gbc.sp());
        EXPECT(0x6577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xdb35));
        // A6 009A
        gbc.setState(0x9940, 0x395, 0x42b0, 0x35f6, 0x4dac, 0xcc03, 0x0, 0x0);
        gbc.writeMem(0x9940, { 0xa6 });
        gbc.writeMem(0xcc03, { 0x37 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x395, gbc.sp());
        EXPECT(0x9941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9940));
        EXPECT(0x37, gbc.readMem(0xcc03));
        // A6 009B
        gbc.setState(0xee7e, 0xfc43, 0x7210, 0x83b6, 0xc39f, 0x68bb, 0x1, 0x0);
        gbc.writeMem(0x68bb, { 0x7b });
        gbc.writeMem(0xee7e, { 0xa6 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfc43, gbc.sp());
        EXPECT(0xee7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xee7e));
        // A6 009C
        gbc.setState(0x3a49, 0x27de, 0x3820, 0x7a24, 0xc21d, 0xd250, 0x1, 0x0);
        gbc.writeMem(0x3a49, { 0xa6 });
        gbc.writeMem(0xd250, { 0x81 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x27de, gbc.sp());
        EXPECT(0x3a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd250));
        // A6 009D
        gbc.setState(0x90e8, 0xf1d5, 0xe0d0, 0x4747, 0xb4b1, 0x8842, 0x1, 0x1);
        gbc.writeMem(0x8842, { 0xb5 });
        gbc.writeMem(0x90e8, { 0xa6 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf1d5, gbc.sp());
        EXPECT(0x90e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8842));
        EXPECT(0xa6, gbc.readMem(0x90e8));
        // A6 009E
        gbc.setState(0xdeab, 0xb84d, 0x7210, 0xa20f, 0x4535, 0x25be, 0x0, 0x0);
        gbc.writeMem(0x25be, { 0x38 });
        gbc.writeMem(0xdeab, { 0xa6 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb84d, gbc.sp());
        EXPECT(0xdeac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xdeab));
        // A6 009F
        gbc.setState(0x2373, 0x7c7, 0xa600, 0xc23e, 0xc50, 0xeed3, 0x1, 0x1);
        gbc.writeMem(0x2373, { 0xa6 });
        gbc.writeMem(0xeed3, { 0x30 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7c7, gbc.sp());
        EXPECT(0x2374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xeed3));
        // A6 00A0
        gbc.setState(0x83e2, 0xfaa3, 0xd320, 0xc432, 0xa5a2, 0x701b, 0x1, 0x1);
        gbc.writeMem(0x701b, { 0x8b });
        gbc.writeMem(0x83e2, { 0xa6 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfaa3, gbc.sp());
        EXPECT(0x83e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x83e2));
        // A6 00A1
        gbc.setState(0x81bc, 0xf239, 0xc660, 0xd474, 0xa9b7, 0x3f3, 0x0, 0x1);
        gbc.writeMem(0x3f3, { 0x18 });
        gbc.writeMem(0x81bc, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf239, gbc.sp());
        EXPECT(0x81bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x81bc));
        // A6 00A2
        gbc.setState(0x8d06, 0xefce, 0xece0, 0x5b27, 0xa55f, 0xbe7, 0x0, 0x0);
        gbc.writeMem(0xbe7, { 0x46 });
        gbc.writeMem(0x8d06, { 0xa6 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xefce, gbc.sp());
        EXPECT(0x8d07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8d06));
        // A6 00A3
        gbc.setState(0xe1bc, 0xf2a9, 0xadd0, 0xecb0, 0x9820, 0x66bb, 0x1, 0x1);
        gbc.writeMem(0x66bb, { 0xdc });
        gbc.writeMem(0xe1bc, { 0xa6 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf2a9, gbc.sp());
        EXPECT(0xe1bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe1bc));
        // A6 00A4
        gbc.setState(0xeec3, 0x560c, 0x5a30, 0xe170, 0x9cd4, 0x16bc, 0x1, 0x0);
        gbc.writeMem(0x16bc, { 0xb0 });
        gbc.writeMem(0xeec3, { 0xa6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x560c, gbc.sp());
        EXPECT(0xeec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xeec3));
        // A6 00A5
        gbc.setState(0x40ae, 0x9176, 0xd580, 0x3992, 0x5e35, 0x6014, 0x1, 0x0);
        gbc.writeMem(0x40ae, { 0xa6 });
        gbc.writeMem(0x6014, { 0xcd });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9176, gbc.sp());
        EXPECT(0x40af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00A6
        gbc.setState(0x2587, 0x1dae, 0x10e0, 0x791a, 0xe960, 0x5dc7, 0x1, 0x0);
        gbc.writeMem(0x2587, { 0xa6 });
        gbc.writeMem(0x5dc7, { 0xd2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1dae, gbc.sp());
        EXPECT(0x2588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00A7
        gbc.setState(0x8996, 0xd3d0, 0x7100, 0x70c9, 0xae49, 0x6d5, 0x1, 0x0);
        gbc.writeMem(0x6d5, { 0x80 });
        gbc.writeMem(0x8996, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd3d0, gbc.sp());
        EXPECT(0x8997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8996));
        // A6 00A8
        gbc.setState(0xdfbf, 0x25b4, 0xb490, 0xd043, 0x9640, 0xc887, 0x0, 0x0);
        gbc.writeMem(0xc887, { 0xb5 });
        gbc.writeMem(0xdfbf, { 0xa6 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x25b4, gbc.sp());
        EXPECT(0xdfc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc887));
        EXPECT(0xa6, gbc.readMem(0xdfbf));
        // A6 00A9
        gbc.setState(0x63b9, 0xa257, 0xac20, 0xc9e2, 0xd782, 0x4056, 0x0, 0x1);
        gbc.writeMem(0x4056, { 0xe8 });
        gbc.writeMem(0x63b9, { 0xa6 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa257, gbc.sp());
        EXPECT(0x63ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00AA
        gbc.setState(0x7beb, 0xdd10, 0xc680, 0x9910, 0x99a6, 0x9cd5, 0x0, 0x1);
        gbc.writeMem(0x7beb, { 0xa6 });
        gbc.writeMem(0x9cd5, { 0x6b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdd10, gbc.sp());
        EXPECT(0x7bec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x9cd5));
        // A6 00AB
        gbc.setState(0xd549, 0xa55f, 0x7e80, 0x6e3d, 0xdb39, 0xaaba, 0x0, 0x0);
        gbc.writeMem(0xaaba, { 0x56 });
        gbc.writeMem(0xd549, { 0xa6 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa55f, gbc.sp());
        EXPECT(0xd54a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xaaba));
        EXPECT(0xa6, gbc.readMem(0xd549));
        // A6 00AC
        gbc.setState(0xb4b5, 0xb376, 0xaab0, 0x6402, 0x37b, 0xe400, 0x1, 0x0);
        gbc.writeMem(0xb4b5, { 0xa6 });
        gbc.writeMem(0xe400, { 0x5d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb376, gbc.sp());
        EXPECT(0xb4b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb4b5));
        EXPECT(0x5d, gbc.readMem(0xe400));
        // A6 00AD
        gbc.setState(0xbc29, 0x9e04, 0x84c0, 0x9484, 0xf336, 0x550e, 0x0, 0x1);
        gbc.writeMem(0x550e, { 0x0 });
        gbc.writeMem(0xbc29, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9e04, gbc.sp());
        EXPECT(0xbc2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbc29));
        // A6 00AE
        gbc.setState(0xc3f2, 0x5dc7, 0xfa10, 0x98dd, 0x3b1b, 0x4cd4, 0x1, 0x0);
        gbc.writeMem(0x4cd4, { 0xb3 });
        gbc.writeMem(0xc3f2, { 0xa6 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5dc7, gbc.sp());
        EXPECT(0xc3f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc3f2));
        // A6 00AF
        gbc.setState(0x9da0, 0xb464, 0x3a0, 0xde72, 0x4d52, 0xa800, 0x1, 0x0);
        gbc.writeMem(0x9da0, { 0xa6 });
        gbc.writeMem(0xa800, { 0x54 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb464, gbc.sp());
        EXPECT(0x9da1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9da0));
        EXPECT(0x54, gbc.readMem(0xa800));
        // A6 00B0
        gbc.setState(0x252, 0x1217, 0xcee0, 0x7d70, 0xfe49, 0xb871, 0x0, 0x0);
        gbc.writeMem(0x252, { 0xa6 });
        gbc.writeMem(0xb871, { 0xaa });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1217, gbc.sp());
        EXPECT(0x253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb871));
        // A6 00B1
        gbc.setState(0x2d74, 0xac45, 0x2e80, 0x238f, 0x938a, 0xfc3d, 0x1, 0x1);
        gbc.writeMem(0x2d74, { 0xa6 });
        gbc.writeMem(0xfc3d, { 0x13 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xac45, gbc.sp());
        EXPECT(0x2d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xfc3d));
        // A6 00B2
        gbc.setState(0x68fd, 0x1e9, 0x8990, 0xfeb8, 0x2a22, 0xdeb9, 0x0, 0x1);
        gbc.writeMem(0x68fd, { 0xa6 });
        gbc.writeMem(0xdeb9, { 0xae });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1e9, gbc.sp());
        EXPECT(0x68fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xdeb9));
        // A6 00B3
        gbc.setState(0xaa8c, 0x6d30, 0x93a0, 0x7e17, 0x6b0f, 0x2186, 0x1, 0x0);
        gbc.writeMem(0x2186, { 0x2c });
        gbc.writeMem(0xaa8c, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6d30, gbc.sp());
        EXPECT(0xaa8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xaa8c));
        // A6 00B4
        gbc.setState(0x3220, 0xe5dd, 0x6780, 0x13be, 0x9c91, 0xecbf, 0x0, 0x0);
        gbc.writeMem(0x3220, { 0xa6 });
        gbc.writeMem(0xecbf, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe5dd, gbc.sp());
        EXPECT(0x3221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xecbf));
        // A6 00B5
        gbc.setState(0x100d, 0xc0df, 0x4ca0, 0x59d6, 0x9492, 0x7f4c, 0x1, 0x0);
        gbc.writeMem(0x100d, { 0xa6 });
        gbc.writeMem(0x7f4c, { 0xc3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc0df, gbc.sp());
        EXPECT(0x100e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00B6
        gbc.setState(0x8727, 0xce2b, 0x3a90, 0xd1db, 0x965d, 0xe40a, 0x1, 0x1);
        gbc.writeMem(0x8727, { 0xa6 });
        gbc.writeMem(0xe40a, { 0xda });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xce2b, gbc.sp());
        EXPECT(0x8728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8727));
        EXPECT(0xda, gbc.readMem(0xe40a));
        // A6 00B8
        gbc.setState(0xe26d, 0x93f1, 0xb780, 0x9b5f, 0x7a18, 0xe7ab, 0x1, 0x0);
        gbc.writeMem(0xe26d, { 0xa6 });
        gbc.writeMem(0xe7ab, { 0x1e });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x93f1, gbc.sp());
        EXPECT(0xe26e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe26d));
        EXPECT(0x1e, gbc.readMem(0xe7ab));
        // A6 00B9
        gbc.setState(0x5ba1, 0x3ad0, 0xbf60, 0xd73d, 0xb4e6, 0x94e8, 0x0, 0x1);
        gbc.writeMem(0x5ba1, { 0xa6 });
        gbc.writeMem(0x94e8, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3ad0, gbc.sp());
        EXPECT(0x5ba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x94e8));
        // A6 00BA
        gbc.setState(0x5337, 0xf650, 0x70a0, 0xa108, 0x10c, 0xb668, 0x1, 0x0);
        gbc.writeMem(0x5337, { 0xa6 });
        gbc.writeMem(0xb668, { 0xfa });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf650, gbc.sp());
        EXPECT(0x5338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb668));
        // A6 00BB
        gbc.setState(0xc1ea, 0x50ca, 0x4170, 0xaced, 0x436, 0x98a7, 0x0, 0x1);
        gbc.writeMem(0x98a7, { 0x5e });
        gbc.writeMem(0xc1ea, { 0xa6 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x50ca, gbc.sp());
        EXPECT(0xc1eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x98a7));
        EXPECT(0xa6, gbc.readMem(0xc1ea));
        // A6 00BC
        gbc.setState(0x8904, 0xecd7, 0x1730, 0x9bd5, 0x6c31, 0x7203, 0x1, 0x0);
        gbc.writeMem(0x7203, { 0x66 });
        gbc.writeMem(0x8904, { 0xa6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xecd7, gbc.sp());
        EXPECT(0x8905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8904));
        // A6 00BD
        gbc.setState(0xc1f, 0x3da5, 0xf760, 0x249c, 0xea33, 0x62c4, 0x0, 0x1);
        gbc.writeMem(0xc1f, { 0xa6 });
        gbc.writeMem(0x62c4, { 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3da5, gbc.sp());
        EXPECT(0xc20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00BF
        gbc.setState(0x4944, 0x79d, 0xb190, 0x5f45, 0x6496, 0xe70e, 0x0, 0x0);
        gbc.writeMem(0x4944, { 0xa6 });
        gbc.writeMem(0xe70e, { 0x68 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x79d, gbc.sp());
        EXPECT(0x4945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe70e));
        // A6 00C0
        gbc.setState(0x70ed, 0x1a9d, 0x1e10, 0x2e01, 0xf6a2, 0x4fb3, 0x1, 0x0);
        gbc.writeMem(0x4fb3, { 0xd0 });
        gbc.writeMem(0x70ed, { 0xa6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1a9d, gbc.sp());
        EXPECT(0x70ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00C3
        gbc.setState(0xd918, 0x138d, 0xce90, 0x7a24, 0x4c7d, 0x7be9, 0x0, 0x1);
        gbc.writeMem(0x7be9, { 0x16 });
        gbc.writeMem(0xd918, { 0xa6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x138d, gbc.sp());
        EXPECT(0xd919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd918));
        // A6 00C4
        gbc.setState(0x3fec, 0xbc9a, 0x9b40, 0x3f68, 0x9142, 0xbceb, 0x0, 0x0);
        gbc.writeMem(0x3fec, { 0xa6 });
        gbc.writeMem(0xbceb, { 0xd2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbc9a, gbc.sp());
        EXPECT(0x3fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xbceb));
        // A6 00C5
        gbc.setState(0x60e0, 0xa4d4, 0xb9e0, 0xe666, 0xa5ac, 0x1c0a, 0x1, 0x0);
        gbc.writeMem(0x1c0a, { 0x51 });
        gbc.writeMem(0x60e0, { 0xa6 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa4d4, gbc.sp());
        EXPECT(0x60e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00C6
        gbc.setState(0x79de, 0x8aea, 0x91b0, 0xf529, 0xfb54, 0x710d, 0x0, 0x1);
        gbc.writeMem(0x710d, { 0x94 });
        gbc.writeMem(0x79de, { 0xa6 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8aea, gbc.sp());
        EXPECT(0x79df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00C7
        gbc.setState(0xcca3, 0x5ac6, 0xc600, 0x66e2, 0x356b, 0x753f, 0x0, 0x0);
        gbc.writeMem(0x753f, { 0xe7 });
        gbc.writeMem(0xcca3, { 0xa6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5ac6, gbc.sp());
        EXPECT(0xcca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xcca3));
        // A6 00C8
        gbc.setState(0xbf0e, 0x208a, 0xb590, 0x6c58, 0x13be, 0x666e, 0x1, 0x0);
        gbc.writeMem(0x666e, { 0xe8 });
        gbc.writeMem(0xbf0e, { 0xa6 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x208a, gbc.sp());
        EXPECT(0xbf0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbf0e));
        // A6 00C9
        gbc.setState(0xe88, 0x25e, 0xe9f0, 0x60b2, 0x5f29, 0xa38b, 0x1, 0x1);
        gbc.writeMem(0xe88, { 0xa6 });
        gbc.writeMem(0xa38b, { 0xdc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x25e, gbc.sp());
        EXPECT(0xe89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xa38b));
        // A6 00CA
        gbc.setState(0x7b97, 0xb906, 0xfa60, 0xb4e, 0xbc74, 0x9554, 0x1, 0x1);
        gbc.writeMem(0x7b97, { 0xa6 });
        gbc.writeMem(0x9554, { 0x95 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb906, gbc.sp());
        EXPECT(0x7b98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9554));
        // A6 00CB
        gbc.setState(0x3b62, 0x1ecf, 0x5d00, 0x669a, 0xf6ae, 0x4bcd, 0x0, 0x1);
        gbc.writeMem(0x3b62, { 0xa6 });
        gbc.writeMem(0x4bcd, { 0xf5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1ecf, gbc.sp());
        EXPECT(0x3b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00CD
        gbc.setState(0x81c6, 0xe9e4, 0xfd0, 0xdac0, 0x76f4, 0xaf67, 0x0, 0x0);
        gbc.writeMem(0x81c6, { 0xa6 });
        gbc.writeMem(0xaf67, { 0x15 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe9e4, gbc.sp());
        EXPECT(0x81c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x81c6));
        EXPECT(0x15, gbc.readMem(0xaf67));
        // A6 00CE
        gbc.setState(0xc6ee, 0x7c44, 0x8770, 0x8691, 0x1f55, 0x52f9, 0x1, 0x1);
        gbc.writeMem(0x52f9, { 0xef });
        gbc.writeMem(0xc6ee, { 0xa6 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7c44, gbc.sp());
        EXPECT(0xc6ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc6ee));
        // A6 00CF
        gbc.setState(0x9194, 0x284a, 0x47e0, 0x3be4, 0xc89c, 0x735d, 0x0, 0x1);
        gbc.writeMem(0x735d, { 0x51 });
        gbc.writeMem(0x9194, { 0xa6 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x284a, gbc.sp());
        EXPECT(0x9195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9194));
        // A6 00D0
        gbc.setState(0xcf68, 0x6ca8, 0x4460, 0x1f40, 0xd7d9, 0x1668, 0x1, 0x1);
        gbc.writeMem(0x1668, { 0x67 });
        gbc.writeMem(0xcf68, { 0xa6 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6ca8, gbc.sp());
        EXPECT(0xcf69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xcf68));
        // A6 00D1
        gbc.setState(0x387e, 0xde09, 0xac90, 0xc36c, 0x756f, 0x8dde, 0x0, 0x1);
        gbc.writeMem(0x387e, { 0xa6 });
        gbc.writeMem(0x8dde, { 0x57 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xde09, gbc.sp());
        EXPECT(0x387f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8dde));
        // A6 00D2
        gbc.setState(0x7e5b, 0x898d, 0xfe70, 0x46b1, 0x46f0, 0xf84d, 0x0, 0x1);
        gbc.writeMem(0x7e5b, { 0xa6 });
        gbc.writeMem(0xf84d, { 0x47 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x898d, gbc.sp());
        EXPECT(0x7e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xf84d));
        // A6 00D3
        gbc.setState(0x5930, 0xf20e, 0x34b0, 0x4aee, 0x1d3a, 0x39d2, 0x0, 0x0);
        gbc.writeMem(0x39d2, { 0xb2 });
        gbc.writeMem(0x5930, { 0xa6 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf20e, gbc.sp());
        EXPECT(0x5931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00D4
        gbc.setState(0xac18, 0x6232, 0xb7a0, 0xbcca, 0xd506, 0x45fd, 0x0, 0x0);
        gbc.writeMem(0x45fd, { 0x82 });
        gbc.writeMem(0xac18, { 0xa6 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6232, gbc.sp());
        EXPECT(0xac19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xac18));
        // A6 00D5
        gbc.setState(0x9eb6, 0x315b, 0x5be0, 0xb55f, 0xdbe9, 0x7bfc, 0x1, 0x0);
        gbc.writeMem(0x7bfc, { 0x37 });
        gbc.writeMem(0x9eb6, { 0xa6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x315b, gbc.sp());
        EXPECT(0x9eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9eb6));
        // A6 00D6
        gbc.setState(0x18c3, 0x9f6, 0x8580, 0x829b, 0x69a9, 0xfa17, 0x0, 0x0);
        gbc.writeMem(0x18c3, { 0xa6 });
        gbc.writeMem(0xfa17, { 0xfc });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9f6, gbc.sp());
        EXPECT(0x18c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xfa17));
        // A6 00D7
        gbc.setState(0xe374, 0xfa98, 0xdac0, 0xe08a, 0xa56, 0xe8f7, 0x1, 0x1);
        gbc.writeMem(0xe374, { 0xa6 });
        gbc.writeMem(0xe8f7, { 0x31 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfa98, gbc.sp());
        EXPECT(0xe375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe374));
        EXPECT(0x31, gbc.readMem(0xe8f7));
        // A6 00D8
        gbc.setState(0x81c7, 0x6380, 0x5d0, 0xcbd9, 0xe6da, 0xf0df, 0x0, 0x1);
        gbc.writeMem(0x81c7, { 0xa6 });
        gbc.writeMem(0xf0df, { 0xf0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6380, gbc.sp());
        EXPECT(0x81c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x81c7));
        EXPECT(0xf0, gbc.readMem(0xf0df));
        // A6 00D9
        gbc.setState(0x94be, 0x6da2, 0x33f0, 0xe951, 0x1e1c, 0x1b80, 0x1, 0x1);
        gbc.writeMem(0x1b80, { 0x86 });
        gbc.writeMem(0x94be, { 0xa6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6da2, gbc.sp());
        EXPECT(0x94bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x94be));
        // A6 00DA
        gbc.setState(0x69cf, 0xac54, 0xf050, 0xa10f, 0x4b9c, 0xbcb5, 0x1, 0x1);
        gbc.writeMem(0x69cf, { 0xa6 });
        gbc.writeMem(0xbcb5, { 0x1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xac54, gbc.sp());
        EXPECT(0x69d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xbcb5));
        // A6 00DB
        gbc.setState(0x8381, 0xcaa0, 0xa850, 0x6515, 0x87c8, 0x28cd, 0x1, 0x0);
        gbc.writeMem(0x28cd, { 0x17 });
        gbc.writeMem(0x8381, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcaa0, gbc.sp());
        EXPECT(0x8382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8381));
        // A6 00DC
        gbc.setState(0x633c, 0xc3e0, 0x8b40, 0xfec0, 0xc334, 0xec35, 0x0, 0x0);
        gbc.writeMem(0x633c, { 0xa6 });
        gbc.writeMem(0xec35, { 0xd4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc3e0, gbc.sp());
        EXPECT(0x633d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xec35));
        // A6 00DD
        gbc.setState(0x8e0b, 0x9988, 0xac80, 0xae89, 0x56b1, 0xd91f, 0x0, 0x0);
        gbc.writeMem(0x8e0b, { 0xa6 });
        gbc.writeMem(0xd91f, { 0xec });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9988, gbc.sp());
        EXPECT(0x8e0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8e0b));
        EXPECT(0xec, gbc.readMem(0xd91f));
        // A6 00DE
        gbc.setState(0x20b0, 0x8a0b, 0x5da0, 0x70b4, 0xc832, 0x5e2, 0x1, 0x0);
        gbc.writeMem(0x5e2, { 0xe1 });
        gbc.writeMem(0x20b0, { 0xa6 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8a0b, gbc.sp());
        EXPECT(0x20b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00DF
        gbc.setState(0x1c8d, 0x338d, 0x62e0, 0xb06, 0xdde9, 0xdf95, 0x1, 0x1);
        gbc.writeMem(0x1c8d, { 0xa6 });
        gbc.writeMem(0xdf95, { 0x3e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x338d, gbc.sp());
        EXPECT(0x1c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xdf95));
        // A6 00E0
        gbc.setState(0x32f2, 0xda0b, 0xcb00, 0xd61d, 0xa0ec, 0x1df, 0x0, 0x0);
        gbc.writeMem(0x1df, { 0x43 });
        gbc.writeMem(0x32f2, { 0xa6 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xda0b, gbc.sp());
        EXPECT(0x32f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00E3
        gbc.setState(0x67e3, 0x43ab, 0xf740, 0x6774, 0x7eb7, 0x317, 0x1, 0x1);
        gbc.writeMem(0x317, { 0x1c });
        gbc.writeMem(0x67e3, { 0xa6 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x43ab, gbc.sp());
        EXPECT(0x67e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00E4
        gbc.setState(0x493d, 0x6952, 0x32f0, 0xc8ce, 0x7c2b, 0xc04, 0x1, 0x1);
        gbc.writeMem(0xc04, { 0xbf });
        gbc.writeMem(0x493d, { 0xa6 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6952, gbc.sp());
        EXPECT(0x493e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00E5
        gbc.setState(0x22ac, 0x692f, 0xfee0, 0x49d8, 0xffa1, 0xc777, 0x1, 0x1);
        gbc.writeMem(0x22ac, { 0xa6 });
        gbc.writeMem(0xc777, { 0x3d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x692f, gbc.sp());
        EXPECT(0x22ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xc777));
        // A6 00E6
        gbc.setState(0xcb3e, 0xd452, 0x7060, 0xf3ea, 0xffba, 0xcab4, 0x0, 0x1);
        gbc.writeMem(0xcab4, { 0xbb });
        gbc.writeMem(0xcb3e, { 0xa6 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd452, gbc.sp());
        EXPECT(0xcb3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xcab4));
        EXPECT(0xa6, gbc.readMem(0xcb3e));
        // A6 00E7
        gbc.setState(0x16, 0x43b7, 0xc610, 0xdf4a, 0xa7c9, 0xc63, 0x1, 0x1);
        gbc.writeMem(0x16, { 0xa6 });
        gbc.writeMem(0xc63, { 0x3b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x43b7, gbc.sp());
        EXPECT(0x17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00E8
        gbc.setState(0x2df, 0xe750, 0x5940, 0xe219, 0x21f9, 0x1250, 0x0, 0x1);
        gbc.writeMem(0x2df, { 0xa6 });
        gbc.writeMem(0x1250, { 0x2b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe750, gbc.sp());
        EXPECT(0x2e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00E9
        gbc.setState(0xdbd8, 0xdd72, 0x14f0, 0x8f, 0xd859, 0x15ac, 0x1, 0x1);
        gbc.writeMem(0x15ac, { 0x4d });
        gbc.writeMem(0xdbd8, { 0xa6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xdd72, gbc.sp());
        EXPECT(0xdbd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xdbd8));
        // A6 00EA
        gbc.setState(0x8d8, 0x8c, 0xeb00, 0x82fe, 0xa233, 0x2614, 0x0, 0x0);
        gbc.writeMem(0x8d8, { 0xa6 });
        gbc.writeMem(0x2614, { 0xd });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8c, gbc.sp());
        EXPECT(0x8d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00EB
        gbc.setState(0x70b7, 0xf104, 0x8170, 0xcd6d, 0x5b6f, 0x7bff, 0x1, 0x1);
        gbc.writeMem(0x70b7, { 0xa6 });
        gbc.writeMem(0x7bff, { 0x88 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf104, gbc.sp());
        EXPECT(0x70b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00EC
        gbc.setState(0x8b2e, 0x8a8a, 0x6250, 0xec0b, 0xae53, 0x119e, 0x1, 0x0);
        gbc.writeMem(0x119e, { 0x3 });
        gbc.writeMem(0x8b2e, { 0xa6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8a8a, gbc.sp());
        EXPECT(0x8b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8b2e));
        // A6 00ED
        gbc.setState(0xcc29, 0x4cbd, 0xe5d0, 0x47a4, 0x6832, 0x85b2, 0x0, 0x0);
        gbc.writeMem(0x85b2, { 0x98 });
        gbc.writeMem(0xcc29, { 0xa6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4cbd, gbc.sp());
        EXPECT(0xcc2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x85b2));
        EXPECT(0xa6, gbc.readMem(0xcc29));
        // A6 00EE
        gbc.setState(0x3fa4, 0xc8b8, 0x3bf0, 0xa2b1, 0xf881, 0x84c1, 0x0, 0x1);
        gbc.writeMem(0x3fa4, { 0xa6 });
        gbc.writeMem(0x84c1, { 0xfb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc8b8, gbc.sp());
        EXPECT(0x3fa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0x84c1));
        // A6 00F0
        gbc.setState(0xf8b, 0x61d7, 0x4cb0, 0xb374, 0x9fdf, 0xf1c0, 0x0, 0x1);
        gbc.writeMem(0xf8b, { 0xa6 });
        gbc.writeMem(0xf1c0, { 0x7b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x61d7, gbc.sp());
        EXPECT(0xf8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xf1c0));
        // A6 00F1
        gbc.setState(0x7a2e, 0xddd, 0x2b50, 0xe50a, 0xd88c, 0x3a96, 0x1, 0x0);
        gbc.writeMem(0x3a96, { 0xfb });
        gbc.writeMem(0x7a2e, { 0xa6 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xddd, gbc.sp());
        EXPECT(0x7a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00F2
        gbc.setState(0x6db5, 0x4cec, 0xb3e0, 0xc721, 0xfe21, 0xb6a7, 0x0, 0x0);
        gbc.writeMem(0x6db5, { 0xa6 });
        gbc.writeMem(0xb6a7, { 0x8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4cec, gbc.sp());
        EXPECT(0x6db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xb6a7));
        // A6 00F3
        gbc.setState(0x258, 0x3a77, 0x7490, 0x10, 0x9c68, 0x5c28, 0x0, 0x0);
        gbc.writeMem(0x258, { 0xa6 });
        gbc.writeMem(0x5c28, { 0x3c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3a77, gbc.sp());
        EXPECT(0x259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00F4
        gbc.setState(0x446a, 0x6c34, 0x3d30, 0x6195, 0xa9cf, 0xe43f, 0x0, 0x0);
        gbc.writeMem(0x446a, { 0xa6 });
        gbc.writeMem(0xe43f, { 0x50 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6c34, gbc.sp());
        EXPECT(0x446b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe43f));
        // A6 00F5
        gbc.setState(0x78a2, 0xea94, 0x5790, 0xa62c, 0x9a57, 0xaa96, 0x0, 0x0);
        gbc.writeMem(0x78a2, { 0xa6 });
        gbc.writeMem(0xaa96, { 0xc4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xea94, gbc.sp());
        EXPECT(0x78a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xaa96));
        // A6 00F6
        gbc.setState(0x1f26, 0x5ebf, 0xa00, 0x8352, 0x71c4, 0x5f0c, 0x1, 0x1);
        gbc.writeMem(0x1f26, { 0xa6 });
        gbc.writeMem(0x5f0c, { 0x3a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5ebf, gbc.sp());
        EXPECT(0x1f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00F7
        gbc.setState(0xea5a, 0xb362, 0x7660, 0x2bd, 0xf6d3, 0x96cb, 0x1, 0x0);
        gbc.writeMem(0x96cb, { 0x5b });
        gbc.writeMem(0xea5a, { 0xa6 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb362, gbc.sp());
        EXPECT(0xea5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x96cb));
        EXPECT(0xa6, gbc.readMem(0xea5a));
        // A6 00F8
        gbc.setState(0x9ccd, 0x3043, 0xee90, 0xe496, 0x776, 0x56c8, 0x1, 0x1);
        gbc.writeMem(0x56c8, { 0x84 });
        gbc.writeMem(0x9ccd, { 0xa6 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3043, gbc.sp());
        EXPECT(0x9cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9ccd));
        // A6 00F9
        gbc.setState(0x3a61, 0xa049, 0xc790, 0xd2a5, 0x8e4b, 0xd37c, 0x1, 0x0);
        gbc.writeMem(0x3a61, { 0xa6 });
        gbc.writeMem(0xd37c, { 0x22 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa049, gbc.sp());
        EXPECT(0x3a62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xd37c));
        // A6 00FA
        gbc.setState(0xd68b, 0xa318, 0x4880, 0x324a, 0x5c7a, 0x528, 0x0, 0x0);
        gbc.writeMem(0x528, { 0xb8 });
        gbc.writeMem(0xd68b, { 0xa6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa318, gbc.sp());
        EXPECT(0xd68c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd68b));
        // A6 00FB
        gbc.setState(0xdaa8, 0xb2b5, 0xa7e0, 0xd576, 0x9113, 0x809a, 0x1, 0x0);
        gbc.writeMem(0x809a, { 0xa4 });
        gbc.writeMem(0xdaa8, { 0xa6 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb2b5, gbc.sp());
        EXPECT(0xdaa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x809a));
        EXPECT(0xa6, gbc.readMem(0xdaa8));
        // A6 00FC
        gbc.setState(0xfa3, 0x7f48, 0xfa70, 0x66a6, 0x776, 0x2cce, 0x1, 0x0);
        gbc.writeMem(0xfa3, { 0xa6 });
        gbc.writeMem(0x2cce, { 0x5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7f48, gbc.sp());
        EXPECT(0xfa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 00FD
        gbc.setState(0x753d, 0x2681, 0xb720, 0xa02, 0xa781, 0xfddd, 0x0, 0x0);
        gbc.writeMem(0x753d, { 0xa6 });
        gbc.writeMem(0xfddd, { 0xce });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2681, gbc.sp());
        EXPECT(0x753e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xfddd));
        // A6 00FE
        gbc.setState(0x5d9, 0xe526, 0xd960, 0x8800, 0x12bb, 0xe4d9, 0x0, 0x0);
        gbc.writeMem(0x5d9, { 0xa6 });
        gbc.writeMem(0xe4d9, { 0x26 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe526, gbc.sp());
        EXPECT(0x5da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe4d9));
        // A6 0100
        gbc.setState(0x93f7, 0xe106, 0xa280, 0x2bd1, 0xb7ef, 0xd50a, 0x0, 0x0);
        gbc.writeMem(0x93f7, { 0xa6 });
        gbc.writeMem(0xd50a, { 0xd5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe106, gbc.sp());
        EXPECT(0x93f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x93f7));
        EXPECT(0xd5, gbc.readMem(0xd50a));
        // A6 0101
        gbc.setState(0x62b2, 0x7a97, 0xf940, 0xef4, 0x7c2f, 0xbaf9, 0x0, 0x1);
        gbc.writeMem(0x62b2, { 0xa6 });
        gbc.writeMem(0xbaf9, { 0x52 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7a97, gbc.sp());
        EXPECT(0x62b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbaf9));
        // A6 0102
        gbc.setState(0x5d52, 0xa224, 0x3f80, 0xb78, 0xfe3c, 0xa340, 0x1, 0x1);
        gbc.writeMem(0x5d52, { 0xa6 });
        gbc.writeMem(0xa340, { 0xe2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa224, gbc.sp());
        EXPECT(0x5d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa340));
        // A6 0103
        gbc.setState(0x9ba4, 0xc13a, 0xdb20, 0x385d, 0x95d2, 0xea14, 0x1, 0x0);
        gbc.writeMem(0x9ba4, { 0xa6 });
        gbc.writeMem(0xea14, { 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc13a, gbc.sp());
        EXPECT(0x9ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9ba4));
        EXPECT(0x43, gbc.readMem(0xea14));
        // A6 0104
        gbc.setState(0x1aa6, 0x2321, 0x9e60, 0xe51c, 0x3235, 0x3a47, 0x0, 0x0);
        gbc.writeMem(0x1aa6, { 0xa6 });
        gbc.writeMem(0x3a47, { 0x33 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2321, gbc.sp());
        EXPECT(0x1aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0105
        gbc.setState(0x6b29, 0x18e8, 0xe6d0, 0xd028, 0xb34b, 0xd780, 0x1, 0x1);
        gbc.writeMem(0x6b29, { 0xa6 });
        gbc.writeMem(0xd780, { 0x86 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x18e8, gbc.sp());
        EXPECT(0x6b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd780));
        // A6 0106
        gbc.setState(0xc231, 0x8c00, 0xb5d0, 0xf9dc, 0xed53, 0x96fa, 0x1, 0x0);
        gbc.writeMem(0x96fa, { 0xf2 });
        gbc.writeMem(0xc231, { 0xa6 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8c00, gbc.sp());
        EXPECT(0xc232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x96fa));
        EXPECT(0xa6, gbc.readMem(0xc231));
        // A6 0107
        gbc.setState(0x25a4, 0xee04, 0x2e70, 0x8f4a, 0x9b4d, 0xd3af, 0x1, 0x0);
        gbc.writeMem(0x25a4, { 0xa6 });
        gbc.writeMem(0xd3af, { 0xa3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xee04, gbc.sp());
        EXPECT(0x25a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd3af));
        // A6 0108
        gbc.setState(0x6270, 0xc7ff, 0x3c00, 0x96ca, 0xcfa4, 0x47a, 0x1, 0x1);
        gbc.writeMem(0x47a, { 0xf0 });
        gbc.writeMem(0x6270, { 0xa6 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc7ff, gbc.sp());
        EXPECT(0x6271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0109
        gbc.setState(0x1b36, 0xdbe3, 0xf990, 0x86b4, 0xb03f, 0x233b, 0x0, 0x1);
        gbc.writeMem(0x1b36, { 0xa6 });
        gbc.writeMem(0x233b, { 0x8c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdbe3, gbc.sp());
        EXPECT(0x1b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 010A
        gbc.setState(0x8ce1, 0x5ec5, 0x7300, 0x499, 0x17e5, 0x1115, 0x0, 0x0);
        gbc.writeMem(0x1115, { 0x91 });
        gbc.writeMem(0x8ce1, { 0xa6 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5ec5, gbc.sp());
        EXPECT(0x8ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8ce1));
        // A6 010B
        gbc.setState(0xa6c7, 0xf5a7, 0xed10, 0x36b4, 0xfed6, 0xcec9, 0x1, 0x0);
        gbc.writeMem(0xa6c7, { 0xa6 });
        gbc.writeMem(0xcec9, { 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf5a7, gbc.sp());
        EXPECT(0xa6c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa6c7));
        EXPECT(0x40, gbc.readMem(0xcec9));
        // A6 010C
        gbc.setState(0xb7f9, 0x3529, 0x9bd0, 0xa733, 0xba0, 0x220e, 0x1, 0x1);
        gbc.writeMem(0x220e, { 0x37 });
        gbc.writeMem(0xb7f9, { 0xa6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3529, gbc.sp());
        EXPECT(0xb7fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb7f9));
        // A6 010D
        gbc.setState(0x2c65, 0xbb58, 0x9af0, 0x513c, 0xdfa3, 0x429d, 0x0, 0x1);
        gbc.writeMem(0x2c65, { 0xa6 });
        gbc.writeMem(0x429d, { 0xd0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xbb58, gbc.sp());
        EXPECT(0x2c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 010E
        gbc.setState(0x7434, 0xd6f1, 0x9bb0, 0xe390, 0x8bd5, 0xb47c, 0x0, 0x0);
        gbc.writeMem(0x7434, { 0xa6 });
        gbc.writeMem(0xb47c, { 0xd5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd6f1, gbc.sp());
        EXPECT(0x7435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb47c));
        // A6 010F
        gbc.setState(0xe97a, 0x14aa, 0x5a60, 0x8be3, 0xedbe, 0xeadc, 0x0, 0x0);
        gbc.writeMem(0xe97a, { 0xa6 });
        gbc.writeMem(0xeadc, { 0x70 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x14aa, gbc.sp());
        EXPECT(0xe97b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe97a));
        EXPECT(0x70, gbc.readMem(0xeadc));
        // A6 0110
        gbc.setState(0xdeb7, 0x40a2, 0xd910, 0xcf7d, 0x8c5, 0xa84, 0x1, 0x1);
        gbc.writeMem(0xa84, { 0xd4 });
        gbc.writeMem(0xdeb7, { 0xa6 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x40a2, gbc.sp());
        EXPECT(0xdeb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xdeb7));
        // A6 0111
        gbc.setState(0xba, 0x3e6e, 0x34b0, 0xfcb2, 0x97cf, 0x66e5, 0x0, 0x0);
        gbc.writeMem(0xba, { 0xa6 });
        gbc.writeMem(0x66e5, { 0x49 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3e6e, gbc.sp());
        EXPECT(0xbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0112
        gbc.setState(0xdae3, 0xfb31, 0x5260, 0xd245, 0x29ba, 0x4e45, 0x0, 0x0);
        gbc.writeMem(0x4e45, { 0x60 });
        gbc.writeMem(0xdae3, { 0xa6 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfb31, gbc.sp());
        EXPECT(0xdae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xdae3));
        // A6 0113
        gbc.setState(0x3ba8, 0x7c30, 0xfa20, 0x8879, 0x7ba0, 0x65d9, 0x0, 0x0);
        gbc.writeMem(0x3ba8, { 0xa6 });
        gbc.writeMem(0x65d9, { 0x73 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7c30, gbc.sp());
        EXPECT(0x3ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0114
        gbc.setState(0xaf52, 0x7883, 0x78c0, 0xb96d, 0x64ba, 0xa934, 0x0, 0x0);
        gbc.writeMem(0xa934, { 0xb1 });
        gbc.writeMem(0xaf52, { 0xa6 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7883, gbc.sp());
        EXPECT(0xaf53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xa934));
        EXPECT(0xa6, gbc.readMem(0xaf52));
        // A6 0115
        gbc.setState(0x5b35, 0xdc18, 0x6480, 0x5ae1, 0xf1db, 0x488f, 0x0, 0x0);
        gbc.writeMem(0x488f, { 0x1b });
        gbc.writeMem(0x5b35, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xdc18, gbc.sp());
        EXPECT(0x5b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0116
        gbc.setState(0x12b, 0xbcc6, 0x3e70, 0x5439, 0xbec8, 0x6945, 0x0, 0x0);
        gbc.writeMem(0x12b, { 0xa6 });
        gbc.writeMem(0x6945, { 0xd2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbcc6, gbc.sp());
        EXPECT(0x12c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0117
        gbc.setState(0x899d, 0xf043, 0xe270, 0x9fbb, 0x8131, 0xbff4, 0x1, 0x0);
        gbc.writeMem(0x899d, { 0xa6 });
        gbc.writeMem(0xbff4, { 0x52 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf043, gbc.sp());
        EXPECT(0x899e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x899d));
        EXPECT(0x52, gbc.readMem(0xbff4));
        // A6 0118
        gbc.setState(0xc080, 0x88aa, 0xad00, 0x4a53, 0x4010, 0x3321, 0x0, 0x1);
        gbc.writeMem(0x3321, { 0xab });
        gbc.writeMem(0xc080, { 0xa6 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x88aa, gbc.sp());
        EXPECT(0xc081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc080));
        // A6 0119
        gbc.setState(0x1298, 0xd3a0, 0xea10, 0xca61, 0x7472, 0x1463, 0x0, 0x0);
        gbc.writeMem(0x1298, { 0xa6 });
        gbc.writeMem(0x1463, { 0xf });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd3a0, gbc.sp());
        EXPECT(0x1299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 011A
        gbc.setState(0x2548, 0x7739, 0xc4b0, 0xe777, 0xa1ce, 0xcce1, 0x0, 0x1);
        gbc.writeMem(0x2548, { 0xa6 });
        gbc.writeMem(0xcce1, { 0x70 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7739, gbc.sp());
        EXPECT(0x2549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xcce1));
        // A6 011B
        gbc.setState(0x45b4, 0xb3c, 0xa270, 0x576e, 0x6c1, 0x153b, 0x0, 0x0);
        gbc.writeMem(0x153b, { 0xc4 });
        gbc.writeMem(0x45b4, { 0xa6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb3c, gbc.sp());
        EXPECT(0x45b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 011C
        gbc.setState(0xabd7, 0x92f2, 0x1fe0, 0xfcea, 0xdc3d, 0xa5ca, 0x1, 0x1);
        gbc.writeMem(0xa5ca, { 0xc5 });
        gbc.writeMem(0xabd7, { 0xa6 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x92f2, gbc.sp());
        EXPECT(0xabd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa5ca));
        EXPECT(0xa6, gbc.readMem(0xabd7));
        // A6 011D
        gbc.setState(0x1f75, 0xdceb, 0xda80, 0xfba3, 0x7400, 0xbed7, 0x0, 0x1);
        gbc.writeMem(0x1f75, { 0xa6 });
        gbc.writeMem(0xbed7, { 0xd2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xdceb, gbc.sp());
        EXPECT(0x1f76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xbed7));
        // A6 011E
        gbc.setState(0xda5, 0xe42e, 0xa290, 0x80c3, 0x85ac, 0xa773, 0x1, 0x0);
        gbc.writeMem(0xda5, { 0xa6 });
        gbc.writeMem(0xa773, { 0x4b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe42e, gbc.sp());
        EXPECT(0xda6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa773));
        // A6 011F
        gbc.setState(0xbcda, 0x9afc, 0x93e0, 0x8271, 0x2312, 0x993f, 0x0, 0x1);
        gbc.writeMem(0x993f, { 0xba });
        gbc.writeMem(0xbcda, { 0xa6 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9afc, gbc.sp());
        EXPECT(0xbcdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x993f));
        EXPECT(0xa6, gbc.readMem(0xbcda));
        // A6 0120
        gbc.setState(0xad0b, 0x7391, 0xd600, 0x52eb, 0xd9bc, 0xc9ce, 0x0, 0x1);
        gbc.writeMem(0xad0b, { 0xa6 });
        gbc.writeMem(0xc9ce, { 0xdd });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7391, gbc.sp());
        EXPECT(0xad0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xad0b));
        EXPECT(0xdd, gbc.readMem(0xc9ce));
        // A6 0121
        gbc.setState(0x590e, 0x6f12, 0xde00, 0xacbb, 0x7b18, 0x6e8e, 0x1, 0x1);
        gbc.writeMem(0x590e, { 0xa6 });
        gbc.writeMem(0x6e8e, { 0xfa });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6f12, gbc.sp());
        EXPECT(0x590f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0122
        gbc.setState(0x17b, 0x6f87, 0x5c30, 0xdab4, 0xce8e, 0xdbd8, 0x0, 0x0);
        gbc.writeMem(0x17b, { 0xa6 });
        gbc.writeMem(0xdbd8, { 0x58 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6f87, gbc.sp());
        EXPECT(0x17c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xdbd8));
        // A6 0123
        gbc.setState(0x779e, 0x6c1f, 0x9040, 0xc482, 0x874e, 0x56c4, 0x0, 0x0);
        gbc.writeMem(0x56c4, { 0xe9 });
        gbc.writeMem(0x779e, { 0xa6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6c1f, gbc.sp());
        EXPECT(0x779f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0124
        gbc.setState(0xb12a, 0x5671, 0xd970, 0x867f, 0xbd64, 0x803b, 0x0, 0x0);
        gbc.writeMem(0x803b, { 0x68 });
        gbc.writeMem(0xb12a, { 0xa6 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5671, gbc.sp());
        EXPECT(0xb12b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x803b));
        EXPECT(0xa6, gbc.readMem(0xb12a));
        // A6 0125
        gbc.setState(0xc03e, 0xb149, 0x9970, 0xeaaf, 0x11df, 0xa0de, 0x0, 0x1);
        gbc.writeMem(0xa0de, { 0x1b });
        gbc.writeMem(0xc03e, { 0xa6 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb149, gbc.sp());
        EXPECT(0xc03f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xa0de));
        EXPECT(0xa6, gbc.readMem(0xc03e));
        // A6 0126
        gbc.setState(0x697f, 0x706e, 0x43c0, 0x109, 0xd42e, 0x3daf, 0x0, 0x1);
        gbc.writeMem(0x3daf, { 0x2c });
        gbc.writeMem(0x697f, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x706e, gbc.sp());
        EXPECT(0x6980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0127
        gbc.setState(0x6283, 0xb6cd, 0xf130, 0xc33f, 0x73c3, 0x4234, 0x1, 0x0);
        gbc.writeMem(0x4234, { 0x6c });
        gbc.writeMem(0x6283, { 0xa6 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb6cd, gbc.sp());
        EXPECT(0x6284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0128
        gbc.setState(0x5ba8, 0xd5a8, 0xe6e0, 0xc7e5, 0x8c8b, 0xef26, 0x0, 0x1);
        gbc.writeMem(0x5ba8, { 0xa6 });
        gbc.writeMem(0xef26, { 0xfe });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd5a8, gbc.sp());
        EXPECT(0x5ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xef26));
        // A6 0129
        gbc.setState(0x75f, 0x3cec, 0x6ea0, 0x3a09, 0x5fec, 0xb2f2, 0x1, 0x1);
        gbc.writeMem(0x75f, { 0xa6 });
        gbc.writeMem(0xb2f2, { 0x37 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3cec, gbc.sp());
        EXPECT(0x760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb2f2));
        // A6 012A
        gbc.setState(0xe80d, 0xbbba, 0x3380, 0x68fa, 0x5102, 0xbef9, 0x0, 0x0);
        gbc.writeMem(0xbef9, { 0xfe });
        gbc.writeMem(0xe80d, { 0xa6 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbbba, gbc.sp());
        EXPECT(0xe80e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbef9));
        EXPECT(0xa6, gbc.readMem(0xe80d));
        // A6 012B
        gbc.setState(0xc60c, 0xc8b9, 0xa0a0, 0xf2ad, 0xfced, 0x32b3, 0x1, 0x1);
        gbc.writeMem(0x32b3, { 0xcb });
        gbc.writeMem(0xc60c, { 0xa6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc8b9, gbc.sp());
        EXPECT(0xc60d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc60c));
        // A6 012C
        gbc.setState(0x3bd3, 0x880f, 0xafd0, 0x7b31, 0xe5, 0x4230, 0x1, 0x0);
        gbc.writeMem(0x3bd3, { 0xa6 });
        gbc.writeMem(0x4230, { 0x3d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x880f, gbc.sp());
        EXPECT(0x3bd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 012E
        gbc.setState(0x4d81, 0x5ad0, 0x90d0, 0x39cc, 0xc146, 0x9d6c, 0x0, 0x1);
        gbc.writeMem(0x4d81, { 0xa6 });
        gbc.writeMem(0x9d6c, { 0x8b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5ad0, gbc.sp());
        EXPECT(0x4d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x9d6c));
        // A6 012F
        gbc.setState(0x3583, 0x27bb, 0xdcb0, 0x138f, 0x37d, 0xbb1, 0x1, 0x1);
        gbc.writeMem(0xbb1, { 0x1a });
        gbc.writeMem(0x3583, { 0xa6 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x27bb, gbc.sp());
        EXPECT(0x3584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0130
        gbc.setState(0xec91, 0x6722, 0xdc90, 0x8dc6, 0x827a, 0x54f5, 0x0, 0x1);
        gbc.writeMem(0x54f5, { 0x35 });
        gbc.writeMem(0xec91, { 0xa6 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6722, gbc.sp());
        EXPECT(0xec92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xec91));
        // A6 0131
        gbc.setState(0x413b, 0xbbbe, 0x61a0, 0x106d, 0x943c, 0x5dd3, 0x1, 0x0);
        gbc.writeMem(0x413b, { 0xa6 });
        gbc.writeMem(0x5dd3, { 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbbbe, gbc.sp());
        EXPECT(0x413c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0132
        gbc.setState(0x2ca3, 0x96df, 0x4790, 0xe1d2, 0x9679, 0x9ce1, 0x0, 0x1);
        gbc.writeMem(0x2ca3, { 0xa6 });
        gbc.writeMem(0x9ce1, { 0x3a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x96df, gbc.sp());
        EXPECT(0x2ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x9ce1));
        // A6 0133
        gbc.setState(0x4a71, 0xf02, 0x5c80, 0x6464, 0xf25b, 0xd275, 0x0, 0x1);
        gbc.writeMem(0x4a71, { 0xa6 });
        gbc.writeMem(0xd275, { 0xb9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf02, gbc.sp());
        EXPECT(0x4a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd275));
        // A6 0134
        gbc.setState(0x935e, 0xfa1b, 0x39a0, 0xe7ce, 0xfff, 0xaf92, 0x0, 0x0);
        gbc.writeMem(0x935e, { 0xa6 });
        gbc.writeMem(0xaf92, { 0xad });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfa1b, gbc.sp());
        EXPECT(0x935f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x935e));
        EXPECT(0xad, gbc.readMem(0xaf92));
        // A6 0135
        gbc.setState(0x6c25, 0xbe1d, 0x8750, 0xc30a, 0x3109, 0xd77c, 0x1, 0x0);
        gbc.writeMem(0x6c25, { 0xa6 });
        gbc.writeMem(0xd77c, { 0xb3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbe1d, gbc.sp());
        EXPECT(0x6c26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd77c));
        // A6 0136
        gbc.setState(0x881, 0xf3ec, 0x93e0, 0x33d4, 0x6c66, 0xfdd3, 0x1, 0x0);
        gbc.writeMem(0x881, { 0xa6 });
        gbc.writeMem(0xfdd3, { 0x37 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf3ec, gbc.sp());
        EXPECT(0x882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xfdd3));
        // A6 0137
        gbc.setState(0xcde0, 0x13a0, 0x8670, 0x5d33, 0x292f, 0x49c4, 0x0, 0x0);
        gbc.writeMem(0x49c4, { 0x28 });
        gbc.writeMem(0xcde0, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x13a0, gbc.sp());
        EXPECT(0xcde1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xcde0));
        // A6 0138
        gbc.setState(0x961e, 0xca13, 0xead0, 0x4021, 0x9d3f, 0xbbab, 0x0, 0x1);
        gbc.writeMem(0x961e, { 0xa6 });
        gbc.writeMem(0xbbab, { 0x81 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xca13, gbc.sp());
        EXPECT(0x961f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x961e));
        EXPECT(0x81, gbc.readMem(0xbbab));
        // A6 0139
        gbc.setState(0xab2d, 0x74d8, 0x81a0, 0xa450, 0x8b1f, 0x1a8d, 0x0, 0x0);
        gbc.writeMem(0x1a8d, { 0x4a });
        gbc.writeMem(0xab2d, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x74d8, gbc.sp());
        EXPECT(0xab2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xab2d));
        // A6 013A
        gbc.setState(0xced8, 0x9959, 0x44e0, 0x5533, 0x5411, 0x3b66, 0x0, 0x1);
        gbc.writeMem(0x3b66, { 0x8a });
        gbc.writeMem(0xced8, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9959, gbc.sp());
        EXPECT(0xced9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xced8));
        // A6 013B
        gbc.setState(0xd3b5, 0x49c0, 0x6b50, 0x353f, 0x9cf3, 0xb552, 0x0, 0x0);
        gbc.writeMem(0xb552, { 0xe5 });
        gbc.writeMem(0xd3b5, { 0xa6 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x49c0, gbc.sp());
        EXPECT(0xd3b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xb552));
        EXPECT(0xa6, gbc.readMem(0xd3b5));
        // A6 013C
        gbc.setState(0xc337, 0x25d4, 0xc550, 0x5a55, 0x82f8, 0x48b9, 0x0, 0x1);
        gbc.writeMem(0x48b9, { 0x66 });
        gbc.writeMem(0xc337, { 0xa6 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x25d4, gbc.sp());
        EXPECT(0xc338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc337));
        // A6 013D
        gbc.setState(0xef34, 0xf61, 0x9cf0, 0xbd13, 0xa48d, 0x456a, 0x0, 0x0);
        gbc.writeMem(0x456a, { 0xeb });
        gbc.writeMem(0xef34, { 0xa6 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf61, gbc.sp());
        EXPECT(0xef35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xef34));
        // A6 013F
        gbc.setState(0x2a42, 0x7abd, 0x5400, 0x444f, 0x7838, 0x6237, 0x0, 0x0);
        gbc.writeMem(0x2a42, { 0xa6 });
        gbc.writeMem(0x6237, { 0x12 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7abd, gbc.sp());
        EXPECT(0x2a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0140
        gbc.setState(0xa4ce, 0xafff, 0xdef0, 0x9f2e, 0x994b, 0x7b41, 0x0, 0x1);
        gbc.writeMem(0x7b41, { 0x1d });
        gbc.writeMem(0xa4ce, { 0xa6 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xafff, gbc.sp());
        EXPECT(0xa4cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa4ce));
        // A6 0141
        gbc.setState(0xb73e, 0xb7e6, 0xe8b0, 0x595e, 0x5c83, 0x25e7, 0x0, 0x1);
        gbc.writeMem(0x25e7, { 0x94 });
        gbc.writeMem(0xb73e, { 0xa6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb7e6, gbc.sp());
        EXPECT(0xb73f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb73e));
        // A6 0142
        gbc.setState(0xee1b, 0xa7cf, 0xfd20, 0xa62e, 0x57f8, 0xc8a5, 0x0, 0x1);
        gbc.writeMem(0xc8a5, { 0xa1 });
        gbc.writeMem(0xee1b, { 0xa6 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa7cf, gbc.sp());
        EXPECT(0xee1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc8a5));
        EXPECT(0xa6, gbc.readMem(0xee1b));
        // A6 0143
        gbc.setState(0x4ddb, 0xd4d, 0x5960, 0xe435, 0xcc86, 0x6f9c, 0x1, 0x0);
        gbc.writeMem(0x4ddb, { 0xa6 });
        gbc.writeMem(0x6f9c, { 0x2d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd4d, gbc.sp());
        EXPECT(0x4ddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0144
        gbc.setState(0x2ec, 0xf439, 0x9a60, 0x7b93, 0x918b, 0x412, 0x0, 0x1);
        gbc.writeMem(0x2ec, { 0xa6 });
        gbc.writeMem(0x412, { 0x49 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf439, gbc.sp());
        EXPECT(0x2ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0145
        gbc.setState(0xe5cb, 0x4513, 0x6a80, 0x1bf5, 0xb101, 0x352e, 0x1, 0x0);
        gbc.writeMem(0x352e, { 0x3e });
        gbc.writeMem(0xe5cb, { 0xa6 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4513, gbc.sp());
        EXPECT(0xe5cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe5cb));
        // A6 0146
        gbc.setState(0x33fd, 0xd382, 0xb3b0, 0x924c, 0xc323, 0xa4ba, 0x0, 0x1);
        gbc.writeMem(0x33fd, { 0xa6 });
        gbc.writeMem(0xa4ba, { 0x73 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd382, gbc.sp());
        EXPECT(0x33fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa4ba));
        // A6 0147
        gbc.setState(0x52c2, 0x5203, 0xa100, 0x5a81, 0x40ad, 0xdd30, 0x0, 0x1);
        gbc.writeMem(0x52c2, { 0xa6 });
        gbc.writeMem(0xdd30, { 0x84 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5203, gbc.sp());
        EXPECT(0x52c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xdd30));
        // A6 0148
        gbc.setState(0x686f, 0x6a95, 0x4e80, 0xf5d6, 0x9d0c, 0xf34e, 0x1, 0x0);
        gbc.writeMem(0x686f, { 0xa6 });
        gbc.writeMem(0xf34e, { 0x86 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6a95, gbc.sp());
        EXPECT(0x6870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xf34e));
        // A6 0149
        gbc.setState(0x337f, 0x7d3d, 0xaf60, 0xdf3a, 0x5781, 0x5217, 0x1, 0x1);
        gbc.writeMem(0x337f, { 0xa6 });
        gbc.writeMem(0x5217, { 0x28 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7d3d, gbc.sp());
        EXPECT(0x3380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 014A
        gbc.setState(0x5083, 0x2ca7, 0x8e00, 0x3d96, 0x209b, 0x9617, 0x0, 0x0);
        gbc.writeMem(0x5083, { 0xa6 });
        gbc.writeMem(0x9617, { 0xa9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2ca7, gbc.sp());
        EXPECT(0x5084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x9617));
        // A6 014B
        gbc.setState(0x53c, 0xf543, 0x40c0, 0xcc1b, 0x9de0, 0xed1b, 0x1, 0x0);
        gbc.writeMem(0x53c, { 0xa6 });
        gbc.writeMem(0xed1b, { 0xfe });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf543, gbc.sp());
        EXPECT(0x53d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xed1b));
        // A6 014C
        gbc.setState(0x3388, 0xb91c, 0xecc0, 0x4bd0, 0x8406, 0x3f6a, 0x1, 0x1);
        gbc.writeMem(0x3388, { 0xa6 });
        gbc.writeMem(0x3f6a, { 0xf6 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb91c, gbc.sp());
        EXPECT(0x3389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 014D
        gbc.setState(0x7673, 0x35a7, 0xd010, 0xc1f, 0x5eea, 0xb9b6, 0x0, 0x1);
        gbc.writeMem(0x7673, { 0xa6 });
        gbc.writeMem(0xb9b6, { 0x62 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x35a7, gbc.sp());
        EXPECT(0x7674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xb9b6));
        // A6 014E
        gbc.setState(0xb8f5, 0xffb6, 0x7900, 0x8698, 0xbfad, 0xeb03, 0x0, 0x1);
        gbc.writeMem(0xb8f5, { 0xa6 });
        gbc.writeMem(0xeb03, { 0x6e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xffb6, gbc.sp());
        EXPECT(0xb8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb8f5));
        EXPECT(0x6e, gbc.readMem(0xeb03));
        // A6 014F
        gbc.setState(0xc853, 0x939b, 0xe870, 0xc7a, 0x2f6e, 0xea05, 0x0, 0x1);
        gbc.writeMem(0xc853, { 0xa6 });
        gbc.writeMem(0xea05, { 0xd });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x939b, gbc.sp());
        EXPECT(0xc854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc853));
        EXPECT(0xd, gbc.readMem(0xea05));
        // A6 0150
        gbc.setState(0xb85a, 0x47b9, 0xd630, 0x9f8c, 0x904e, 0xa609, 0x0, 0x0);
        gbc.writeMem(0xa609, { 0xe });
        gbc.writeMem(0xb85a, { 0xa6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x47b9, gbc.sp());
        EXPECT(0xb85b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa609));
        EXPECT(0xa6, gbc.readMem(0xb85a));
        // A6 0151
        gbc.setState(0xd364, 0xa11b, 0x9290, 0x4629, 0xc7b0, 0xa1e8, 0x1, 0x1);
        gbc.writeMem(0xa1e8, { 0x89 });
        gbc.writeMem(0xd364, { 0xa6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa11b, gbc.sp());
        EXPECT(0xd365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa1e8));
        EXPECT(0xa6, gbc.readMem(0xd364));
        // A6 0152
        gbc.setState(0x8d59, 0xa830, 0x2b90, 0xd8d6, 0xcff6, 0x8c6, 0x0, 0x0);
        gbc.writeMem(0x8c6, { 0x46 });
        gbc.writeMem(0x8d59, { 0xa6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa830, gbc.sp());
        EXPECT(0x8d5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8d59));
        // A6 0153
        gbc.setState(0x2e4a, 0xc822, 0x4590, 0x291c, 0xd5e6, 0x9ae1, 0x1, 0x1);
        gbc.writeMem(0x2e4a, { 0xa6 });
        gbc.writeMem(0x9ae1, { 0x64 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc822, gbc.sp());
        EXPECT(0x2e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9ae1));
        // A6 0154
        gbc.setState(0x35a2, 0x58fb, 0x9690, 0xd680, 0x1e29, 0x57d9, 0x0, 0x0);
        gbc.writeMem(0x35a2, { 0xa6 });
        gbc.writeMem(0x57d9, { 0x7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x58fb, gbc.sp());
        EXPECT(0x35a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0155
        gbc.setState(0x41d9, 0x2bd6, 0x9920, 0xfc16, 0x2dd, 0xaede, 0x1, 0x1);
        gbc.writeMem(0x41d9, { 0xa6 });
        gbc.writeMem(0xaede, { 0x9e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2bd6, gbc.sp());
        EXPECT(0x41da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xaede));
        // A6 0156
        gbc.setState(0xcc8d, 0xd2d, 0xa1d0, 0x4b1d, 0x3580, 0x57fc, 0x1, 0x1);
        gbc.writeMem(0x57fc, { 0xa5 });
        gbc.writeMem(0xcc8d, { 0xa6 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd2d, gbc.sp());
        EXPECT(0xcc8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xcc8d));
        // A6 0157
        gbc.setState(0xbd17, 0x88e9, 0xdc30, 0xbb7e, 0x75a2, 0xb27d, 0x1, 0x0);
        gbc.writeMem(0xb27d, { 0xc0 });
        gbc.writeMem(0xbd17, { 0xa6 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x88e9, gbc.sp());
        EXPECT(0xbd18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xb27d));
        EXPECT(0xa6, gbc.readMem(0xbd17));
        // A6 0158
        gbc.setState(0x9b26, 0x5e83, 0x13c0, 0x1bff, 0xab46, 0x7234, 0x1, 0x0);
        gbc.writeMem(0x7234, { 0x5f });
        gbc.writeMem(0x9b26, { 0xa6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5e83, gbc.sp());
        EXPECT(0x9b27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9b26));
        // A6 0159
        gbc.setState(0x2459, 0x16f9, 0xf860, 0xd766, 0x6ad2, 0xfb55, 0x0, 0x0);
        gbc.writeMem(0x2459, { 0xa6 });
        gbc.writeMem(0xfb55, { 0x59 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x16f9, gbc.sp());
        EXPECT(0x245a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xfb55));
        // A6 015A
        gbc.setState(0xb618, 0xd4e, 0x2a90, 0xd2bd, 0xc830, 0xdd48, 0x1, 0x0);
        gbc.writeMem(0xb618, { 0xa6 });
        gbc.writeMem(0xdd48, { 0x9c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd4e, gbc.sp());
        EXPECT(0xb619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb618));
        EXPECT(0x9c, gbc.readMem(0xdd48));
        // A6 015B
        gbc.setState(0x4c58, 0xe4e3, 0xcb30, 0x6109, 0xca02, 0xbb5f, 0x1, 0x0);
        gbc.writeMem(0x4c58, { 0xa6 });
        gbc.writeMem(0xbb5f, { 0x31 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe4e3, gbc.sp());
        EXPECT(0x4c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbb5f));
        // A6 015C
        gbc.setState(0x9a7, 0x5708, 0x56f0, 0xe27c, 0x2453, 0x3850, 0x1, 0x1);
        gbc.writeMem(0x9a7, { 0xa6 });
        gbc.writeMem(0x3850, { 0x18 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5708, gbc.sp());
        EXPECT(0x9a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 015D
        gbc.setState(0xb561, 0xc3e6, 0xd060, 0xb1be, 0x1bce, 0xf691, 0x1, 0x0);
        gbc.writeMem(0xb561, { 0xa6 });
        gbc.writeMem(0xf691, { 0x1f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc3e6, gbc.sp());
        EXPECT(0xb562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb561));
        EXPECT(0x1f, gbc.readMem(0xf691));
        // A6 015E
        gbc.setState(0x1f4b, 0x2fe7, 0x3210, 0x8bae, 0xfb2e, 0xb0bc, 0x1, 0x0);
        gbc.writeMem(0x1f4b, { 0xa6 });
        gbc.writeMem(0xb0bc, { 0x38 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2fe7, gbc.sp());
        EXPECT(0x1f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb0bc));
        // A6 015F
        gbc.setState(0x45ef, 0x2a2e, 0x2810, 0x7dba, 0xd1e8, 0x1da3, 0x0, 0x1);
        gbc.writeMem(0x1da3, { 0x61 });
        gbc.writeMem(0x45ef, { 0xa6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2a2e, gbc.sp());
        EXPECT(0x45f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0160
        gbc.setState(0x9597, 0x25ac, 0xd3f0, 0x661e, 0x58e9, 0x9c50, 0x0, 0x0);
        gbc.writeMem(0x9597, { 0xa6 });
        gbc.writeMem(0x9c50, { 0x46 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x25ac, gbc.sp());
        EXPECT(0x9598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9597));
        EXPECT(0x46, gbc.readMem(0x9c50));
        // A6 0161
        gbc.setState(0xe0aa, 0x7d37, 0xc1c0, 0x6ccf, 0x5df8, 0x8ca0, 0x1, 0x0);
        gbc.writeMem(0x8ca0, { 0xe0 });
        gbc.writeMem(0xe0aa, { 0xa6 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7d37, gbc.sp());
        EXPECT(0xe0ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8ca0));
        EXPECT(0xa6, gbc.readMem(0xe0aa));
        // A6 0162
        gbc.setState(0xa545, 0xc7ea, 0xd7c0, 0xc8a, 0x1ba6, 0xc06f, 0x0, 0x1);
        gbc.writeMem(0xa545, { 0xa6 });
        gbc.writeMem(0xc06f, { 0xf1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc7ea, gbc.sp());
        EXPECT(0xa546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa545));
        EXPECT(0xf1, gbc.readMem(0xc06f));
        // A6 0163
        gbc.setState(0x25ba, 0x3217, 0xe4d0, 0x9cae, 0x916a, 0x4aec, 0x1, 0x0);
        gbc.writeMem(0x25ba, { 0xa6 });
        gbc.writeMem(0x4aec, { 0xcf });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3217, gbc.sp());
        EXPECT(0x25bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0164
        gbc.setState(0xc5fd, 0xb6c9, 0xe3a0, 0x322a, 0xeb54, 0x29c5, 0x0, 0x0);
        gbc.writeMem(0x29c5, { 0x41 });
        gbc.writeMem(0xc5fd, { 0xa6 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb6c9, gbc.sp());
        EXPECT(0xc5fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc5fd));
        // A6 0165
        gbc.setState(0x73d9, 0xf542, 0x18a0, 0xeafd, 0x8b70, 0xe0a9, 0x1, 0x1);
        gbc.writeMem(0x73d9, { 0xa6 });
        gbc.writeMem(0xe0a9, { 0x74 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf542, gbc.sp());
        EXPECT(0x73da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xe0a9));
        // A6 0166
        gbc.setState(0xa34a, 0x7c5, 0x4a60, 0xf79e, 0xc446, 0x3d94, 0x1, 0x1);
        gbc.writeMem(0x3d94, { 0x46 });
        gbc.writeMem(0xa34a, { 0xa6 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7c5, gbc.sp());
        EXPECT(0xa34b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa34a));
        // A6 0167
        gbc.setState(0xe3ed, 0xd626, 0x1a20, 0xf286, 0x2a2a, 0xf793, 0x1, 0x1);
        gbc.writeMem(0xe3ed, { 0xa6 });
        gbc.writeMem(0xf793, { 0xae });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd626, gbc.sp());
        EXPECT(0xe3ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe3ed));
        EXPECT(0xae, gbc.readMem(0xf793));
        // A6 0168
        gbc.setState(0x5c8b, 0xbea, 0x18a0, 0xfcfa, 0x4a1c, 0xf32a, 0x0, 0x1);
        gbc.writeMem(0x5c8b, { 0xa6 });
        gbc.writeMem(0xf32a, { 0x9c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbea, gbc.sp());
        EXPECT(0x5c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xf32a));
        // A6 0169
        gbc.setState(0x3658, 0xd282, 0xfb30, 0xfa98, 0x436b, 0xfd71, 0x0, 0x0);
        gbc.writeMem(0x3658, { 0xa6 });
        gbc.writeMem(0xfd71, { 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd282, gbc.sp());
        EXPECT(0x3659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xfd71));
        // A6 016A
        gbc.setState(0xbff3, 0x813c, 0x5fc0, 0xc1c5, 0xfb8c, 0xec51, 0x0, 0x1);
        gbc.writeMem(0xbff3, { 0xa6 });
        gbc.writeMem(0xec51, { 0xd2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x813c, gbc.sp());
        EXPECT(0xbff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbff3));
        EXPECT(0xd2, gbc.readMem(0xec51));
        // A6 016B
        gbc.setState(0xd419, 0xd382, 0x8a60, 0x67f, 0x57b5, 0x186e, 0x1, 0x1);
        gbc.writeMem(0x186e, { 0x28 });
        gbc.writeMem(0xd419, { 0xa6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd382, gbc.sp());
        EXPECT(0xd41a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd419));
        // A6 016C
        gbc.setState(0x4954, 0x79e0, 0xb7c0, 0x30b1, 0xa084, 0x1c3f, 0x1, 0x0);
        gbc.writeMem(0x1c3f, { 0x69 });
        gbc.writeMem(0x4954, { 0xa6 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x79e0, gbc.sp());
        EXPECT(0x4955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 016D
        gbc.setState(0x69a0, 0xe035, 0xe1b0, 0x53d7, 0x3733, 0x2433, 0x0, 0x0);
        gbc.writeMem(0x2433, { 0x27 });
        gbc.writeMem(0x69a0, { 0xa6 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe035, gbc.sp());
        EXPECT(0x69a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 016E
        gbc.setState(0x884e, 0x97f4, 0xc170, 0x32e1, 0x6121, 0xf67b, 0x0, 0x0);
        gbc.writeMem(0x884e, { 0xa6 });
        gbc.writeMem(0xf67b, { 0xe7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x97f4, gbc.sp());
        EXPECT(0x884f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x884e));
        EXPECT(0xe7, gbc.readMem(0xf67b));
        // A6 016F
        gbc.setState(0x8db2, 0x803d, 0xab0, 0x31cc, 0xa67a, 0x8dcf, 0x0, 0x0);
        gbc.writeMem(0x8db2, { 0xa6 });
        gbc.writeMem(0x8dcf, { 0x64 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x803d, gbc.sp());
        EXPECT(0x8db3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8db2));
        EXPECT(0x64, gbc.readMem(0x8dcf));
        // A6 0170
        gbc.setState(0x26a5, 0x76a2, 0xe790, 0xa26a, 0x71d3, 0xc412, 0x0, 0x1);
        gbc.writeMem(0x26a5, { 0xa6 });
        gbc.writeMem(0xc412, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x76a2, gbc.sp());
        EXPECT(0x26a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc412));
        // A6 0171
        gbc.setState(0xc4b0, 0xd3f4, 0x430, 0x9395, 0xa2dd, 0x489a, 0x0, 0x1);
        gbc.writeMem(0x489a, { 0x4b });
        gbc.writeMem(0xc4b0, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd3f4, gbc.sp());
        EXPECT(0xc4b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc4b0));
        // A6 0172
        gbc.setState(0x39f, 0x340f, 0x3240, 0x10b7, 0xd866, 0x9f7d, 0x0, 0x0);
        gbc.writeMem(0x39f, { 0xa6 });
        gbc.writeMem(0x9f7d, { 0x7b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x340f, gbc.sp());
        EXPECT(0x3a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9f7d));
        // A6 0173
        gbc.setState(0x871a, 0xf1a9, 0x3fa0, 0x30b2, 0xa4e, 0x57be, 0x1, 0x0);
        gbc.writeMem(0x57be, { 0xde });
        gbc.writeMem(0x871a, { 0xa6 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf1a9, gbc.sp());
        EXPECT(0x871b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x871a));
        // A6 0174
        gbc.setState(0x2b3a, 0x5cbd, 0x8db0, 0xde5d, 0x20ad, 0x571f, 0x1, 0x0);
        gbc.writeMem(0x2b3a, { 0xa6 });
        gbc.writeMem(0x571f, { 0xb7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5cbd, gbc.sp());
        EXPECT(0x2b3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0175
        gbc.setState(0x690c, 0xa3e2, 0xcc50, 0xec71, 0xccb9, 0x80f9, 0x0, 0x0);
        gbc.writeMem(0x690c, { 0xa6 });
        gbc.writeMem(0x80f9, { 0x58 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa3e2, gbc.sp());
        EXPECT(0x690d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x80f9));
        // A6 0176
        gbc.setState(0x71bf, 0x141a, 0xb2b0, 0xc7d8, 0x246d, 0xfee0, 0x0, 0x1);
        gbc.writeMem(0x71bf, { 0xa6 });
        gbc.writeMem(0xfee0, { 0xaa });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x141a, gbc.sp());
        EXPECT(0x71c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xfee0));
        // A6 0177
        gbc.setState(0xc1ee, 0x6aaf, 0xa570, 0x98d6, 0x733e, 0xf308, 0x0, 0x1);
        gbc.writeMem(0xc1ee, { 0xa6 });
        gbc.writeMem(0xf308, { 0x4f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6aaf, gbc.sp());
        EXPECT(0xc1ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc1ee));
        EXPECT(0x4f, gbc.readMem(0xf308));
        // A6 0178
        gbc.setState(0xda7b, 0xcef7, 0x9fc0, 0x5b6a, 0xcb1c, 0x9197, 0x0, 0x1);
        gbc.writeMem(0x9197, { 0xb4 });
        gbc.writeMem(0xda7b, { 0xa6 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xcef7, gbc.sp());
        EXPECT(0xda7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x9197));
        EXPECT(0xa6, gbc.readMem(0xda7b));
        // A6 0179
        gbc.setState(0x42a3, 0x3bd9, 0x4280, 0xee05, 0x8092, 0xda57, 0x0, 0x1);
        gbc.writeMem(0x42a3, { 0xa6 });
        gbc.writeMem(0xda57, { 0xc2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3bd9, gbc.sp());
        EXPECT(0x42a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xda57));
        // A6 017A
        gbc.setState(0x9c03, 0x40aa, 0x56c0, 0x9518, 0xc413, 0xbe7d, 0x1, 0x1);
        gbc.writeMem(0x9c03, { 0xa6 });
        gbc.writeMem(0xbe7d, { 0x8b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x40aa, gbc.sp());
        EXPECT(0x9c04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9c03));
        EXPECT(0x8b, gbc.readMem(0xbe7d));
        // A6 017B
        gbc.setState(0x7e2f, 0x7b36, 0x1640, 0x3da1, 0xc7b4, 0x7715, 0x0, 0x1);
        gbc.writeMem(0x7715, { 0xf2 });
        gbc.writeMem(0x7e2f, { 0xa6 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7b36, gbc.sp());
        EXPECT(0x7e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 017C
        gbc.setState(0xdb19, 0x3408, 0xaa00, 0x96a7, 0x760, 0x6b92, 0x0, 0x0);
        gbc.writeMem(0x6b92, { 0x5a });
        gbc.writeMem(0xdb19, { 0xa6 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3408, gbc.sp());
        EXPECT(0xdb1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xdb19));
        // A6 017D
        gbc.setState(0x4587, 0x9cf7, 0x4260, 0x1c14, 0x752f, 0xa892, 0x0, 0x1);
        gbc.writeMem(0x4587, { 0xa6 });
        gbc.writeMem(0xa892, { 0x5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9cf7, gbc.sp());
        EXPECT(0x4588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa892));
        // A6 017E
        gbc.setState(0xa5ab, 0x38b, 0xc290, 0x84c9, 0x5ac8, 0xe547, 0x0, 0x1);
        gbc.writeMem(0xa5ab, { 0xa6 });
        gbc.writeMem(0xe547, { 0xb2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x38b, gbc.sp());
        EXPECT(0xa5ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa5ab));
        EXPECT(0xb2, gbc.readMem(0xe547));
        // A6 017F
        gbc.setState(0x3350, 0xe229, 0xc00, 0xf2d0, 0xa1b, 0x3844, 0x1, 0x0);
        gbc.writeMem(0x3350, { 0xa6 });
        gbc.writeMem(0x3844, { 0x76 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe229, gbc.sp());
        EXPECT(0x3351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0180
        gbc.setState(0x643f, 0x59b6, 0x38e0, 0x88d9, 0xfa6e, 0x59d7, 0x1, 0x1);
        gbc.writeMem(0x59d7, { 0xa6 });
        gbc.writeMem(0x643f, { 0xa6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x59b6, gbc.sp());
        EXPECT(0x6440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0181
        gbc.setState(0xde52, 0x860d, 0x6f80, 0x559b, 0x405a, 0xe875, 0x0, 0x1);
        gbc.writeMem(0xde52, { 0xa6 });
        gbc.writeMem(0xe875, { 0xb6 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x860d, gbc.sp());
        EXPECT(0xde53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xde52));
        EXPECT(0xb6, gbc.readMem(0xe875));
        // A6 0182
        gbc.setState(0xf6d, 0xd423, 0xdc30, 0xffc8, 0xd13f, 0x11ef, 0x0, 0x0);
        gbc.writeMem(0xf6d, { 0xa6 });
        gbc.writeMem(0x11ef, { 0xe3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd423, gbc.sp());
        EXPECT(0xf6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0183
        gbc.setState(0x40a5, 0xa100, 0x61e0, 0x248c, 0x84bc, 0xcdad, 0x1, 0x0);
        gbc.writeMem(0x40a5, { 0xa6 });
        gbc.writeMem(0xcdad, { 0x4c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa100, gbc.sp());
        EXPECT(0x40a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcdad));
        // A6 0184
        gbc.setState(0x5f99, 0x4fcb, 0xbac0, 0xfab4, 0xf567, 0xd242, 0x0, 0x0);
        gbc.writeMem(0x5f99, { 0xa6 });
        gbc.writeMem(0xd242, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4fcb, gbc.sp());
        EXPECT(0x5f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd242));
        // A6 0185
        gbc.setState(0x8c5, 0x6422, 0xb00, 0x3c0a, 0xd0b, 0xa9ac, 0x1, 0x0);
        gbc.writeMem(0x8c5, { 0xa6 });
        gbc.writeMem(0xa9ac, { 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6422, gbc.sp());
        EXPECT(0x8c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xa9ac));
        // A6 0186
        gbc.setState(0xaaf5, 0x1536, 0x2520, 0x4058, 0x2ad6, 0x42, 0x0, 0x0);
        gbc.writeMem(0x42, { 0x67 });
        gbc.writeMem(0xaaf5, { 0xa6 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1536, gbc.sp());
        EXPECT(0xaaf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xaaf5));
        // A6 0188
        gbc.setState(0xb184, 0x2330, 0x2390, 0x35bc, 0x2232, 0x2218, 0x1, 0x1);
        gbc.writeMem(0x2218, { 0x8d });
        gbc.writeMem(0xb184, { 0xa6 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2330, gbc.sp());
        EXPECT(0xb185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb184));
        // A6 0189
        gbc.setState(0x1a0c, 0x371e, 0x6300, 0x3da4, 0x103e, 0xbb62, 0x1, 0x1);
        gbc.writeMem(0x1a0c, { 0xa6 });
        gbc.writeMem(0xbb62, { 0x2a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x371e, gbc.sp());
        EXPECT(0x1a0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xbb62));
        // A6 018A
        gbc.setState(0x73ae, 0x997, 0xd110, 0xe785, 0x12fa, 0xef14, 0x0, 0x0);
        gbc.writeMem(0x73ae, { 0xa6 });
        gbc.writeMem(0xef14, { 0xf3 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x997, gbc.sp());
        EXPECT(0x73af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xef14));
        // A6 018B
        gbc.setState(0x726d, 0xd622, 0x12a0, 0x5c77, 0xaa97, 0xc9df, 0x0, 0x1);
        gbc.writeMem(0x726d, { 0xa6 });
        gbc.writeMem(0xc9df, { 0xbf });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd622, gbc.sp());
        EXPECT(0x726e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc9df));
        // A6 018C
        gbc.setState(0x40bf, 0x1bdb, 0xc0a0, 0xa01f, 0x4db0, 0x2eb1, 0x1, 0x1);
        gbc.writeMem(0x2eb1, { 0x8a });
        gbc.writeMem(0x40bf, { 0xa6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1bdb, gbc.sp());
        EXPECT(0x40c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 018D
        gbc.setState(0x9914, 0xb587, 0x3270, 0xec78, 0x7f07, 0x1a1a, 0x1, 0x1);
        gbc.writeMem(0x1a1a, { 0x53 });
        gbc.writeMem(0x9914, { 0xa6 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb587, gbc.sp());
        EXPECT(0x9915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9914));
        // A6 018E
        gbc.setState(0x5741, 0x2e8c, 0x1b40, 0xe761, 0x752e, 0x6c2a, 0x0, 0x0);
        gbc.writeMem(0x5741, { 0xa6 });
        gbc.writeMem(0x6c2a, { 0x8b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2e8c, gbc.sp());
        EXPECT(0x5742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 018F
        gbc.setState(0x4ef1, 0x9718, 0x6220, 0xeb27, 0xf4c5, 0xf4be, 0x1, 0x0);
        gbc.writeMem(0x4ef1, { 0xa6 });
        gbc.writeMem(0xf4be, { 0x85 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9718, gbc.sp());
        EXPECT(0x4ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xf4be));
        // A6 0190
        gbc.setState(0x2959, 0x2886, 0xc180, 0xd96c, 0xe59e, 0xf045, 0x0, 0x1);
        gbc.writeMem(0x2959, { 0xa6 });
        gbc.writeMem(0xf045, { 0xdd });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2886, gbc.sp());
        EXPECT(0x295a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xf045));
        // A6 0191
        gbc.setState(0x322f, 0x8c0f, 0xa440, 0x52d4, 0x33ef, 0x2aa1, 0x0, 0x0);
        gbc.writeMem(0x2aa1, { 0x25 });
        gbc.writeMem(0x322f, { 0xa6 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8c0f, gbc.sp());
        EXPECT(0x3230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0192
        gbc.setState(0x9a06, 0xb408, 0xdbf0, 0x8b3b, 0x5b5b, 0x2e1a, 0x0, 0x0);
        gbc.writeMem(0x2e1a, { 0xc });
        gbc.writeMem(0x9a06, { 0xa6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb408, gbc.sp());
        EXPECT(0x9a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9a06));
        // A6 0193
        gbc.setState(0xa4c7, 0x36e2, 0xa480, 0xe620, 0x660b, 0x82b5, 0x1, 0x1);
        gbc.writeMem(0x82b5, { 0x57 });
        gbc.writeMem(0xa4c7, { 0xa6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x36e2, gbc.sp());
        EXPECT(0xa4c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x82b5));
        EXPECT(0xa6, gbc.readMem(0xa4c7));
        // A6 0195
        gbc.setState(0x4502, 0x8c20, 0x3230, 0x2121, 0xd8a2, 0xf0a2, 0x0, 0x0);
        gbc.writeMem(0x4502, { 0xa6 });
        gbc.writeMem(0xf0a2, { 0x18 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8c20, gbc.sp());
        EXPECT(0x4503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xf0a2));
        // A6 0196
        gbc.setState(0xc448, 0x1be0, 0x6a60, 0xcf39, 0x3329, 0x633e, 0x0, 0x0);
        gbc.writeMem(0x633e, { 0xcc });
        gbc.writeMem(0xc448, { 0xa6 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1be0, gbc.sp());
        EXPECT(0xc449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc448));
        // A6 0197
        gbc.setState(0x9296, 0xbad5, 0x8fc0, 0x587d, 0xd62a, 0x20e9, 0x1, 0x1);
        gbc.writeMem(0x20e9, { 0xff });
        gbc.writeMem(0x9296, { 0xa6 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbad5, gbc.sp());
        EXPECT(0x9297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9296));
        // A6 0198
        gbc.setState(0x5f15, 0xcf39, 0xef40, 0x7de9, 0xeb83, 0x9e64, 0x1, 0x1);
        gbc.writeMem(0x5f15, { 0xa6 });
        gbc.writeMem(0x9e64, { 0x8b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcf39, gbc.sp());
        EXPECT(0x5f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x9e64));
        // A6 019A
        gbc.setState(0xd40f, 0x2578, 0xb400, 0x67a5, 0xa54c, 0x9319, 0x0, 0x0);
        gbc.writeMem(0x9319, { 0xc9 });
        gbc.writeMem(0xd40f, { 0xa6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2578, gbc.sp());
        EXPECT(0xd410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9319));
        EXPECT(0xa6, gbc.readMem(0xd40f));
        // A6 019B
        gbc.setState(0x853b, 0x3ce4, 0x4a50, 0x1d1a, 0xc6d, 0x3ff, 0x0, 0x0);
        gbc.writeMem(0x3ff, { 0x77 });
        gbc.writeMem(0x853b, { 0xa6 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3ce4, gbc.sp());
        EXPECT(0x853c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x853b));
        // A6 019C
        gbc.setState(0xdfb8, 0x4288, 0x9820, 0x2ae9, 0xf219, 0xe1eb, 0x0, 0x1);
        gbc.writeMem(0xdfb8, { 0xa6 });
        gbc.writeMem(0xe1eb, { 0xfe });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4288, gbc.sp());
        EXPECT(0xdfb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xdfb8));
        EXPECT(0xfe, gbc.readMem(0xe1eb));
        // A6 019D
        gbc.setState(0xd763, 0x99ec, 0xfaa0, 0x5d23, 0xd8b0, 0x2b35, 0x1, 0x0);
        gbc.writeMem(0x2b35, { 0x2a });
        gbc.writeMem(0xd763, { 0xa6 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x99ec, gbc.sp());
        EXPECT(0xd764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd763));
        // A6 019E
        gbc.setState(0x6e97, 0xea90, 0x3870, 0x7cb4, 0x56dc, 0x49bb, 0x0, 0x0);
        gbc.writeMem(0x49bb, { 0x1a });
        gbc.writeMem(0x6e97, { 0xa6 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xea90, gbc.sp());
        EXPECT(0x6e98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 019F
        gbc.setState(0x3f45, 0x330e, 0x6ea0, 0x35ca, 0x5aba, 0x2264, 0x0, 0x0);
        gbc.writeMem(0x2264, { 0xe7 });
        gbc.writeMem(0x3f45, { 0xa6 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x330e, gbc.sp());
        EXPECT(0x3f46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01A0
        gbc.setState(0x6105, 0x63f8, 0x9470, 0xf066, 0xc8b9, 0x901e, 0x1, 0x1);
        gbc.writeMem(0x6105, { 0xa6 });
        gbc.writeMem(0x901e, { 0x14 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x63f8, gbc.sp());
        EXPECT(0x6106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x901e));
        // A6 01A1
        gbc.setState(0xe5c3, 0x4913, 0x10a0, 0xcbda, 0x46d6, 0xb740, 0x1, 0x0);
        gbc.writeMem(0xb740, { 0xe9 });
        gbc.writeMem(0xe5c3, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4913, gbc.sp());
        EXPECT(0xe5c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb740));
        EXPECT(0xa6, gbc.readMem(0xe5c3));
        // A6 01A2
        gbc.setState(0x74e6, 0x9f18, 0xb2b0, 0x7cdd, 0x4105, 0xc6c0, 0x1, 0x1);
        gbc.writeMem(0x74e6, { 0xa6 });
        gbc.writeMem(0xc6c0, { 0x69 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9f18, gbc.sp());
        EXPECT(0x74e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc6c0));
        // A6 01A3
        gbc.setState(0x903f, 0x8bed, 0x1250, 0x40f7, 0x756c, 0xf446, 0x1, 0x1);
        gbc.writeMem(0x903f, { 0xa6 });
        gbc.writeMem(0xf446, { 0x7d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8bed, gbc.sp());
        EXPECT(0x9040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x903f));
        EXPECT(0x7d, gbc.readMem(0xf446));
        // A6 01A4
        gbc.setState(0x75a3, 0xda2a, 0x6540, 0xa4fd, 0xce3b, 0x2788, 0x1, 0x1);
        gbc.writeMem(0x2788, { 0x7 });
        gbc.writeMem(0x75a3, { 0xa6 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xda2a, gbc.sp());
        EXPECT(0x75a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01A5
        gbc.setState(0x53f2, 0x8ebb, 0xc970, 0x5142, 0xe2e5, 0x1a2e, 0x1, 0x0);
        gbc.writeMem(0x1a2e, { 0x9e });
        gbc.writeMem(0x53f2, { 0xa6 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8ebb, gbc.sp());
        EXPECT(0x53f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01A6
        gbc.setState(0x886d, 0xfacf, 0x2ae0, 0x9100, 0xb555, 0x5f15, 0x1, 0x1);
        gbc.writeMem(0x5f15, { 0x53 });
        gbc.writeMem(0x886d, { 0xa6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfacf, gbc.sp());
        EXPECT(0x886e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x886d));
        // A6 01A7
        gbc.setState(0xbc6, 0x7e3e, 0xaef0, 0x6534, 0xa135, 0x507d, 0x1, 0x1);
        gbc.writeMem(0xbc6, { 0xa6 });
        gbc.writeMem(0x507d, { 0xd3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7e3e, gbc.sp());
        EXPECT(0xbc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01A8
        gbc.setState(0xc871, 0x5fcc, 0x1560, 0xc7e2, 0xd7ef, 0x39fc, 0x0, 0x0);
        gbc.writeMem(0x39fc, { 0x8b });
        gbc.writeMem(0xc871, { 0xa6 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5fcc, gbc.sp());
        EXPECT(0xc872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc871));
        // A6 01AA
        gbc.setState(0x8ec3, 0xe9e4, 0x2ec0, 0x184e, 0x2a92, 0x477a, 0x0, 0x1);
        gbc.writeMem(0x477a, { 0x2 });
        gbc.writeMem(0x8ec3, { 0xa6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe9e4, gbc.sp());
        EXPECT(0x8ec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8ec3));
        // A6 01AB
        gbc.setState(0x4f9e, 0xfd32, 0xe3f0, 0xea63, 0x2d57, 0x67ca, 0x0, 0x0);
        gbc.writeMem(0x4f9e, { 0xa6 });
        gbc.writeMem(0x67ca, { 0x1e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfd32, gbc.sp());
        EXPECT(0x4f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01AC
        gbc.setState(0x6f1c, 0x4715, 0x5c10, 0xa6b5, 0x2286, 0xa0b7, 0x1, 0x1);
        gbc.writeMem(0x6f1c, { 0xa6 });
        gbc.writeMem(0xa0b7, { 0x57 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4715, gbc.sp());
        EXPECT(0x6f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa0b7));
        // A6 01AD
        gbc.setState(0x1ce5, 0xd528, 0x4fe0, 0xc675, 0x6f32, 0xe00d, 0x1, 0x1);
        gbc.writeMem(0x1ce5, { 0xa6 });
        gbc.writeMem(0xe00d, { 0xb9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd528, gbc.sp());
        EXPECT(0x1ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe00d));
        // A6 01AE
        gbc.setState(0x156c, 0xb223, 0xd820, 0xfcff, 0xf4, 0xe223, 0x0, 0x0);
        gbc.writeMem(0x156c, { 0xa6 });
        gbc.writeMem(0xe223, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb223, gbc.sp());
        EXPECT(0x156d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe223));
        // A6 01AF
        gbc.setState(0xe602, 0x8eaf, 0x9e50, 0x203f, 0x749a, 0x114d, 0x0, 0x1);
        gbc.writeMem(0x114d, { 0x49 });
        gbc.writeMem(0xe602, { 0xa6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8eaf, gbc.sp());
        EXPECT(0xe603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe602));
        // A6 01B0
        gbc.setState(0xb6e, 0xb311, 0xe220, 0xcd72, 0x317d, 0xec7c, 0x0, 0x1);
        gbc.writeMem(0xb6e, { 0xa6 });
        gbc.writeMem(0xec7c, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb311, gbc.sp());
        EXPECT(0xb6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xec7c));
        // A6 01B1
        gbc.setState(0x81eb, 0xa708, 0x7870, 0xb6b9, 0x3a0, 0xabb7, 0x0, 0x1);
        gbc.writeMem(0x81eb, { 0xa6 });
        gbc.writeMem(0xabb7, { 0x79 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa708, gbc.sp());
        EXPECT(0x81ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x81eb));
        EXPECT(0x79, gbc.readMem(0xabb7));
        // A6 01B2
        gbc.setState(0x8145, 0x228b, 0x8dd0, 0x191d, 0xd0e2, 0x4ed0, 0x0, 0x0);
        gbc.writeMem(0x4ed0, { 0x25 });
        gbc.writeMem(0x8145, { 0xa6 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x228b, gbc.sp());
        EXPECT(0x8146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8145));
        // A6 01B3
        gbc.setState(0x8c4e, 0x5f28, 0xc140, 0x5994, 0xd596, 0xc72c, 0x1, 0x0);
        gbc.writeMem(0x8c4e, { 0xa6 });
        gbc.writeMem(0xc72c, { 0x23 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5f28, gbc.sp());
        EXPECT(0x8c4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8c4e));
        EXPECT(0x23, gbc.readMem(0xc72c));
        // A6 01B5
        gbc.setState(0x41d0, 0x1ad6, 0x62f0, 0x7672, 0x246f, 0x7ba1, 0x1, 0x1);
        gbc.writeMem(0x41d0, { 0xa6 });
        gbc.writeMem(0x7ba1, { 0x4c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1ad6, gbc.sp());
        EXPECT(0x41d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01B6
        gbc.setState(0xac41, 0x113f, 0xc750, 0x5f55, 0xee2e, 0xf945, 0x1, 0x1);
        gbc.writeMem(0xac41, { 0xa6 });
        gbc.writeMem(0xf945, { 0xde });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x113f, gbc.sp());
        EXPECT(0xac42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xac41));
        EXPECT(0xde, gbc.readMem(0xf945));
        // A6 01B7
        gbc.setState(0x46eb, 0xee88, 0x8050, 0x6cc, 0x3c2e, 0xfaa4, 0x0, 0x1);
        gbc.writeMem(0x46eb, { 0xa6 });
        gbc.writeMem(0xfaa4, { 0x9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xee88, gbc.sp());
        EXPECT(0x46ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xfaa4));
        // A6 01B8
        gbc.setState(0xd045, 0x9da8, 0xa920, 0x5f93, 0x3980, 0x8116, 0x0, 0x1);
        gbc.writeMem(0x8116, { 0xe0 });
        gbc.writeMem(0xd045, { 0xa6 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9da8, gbc.sp());
        EXPECT(0xd046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8116));
        EXPECT(0xa6, gbc.readMem(0xd045));
        // A6 01B9
        gbc.setState(0x18bf, 0x71fb, 0x79e0, 0x81a1, 0x8608, 0x6060, 0x0, 0x1);
        gbc.writeMem(0x18bf, { 0xa6 });
        gbc.writeMem(0x6060, { 0x52 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x71fb, gbc.sp());
        EXPECT(0x18c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01BA
        gbc.setState(0x4b9c, 0x981f, 0x560, 0x4286, 0x3b26, 0x2bfd, 0x1, 0x0);
        gbc.writeMem(0x2bfd, { 0x4e });
        gbc.writeMem(0x4b9c, { 0xa6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x981f, gbc.sp());
        EXPECT(0x4b9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01BB
        gbc.setState(0x1b6f, 0x3655, 0x24b0, 0xa1f5, 0xa96, 0x8594, 0x0, 0x1);
        gbc.writeMem(0x1b6f, { 0xa6 });
        gbc.writeMem(0x8594, { 0x64 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3655, gbc.sp());
        EXPECT(0x1b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8594));
        // A6 01BC
        gbc.setState(0x70f8, 0x844a, 0x4a60, 0x3aad, 0xa063, 0x9a22, 0x1, 0x0);
        gbc.writeMem(0x70f8, { 0xa6 });
        gbc.writeMem(0x9a22, { 0x2c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x844a, gbc.sp());
        EXPECT(0x70f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9a22));
        // A6 01BD
        gbc.setState(0x2a5, 0xcc66, 0x13d0, 0x970e, 0x9f38, 0x1826, 0x1, 0x1);
        gbc.writeMem(0x2a5, { 0xa6 });
        gbc.writeMem(0x1826, { 0x84 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcc66, gbc.sp());
        EXPECT(0x2a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01BE
        gbc.setState(0x171f, 0xdc33, 0xfdf0, 0x744f, 0x3628, 0x6b52, 0x1, 0x0);
        gbc.writeMem(0x171f, { 0xa6 });
        gbc.writeMem(0x6b52, { 0x6f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdc33, gbc.sp());
        EXPECT(0x1720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01BF
        gbc.setState(0xd6a8, 0x451f, 0x4e00, 0x96ee, 0xcdd4, 0x81ad, 0x0, 0x0);
        gbc.writeMem(0x81ad, { 0xe1 });
        gbc.writeMem(0xd6a8, { 0xa6 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x451f, gbc.sp());
        EXPECT(0xd6a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x81ad));
        EXPECT(0xa6, gbc.readMem(0xd6a8));
        // A6 01C0
        gbc.setState(0x8b31, 0x9554, 0xe230, 0x59a, 0x3b82, 0x80cb, 0x1, 0x1);
        gbc.writeMem(0x80cb, { 0x58 });
        gbc.writeMem(0x8b31, { 0xa6 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9554, gbc.sp());
        EXPECT(0x8b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x80cb));
        EXPECT(0xa6, gbc.readMem(0x8b31));
        // A6 01C1
        gbc.setState(0x5cf2, 0x6d73, 0x4f50, 0x88b6, 0xea27, 0xc547, 0x1, 0x1);
        gbc.writeMem(0x5cf2, { 0xa6 });
        gbc.writeMem(0xc547, { 0xe1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6d73, gbc.sp());
        EXPECT(0x5cf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc547));
        // A6 01C2
        gbc.setState(0xac20, 0xcff6, 0x9370, 0x2707, 0x97ca, 0xbfa, 0x1, 0x0);
        gbc.writeMem(0xbfa, { 0xcb });
        gbc.writeMem(0xac20, { 0xa6 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xcff6, gbc.sp());
        EXPECT(0xac21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xac20));
        // A6 01C3
        gbc.setState(0x3746, 0x5828, 0x4b10, 0x6c7c, 0x495c, 0xf72f, 0x1, 0x0);
        gbc.writeMem(0x3746, { 0xa6 });
        gbc.writeMem(0xf72f, { 0x4a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5828, gbc.sp());
        EXPECT(0x3747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xf72f));
        // A6 01C4
        gbc.setState(0x1173, 0x965b, 0x8e80, 0xa785, 0xed0e, 0x750b, 0x1, 0x0);
        gbc.writeMem(0x1173, { 0xa6 });
        gbc.writeMem(0x750b, { 0x19 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x965b, gbc.sp());
        EXPECT(0x1174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01C5
        gbc.setState(0x3477, 0x2a98, 0xfb30, 0x10c2, 0x72e5, 0xbbde, 0x1, 0x0);
        gbc.writeMem(0x3477, { 0xa6 });
        gbc.writeMem(0xbbde, { 0x9f });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2a98, gbc.sp());
        EXPECT(0x3478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbbde));
        // A6 01C6
        gbc.setState(0x507f, 0xa98c, 0x8e30, 0xae58, 0x8b4b, 0x1c0d, 0x1, 0x0);
        gbc.writeMem(0x1c0d, { 0x8b });
        gbc.writeMem(0x507f, { 0xa6 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa98c, gbc.sp());
        EXPECT(0x5080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01C7
        gbc.setState(0xdd6f, 0x8d9f, 0xb360, 0xc56f, 0x2815, 0xd0b7, 0x0, 0x1);
        gbc.writeMem(0xd0b7, { 0x53 });
        gbc.writeMem(0xdd6f, { 0xa6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8d9f, gbc.sp());
        EXPECT(0xdd70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd0b7));
        EXPECT(0xa6, gbc.readMem(0xdd6f));
        // A6 01C9
        gbc.setState(0x9fd1, 0xd500, 0x6430, 0x661e, 0x5105, 0xcac5, 0x0, 0x0);
        gbc.writeMem(0x9fd1, { 0xa6 });
        gbc.writeMem(0xcac5, { 0x9b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd500, gbc.sp());
        EXPECT(0x9fd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9fd1));
        EXPECT(0x9b, gbc.readMem(0xcac5));
        // A6 01CA
        gbc.setState(0xe2db, 0xe87a, 0x1390, 0x6e3f, 0x865c, 0xa45c, 0x0, 0x1);
        gbc.writeMem(0xa45c, { 0xdf });
        gbc.writeMem(0xe2db, { 0xa6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe87a, gbc.sp());
        EXPECT(0xe2dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xa45c));
        EXPECT(0xa6, gbc.readMem(0xe2db));
        // A6 01CB
        gbc.setState(0x8408, 0x11e7, 0x9d50, 0x3030, 0x3922, 0x651a, 0x1, 0x1);
        gbc.writeMem(0x651a, { 0xe0 });
        gbc.writeMem(0x8408, { 0xa6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x11e7, gbc.sp());
        EXPECT(0x8409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8408));
        // A6 01CC
        gbc.setState(0xa929, 0xed6e, 0x4e30, 0x265e, 0x18bd, 0x974b, 0x0, 0x0);
        gbc.writeMem(0x974b, { 0xb });
        gbc.writeMem(0xa929, { 0xa6 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xed6e, gbc.sp());
        EXPECT(0xa92a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x974b));
        EXPECT(0xa6, gbc.readMem(0xa929));
        // A6 01CD
        gbc.setState(0x2391, 0xaae1, 0xc3b0, 0x9960, 0xc7ce, 0xdc94, 0x1, 0x1);
        gbc.writeMem(0x2391, { 0xa6 });
        gbc.writeMem(0xdc94, { 0x3e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xaae1, gbc.sp());
        EXPECT(0x2392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xdc94));
        // A6 01CE
        gbc.setState(0xbd3, 0x9567, 0x6590, 0x5f75, 0x153f, 0x3dc1, 0x1, 0x0);
        gbc.writeMem(0xbd3, { 0xa6 });
        gbc.writeMem(0x3dc1, { 0xc7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9567, gbc.sp());
        EXPECT(0xbd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01CF
        gbc.setState(0x9873, 0xd460, 0xaf00, 0xb986, 0xbde2, 0xcef, 0x1, 0x0);
        gbc.writeMem(0xcef, { 0xa5 });
        gbc.writeMem(0x9873, { 0xa6 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd460, gbc.sp());
        EXPECT(0x9874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9873));
        // A6 01D0
        gbc.setState(0xdbe7, 0xebb4, 0xc160, 0x2396, 0x3239, 0xcf9e, 0x1, 0x0);
        gbc.writeMem(0xcf9e, { 0x60 });
        gbc.writeMem(0xdbe7, { 0xa6 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xebb4, gbc.sp());
        EXPECT(0xdbe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xcf9e));
        EXPECT(0xa6, gbc.readMem(0xdbe7));
        // A6 01D1
        gbc.setState(0x7bb2, 0xb2aa, 0x1b0, 0xfa0b, 0x761f, 0xf051, 0x1, 0x1);
        gbc.writeMem(0x7bb2, { 0xa6 });
        gbc.writeMem(0xf051, { 0x1d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb2aa, gbc.sp());
        EXPECT(0x7bb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xf051));
        // A6 01D2
        gbc.setState(0x187c, 0x7b3a, 0x2500, 0x20ef, 0xca6d, 0xd485, 0x0, 0x0);
        gbc.writeMem(0x187c, { 0xa6 });
        gbc.writeMem(0xd485, { 0x89 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7b3a, gbc.sp());
        EXPECT(0x187d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd485));
        // A6 01D3
        gbc.setState(0xcc1d, 0x6e45, 0x2460, 0x32bf, 0x1363, 0xdec8, 0x0, 0x1);
        gbc.writeMem(0xcc1d, { 0xa6 });
        gbc.writeMem(0xdec8, { 0xfb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6e45, gbc.sp());
        EXPECT(0xcc1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xcc1d));
        EXPECT(0xfb, gbc.readMem(0xdec8));
        // A6 01D4
        gbc.setState(0xde34, 0x8510, 0x4d0, 0x2450, 0x4fad, 0x63e9, 0x1, 0x0);
        gbc.writeMem(0x63e9, { 0x1b });
        gbc.writeMem(0xde34, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8510, gbc.sp());
        EXPECT(0xde35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xde34));
        // A6 01D6
        gbc.setState(0x168, 0xd25e, 0x1270, 0x3e6a, 0x53f5, 0xda74, 0x0, 0x1);
        gbc.writeMem(0x168, { 0xa6 });
        gbc.writeMem(0xda74, { 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd25e, gbc.sp());
        EXPECT(0x169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xda74));
        // A6 01D7
        gbc.setState(0xa0bd, 0xcd06, 0xe6e0, 0x29f7, 0xeea6, 0xf0e9, 0x1, 0x1);
        gbc.writeMem(0xa0bd, { 0xa6 });
        gbc.writeMem(0xf0e9, { 0x6d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcd06, gbc.sp());
        EXPECT(0xa0be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa0bd));
        EXPECT(0x6d, gbc.readMem(0xf0e9));
        // A6 01D8
        gbc.setState(0xa30b, 0x854d, 0x9340, 0x8001, 0xaa1f, 0x72c2, 0x1, 0x1);
        gbc.writeMem(0x72c2, { 0x3f });
        gbc.writeMem(0xa30b, { 0xa6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x854d, gbc.sp());
        EXPECT(0xa30c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa30b));
        // A6 01D9
        gbc.setState(0x567b, 0x6caf, 0x19d0, 0x8052, 0x9584, 0x7745, 0x0, 0x1);
        gbc.writeMem(0x567b, { 0xa6 });
        gbc.writeMem(0x7745, { 0xd5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6caf, gbc.sp());
        EXPECT(0x567c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01DA
        gbc.setState(0x16ba, 0xf295, 0xef10, 0x8d3e, 0x1cab, 0xb887, 0x0, 0x1);
        gbc.writeMem(0x16ba, { 0xa6 });
        gbc.writeMem(0xb887, { 0x57 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf295, gbc.sp());
        EXPECT(0x16bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb887));
        // A6 01DB
        gbc.setState(0xb954, 0x12ff, 0x6270, 0xaaf1, 0xc574, 0xb675, 0x1, 0x1);
        gbc.writeMem(0xb675, { 0x70 });
        gbc.writeMem(0xb954, { 0xa6 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x12ff, gbc.sp());
        EXPECT(0xb955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xb675));
        EXPECT(0xa6, gbc.readMem(0xb954));
        // A6 01DC
        gbc.setState(0x77bb, 0x718c, 0x9f40, 0x58f2, 0x35fa, 0x20d9, 0x1, 0x1);
        gbc.writeMem(0x20d9, { 0xef });
        gbc.writeMem(0x77bb, { 0xa6 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x718c, gbc.sp());
        EXPECT(0x77bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01DD
        gbc.setState(0x24d2, 0xaaa6, 0xc0d0, 0xe635, 0x5323, 0x738c, 0x0, 0x0);
        gbc.writeMem(0x24d2, { 0xa6 });
        gbc.writeMem(0x738c, { 0xcf });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xaaa6, gbc.sp());
        EXPECT(0x24d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01DE
        gbc.setState(0x6546, 0xe787, 0xe310, 0x727a, 0x133f, 0xe7f9, 0x0, 0x1);
        gbc.writeMem(0x6546, { 0xa6 });
        gbc.writeMem(0xe7f9, { 0xa7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe787, gbc.sp());
        EXPECT(0x6547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe7f9));
        // A6 01DF
        gbc.setState(0x144d, 0xbaed, 0xe000, 0x82c3, 0x9728, 0xd02f, 0x1, 0x1);
        gbc.writeMem(0x144d, { 0xa6 });
        gbc.writeMem(0xd02f, { 0x46 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbaed, gbc.sp());
        EXPECT(0x144e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xd02f));
        // A6 01E1
        gbc.setState(0x44f1, 0xed68, 0xa080, 0x7304, 0xddb7, 0x66ad, 0x0, 0x0);
        gbc.writeMem(0x44f1, { 0xa6 });
        gbc.writeMem(0x66ad, { 0xd2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xed68, gbc.sp());
        EXPECT(0x44f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01E2
        gbc.setState(0xd07c, 0xe2ed, 0xe510, 0x405b, 0xa87f, 0x238b, 0x1, 0x0);
        gbc.writeMem(0x238b, { 0x6b });
        gbc.writeMem(0xd07c, { 0xa6 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe2ed, gbc.sp());
        EXPECT(0xd07d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd07c));
        // A6 01E3
        gbc.setState(0x994, 0x9dff, 0x60b0, 0x1d83, 0xf7df, 0xc587, 0x1, 0x0);
        gbc.writeMem(0x994, { 0xa6 });
        gbc.writeMem(0xc587, { 0x5a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9dff, gbc.sp());
        EXPECT(0x995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xc587));
        // A6 01E4
        gbc.setState(0x1f8, 0x9e07, 0x61b0, 0x7e75, 0x7772, 0x68c0, 0x1, 0x1);
        gbc.writeMem(0x1f8, { 0xa6 });
        gbc.writeMem(0x68c0, { 0x37 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9e07, gbc.sp());
        EXPECT(0x1f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01E5
        gbc.setState(0x4e4e, 0x6b8a, 0x85c0, 0x778, 0xb1bb, 0xf8dc, 0x0, 0x0);
        gbc.writeMem(0x4e4e, { 0xa6 });
        gbc.writeMem(0xf8dc, { 0xd9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6b8a, gbc.sp());
        EXPECT(0x4e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xf8dc));
        // A6 01E6
        gbc.setState(0x7f95, 0x5f72, 0x63f0, 0x2424, 0xc9d1, 0x9357, 0x0, 0x1);
        gbc.writeMem(0x7f95, { 0xa6 });
        gbc.writeMem(0x9357, { 0x52 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5f72, gbc.sp());
        EXPECT(0x7f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9357));
        // A6 01E8
        gbc.setState(0xa2b2, 0x5b99, 0x3600, 0xbfa9, 0x2cdd, 0xaf0c, 0x0, 0x1);
        gbc.writeMem(0xa2b2, { 0xa6 });
        gbc.writeMem(0xaf0c, { 0x29 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5b99, gbc.sp());
        EXPECT(0xa2b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa2b2));
        EXPECT(0x29, gbc.readMem(0xaf0c));
        // A6 01E9
        gbc.setState(0x29ff, 0x5cd5, 0x7e50, 0xf47d, 0x8566, 0x7ba4, 0x1, 0x1);
        gbc.writeMem(0x29ff, { 0xa6 });
        gbc.writeMem(0x7ba4, { 0xb6 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5cd5, gbc.sp());
        EXPECT(0x2a00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01EA
        gbc.setState(0x505, 0xa5c3, 0x1eb0, 0x5f05, 0x8a4a, 0xc63b, 0x0, 0x1);
        gbc.writeMem(0x505, { 0xa6 });
        gbc.writeMem(0xc63b, { 0x42 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa5c3, gbc.sp());
        EXPECT(0x506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc63b));
        // A6 01EB
        gbc.setState(0x2799, 0x7955, 0x3d0, 0x5cc5, 0xc945, 0x3973, 0x0, 0x0);
        gbc.writeMem(0x2799, { 0xa6 });
        gbc.writeMem(0x3973, { 0xd0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7955, gbc.sp());
        EXPECT(0x279a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01EC
        gbc.setState(0x8ff2, 0x6bbb, 0x1860, 0xdbdc, 0xbcb3, 0x413c, 0x0, 0x1);
        gbc.writeMem(0x413c, { 0xde });
        gbc.writeMem(0x8ff2, { 0xa6 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6bbb, gbc.sp());
        EXPECT(0x8ff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8ff2));
        // A6 01ED
        gbc.setState(0xd8d, 0xdbe5, 0xc970, 0x8d04, 0x7fe, 0x27c, 0x0, 0x0);
        gbc.writeMem(0x27c, { 0xc7 });
        gbc.writeMem(0xd8d, { 0xa6 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdbe5, gbc.sp());
        EXPECT(0xd8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01EE
        gbc.setState(0x2a6e, 0x2d4, 0xe310, 0x3363, 0x4861, 0x5b33, 0x0, 0x1);
        gbc.writeMem(0x2a6e, { 0xa6 });
        gbc.writeMem(0x5b33, { 0xb2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2d4, gbc.sp());
        EXPECT(0x2a6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01EF
        gbc.setState(0xca28, 0x7515, 0xeed0, 0x1336, 0xe3ec, 0x91a7, 0x1, 0x1);
        gbc.writeMem(0x91a7, { 0x34 });
        gbc.writeMem(0xca28, { 0xa6 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7515, gbc.sp());
        EXPECT(0xca29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x91a7));
        EXPECT(0xa6, gbc.readMem(0xca28));
        // A6 01F0
        gbc.setState(0x37ec, 0xb2c9, 0x1310, 0x378a, 0xf5da, 0x580a, 0x0, 0x1);
        gbc.writeMem(0x37ec, { 0xa6 });
        gbc.writeMem(0x580a, { 0xfb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb2c9, gbc.sp());
        EXPECT(0x37ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01F1
        gbc.setState(0xfdd, 0x23a, 0x4180, 0x8d9a, 0x6ea7, 0x925c, 0x0, 0x1);
        gbc.writeMem(0xfdd, { 0xa6 });
        gbc.writeMem(0x925c, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x23a, gbc.sp());
        EXPECT(0xfde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x925c));
        // A6 01F2
        gbc.setState(0x5766, 0xd7ed, 0x42e0, 0x95e2, 0xfc69, 0x3148, 0x0, 0x1);
        gbc.writeMem(0x3148, { 0x29 });
        gbc.writeMem(0x5766, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd7ed, gbc.sp());
        EXPECT(0x5767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01F3
        gbc.setState(0xbf80, 0x9ea7, 0xaa50, 0xde45, 0x81e, 0xf490, 0x0, 0x0);
        gbc.writeMem(0xbf80, { 0xa6 });
        gbc.writeMem(0xf490, { 0x42 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9ea7, gbc.sp());
        EXPECT(0xbf81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbf80));
        EXPECT(0x42, gbc.readMem(0xf490));
        // A6 01F4
        gbc.setState(0x3a2e, 0x7f78, 0x28c0, 0x535f, 0x80a7, 0xbb09, 0x0, 0x1);
        gbc.writeMem(0x3a2e, { 0xa6 });
        gbc.writeMem(0xbb09, { 0x89 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7f78, gbc.sp());
        EXPECT(0x3a2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbb09));
        // A6 01F5
        gbc.setState(0x1e37, 0x993a, 0xe200, 0x54e1, 0xe374, 0x82ec, 0x0, 0x0);
        gbc.writeMem(0x1e37, { 0xa6 });
        gbc.writeMem(0x82ec, { 0x69 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x993a, gbc.sp());
        EXPECT(0x1e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x82ec));
        // A6 01F6
        gbc.setState(0xb072, 0xac73, 0x62c0, 0xbfad, 0x5096, 0x1546, 0x0, 0x1);
        gbc.writeMem(0x1546, { 0xc2 });
        gbc.writeMem(0xb072, { 0xa6 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xac73, gbc.sp());
        EXPECT(0xb073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb072));
        // A6 01F7
        gbc.setState(0xb32e, 0xe4a2, 0xdff0, 0x53c1, 0x88c8, 0x9071, 0x0, 0x0);
        gbc.writeMem(0x9071, { 0x6 });
        gbc.writeMem(0xb32e, { 0xa6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe4a2, gbc.sp());
        EXPECT(0xb32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9071));
        EXPECT(0xa6, gbc.readMem(0xb32e));
        // A6 01F8
        gbc.setState(0xb4b5, 0xab5b, 0xc7a0, 0x3fdf, 0x57c5, 0xde89, 0x1, 0x0);
        gbc.writeMem(0xb4b5, { 0xa6 });
        gbc.writeMem(0xde89, { 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xab5b, gbc.sp());
        EXPECT(0xb4b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb4b5));
        EXPECT(0x44, gbc.readMem(0xde89));
        // A6 01F9
        gbc.setState(0x7acc, 0x253c, 0xf9f0, 0xb426, 0x7fcf, 0x48e7, 0x1, 0x0);
        gbc.writeMem(0x48e7, { 0xac });
        gbc.writeMem(0x7acc, { 0xa6 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x253c, gbc.sp());
        EXPECT(0x7acd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 01FB
        gbc.setState(0x8c9b, 0x3293, 0x5130, 0x2f0c, 0x3343, 0x1ac0, 0x1, 0x0);
        gbc.writeMem(0x1ac0, { 0x94 });
        gbc.writeMem(0x8c9b, { 0xa6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3293, gbc.sp());
        EXPECT(0x8c9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8c9b));
        // A6 01FD
        gbc.setState(0xec4f, 0x85f8, 0x9890, 0xf26f, 0x22b7, 0xcbaa, 0x1, 0x1);
        gbc.writeMem(0xcbaa, { 0x15 });
        gbc.writeMem(0xec4f, { 0xa6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x85f8, gbc.sp());
        EXPECT(0xec50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcbaa));
        EXPECT(0xa6, gbc.readMem(0xec4f));
        // A6 01FE
        gbc.setState(0x33ee, 0xde65, 0xe520, 0x3fa1, 0x7997, 0xd270, 0x0, 0x0);
        gbc.writeMem(0x33ee, { 0xa6 });
        gbc.writeMem(0xd270, { 0x70 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xde65, gbc.sp());
        EXPECT(0x33ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xd270));
        // A6 01FF
        gbc.setState(0x603c, 0xaa97, 0x9a00, 0x334d, 0x8438, 0xf944, 0x0, 0x0);
        gbc.writeMem(0x603c, { 0xa6 });
        gbc.writeMem(0xf944, { 0xb5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xaa97, gbc.sp());
        EXPECT(0x603d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xf944));
        // A6 0200
        gbc.setState(0x5c01, 0xf952, 0x74d0, 0x73f2, 0xf82a, 0xcf23, 0x1, 0x0);
        gbc.writeMem(0x5c01, { 0xa6 });
        gbc.writeMem(0xcf23, { 0x18 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf952, gbc.sp());
        EXPECT(0x5c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xcf23));
        // A6 0201
        gbc.setState(0x6074, 0x89c8, 0x9940, 0xa8c9, 0x73b2, 0x3058, 0x0, 0x0);
        gbc.writeMem(0x3058, { 0x52 });
        gbc.writeMem(0x6074, { 0xa6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x89c8, gbc.sp());
        EXPECT(0x6075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0202
        gbc.setState(0xdd42, 0x63a7, 0x4d00, 0x5194, 0xd290, 0xc47a, 0x0, 0x1);
        gbc.writeMem(0xc47a, { 0xba });
        gbc.writeMem(0xdd42, { 0xa6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x63a7, gbc.sp());
        EXPECT(0xdd43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xc47a));
        EXPECT(0xa6, gbc.readMem(0xdd42));
        // A6 0203
        gbc.setState(0x2cf1, 0xe85c, 0x4480, 0x53dc, 0xa24f, 0x9d6b, 0x0, 0x0);
        gbc.writeMem(0x2cf1, { 0xa6 });
        gbc.writeMem(0x9d6b, { 0x9d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe85c, gbc.sp());
        EXPECT(0x2cf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9d6b));
        // A6 0204
        gbc.setState(0xef6e, 0x8fbf, 0x87d0, 0x1da6, 0x1dfc, 0x194, 0x1, 0x1);
        gbc.writeMem(0x194, { 0x69 });
        gbc.writeMem(0xef6e, { 0xa6 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8fbf, gbc.sp());
        EXPECT(0xef6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xef6e));
        // A6 0205
        gbc.setState(0xaafe, 0x10bf, 0x5350, 0x42f, 0xd30a, 0xd610, 0x1, 0x1);
        gbc.writeMem(0xaafe, { 0xa6 });
        gbc.writeMem(0xd610, { 0x5f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x10bf, gbc.sp());
        EXPECT(0xaaff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xaafe));
        EXPECT(0x5f, gbc.readMem(0xd610));
        // A6 0206
        gbc.setState(0x3813, 0x8fb1, 0xb010, 0xe80e, 0x3e49, 0x60a, 0x1, 0x1);
        gbc.writeMem(0x60a, { 0xf0 });
        gbc.writeMem(0x3813, { 0xa6 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8fb1, gbc.sp());
        EXPECT(0x3814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0207
        gbc.setState(0x57dc, 0x1ee8, 0x23f0, 0x7cf9, 0x1a0a, 0xebb8, 0x0, 0x1);
        gbc.writeMem(0x57dc, { 0xa6 });
        gbc.writeMem(0xebb8, { 0x75 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1ee8, gbc.sp());
        EXPECT(0x57dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xebb8));
        // A6 0208
        gbc.setState(0x9ca5, 0x800b, 0x4cb0, 0xdf32, 0x10ad, 0x6d1, 0x0, 0x0);
        gbc.writeMem(0x6d1, { 0xba });
        gbc.writeMem(0x9ca5, { 0xa6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x800b, gbc.sp());
        EXPECT(0x9ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9ca5));
        // A6 020A
        gbc.setState(0x2a7f, 0x36bd, 0x22d0, 0x7a88, 0x238, 0x4886, 0x0, 0x0);
        gbc.writeMem(0x2a7f, { 0xa6 });
        gbc.writeMem(0x4886, { 0xb7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x36bd, gbc.sp());
        EXPECT(0x2a80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 020B
        gbc.setState(0x8cec, 0xf787, 0x3cd0, 0x4aab, 0xd58b, 0x7859, 0x1, 0x1);
        gbc.writeMem(0x7859, { 0x69 });
        gbc.writeMem(0x8cec, { 0xa6 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf787, gbc.sp());
        EXPECT(0x8ced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8cec));
        // A6 020D
        gbc.setState(0x78ff, 0x92c3, 0x9e10, 0xe8bf, 0xa56a, 0x9f6, 0x0, 0x0);
        gbc.writeMem(0x9f6, { 0xc9 });
        gbc.writeMem(0x78ff, { 0xa6 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x92c3, gbc.sp());
        EXPECT(0x7900, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 020E
        gbc.setState(0x71be, 0x7f64, 0x4560, 0x524, 0xb173, 0xa60c, 0x0, 0x1);
        gbc.writeMem(0x71be, { 0xa6 });
        gbc.writeMem(0xa60c, { 0x9a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7f64, gbc.sp());
        EXPECT(0x71bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa60c));
        // A6 020F
        gbc.setState(0xd519, 0x1057, 0xbdc0, 0x6233, 0x1102, 0x6d79, 0x1, 0x1);
        gbc.writeMem(0x6d79, { 0xff });
        gbc.writeMem(0xd519, { 0xa6 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1057, gbc.sp());
        EXPECT(0xd51a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd519));
        // A6 0210
        gbc.setState(0xae3e, 0x65d4, 0x4a30, 0x2ae0, 0xf945, 0xd00c, 0x0, 0x0);
        gbc.writeMem(0xae3e, { 0xa6 });
        gbc.writeMem(0xd00c, { 0x57 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x65d4, gbc.sp());
        EXPECT(0xae3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xae3e));
        EXPECT(0x57, gbc.readMem(0xd00c));
        // A6 0211
        gbc.setState(0x2456, 0xbebe, 0xc0, 0xd76d, 0x5378, 0x1399, 0x1, 0x0);
        gbc.writeMem(0x1399, { 0xf4 });
        gbc.writeMem(0x2456, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbebe, gbc.sp());
        EXPECT(0x2457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0212
        gbc.setState(0xbc61, 0x3ea, 0xec50, 0x75ee, 0xbf5b, 0xeb52, 0x0, 0x1);
        gbc.writeMem(0xbc61, { 0xa6 });
        gbc.writeMem(0xeb52, { 0x36 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3ea, gbc.sp());
        EXPECT(0xbc62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbc61));
        EXPECT(0x36, gbc.readMem(0xeb52));
        // A6 0213
        gbc.setState(0xe025, 0x5031, 0x9000, 0x9629, 0xdd41, 0x8dbd, 0x0, 0x0);
        gbc.writeMem(0x8dbd, { 0xd0 });
        gbc.writeMem(0xe025, { 0xa6 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5031, gbc.sp());
        EXPECT(0xe026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8dbd));
        EXPECT(0xa6, gbc.readMem(0xe025));
        // A6 0214
        gbc.setState(0x25cf, 0x6904, 0x8f70, 0x55d5, 0x4fc9, 0xda3, 0x1, 0x1);
        gbc.writeMem(0xda3, { 0x6a });
        gbc.writeMem(0x25cf, { 0xa6 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6904, gbc.sp());
        EXPECT(0x25d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0215
        gbc.setState(0x4f9d, 0xb9a2, 0x98a0, 0x19e2, 0xc662, 0xf46d, 0x1, 0x1);
        gbc.writeMem(0x4f9d, { 0xa6 });
        gbc.writeMem(0xf46d, { 0x4d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb9a2, gbc.sp());
        EXPECT(0x4f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xf46d));
        // A6 0216
        gbc.setState(0x5154, 0xb71d, 0x8430, 0xd3e1, 0x20ab, 0xfcb, 0x1, 0x1);
        gbc.writeMem(0xfcb, { 0x69 });
        gbc.writeMem(0x5154, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb71d, gbc.sp());
        EXPECT(0x5155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0217
        gbc.setState(0x198c, 0x8ed3, 0x5fe0, 0xfae1, 0x54f6, 0x5ac8, 0x1, 0x1);
        gbc.writeMem(0x198c, { 0xa6 });
        gbc.writeMem(0x5ac8, { 0xa3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8ed3, gbc.sp());
        EXPECT(0x198d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0218
        gbc.setState(0x1593, 0x3dd6, 0xde30, 0x8b4b, 0x5c10, 0x2d1c, 0x0, 0x1);
        gbc.writeMem(0x1593, { 0xa6 });
        gbc.writeMem(0x2d1c, { 0xb6 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3dd6, gbc.sp());
        EXPECT(0x1594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0219
        gbc.setState(0xbca8, 0x88d1, 0x8cb0, 0x426f, 0x649d, 0x3271, 0x1, 0x1);
        gbc.writeMem(0x3271, { 0xcb });
        gbc.writeMem(0xbca8, { 0xa6 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x88d1, gbc.sp());
        EXPECT(0xbca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbca8));
        // A6 021A
        gbc.setState(0x79ea, 0x7173, 0xc530, 0xedb9, 0x5122, 0x7385, 0x1, 0x0);
        gbc.writeMem(0x7385, { 0x8 });
        gbc.writeMem(0x79ea, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7173, gbc.sp());
        EXPECT(0x79eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 021B
        gbc.setState(0x2109, 0xfb2a, 0x2400, 0xb8de, 0xecb0, 0xed9b, 0x1, 0x0);
        gbc.writeMem(0x2109, { 0xa6 });
        gbc.writeMem(0xed9b, { 0x40 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xfb2a, gbc.sp());
        EXPECT(0x210a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xed9b));
        // A6 021C
        gbc.setState(0xa1f, 0x5d8d, 0x310, 0xc326, 0xe028, 0x9ce6, 0x0, 0x0);
        gbc.writeMem(0xa1f, { 0xa6 });
        gbc.writeMem(0x9ce6, { 0xfe });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5d8d, gbc.sp());
        EXPECT(0xa20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9ce6));
        // A6 021D
        gbc.setState(0xa137, 0x3838, 0x4890, 0x9cb4, 0x910d, 0x18db, 0x1, 0x0);
        gbc.writeMem(0x18db, { 0x6d });
        gbc.writeMem(0xa137, { 0xa6 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3838, gbc.sp());
        EXPECT(0xa138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa137));
        // A6 021E
        gbc.setState(0x77ed, 0xeeb2, 0x5510, 0xd8f2, 0xe11, 0xa853, 0x0, 0x0);
        gbc.writeMem(0x77ed, { 0xa6 });
        gbc.writeMem(0xa853, { 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xeeb2, gbc.sp());
        EXPECT(0x77ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa853));
        // A6 021F
        gbc.setState(0x7cdd, 0xc575, 0xf400, 0x9a56, 0xcd9, 0x102e, 0x0, 0x1);
        gbc.writeMem(0x102e, { 0xbb });
        gbc.writeMem(0x7cdd, { 0xa6 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc575, gbc.sp());
        EXPECT(0x7cde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0220
        gbc.setState(0x77b0, 0x6431, 0x3160, 0xa52d, 0x842f, 0x5664, 0x1, 0x1);
        gbc.writeMem(0x5664, { 0x7e });
        gbc.writeMem(0x77b0, { 0xa6 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6431, gbc.sp());
        EXPECT(0x77b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0221
        gbc.setState(0xd871, 0x90c7, 0xd240, 0xfd62, 0x534a, 0xa8e1, 0x1, 0x0);
        gbc.writeMem(0xa8e1, { 0xce });
        gbc.writeMem(0xd871, { 0xa6 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x90c7, gbc.sp());
        EXPECT(0xd872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xa8e1));
        EXPECT(0xa6, gbc.readMem(0xd871));
        // A6 0222
        gbc.setState(0x61a4, 0x553f, 0x4340, 0xf6ca, 0xa713, 0x202, 0x1, 0x1);
        gbc.writeMem(0x202, { 0x88 });
        gbc.writeMem(0x61a4, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x553f, gbc.sp());
        EXPECT(0x61a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0223
        gbc.setState(0x92d7, 0x3829, 0xd860, 0x29d6, 0x3c6d, 0x9a7a, 0x1, 0x0);
        gbc.writeMem(0x92d7, { 0xa6 });
        gbc.writeMem(0x9a7a, { 0xae });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3829, gbc.sp());
        EXPECT(0x92d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x92d7));
        EXPECT(0xae, gbc.readMem(0x9a7a));
        // A6 0224
        gbc.setState(0x2987, 0x6dc, 0x1130, 0x71a7, 0x6f3e, 0x2b9f, 0x0, 0x0);
        gbc.writeMem(0x2987, { 0xa6 });
        gbc.writeMem(0x2b9f, { 0x96 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6dc, gbc.sp());
        EXPECT(0x2988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0226
        gbc.setState(0xab42, 0xf73c, 0x6000, 0x4465, 0x461e, 0x9acd, 0x1, 0x0);
        gbc.writeMem(0x9acd, { 0xd });
        gbc.writeMem(0xab42, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf73c, gbc.sp());
        EXPECT(0xab43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x9acd));
        EXPECT(0xa6, gbc.readMem(0xab42));
        // A6 0227
        gbc.setState(0xa487, 0x16aa, 0xec0, 0xf28, 0xbfd8, 0xfac8, 0x1, 0x1);
        gbc.writeMem(0xa487, { 0xa6 });
        gbc.writeMem(0xfac8, { 0xb });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x16aa, gbc.sp());
        EXPECT(0xa488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa487));
        EXPECT(0xb, gbc.readMem(0xfac8));
        // A6 0228
        gbc.setState(0x7d7a, 0xfd01, 0xf350, 0x3d09, 0xa682, 0x394d, 0x0, 0x0);
        gbc.writeMem(0x394d, { 0xf9 });
        gbc.writeMem(0x7d7a, { 0xa6 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xfd01, gbc.sp());
        EXPECT(0x7d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0229
        gbc.setState(0x7e51, 0xb764, 0x640, 0xd583, 0xa208, 0x9d23, 0x0, 0x1);
        gbc.writeMem(0x7e51, { 0xa6 });
        gbc.writeMem(0x9d23, { 0x85 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb764, gbc.sp());
        EXPECT(0x7e52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9d23));
        // A6 022A
        gbc.setState(0xedf8, 0x8a89, 0xb3d0, 0x7298, 0x3bb5, 0xd4d2, 0x0, 0x1);
        gbc.writeMem(0xd4d2, { 0xc1 });
        gbc.writeMem(0xedf8, { 0xa6 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8a89, gbc.sp());
        EXPECT(0xedf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd4d2));
        EXPECT(0xa6, gbc.readMem(0xedf8));
        // A6 022B
        gbc.setState(0x56f2, 0x7b16, 0x8dc0, 0x3b78, 0x2873, 0xd617, 0x0, 0x1);
        gbc.writeMem(0x56f2, { 0xa6 });
        gbc.writeMem(0xd617, { 0x22 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7b16, gbc.sp());
        EXPECT(0x56f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xd617));
        // A6 022C
        gbc.setState(0xd322, 0x9df5, 0x9f40, 0x1a30, 0xa87b, 0xe8e6, 0x1, 0x1);
        gbc.writeMem(0xd322, { 0xa6 });
        gbc.writeMem(0xe8e6, { 0xcd });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9df5, gbc.sp());
        EXPECT(0xd323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd322));
        EXPECT(0xcd, gbc.readMem(0xe8e6));
        // A6 022D
        gbc.setState(0x382a, 0x5534, 0xc990, 0xa475, 0xbbdc, 0xbec4, 0x0, 0x1);
        gbc.writeMem(0x382a, { 0xa6 });
        gbc.writeMem(0xbec4, { 0x34 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5534, gbc.sp());
        EXPECT(0x382b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xbec4));
        // A6 022E
        gbc.setState(0x68dd, 0xb24c, 0x6f00, 0x8d22, 0x3add, 0xa319, 0x1, 0x0);
        gbc.writeMem(0x68dd, { 0xa6 });
        gbc.writeMem(0xa319, { 0x7c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb24c, gbc.sp());
        EXPECT(0x68de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xa319));
        // A6 022F
        gbc.setState(0xa211, 0x9a63, 0x7b60, 0x9aa7, 0x8604, 0xc23b, 0x0, 0x1);
        gbc.writeMem(0xa211, { 0xa6 });
        gbc.writeMem(0xc23b, { 0x95 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9a63, gbc.sp());
        EXPECT(0xa212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa211));
        EXPECT(0x95, gbc.readMem(0xc23b));
        // A6 0231
        gbc.setState(0x7149, 0x766e, 0xd1b0, 0x8055, 0x9034, 0xb617, 0x1, 0x0);
        gbc.writeMem(0x7149, { 0xa6 });
        gbc.writeMem(0xb617, { 0x61 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x766e, gbc.sp());
        EXPECT(0x714a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb617));
        // A6 0232
        gbc.setState(0x7add, 0x3c8b, 0xddf0, 0x8b04, 0x796d, 0x82af, 0x0, 0x0);
        gbc.writeMem(0x7add, { 0xa6 });
        gbc.writeMem(0x82af, { 0x3e });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3c8b, gbc.sp());
        EXPECT(0x7ade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x82af));
        // A6 0233
        gbc.setState(0x1c84, 0xb8c8, 0x1030, 0x24dd, 0xbcc6, 0xc85, 0x1, 0x1);
        gbc.writeMem(0xc85, { 0x2f });
        gbc.writeMem(0x1c84, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb8c8, gbc.sp());
        EXPECT(0x1c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0234
        gbc.setState(0xa4fe, 0x8f55, 0x8da0, 0x3972, 0xc333, 0x48d7, 0x1, 0x0);
        gbc.writeMem(0x48d7, { 0xdd });
        gbc.writeMem(0xa4fe, { 0xa6 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8f55, gbc.sp());
        EXPECT(0xa4ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa4fe));
        // A6 0235
        gbc.setState(0xde42, 0x34c2, 0xda40, 0xaf6c, 0x62f3, 0x8bfa, 0x1, 0x0);
        gbc.writeMem(0x8bfa, { 0x23 });
        gbc.writeMem(0xde42, { 0xa6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x34c2, gbc.sp());
        EXPECT(0xde43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x8bfa));
        EXPECT(0xa6, gbc.readMem(0xde42));
        // A6 0236
        gbc.setState(0x3814, 0x6835, 0xc920, 0x9576, 0xcad2, 0x72a, 0x1, 0x1);
        gbc.writeMem(0x72a, { 0x54 });
        gbc.writeMem(0x3814, { 0xa6 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6835, gbc.sp());
        EXPECT(0x3815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0237
        gbc.setState(0x138b, 0x9d51, 0x2fb0, 0xcfae, 0x20fd, 0xde75, 0x1, 0x0);
        gbc.writeMem(0x138b, { 0xa6 });
        gbc.writeMem(0xde75, { 0x42 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9d51, gbc.sp());
        EXPECT(0x138c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xde75));
        // A6 0238
        gbc.setState(0x75ef, 0x8a6a, 0x69b0, 0x7f4e, 0x9c77, 0xebe7, 0x0, 0x1);
        gbc.writeMem(0x75ef, { 0xa6 });
        gbc.writeMem(0xebe7, { 0x81 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8a6a, gbc.sp());
        EXPECT(0x75f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xebe7));
        // A6 0239
        gbc.setState(0x3df2, 0xb81a, 0xdbe0, 0x7e2f, 0x887b, 0x2720, 0x0, 0x1);
        gbc.writeMem(0x2720, { 0xd6 });
        gbc.writeMem(0x3df2, { 0xa6 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb81a, gbc.sp());
        EXPECT(0x3df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 023A
        gbc.setState(0xa492, 0x76df, 0x9e00, 0x662c, 0x9e48, 0xf0b7, 0x0, 0x0);
        gbc.writeMem(0xa492, { 0xa6 });
        gbc.writeMem(0xf0b7, { 0xaa });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x76df, gbc.sp());
        EXPECT(0xa493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa492));
        EXPECT(0xaa, gbc.readMem(0xf0b7));
        // A6 023B
        gbc.setState(0x4337, 0x6dfe, 0xb610, 0x7e61, 0x4266, 0xfd7c, 0x1, 0x1);
        gbc.writeMem(0x4337, { 0xa6 });
        gbc.writeMem(0xfd7c, { 0x90 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6dfe, gbc.sp());
        EXPECT(0x4338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xfd7c));
        // A6 023C
        gbc.setState(0xbdd8, 0x76db, 0x5760, 0x5578, 0x4856, 0xc746, 0x1, 0x1);
        gbc.writeMem(0xbdd8, { 0xa6 });
        gbc.writeMem(0xc746, { 0xb });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x76db, gbc.sp());
        EXPECT(0xbdd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbdd8));
        EXPECT(0xb, gbc.readMem(0xc746));
        // A6 023D
        gbc.setState(0x55ac, 0x8130, 0xc660, 0x68ea, 0xd52e, 0x9602, 0x0, 0x0);
        gbc.writeMem(0x55ac, { 0xa6 });
        gbc.writeMem(0x9602, { 0x8a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8130, gbc.sp());
        EXPECT(0x55ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9602));
        // A6 023E
        gbc.setState(0x52ec, 0x8727, 0x5f0, 0xe390, 0x2403, 0xc040, 0x0, 0x0);
        gbc.writeMem(0x52ec, { 0xa6 });
        gbc.writeMem(0xc040, { 0xb9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8727, gbc.sp());
        EXPECT(0x52ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc040));
        // A6 023F
        gbc.setState(0xe4a8, 0x3a0f, 0x57d0, 0xa2c5, 0x2510, 0xd7d7, 0x1, 0x0);
        gbc.writeMem(0xd7d7, { 0xc0 });
        gbc.writeMem(0xe4a8, { 0xa6 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3a0f, gbc.sp());
        EXPECT(0xe4a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xd7d7));
        EXPECT(0xa6, gbc.readMem(0xe4a8));
        // A6 0240
        gbc.setState(0x5b85, 0x18ea, 0xb5e0, 0xd0df, 0xa025, 0x780e, 0x0, 0x1);
        gbc.writeMem(0x5b85, { 0xa6 });
        gbc.writeMem(0x780e, { 0xd7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x18ea, gbc.sp());
        EXPECT(0x5b86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0241
        gbc.setState(0x85d5, 0xfd4c, 0x2350, 0xf65c, 0xdc57, 0xfeb1, 0x0, 0x0);
        gbc.writeMem(0x85d5, { 0xa6 });
        gbc.writeMem(0xfeb1, { 0x3d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xfd4c, gbc.sp());
        EXPECT(0x85d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x85d5));
        EXPECT(0x3d, gbc.readMem(0xfeb1));
        // A6 0242
        gbc.setState(0xb3ed, 0x7990, 0x6940, 0x3de6, 0x1bbd, 0x391b, 0x1, 0x1);
        gbc.writeMem(0x391b, { 0x76 });
        gbc.writeMem(0xb3ed, { 0xa6 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7990, gbc.sp());
        EXPECT(0xb3ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb3ed));
        // A6 0243
        gbc.setState(0x41c9, 0x4c90, 0x16f0, 0xedb9, 0x4166, 0x679, 0x0, 0x0);
        gbc.writeMem(0x679, { 0xc6 });
        gbc.writeMem(0x41c9, { 0xa6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4c90, gbc.sp());
        EXPECT(0x41ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0245
        gbc.setState(0xbc7f, 0x95bc, 0x71d0, 0x33d3, 0x8153, 0x9f07, 0x1, 0x0);
        gbc.writeMem(0x9f07, { 0x21 });
        gbc.writeMem(0xbc7f, { 0xa6 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x95bc, gbc.sp());
        EXPECT(0xbc80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9f07));
        EXPECT(0xa6, gbc.readMem(0xbc7f));
        // A6 0246
        gbc.setState(0x4e48, 0x22db, 0xa5c0, 0x61c8, 0x4843, 0x5f4e, 0x0, 0x0);
        gbc.writeMem(0x4e48, { 0xa6 });
        gbc.writeMem(0x5f4e, { 0xc });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x22db, gbc.sp());
        EXPECT(0x4e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0248
        gbc.setState(0xa584, 0xfb1f, 0x4220, 0x49aa, 0x2a9a, 0xb35, 0x0, 0x1);
        gbc.writeMem(0xb35, { 0xb3 });
        gbc.writeMem(0xa584, { 0xa6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfb1f, gbc.sp());
        EXPECT(0xa585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa584));
        // A6 0249
        gbc.setState(0x2f4a, 0x557f, 0xf880, 0x18ca, 0x2282, 0x66, 0x1, 0x0);
        gbc.writeMem(0x66, { 0xfc });
        gbc.writeMem(0x2f4a, { 0xa6 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x557f, gbc.sp());
        EXPECT(0x2f4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 024A
        gbc.setState(0xc0ca, 0x7af5, 0x5b00, 0x6157, 0xef58, 0x58bf, 0x0, 0x1);
        gbc.writeMem(0x58bf, { 0xd7 });
        gbc.writeMem(0xc0ca, { 0xa6 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7af5, gbc.sp());
        EXPECT(0xc0cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc0ca));
        // A6 024C
        gbc.setState(0xbf8c, 0xeefc, 0x940, 0x728b, 0x48cb, 0x5770, 0x1, 0x0);
        gbc.writeMem(0x5770, { 0xff });
        gbc.writeMem(0xbf8c, { 0xa6 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xeefc, gbc.sp());
        EXPECT(0xbf8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbf8c));
        // A6 024D
        gbc.setState(0xae62, 0x703, 0x4b90, 0xe388, 0x2b3b, 0x4410, 0x0, 0x1);
        gbc.writeMem(0x4410, { 0x1e });
        gbc.writeMem(0xae62, { 0xa6 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x703, gbc.sp());
        EXPECT(0xae63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xae62));
        // A6 024E
        gbc.setState(0x6bcd, 0x60d3, 0x92d0, 0xb21a, 0x99aa, 0x6aad, 0x1, 0x0);
        gbc.writeMem(0x6aad, { 0xb4 });
        gbc.writeMem(0x6bcd, { 0xa6 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x60d3, gbc.sp());
        EXPECT(0x6bce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 024F
        gbc.setState(0xecac, 0xe135, 0xa9a0, 0xb0ec, 0x468d, 0xa2b0, 0x1, 0x0);
        gbc.writeMem(0xa2b0, { 0xb1 });
        gbc.writeMem(0xecac, { 0xa6 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe135, gbc.sp());
        EXPECT(0xecad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xa2b0));
        EXPECT(0xa6, gbc.readMem(0xecac));
        // A6 0250
        gbc.setState(0x5416, 0xe1cf, 0x4a00, 0x1b8c, 0x72f5, 0x8bf2, 0x0, 0x0);
        gbc.writeMem(0x5416, { 0xa6 });
        gbc.writeMem(0x8bf2, { 0x34 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe1cf, gbc.sp());
        EXPECT(0x5417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8bf2));
        // A6 0251
        gbc.setState(0xc034, 0x7308, 0x760, 0xdd23, 0x893e, 0x64f3, 0x0, 0x0);
        gbc.writeMem(0x64f3, { 0x53 });
        gbc.writeMem(0xc034, { 0xa6 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7308, gbc.sp());
        EXPECT(0xc035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc034));
        // A6 0252
        gbc.setState(0xd32b, 0xc7ca, 0x1290, 0xafa0, 0xf5f0, 0x3437, 0x0, 0x0);
        gbc.writeMem(0x3437, { 0x71 });
        gbc.writeMem(0xd32b, { 0xa6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc7ca, gbc.sp());
        EXPECT(0xd32c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd32b));
        // A6 0253
        gbc.setState(0xa718, 0xdb93, 0xdaa0, 0x57d1, 0x96b7, 0x5bbf, 0x1, 0x0);
        gbc.writeMem(0x5bbf, { 0x3a });
        gbc.writeMem(0xa718, { 0xa6 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xdb93, gbc.sp());
        EXPECT(0xa719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa718));
        // A6 0254
        gbc.setState(0x623, 0x991f, 0x6d60, 0xa5a5, 0xbadc, 0x8299, 0x1, 0x0);
        gbc.writeMem(0x623, { 0xa6 });
        gbc.writeMem(0x8299, { 0xc4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x991f, gbc.sp());
        EXPECT(0x624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x8299));
        // A6 0255
        gbc.setState(0xe179, 0x45c5, 0xd5c0, 0xa282, 0xf1af, 0x1775, 0x1, 0x0);
        gbc.writeMem(0x1775, { 0x4c });
        gbc.writeMem(0xe179, { 0xa6 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x45c5, gbc.sp());
        EXPECT(0xe17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe179));
        // A6 0256
        gbc.setState(0x20ea, 0xf13b, 0x4ac0, 0xe75d, 0x9b9c, 0x5aa5, 0x0, 0x1);
        gbc.writeMem(0x20ea, { 0xa6 });
        gbc.writeMem(0x5aa5, { 0x77 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf13b, gbc.sp());
        EXPECT(0x20eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0257
        gbc.setState(0x87a7, 0x739f, 0x3a30, 0x3337, 0x286e, 0xc1b3, 0x1, 0x0);
        gbc.writeMem(0x87a7, { 0xa6 });
        gbc.writeMem(0xc1b3, { 0x31 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x739f, gbc.sp());
        EXPECT(0x87a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x87a7));
        EXPECT(0x31, gbc.readMem(0xc1b3));
        // A6 0258
        gbc.setState(0x769c, 0xece2, 0x390, 0xe05e, 0xffb2, 0x6587, 0x1, 0x1);
        gbc.writeMem(0x6587, { 0x16 });
        gbc.writeMem(0x769c, { 0xa6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xece2, gbc.sp());
        EXPECT(0x769d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0259
        gbc.setState(0x7a60, 0xd681, 0xb950, 0x757d, 0x31d6, 0xb76f, 0x0, 0x1);
        gbc.writeMem(0x7a60, { 0xa6 });
        gbc.writeMem(0xb76f, { 0x5c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd681, gbc.sp());
        EXPECT(0x7a61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xb76f));
        // A6 025A
        gbc.setState(0xbe9c, 0x8f75, 0x1280, 0x2c3c, 0x9f8c, 0xb271, 0x1, 0x1);
        gbc.writeMem(0xb271, { 0xcd });
        gbc.writeMem(0xbe9c, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8f75, gbc.sp());
        EXPECT(0xbe9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xb271));
        EXPECT(0xa6, gbc.readMem(0xbe9c));
        // A6 025B
        gbc.setState(0xaeaf, 0x7749, 0xf520, 0x37e8, 0x4697, 0x6696, 0x1, 0x0);
        gbc.writeMem(0x6696, { 0xda });
        gbc.writeMem(0xaeaf, { 0xa6 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7749, gbc.sp());
        EXPECT(0xaeb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xaeaf));
        // A6 025C
        gbc.setState(0xb45a, 0x3626, 0x58c0, 0x9645, 0x2e2, 0xd696, 0x0, 0x0);
        gbc.writeMem(0xb45a, { 0xa6 });
        gbc.writeMem(0xd696, { 0x6f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3626, gbc.sp());
        EXPECT(0xb45b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb45a));
        EXPECT(0x6f, gbc.readMem(0xd696));
        // A6 025D
        gbc.setState(0x2f91, 0xb599, 0x1ce0, 0x9c9b, 0x95fb, 0xefdd, 0x1, 0x0);
        gbc.writeMem(0x2f91, { 0xa6 });
        gbc.writeMem(0xefdd, { 0x33 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb599, gbc.sp());
        EXPECT(0x2f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xefdd));
        // A6 025E
        gbc.setState(0x1217, 0x481d, 0x3fa0, 0x3b23, 0xc9f4, 0x3dba, 0x1, 0x1);
        gbc.writeMem(0x1217, { 0xa6 });
        gbc.writeMem(0x3dba, { 0xd2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x481d, gbc.sp());
        EXPECT(0x1218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 025F
        gbc.setState(0x9ae4, 0xc91e, 0xdd60, 0xb959, 0x74bf, 0x246d, 0x0, 0x0);
        gbc.writeMem(0x246d, { 0xab });
        gbc.writeMem(0x9ae4, { 0xa6 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc91e, gbc.sp());
        EXPECT(0x9ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9ae4));
        // A6 0260
        gbc.setState(0xaff8, 0x4018, 0x6d00, 0x4891, 0x244d, 0x397b, 0x0, 0x0);
        gbc.writeMem(0x397b, { 0x8a });
        gbc.writeMem(0xaff8, { 0xa6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4018, gbc.sp());
        EXPECT(0xaff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xaff8));
        // A6 0261
        gbc.setState(0x6cff, 0x646b, 0xc0d0, 0xe02a, 0x35a5, 0x18c8, 0x1, 0x0);
        gbc.writeMem(0x18c8, { 0xed });
        gbc.writeMem(0x6cff, { 0xa6 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x646b, gbc.sp());
        EXPECT(0x6d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0262
        gbc.setState(0xdfec, 0x8dc7, 0x7dc0, 0xd3f3, 0x8193, 0xe4c5, 0x0, 0x0);
        gbc.writeMem(0xdfec, { 0xa6 });
        gbc.writeMem(0xe4c5, { 0x37 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8dc7, gbc.sp());
        EXPECT(0xdfed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xdfec));
        EXPECT(0x37, gbc.readMem(0xe4c5));
        // A6 0263
        gbc.setState(0xe179, 0x1805, 0xbce0, 0x7ccf, 0x543a, 0x9eaf, 0x1, 0x0);
        gbc.writeMem(0x9eaf, { 0xc9 });
        gbc.writeMem(0xe179, { 0xa6 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1805, gbc.sp());
        EXPECT(0xe17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9eaf));
        EXPECT(0xa6, gbc.readMem(0xe179));
        // A6 0264
        gbc.setState(0x43ec, 0xa841, 0x9e80, 0xca1e, 0xa191, 0x5bcc, 0x1, 0x0);
        gbc.writeMem(0x43ec, { 0xa6 });
        gbc.writeMem(0x5bcc, { 0x11 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa841, gbc.sp());
        EXPECT(0x43ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0265
        gbc.setState(0xa3f3, 0x278b, 0xa3d0, 0x707b, 0x6486, 0x5312, 0x1, 0x0);
        gbc.writeMem(0x5312, { 0xbe });
        gbc.writeMem(0xa3f3, { 0xa6 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x278b, gbc.sp());
        EXPECT(0xa3f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa3f3));
        // A6 0266
        gbc.setState(0x7211, 0xe27e, 0x3d20, 0xa21b, 0x347, 0x2ff7, 0x1, 0x1);
        gbc.writeMem(0x2ff7, { 0xc0 });
        gbc.writeMem(0x7211, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe27e, gbc.sp());
        EXPECT(0x7212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0267
        gbc.setState(0x893c, 0xd298, 0x2c40, 0xe851, 0x4929, 0xe212, 0x1, 0x1);
        gbc.writeMem(0x893c, { 0xa6 });
        gbc.writeMem(0xe212, { 0xc7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd298, gbc.sp());
        EXPECT(0x893d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x893c));
        EXPECT(0xc7, gbc.readMem(0xe212));
        // A6 0268
        gbc.setState(0xd66f, 0x599a, 0xdfb0, 0x27b5, 0xef56, 0x8ecb, 0x1, 0x1);
        gbc.writeMem(0x8ecb, { 0x7a });
        gbc.writeMem(0xd66f, { 0xa6 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x599a, gbc.sp());
        EXPECT(0xd670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8ecb));
        EXPECT(0xa6, gbc.readMem(0xd66f));
        // A6 0269
        gbc.setState(0xcfd8, 0x1d06, 0xb390, 0x24a7, 0x7f89, 0xbe3, 0x1, 0x1);
        gbc.writeMem(0xbe3, { 0x20 });
        gbc.writeMem(0xcfd8, { 0xa6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1d06, gbc.sp());
        EXPECT(0xcfd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xcfd8));
        // A6 026A
        gbc.setState(0xdfa9, 0x44c7, 0xccd0, 0x1cec, 0x6357, 0x935c, 0x1, 0x0);
        gbc.writeMem(0x935c, { 0xe0 });
        gbc.writeMem(0xdfa9, { 0xa6 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x44c7, gbc.sp());
        EXPECT(0xdfaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x935c));
        EXPECT(0xa6, gbc.readMem(0xdfa9));
        // A6 026B
        gbc.setState(0xe37, 0x2eec, 0x4a70, 0x8f1e, 0x7e84, 0x35cf, 0x1, 0x1);
        gbc.writeMem(0xe37, { 0xa6 });
        gbc.writeMem(0x35cf, { 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2eec, gbc.sp());
        EXPECT(0xe38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 026C
        gbc.setState(0x7c72, 0x1d01, 0x8640, 0xc998, 0x8122, 0x7b88, 0x0, 0x0);
        gbc.writeMem(0x7b88, { 0xad });
        gbc.writeMem(0x7c72, { 0xa6 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1d01, gbc.sp());
        EXPECT(0x7c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 026D
        gbc.setState(0x5653, 0xabc6, 0xde30, 0x333, 0xff7f, 0x4ed9, 0x0, 0x0);
        gbc.writeMem(0x4ed9, { 0xa6 });
        gbc.writeMem(0x5653, { 0xa6 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xabc6, gbc.sp());
        EXPECT(0x5654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 026E
        gbc.setState(0xc37, 0x4fff, 0xc3d0, 0x4691, 0x8a07, 0x5639, 0x0, 0x0);
        gbc.writeMem(0xc37, { 0xa6 });
        gbc.writeMem(0x5639, { 0x33 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4fff, gbc.sp());
        EXPECT(0xc38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 026F
        gbc.setState(0x8257, 0xa276, 0xbae0, 0x4cf2, 0xa5dd, 0x8043, 0x0, 0x0);
        gbc.writeMem(0x8043, { 0xb8 });
        gbc.writeMem(0x8257, { 0xa6 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa276, gbc.sp());
        EXPECT(0x8258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x8043));
        EXPECT(0xa6, gbc.readMem(0x8257));
        // A6 0270
        gbc.setState(0x4b62, 0x9683, 0xc250, 0x5013, 0x31, 0xbb35, 0x1, 0x1);
        gbc.writeMem(0x4b62, { 0xa6 });
        gbc.writeMem(0xbb35, { 0x81 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9683, gbc.sp());
        EXPECT(0x4b63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbb35));
        // A6 0271
        gbc.setState(0x1f4a, 0x9a1e, 0xcf00, 0x6f00, 0x456f, 0x69c, 0x0, 0x1);
        gbc.writeMem(0x69c, { 0x6a });
        gbc.writeMem(0x1f4a, { 0xa6 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9a1e, gbc.sp());
        EXPECT(0x1f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0272
        gbc.setState(0x6832, 0xaaf6, 0xde70, 0xad9c, 0x62b7, 0xb391, 0x0, 0x1);
        gbc.writeMem(0x6832, { 0xa6 });
        gbc.writeMem(0xb391, { 0x77 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xaaf6, gbc.sp());
        EXPECT(0x6833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xb391));
        // A6 0273
        gbc.setState(0x90e5, 0x7b5, 0x710, 0xd4da, 0x9eb7, 0x6075, 0x0, 0x0);
        gbc.writeMem(0x6075, { 0x2f });
        gbc.writeMem(0x90e5, { 0xa6 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7b5, gbc.sp());
        EXPECT(0x90e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x90e5));
        // A6 0274
        gbc.setState(0x1cf3, 0xf628, 0x6510, 0xc874, 0x666d, 0x3bca, 0x0, 0x0);
        gbc.writeMem(0x1cf3, { 0xa6 });
        gbc.writeMem(0x3bca, { 0x1c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf628, gbc.sp());
        EXPECT(0x1cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0275
        gbc.setState(0x135d, 0x5d8e, 0xee80, 0x6f0a, 0x8ce7, 0xc42d, 0x1, 0x0);
        gbc.writeMem(0x135d, { 0xa6 });
        gbc.writeMem(0xc42d, { 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5d8e, gbc.sp());
        EXPECT(0x135e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc42d));
        // A6 0276
        gbc.setState(0xdad8, 0x9288, 0xf6f0, 0xfaed, 0x504a, 0x1c21, 0x0, 0x1);
        gbc.writeMem(0x1c21, { 0x4e });
        gbc.writeMem(0xdad8, { 0xa6 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9288, gbc.sp());
        EXPECT(0xdad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xdad8));
        // A6 0277
        gbc.setState(0xd6d4, 0x858f, 0xcd20, 0xb3b9, 0x220, 0x9354, 0x1, 0x0);
        gbc.writeMem(0x9354, { 0xc4 });
        gbc.writeMem(0xd6d4, { 0xa6 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x858f, gbc.sp());
        EXPECT(0xd6d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x9354));
        EXPECT(0xa6, gbc.readMem(0xd6d4));
        // A6 0278
        gbc.setState(0xa8c0, 0x995c, 0x9a90, 0xfb86, 0x281, 0xb542, 0x1, 0x1);
        gbc.writeMem(0xa8c0, { 0xa6 });
        gbc.writeMem(0xb542, { 0xc2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x995c, gbc.sp());
        EXPECT(0xa8c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa8c0));
        EXPECT(0xc2, gbc.readMem(0xb542));
        // A6 0279
        gbc.setState(0xe769, 0x6d2e, 0x7940, 0xcfe, 0x4b9b, 0xf441, 0x1, 0x1);
        gbc.writeMem(0xe769, { 0xa6 });
        gbc.writeMem(0xf441, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6d2e, gbc.sp());
        EXPECT(0xe76a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe769));
        EXPECT(0xa0, gbc.readMem(0xf441));
        // A6 027A
        gbc.setState(0x58ca, 0x9e29, 0xee00, 0xdefb, 0x9a25, 0xbfc6, 0x0, 0x1);
        gbc.writeMem(0x58ca, { 0xa6 });
        gbc.writeMem(0xbfc6, { 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9e29, gbc.sp());
        EXPECT(0x58cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbfc6));
        // A6 027B
        gbc.setState(0x4a6b, 0x8c00, 0x7b00, 0x1e1f, 0x3bf2, 0x8430, 0x1, 0x0);
        gbc.writeMem(0x4a6b, { 0xa6 });
        gbc.writeMem(0x8430, { 0x3f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8c00, gbc.sp());
        EXPECT(0x4a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8430));
        // A6 027C
        gbc.setState(0xea08, 0xd46c, 0x3870, 0x70a0, 0xf1f5, 0x2a67, 0x1, 0x0);
        gbc.writeMem(0x2a67, { 0xb5 });
        gbc.writeMem(0xea08, { 0xa6 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd46c, gbc.sp());
        EXPECT(0xea09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xea08));
        // A6 027D
        gbc.setState(0xadec, 0x349c, 0x9780, 0x67bb, 0xb75d, 0xbf4e, 0x0, 0x1);
        gbc.writeMem(0xadec, { 0xa6 });
        gbc.writeMem(0xbf4e, { 0xf8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x349c, gbc.sp());
        EXPECT(0xaded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xadec));
        EXPECT(0xf8, gbc.readMem(0xbf4e));
        // A6 027E
        gbc.setState(0x9bef, 0x79af, 0xcfd0, 0x944a, 0xdfa2, 0x7116, 0x0, 0x0);
        gbc.writeMem(0x7116, { 0x3e });
        gbc.writeMem(0x9bef, { 0xa6 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x79af, gbc.sp());
        EXPECT(0x9bf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9bef));
        // A6 027F
        gbc.setState(0x2027, 0x18f1, 0x66d0, 0x1c7a, 0x579f, 0x255a, 0x1, 0x1);
        gbc.writeMem(0x2027, { 0xa6 });
        gbc.writeMem(0x255a, { 0xb4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x18f1, gbc.sp());
        EXPECT(0x2028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0280
        gbc.setState(0x8eaf, 0x4d2b, 0xec30, 0x5e97, 0x9e15, 0xfcc3, 0x1, 0x0);
        gbc.writeMem(0x8eaf, { 0xa6 });
        gbc.writeMem(0xfcc3, { 0xfd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4d2b, gbc.sp());
        EXPECT(0x8eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8eaf));
        EXPECT(0xfd, gbc.readMem(0xfcc3));
        // A6 0281
        gbc.setState(0x2929, 0xb86b, 0xc2d0, 0x9995, 0x4efa, 0xb237, 0x0, 0x1);
        gbc.writeMem(0x2929, { 0xa6 });
        gbc.writeMem(0xb237, { 0x93 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb86b, gbc.sp());
        EXPECT(0x292a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb237));
        // A6 0282
        gbc.setState(0x7be6, 0x4358, 0x4f50, 0x5285, 0xd281, 0xa018, 0x1, 0x1);
        gbc.writeMem(0x7be6, { 0xa6 });
        gbc.writeMem(0xa018, { 0xff });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4358, gbc.sp());
        EXPECT(0x7be7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa018));
        // A6 0284
        gbc.setState(0xb6c, 0x7984, 0x41a0, 0x14b4, 0x8c7e, 0xf833, 0x1, 0x1);
        gbc.writeMem(0xb6c, { 0xa6 });
        gbc.writeMem(0xf833, { 0x6e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7984, gbc.sp());
        EXPECT(0xb6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xf833));
        // A6 0285
        gbc.setState(0x9552, 0x37f0, 0xed60, 0xb64d, 0x635a, 0xdf31, 0x1, 0x0);
        gbc.writeMem(0x9552, { 0xa6 });
        gbc.writeMem(0xdf31, { 0x7c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x37f0, gbc.sp());
        EXPECT(0x9553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9552));
        EXPECT(0x7c, gbc.readMem(0xdf31));
        // A6 0286
        gbc.setState(0xe76f, 0x39b3, 0x86d0, 0xa037, 0x96ac, 0x7caf, 0x0, 0x1);
        gbc.writeMem(0x7caf, { 0x46 });
        gbc.writeMem(0xe76f, { 0xa6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x39b3, gbc.sp());
        EXPECT(0xe770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe76f));
        // A6 0287
        gbc.setState(0xe299, 0xa085, 0xb880, 0xdf12, 0x1f9, 0x1cb9, 0x1, 0x0);
        gbc.writeMem(0x1cb9, { 0x10 });
        gbc.writeMem(0xe299, { 0xa6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa085, gbc.sp());
        EXPECT(0xe29a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe299));
        // A6 0288
        gbc.setState(0x22f0, 0x3071, 0xf0d0, 0x8936, 0x3332, 0x14bb, 0x0, 0x0);
        gbc.writeMem(0x14bb, { 0xf6 });
        gbc.writeMem(0x22f0, { 0xa6 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3071, gbc.sp());
        EXPECT(0x22f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0289
        gbc.setState(0x2679, 0x2586, 0xd30, 0x8cf7, 0x2f18, 0x267b, 0x0, 0x1);
        gbc.writeMem(0x2679, { 0xa6 });
        gbc.writeMem(0x267b, { 0x2f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2586, gbc.sp());
        EXPECT(0x267a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 028A
        gbc.setState(0x4d45, 0x4ebf, 0xa290, 0xb87, 0x73ec, 0xb184, 0x1, 0x1);
        gbc.writeMem(0x4d45, { 0xa6 });
        gbc.writeMem(0xb184, { 0x4c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4ebf, gbc.sp());
        EXPECT(0x4d46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb184));
        // A6 028B
        gbc.setState(0x88b3, 0x6428, 0xb0e0, 0x8441, 0xc10c, 0xa2fa, 0x0, 0x1);
        gbc.writeMem(0x88b3, { 0xa6 });
        gbc.writeMem(0xa2fa, { 0xb3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6428, gbc.sp());
        EXPECT(0x88b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x88b3));
        EXPECT(0xb3, gbc.readMem(0xa2fa));
        // A6 028C
        gbc.setState(0x4b46, 0x85a1, 0x8d00, 0x9888, 0x7860, 0x2694, 0x0, 0x1);
        gbc.writeMem(0x2694, { 0xc });
        gbc.writeMem(0x4b46, { 0xa6 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x85a1, gbc.sp());
        EXPECT(0x4b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 028D
        gbc.setState(0xb504, 0xfa0f, 0xa10, 0x80fb, 0x2618, 0x4832, 0x1, 0x0);
        gbc.writeMem(0x4832, { 0x35 });
        gbc.writeMem(0xb504, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfa0f, gbc.sp());
        EXPECT(0xb505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb504));
        // A6 028E
        gbc.setState(0x4186, 0xbb08, 0x4a10, 0xba7a, 0x504d, 0xbc19, 0x1, 0x0);
        gbc.writeMem(0x4186, { 0xa6 });
        gbc.writeMem(0xbc19, { 0x2b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbb08, gbc.sp());
        EXPECT(0x4187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xbc19));
        // A6 028F
        gbc.setState(0x16bd, 0x4f16, 0x3d40, 0x8444, 0x68d2, 0x6784, 0x0, 0x0);
        gbc.writeMem(0x16bd, { 0xa6 });
        gbc.writeMem(0x6784, { 0x79 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4f16, gbc.sp());
        EXPECT(0x16be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0290
        gbc.setState(0x180b, 0xdba, 0xb100, 0x5e5c, 0x630, 0xff9c, 0x0, 0x1);
        gbc.writeMem(0x180b, { 0xa6 });
        gbc.writeMem(0xff9c, { 0xb6 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdba, gbc.sp());
        EXPECT(0x180c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xff9c));
        // A6 0291
        gbc.setState(0xbe64, 0x43e8, 0x9120, 0xcd4, 0x91eb, 0xf69d, 0x0, 0x1);
        gbc.writeMem(0xbe64, { 0xa6 });
        gbc.writeMem(0xf69d, { 0x42 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x43e8, gbc.sp());
        EXPECT(0xbe65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbe64));
        EXPECT(0x42, gbc.readMem(0xf69d));
        // A6 0292
        gbc.setState(0xe24b, 0x5a1, 0xb4d0, 0x6d84, 0xb07d, 0x918b, 0x0, 0x1);
        gbc.writeMem(0x918b, { 0x85 });
        gbc.writeMem(0xe24b, { 0xa6 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5a1, gbc.sp());
        EXPECT(0xe24c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x918b));
        EXPECT(0xa6, gbc.readMem(0xe24b));
        // A6 0293
        gbc.setState(0xafb2, 0x6a9b, 0x4da0, 0x3b6b, 0x3a7d, 0xfe1d, 0x1, 0x1);
        gbc.writeMem(0xafb2, { 0xa6 });
        gbc.writeMem(0xfe1d, { 0xd2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6a9b, gbc.sp());
        EXPECT(0xafb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xafb2));
        EXPECT(0xd2, gbc.readMem(0xfe1d));
        // A6 0294
        gbc.setState(0x2846, 0x164d, 0x6880, 0x1708, 0x7000, 0x796d, 0x1, 0x0);
        gbc.writeMem(0x2846, { 0xa6 });
        gbc.writeMem(0x796d, { 0x23 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x164d, gbc.sp());
        EXPECT(0x2847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0295
        gbc.setState(0xc150, 0x8df2, 0xde30, 0xdd5f, 0x729d, 0x3d31, 0x1, 0x1);
        gbc.writeMem(0x3d31, { 0x26 });
        gbc.writeMem(0xc150, { 0xa6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8df2, gbc.sp());
        EXPECT(0xc151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc150));
        // A6 0296
        gbc.setState(0xd941, 0xb1d3, 0xfa90, 0x1d8f, 0x2aab, 0xd008, 0x1, 0x0);
        gbc.writeMem(0xd008, { 0xb4 });
        gbc.writeMem(0xd941, { 0xa6 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb1d3, gbc.sp());
        EXPECT(0xd942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xd008));
        EXPECT(0xa6, gbc.readMem(0xd941));
        // A6 0297
        gbc.setState(0x47e8, 0xe48b, 0xf510, 0x2eec, 0xf0b, 0x5e6d, 0x0, 0x0);
        gbc.writeMem(0x47e8, { 0xa6 });
        gbc.writeMem(0x5e6d, { 0x9e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe48b, gbc.sp());
        EXPECT(0x47e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0298
        gbc.setState(0x4d0a, 0xf967, 0xd760, 0x3b8b, 0x87cc, 0x1a31, 0x0, 0x0);
        gbc.writeMem(0x1a31, { 0x5 });
        gbc.writeMem(0x4d0a, { 0xa6 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf967, gbc.sp());
        EXPECT(0x4d0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0299
        gbc.setState(0x2725, 0x5b9, 0xe0b0, 0x7d2f, 0xe373, 0xd543, 0x1, 0x0);
        gbc.writeMem(0x2725, { 0xa6 });
        gbc.writeMem(0xd543, { 0x76 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5b9, gbc.sp());
        EXPECT(0x2726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd543));
        // A6 029A
        gbc.setState(0x57e1, 0x8110, 0xd620, 0xd676, 0xd07e, 0xa5ec, 0x0, 0x1);
        gbc.writeMem(0x57e1, { 0xa6 });
        gbc.writeMem(0xa5ec, { 0xfb });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8110, gbc.sp());
        EXPECT(0x57e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xa5ec));
        // A6 029B
        gbc.setState(0xdea3, 0x22bd, 0x2530, 0x3987, 0xbf59, 0x364b, 0x1, 0x0);
        gbc.writeMem(0x364b, { 0x11 });
        gbc.writeMem(0xdea3, { 0xa6 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x22bd, gbc.sp());
        EXPECT(0xdea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xdea3));
        // A6 029C
        gbc.setState(0x789e, 0x651a, 0xf4a0, 0x1942, 0x74ec, 0x23cf, 0x0, 0x0);
        gbc.writeMem(0x23cf, { 0x7c });
        gbc.writeMem(0x789e, { 0xa6 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x651a, gbc.sp());
        EXPECT(0x789f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 029D
        gbc.setState(0x21f1, 0xcc77, 0x6d00, 0x80c2, 0xc3f5, 0x73c, 0x0, 0x1);
        gbc.writeMem(0x73c, { 0x3d });
        gbc.writeMem(0x21f1, { 0xa6 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xcc77, gbc.sp());
        EXPECT(0x21f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 029E
        gbc.setState(0xbecf, 0x4fbe, 0xfb0, 0x2736, 0xc682, 0xc1f2, 0x1, 0x1);
        gbc.writeMem(0xbecf, { 0xa6 });
        gbc.writeMem(0xc1f2, { 0xa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4fbe, gbc.sp());
        EXPECT(0xbed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbecf));
        EXPECT(0xa, gbc.readMem(0xc1f2));
        // A6 029F
        gbc.setState(0x1c69, 0x6c10, 0xc630, 0xa058, 0xf055, 0x63a1, 0x1, 0x1);
        gbc.writeMem(0x1c69, { 0xa6 });
        gbc.writeMem(0x63a1, { 0x66 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6c10, gbc.sp());
        EXPECT(0x1c6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02A0
        gbc.setState(0x81d7, 0x1335, 0x9140, 0xb01c, 0xec3e, 0x568b, 0x0, 0x0);
        gbc.writeMem(0x568b, { 0x91 });
        gbc.writeMem(0x81d7, { 0xa6 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1335, gbc.sp());
        EXPECT(0x81d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x81d7));
        // A6 02A1
        gbc.setState(0xccdd, 0x5503, 0xbfa0, 0x8b1a, 0x7088, 0x81ef, 0x1, 0x0);
        gbc.writeMem(0x81ef, { 0x3f });
        gbc.writeMem(0xccdd, { 0xa6 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5503, gbc.sp());
        EXPECT(0xccde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x81ef));
        EXPECT(0xa6, gbc.readMem(0xccdd));
        // A6 02A2
        gbc.setState(0x1c14, 0x6450, 0x88c0, 0xeae8, 0xef2b, 0x633b, 0x0, 0x1);
        gbc.writeMem(0x1c14, { 0xa6 });
        gbc.writeMem(0x633b, { 0x14 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6450, gbc.sp());
        EXPECT(0x1c15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02A3
        gbc.setState(0xb408, 0x7f46, 0x6af0, 0x1251, 0x85cf, 0xca68, 0x1, 0x0);
        gbc.writeMem(0xb408, { 0xa6 });
        gbc.writeMem(0xca68, { 0x4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7f46, gbc.sp());
        EXPECT(0xb409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb408));
        EXPECT(0x4, gbc.readMem(0xca68));
        // A6 02A4
        gbc.setState(0x3990, 0x627b, 0x3430, 0x6cf2, 0x4e05, 0xc0ec, 0x0, 0x1);
        gbc.writeMem(0x3990, { 0xa6 });
        gbc.writeMem(0xc0ec, { 0x7c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x627b, gbc.sp());
        EXPECT(0x3991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xc0ec));
        // A6 02A5
        gbc.setState(0xc809, 0x4e4e, 0x7730, 0x9ca6, 0x279c, 0x3041, 0x1, 0x0);
        gbc.writeMem(0x3041, { 0x9d });
        gbc.writeMem(0xc809, { 0xa6 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4e4e, gbc.sp());
        EXPECT(0xc80a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc809));
        // A6 02A6
        gbc.setState(0x6540, 0xcbcb, 0x57a0, 0x7c98, 0xb3ca, 0x6364, 0x1, 0x0);
        gbc.writeMem(0x6364, { 0x95 });
        gbc.writeMem(0x6540, { 0xa6 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcbcb, gbc.sp());
        EXPECT(0x6541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02A7
        gbc.setState(0x6f8e, 0x528f, 0xc500, 0xabdf, 0x214, 0x3ece, 0x1, 0x1);
        gbc.writeMem(0x3ece, { 0x27 });
        gbc.writeMem(0x6f8e, { 0xa6 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x528f, gbc.sp());
        EXPECT(0x6f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02A8
        gbc.setState(0xd357, 0xe2c4, 0xeb40, 0xf9e5, 0x5bb3, 0xef40, 0x0, 0x1);
        gbc.writeMem(0xd357, { 0xa6 });
        gbc.writeMem(0xef40, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe2c4, gbc.sp());
        EXPECT(0xd358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd357));
        EXPECT(0xe1, gbc.readMem(0xef40));
        // A6 02A9
        gbc.setState(0xdd2, 0x478, 0xcc30, 0x10a1, 0xd123, 0x472b, 0x0, 0x1);
        gbc.writeMem(0xdd2, { 0xa6 });
        gbc.writeMem(0x472b, { 0x9e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x478, gbc.sp());
        EXPECT(0xdd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02AA
        gbc.setState(0x8638, 0x3030, 0xdfa0, 0xc9ed, 0x7571, 0x9b8a, 0x1, 0x1);
        gbc.writeMem(0x8638, { 0xa6 });
        gbc.writeMem(0x9b8a, { 0xe8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3030, gbc.sp());
        EXPECT(0x8639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8638));
        EXPECT(0xe8, gbc.readMem(0x9b8a));
        // A6 02AB
        gbc.setState(0x407e, 0xece3, 0x48e0, 0xeef3, 0xa199, 0x6c0f, 0x0, 0x0);
        gbc.writeMem(0x407e, { 0xa6 });
        gbc.writeMem(0x6c0f, { 0x2a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xece3, gbc.sp());
        EXPECT(0x407f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02AC
        gbc.setState(0x70d4, 0x5ef6, 0xc6b0, 0xbdad, 0x2f95, 0xf836, 0x1, 0x0);
        gbc.writeMem(0x70d4, { 0xa6 });
        gbc.writeMem(0xf836, { 0x75 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5ef6, gbc.sp());
        EXPECT(0x70d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xf836));
        // A6 02AD
        gbc.setState(0x3aa4, 0x91a7, 0x3da0, 0x2bda, 0x338d, 0x40f2, 0x1, 0x0);
        gbc.writeMem(0x3aa4, { 0xa6 });
        gbc.writeMem(0x40f2, { 0x95 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x91a7, gbc.sp());
        EXPECT(0x3aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02AE
        gbc.setState(0xa3b2, 0xcd05, 0x6080, 0x3039, 0x5957, 0xd995, 0x0, 0x0);
        gbc.writeMem(0xa3b2, { 0xa6 });
        gbc.writeMem(0xd995, { 0x9b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xcd05, gbc.sp());
        EXPECT(0xa3b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa3b2));
        EXPECT(0x9b, gbc.readMem(0xd995));
        // A6 02AF
        gbc.setState(0xce74, 0x71f, 0x14b0, 0x5bb8, 0xd588, 0x17f0, 0x0, 0x0);
        gbc.writeMem(0x17f0, { 0x4e });
        gbc.writeMem(0xce74, { 0xa6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x71f, gbc.sp());
        EXPECT(0xce75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xce74));
        // A6 02B0
        gbc.setState(0x1d85, 0xb2ce, 0xe820, 0x8bbe, 0xa37a, 0x60fa, 0x1, 0x1);
        gbc.writeMem(0x1d85, { 0xa6 });
        gbc.writeMem(0x60fa, { 0x6c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb2ce, gbc.sp());
        EXPECT(0x1d86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02B1
        gbc.setState(0x8435, 0x5ca4, 0x71f0, 0xaf08, 0xc5c4, 0x5881, 0x1, 0x1);
        gbc.writeMem(0x5881, { 0xf4 });
        gbc.writeMem(0x8435, { 0xa6 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5ca4, gbc.sp());
        EXPECT(0x8436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8435));
        // A6 02B2
        gbc.setState(0xdb13, 0x55fd, 0x33a0, 0x8f27, 0xbdad, 0x17da, 0x1, 0x1);
        gbc.writeMem(0x17da, { 0x9f });
        gbc.writeMem(0xdb13, { 0xa6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x55fd, gbc.sp());
        EXPECT(0xdb14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xdb13));
        // A6 02B3
        gbc.setState(0x5c94, 0xf2f3, 0x8a20, 0x3c26, 0xf37a, 0x2640, 0x0, 0x1);
        gbc.writeMem(0x2640, { 0x2a });
        gbc.writeMem(0x5c94, { 0xa6 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf2f3, gbc.sp());
        EXPECT(0x5c95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02B4
        gbc.setState(0xc282, 0xc580, 0xf9e0, 0xd836, 0xe5d3, 0xf91, 0x0, 0x0);
        gbc.writeMem(0xf91, { 0x7a });
        gbc.writeMem(0xc282, { 0xa6 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc580, gbc.sp());
        EXPECT(0xc283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc282));
        // A6 02B5
        gbc.setState(0x7836, 0x6a1f, 0xf5d0, 0xd55a, 0x31df, 0x1fce, 0x1, 0x0);
        gbc.writeMem(0x1fce, { 0xa4 });
        gbc.writeMem(0x7836, { 0xa6 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6a1f, gbc.sp());
        EXPECT(0x7837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02B6
        gbc.setState(0xa305, 0x8050, 0x58c0, 0xcc2c, 0x6a08, 0x139d, 0x0, 0x0);
        gbc.writeMem(0x139d, { 0x30 });
        gbc.writeMem(0xa305, { 0xa6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8050, gbc.sp());
        EXPECT(0xa306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa305));
        // A6 02B7
        gbc.setState(0x9a81, 0x95dc, 0x9c60, 0xb74c, 0x2f, 0x3ce6, 0x0, 0x0);
        gbc.writeMem(0x3ce6, { 0x91 });
        gbc.writeMem(0x9a81, { 0xa6 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x95dc, gbc.sp());
        EXPECT(0x9a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9a81));
        // A6 02B8
        gbc.setState(0x755e, 0x727d, 0x34d0, 0x87a9, 0xbee7, 0x1163, 0x1, 0x0);
        gbc.writeMem(0x1163, { 0xdb });
        gbc.writeMem(0x755e, { 0xa6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x727d, gbc.sp());
        EXPECT(0x755f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02B9
        gbc.setState(0x4e1e, 0x440d, 0xd2d0, 0xbe2d, 0x55, 0xd796, 0x0, 0x1);
        gbc.writeMem(0x4e1e, { 0xa6 });
        gbc.writeMem(0xd796, { 0x46 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x440d, gbc.sp());
        EXPECT(0x4e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xd796));
        // A6 02BA
        gbc.setState(0x470f, 0x6809, 0xffc0, 0x8048, 0x2f69, 0xa6c2, 0x0, 0x0);
        gbc.writeMem(0x470f, { 0xa6 });
        gbc.writeMem(0xa6c2, { 0x5d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6809, gbc.sp());
        EXPECT(0x4710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa6c2));
        // A6 02BB
        gbc.setState(0xed28, 0x63f6, 0x3fa0, 0x98ac, 0x25ba, 0x6686, 0x1, 0x0);
        gbc.writeMem(0x6686, { 0xb0 });
        gbc.writeMem(0xed28, { 0xa6 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x63f6, gbc.sp());
        EXPECT(0xed29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xed28));
        // A6 02BD
        gbc.setState(0x45dc, 0x3de0, 0x1fe0, 0xe65a, 0x8197, 0x17ab, 0x0, 0x0);
        gbc.writeMem(0x17ab, { 0xa0 });
        gbc.writeMem(0x45dc, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3de0, gbc.sp());
        EXPECT(0x45dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02BE
        gbc.setState(0x8a16, 0x57e8, 0xa5a0, 0x2adc, 0x118c, 0x3eb, 0x0, 0x0);
        gbc.writeMem(0x3eb, { 0x34 });
        gbc.writeMem(0x8a16, { 0xa6 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x57e8, gbc.sp());
        EXPECT(0x8a17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8a16));
        // A6 02BF
        gbc.setState(0x7d42, 0xea4e, 0xe040, 0x444a, 0x5460, 0xade, 0x1, 0x1);
        gbc.writeMem(0xade, { 0x92 });
        gbc.writeMem(0x7d42, { 0xa6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xea4e, gbc.sp());
        EXPECT(0x7d43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02C0
        gbc.setState(0xb67a, 0xf832, 0x9d80, 0x5c5d, 0xfe4b, 0x28d, 0x0, 0x1);
        gbc.writeMem(0x28d, { 0x23 });
        gbc.writeMem(0xb67a, { 0xa6 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf832, gbc.sp());
        EXPECT(0xb67b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb67a));
        // A6 02C1
        gbc.setState(0x47e4, 0x1d25, 0xf0, 0x797b, 0xe778, 0xe883, 0x0, 0x0);
        gbc.writeMem(0x47e4, { 0xa6 });
        gbc.writeMem(0xe883, { 0x1c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1d25, gbc.sp());
        EXPECT(0x47e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xe883));
        // A6 02C2
        gbc.setState(0x987b, 0xd6e7, 0x46f0, 0x9223, 0xfade, 0x588e, 0x0, 0x0);
        gbc.writeMem(0x588e, { 0x6c });
        gbc.writeMem(0x987b, { 0xa6 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd6e7, gbc.sp());
        EXPECT(0x987c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x987b));
        // A6 02C3
        gbc.setState(0x6165, 0x329e, 0xe210, 0x846, 0x6441, 0xbeb8, 0x0, 0x0);
        gbc.writeMem(0x6165, { 0xa6 });
        gbc.writeMem(0xbeb8, { 0x65 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x329e, gbc.sp());
        EXPECT(0x6166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbeb8));
        // A6 02C4
        gbc.setState(0x3345, 0x85a7, 0x9390, 0xf16, 0x9127, 0x4276, 0x0, 0x0);
        gbc.writeMem(0x3345, { 0xa6 });
        gbc.writeMem(0x4276, { 0x42 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x85a7, gbc.sp());
        EXPECT(0x3346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02C5
        gbc.setState(0x3afb, 0x9437, 0x7980, 0x80a6, 0xb650, 0xacad, 0x1, 0x0);
        gbc.writeMem(0x3afb, { 0xa6 });
        gbc.writeMem(0xacad, { 0x3c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9437, gbc.sp());
        EXPECT(0x3afc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xacad));
        // A6 02C6
        gbc.setState(0x8341, 0x92fb, 0xfff0, 0xf2f1, 0x7cba, 0x9b5a, 0x1, 0x1);
        gbc.writeMem(0x8341, { 0xa6 });
        gbc.writeMem(0x9b5a, { 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x92fb, gbc.sp());
        EXPECT(0x8342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8341));
        EXPECT(0xb, gbc.readMem(0x9b5a));
        // A6 02C7
        gbc.setState(0x285, 0x10bd, 0x7ea0, 0x56df, 0x2c33, 0x8520, 0x1, 0x1);
        gbc.writeMem(0x285, { 0xa6 });
        gbc.writeMem(0x8520, { 0xec });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x10bd, gbc.sp());
        EXPECT(0x286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x8520));
        // A6 02C8
        gbc.setState(0xdaac, 0xeaf4, 0x6b60, 0x5bba, 0x5b7e, 0xfb2c, 0x1, 0x0);
        gbc.writeMem(0xdaac, { 0xa6 });
        gbc.writeMem(0xfb2c, { 0xee });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xeaf4, gbc.sp());
        EXPECT(0xdaad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xdaac));
        EXPECT(0xee, gbc.readMem(0xfb2c));
        // A6 02C9
        gbc.setState(0x7ca1, 0x4f90, 0x1d80, 0xc652, 0x5b38, 0x524, 0x1, 0x0);
        gbc.writeMem(0x524, { 0xb4 });
        gbc.writeMem(0x7ca1, { 0xa6 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4f90, gbc.sp());
        EXPECT(0x7ca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02CA
        gbc.setState(0x50b, 0xdb18, 0x2450, 0xaabe, 0xcb2c, 0x59c2, 0x0, 0x0);
        gbc.writeMem(0x50b, { 0xa6 });
        gbc.writeMem(0x59c2, { 0x18 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdb18, gbc.sp());
        EXPECT(0x50c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02CB
        gbc.setState(0x5d0f, 0x1fbc, 0x220, 0xf73a, 0xa234, 0xc2ed, 0x1, 0x1);
        gbc.writeMem(0x5d0f, { 0xa6 });
        gbc.writeMem(0xc2ed, { 0xca });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1fbc, gbc.sp());
        EXPECT(0x5d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xc2ed));
        // A6 02CC
        gbc.setState(0xd805, 0x1a7, 0x2090, 0x4bb8, 0xabad, 0x9546, 0x1, 0x1);
        gbc.writeMem(0x9546, { 0x25 });
        gbc.writeMem(0xd805, { 0xa6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1a7, gbc.sp());
        EXPECT(0xd806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9546));
        EXPECT(0xa6, gbc.readMem(0xd805));
        // A6 02CD
        gbc.setState(0xb867, 0x46ed, 0xaf0, 0xa8e5, 0x3bd4, 0x7700, 0x0, 0x1);
        gbc.writeMem(0x7700, { 0x44 });
        gbc.writeMem(0xb867, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x46ed, gbc.sp());
        EXPECT(0xb868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb867));
        // A6 02CE
        gbc.setState(0x78b2, 0x8bd8, 0x4fc0, 0xe117, 0x4d60, 0xe15, 0x1, 0x0);
        gbc.writeMem(0xe15, { 0x1b });
        gbc.writeMem(0x78b2, { 0xa6 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8bd8, gbc.sp());
        EXPECT(0x78b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02CF
        gbc.setState(0x74f7, 0x5be3, 0x9160, 0x93bf, 0xb7c6, 0xca6d, 0x0, 0x1);
        gbc.writeMem(0x74f7, { 0xa6 });
        gbc.writeMem(0xca6d, { 0x7d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5be3, gbc.sp());
        EXPECT(0x74f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xca6d));
        // A6 02D0
        gbc.setState(0x6418, 0x5d50, 0x8670, 0x5872, 0x9ddb, 0xcce3, 0x1, 0x1);
        gbc.writeMem(0x6418, { 0xa6 });
        gbc.writeMem(0xcce3, { 0x23 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5d50, gbc.sp());
        EXPECT(0x6419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xcce3));
        // A6 02D1
        gbc.setState(0x2833, 0x51ef, 0x8500, 0xe057, 0x132b, 0x1087, 0x1, 0x1);
        gbc.writeMem(0x1087, { 0xa });
        gbc.writeMem(0x2833, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x51ef, gbc.sp());
        EXPECT(0x2834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02D2
        gbc.setState(0x41d2, 0x6e25, 0xb490, 0xd39a, 0x89bf, 0xa789, 0x0, 0x0);
        gbc.writeMem(0x41d2, { 0xa6 });
        gbc.writeMem(0xa789, { 0x92 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6e25, gbc.sp());
        EXPECT(0x41d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa789));
        // A6 02D3
        gbc.setState(0xbee6, 0xb8cf, 0xde10, 0xaf3a, 0xf7f2, 0x2884, 0x0, 0x0);
        gbc.writeMem(0x2884, { 0xff });
        gbc.writeMem(0xbee6, { 0xa6 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb8cf, gbc.sp());
        EXPECT(0xbee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbee6));
        // A6 02D4
        gbc.setState(0x8a3a, 0x3ab, 0xb860, 0xfa8e, 0x8021, 0xfa8, 0x0, 0x0);
        gbc.writeMem(0xfa8, { 0x1c });
        gbc.writeMem(0x8a3a, { 0xa6 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3ab, gbc.sp());
        EXPECT(0x8a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8a3a));
        // A6 02D5
        gbc.setState(0x19a, 0x33e, 0xbc70, 0x6d33, 0x9451, 0xad0b, 0x1, 0x1);
        gbc.writeMem(0x19a, { 0xa6 });
        gbc.writeMem(0xad0b, { 0x35 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x33e, gbc.sp());
        EXPECT(0x19b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xad0b));
        // A6 02D6
        gbc.setState(0x16d7, 0x85b3, 0x3740, 0x3aa2, 0x9943, 0x77ff, 0x0, 0x1);
        gbc.writeMem(0x16d7, { 0xa6 });
        gbc.writeMem(0x77ff, { 0x45 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x85b3, gbc.sp());
        EXPECT(0x16d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02D7
        gbc.setState(0xb75c, 0x12b6, 0xe390, 0xa5ac, 0x85b2, 0xd0b3, 0x0, 0x0);
        gbc.writeMem(0xb75c, { 0xa6 });
        gbc.writeMem(0xd0b3, { 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x12b6, gbc.sp());
        EXPECT(0xb75d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb75c));
        EXPECT(0x2f, gbc.readMem(0xd0b3));
        // A6 02D8
        gbc.setState(0x14d, 0x58a8, 0xe4e0, 0x1b1, 0x19da, 0x817a, 0x0, 0x0);
        gbc.writeMem(0x14d, { 0xa6 });
        gbc.writeMem(0x817a, { 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x58a8, gbc.sp());
        EXPECT(0x14e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x817a));
        // A6 02D9
        gbc.setState(0x1b74, 0x2fda, 0x8560, 0x5a07, 0x2ba1, 0xc30e, 0x0, 0x1);
        gbc.writeMem(0x1b74, { 0xa6 });
        gbc.writeMem(0xc30e, { 0xfe });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2fda, gbc.sp());
        EXPECT(0x1b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc30e));
        // A6 02DA
        gbc.setState(0x9e03, 0x438, 0x58e0, 0x67a8, 0x6e10, 0xac03, 0x0, 0x1);
        gbc.writeMem(0x9e03, { 0xa6 });
        gbc.writeMem(0xac03, { 0xd6 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x438, gbc.sp());
        EXPECT(0x9e04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9e03));
        EXPECT(0xd6, gbc.readMem(0xac03));
        // A6 02DB
        gbc.setState(0x7dad, 0x704b, 0xd040, 0xdd64, 0x71d2, 0x38ec, 0x0, 0x0);
        gbc.writeMem(0x38ec, { 0x52 });
        gbc.writeMem(0x7dad, { 0xa6 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x704b, gbc.sp());
        EXPECT(0x7dae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02DC
        gbc.setState(0x98bc, 0x31a5, 0x7250, 0x214e, 0xead6, 0xda51, 0x1, 0x0);
        gbc.writeMem(0x98bc, { 0xa6 });
        gbc.writeMem(0xda51, { 0xbf });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x31a5, gbc.sp());
        EXPECT(0x98bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x98bc));
        EXPECT(0xbf, gbc.readMem(0xda51));
        // A6 02DD
        gbc.setState(0x2da6, 0x6b4d, 0xd110, 0x8916, 0x5f80, 0xfc0d, 0x1, 0x0);
        gbc.writeMem(0x2da6, { 0xa6 });
        gbc.writeMem(0xfc0d, { 0xee });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6b4d, gbc.sp());
        EXPECT(0x2da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xfc0d));
        // A6 02DE
        gbc.setState(0x9687, 0xaf4f, 0x5d40, 0x327f, 0x6896, 0x7e73, 0x1, 0x1);
        gbc.writeMem(0x7e73, { 0xae });
        gbc.writeMem(0x9687, { 0xa6 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xaf4f, gbc.sp());
        EXPECT(0x9688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9687));
        // A6 02DF
        gbc.setState(0x6329, 0x14e1, 0x2940, 0x3e56, 0xb0e2, 0x7b77, 0x0, 0x0);
        gbc.writeMem(0x6329, { 0xa6 });
        gbc.writeMem(0x7b77, { 0x74 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x14e1, gbc.sp());
        EXPECT(0x632a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02E0
        gbc.setState(0xbff3, 0xac3d, 0x3d20, 0x3c25, 0x84b2, 0x413c, 0x1, 0x1);
        gbc.writeMem(0x413c, { 0xde });
        gbc.writeMem(0xbff3, { 0xa6 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xac3d, gbc.sp());
        EXPECT(0xbff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbff3));
        // A6 02E1
        gbc.setState(0x4bf5, 0x8368, 0xcd60, 0x271a, 0x3df7, 0x222f, 0x1, 0x0);
        gbc.writeMem(0x222f, { 0x39 });
        gbc.writeMem(0x4bf5, { 0xa6 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8368, gbc.sp());
        EXPECT(0x4bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02E2
        gbc.setState(0x755b, 0x6ec6, 0xe1e0, 0x1be2, 0xaab4, 0x71aa, 0x1, 0x1);
        gbc.writeMem(0x71aa, { 0x37 });
        gbc.writeMem(0x755b, { 0xa6 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6ec6, gbc.sp());
        EXPECT(0x755c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02E3
        gbc.setState(0xc2d5, 0x1373, 0xe690, 0x84cf, 0xe519, 0x92ce, 0x0, 0x1);
        gbc.writeMem(0x92ce, { 0xcb });
        gbc.writeMem(0xc2d5, { 0xa6 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1373, gbc.sp());
        EXPECT(0xc2d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ce));
        EXPECT(0xa6, gbc.readMem(0xc2d5));
        // A6 02E4
        gbc.setState(0x452a, 0xe69c, 0x8390, 0x7bd0, 0xc0fe, 0x927a, 0x1, 0x0);
        gbc.writeMem(0x452a, { 0xa6 });
        gbc.writeMem(0x927a, { 0x2e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe69c, gbc.sp());
        EXPECT(0x452b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x927a));
        // A6 02E5
        gbc.setState(0x89cf, 0x47f9, 0xc470, 0x2fe3, 0xaf66, 0xe621, 0x1, 0x1);
        gbc.writeMem(0x89cf, { 0xa6 });
        gbc.writeMem(0xe621, { 0x3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x47f9, gbc.sp());
        EXPECT(0x89d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x89cf));
        EXPECT(0x3, gbc.readMem(0xe621));
        // A6 02E6
        gbc.setState(0x2eae, 0x7115, 0xab70, 0x9031, 0x83b1, 0x8877, 0x0, 0x0);
        gbc.writeMem(0x2eae, { 0xa6 });
        gbc.writeMem(0x8877, { 0x19 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7115, gbc.sp());
        EXPECT(0x2eaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8877));
        // A6 02E7
        gbc.setState(0x8824, 0x91e9, 0x1fd0, 0x140b, 0xf265, 0x64e2, 0x1, 0x0);
        gbc.writeMem(0x64e2, { 0x4e });
        gbc.writeMem(0x8824, { 0xa6 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x91e9, gbc.sp());
        EXPECT(0x8825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8824));
        // A6 02E8
        gbc.setState(0xd8c9, 0xae4f, 0xc2d0, 0x651e, 0xb57f, 0x3e9a, 0x0, 0x0);
        gbc.writeMem(0x3e9a, { 0xe4 });
        gbc.writeMem(0xd8c9, { 0xa6 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xae4f, gbc.sp());
        EXPECT(0xd8ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd8c9));
        // A6 02E9
        gbc.setState(0xc25f, 0xdf22, 0xdaf0, 0xe801, 0xbe49, 0x6c9a, 0x1, 0x1);
        gbc.writeMem(0x6c9a, { 0x53 });
        gbc.writeMem(0xc25f, { 0xa6 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdf22, gbc.sp());
        EXPECT(0xc260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc25f));
        // A6 02EA
        gbc.setState(0xd374, 0x3d82, 0xee40, 0x45c2, 0x2a5c, 0x46a6, 0x0, 0x1);
        gbc.writeMem(0x46a6, { 0xab });
        gbc.writeMem(0xd374, { 0xa6 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3d82, gbc.sp());
        EXPECT(0xd375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd374));
        // A6 02EB
        gbc.setState(0x7a61, 0x947d, 0xb970, 0xcb31, 0xbad0, 0xeec7, 0x0, 0x0);
        gbc.writeMem(0x7a61, { 0xa6 });
        gbc.writeMem(0xeec7, { 0x37 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x947d, gbc.sp());
        EXPECT(0x7a62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xeec7));
        // A6 02EC
        gbc.setState(0x4717, 0x692b, 0xff70, 0xfa4b, 0xbdb2, 0x1919, 0x0, 0x1);
        gbc.writeMem(0x1919, { 0x84 });
        gbc.writeMem(0x4717, { 0xa6 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x692b, gbc.sp());
        EXPECT(0x4718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02ED
        gbc.setState(0x9529, 0x8d06, 0xb740, 0x8fba, 0x2555, 0x8c60, 0x1, 0x1);
        gbc.writeMem(0x8c60, { 0xc });
        gbc.writeMem(0x9529, { 0xa6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8d06, gbc.sp());
        EXPECT(0x952a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8c60));
        EXPECT(0xa6, gbc.readMem(0x9529));
        // A6 02EE
        gbc.setState(0x3032, 0xca05, 0x6e20, 0x947d, 0x2624, 0x5e55, 0x1, 0x1);
        gbc.writeMem(0x3032, { 0xa6 });
        gbc.writeMem(0x5e55, { 0x8e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xca05, gbc.sp());
        EXPECT(0x3033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02EF
        gbc.setState(0xea0b, 0x5e51, 0x1ea0, 0x863a, 0xca23, 0x5ae4, 0x1, 0x0);
        gbc.writeMem(0x5ae4, { 0xee });
        gbc.writeMem(0xea0b, { 0xa6 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5e51, gbc.sp());
        EXPECT(0xea0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xea0b));
        // A6 02F0
        gbc.setState(0xde9b, 0xb54f, 0xcf90, 0xfaa, 0x2a6a, 0xfe5f, 0x1, 0x0);
        gbc.writeMem(0xde9b, { 0xa6 });
        gbc.writeMem(0xfe5f, { 0x3b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb54f, gbc.sp());
        EXPECT(0xde9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xde9b));
        EXPECT(0x3b, gbc.readMem(0xfe5f));
        // A6 02F1
        gbc.setState(0x77d9, 0xcca0, 0xc620, 0x87ce, 0xf020, 0x12f7, 0x1, 0x1);
        gbc.writeMem(0x12f7, { 0x22 });
        gbc.writeMem(0x77d9, { 0xa6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xcca0, gbc.sp());
        EXPECT(0x77da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02F2
        gbc.setState(0x8dec, 0xdc55, 0xfe10, 0xb427, 0x438d, 0xa402, 0x1, 0x1);
        gbc.writeMem(0x8dec, { 0xa6 });
        gbc.writeMem(0xa402, { 0x79 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdc55, gbc.sp());
        EXPECT(0x8ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8dec));
        EXPECT(0x79, gbc.readMem(0xa402));
        // A6 02F3
        gbc.setState(0xdde0, 0x9c35, 0x71a0, 0x38e4, 0x400, 0x65d2, 0x1, 0x0);
        gbc.writeMem(0x65d2, { 0x39 });
        gbc.writeMem(0xdde0, { 0xa6 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9c35, gbc.sp());
        EXPECT(0xdde1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xdde0));
        // A6 02F4
        gbc.setState(0xe4a6, 0xea2e, 0xcbe0, 0x2cd9, 0xa814, 0x3d8e, 0x1, 0x1);
        gbc.writeMem(0x3d8e, { 0x98 });
        gbc.writeMem(0xe4a6, { 0xa6 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xea2e, gbc.sp());
        EXPECT(0xe4a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe4a6));
        // A6 02F5
        gbc.setState(0xddb, 0x6e2, 0x5b80, 0x5eb5, 0xbafa, 0x17bb, 0x1, 0x0);
        gbc.writeMem(0xddb, { 0xa6 });
        gbc.writeMem(0x17bb, { 0xf });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6e2, gbc.sp());
        EXPECT(0xddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02F6
        gbc.setState(0x15e, 0xe1b0, 0xe550, 0xf81d, 0xdcec, 0xc7ad, 0x1, 0x1);
        gbc.writeMem(0x15e, { 0xa6 });
        gbc.writeMem(0xc7ad, { 0xba });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe1b0, gbc.sp());
        EXPECT(0x15f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xc7ad));
        // A6 02F7
        gbc.setState(0x574b, 0x43b8, 0x61a0, 0xebed, 0x9843, 0xe6bf, 0x1, 0x0);
        gbc.writeMem(0x574b, { 0xa6 });
        gbc.writeMem(0xe6bf, { 0xb3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x43b8, gbc.sp());
        EXPECT(0x574c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe6bf));
        // A6 02F8
        gbc.setState(0x8565, 0x62cf, 0x7500, 0xc2fd, 0x7a93, 0x6766, 0x0, 0x0);
        gbc.writeMem(0x6766, { 0xaf });
        gbc.writeMem(0x8565, { 0xa6 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x62cf, gbc.sp());
        EXPECT(0x8566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8565));
        // A6 02F9
        gbc.setState(0x8aea, 0xafdc, 0xf340, 0x3891, 0x10f8, 0x5beb, 0x1, 0x1);
        gbc.writeMem(0x5beb, { 0x28 });
        gbc.writeMem(0x8aea, { 0xa6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xafdc, gbc.sp());
        EXPECT(0x8aeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8aea));
        // A6 02FA
        gbc.setState(0xa0de, 0xaab2, 0x5670, 0x3e9d, 0x87e0, 0x919e, 0x1, 0x1);
        gbc.writeMem(0x919e, { 0x21 });
        gbc.writeMem(0xa0de, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xaab2, gbc.sp());
        EXPECT(0xa0df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x919e));
        EXPECT(0xa6, gbc.readMem(0xa0de));
        // A6 02FB
        gbc.setState(0x5671, 0xa315, 0xa130, 0xd5bb, 0x34d8, 0xbb17, 0x0, 0x0);
        gbc.writeMem(0x5671, { 0xa6 });
        gbc.writeMem(0xbb17, { 0xe4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa315, gbc.sp());
        EXPECT(0x5672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xbb17));
        // A6 02FC
        gbc.setState(0x4d5c, 0x18eb, 0x2d00, 0x35b9, 0xe020, 0x625c, 0x1, 0x0);
        gbc.writeMem(0x4d5c, { 0xa6 });
        gbc.writeMem(0x625c, { 0x5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x18eb, gbc.sp());
        EXPECT(0x4d5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 02FD
        gbc.setState(0xbc28, 0x2a6f, 0x5800, 0x1360, 0x55c8, 0xcf24, 0x1, 0x1);
        gbc.writeMem(0xbc28, { 0xa6 });
        gbc.writeMem(0xcf24, { 0xde });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2a6f, gbc.sp());
        EXPECT(0xbc29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbc28));
        EXPECT(0xde, gbc.readMem(0xcf24));
        // A6 02FE
        gbc.setState(0x9a66, 0x272f, 0xe8d0, 0xcbbf, 0x30b3, 0xba32, 0x0, 0x1);
        gbc.writeMem(0x9a66, { 0xa6 });
        gbc.writeMem(0xba32, { 0x16 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x272f, gbc.sp());
        EXPECT(0x9a67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9a66));
        EXPECT(0x16, gbc.readMem(0xba32));
        // A6 02FF
        gbc.setState(0xdcb9, 0x4d2b, 0x36a0, 0xad81, 0xd6ea, 0x35dd, 0x0, 0x1);
        gbc.writeMem(0x35dd, { 0x2 });
        gbc.writeMem(0xdcb9, { 0xa6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4d2b, gbc.sp());
        EXPECT(0xdcba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xdcb9));
        // A6 0300
        gbc.setState(0x3e72, 0xd700, 0x4ce0, 0xb593, 0x651a, 0xb60, 0x1, 0x1);
        gbc.writeMem(0xb60, { 0x51 });
        gbc.writeMem(0x3e72, { 0xa6 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd700, gbc.sp());
        EXPECT(0x3e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0301
        gbc.setState(0x548a, 0xf0c2, 0xccc0, 0x660f, 0x29e9, 0x94f0, 0x0, 0x0);
        gbc.writeMem(0x548a, { 0xa6 });
        gbc.writeMem(0x94f0, { 0xbf });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf0c2, gbc.sp());
        EXPECT(0x548b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x94f0));
        // A6 0302
        gbc.setState(0xd258, 0xe17b, 0x8ac0, 0xf227, 0x4aa6, 0x84ba, 0x1, 0x0);
        gbc.writeMem(0x84ba, { 0xf6 });
        gbc.writeMem(0xd258, { 0xa6 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe17b, gbc.sp());
        EXPECT(0xd259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x84ba));
        EXPECT(0xa6, gbc.readMem(0xd258));
        // A6 0303
        gbc.setState(0x97bb, 0xac64, 0x1e60, 0xfd5, 0xc36f, 0x6a8f, 0x1, 0x1);
        gbc.writeMem(0x6a8f, { 0x20 });
        gbc.writeMem(0x97bb, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xac64, gbc.sp());
        EXPECT(0x97bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x97bb));
        // A6 0304
        gbc.setState(0xd2ed, 0x1bb0, 0x5210, 0xcb93, 0x5803, 0x2c42, 0x1, 0x1);
        gbc.writeMem(0x2c42, { 0x8a });
        gbc.writeMem(0xd2ed, { 0xa6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1bb0, gbc.sp());
        EXPECT(0xd2ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd2ed));
        // A6 0305
        gbc.setState(0x588f, 0x8731, 0xa130, 0x5eb8, 0xb1b, 0x386d, 0x0, 0x0);
        gbc.writeMem(0x386d, { 0xaf });
        gbc.writeMem(0x588f, { 0xa6 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8731, gbc.sp());
        EXPECT(0x5890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0306
        gbc.setState(0x236d, 0xe39a, 0x73b0, 0xabd4, 0x33f9, 0xf53d, 0x0, 0x1);
        gbc.writeMem(0x236d, { 0xa6 });
        gbc.writeMem(0xf53d, { 0xeb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe39a, gbc.sp());
        EXPECT(0x236e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xf53d));
        // A6 0307
        gbc.setState(0xb2c5, 0xa21c, 0x4b80, 0xb516, 0x17a6, 0x5a10, 0x0, 0x0);
        gbc.writeMem(0x5a10, { 0x96 });
        gbc.writeMem(0xb2c5, { 0xa6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa21c, gbc.sp());
        EXPECT(0xb2c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb2c5));
        // A6 0308
        gbc.setState(0x748a, 0x6d27, 0x4090, 0x19c, 0x335e, 0xfd63, 0x0, 0x1);
        gbc.writeMem(0x748a, { 0xa6 });
        gbc.writeMem(0xfd63, { 0x71 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6d27, gbc.sp());
        EXPECT(0x748b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xfd63));
        // A6 0309
        gbc.setState(0x910a, 0xe53d, 0x76b0, 0x14e4, 0x404e, 0xb6ff, 0x1, 0x0);
        gbc.writeMem(0x910a, { 0xa6 });
        gbc.writeMem(0xb6ff, { 0xa2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe53d, gbc.sp());
        EXPECT(0x910b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x910a));
        EXPECT(0xa2, gbc.readMem(0xb6ff));
        // A6 030A
        gbc.setState(0xbeb6, 0xdb94, 0x18e0, 0x4f8d, 0xa6c, 0x52f, 0x1, 0x1);
        gbc.writeMem(0x52f, { 0xd0 });
        gbc.writeMem(0xbeb6, { 0xa6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xdb94, gbc.sp());
        EXPECT(0xbeb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbeb6));
        // A6 030B
        gbc.setState(0xd69c, 0x6363, 0xe7e0, 0x69c6, 0xfdbe, 0xf0cf, 0x1, 0x1);
        gbc.writeMem(0xd69c, { 0xa6 });
        gbc.writeMem(0xf0cf, { 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6363, gbc.sp());
        EXPECT(0xd69d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd69c));
        EXPECT(0x62, gbc.readMem(0xf0cf));
        // A6 030C
        gbc.setState(0x87f2, 0xc019, 0x3a20, 0x1300, 0xaa2b, 0x29b8, 0x1, 0x0);
        gbc.writeMem(0x29b8, { 0x70 });
        gbc.writeMem(0x87f2, { 0xa6 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc019, gbc.sp());
        EXPECT(0x87f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x87f2));
        // A6 030D
        gbc.setState(0xce41, 0x4d86, 0x9320, 0xede8, 0xa2d, 0x7b0a, 0x1, 0x0);
        gbc.writeMem(0x7b0a, { 0x10 });
        gbc.writeMem(0xce41, { 0xa6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4d86, gbc.sp());
        EXPECT(0xce42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xce41));
        // A6 030E
        gbc.setState(0x18fa, 0x8dcd, 0x3e0, 0xb838, 0x2774, 0xa365, 0x0, 0x0);
        gbc.writeMem(0x18fa, { 0xa6 });
        gbc.writeMem(0xa365, { 0x1f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8dcd, gbc.sp());
        EXPECT(0x18fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xa365));
        // A6 030F
        gbc.setState(0x2041, 0xb7c4, 0xa150, 0x7fcd, 0x4231, 0x6d52, 0x1, 0x1);
        gbc.writeMem(0x2041, { 0xa6 });
        gbc.writeMem(0x6d52, { 0xdd });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb7c4, gbc.sp());
        EXPECT(0x2042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0310
        gbc.setState(0xb3bc, 0xf19b, 0x8260, 0xecc6, 0x3f20, 0x7c5e, 0x1, 0x1);
        gbc.writeMem(0x7c5e, { 0x97 });
        gbc.writeMem(0xb3bc, { 0xa6 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf19b, gbc.sp());
        EXPECT(0xb3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb3bc));
        // A6 0311
        gbc.setState(0x7537, 0xc604, 0x69e0, 0x5e8f, 0x8fea, 0xc654, 0x0, 0x1);
        gbc.writeMem(0x7537, { 0xa6 });
        gbc.writeMem(0xc654, { 0x5a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc604, gbc.sp());
        EXPECT(0x7538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xc654));
        // A6 0312
        gbc.setState(0xabd1, 0x2ff2, 0x6f70, 0x3e34, 0xcb04, 0x1636, 0x1, 0x1);
        gbc.writeMem(0x1636, { 0x4a });
        gbc.writeMem(0xabd1, { 0xa6 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2ff2, gbc.sp());
        EXPECT(0xabd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xabd1));
        // A6 0313
        gbc.setState(0xa4c3, 0x6e14, 0xb7c0, 0x233a, 0x29d0, 0x132c, 0x0, 0x1);
        gbc.writeMem(0x132c, { 0x96 });
        gbc.writeMem(0xa4c3, { 0xa6 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6e14, gbc.sp());
        EXPECT(0xa4c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa4c3));
        // A6 0314
        gbc.setState(0x29bf, 0x2a91, 0xbf00, 0x9d06, 0x72be, 0x890, 0x1, 0x0);
        gbc.writeMem(0x890, { 0x42 });
        gbc.writeMem(0x29bf, { 0xa6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2a91, gbc.sp());
        EXPECT(0x29c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0316
        gbc.setState(0xe097, 0x222b, 0xd780, 0x145c, 0x5a5c, 0x9bcb, 0x1, 0x0);
        gbc.writeMem(0x9bcb, { 0x74 });
        gbc.writeMem(0xe097, { 0xa6 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x222b, gbc.sp());
        EXPECT(0xe098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9bcb));
        EXPECT(0xa6, gbc.readMem(0xe097));
        // A6 0317
        gbc.setState(0xbd1a, 0x848f, 0xb950, 0x83fe, 0x1714, 0xe7cb, 0x0, 0x1);
        gbc.writeMem(0xbd1a, { 0xa6 });
        gbc.writeMem(0xe7cb, { 0x70 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x848f, gbc.sp());
        EXPECT(0xbd1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbd1a));
        EXPECT(0x70, gbc.readMem(0xe7cb));
        // A6 0318
        gbc.setState(0x932c, 0xab68, 0x70b0, 0xf2c0, 0xae9f, 0x22ff, 0x1, 0x0);
        gbc.writeMem(0x22ff, { 0x13 });
        gbc.writeMem(0x932c, { 0xa6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xab68, gbc.sp());
        EXPECT(0x932d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x932c));
        // A6 0319
        gbc.setState(0x900d, 0xb2ba, 0x88b0, 0x4158, 0xc5e9, 0x991, 0x0, 0x1);
        gbc.writeMem(0x991, { 0x7c });
        gbc.writeMem(0x900d, { 0xa6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb2ba, gbc.sp());
        EXPECT(0x900e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x900d));
        // A6 031A
        gbc.setState(0xcb38, 0x2ce9, 0xc880, 0xc822, 0x29b3, 0x9a5b, 0x1, 0x0);
        gbc.writeMem(0x9a5b, { 0xd9 });
        gbc.writeMem(0xcb38, { 0xa6 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2ce9, gbc.sp());
        EXPECT(0xcb39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9a5b));
        EXPECT(0xa6, gbc.readMem(0xcb38));
        // A6 031B
        gbc.setState(0xbcd9, 0xd0b3, 0xce00, 0xee17, 0x32f9, 0x5890, 0x1, 0x1);
        gbc.writeMem(0x5890, { 0x5f });
        gbc.writeMem(0xbcd9, { 0xa6 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd0b3, gbc.sp());
        EXPECT(0xbcda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbcd9));
        // A6 031C
        gbc.setState(0xa64b, 0xef0d, 0x5900, 0x34ab, 0x12a8, 0xaec6, 0x1, 0x1);
        gbc.writeMem(0xa64b, { 0xa6 });
        gbc.writeMem(0xaec6, { 0x59 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xef0d, gbc.sp());
        EXPECT(0xa64c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa64b));
        EXPECT(0x59, gbc.readMem(0xaec6));
        // A6 031D
        gbc.setState(0x5375, 0x9d0, 0x7040, 0xb1ae, 0x9c9, 0xc95e, 0x1, 0x0);
        gbc.writeMem(0x5375, { 0xa6 });
        gbc.writeMem(0xc95e, { 0x2b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9d0, gbc.sp());
        EXPECT(0x5376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc95e));
        // A6 031E
        gbc.setState(0x3915, 0x550f, 0x4d60, 0xbe15, 0xbe25, 0xb9e6, 0x0, 0x0);
        gbc.writeMem(0x3915, { 0xa6 });
        gbc.writeMem(0xb9e6, { 0x19 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x550f, gbc.sp());
        EXPECT(0x3916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb9e6));
        // A6 031F
        gbc.setState(0xd194, 0xab76, 0x39c0, 0x17d4, 0xa07d, 0x5044, 0x1, 0x0);
        gbc.writeMem(0x5044, { 0x1c });
        gbc.writeMem(0xd194, { 0xa6 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xab76, gbc.sp());
        EXPECT(0xd195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd194));
        // A6 0320
        gbc.setState(0x5408, 0x98e9, 0x6890, 0xe65d, 0xf490, 0xe971, 0x1, 0x1);
        gbc.writeMem(0x5408, { 0xa6 });
        gbc.writeMem(0xe971, { 0xdd });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x98e9, gbc.sp());
        EXPECT(0x5409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xe971));
        // A6 0321
        gbc.setState(0x54e4, 0x10f5, 0x4610, 0xb463, 0xb19, 0x5263, 0x0, 0x1);
        gbc.writeMem(0x5263, { 0xc3 });
        gbc.writeMem(0x54e4, { 0xa6 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x10f5, gbc.sp());
        EXPECT(0x54e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0322
        gbc.setState(0x8dea, 0x5ef5, 0xc860, 0xbe83, 0x8d4d, 0x81d0, 0x0, 0x0);
        gbc.writeMem(0x81d0, { 0x1e });
        gbc.writeMem(0x8dea, { 0xa6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5ef5, gbc.sp());
        EXPECT(0x8deb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x81d0));
        EXPECT(0xa6, gbc.readMem(0x8dea));
        // A6 0323
        gbc.setState(0x1661, 0xb436, 0x19d0, 0x99db, 0xdcff, 0x5a60, 0x1, 0x1);
        gbc.writeMem(0x1661, { 0xa6 });
        gbc.writeMem(0x5a60, { 0xe4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb436, gbc.sp());
        EXPECT(0x1662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0324
        gbc.setState(0xcbbd, 0xb7e4, 0x8360, 0xc8f7, 0x8ef5, 0xb4ac, 0x1, 0x0);
        gbc.writeMem(0xb4ac, { 0x84 });
        gbc.writeMem(0xcbbd, { 0xa6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb7e4, gbc.sp());
        EXPECT(0xcbbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xb4ac));
        EXPECT(0xa6, gbc.readMem(0xcbbd));
        // A6 0325
        gbc.setState(0x2cd7, 0x5748, 0x6380, 0x4eaa, 0xfb00, 0x3a1a, 0x0, 0x1);
        gbc.writeMem(0x2cd7, { 0xa6 });
        gbc.writeMem(0x3a1a, { 0xd0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5748, gbc.sp());
        EXPECT(0x2cd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0326
        gbc.setState(0x8fc3, 0x5e38, 0x9b60, 0xd699, 0x6284, 0xaa4f, 0x0, 0x0);
        gbc.writeMem(0x8fc3, { 0xa6 });
        gbc.writeMem(0xaa4f, { 0x17 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5e38, gbc.sp());
        EXPECT(0x8fc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8fc3));
        EXPECT(0x17, gbc.readMem(0xaa4f));
        // A6 0327
        gbc.setState(0x673b, 0xe1f4, 0xf2b0, 0x9007, 0x859, 0x43e6, 0x0, 0x0);
        gbc.writeMem(0x43e6, { 0xf8 });
        gbc.writeMem(0x673b, { 0xa6 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe1f4, gbc.sp());
        EXPECT(0x673c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0328
        gbc.setState(0xa99d, 0x5bd2, 0x9460, 0x30d8, 0xe27d, 0x6cad, 0x0, 0x1);
        gbc.writeMem(0x6cad, { 0x9a });
        gbc.writeMem(0xa99d, { 0xa6 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5bd2, gbc.sp());
        EXPECT(0xa99e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa99d));
        // A6 0329
        gbc.setState(0x3adc, 0xc44e, 0x3810, 0xcddf, 0xbd7, 0x7df4, 0x1, 0x1);
        gbc.writeMem(0x3adc, { 0xa6 });
        gbc.writeMem(0x7df4, { 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc44e, gbc.sp());
        EXPECT(0x3add, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 032A
        gbc.setState(0xa15a, 0xf874, 0x9680, 0xb01, 0x291e, 0x200f, 0x1, 0x1);
        gbc.writeMem(0x200f, { 0xc3 });
        gbc.writeMem(0xa15a, { 0xa6 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf874, gbc.sp());
        EXPECT(0xa15b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa15a));
        // A6 032B
        gbc.setState(0x3458, 0x1165, 0x6cb0, 0x84d8, 0x6f0c, 0x85ec, 0x1, 0x1);
        gbc.writeMem(0x3458, { 0xa6 });
        gbc.writeMem(0x85ec, { 0xf1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1165, gbc.sp());
        EXPECT(0x3459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x85ec));
        // A6 032D
        gbc.setState(0xc48, 0xf4b9, 0x17d0, 0x913f, 0x3b0d, 0x4263, 0x1, 0x0);
        gbc.writeMem(0xc48, { 0xa6 });
        gbc.writeMem(0x4263, { 0xfc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf4b9, gbc.sp());
        EXPECT(0xc49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 032F
        gbc.setState(0x1c9b, 0x71cf, 0x4330, 0xd233, 0x387d, 0x9441, 0x0, 0x1);
        gbc.writeMem(0x1c9b, { 0xa6 });
        gbc.writeMem(0x9441, { 0xf });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x71cf, gbc.sp());
        EXPECT(0x1c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x9441));
        // A6 0330
        gbc.setState(0x7d80, 0x44b5, 0xd5b0, 0xc0e7, 0x2639, 0xeb08, 0x1, 0x0);
        gbc.writeMem(0x7d80, { 0xa6 });
        gbc.writeMem(0xeb08, { 0xc6 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x44b5, gbc.sp());
        EXPECT(0x7d81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xeb08));
        // A6 0331
        gbc.setState(0xe3b6, 0xc8c5, 0x3980, 0x3fde, 0x9ab3, 0xff81, 0x0, 0x1);
        gbc.writeMem(0xe3b6, { 0xa6 });
        gbc.writeMem(0xff81, { 0x19 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc8c5, gbc.sp());
        EXPECT(0xe3b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe3b6));
        EXPECT(0x19, gbc.readMem(0xff81));
        // A6 0333
        gbc.setState(0xa0ca, 0x1e50, 0x4850, 0x5dfd, 0x9b17, 0x581, 0x0, 0x0);
        gbc.writeMem(0x581, { 0xf0 });
        gbc.writeMem(0xa0ca, { 0xa6 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1e50, gbc.sp());
        EXPECT(0xa0cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa0ca));
        // A6 0334
        gbc.setState(0x683a, 0x7544, 0x4090, 0x6eee, 0xe309, 0x9a8d, 0x1, 0x1);
        gbc.writeMem(0x683a, { 0xa6 });
        gbc.writeMem(0x9a8d, { 0x4f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7544, gbc.sp());
        EXPECT(0x683b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x9a8d));
        // A6 0335
        gbc.setState(0xbfd0, 0x2531, 0xdb00, 0xdafb, 0xf4a5, 0x9a3a, 0x1, 0x0);
        gbc.writeMem(0x9a3a, { 0xd7 });
        gbc.writeMem(0xbfd0, { 0xa6 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2531, gbc.sp());
        EXPECT(0xbfd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x9a3a));
        EXPECT(0xa6, gbc.readMem(0xbfd0));
        // A6 0336
        gbc.setState(0x15fc, 0x2dfc, 0x4480, 0xd766, 0xc10e, 0xcf0c, 0x0, 0x1);
        gbc.writeMem(0x15fc, { 0xa6 });
        gbc.writeMem(0xcf0c, { 0x2b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2dfc, gbc.sp());
        EXPECT(0x15fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcf0c));
        // A6 0337
        gbc.setState(0x799b, 0xfce8, 0xb4c0, 0x9a3e, 0x9a14, 0x551c, 0x0, 0x1);
        gbc.writeMem(0x551c, { 0x1a });
        gbc.writeMem(0x799b, { 0xa6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfce8, gbc.sp());
        EXPECT(0x799c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0338
        gbc.setState(0x7e23, 0x5c37, 0x36e0, 0xdc2, 0xa3e1, 0x4787, 0x0, 0x0);
        gbc.writeMem(0x4787, { 0xb2 });
        gbc.writeMem(0x7e23, { 0xa6 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5c37, gbc.sp());
        EXPECT(0x7e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0339
        gbc.setState(0x9b58, 0x7358, 0x9cc0, 0x81cd, 0xa16f, 0xf569, 0x1, 0x0);
        gbc.writeMem(0x9b58, { 0xa6 });
        gbc.writeMem(0xf569, { 0xb7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7358, gbc.sp());
        EXPECT(0x9b59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9b58));
        EXPECT(0xb7, gbc.readMem(0xf569));
        // A6 033A
        gbc.setState(0x8142, 0x97e6, 0x55e0, 0xa139, 0xfbf2, 0x950b, 0x1, 0x0);
        gbc.writeMem(0x8142, { 0xa6 });
        gbc.writeMem(0x950b, { 0x61 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x97e6, gbc.sp());
        EXPECT(0x8143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8142));
        EXPECT(0x61, gbc.readMem(0x950b));
        // A6 033B
        gbc.setState(0xba56, 0x9110, 0x4700, 0x8bb6, 0x6492, 0x49a4, 0x1, 0x1);
        gbc.writeMem(0x49a4, { 0xb1 });
        gbc.writeMem(0xba56, { 0xa6 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9110, gbc.sp());
        EXPECT(0xba57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xba56));
        // A6 033C
        gbc.setState(0x6818, 0xd01b, 0x7820, 0x3586, 0x3ff3, 0x4dc2, 0x0, 0x1);
        gbc.writeMem(0x4dc2, { 0x20 });
        gbc.writeMem(0x6818, { 0xa6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd01b, gbc.sp());
        EXPECT(0x6819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 033D
        gbc.setState(0xe2c, 0x707c, 0x78b0, 0x1e51, 0x4a12, 0xcd85, 0x1, 0x0);
        gbc.writeMem(0xe2c, { 0xa6 });
        gbc.writeMem(0xcd85, { 0xf5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x707c, gbc.sp());
        EXPECT(0xe2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xcd85));
        // A6 033E
        gbc.setState(0x9006, 0xdf90, 0xbb0, 0xf904, 0x80e0, 0x258a, 0x0, 0x1);
        gbc.writeMem(0x258a, { 0xa6 });
        gbc.writeMem(0x9006, { 0xa6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xdf90, gbc.sp());
        EXPECT(0x9007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9006));
        // A6 033F
        gbc.setState(0x377d, 0xddae, 0xb110, 0x219c, 0x277d, 0x1812, 0x1, 0x0);
        gbc.writeMem(0x1812, { 0x44 });
        gbc.writeMem(0x377d, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xddae, gbc.sp());
        EXPECT(0x377e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0340
        gbc.setState(0x5fcf, 0x2ea1, 0x67a0, 0x97e5, 0xb46b, 0xc0c0, 0x0, 0x1);
        gbc.writeMem(0x5fcf, { 0xa6 });
        gbc.writeMem(0xc0c0, { 0xbd });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2ea1, gbc.sp());
        EXPECT(0x5fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc0c0));
        // A6 0341
        gbc.setState(0xc87, 0x4e2d, 0x20d0, 0xdf95, 0x6fd8, 0xa936, 0x0, 0x1);
        gbc.writeMem(0xc87, { 0xa6 });
        gbc.writeMem(0xa936, { 0xb3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4e2d, gbc.sp());
        EXPECT(0xc88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa936));
        // A6 0342
        gbc.setState(0x97e1, 0x16e4, 0x7940, 0xa204, 0x7970, 0xab67, 0x0, 0x1);
        gbc.writeMem(0x97e1, { 0xa6 });
        gbc.writeMem(0xab67, { 0x2e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x16e4, gbc.sp());
        EXPECT(0x97e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x97e1));
        EXPECT(0x2e, gbc.readMem(0xab67));
        // A6 0344
        gbc.setState(0xb93b, 0xdfde, 0x4ce0, 0x20b3, 0xa9c9, 0xf456, 0x1, 0x0);
        gbc.writeMem(0xb93b, { 0xa6 });
        gbc.writeMem(0xf456, { 0x62 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdfde, gbc.sp());
        EXPECT(0xb93c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb93b));
        EXPECT(0x62, gbc.readMem(0xf456));
        // A6 0346
        gbc.setState(0x48e1, 0x5123, 0x4c90, 0xace4, 0xf1fa, 0xee1, 0x0, 0x0);
        gbc.writeMem(0xee1, { 0xd5 });
        gbc.writeMem(0x48e1, { 0xa6 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5123, gbc.sp());
        EXPECT(0x48e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0347
        gbc.setState(0x6e6d, 0x83ac, 0x1c00, 0xd4c5, 0x8202, 0x5bf3, 0x1, 0x1);
        gbc.writeMem(0x5bf3, { 0x95 });
        gbc.writeMem(0x6e6d, { 0xa6 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x83ac, gbc.sp());
        EXPECT(0x6e6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0348
        gbc.setState(0x4ad4, 0x9e1, 0xd290, 0xec2e, 0x6613, 0xca45, 0x1, 0x1);
        gbc.writeMem(0x4ad4, { 0xa6 });
        gbc.writeMem(0xca45, { 0x7c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9e1, gbc.sp());
        EXPECT(0x4ad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xca45));
        // A6 0349
        gbc.setState(0x5e7, 0x74eb, 0x2cd0, 0xed11, 0xb683, 0x4fb8, 0x0, 0x0);
        gbc.writeMem(0x5e7, { 0xa6 });
        gbc.writeMem(0x4fb8, { 0xc9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x74eb, gbc.sp());
        EXPECT(0x5e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 034A
        gbc.setState(0xbf01, 0xa14, 0xcbe0, 0x7ccf, 0x8918, 0x51e, 0x0, 0x0);
        gbc.writeMem(0x51e, { 0xde });
        gbc.writeMem(0xbf01, { 0xa6 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa14, gbc.sp());
        EXPECT(0xbf02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbf01));
        // A6 034B
        gbc.setState(0x5f03, 0x7b33, 0x2c60, 0xf1bd, 0xbbee, 0x6a20, 0x1, 0x1);
        gbc.writeMem(0x5f03, { 0xa6 });
        gbc.writeMem(0x6a20, { 0x4c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7b33, gbc.sp());
        EXPECT(0x5f04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 034C
        gbc.setState(0x7de1, 0x57ec, 0xa9a0, 0x7bb9, 0xbf5, 0x5ea3, 0x1, 0x1);
        gbc.writeMem(0x5ea3, { 0xe4 });
        gbc.writeMem(0x7de1, { 0xa6 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x57ec, gbc.sp());
        EXPECT(0x7de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 034D
        gbc.setState(0xc11c, 0x95ac, 0x2e60, 0xb605, 0x380f, 0xb8cd, 0x0, 0x1);
        gbc.writeMem(0xb8cd, { 0xfc });
        gbc.writeMem(0xc11c, { 0xa6 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x95ac, gbc.sp());
        EXPECT(0xc11d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xb8cd));
        EXPECT(0xa6, gbc.readMem(0xc11c));
        // A6 034E
        gbc.setState(0x38f, 0x103c, 0x54c0, 0x92ec, 0x9565, 0x183d, 0x0, 0x1);
        gbc.writeMem(0x38f, { 0xa6 });
        gbc.writeMem(0x183d, { 0x46 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x103c, gbc.sp());
        EXPECT(0x390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 034F
        gbc.setState(0xa9, 0xa7f, 0xa0a0, 0x5aa0, 0x6289, 0xb422, 0x1, 0x1);
        gbc.writeMem(0xa9, { 0xa6 });
        gbc.writeMem(0xb422, { 0xa1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa7f, gbc.sp());
        EXPECT(0xaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb422));
        // A6 0350
        gbc.setState(0xec10, 0x2f29, 0xd840, 0x28c6, 0x763c, 0x9c43, 0x0, 0x0);
        gbc.writeMem(0x9c43, { 0xf8 });
        gbc.writeMem(0xec10, { 0xa6 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2f29, gbc.sp());
        EXPECT(0xec11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9c43));
        EXPECT(0xa6, gbc.readMem(0xec10));
        // A6 0351
        gbc.setState(0x18f8, 0xcfd7, 0xa840, 0x27b6, 0x6649, 0xf344, 0x0, 0x0);
        gbc.writeMem(0x18f8, { 0xa6 });
        gbc.writeMem(0xf344, { 0xce });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcfd7, gbc.sp());
        EXPECT(0x18f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xf344));
        // A6 0352
        gbc.setState(0x3150, 0xa5b6, 0x70f0, 0x5ab5, 0x608c, 0x4dca, 0x1, 0x0);
        gbc.writeMem(0x3150, { 0xa6 });
        gbc.writeMem(0x4dca, { 0x57 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa5b6, gbc.sp());
        EXPECT(0x3151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0354
        gbc.setState(0x78bd, 0xdcde, 0xb490, 0x6bcb, 0xf40e, 0x5805, 0x1, 0x0);
        gbc.writeMem(0x5805, { 0x63 });
        gbc.writeMem(0x78bd, { 0xa6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdcde, gbc.sp());
        EXPECT(0x78be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0355
        gbc.setState(0xe500, 0x953f, 0x8540, 0xc5b0, 0x3863, 0x4185, 0x0, 0x0);
        gbc.writeMem(0x4185, { 0xb2 });
        gbc.writeMem(0xe500, { 0xa6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x953f, gbc.sp());
        EXPECT(0xe501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe500));
        // A6 0356
        gbc.setState(0xee7d, 0x3f5a, 0x9eb0, 0xf447, 0x68ce, 0x9a74, 0x0, 0x1);
        gbc.writeMem(0x9a74, { 0x16 });
        gbc.writeMem(0xee7d, { 0xa6 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3f5a, gbc.sp());
        EXPECT(0xee7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9a74));
        EXPECT(0xa6, gbc.readMem(0xee7d));
        // A6 0357
        gbc.setState(0x23e6, 0xbab8, 0x74e0, 0x50f, 0x7214, 0xbae2, 0x1, 0x0);
        gbc.writeMem(0x23e6, { 0xa6 });
        gbc.writeMem(0xbae2, { 0x47 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xbab8, gbc.sp());
        EXPECT(0x23e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbae2));
        // A6 0358
        gbc.setState(0xe610, 0x1968, 0x4b0, 0x3b7, 0x4c2a, 0x2460, 0x1, 0x0);
        gbc.writeMem(0x2460, { 0x96 });
        gbc.writeMem(0xe610, { 0xa6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1968, gbc.sp());
        EXPECT(0xe611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe610));
        // A6 0359
        gbc.setState(0x8969, 0x4929, 0xfd50, 0xed40, 0xd45e, 0x1196, 0x0, 0x0);
        gbc.writeMem(0x1196, { 0x3e });
        gbc.writeMem(0x8969, { 0xa6 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4929, gbc.sp());
        EXPECT(0x896a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8969));
        // A6 035A
        gbc.setState(0xef66, 0x77f, 0x27f0, 0xdb0, 0x5c08, 0xcffc, 0x0, 0x1);
        gbc.writeMem(0xcffc, { 0x9f });
        gbc.writeMem(0xef66, { 0xa6 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x77f, gbc.sp());
        EXPECT(0xef67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcffc));
        EXPECT(0xa6, gbc.readMem(0xef66));
        // A6 035B
        gbc.setState(0xbdb1, 0xac17, 0x3ed0, 0xf2fd, 0xea02, 0x84cd, 0x0, 0x1);
        gbc.writeMem(0x84cd, { 0x73 });
        gbc.writeMem(0xbdb1, { 0xa6 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xac17, gbc.sp());
        EXPECT(0xbdb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x84cd));
        EXPECT(0xa6, gbc.readMem(0xbdb1));
        // A6 035C
        gbc.setState(0x78fb, 0xf2a3, 0xad10, 0x20b6, 0xef5, 0x8e86, 0x0, 0x0);
        gbc.writeMem(0x78fb, { 0xa6 });
        gbc.writeMem(0x8e86, { 0x94 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf2a3, gbc.sp());
        EXPECT(0x78fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8e86));
        // A6 035D
        gbc.setState(0x7c30, 0xe9f, 0x1f30, 0x51e2, 0x3a7b, 0x88b5, 0x1, 0x0);
        gbc.writeMem(0x7c30, { 0xa6 });
        gbc.writeMem(0x88b5, { 0x24 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe9f, gbc.sp());
        EXPECT(0x7c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x88b5));
        // A6 035E
        gbc.setState(0x2a02, 0x66c4, 0xc460, 0x2556, 0x656a, 0x7832, 0x0, 0x1);
        gbc.writeMem(0x2a02, { 0xa6 });
        gbc.writeMem(0x7832, { 0xe7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x66c4, gbc.sp());
        EXPECT(0x2a03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 035F
        gbc.setState(0xe21c, 0xc6d8, 0xd5a0, 0x5d65, 0xa3ad, 0xa6b2, 0x1, 0x0);
        gbc.writeMem(0xa6b2, { 0xa1 });
        gbc.writeMem(0xe21c, { 0xa6 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc6d8, gbc.sp());
        EXPECT(0xe21d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa6b2));
        EXPECT(0xa6, gbc.readMem(0xe21c));
        // A6 0360
        gbc.setState(0x7ad, 0xdcdd, 0x5280, 0x17ae, 0x40ec, 0xc585, 0x0, 0x0);
        gbc.writeMem(0x7ad, { 0xa6 });
        gbc.writeMem(0xc585, { 0xe2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xdcdd, gbc.sp());
        EXPECT(0x7ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc585));
        // A6 0361
        gbc.setState(0x103b, 0x761f, 0x74b0, 0xeffc, 0x5584, 0x21ce, 0x0, 0x1);
        gbc.writeMem(0x103b, { 0xa6 });
        gbc.writeMem(0x21ce, { 0x8c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x761f, gbc.sp());
        EXPECT(0x103c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0362
        gbc.setState(0x472d, 0x8e48, 0x8300, 0x5e5a, 0xcac6, 0x21bc, 0x0, 0x0);
        gbc.writeMem(0x21bc, { 0xe2 });
        gbc.writeMem(0x472d, { 0xa6 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8e48, gbc.sp());
        EXPECT(0x472e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0363
        gbc.setState(0x93ac, 0x6bc6, 0x8690, 0x371f, 0xf5f3, 0x91a8, 0x0, 0x1);
        gbc.writeMem(0x91a8, { 0x8b });
        gbc.writeMem(0x93ac, { 0xa6 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6bc6, gbc.sp());
        EXPECT(0x93ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x91a8));
        EXPECT(0xa6, gbc.readMem(0x93ac));
        // A6 0364
        gbc.setState(0xc3cf, 0x22c7, 0xb6b0, 0x5e07, 0xb754, 0x4fcb, 0x0, 0x1);
        gbc.writeMem(0x4fcb, { 0x33 });
        gbc.writeMem(0xc3cf, { 0xa6 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x22c7, gbc.sp());
        EXPECT(0xc3d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc3cf));
        // A6 0365
        gbc.setState(0xe70e, 0xad0e, 0x6850, 0xd785, 0xf2b3, 0xcf2, 0x0, 0x1);
        gbc.writeMem(0xcf2, { 0xbd });
        gbc.writeMem(0xe70e, { 0xa6 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xad0e, gbc.sp());
        EXPECT(0xe70f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe70e));
        // A6 0367
        gbc.setState(0x4326, 0x31d2, 0xd420, 0x3020, 0xeff6, 0x138c, 0x0, 0x0);
        gbc.writeMem(0x138c, { 0x81 });
        gbc.writeMem(0x4326, { 0xa6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x31d2, gbc.sp());
        EXPECT(0x4327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0368
        gbc.setState(0xcfe3, 0x4205, 0x2680, 0xe865, 0x964f, 0x133f, 0x0, 0x1);
        gbc.writeMem(0x133f, { 0x79 });
        gbc.writeMem(0xcfe3, { 0xa6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4205, gbc.sp());
        EXPECT(0xcfe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xcfe3));
        // A6 0369
        gbc.setState(0xd816, 0xd4d3, 0x9900, 0xffc3, 0xe33d, 0x56cb, 0x0, 0x1);
        gbc.writeMem(0x56cb, { 0x8c });
        gbc.writeMem(0xd816, { 0xa6 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd4d3, gbc.sp());
        EXPECT(0xd817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd816));
        // A6 036A
        gbc.setState(0xb50c, 0x7af9, 0xc520, 0x254a, 0x8dd1, 0x31, 0x0, 0x1);
        gbc.writeMem(0x31, { 0xc5 });
        gbc.writeMem(0xb50c, { 0xa6 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7af9, gbc.sp());
        EXPECT(0xb50d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb50c));
        // A6 036B
        gbc.setState(0x9cc9, 0x692e, 0x610, 0xd53d, 0x995c, 0x873a, 0x0, 0x1);
        gbc.writeMem(0x873a, { 0xd0 });
        gbc.writeMem(0x9cc9, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x692e, gbc.sp());
        EXPECT(0x9cca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x873a));
        EXPECT(0xa6, gbc.readMem(0x9cc9));
        // A6 036C
        gbc.setState(0xe29a, 0x4b34, 0x4c90, 0x321e, 0x8eff, 0xb0f1, 0x0, 0x1);
        gbc.writeMem(0xb0f1, { 0x4a });
        gbc.writeMem(0xe29a, { 0xa6 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4b34, gbc.sp());
        EXPECT(0xe29b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xb0f1));
        EXPECT(0xa6, gbc.readMem(0xe29a));
        // A6 036E
        gbc.setState(0xc32b, 0x4718, 0xfc70, 0xd855, 0xbd62, 0x5aa8, 0x1, 0x1);
        gbc.writeMem(0x5aa8, { 0x2c });
        gbc.writeMem(0xc32b, { 0xa6 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4718, gbc.sp());
        EXPECT(0xc32c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc32b));
        // A6 036F
        gbc.setState(0xe61c, 0x8395, 0x4e30, 0x50fd, 0x99f2, 0xa31, 0x0, 0x0);
        gbc.writeMem(0xa31, { 0x5 });
        gbc.writeMem(0xe61c, { 0xa6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8395, gbc.sp());
        EXPECT(0xe61d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe61c));
        // A6 0370
        gbc.setState(0x79d6, 0x2d8d, 0x8dc0, 0x429c, 0x454, 0x212e, 0x1, 0x1);
        gbc.writeMem(0x212e, { 0x2f });
        gbc.writeMem(0x79d6, { 0xa6 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2d8d, gbc.sp());
        EXPECT(0x79d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0371
        gbc.setState(0x629d, 0xe935, 0x6940, 0x6f02, 0x887, 0xe0c0, 0x1, 0x0);
        gbc.writeMem(0x629d, { 0xa6 });
        gbc.writeMem(0xe0c0, { 0x44 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe935, gbc.sp());
        EXPECT(0x629e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe0c0));
        // A6 0372
        gbc.setState(0xd0b8, 0xaec3, 0x96e0, 0xbe87, 0xb092, 0x62f4, 0x1, 0x1);
        gbc.writeMem(0x62f4, { 0x89 });
        gbc.writeMem(0xd0b8, { 0xa6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xaec3, gbc.sp());
        EXPECT(0xd0b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd0b8));
        // A6 0373
        gbc.setState(0xd0aa, 0x6892, 0xb740, 0x5c6d, 0x82b0, 0x992b, 0x0, 0x0);
        gbc.writeMem(0x992b, { 0x2a });
        gbc.writeMem(0xd0aa, { 0xa6 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6892, gbc.sp());
        EXPECT(0xd0ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x992b));
        EXPECT(0xa6, gbc.readMem(0xd0aa));
        // A6 0374
        gbc.setState(0x25d4, 0x334, 0xb360, 0x42c7, 0x1d80, 0xa2f6, 0x0, 0x0);
        gbc.writeMem(0x25d4, { 0xa6 });
        gbc.writeMem(0xa2f6, { 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x334, gbc.sp());
        EXPECT(0x25d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa2f6));
        // A6 0375
        gbc.setState(0x5ed2, 0x94ba, 0xb8b0, 0x588c, 0xf78b, 0xa01, 0x0, 0x1);
        gbc.writeMem(0xa01, { 0xb6 });
        gbc.writeMem(0x5ed2, { 0xa6 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x94ba, gbc.sp());
        EXPECT(0x5ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0376
        gbc.setState(0x2bbf, 0x7db2, 0xc5e0, 0xc5a8, 0xbf2a, 0xd073, 0x1, 0x1);
        gbc.writeMem(0x2bbf, { 0xa6 });
        gbc.writeMem(0xd073, { 0x76 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7db2, gbc.sp());
        EXPECT(0x2bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd073));
        // A6 0377
        gbc.setState(0xd13, 0xea0c, 0xff20, 0xb9f6, 0xcd0f, 0xaeab, 0x0, 0x0);
        gbc.writeMem(0xd13, { 0xa6 });
        gbc.writeMem(0xaeab, { 0xda });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xea0c, gbc.sp());
        EXPECT(0xd14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xaeab));
        // A6 0378
        gbc.setState(0x2107, 0x402b, 0x91c0, 0xbbcb, 0x2f04, 0x8a3c, 0x1, 0x1);
        gbc.writeMem(0x2107, { 0xa6 });
        gbc.writeMem(0x8a3c, { 0xd6 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x402b, gbc.sp());
        EXPECT(0x2108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8a3c));
        // A6 0379
        gbc.setState(0x9395, 0xc9b4, 0xf250, 0xf62d, 0x9313, 0x62f3, 0x0, 0x0);
        gbc.writeMem(0x62f3, { 0x7c });
        gbc.writeMem(0x9395, { 0xa6 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc9b4, gbc.sp());
        EXPECT(0x9396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9395));
        // A6 037A
        gbc.setState(0xcece, 0xa875, 0xea60, 0xfdc7, 0x14cf, 0x525b, 0x1, 0x1);
        gbc.writeMem(0x525b, { 0xf5 });
        gbc.writeMem(0xcece, { 0xa6 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa875, gbc.sp());
        EXPECT(0xcecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xcece));
        // A6 037C
        gbc.setState(0x5278, 0xa6b3, 0x4c40, 0x7a79, 0xa1b9, 0x7370, 0x1, 0x1);
        gbc.writeMem(0x5278, { 0xa6 });
        gbc.writeMem(0x7370, { 0x66 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa6b3, gbc.sp());
        EXPECT(0x5279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 037D
        gbc.setState(0x2c06, 0x7d1d, 0xfab0, 0x939f, 0xe823, 0x718, 0x0, 0x0);
        gbc.writeMem(0x718, { 0x20 });
        gbc.writeMem(0x2c06, { 0xa6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7d1d, gbc.sp());
        EXPECT(0x2c07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 037E
        gbc.setState(0x72b9, 0xa8b3, 0xf930, 0x999e, 0xeb53, 0xd92d, 0x1, 0x0);
        gbc.writeMem(0x72b9, { 0xa6 });
        gbc.writeMem(0xd92d, { 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa8b3, gbc.sp());
        EXPECT(0x72ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd92d));
        // A6 037F
        gbc.setState(0xa122, 0x3e35, 0xf740, 0x8dce, 0x8ac7, 0x38fd, 0x0, 0x0);
        gbc.writeMem(0x38fd, { 0x2e });
        gbc.writeMem(0xa122, { 0xa6 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3e35, gbc.sp());
        EXPECT(0xa123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa122));
        // A6 0380
        gbc.setState(0x7a96, 0x6ab2, 0x70, 0xef8, 0xe6ec, 0xdf2a, 0x0, 0x1);
        gbc.writeMem(0x7a96, { 0xa6 });
        gbc.writeMem(0xdf2a, { 0x6e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6ab2, gbc.sp());
        EXPECT(0x7a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xdf2a));
        // A6 0381
        gbc.setState(0xc75a, 0x2cbe, 0x47d0, 0x6044, 0xbc7b, 0x509b, 0x1, 0x1);
        gbc.writeMem(0x509b, { 0xaf });
        gbc.writeMem(0xc75a, { 0xa6 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2cbe, gbc.sp());
        EXPECT(0xc75b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc75a));
        // A6 0382
        gbc.setState(0x9733, 0x9a03, 0x1c0, 0x7998, 0x8177, 0x4fad, 0x0, 0x1);
        gbc.writeMem(0x4fad, { 0x45 });
        gbc.writeMem(0x9733, { 0xa6 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9a03, gbc.sp());
        EXPECT(0x9734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9733));
        // A6 0383
        gbc.setState(0xe1a0, 0x8287, 0x36c0, 0xe4de, 0xd374, 0xa075, 0x1, 0x0);
        gbc.writeMem(0xa075, { 0xc0 });
        gbc.writeMem(0xe1a0, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8287, gbc.sp());
        EXPECT(0xe1a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xa075));
        EXPECT(0xa6, gbc.readMem(0xe1a0));
        // A6 0384
        gbc.setState(0xcdd4, 0x49f9, 0x2d80, 0x65b0, 0xf433, 0xddee, 0x0, 0x1);
        gbc.writeMem(0xcdd4, { 0xa6 });
        gbc.writeMem(0xddee, { 0x80 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x49f9, gbc.sp());
        EXPECT(0xcdd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xcdd4));
        EXPECT(0x80, gbc.readMem(0xddee));
        // A6 0385
        gbc.setState(0x69c4, 0x7ece, 0xf150, 0x6907, 0xc3d0, 0x545f, 0x0, 0x0);
        gbc.writeMem(0x545f, { 0xde });
        gbc.writeMem(0x69c4, { 0xa6 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7ece, gbc.sp());
        EXPECT(0x69c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0386
        gbc.setState(0x7877, 0x4cfd, 0xcb70, 0x78e3, 0xe014, 0xaf67, 0x0, 0x1);
        gbc.writeMem(0x7877, { 0xa6 });
        gbc.writeMem(0xaf67, { 0x15 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4cfd, gbc.sp());
        EXPECT(0x7878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xaf67));
        // A6 0387
        gbc.setState(0xc124, 0x7d09, 0xa920, 0x38d, 0xf9f2, 0xb860, 0x1, 0x0);
        gbc.writeMem(0xb860, { 0x62 });
        gbc.writeMem(0xc124, { 0xa6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7d09, gbc.sp());
        EXPECT(0xc125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xb860));
        EXPECT(0xa6, gbc.readMem(0xc124));
        // A6 0388
        gbc.setState(0x90ba, 0xcab7, 0xa740, 0xa7c4, 0x3b2f, 0xf89d, 0x0, 0x0);
        gbc.writeMem(0x90ba, { 0xa6 });
        gbc.writeMem(0xf89d, { 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcab7, gbc.sp());
        EXPECT(0x90bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x90ba));
        EXPECT(0x23, gbc.readMem(0xf89d));
        // A6 0389
        gbc.setState(0x622, 0x9066, 0x2900, 0x8597, 0x17aa, 0x61b3, 0x0, 0x0);
        gbc.writeMem(0x622, { 0xa6 });
        gbc.writeMem(0x61b3, { 0xb5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9066, gbc.sp());
        EXPECT(0x623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 038A
        gbc.setState(0xd1a0, 0x17d, 0x38f0, 0xa8e9, 0x85a2, 0xd5b4, 0x0, 0x1);
        gbc.writeMem(0xd1a0, { 0xa6 });
        gbc.writeMem(0xd5b4, { 0xd3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x17d, gbc.sp());
        EXPECT(0xd1a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd1a0));
        EXPECT(0xd3, gbc.readMem(0xd5b4));
        // A6 038B
        gbc.setState(0xeb97, 0xc019, 0x820, 0x7937, 0x82d5, 0xfdfc, 0x1, 0x0);
        gbc.writeMem(0xeb97, { 0xa6 });
        gbc.writeMem(0xfdfc, { 0xd });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc019, gbc.sp());
        EXPECT(0xeb98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xeb97));
        EXPECT(0xd, gbc.readMem(0xfdfc));
        // A6 038D
        gbc.setState(0x1f31, 0xcf7d, 0xe190, 0xe725, 0xbcac, 0x5f6d, 0x1, 0x0);
        gbc.writeMem(0x1f31, { 0xa6 });
        gbc.writeMem(0x5f6d, { 0x82 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xcf7d, gbc.sp());
        EXPECT(0x1f32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 038E
        gbc.setState(0x46ef, 0xc859, 0x40f0, 0x93d2, 0xd20f, 0xebf6, 0x0, 0x0);
        gbc.writeMem(0x46ef, { 0xa6 });
        gbc.writeMem(0xebf6, { 0x13 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc859, gbc.sp());
        EXPECT(0x46f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xebf6));
        // A6 038F
        gbc.setState(0x36be, 0xc17, 0x5990, 0xf3c, 0xc703, 0x2402, 0x0, 0x1);
        gbc.writeMem(0x2402, { 0xd5 });
        gbc.writeMem(0x36be, { 0xa6 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc17, gbc.sp());
        EXPECT(0x36bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0390
        gbc.setState(0x8f85, 0x2889, 0xb770, 0xe741, 0x6741, 0xbcf2, 0x0, 0x1);
        gbc.writeMem(0x8f85, { 0xa6 });
        gbc.writeMem(0xbcf2, { 0x5b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2889, gbc.sp());
        EXPECT(0x8f86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8f85));
        EXPECT(0x5b, gbc.readMem(0xbcf2));
        // A6 0391
        gbc.setState(0x4ed8, 0x6e9d, 0x4180, 0xf367, 0xd956, 0x10cf, 0x0, 0x1);
        gbc.writeMem(0x10cf, { 0x17 });
        gbc.writeMem(0x4ed8, { 0xa6 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6e9d, gbc.sp());
        EXPECT(0x4ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0392
        gbc.setState(0x61c1, 0xe595, 0x1910, 0x9c45, 0x2823, 0x3edc, 0x1, 0x0);
        gbc.writeMem(0x3edc, { 0xbf });
        gbc.writeMem(0x61c1, { 0xa6 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe595, gbc.sp());
        EXPECT(0x61c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0393
        gbc.setState(0xd620, 0x7236, 0x2990, 0x3584, 0x4c11, 0x8ed3, 0x0, 0x1);
        gbc.writeMem(0x8ed3, { 0x53 });
        gbc.writeMem(0xd620, { 0xa6 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7236, gbc.sp());
        EXPECT(0xd621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8ed3));
        EXPECT(0xa6, gbc.readMem(0xd620));
        // A6 0394
        gbc.setState(0x9e2f, 0x1b23, 0x10c0, 0xfa14, 0xb151, 0x6f89, 0x0, 0x0);
        gbc.writeMem(0x6f89, { 0x5e });
        gbc.writeMem(0x9e2f, { 0xa6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1b23, gbc.sp());
        EXPECT(0x9e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9e2f));
        // A6 0395
        gbc.setState(0xa274, 0x2096, 0x44e0, 0xf944, 0xe809, 0x93f2, 0x0, 0x0);
        gbc.writeMem(0x93f2, { 0x0 });
        gbc.writeMem(0xa274, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2096, gbc.sp());
        EXPECT(0xa275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x93f2));
        EXPECT(0xa6, gbc.readMem(0xa274));
        // A6 0396
        gbc.setState(0x2138, 0xe977, 0xf1b0, 0x4374, 0xb3ef, 0xcb6f, 0x0, 0x1);
        gbc.writeMem(0x2138, { 0xa6 });
        gbc.writeMem(0xcb6f, { 0x52 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe977, gbc.sp());
        EXPECT(0x2139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xcb6f));
        // A6 0397
        gbc.setState(0x2fd4, 0xd92, 0x79d0, 0x5e87, 0x4d46, 0x726, 0x1, 0x1);
        gbc.writeMem(0x726, { 0x19 });
        gbc.writeMem(0x2fd4, { 0xa6 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd92, gbc.sp());
        EXPECT(0x2fd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 0398
        gbc.setState(0x885d, 0x7cd3, 0x7410, 0xafe0, 0x9983, 0xc3, 0x1, 0x1);
        gbc.writeMem(0xc3, { 0xf6 });
        gbc.writeMem(0x885d, { 0xa6 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7cd3, gbc.sp());
        EXPECT(0x885e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x885d));
        // A6 0399
        gbc.setState(0x504b, 0xaf0, 0xaa00, 0x6700, 0x6216, 0x68ba, 0x1, 0x0);
        gbc.writeMem(0x504b, { 0xa6 });
        gbc.writeMem(0x68ba, { 0x3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xaf0, gbc.sp());
        EXPECT(0x504c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 039A
        gbc.setState(0xa0b5, 0xd1f, 0xed90, 0xa313, 0xc547, 0xce02, 0x1, 0x1);
        gbc.writeMem(0xa0b5, { 0xa6 });
        gbc.writeMem(0xce02, { 0x6b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd1f, gbc.sp());
        EXPECT(0xa0b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa0b5));
        EXPECT(0x6b, gbc.readMem(0xce02));
        // A6 039B
        gbc.setState(0x3915, 0x232f, 0xac90, 0x6f14, 0x4b96, 0xebff, 0x1, 0x0);
        gbc.writeMem(0x3915, { 0xa6 });
        gbc.writeMem(0xebff, { 0x6e });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x232f, gbc.sp());
        EXPECT(0x3916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xebff));
        // A6 039C
        gbc.setState(0x561a, 0x6975, 0x1c30, 0xafae, 0xc275, 0x1007, 0x0, 0x0);
        gbc.writeMem(0x1007, { 0x88 });
        gbc.writeMem(0x561a, { 0xa6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6975, gbc.sp());
        EXPECT(0x561b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 039D
        gbc.setState(0x468b, 0xc013, 0xd460, 0x23a2, 0xacb7, 0xabae, 0x1, 0x1);
        gbc.writeMem(0x468b, { 0xa6 });
        gbc.writeMem(0xabae, { 0xd6 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc013, gbc.sp());
        EXPECT(0x468c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xabae));
        // A6 039E
        gbc.setState(0x3366, 0xbf15, 0xd680, 0x95ed, 0xdf5, 0xb725, 0x1, 0x0);
        gbc.writeMem(0x3366, { 0xa6 });
        gbc.writeMem(0xb725, { 0xbe });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xbf15, gbc.sp());
        EXPECT(0x3367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xb725));
        // A6 039F
        gbc.setState(0x3625, 0x2c1b, 0x7410, 0xf14, 0xf12, 0xbfe4, 0x0, 0x0);
        gbc.writeMem(0x3625, { 0xa6 });
        gbc.writeMem(0xbfe4, { 0x9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2c1b, gbc.sp());
        EXPECT(0x3626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbfe4));
        // A6 03A0
        gbc.setState(0x5305, 0x671e, 0xbd90, 0xc3f1, 0x2bca, 0xdb14, 0x1, 0x0);
        gbc.writeMem(0x5305, { 0xa6 });
        gbc.writeMem(0xdb14, { 0x40 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x671e, gbc.sp());
        EXPECT(0x5306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xdb14));
        // A6 03A1
        gbc.setState(0xd9ce, 0xd156, 0x1c90, 0x92d7, 0xd6ce, 0xec50, 0x0, 0x1);
        gbc.writeMem(0xd9ce, { 0xa6 });
        gbc.writeMem(0xec50, { 0xd6 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd156, gbc.sp());
        EXPECT(0xd9cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd9ce));
        EXPECT(0xd6, gbc.readMem(0xec50));
        // A6 03A2
        gbc.setState(0xceb3, 0xd5a8, 0x3370, 0x3bf4, 0x7250, 0x6722, 0x0, 0x1);
        gbc.writeMem(0x6722, { 0xdf });
        gbc.writeMem(0xceb3, { 0xa6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd5a8, gbc.sp());
        EXPECT(0xceb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xceb3));
        // A6 03A3
        gbc.setState(0x320e, 0x51d9, 0x3420, 0x9fbc, 0x96b8, 0x9d3f, 0x1, 0x0);
        gbc.writeMem(0x320e, { 0xa6 });
        gbc.writeMem(0x9d3f, { 0xb1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x51d9, gbc.sp());
        EXPECT(0x320f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x9d3f));
        // A6 03A4
        gbc.setState(0x962b, 0xe6f2, 0xe860, 0x5f03, 0x20a0, 0xb732, 0x1, 0x0);
        gbc.writeMem(0x962b, { 0xa6 });
        gbc.writeMem(0xb732, { 0x8e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe6f2, gbc.sp());
        EXPECT(0x962c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x962b));
        EXPECT(0x8e, gbc.readMem(0xb732));
        // A6 03A5
        gbc.setState(0x27ef, 0xa515, 0x7c90, 0x38c8, 0xfaf3, 0x22b0, 0x0, 0x1);
        gbc.writeMem(0x22b0, { 0x50 });
        gbc.writeMem(0x27ef, { 0xa6 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa515, gbc.sp());
        EXPECT(0x27f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 03A6
        gbc.setState(0xe699, 0x24a5, 0xd8c0, 0xc38, 0xf9cb, 0xacaf, 0x0, 0x1);
        gbc.writeMem(0xacaf, { 0x1c });
        gbc.writeMem(0xe699, { 0xa6 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x24a5, gbc.sp());
        EXPECT(0xe69a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xacaf));
        EXPECT(0xa6, gbc.readMem(0xe699));
        // A6 03A7
        gbc.setState(0xd9cd, 0xdaba, 0x2410, 0xcde2, 0xbfb4, 0xb1f1, 0x1, 0x1);
        gbc.writeMem(0xb1f1, { 0x7f });
        gbc.writeMem(0xd9cd, { 0xa6 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdaba, gbc.sp());
        EXPECT(0xd9ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xb1f1));
        EXPECT(0xa6, gbc.readMem(0xd9cd));
        // A6 03A8
        gbc.setState(0x6176, 0xf63d, 0x7200, 0x17a7, 0xac4e, 0x7f1c, 0x1, 0x1);
        gbc.writeMem(0x6176, { 0xa6 });
        gbc.writeMem(0x7f1c, { 0xb7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf63d, gbc.sp());
        EXPECT(0x6177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 03A9
        gbc.setState(0x4aad, 0xe8a4, 0x5f10, 0xff1, 0xdc22, 0x4d02, 0x0, 0x0);
        gbc.writeMem(0x4aad, { 0xa6 });
        gbc.writeMem(0x4d02, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe8a4, gbc.sp());
        EXPECT(0x4aae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 03AA
        gbc.setState(0x64f0, 0xb749, 0xfb0, 0x4b9, 0xf7f7, 0x91fb, 0x0, 0x1);
        gbc.writeMem(0x64f0, { 0xa6 });
        gbc.writeMem(0x91fb, { 0x4b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb749, gbc.sp());
        EXPECT(0x64f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x91fb));
        // A6 03AB
        gbc.setState(0xa65, 0xa9d5, 0x5060, 0xf03, 0x5c7a, 0xd17a, 0x0, 0x1);
        gbc.writeMem(0xa65, { 0xa6 });
        gbc.writeMem(0xd17a, { 0xb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa9d5, gbc.sp());
        EXPECT(0xa66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd17a));
        // A6 03AC
        gbc.setState(0x9f6f, 0x1e01, 0xc570, 0x216, 0xe08b, 0xb00e, 0x1, 0x0);
        gbc.writeMem(0x9f6f, { 0xa6 });
        gbc.writeMem(0xb00e, { 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1e01, gbc.sp());
        EXPECT(0x9f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9f6f));
        EXPECT(0x4, gbc.readMem(0xb00e));
        // A6 03AE
        gbc.setState(0xbb12, 0xeb81, 0x8fd0, 0x1b27, 0x761a, 0x3480, 0x0, 0x1);
        gbc.writeMem(0x3480, { 0x67 });
        gbc.writeMem(0xbb12, { 0xa6 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xeb81, gbc.sp());
        EXPECT(0xbb13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbb12));
        // A6 03AF
        gbc.setState(0x8119, 0x5330, 0xb60, 0xa4ca, 0x5b16, 0xf311, 0x1, 0x0);
        gbc.writeMem(0x8119, { 0xa6 });
        gbc.writeMem(0xf311, { 0xcc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5330, gbc.sp());
        EXPECT(0x811a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8119));
        EXPECT(0xcc, gbc.readMem(0xf311));
        // A6 03B0
        gbc.setState(0xd293, 0x526, 0xcd10, 0x9d91, 0xfe84, 0x57e9, 0x0, 0x1);
        gbc.writeMem(0x57e9, { 0xb8 });
        gbc.writeMem(0xd293, { 0xa6 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x526, gbc.sp());
        EXPECT(0xd294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd293));
        // A6 03B1
        gbc.setState(0x3491, 0x67f9, 0xcf40, 0x6727, 0xe730, 0xc319, 0x1, 0x1);
        gbc.writeMem(0x3491, { 0xa6 });
        gbc.writeMem(0xc319, { 0xf6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x67f9, gbc.sp());
        EXPECT(0x3492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xc319));
        // A6 03B2
        gbc.setState(0xcb8f, 0x4065, 0xd0a0, 0xfa1f, 0x49ad, 0x3649, 0x0, 0x0);
        gbc.writeMem(0x3649, { 0x46 });
        gbc.writeMem(0xcb8f, { 0xa6 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4065, gbc.sp());
        EXPECT(0xcb90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xcb8f));
        // A6 03B4
        gbc.setState(0x57b5, 0xe602, 0x4070, 0xd408, 0x4baa, 0x9184, 0x0, 0x0);
        gbc.writeMem(0x57b5, { 0xa6 });
        gbc.writeMem(0x9184, { 0xd6 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe602, gbc.sp());
        EXPECT(0x57b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9184));
        // A6 03B5
        gbc.setState(0xb251, 0x3b11, 0x4290, 0xe1a4, 0x9869, 0xeba3, 0x0, 0x0);
        gbc.writeMem(0xb251, { 0xa6 });
        gbc.writeMem(0xeba3, { 0x20 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3b11, gbc.sp());
        EXPECT(0xb252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb251));
        EXPECT(0x20, gbc.readMem(0xeba3));
        // A6 03B6
        gbc.setState(0xec6f, 0x38e8, 0x29a0, 0x726f, 0x347f, 0x5a15, 0x0, 0x0);
        gbc.writeMem(0x5a15, { 0xde });
        gbc.writeMem(0xec6f, { 0xa6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x38e8, gbc.sp());
        EXPECT(0xec70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xec6f));
        // A6 03B7
        gbc.setState(0x7eea, 0xf030, 0x42e0, 0x3828, 0x5357, 0xb4eb, 0x1, 0x0);
        gbc.writeMem(0x7eea, { 0xa6 });
        gbc.writeMem(0xb4eb, { 0x62 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf030, gbc.sp());
        EXPECT(0x7eeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xb4eb));
        // A6 03B8
        gbc.setState(0x1598, 0x6a41, 0x8860, 0xa992, 0x738, 0xf5ae, 0x0, 0x0);
        gbc.writeMem(0x1598, { 0xa6 });
        gbc.writeMem(0xf5ae, { 0x52 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6a41, gbc.sp());
        EXPECT(0x1599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xf5ae));
        // A6 03B9
        gbc.setState(0x9a27, 0x6717, 0x9db0, 0xa40b, 0x3f8c, 0xac05, 0x0, 0x1);
        gbc.writeMem(0x9a27, { 0xa6 });
        gbc.writeMem(0xac05, { 0xd3 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6717, gbc.sp());
        EXPECT(0x9a28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9a27));
        EXPECT(0xd3, gbc.readMem(0xac05));
        // A6 03BA
        gbc.setState(0xc13e, 0xd3d8, 0x9440, 0x801, 0x1744, 0x746c, 0x0, 0x1);
        gbc.writeMem(0x746c, { 0x47 });
        gbc.writeMem(0xc13e, { 0xa6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd3d8, gbc.sp());
        EXPECT(0xc13f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc13e));
        // A6 03BB
        gbc.setState(0xafeb, 0x38a, 0xdc40, 0xf654, 0xdce8, 0x4de5, 0x0, 0x1);
        gbc.writeMem(0x4de5, { 0x2b });
        gbc.writeMem(0xafeb, { 0xa6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x38a, gbc.sp());
        EXPECT(0xafec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xafeb));
        // A6 03BC
        gbc.setState(0xa542, 0xfafb, 0xfed0, 0x947b, 0xee48, 0xe62c, 0x0, 0x1);
        gbc.writeMem(0xa542, { 0xa6 });
        gbc.writeMem(0xe62c, { 0xf5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfafb, gbc.sp());
        EXPECT(0xa543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa542));
        EXPECT(0xf5, gbc.readMem(0xe62c));
        // A6 03BE
        gbc.setState(0x6048, 0x4571, 0xc360, 0xdde5, 0x6f5e, 0xa6d5, 0x0, 0x0);
        gbc.writeMem(0x6048, { 0xa6 });
        gbc.writeMem(0xa6d5, { 0x39 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4571, gbc.sp());
        EXPECT(0x6049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xa6d5));
        // A6 03BF
        gbc.setState(0x933d, 0x7f82, 0x55e0, 0xf273, 0x92a5, 0x499c, 0x1, 0x0);
        gbc.writeMem(0x499c, { 0xe });
        gbc.writeMem(0x933d, { 0xa6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7f82, gbc.sp());
        EXPECT(0x933e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x933d));
        // A6 03C0
        gbc.setState(0x22b6, 0x88b8, 0x3c10, 0xe4ec, 0xcd77, 0x7a4, 0x0, 0x0);
        gbc.writeMem(0x7a4, { 0xa3 });
        gbc.writeMem(0x22b6, { 0xa6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x88b8, gbc.sp());
        EXPECT(0x22b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 03C1
        gbc.setState(0xa633, 0x13cb, 0x4520, 0x5b3b, 0x2264, 0x20c, 0x1, 0x1);
        gbc.writeMem(0x20c, { 0x5a });
        gbc.writeMem(0xa633, { 0xa6 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x13cb, gbc.sp());
        EXPECT(0xa634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa633));
        // A6 03C2
        gbc.setState(0x3180, 0x163c, 0xaec0, 0x574b, 0x5868, 0xb7ad, 0x1, 0x1);
        gbc.writeMem(0x3180, { 0xa6 });
        gbc.writeMem(0xb7ad, { 0x2b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x163c, gbc.sp());
        EXPECT(0x3181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb7ad));
        // A6 03C3
        gbc.setState(0x149a, 0x6759, 0xbdf0, 0xb0b4, 0xbe99, 0xe1a0, 0x1, 0x1);
        gbc.writeMem(0x149a, { 0xa6 });
        gbc.writeMem(0xe1a0, { 0xa8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6759, gbc.sp());
        EXPECT(0x149b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xe1a0));
        // A6 03C4
        gbc.setState(0xb28a, 0x7ead, 0x6220, 0x3065, 0xe403, 0x6690, 0x0, 0x0);
        gbc.writeMem(0x6690, { 0x2e });
        gbc.writeMem(0xb28a, { 0xa6 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7ead, gbc.sp());
        EXPECT(0xb28b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb28a));
        // A6 03C6
        gbc.setState(0x2137, 0x7e2e, 0x380, 0x58a3, 0x3209, 0x566e, 0x1, 0x0);
        gbc.writeMem(0x2137, { 0xa6 });
        gbc.writeMem(0x566e, { 0x9e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7e2e, gbc.sp());
        EXPECT(0x2138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 03C7
        gbc.setState(0x9297, 0x3aff, 0x1710, 0xed58, 0x8cc4, 0x5710, 0x1, 0x0);
        gbc.writeMem(0x5710, { 0x5f });
        gbc.writeMem(0x9297, { 0xa6 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3aff, gbc.sp());
        EXPECT(0x9298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9297));
        // A6 03C8
        gbc.setState(0x124b, 0x13fd, 0x4800, 0xea85, 0xabcd, 0xf9a9, 0x1, 0x1);
        gbc.writeMem(0x124b, { 0xa6 });
        gbc.writeMem(0xf9a9, { 0xdb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x13fd, gbc.sp());
        EXPECT(0x124c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xf9a9));
        // A6 03C9
        gbc.setState(0xa8f0, 0x3268, 0x2cd0, 0xdba1, 0xcd10, 0xf786, 0x1, 0x1);
        gbc.writeMem(0xa8f0, { 0xa6 });
        gbc.writeMem(0xf786, { 0x11 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3268, gbc.sp());
        EXPECT(0xa8f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa8f0));
        EXPECT(0x11, gbc.readMem(0xf786));
        // A6 03CA
        gbc.setState(0xec68, 0xa0a4, 0xcaa0, 0xa52f, 0xb8e2, 0xd98f, 0x0, 0x1);
        gbc.writeMem(0xd98f, { 0xbb });
        gbc.writeMem(0xec68, { 0xa6 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa0a4, gbc.sp());
        EXPECT(0xec69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd98f));
        EXPECT(0xa6, gbc.readMem(0xec68));
        // A6 03CB
        gbc.setState(0x7239, 0x8890, 0xe5d0, 0x8c9a, 0x2f24, 0x577f, 0x0, 0x0);
        gbc.writeMem(0x577f, { 0x1e });
        gbc.writeMem(0x7239, { 0xa6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8890, gbc.sp());
        EXPECT(0x723a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 03CC
        gbc.setState(0x63fc, 0xaf28, 0xb160, 0x4c7b, 0x22fe, 0x7708, 0x1, 0x0);
        gbc.writeMem(0x63fc, { 0xa6 });
        gbc.writeMem(0x7708, { 0xfe });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xaf28, gbc.sp());
        EXPECT(0x63fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 03CD
        gbc.setState(0x8b56, 0x5f58, 0xe650, 0xac41, 0x3ac1, 0x1458, 0x1, 0x1);
        gbc.writeMem(0x1458, { 0x65 });
        gbc.writeMem(0x8b56, { 0xa6 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5f58, gbc.sp());
        EXPECT(0x8b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8b56));
        // A6 03CE
        gbc.setState(0x682e, 0x775c, 0xcba0, 0xe9b6, 0x36e3, 0xf6b1, 0x1, 0x0);
        gbc.writeMem(0x682e, { 0xa6 });
        gbc.writeMem(0xf6b1, { 0x1c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x775c, gbc.sp());
        EXPECT(0x682f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xf6b1));
        // A6 03CF
        gbc.setState(0x810a, 0x6115, 0xde90, 0xb36d, 0xc7bb, 0x2458, 0x0, 0x0);
        gbc.writeMem(0x2458, { 0xe9 });
        gbc.writeMem(0x810a, { 0xa6 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6115, gbc.sp());
        EXPECT(0x810b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x810a));
        // A6 03D0
        gbc.setState(0xcb98, 0x5767, 0xdc30, 0xcda5, 0xa9c3, 0x5843, 0x1, 0x0);
        gbc.writeMem(0x5843, { 0xe6 });
        gbc.writeMem(0xcb98, { 0xa6 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5767, gbc.sp());
        EXPECT(0xcb99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xcb98));
        // A6 03D1
        gbc.setState(0x9d01, 0x3abf, 0x8fc0, 0x6013, 0x5554, 0xf19a, 0x0, 0x0);
        gbc.writeMem(0x9d01, { 0xa6 });
        gbc.writeMem(0xf19a, { 0x38 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3abf, gbc.sp());
        EXPECT(0x9d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9d01));
        EXPECT(0x38, gbc.readMem(0xf19a));
        // A6 03D2
        gbc.setState(0x483c, 0x3c4, 0xcb00, 0xc44a, 0xf38b, 0x410d, 0x1, 0x0);
        gbc.writeMem(0x410d, { 0xf4 });
        gbc.writeMem(0x483c, { 0xa6 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3c4, gbc.sp());
        EXPECT(0x483d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 03D4
        gbc.setState(0x2b8d, 0x1c5d, 0x7460, 0x2e9e, 0x46ac, 0x1d74, 0x1, 0x0);
        gbc.writeMem(0x1d74, { 0x98 });
        gbc.writeMem(0x2b8d, { 0xa6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1c5d, gbc.sp());
        EXPECT(0x2b8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 03D5
        gbc.setState(0x9759, 0xe1d3, 0xe900, 0x27b0, 0xe701, 0xd42e, 0x0, 0x0);
        gbc.writeMem(0x9759, { 0xa6 });
        gbc.writeMem(0xd42e, { 0x88 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe1d3, gbc.sp());
        EXPECT(0x975a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9759));
        EXPECT(0x88, gbc.readMem(0xd42e));
        // A6 03D6
        gbc.setState(0x5da2, 0xae5d, 0xead0, 0xe80e, 0xe92d, 0x8791, 0x0, 0x1);
        gbc.writeMem(0x5da2, { 0xa6 });
        gbc.writeMem(0x8791, { 0xdf });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xae5d, gbc.sp());
        EXPECT(0x5da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x8791));
        // A6 03D7
        gbc.setState(0x15b2, 0xe23b, 0xa290, 0xefb5, 0xc865, 0x8069, 0x1, 0x1);
        gbc.writeMem(0x15b2, { 0xa6 });
        gbc.writeMem(0x8069, { 0x88 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe23b, gbc.sp());
        EXPECT(0x15b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8069));
        // A6 03D8
        gbc.setState(0xd00, 0x9ba6, 0x77f0, 0x2de5, 0xc897, 0x5465, 0x0, 0x1);
        gbc.writeMem(0xd00, { 0xa6 });
        gbc.writeMem(0x5465, { 0xbc });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9ba6, gbc.sp());
        EXPECT(0xd01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 03D9
        gbc.setState(0x10d2, 0x4308, 0x9830, 0x80da, 0x7144, 0xd23, 0x1, 0x1);
        gbc.writeMem(0xd23, { 0x1 });
        gbc.writeMem(0x10d2, { 0xa6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4308, gbc.sp());
        EXPECT(0x10d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 03DA
        gbc.setState(0x4338, 0x1c77, 0xb660, 0xc423, 0xd2af, 0x7b9a, 0x0, 0x1);
        gbc.writeMem(0x4338, { 0xa6 });
        gbc.writeMem(0x7b9a, { 0x14 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1c77, gbc.sp());
        EXPECT(0x4339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 03DC
        gbc.setState(0x6807, 0xfe9d, 0xf980, 0x6386, 0x57e7, 0x4388, 0x1, 0x0);
        gbc.writeMem(0x4388, { 0xf7 });
        gbc.writeMem(0x6807, { 0xa6 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfe9d, gbc.sp());
        EXPECT(0x6808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 03DD
        gbc.setState(0xe060, 0xf8c4, 0x82a0, 0x1c7d, 0x1112, 0xf09e, 0x0, 0x1);
        gbc.writeMem(0xe060, { 0xa6 });
        gbc.writeMem(0xf09e, { 0x21 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf8c4, gbc.sp());
        EXPECT(0xe061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe060));
        EXPECT(0x21, gbc.readMem(0xf09e));
        // A6 03DE
        gbc.setState(0x64fb, 0x4171, 0x8a50, 0xb336, 0x1188, 0x29b6, 0x1, 0x1);
        gbc.writeMem(0x29b6, { 0x3e });
        gbc.writeMem(0x64fb, { 0xa6 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4171, gbc.sp());
        EXPECT(0x64fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 03DF
        gbc.setState(0x67c8, 0xc525, 0xcd00, 0xeca, 0xd9f2, 0xc32, 0x1, 0x0);
        gbc.writeMem(0xc32, { 0x7 });
        gbc.writeMem(0x67c8, { 0xa6 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc525, gbc.sp());
        EXPECT(0x67c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A6 03E0
        gbc.setState(0xcb, 0x3721, 0x1180, 0x6757, 0x559c, 0x8416, 0x0, 0x0);
        gbc.writeMem(0xcb, { 0xa6 });
        gbc.writeMem(0x8416, { 0x63 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3721, gbc.sp());
        EXPECT(0xcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x8416));
        // A6 03E2
        gbc.setState(0xab8b, 0x7c2f, 0x1400, 0x11ed, 0x10c2, 0xda64, 0x1, 0x0);
        gbc.writeMem(0xab8b, { 0xa6 });
        gbc.writeMem(0xda64, { 0x64 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7c2f, gbc.sp());
        EXPECT(0xab8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xab8b));
        EXPECT(0x64, gbc.readMem(0xda64));
        // A6 03E3
        gbc.setState(0x6675, 0x830d, 0x7570, 0x527, 0xd1f, 0xed18, 0x1, 0x0);
        gbc.writeMem(0x6675, { 0xa6 });
        gbc.writeMem(0xed18, { 0xd6 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x830d, gbc.sp());
        EXPECT(0x6676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xed18));
        // A6 03E4
        gbc.setState(0x43b, 0x8557, 0x9730, 0x8e59, 0x3a19, 0xfe4e, 0x1, 0x1);
        gbc.writeMem(0x43b, { 0xa6 });
        gbc.writeMem(0xfe4e, { 0xef });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8557, gbc.sp());
        EXPECT(0x43c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xfe4e));
        // A6 03E5
        gbc.setState(0x9d39, 0x4091, 0xff20, 0x2451, 0xcc00, 0xad85, 0x0, 0x0);
        gbc.writeMem(0x9d39, { 0xa6 });
        gbc.writeMem(0xad85, { 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4091, gbc.sp());
        EXPECT(0x9d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9d39));
        EXPECT(0x41, gbc.readMem(0xad85));
        // A6 03E6
        gbc.setState(0x356b, 0xccc3, 0xbe30, 0xc6f0, 0xa26f, 0x884e, 0x0, 0x1);
        gbc.writeMem(0x356b, { 0xa6 });
        gbc.writeMem(0x884e, { 0xe7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xccc3, gbc.sp());
        EXPECT(0x356c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x884e));
        // A6 03E7
        gbc.setState(0x117b, 0xf6b1, 0xc9d0, 0x9cc, 0x9529, 0xf401, 0x0, 0x1);
        gbc.writeMem(0x117b, { 0xa6 });
        gbc.writeMem(0xf401, { 0x16 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf6b1, gbc.sp());
        EXPECT(0x117c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xf401));
    }
