    TEST(gbcemu, opcode_aa) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // AA 0000
        gbc.setState(0xc6ee, 0x978b, 0xa9f0, 0x70cb, 0xbe92, 0x86ca, 0x1, 0x1);
        gbc.writeMem(0xc6ee, { 0xaa });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x978b, gbc.sp());
        EXPECT(0xc6ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc6ee));
        // AA 0001
        gbc.setState(0xe564, 0xc0c9, 0xd120, 0xa1fc, 0x226a, 0x8743, 0x1, 0x1);
        gbc.writeMem(0xe564, { 0xaa });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc0c9, gbc.sp());
        EXPECT(0xe565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe564));
        // AA 0002
        gbc.setState(0x181d, 0x1992, 0xf9e0, 0x1734, 0x7c41, 0x62de, 0x0, 0x0);
        gbc.writeMem(0x181d, { 0xaa });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1992, gbc.sp());
        EXPECT(0x181e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0003
        gbc.setState(0xeb0, 0x893b, 0x8de0, 0xca64, 0x6b8, 0xb145, 0x0, 0x1);
        gbc.writeMem(0xeb0, { 0xaa });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x893b, gbc.sp());
        EXPECT(0xeb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0004
        gbc.setState(0x87c7, 0x2204, 0xe8d0, 0x893c, 0xb4f4, 0xd0e3, 0x1, 0x1);
        gbc.writeMem(0x87c7, { 0xaa });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2204, gbc.sp());
        EXPECT(0x87c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x87c7));
        // AA 0006
        gbc.setState(0x4bc7, 0xc501, 0xe060, 0x6bbb, 0x72d8, 0x1a36, 0x1, 0x0);
        gbc.writeMem(0x4bc7, { 0xaa });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc501, gbc.sp());
        EXPECT(0x4bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0007
        gbc.setState(0x3e67, 0x9dbe, 0x4c40, 0x95b2, 0x2f6d, 0xf916, 0x0, 0x0);
        gbc.writeMem(0x3e67, { 0xaa });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9dbe, gbc.sp());
        EXPECT(0x3e68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0008
        gbc.setState(0x3c36, 0x8ec2, 0x4150, 0x855d, 0x78ba, 0xad8a, 0x0, 0x1);
        gbc.writeMem(0x3c36, { 0xaa });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8ec2, gbc.sp());
        EXPECT(0x3c37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0009
        gbc.setState(0xc63a, 0x8976, 0xe120, 0xba93, 0x2b19, 0x9c73, 0x0, 0x0);
        gbc.writeMem(0xc63a, { 0xaa });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8976, gbc.sp());
        EXPECT(0xc63b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc63a));
        // AA 000A
        gbc.setState(0x343a, 0x579b, 0x2d60, 0xc98a, 0x4b86, 0x2055, 0x0, 0x0);
        gbc.writeMem(0x343a, { 0xaa });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x579b, gbc.sp());
        EXPECT(0x343b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 000B
        gbc.setState(0x9f5c, 0x899a, 0x7480, 0x4f0, 0xf35e, 0x791b, 0x0, 0x0);
        gbc.writeMem(0x9f5c, { 0xaa });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x899a, gbc.sp());
        EXPECT(0x9f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9f5c));
        // AA 000C
        gbc.setState(0xaa43, 0x65c3, 0x96a0, 0x1545, 0x3bf6, 0xec38, 0x1, 0x0);
        gbc.writeMem(0xaa43, { 0xaa });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x65c3, gbc.sp());
        EXPECT(0xaa44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xaa43));
        // AA 000D
        gbc.setState(0x7ccc, 0x1950, 0x8a10, 0x6dd5, 0x7a80, 0x868a, 0x1, 0x1);
        gbc.writeMem(0x7ccc, { 0xaa });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1950, gbc.sp());
        EXPECT(0x7ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 000E
        gbc.setState(0x50bd, 0xf7d8, 0x88b0, 0x9b2b, 0x15e2, 0x609b, 0x1, 0x0);
        gbc.writeMem(0x50bd, { 0xaa });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf7d8, gbc.sp());
        EXPECT(0x50be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 000F
        gbc.setState(0x2044, 0xccdf, 0x4dc0, 0x80da, 0x79ab, 0x6780, 0x0, 0x1);
        gbc.writeMem(0x2044, { 0xaa });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xccdf, gbc.sp());
        EXPECT(0x2045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0010
        gbc.setState(0x768a, 0x75bd, 0x1310, 0x5b6f, 0x45f4, 0x1ff1, 0x0, 0x0);
        gbc.writeMem(0x768a, { 0xaa });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x75bd, gbc.sp());
        EXPECT(0x768b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0011
        gbc.setState(0x1ba1, 0xe019, 0x20e0, 0x4415, 0xdda4, 0x43bf, 0x1, 0x1);
        gbc.writeMem(0x1ba1, { 0xaa });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe019, gbc.sp());
        EXPECT(0x1ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0012
        gbc.setState(0x3b41, 0x4cbc, 0xb110, 0x4e76, 0x76e0, 0x3292, 0x0, 0x1);
        gbc.writeMem(0x3b41, { 0xaa });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4cbc, gbc.sp());
        EXPECT(0x3b42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0013
        gbc.setState(0x54ea, 0x168d, 0xab70, 0xef2c, 0xd8fc, 0x70c, 0x0, 0x0);
        gbc.writeMem(0x54ea, { 0xaa });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x168d, gbc.sp());
        EXPECT(0x54eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0014
        gbc.setState(0x7929, 0x1459, 0xbf50, 0x8cb, 0xdae7, 0x6610, 0x0, 0x0);
        gbc.writeMem(0x7929, { 0xaa });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1459, gbc.sp());
        EXPECT(0x792a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0015
        gbc.setState(0x2bf7, 0xb8fd, 0xd250, 0xdfd1, 0x182, 0xd51d, 0x1, 0x1);
        gbc.writeMem(0x2bf7, { 0xaa });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb8fd, gbc.sp());
        EXPECT(0x2bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0016
        gbc.setState(0xa6e4, 0x9d39, 0x3f70, 0x9e51, 0x765a, 0x5e95, 0x0, 0x0);
        gbc.writeMem(0xa6e4, { 0xaa });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9d39, gbc.sp());
        EXPECT(0xa6e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa6e4));
        // AA 0017
        gbc.setState(0x260d, 0x7af6, 0x68a0, 0xcd92, 0xb304, 0x8f18, 0x1, 0x0);
        gbc.writeMem(0x260d, { 0xaa });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7af6, gbc.sp());
        EXPECT(0x260e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0018
        gbc.setState(0x997f, 0x9159, 0xaae0, 0x9bac, 0x7f31, 0xe838, 0x1, 0x1);
        gbc.writeMem(0x997f, { 0xaa });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9159, gbc.sp());
        EXPECT(0x9980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x997f));
        // AA 0019
        gbc.setState(0x181, 0xba42, 0x3930, 0xfca1, 0xb171, 0xf32e, 0x1, 0x0);
        gbc.writeMem(0x181, { 0xaa });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xba42, gbc.sp());
        EXPECT(0x182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 001A
        gbc.setState(0x1619, 0xd014, 0x1790, 0xfb2b, 0xc39c, 0x7e81, 0x0, 0x1);
        gbc.writeMem(0x1619, { 0xaa });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd014, gbc.sp());
        EXPECT(0x161a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 001B
        gbc.setState(0x3887, 0x4e0, 0x8de0, 0x69e0, 0x3851, 0x1b7a, 0x0, 0x1);
        gbc.writeMem(0x3887, { 0xaa });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4e0, gbc.sp());
        EXPECT(0x3888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 001C
        gbc.setState(0x1186, 0x3077, 0xb350, 0x5868, 0x69b1, 0x2228, 0x0, 0x0);
        gbc.writeMem(0x1186, { 0xaa });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3077, gbc.sp());
        EXPECT(0x1187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 001D
        gbc.setState(0x7e93, 0xdc2f, 0xf140, 0xdb96, 0xcab9, 0x8f5f, 0x1, 0x1);
        gbc.writeMem(0x7e93, { 0xaa });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xdc2f, gbc.sp());
        EXPECT(0x7e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 001F
        gbc.setState(0x2edc, 0xe0fe, 0x7da0, 0xc958, 0x6b01, 0x3339, 0x0, 0x1);
        gbc.writeMem(0x2edc, { 0xaa });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe0fe, gbc.sp());
        EXPECT(0x2edd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0020
        gbc.setState(0x6f83, 0x6e18, 0xb070, 0x7c33, 0xbc05, 0x7df1, 0x0, 0x0);
        gbc.writeMem(0x6f83, { 0xaa });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6e18, gbc.sp());
        EXPECT(0x6f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0021
        gbc.setState(0xb762, 0x8b9f, 0x4340, 0x4ff3, 0xe98f, 0x98e9, 0x0, 0x0);
        gbc.writeMem(0xb762, { 0xaa });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8b9f, gbc.sp());
        EXPECT(0xb763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb762));
        // AA 0022
        gbc.setState(0x47c6, 0x4302, 0x69f0, 0x2c0e, 0xd630, 0xc1d0, 0x0, 0x1);
        gbc.writeMem(0x47c6, { 0xaa });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4302, gbc.sp());
        EXPECT(0x47c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0024
        gbc.setState(0xd44a, 0x9d76, 0x7d50, 0x1474, 0x1d4f, 0x972d, 0x0, 0x1);
        gbc.writeMem(0xd44a, { 0xaa });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9d76, gbc.sp());
        EXPECT(0xd44b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd44a));
        // AA 0025
        gbc.setState(0x916d, 0x1fcd, 0x3230, 0x3969, 0x3a6c, 0x7a56, 0x1, 0x0);
        gbc.writeMem(0x916d, { 0xaa });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1fcd, gbc.sp());
        EXPECT(0x916e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x916d));
        // AA 0027
        gbc.setState(0x84b7, 0xa482, 0x61c0, 0xd90b, 0xe117, 0xdb68, 0x0, 0x1);
        gbc.writeMem(0x84b7, { 0xaa });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa482, gbc.sp());
        EXPECT(0x84b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x84b7));
        // AA 0028
        gbc.setState(0x928, 0x5b38, 0x71f0, 0x7c42, 0x638c, 0xe031, 0x1, 0x1);
        gbc.writeMem(0x928, { 0xaa });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5b38, gbc.sp());
        EXPECT(0x929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0029
        gbc.setState(0x63a1, 0x261e, 0xfa50, 0xed21, 0x42ee, 0xd5ad, 0x1, 0x0);
        gbc.writeMem(0x63a1, { 0xaa });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x261e, gbc.sp());
        EXPECT(0x63a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 002A
        gbc.setState(0x2152, 0x79d1, 0xf3c0, 0xc668, 0x872c, 0x7250, 0x0, 0x0);
        gbc.writeMem(0x2152, { 0xaa });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x79d1, gbc.sp());
        EXPECT(0x2153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 002B
        gbc.setState(0x5b5b, 0x5e9f, 0x18f0, 0xd2e4, 0xae50, 0x8bb3, 0x1, 0x1);
        gbc.writeMem(0x5b5b, { 0xaa });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5e9f, gbc.sp());
        EXPECT(0x5b5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 002C
        gbc.setState(0xb754, 0x708a, 0xdbc0, 0xf5bd, 0x347a, 0x1b75, 0x0, 0x1);
        gbc.writeMem(0xb754, { 0xaa });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x708a, gbc.sp());
        EXPECT(0xb755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb754));
        // AA 002D
        gbc.setState(0x9f20, 0x2f89, 0x23f0, 0xd05c, 0x591d, 0x4bbc, 0x0, 0x0);
        gbc.writeMem(0x9f20, { 0xaa });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2f89, gbc.sp());
        EXPECT(0x9f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9f20));
        // AA 002E
        gbc.setState(0x7dbb, 0x151a, 0x6e0, 0x413b, 0x344d, 0x2834, 0x0, 0x0);
        gbc.writeMem(0x7dbb, { 0xaa });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x151a, gbc.sp());
        EXPECT(0x7dbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 002F
        gbc.setState(0xdb73, 0xbf36, 0x3040, 0x62, 0xf83b, 0x8125, 0x0, 0x0);
        gbc.writeMem(0xdb73, { 0xaa });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xbf36, gbc.sp());
        EXPECT(0xdb74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xdb73));
        // AA 0030
        gbc.setState(0xb1aa, 0x59ef, 0x5ff0, 0xf1e9, 0xa48d, 0xc548, 0x1, 0x0);
        gbc.writeMem(0xb1aa, { 0xaa });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x59ef, gbc.sp());
        EXPECT(0xb1ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb1aa));
        // AA 0031
        gbc.setState(0xa80f, 0xe686, 0x4d50, 0xfc19, 0x276e, 0xfa7b, 0x1, 0x1);
        gbc.writeMem(0xa80f, { 0xaa });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe686, gbc.sp());
        EXPECT(0xa810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa80f));
        // AA 0032
        gbc.setState(0x909e, 0x297a, 0x4ed0, 0xe8b4, 0x29a3, 0x3023, 0x1, 0x0);
        gbc.writeMem(0x909e, { 0xaa });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x297a, gbc.sp());
        EXPECT(0x909f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x909e));
        // AA 0033
        gbc.setState(0x7a91, 0x48ee, 0x5300, 0x385, 0x2312, 0x4d96, 0x0, 0x0);
        gbc.writeMem(0x7a91, { 0xaa });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x48ee, gbc.sp());
        EXPECT(0x7a92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0034
        gbc.setState(0x666, 0xb79c, 0x4320, 0xae6e, 0x32d3, 0xe6cf, 0x1, 0x0);
        gbc.writeMem(0x666, { 0xaa });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb79c, gbc.sp());
        EXPECT(0x667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0035
        gbc.setState(0x82b7, 0xe358, 0x8200, 0xa683, 0x577e, 0x7bd8, 0x1, 0x1);
        gbc.writeMem(0x82b7, { 0xaa });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe358, gbc.sp());
        EXPECT(0x82b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x82b7));
        // AA 0036
        gbc.setState(0x82fa, 0x3546, 0xf770, 0xef06, 0x46d6, 0x880d, 0x1, 0x0);
        gbc.writeMem(0x82fa, { 0xaa });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3546, gbc.sp());
        EXPECT(0x82fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x82fa));
        // AA 0037
        gbc.setState(0x4026, 0x809, 0xe680, 0x4816, 0xca30, 0xa3f6, 0x1, 0x0);
        gbc.writeMem(0x4026, { 0xaa });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x809, gbc.sp());
        EXPECT(0x4027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0038
        gbc.setState(0x2125, 0x9d85, 0x88f0, 0x8ad8, 0x6164, 0x462b, 0x1, 0x1);
        gbc.writeMem(0x2125, { 0xaa });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9d85, gbc.sp());
        EXPECT(0x2126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0039
        gbc.setState(0x1395, 0xa0d7, 0x7540, 0x832c, 0x6d5a, 0xb2fd, 0x0, 0x1);
        gbc.writeMem(0x1395, { 0xaa });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa0d7, gbc.sp());
        EXPECT(0x1396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 003A
        gbc.setState(0xdd7c, 0x65cc, 0x7540, 0xad25, 0xcdf0, 0xead3, 0x0, 0x0);
        gbc.writeMem(0xdd7c, { 0xaa });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x65cc, gbc.sp());
        EXPECT(0xdd7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xdd7c));
        // AA 003B
        gbc.setState(0x3774, 0x4134, 0x300, 0xd3ae, 0x3fed, 0xd5b2, 0x1, 0x0);
        gbc.writeMem(0x3774, { 0xaa });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4134, gbc.sp());
        EXPECT(0x3775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 003C
        gbc.setState(0x6e93, 0x1eed, 0x5300, 0x7cbf, 0x6d00, 0x7316, 0x0, 0x0);
        gbc.writeMem(0x6e93, { 0xaa });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1eed, gbc.sp());
        EXPECT(0x6e94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 003D
        gbc.setState(0xcd09, 0xb147, 0x9710, 0x1e32, 0xc3c0, 0xfbb6, 0x1, 0x1);
        gbc.writeMem(0xcd09, { 0xaa });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb147, gbc.sp());
        EXPECT(0xcd0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xcd09));
        // AA 003E
        gbc.setState(0x535d, 0xa6d7, 0x81a0, 0x4424, 0xf5d1, 0x4ba1, 0x0, 0x0);
        gbc.writeMem(0x535d, { 0xaa });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa6d7, gbc.sp());
        EXPECT(0x535e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 003F
        gbc.setState(0xa265, 0xe0ac, 0x8bf0, 0x542b, 0x7def, 0xc220, 0x1, 0x1);
        gbc.writeMem(0xa265, { 0xaa });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe0ac, gbc.sp());
        EXPECT(0xa266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa265));
        // AA 0040
        gbc.setState(0xaa75, 0xfdd3, 0xcdd0, 0x8c28, 0x2dd3, 0xa4c0, 0x1, 0x0);
        gbc.writeMem(0xaa75, { 0xaa });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfdd3, gbc.sp());
        EXPECT(0xaa76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xaa75));
        // AA 0041
        gbc.setState(0x1820, 0x2ef8, 0x5390, 0x428c, 0x3db5, 0x908b, 0x0, 0x0);
        gbc.writeMem(0x1820, { 0xaa });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2ef8, gbc.sp());
        EXPECT(0x1821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0043
        gbc.setState(0xa4b7, 0x1853, 0x76b0, 0x80e1, 0x6ba3, 0xb9f8, 0x1, 0x1);
        gbc.writeMem(0xa4b7, { 0xaa });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1853, gbc.sp());
        EXPECT(0xa4b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa4b7));
        // AA 0044
        gbc.setState(0xeaed, 0xb4a4, 0xa480, 0xd167, 0x5b49, 0xfaaa, 0x0, 0x1);
        gbc.writeMem(0xeaed, { 0xaa });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb4a4, gbc.sp());
        EXPECT(0xeaee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xeaed));
        // AA 0045
        gbc.setState(0xc0c0, 0xa7a1, 0x94a0, 0x3cc0, 0xff1f, 0xded9, 0x1, 0x1);
        gbc.writeMem(0xc0c0, { 0xaa });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa7a1, gbc.sp());
        EXPECT(0xc0c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc0c0));
        // AA 0046
        gbc.setState(0x34ea, 0xd596, 0xb220, 0x8e8, 0x3d9f, 0x1609, 0x0, 0x0);
        gbc.writeMem(0x34ea, { 0xaa });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd596, gbc.sp());
        EXPECT(0x34eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0047
        gbc.setState(0xcff6, 0xa276, 0x8420, 0xfa99, 0x6488, 0x455d, 0x1, 0x0);
        gbc.writeMem(0xcff6, { 0xaa });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa276, gbc.sp());
        EXPECT(0xcff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xcff6));
        // AA 0048
        gbc.setState(0x59ba, 0x5caf, 0x9b00, 0xc94b, 0xe7de, 0xc8b4, 0x0, 0x1);
        gbc.writeMem(0x59ba, { 0xaa });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5caf, gbc.sp());
        EXPECT(0x59bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0049
        gbc.setState(0xe8a1, 0x95cd, 0x3e70, 0x35c3, 0xfa22, 0x6ebe, 0x0, 0x1);
        gbc.writeMem(0xe8a1, { 0xaa });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x95cd, gbc.sp());
        EXPECT(0xe8a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe8a1));
        // AA 004A
        gbc.setState(0x88ae, 0xc90f, 0xcb0, 0x29d7, 0xfbec, 0x1a6f, 0x1, 0x0);
        gbc.writeMem(0x88ae, { 0xaa });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc90f, gbc.sp());
        EXPECT(0x88af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x88ae));
        // AA 004B
        gbc.setState(0x5e4c, 0x5240, 0x1aa0, 0x3aeb, 0x4212, 0x6a4, 0x0, 0x0);
        gbc.writeMem(0x5e4c, { 0xaa });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5240, gbc.sp());
        EXPECT(0x5e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 004C
        gbc.setState(0x3d95, 0x9efd, 0x5fb0, 0xe179, 0x3d6, 0x62e8, 0x1, 0x1);
        gbc.writeMem(0x3d95, { 0xaa });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9efd, gbc.sp());
        EXPECT(0x3d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 004D
        gbc.setState(0x144a, 0x572a, 0x6b30, 0x3e25, 0x8ae0, 0xe5, 0x1, 0x1);
        gbc.writeMem(0x144a, { 0xaa });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x572a, gbc.sp());
        EXPECT(0x144b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 004E
        gbc.setState(0xd57, 0x10ca, 0x3470, 0x9ba4, 0x836d, 0x4e52, 0x0, 0x0);
        gbc.writeMem(0xd57, { 0xaa });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x10ca, gbc.sp());
        EXPECT(0xd58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 004F
        gbc.setState(0xee54, 0x29c3, 0xc710, 0x3f57, 0x8522, 0x6352, 0x0, 0x0);
        gbc.writeMem(0xee54, { 0xaa });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x29c3, gbc.sp());
        EXPECT(0xee55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xee54));
        // AA 0050
        gbc.setState(0x9177, 0x2f25, 0xfdb0, 0x369e, 0xb9a3, 0x1626, 0x1, 0x1);
        gbc.writeMem(0x9177, { 0xaa });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2f25, gbc.sp());
        EXPECT(0x9178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9177));
        // AA 0051
        gbc.setState(0xa154, 0xa762, 0x3180, 0x413a, 0x9123, 0x9b61, 0x0, 0x0);
        gbc.writeMem(0xa154, { 0xaa });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa762, gbc.sp());
        EXPECT(0xa155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa154));
        // AA 0052
        gbc.setState(0xaf10, 0xcef2, 0xc40, 0x7a79, 0xe33e, 0x4588, 0x0, 0x1);
        gbc.writeMem(0xaf10, { 0xaa });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xcef2, gbc.sp());
        EXPECT(0xaf11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xaf10));
        // AA 0053
        gbc.setState(0xef6a, 0xd155, 0x19c0, 0xb6fe, 0x741d, 0x7ad5, 0x0, 0x1);
        gbc.writeMem(0xef6a, { 0xaa });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd155, gbc.sp());
        EXPECT(0xef6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xef6a));
        // AA 0054
        gbc.setState(0x943b, 0xff4c, 0x34b0, 0x822d, 0xdb05, 0x526, 0x1, 0x1);
        gbc.writeMem(0x943b, { 0xaa });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xff4c, gbc.sp());
        EXPECT(0x943c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x943b));
        // AA 0056
        gbc.setState(0xe931, 0x7dec, 0x7500, 0x3f95, 0x83e2, 0xfd71, 0x0, 0x1);
        gbc.writeMem(0xe931, { 0xaa });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7dec, gbc.sp());
        EXPECT(0xe932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe931));
        // AA 0057
        gbc.setState(0x4cd6, 0x26f4, 0xb6e0, 0xfeaa, 0x92fe, 0xbc67, 0x0, 0x0);
        gbc.writeMem(0x4cd6, { 0xaa });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x26f4, gbc.sp());
        EXPECT(0x4cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0058
        gbc.setState(0xbeb6, 0x4fa8, 0x8f20, 0x27b, 0x2dd9, 0x44c, 0x1, 0x1);
        gbc.writeMem(0xbeb6, { 0xaa });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4fa8, gbc.sp());
        EXPECT(0xbeb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbeb6));
        // AA 0059
        gbc.setState(0x9809, 0x5b6d, 0xc840, 0x42ce, 0x1fc, 0xc90f, 0x0, 0x0);
        gbc.writeMem(0x9809, { 0xaa });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5b6d, gbc.sp());
        EXPECT(0x980a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9809));
        // AA 005A
        gbc.setState(0x8a0f, 0x470c, 0xd3e0, 0x208f, 0xf193, 0xd845, 0x0, 0x1);
        gbc.writeMem(0x8a0f, { 0xaa });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x470c, gbc.sp());
        EXPECT(0x8a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8a0f));
        // AA 005B
        gbc.setState(0x715a, 0x3372, 0xd370, 0x53d1, 0xc0a3, 0x347, 0x1, 0x0);
        gbc.writeMem(0x715a, { 0xaa });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3372, gbc.sp());
        EXPECT(0x715b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 005C
        gbc.setState(0x4fbd, 0x543, 0x3530, 0xbc87, 0xe63, 0x2dbb, 0x0, 0x1);
        gbc.writeMem(0x4fbd, { 0xaa });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x543, gbc.sp());
        EXPECT(0x4fbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 005D
        gbc.setState(0x8af5, 0xb4c0, 0x82d0, 0x95a, 0xd59, 0x7a98, 0x0, 0x1);
        gbc.writeMem(0x8af5, { 0xaa });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb4c0, gbc.sp());
        EXPECT(0x8af6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8af5));
        // AA 005E
        gbc.setState(0x2f29, 0xb9, 0xd260, 0xf19f, 0x72bb, 0x93d9, 0x0, 0x0);
        gbc.writeMem(0x2f29, { 0xaa });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb9, gbc.sp());
        EXPECT(0x2f2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 005F
        gbc.setState(0xc144, 0x51c1, 0xdae0, 0xee37, 0x4986, 0x654c, 0x1, 0x1);
        gbc.writeMem(0xc144, { 0xaa });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x51c1, gbc.sp());
        EXPECT(0xc145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc144));
        // AA 0060
        gbc.setState(0x8cd4, 0x4512, 0xf9b0, 0x226d, 0x2432, 0xefb1, 0x0, 0x1);
        gbc.writeMem(0x8cd4, { 0xaa });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4512, gbc.sp());
        EXPECT(0x8cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8cd4));
        // AA 0061
        gbc.setState(0x7f79, 0x3f38, 0x7210, 0xae7c, 0x965d, 0x61b1, 0x0, 0x0);
        gbc.writeMem(0x7f79, { 0xaa });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3f38, gbc.sp());
        EXPECT(0x7f7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0062
        gbc.setState(0x3e9c, 0x1287, 0x9410, 0xafd5, 0x57eb, 0xe6ff, 0x0, 0x1);
        gbc.writeMem(0x3e9c, { 0xaa });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1287, gbc.sp());
        EXPECT(0x3e9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0063
        gbc.setState(0x166d, 0x74e6, 0x7260, 0x4d79, 0x6289, 0xb78f, 0x0, 0x1);
        gbc.writeMem(0x166d, { 0xaa });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x74e6, gbc.sp());
        EXPECT(0x166e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0064
        gbc.setState(0x5243, 0xcf19, 0x8c40, 0x6273, 0xb90b, 0xbc69, 0x0, 0x0);
        gbc.writeMem(0x5243, { 0xaa });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xcf19, gbc.sp());
        EXPECT(0x5244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0065
        gbc.setState(0x9d4, 0x62d7, 0xab70, 0x27bb, 0x5120, 0xfb13, 0x0, 0x1);
        gbc.writeMem(0x9d4, { 0xaa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x62d7, gbc.sp());
        EXPECT(0x9d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0066
        gbc.setState(0x381f, 0xdf5, 0xc3d0, 0xe8d1, 0x46f0, 0xfdd8, 0x0, 0x1);
        gbc.writeMem(0x381f, { 0xaa });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xdf5, gbc.sp());
        EXPECT(0x3820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0067
        gbc.setState(0x350c, 0xc7c1, 0x6760, 0xb94e, 0xc49e, 0x584b, 0x1, 0x1);
        gbc.writeMem(0x350c, { 0xaa });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc7c1, gbc.sp());
        EXPECT(0x350d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0068
        gbc.setState(0x23e5, 0x51c7, 0x7630, 0xaf71, 0xed32, 0xbde5, 0x1, 0x1);
        gbc.writeMem(0x23e5, { 0xaa });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x51c7, gbc.sp());
        EXPECT(0x23e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0069
        gbc.setState(0x7bc5, 0x9d42, 0x2670, 0x4cd1, 0x11bc, 0x17ff, 0x1, 0x1);
        gbc.writeMem(0x7bc5, { 0xaa });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9d42, gbc.sp());
        EXPECT(0x7bc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 006A
        gbc.setState(0x3ffd, 0xe238, 0x8ae0, 0x2526, 0x231e, 0x2ddd, 0x0, 0x0);
        gbc.writeMem(0x3ffd, { 0xaa });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe238, gbc.sp());
        EXPECT(0x3ffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 006B
        gbc.setState(0xebfc, 0xa97a, 0xf430, 0x349c, 0xc9bd, 0x4ba7, 0x0, 0x0);
        gbc.writeMem(0xebfc, { 0xaa });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa97a, gbc.sp());
        EXPECT(0xebfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xebfc));
        // AA 006D
        gbc.setState(0x1654, 0xf319, 0x7150, 0xf39d, 0xbe7b, 0xd0d4, 0x1, 0x1);
        gbc.writeMem(0x1654, { 0xaa });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf319, gbc.sp());
        EXPECT(0x1655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 006E
        gbc.setState(0xe932, 0xa64f, 0x46f0, 0x1aca, 0x94d7, 0x22ea, 0x0, 0x1);
        gbc.writeMem(0xe932, { 0xaa });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa64f, gbc.sp());
        EXPECT(0xe933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe932));
        // AA 006F
        gbc.setState(0x8d69, 0x5b54, 0x9380, 0x6d56, 0x908d, 0x68ed, 0x0, 0x1);
        gbc.writeMem(0x8d69, { 0xaa });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5b54, gbc.sp());
        EXPECT(0x8d6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8d69));
        // AA 0070
        gbc.setState(0xa09d, 0xc3a3, 0x52d0, 0x40d3, 0xc21c, 0x1bc3, 0x1, 0x1);
        gbc.writeMem(0xa09d, { 0xaa });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc3a3, gbc.sp());
        EXPECT(0xa09e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa09d));
        // AA 0071
        gbc.setState(0x418c, 0xeb4, 0xdac0, 0x2883, 0xbc4d, 0xe2fa, 0x1, 0x0);
        gbc.writeMem(0x418c, { 0xaa });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xeb4, gbc.sp());
        EXPECT(0x418d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0072
        gbc.setState(0xb0a6, 0x1ebf, 0xb550, 0x9801, 0xb229, 0xf7aa, 0x0, 0x1);
        gbc.writeMem(0xb0a6, { 0xaa });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1ebf, gbc.sp());
        EXPECT(0xb0a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb0a6));
        // AA 0073
        gbc.setState(0xd24c, 0x455, 0xd650, 0xe5e3, 0xe172, 0x2fb9, 0x1, 0x1);
        gbc.writeMem(0xd24c, { 0xaa });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x455, gbc.sp());
        EXPECT(0xd24d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd24c));
        // AA 0074
        gbc.setState(0x98a1, 0x6de8, 0xdc60, 0x496b, 0xa862, 0xa8d6, 0x1, 0x0);
        gbc.writeMem(0x98a1, { 0xaa });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6de8, gbc.sp());
        EXPECT(0x98a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x98a1));
        // AA 0075
        gbc.setState(0x16cc, 0x38ca, 0x68e0, 0xbb83, 0x49e0, 0xd558, 0x1, 0x0);
        gbc.writeMem(0x16cc, { 0xaa });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x38ca, gbc.sp());
        EXPECT(0x16cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0076
        gbc.setState(0x902b, 0x3fbf, 0x6be0, 0xa366, 0x6452, 0x237, 0x0, 0x0);
        gbc.writeMem(0x902b, { 0xaa });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3fbf, gbc.sp());
        EXPECT(0x902c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x902b));
        // AA 0077
        gbc.setState(0x9405, 0x472e, 0x44f0, 0x150, 0xdac3, 0x4704, 0x0, 0x1);
        gbc.writeMem(0x9405, { 0xaa });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x472e, gbc.sp());
        EXPECT(0x9406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9405));
        // AA 0078
        gbc.setState(0x9d4d, 0x36fe, 0x8a70, 0x11f1, 0x576d, 0x4db1, 0x0, 0x1);
        gbc.writeMem(0x9d4d, { 0xaa });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x36fe, gbc.sp());
        EXPECT(0x9d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9d4d));
        // AA 0079
        gbc.setState(0xd517, 0x7aa5, 0x7ec0, 0xd2ee, 0xf404, 0x6254, 0x1, 0x1);
        gbc.writeMem(0xd517, { 0xaa });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7aa5, gbc.sp());
        EXPECT(0xd518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd517));
        // AA 007A
        gbc.setState(0x5573, 0xf268, 0xe60, 0x948, 0x4f05, 0x2d2, 0x0, 0x0);
        gbc.writeMem(0x5573, { 0xaa });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf268, gbc.sp());
        EXPECT(0x5574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 007B
        gbc.setState(0x9d1e, 0x2e07, 0xa4e0, 0x8288, 0x8838, 0xb1c7, 0x0, 0x1);
        gbc.writeMem(0x9d1e, { 0xaa });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2e07, gbc.sp());
        EXPECT(0x9d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9d1e));
        // AA 007C
        gbc.setState(0x80e5, 0x996c, 0x87a0, 0x99d5, 0x1f94, 0xe691, 0x1, 0x0);
        gbc.writeMem(0x80e5, { 0xaa });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x996c, gbc.sp());
        EXPECT(0x80e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x80e5));
        // AA 007D
        gbc.setState(0xe87e, 0x1b63, 0x85d0, 0xce92, 0x7a71, 0xad77, 0x0, 0x0);
        gbc.writeMem(0xe87e, { 0xaa });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1b63, gbc.sp());
        EXPECT(0xe87f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe87e));
        // AA 007F
        gbc.setState(0x2c6b, 0x5aa2, 0xa20, 0xcdc7, 0x6591, 0x607c, 0x0, 0x1);
        gbc.writeMem(0x2c6b, { 0xaa });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5aa2, gbc.sp());
        EXPECT(0x2c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0080
        gbc.setState(0xe6de, 0xba45, 0x1e00, 0x173, 0x9d6d, 0x8397, 0x0, 0x1);
        gbc.writeMem(0xe6de, { 0xaa });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xba45, gbc.sp());
        EXPECT(0xe6df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe6de));
        // AA 0081
        gbc.setState(0x2b8d, 0x20ac, 0xed30, 0xe992, 0x4751, 0x9d1a, 0x1, 0x1);
        gbc.writeMem(0x2b8d, { 0xaa });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x20ac, gbc.sp());
        EXPECT(0x2b8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0082
        gbc.setState(0xbcbe, 0x1f86, 0x9c80, 0xd8d2, 0x824a, 0xd01f, 0x0, 0x1);
        gbc.writeMem(0xbcbe, { 0xaa });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1f86, gbc.sp());
        EXPECT(0xbcbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbcbe));
        // AA 0085
        gbc.setState(0x21cb, 0xed13, 0xf8d0, 0x69ae, 0x828e, 0x2ce0, 0x1, 0x0);
        gbc.writeMem(0x21cb, { 0xaa });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xed13, gbc.sp());
        EXPECT(0x21cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0086
        gbc.setState(0x41fa, 0xd2ab, 0xebd0, 0x307, 0x48fd, 0x7f97, 0x1, 0x0);
        gbc.writeMem(0x41fa, { 0xaa });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd2ab, gbc.sp());
        EXPECT(0x41fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0087
        gbc.setState(0xd1a1, 0xdfcc, 0x98b0, 0x3e97, 0xa3d, 0x234a, 0x0, 0x0);
        gbc.writeMem(0xd1a1, { 0xaa });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xdfcc, gbc.sp());
        EXPECT(0xd1a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd1a1));
        // AA 0088
        gbc.setState(0xdbaa, 0xd070, 0x1230, 0xe093, 0x431b, 0xa327, 0x0, 0x1);
        gbc.writeMem(0xdbaa, { 0xaa });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd070, gbc.sp());
        EXPECT(0xdbab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xdbaa));
        // AA 0089
        gbc.setState(0xa186, 0x68f8, 0xcb0, 0x9da1, 0x6607, 0x718b, 0x0, 0x1);
        gbc.writeMem(0xa186, { 0xaa });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x68f8, gbc.sp());
        EXPECT(0xa187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa186));
        // AA 008A
        gbc.setState(0x63c7, 0xdb41, 0x9c40, 0x75b9, 0x3b1, 0x15cd, 0x1, 0x0);
        gbc.writeMem(0x63c7, { 0xaa });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdb41, gbc.sp());
        EXPECT(0x63c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 008B
        gbc.setState(0xae7c, 0xb1cf, 0xc040, 0x6ba1, 0xeae4, 0xd3e2, 0x1, 0x1);
        gbc.writeMem(0xae7c, { 0xaa });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb1cf, gbc.sp());
        EXPECT(0xae7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xae7c));
        // AA 008C
        gbc.setState(0x407d, 0x68cf, 0xad80, 0x52eb, 0x15fd, 0xb02, 0x1, 0x0);
        gbc.writeMem(0x407d, { 0xaa });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x68cf, gbc.sp());
        EXPECT(0x407e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 008E
        gbc.setState(0x17c, 0x2173, 0xde80, 0x32e0, 0xc6db, 0xabae, 0x0, 0x1);
        gbc.writeMem(0x17c, { 0xaa });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2173, gbc.sp());
        EXPECT(0x17d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 008F
        gbc.setState(0x9a8, 0x88d3, 0x6c00, 0xf216, 0x9ec6, 0x918, 0x1, 0x0);
        gbc.writeMem(0x9a8, { 0xaa });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x88d3, gbc.sp());
        EXPECT(0x9a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0090
        gbc.setState(0xe158, 0xe7df, 0x5b00, 0xf2e5, 0x78cc, 0x5470, 0x1, 0x1);
        gbc.writeMem(0xe158, { 0xaa });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe7df, gbc.sp());
        EXPECT(0xe159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe158));
        // AA 0091
        gbc.setState(0x8023, 0x75bc, 0xdcb0, 0x8235, 0xa7c2, 0x8562, 0x0, 0x1);
        gbc.writeMem(0x8023, { 0xaa });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x75bc, gbc.sp());
        EXPECT(0x8024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8023));
        // AA 0092
        gbc.setState(0x16bb, 0x5ad9, 0x9870, 0xff53, 0x3ba7, 0x5c0a, 0x1, 0x0);
        gbc.writeMem(0x16bb, { 0xaa });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5ad9, gbc.sp());
        EXPECT(0x16bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0093
        gbc.setState(0x8282, 0x31f8, 0x3fd0, 0x65c7, 0xb59, 0x61c8, 0x0, 0x0);
        gbc.writeMem(0x8282, { 0xaa });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x31f8, gbc.sp());
        EXPECT(0x8283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8282));
        // AA 0094
        gbc.setState(0x2b3e, 0x35c0, 0x9c10, 0xdd10, 0x4436, 0x5b3c, 0x1, 0x0);
        gbc.writeMem(0x2b3e, { 0xaa });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x35c0, gbc.sp());
        EXPECT(0x2b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0095
        gbc.setState(0x2ef7, 0x7489, 0x7dd0, 0x49e2, 0xd5b1, 0xb50a, 0x0, 0x0);
        gbc.writeMem(0x2ef7, { 0xaa });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7489, gbc.sp());
        EXPECT(0x2ef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0096
        gbc.setState(0x1aee, 0xf4e4, 0x66f0, 0x86d9, 0xa0e3, 0x30f5, 0x0, 0x0);
        gbc.writeMem(0x1aee, { 0xaa });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf4e4, gbc.sp());
        EXPECT(0x1aef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0098
        gbc.setState(0xa998, 0xf7f5, 0x1260, 0x9f7b, 0x8ce9, 0x8a20, 0x0, 0x1);
        gbc.writeMem(0xa998, { 0xaa });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf7f5, gbc.sp());
        EXPECT(0xa999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa998));
        // AA 0099
        gbc.setState(0x1716, 0x38b1, 0xc550, 0x7a84, 0xfe6e, 0x893b, 0x1, 0x1);
        gbc.writeMem(0x1716, { 0xaa });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x38b1, gbc.sp());
        EXPECT(0x1717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 009A
        gbc.setState(0x9982, 0xe8c5, 0x1140, 0xb2c4, 0x7769, 0xd6e2, 0x0, 0x0);
        gbc.writeMem(0x9982, { 0xaa });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe8c5, gbc.sp());
        EXPECT(0x9983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9982));
        // AA 009B
        gbc.setState(0x88af, 0xf6c8, 0x8180, 0x7579, 0xaf5, 0x772, 0x0, 0x0);
        gbc.writeMem(0x88af, { 0xaa });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf6c8, gbc.sp());
        EXPECT(0x88b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x88af));
        // AA 009C
        gbc.setState(0xef9a, 0xc20d, 0x1820, 0x2643, 0x3b5e, 0x2115, 0x1, 0x1);
        gbc.writeMem(0xef9a, { 0xaa });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc20d, gbc.sp());
        EXPECT(0xef9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xef9a));
        // AA 009D
        gbc.setState(0x1918, 0xbebf, 0xc2b0, 0x24ac, 0xfd3d, 0x409b, 0x1, 0x1);
        gbc.writeMem(0x1918, { 0xaa });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbebf, gbc.sp());
        EXPECT(0x1919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 009E
        gbc.setState(0xde91, 0x2087, 0xed10, 0x55ae, 0x3e3f, 0xdf31, 0x1, 0x0);
        gbc.writeMem(0xde91, { 0xaa });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2087, gbc.sp());
        EXPECT(0xde92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xde91));
        // AA 00A0
        gbc.setState(0xa841, 0x2ea5, 0xd9a0, 0x19ef, 0xb44a, 0x40f8, 0x1, 0x1);
        gbc.writeMem(0xa841, { 0xaa });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2ea5, gbc.sp());
        EXPECT(0xa842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa841));
        // AA 00A1
        gbc.setState(0x1005, 0xf7dc, 0x6180, 0x8261, 0xae0e, 0x546d, 0x1, 0x0);
        gbc.writeMem(0x1005, { 0xaa });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf7dc, gbc.sp());
        EXPECT(0x1006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00A2
        gbc.setState(0x449, 0xb7c, 0xc150, 0x2743, 0x7a6f, 0x467e, 0x1, 0x1);
        gbc.writeMem(0x449, { 0xaa });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb7c, gbc.sp());
        EXPECT(0x44a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00A3
        gbc.setState(0x5eda, 0xbe, 0x8b90, 0xd849, 0xe24c, 0x9f85, 0x0, 0x0);
        gbc.writeMem(0x5eda, { 0xaa });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xbe, gbc.sp());
        EXPECT(0x5edb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00A4
        gbc.setState(0x6417, 0xd573, 0xc910, 0x29a0, 0xc397, 0xbefc, 0x1, 0x1);
        gbc.writeMem(0x6417, { 0xaa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd573, gbc.sp());
        EXPECT(0x6418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00A5
        gbc.setState(0x35e2, 0x2025, 0xcdd0, 0x6ddb, 0xc5af, 0xfc40, 0x1, 0x1);
        gbc.writeMem(0x35e2, { 0xaa });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2025, gbc.sp());
        EXPECT(0x35e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00A6
        gbc.setState(0x255d, 0x1c28, 0x1f20, 0xaf, 0x8556, 0x25f4, 0x0, 0x0);
        gbc.writeMem(0x255d, { 0xaa });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1c28, gbc.sp());
        EXPECT(0x255e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00A7
        gbc.setState(0x49c9, 0xdc51, 0xf480, 0xebd3, 0x2c52, 0x2f4c, 0x1, 0x1);
        gbc.writeMem(0x49c9, { 0xaa });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdc51, gbc.sp());
        EXPECT(0x49ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00A8
        gbc.setState(0xd157, 0x694b, 0xdba0, 0x5a2d, 0x826, 0x5993, 0x1, 0x1);
        gbc.writeMem(0xd157, { 0xaa });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x694b, gbc.sp());
        EXPECT(0xd158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd157));
        // AA 00A9
        gbc.setState(0xafa6, 0xfa7b, 0x8290, 0xaca3, 0x8e1e, 0xd4ea, 0x1, 0x0);
        gbc.writeMem(0xafa6, { 0xaa });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfa7b, gbc.sp());
        EXPECT(0xafa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xafa6));
        // AA 00AA
        gbc.setState(0x4eef, 0xfafc, 0xee50, 0x7958, 0xd341, 0xe9ab, 0x0, 0x0);
        gbc.writeMem(0x4eef, { 0xaa });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfafc, gbc.sp());
        EXPECT(0x4ef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00AB
        gbc.setState(0x8ba1, 0x6c0f, 0x24f0, 0xb930, 0x6780, 0xafd6, 0x1, 0x0);
        gbc.writeMem(0x8ba1, { 0xaa });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6c0f, gbc.sp());
        EXPECT(0x8ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8ba1));
        // AA 00AC
        gbc.setState(0x68dc, 0x5112, 0xa530, 0x84ec, 0x8de5, 0xacf8, 0x1, 0x1);
        gbc.writeMem(0x68dc, { 0xaa });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5112, gbc.sp());
        EXPECT(0x68dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00AD
        gbc.setState(0x3433, 0x3d11, 0xb0e0, 0xc9ea, 0x7336, 0x4cb0, 0x0, 0x0);
        gbc.writeMem(0x3433, { 0xaa });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3d11, gbc.sp());
        EXPECT(0x3434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00AE
        gbc.setState(0xd609, 0x761c, 0xea90, 0xe9d, 0x1bc8, 0xc5d3, 0x0, 0x0);
        gbc.writeMem(0xd609, { 0xaa });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x761c, gbc.sp());
        EXPECT(0xd60a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd609));
        // AA 00AF
        gbc.setState(0x9dc4, 0x4e95, 0x12b0, 0x902f, 0xdba8, 0x3b2c, 0x1, 0x0);
        gbc.writeMem(0x9dc4, { 0xaa });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4e95, gbc.sp());
        EXPECT(0x9dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9dc4));
        // AA 00B0
        gbc.setState(0x90ed, 0x5f98, 0x92a0, 0x4079, 0x5aba, 0x493c, 0x1, 0x0);
        gbc.writeMem(0x90ed, { 0xaa });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5f98, gbc.sp());
        EXPECT(0x90ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x90ed));
        // AA 00B1
        gbc.setState(0xce83, 0xde73, 0x91d0, 0xc705, 0x1ea2, 0xcb6e, 0x0, 0x0);
        gbc.writeMem(0xce83, { 0xaa });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xde73, gbc.sp());
        EXPECT(0xce84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xce83));
        // AA 00B2
        gbc.setState(0x17ad, 0x9a7c, 0xae70, 0x9355, 0xb66c, 0xc3e5, 0x1, 0x0);
        gbc.writeMem(0x17ad, { 0xaa });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9a7c, gbc.sp());
        EXPECT(0x17ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00B3
        gbc.setState(0xee86, 0x3a68, 0x6a10, 0x8c86, 0xefb5, 0x121f, 0x1, 0x0);
        gbc.writeMem(0xee86, { 0xaa });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3a68, gbc.sp());
        EXPECT(0xee87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xee86));
        // AA 00B4
        gbc.setState(0xc9ba, 0x1adc, 0x88f0, 0x1827, 0x306d, 0xe731, 0x1, 0x0);
        gbc.writeMem(0xc9ba, { 0xaa });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1adc, gbc.sp());
        EXPECT(0xc9bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc9ba));
        // AA 00B5
        gbc.setState(0x2a11, 0x2a4d, 0x2450, 0xa74, 0xb466, 0xffec, 0x0, 0x1);
        gbc.writeMem(0x2a11, { 0xaa });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2a4d, gbc.sp());
        EXPECT(0x2a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00B6
        gbc.setState(0x281a, 0xfaf8, 0x7e40, 0x4218, 0xdedc, 0x807b, 0x1, 0x1);
        gbc.writeMem(0x281a, { 0xaa });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfaf8, gbc.sp());
        EXPECT(0x281b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00B7
        gbc.setState(0x5f0d, 0xd122, 0x1d80, 0x2d77, 0xd2f5, 0xf939, 0x1, 0x1);
        gbc.writeMem(0x5f0d, { 0xaa });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd122, gbc.sp());
        EXPECT(0x5f0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00B8
        gbc.setState(0x314, 0xccd4, 0xa7c0, 0x128, 0x57cb, 0xa47, 0x0, 0x1);
        gbc.writeMem(0x314, { 0xaa });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xccd4, gbc.sp());
        EXPECT(0x315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00B9
        gbc.setState(0xa767, 0x2978, 0xe520, 0xbf6a, 0x7195, 0x4abd, 0x0, 0x0);
        gbc.writeMem(0xa767, { 0xaa });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2978, gbc.sp());
        EXPECT(0xa768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa767));
        // AA 00BC
        gbc.setState(0xd431, 0xd72b, 0x2640, 0xab30, 0x3fc9, 0x1061, 0x1, 0x1);
        gbc.writeMem(0xd431, { 0xaa });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd72b, gbc.sp());
        EXPECT(0xd432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd431));
        // AA 00BD
        gbc.setState(0x1a6a, 0x6ea8, 0xd390, 0xfc13, 0x7162, 0xa8b, 0x1, 0x1);
        gbc.writeMem(0x1a6a, { 0xaa });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6ea8, gbc.sp());
        EXPECT(0x1a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00BE
        gbc.setState(0xcc21, 0x4246, 0xb800, 0x3c0, 0x61bc, 0xa59a, 0x0, 0x1);
        gbc.writeMem(0xcc21, { 0xaa });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4246, gbc.sp());
        EXPECT(0xcc22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xcc21));
        // AA 00C0
        gbc.setState(0xe3, 0xf8f6, 0x35c0, 0xf73, 0x4f6d, 0x7add, 0x0, 0x0);
        gbc.writeMem(0xe3, { 0xaa });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf8f6, gbc.sp());
        EXPECT(0xe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00C1
        gbc.setState(0x3ae4, 0x42dd, 0xdc00, 0xf581, 0xc9dc, 0xf652, 0x0, 0x0);
        gbc.writeMem(0x3ae4, { 0xaa });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x42dd, gbc.sp());
        EXPECT(0x3ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00C2
        gbc.setState(0xd468, 0x212a, 0xce10, 0x4798, 0xdfe7, 0xfedd, 0x0, 0x1);
        gbc.writeMem(0xd468, { 0xaa });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x212a, gbc.sp());
        EXPECT(0xd469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd468));
        // AA 00C3
        gbc.setState(0x9a40, 0x4d6f, 0x3ac0, 0x5047, 0xb1d5, 0xeddd, 0x0, 0x0);
        gbc.writeMem(0x9a40, { 0xaa });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4d6f, gbc.sp());
        EXPECT(0x9a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9a40));
        // AA 00C4
        gbc.setState(0x908b, 0x9669, 0x77e0, 0x60ad, 0xd2eb, 0xdd38, 0x0, 0x1);
        gbc.writeMem(0x908b, { 0xaa });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9669, gbc.sp());
        EXPECT(0x908c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x908b));
        // AA 00C5
        gbc.setState(0x2e99, 0x7675, 0xdcf0, 0x15bf, 0x262c, 0xcce6, 0x0, 0x1);
        gbc.writeMem(0x2e99, { 0xaa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7675, gbc.sp());
        EXPECT(0x2e9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00C6
        gbc.setState(0x4d58, 0x278c, 0xbb60, 0xbae7, 0xacfc, 0xf786, 0x0, 0x0);
        gbc.writeMem(0x4d58, { 0xaa });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x278c, gbc.sp());
        EXPECT(0x4d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00C7
        gbc.setState(0x2a26, 0x9130, 0x48f0, 0x23c4, 0x7bd9, 0x46d2, 0x1, 0x1);
        gbc.writeMem(0x2a26, { 0xaa });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9130, gbc.sp());
        EXPECT(0x2a27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00C8
        gbc.setState(0x2268, 0xfef8, 0x9370, 0x98d7, 0x4006, 0xc66b, 0x1, 0x0);
        gbc.writeMem(0x2268, { 0xaa });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfef8, gbc.sp());
        EXPECT(0x2269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00C9
        gbc.setState(0x6412, 0x9184, 0x81d0, 0x8af2, 0x7c59, 0x984c, 0x1, 0x1);
        gbc.writeMem(0x6412, { 0xaa });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9184, gbc.sp());
        EXPECT(0x6413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00CA
        gbc.setState(0x185c, 0xc1fb, 0x3f30, 0x2236, 0x5330, 0x107c, 0x0, 0x1);
        gbc.writeMem(0x185c, { 0xaa });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc1fb, gbc.sp());
        EXPECT(0x185d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00CC
        gbc.setState(0x162, 0x65a7, 0x2200, 0x1be3, 0xca34, 0x5dfa, 0x0, 0x0);
        gbc.writeMem(0x162, { 0xaa });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x65a7, gbc.sp());
        EXPECT(0x163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00CD
        gbc.setState(0x922d, 0xc9ae, 0x33d0, 0x15f1, 0x37e8, 0x3ecc, 0x0, 0x0);
        gbc.writeMem(0x922d, { 0xaa });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc9ae, gbc.sp());
        EXPECT(0x922e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x922d));
        // AA 00CE
        gbc.setState(0x468c, 0x5faa, 0xe870, 0x2d1b, 0x6b37, 0xe38a, 0x0, 0x1);
        gbc.writeMem(0x468c, { 0xaa });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5faa, gbc.sp());
        EXPECT(0x468d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00CF
        gbc.setState(0x9f66, 0x9cec, 0x69c0, 0x713d, 0xc825, 0x74a1, 0x0, 0x0);
        gbc.writeMem(0x9f66, { 0xaa });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9cec, gbc.sp());
        EXPECT(0x9f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9f66));
        // AA 00D0
        gbc.setState(0x1146, 0xa5eb, 0x5af0, 0x7502, 0x8aeb, 0xdbd2, 0x0, 0x0);
        gbc.writeMem(0x1146, { 0xaa });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa5eb, gbc.sp());
        EXPECT(0x1147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00D1
        gbc.setState(0x723e, 0xfcb, 0xba0, 0x1b6d, 0xdaa5, 0xdb87, 0x0, 0x0);
        gbc.writeMem(0x723e, { 0xaa });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfcb, gbc.sp());
        EXPECT(0x723f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00D2
        gbc.setState(0x2d27, 0x830b, 0x3a40, 0x56c7, 0xbbae, 0x2002, 0x0, 0x1);
        gbc.writeMem(0x2d27, { 0xaa });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x830b, gbc.sp());
        EXPECT(0x2d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00D3
        gbc.setState(0xc9e0, 0xb90e, 0xee40, 0xccd8, 0x4cfc, 0xed10, 0x1, 0x1);
        gbc.writeMem(0xc9e0, { 0xaa });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb90e, gbc.sp());
        EXPECT(0xc9e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc9e0));
        // AA 00D4
        gbc.setState(0x70dd, 0xf1fd, 0xa520, 0x5a84, 0x9740, 0x5056, 0x0, 0x1);
        gbc.writeMem(0x70dd, { 0xaa });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf1fd, gbc.sp());
        EXPECT(0x70de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00D6
        gbc.setState(0xc3d2, 0xcafa, 0x1390, 0xa564, 0x9669, 0x4604, 0x1, 0x0);
        gbc.writeMem(0xc3d2, { 0xaa });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcafa, gbc.sp());
        EXPECT(0xc3d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc3d2));
        // AA 00D7
        gbc.setState(0x3754, 0xe570, 0x5290, 0x8c, 0x2c13, 0x9ff4, 0x1, 0x1);
        gbc.writeMem(0x3754, { 0xaa });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe570, gbc.sp());
        EXPECT(0x3755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00D8
        gbc.setState(0xef7f, 0x5fde, 0xc280, 0x54f3, 0xa97b, 0x5753, 0x1, 0x1);
        gbc.writeMem(0xef7f, { 0xaa });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5fde, gbc.sp());
        EXPECT(0xef80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xef7f));
        // AA 00D9
        gbc.setState(0x8a04, 0x4b6a, 0x3490, 0xc161, 0xb11d, 0x56f4, 0x1, 0x1);
        gbc.writeMem(0x8a04, { 0xaa });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4b6a, gbc.sp());
        EXPECT(0x8a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8a04));
        // AA 00DA
        gbc.setState(0xdadb, 0x6c8d, 0xb240, 0xe720, 0x84b, 0x404f, 0x1, 0x0);
        gbc.writeMem(0xdadb, { 0xaa });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6c8d, gbc.sp());
        EXPECT(0xdadc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xdadb));
        // AA 00DC
        gbc.setState(0x1266, 0xcc99, 0xaa80, 0x8e56, 0xcde7, 0xa60, 0x1, 0x0);
        gbc.writeMem(0x1266, { 0xaa });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcc99, gbc.sp());
        EXPECT(0x1267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00DD
        gbc.setState(0xb415, 0x2281, 0x9c50, 0xc13b, 0x34e7, 0x1390, 0x1, 0x1);
        gbc.writeMem(0xb415, { 0xaa });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2281, gbc.sp());
        EXPECT(0xb416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb415));
        // AA 00DE
        gbc.setState(0x239a, 0x4ae5, 0x42b0, 0xe850, 0x9, 0x55df, 0x1, 0x1);
        gbc.writeMem(0x239a, { 0xaa });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4ae5, gbc.sp());
        EXPECT(0x239b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00DF
        gbc.setState(0xb6c8, 0xbe31, 0x55c0, 0x829d, 0x3dbe, 0xe6f5, 0x1, 0x1);
        gbc.writeMem(0xb6c8, { 0xaa });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbe31, gbc.sp());
        EXPECT(0xb6c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb6c8));
        // AA 00E0
        gbc.setState(0xe481, 0x540a, 0x7430, 0xa5de, 0xd58, 0xd034, 0x1, 0x0);
        gbc.writeMem(0xe481, { 0xaa });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x540a, gbc.sp());
        EXPECT(0xe482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe481));
        // AA 00E1
        gbc.setState(0x4504, 0xe952, 0xd300, 0x50da, 0x728b, 0xe574, 0x0, 0x0);
        gbc.writeMem(0x4504, { 0xaa });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe952, gbc.sp());
        EXPECT(0x4505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00E2
        gbc.setState(0xbad8, 0x8aa9, 0x9fb0, 0xc56b, 0xf226, 0xc122, 0x1, 0x1);
        gbc.writeMem(0xbad8, { 0xaa });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8aa9, gbc.sp());
        EXPECT(0xbad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbad8));
        // AA 00E3
        gbc.setState(0xe7fc, 0x4090, 0xd980, 0x8dcb, 0xddbd, 0xdfdd, 0x0, 0x1);
        gbc.writeMem(0xe7fc, { 0xaa });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4090, gbc.sp());
        EXPECT(0xe7fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe7fc));
        // AA 00E4
        gbc.setState(0x9109, 0x8a4b, 0x1450, 0xaa9e, 0xe2a8, 0x2cdf, 0x0, 0x0);
        gbc.writeMem(0x9109, { 0xaa });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8a4b, gbc.sp());
        EXPECT(0x910a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9109));
        // AA 00E5
        gbc.setState(0x4cf6, 0x9043, 0xdd80, 0x15ae, 0x54cf, 0x25a5, 0x1, 0x1);
        gbc.writeMem(0x4cf6, { 0xaa });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9043, gbc.sp());
        EXPECT(0x4cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00E6
        gbc.setState(0xc65a, 0x3f64, 0xada0, 0xd6dd, 0x37af, 0x3fe3, 0x0, 0x0);
        gbc.writeMem(0xc65a, { 0xaa });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3f64, gbc.sp());
        EXPECT(0xc65b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc65a));
        // AA 00E7
        gbc.setState(0x4670, 0x2542, 0x4c00, 0xe517, 0x9845, 0xca9b, 0x1, 0x0);
        gbc.writeMem(0x4670, { 0xaa });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2542, gbc.sp());
        EXPECT(0x4671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00E9
        gbc.setState(0x840d, 0x5abb, 0xc90, 0x2801, 0x3334, 0x915, 0x0, 0x0);
        gbc.writeMem(0x840d, { 0xaa });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5abb, gbc.sp());
        EXPECT(0x840e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x840d));
        // AA 00EA
        gbc.setState(0x844c, 0x4c2e, 0x2e60, 0x1da5, 0x3c81, 0xb58f, 0x0, 0x1);
        gbc.writeMem(0x844c, { 0xaa });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4c2e, gbc.sp());
        EXPECT(0x844d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x844c));
        // AA 00EB
        gbc.setState(0x7e3b, 0x5825, 0x910, 0x5bb9, 0x8002, 0xb28b, 0x1, 0x1);
        gbc.writeMem(0x7e3b, { 0xaa });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5825, gbc.sp());
        EXPECT(0x7e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00EC
        gbc.setState(0x4fee, 0xe89d, 0xa710, 0xd831, 0x431c, 0xac7d, 0x0, 0x1);
        gbc.writeMem(0x4fee, { 0xaa });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe89d, gbc.sp());
        EXPECT(0x4fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00ED
        gbc.setState(0x8023, 0xa70c, 0x7740, 0x8d45, 0xec30, 0x997e, 0x1, 0x0);
        gbc.writeMem(0x8023, { 0xaa });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa70c, gbc.sp());
        EXPECT(0x8024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8023));
        // AA 00EF
        gbc.setState(0x1f78, 0x3af3, 0x23d0, 0xec6d, 0x9ea4, 0x25f, 0x1, 0x0);
        gbc.writeMem(0x1f78, { 0xaa });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3af3, gbc.sp());
        EXPECT(0x1f79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00F0
        gbc.setState(0xcc47, 0x14aa, 0xd820, 0x7c06, 0xce6c, 0xc3a, 0x0, 0x0);
        gbc.writeMem(0xcc47, { 0xaa });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x14aa, gbc.sp());
        EXPECT(0xcc48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xcc47));
        // AA 00F1
        gbc.setState(0x7837, 0x9cbe, 0xfd50, 0xfee1, 0x25cc, 0x2d9b, 0x1, 0x0);
        gbc.writeMem(0x7837, { 0xaa });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9cbe, gbc.sp());
        EXPECT(0x7838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00F2
        gbc.setState(0x4e90, 0xb9b4, 0x3040, 0xbdea, 0x4e45, 0x5dfc, 0x0, 0x0);
        gbc.writeMem(0x4e90, { 0xaa });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb9b4, gbc.sp());
        EXPECT(0x4e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00F3
        gbc.setState(0xeeca, 0xdaf9, 0xf5a0, 0x3940, 0x85d3, 0x1110, 0x0, 0x0);
        gbc.writeMem(0xeeca, { 0xaa });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xdaf9, gbc.sp());
        EXPECT(0xeecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xeeca));
        // AA 00F4
        gbc.setState(0x8754, 0xc5b3, 0x4620, 0x3f03, 0x80f1, 0x4d88, 0x1, 0x0);
        gbc.writeMem(0x8754, { 0xaa });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc5b3, gbc.sp());
        EXPECT(0x8755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8754));
        // AA 00F5
        gbc.setState(0x6380, 0x30e, 0xc3a0, 0x6e8e, 0x194f, 0xd464, 0x1, 0x0);
        gbc.writeMem(0x6380, { 0xaa });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x30e, gbc.sp());
        EXPECT(0x6381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00F7
        gbc.setState(0x5ed0, 0x1341, 0x2360, 0x89b3, 0x7a80, 0x868c, 0x1, 0x1);
        gbc.writeMem(0x5ed0, { 0xaa });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1341, gbc.sp());
        EXPECT(0x5ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00F8
        gbc.setState(0x4975, 0x515c, 0x5720, 0x75d4, 0x193c, 0xc849, 0x1, 0x0);
        gbc.writeMem(0x4975, { 0xaa });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x515c, gbc.sp());
        EXPECT(0x4976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00F9
        gbc.setState(0xa333, 0xa3c5, 0xf560, 0xa5d, 0x896f, 0x838e, 0x1, 0x0);
        gbc.writeMem(0xa333, { 0xaa });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa3c5, gbc.sp());
        EXPECT(0xa334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa333));
        // AA 00FA
        gbc.setState(0x75e1, 0x1876, 0x6be0, 0x96be, 0x8f8a, 0x93ea, 0x0, 0x1);
        gbc.writeMem(0x75e1, { 0xaa });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1876, gbc.sp());
        EXPECT(0x75e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00FB
        gbc.setState(0x4890, 0x7c97, 0xbc00, 0x2cb, 0x119d, 0x35bc, 0x0, 0x1);
        gbc.writeMem(0x4890, { 0xaa });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7c97, gbc.sp());
        EXPECT(0x4891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00FC
        gbc.setState(0xbc37, 0xc5a, 0x7970, 0x28c9, 0x37aa, 0xa78d, 0x0, 0x0);
        gbc.writeMem(0xbc37, { 0xaa });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc5a, gbc.sp());
        EXPECT(0xbc38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbc37));
        // AA 00FD
        gbc.setState(0x11b8, 0xbcf, 0x87c0, 0xd20f, 0xb521, 0x2f7b, 0x1, 0x1);
        gbc.writeMem(0x11b8, { 0xaa });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbcf, gbc.sp());
        EXPECT(0x11b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00FE
        gbc.setState(0x629d, 0x8ebe, 0xe950, 0x4477, 0x5b0c, 0xb499, 0x0, 0x1);
        gbc.writeMem(0x629d, { 0xaa });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8ebe, gbc.sp());
        EXPECT(0x629e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 00FF
        gbc.setState(0xbc7f, 0x847, 0x30f0, 0x187f, 0x938, 0x7a4a, 0x1, 0x0);
        gbc.writeMem(0xbc7f, { 0xaa });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x847, gbc.sp());
        EXPECT(0xbc80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbc7f));
        // AA 0100
        gbc.setState(0x923d, 0x7f87, 0xd8a0, 0x9289, 0x6aea, 0xc9d1, 0x0, 0x1);
        gbc.writeMem(0x923d, { 0xaa });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7f87, gbc.sp());
        EXPECT(0x923e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x923d));
        // AA 0101
        gbc.setState(0xc049, 0x7a57, 0x2220, 0xb336, 0x415c, 0x7e56, 0x1, 0x1);
        gbc.writeMem(0xc049, { 0xaa });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7a57, gbc.sp());
        EXPECT(0xc04a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc049));
        // AA 0102
        gbc.setState(0xde68, 0x67ee, 0x3d70, 0x3679, 0x6dc1, 0x813d, 0x1, 0x0);
        gbc.writeMem(0xde68, { 0xaa });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x67ee, gbc.sp());
        EXPECT(0xde69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xde68));
        // AA 0103
        gbc.setState(0x7903, 0x255a, 0xb0e0, 0x3219, 0xfc4a, 0x999f, 0x1, 0x0);
        gbc.writeMem(0x7903, { 0xaa });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x255a, gbc.sp());
        EXPECT(0x7904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0104
        gbc.setState(0x4843, 0x49c9, 0xdee0, 0xe983, 0xc634, 0x7ef5, 0x1, 0x1);
        gbc.writeMem(0x4843, { 0xaa });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x49c9, gbc.sp());
        EXPECT(0x4844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0105
        gbc.setState(0x23f4, 0xd292, 0xf790, 0x6e58, 0xdbb3, 0x460c, 0x1, 0x1);
        gbc.writeMem(0x23f4, { 0xaa });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd292, gbc.sp());
        EXPECT(0x23f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0106
        gbc.setState(0xa432, 0xad6e, 0xef40, 0xfff2, 0xb5fa, 0xe3d3, 0x1, 0x1);
        gbc.writeMem(0xa432, { 0xaa });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xad6e, gbc.sp());
        EXPECT(0xa433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa432));
        // AA 0107
        gbc.setState(0x7187, 0x59, 0xf9e0, 0x2784, 0x9f23, 0x6cd6, 0x1, 0x1);
        gbc.writeMem(0x7187, { 0xaa });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x59, gbc.sp());
        EXPECT(0x7188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0108
        gbc.setState(0xbb3d, 0xcdb, 0x44d0, 0x150a, 0x91e8, 0xcb0d, 0x1, 0x1);
        gbc.writeMem(0xbb3d, { 0xaa });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcdb, gbc.sp());
        EXPECT(0xbb3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbb3d));
        // AA 0109
        gbc.setState(0x512, 0xfe0a, 0x3070, 0x6d8a, 0x3b6b, 0x2fbb, 0x1, 0x1);
        gbc.writeMem(0x512, { 0xaa });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfe0a, gbc.sp());
        EXPECT(0x513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 010A
        gbc.setState(0x789a, 0x6657, 0x2650, 0x3c79, 0xefe8, 0x3468, 0x1, 0x1);
        gbc.writeMem(0x789a, { 0xaa });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6657, gbc.sp());
        EXPECT(0x789b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 010B
        gbc.setState(0xe092, 0x4e7d, 0x7530, 0xe09f, 0xb219, 0x354d, 0x0, 0x0);
        gbc.writeMem(0xe092, { 0xaa });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4e7d, gbc.sp());
        EXPECT(0xe093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe092));
        // AA 010C
        gbc.setState(0x614b, 0xac73, 0x1ae0, 0x49f6, 0x9dc7, 0xd9a0, 0x0, 0x1);
        gbc.writeMem(0x614b, { 0xaa });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xac73, gbc.sp());
        EXPECT(0x614c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 010D
        gbc.setState(0x1aab, 0xf3df, 0xf2d0, 0xb467, 0xd3e6, 0xb54a, 0x1, 0x0);
        gbc.writeMem(0x1aab, { 0xaa });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf3df, gbc.sp());
        EXPECT(0x1aac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 010E
        gbc.setState(0x2dd4, 0x6228, 0x4c00, 0xfe16, 0x2121, 0x3815, 0x0, 0x1);
        gbc.writeMem(0x2dd4, { 0xaa });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6228, gbc.sp());
        EXPECT(0x2dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 010F
        gbc.setState(0xc06b, 0xaba3, 0x1080, 0xba05, 0xd550, 0xa026, 0x1, 0x1);
        gbc.writeMem(0xc06b, { 0xaa });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xaba3, gbc.sp());
        EXPECT(0xc06c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc06b));
        // AA 0110
        gbc.setState(0xc603, 0x9368, 0x6b70, 0xb013, 0x7719, 0x4512, 0x1, 0x0);
        gbc.writeMem(0xc603, { 0xaa });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9368, gbc.sp());
        EXPECT(0xc604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc603));
        // AA 0111
        gbc.setState(0x9bb0, 0x7389, 0xe70, 0x44d0, 0x731c, 0x17a8, 0x0, 0x0);
        gbc.writeMem(0x9bb0, { 0xaa });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7389, gbc.sp());
        EXPECT(0x9bb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9bb0));
        // AA 0112
        gbc.setState(0xaa83, 0x42dd, 0xc4a0, 0x71ed, 0x86e9, 0x27e5, 0x1, 0x1);
        gbc.writeMem(0xaa83, { 0xaa });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x42dd, gbc.sp());
        EXPECT(0xaa84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xaa83));
        // AA 0113
        gbc.setState(0xd987, 0x376e, 0xb360, 0x81b5, 0x3929, 0x7ff, 0x0, 0x0);
        gbc.writeMem(0xd987, { 0xaa });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x376e, gbc.sp());
        EXPECT(0xd988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd987));
        // AA 0114
        gbc.setState(0x35be, 0xd84b, 0x3db0, 0xcb58, 0x3812, 0x595, 0x0, 0x1);
        gbc.writeMem(0x35be, { 0xaa });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd84b, gbc.sp());
        EXPECT(0x35bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0115
        gbc.setState(0x74bc, 0xdb01, 0x42c0, 0x7d5b, 0xd944, 0xc1cf, 0x1, 0x0);
        gbc.writeMem(0x74bc, { 0xaa });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xdb01, gbc.sp());
        EXPECT(0x74bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0116
        gbc.setState(0xef12, 0x3e8e, 0xe090, 0x54df, 0x7f9a, 0x6fa, 0x0, 0x1);
        gbc.writeMem(0xef12, { 0xaa });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3e8e, gbc.sp());
        EXPECT(0xef13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xef12));
        // AA 0117
        gbc.setState(0x2718, 0x1893, 0x8f30, 0xdbac, 0xde5, 0xf975, 0x0, 0x1);
        gbc.writeMem(0x2718, { 0xaa });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1893, gbc.sp());
        EXPECT(0x2719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0118
        gbc.setState(0xaa54, 0x9cdb, 0x7c50, 0x1c3, 0x1628, 0xfc73, 0x1, 0x1);
        gbc.writeMem(0xaa54, { 0xaa });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9cdb, gbc.sp());
        EXPECT(0xaa55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xaa54));
        // AA 0119
        gbc.setState(0xce03, 0x352e, 0x9f70, 0xc91, 0xa482, 0x6b65, 0x0, 0x1);
        gbc.writeMem(0xce03, { 0xaa });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x352e, gbc.sp());
        EXPECT(0xce04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xce03));
        // AA 011A
        gbc.setState(0xa8b6, 0x59e4, 0xd690, 0xbdc4, 0x7963, 0xc1f0, 0x1, 0x0);
        gbc.writeMem(0xa8b6, { 0xaa });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x59e4, gbc.sp());
        EXPECT(0xa8b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa8b6));
        // AA 011B
        gbc.setState(0x9a7a, 0xf328, 0xf0f0, 0xcaad, 0xc5d, 0xec94, 0x0, 0x0);
        gbc.writeMem(0x9a7a, { 0xaa });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf328, gbc.sp());
        EXPECT(0x9a7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9a7a));
        // AA 011C
        gbc.setState(0x7e72, 0xbf, 0x1b0, 0x4f64, 0xfbf1, 0x6af2, 0x1, 0x1);
        gbc.writeMem(0x7e72, { 0xaa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xbf, gbc.sp());
        EXPECT(0x7e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 011D
        gbc.setState(0x5f9f, 0x19ce, 0x8750, 0xee65, 0x9047, 0x8dd3, 0x1, 0x0);
        gbc.writeMem(0x5f9f, { 0xaa });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x19ce, gbc.sp());
        EXPECT(0x5fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 011E
        gbc.setState(0x949c, 0xd8f0, 0x6380, 0x658c, 0xf96d, 0x1b69, 0x0, 0x1);
        gbc.writeMem(0x949c, { 0xaa });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd8f0, gbc.sp());
        EXPECT(0x949d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x949c));
        // AA 011F
        gbc.setState(0x4e0a, 0x7c31, 0x3590, 0xb7ce, 0x9da6, 0x19db, 0x1, 0x1);
        gbc.writeMem(0x4e0a, { 0xaa });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7c31, gbc.sp());
        EXPECT(0x4e0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0121
        gbc.setState(0x642c, 0xbc0, 0xde70, 0x7233, 0xd0e, 0xb3de, 0x0, 0x0);
        gbc.writeMem(0x642c, { 0xaa });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xbc0, gbc.sp());
        EXPECT(0x642d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0122
        gbc.setState(0x12eb, 0xda5d, 0x9b60, 0xdd3c, 0xf6d9, 0x83b5, 0x1, 0x0);
        gbc.writeMem(0x12eb, { 0xaa });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xda5d, gbc.sp());
        EXPECT(0x12ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0123
        gbc.setState(0x9373, 0x4c72, 0x9550, 0xafee, 0xbb3a, 0x9733, 0x1, 0x1);
        gbc.writeMem(0x9373, { 0xaa });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4c72, gbc.sp());
        EXPECT(0x9374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9373));
        // AA 0124
        gbc.setState(0xcb8, 0xf44, 0x7e10, 0x7b37, 0x357, 0x47df, 0x1, 0x1);
        gbc.writeMem(0xcb8, { 0xaa });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf44, gbc.sp());
        EXPECT(0xcb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0125
        gbc.setState(0x63ac, 0xaf44, 0xd280, 0x7e13, 0x599b, 0x7e07, 0x1, 0x0);
        gbc.writeMem(0x63ac, { 0xaa });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xaf44, gbc.sp());
        EXPECT(0x63ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0126
        gbc.setState(0x9f9a, 0x89c1, 0x2700, 0x942, 0x92b6, 0x7d5a, 0x0, 0x1);
        gbc.writeMem(0x9f9a, { 0xaa });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x89c1, gbc.sp());
        EXPECT(0x9f9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9f9a));
        // AA 0127
        gbc.setState(0x4fec, 0xf8fc, 0x4ec0, 0xbc7e, 0x4588, 0xb092, 0x1, 0x0);
        gbc.writeMem(0x4fec, { 0xaa });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf8fc, gbc.sp());
        EXPECT(0x4fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0128
        gbc.setState(0x3bac, 0x8e78, 0xd620, 0x55a5, 0x9e2, 0xe02e, 0x0, 0x0);
        gbc.writeMem(0x3bac, { 0xaa });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8e78, gbc.sp());
        EXPECT(0x3bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0129
        gbc.setState(0xca6c, 0xef78, 0x3a70, 0xab5c, 0x49a4, 0x4a6a, 0x0, 0x1);
        gbc.writeMem(0xca6c, { 0xaa });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xef78, gbc.sp());
        EXPECT(0xca6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xca6c));
        // AA 012A
        gbc.setState(0xe492, 0xe2b5, 0xe760, 0x9e93, 0xb5f9, 0xa4a4, 0x0, 0x0);
        gbc.writeMem(0xe492, { 0xaa });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe2b5, gbc.sp());
        EXPECT(0xe493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe492));
        // AA 012B
        gbc.setState(0xe477, 0x799f, 0x4300, 0x4ba1, 0x81b2, 0x4875, 0x1, 0x1);
        gbc.writeMem(0xe477, { 0xaa });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x799f, gbc.sp());
        EXPECT(0xe478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe477));
        // AA 012C
        gbc.setState(0xc342, 0xb257, 0x15b0, 0xed6b, 0x497, 0x3f6a, 0x0, 0x1);
        gbc.writeMem(0xc342, { 0xaa });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb257, gbc.sp());
        EXPECT(0xc343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc342));
        // AA 012D
        gbc.setState(0x2c2f, 0xf41b, 0xa6a0, 0x901e, 0x6e6e, 0xfd00, 0x1, 0x0);
        gbc.writeMem(0x2c2f, { 0xaa });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf41b, gbc.sp());
        EXPECT(0x2c30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 012E
        gbc.setState(0x67c8, 0x9b9b, 0x6150, 0x88d5, 0xe29d, 0x7a3, 0x0, 0x1);
        gbc.writeMem(0x67c8, { 0xaa });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9b9b, gbc.sp());
        EXPECT(0x67c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 012F
        gbc.setState(0xcf98, 0x9f53, 0x4f50, 0x7b7c, 0x8064, 0x2c33, 0x0, 0x0);
        gbc.writeMem(0xcf98, { 0xaa });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9f53, gbc.sp());
        EXPECT(0xcf99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xcf98));
        // AA 0130
        gbc.setState(0x568a, 0x43d5, 0x59c0, 0x27a1, 0x1457, 0xf715, 0x1, 0x1);
        gbc.writeMem(0x568a, { 0xaa });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x43d5, gbc.sp());
        EXPECT(0x568b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0131
        gbc.setState(0xcd1e, 0xd1e5, 0x88b0, 0xbdf0, 0x9489, 0xf9fa, 0x0, 0x1);
        gbc.writeMem(0xcd1e, { 0xaa });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd1e5, gbc.sp());
        EXPECT(0xcd1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xcd1e));
        // AA 0132
        gbc.setState(0x16e0, 0x9cb8, 0xbca0, 0x6d66, 0xc306, 0x8a8, 0x1, 0x1);
        gbc.writeMem(0x16e0, { 0xaa });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9cb8, gbc.sp());
        EXPECT(0x16e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0133
        gbc.setState(0xc834, 0x52c4, 0x41e0, 0xbaa8, 0x6692, 0x24c7, 0x0, 0x1);
        gbc.writeMem(0xc834, { 0xaa });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x52c4, gbc.sp());
        EXPECT(0xc835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc834));
        // AA 0134
        gbc.setState(0x3009, 0x3473, 0xfb80, 0x82c5, 0x73c, 0x70d3, 0x0, 0x0);
        gbc.writeMem(0x3009, { 0xaa });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3473, gbc.sp());
        EXPECT(0x300a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0135
        gbc.setState(0x75c3, 0x3f88, 0xa3c0, 0xc061, 0x888e, 0xd381, 0x0, 0x1);
        gbc.writeMem(0x75c3, { 0xaa });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3f88, gbc.sp());
        EXPECT(0x75c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0136
        gbc.setState(0x4cb5, 0xa85c, 0xd890, 0x8dd8, 0xc6af, 0xa57f, 0x1, 0x1);
        gbc.writeMem(0x4cb5, { 0xaa });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa85c, gbc.sp());
        EXPECT(0x4cb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0137
        gbc.setState(0x6d74, 0x3d23, 0x5ce0, 0x19b7, 0x706f, 0x84be, 0x1, 0x1);
        gbc.writeMem(0x6d74, { 0xaa });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3d23, gbc.sp());
        EXPECT(0x6d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0138
        gbc.setState(0x73ed, 0x6cf9, 0x95c0, 0x3681, 0x42b7, 0x8472, 0x0, 0x1);
        gbc.writeMem(0x73ed, { 0xaa });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6cf9, gbc.sp());
        EXPECT(0x73ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0139
        gbc.setState(0x9465, 0x77a8, 0x8d0, 0x8633, 0x3d90, 0x47ef, 0x1, 0x0);
        gbc.writeMem(0x9465, { 0xaa });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x77a8, gbc.sp());
        EXPECT(0x9466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9465));
        // AA 013A
        gbc.setState(0xa554, 0xda80, 0xa950, 0xb924, 0x7c0b, 0xcb33, 0x1, 0x1);
        gbc.writeMem(0xa554, { 0xaa });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xda80, gbc.sp());
        EXPECT(0xa555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa554));
        // AA 013B
        gbc.setState(0x455c, 0xa690, 0x81b0, 0x3dca, 0x7e8e, 0x98f1, 0x1, 0x1);
        gbc.writeMem(0x455c, { 0xaa });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa690, gbc.sp());
        EXPECT(0x455d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 013C
        gbc.setState(0x5eae, 0xff6a, 0x96e0, 0x46be, 0x9d14, 0x16c2, 0x1, 0x0);
        gbc.writeMem(0x5eae, { 0xaa });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xff6a, gbc.sp());
        EXPECT(0x5eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 013D
        gbc.setState(0x18f0, 0x491, 0xb1d0, 0xd280, 0xb51f, 0xab83, 0x1, 0x1);
        gbc.writeMem(0x18f0, { 0xaa });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x491, gbc.sp());
        EXPECT(0x18f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 013F
        gbc.setState(0xad15, 0x9133, 0xdf90, 0x7ba4, 0x2cd1, 0x62e2, 0x1, 0x1);
        gbc.writeMem(0xad15, { 0xaa });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9133, gbc.sp());
        EXPECT(0xad16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xad15));
        // AA 0140
        gbc.setState(0x7f1c, 0xa32e, 0x3f80, 0xc804, 0x88f3, 0x8fe, 0x0, 0x1);
        gbc.writeMem(0x7f1c, { 0xaa });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa32e, gbc.sp());
        EXPECT(0x7f1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0141
        gbc.setState(0xb6f9, 0xd74, 0x26d0, 0x45b4, 0xf5a9, 0x3853, 0x1, 0x1);
        gbc.writeMem(0xb6f9, { 0xaa });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd74, gbc.sp());
        EXPECT(0xb6fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb6f9));
        // AA 0142
        gbc.setState(0x183, 0x309a, 0x3310, 0x7b07, 0x51b2, 0x7599, 0x0, 0x0);
        gbc.writeMem(0x183, { 0xaa });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x309a, gbc.sp());
        EXPECT(0x184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0143
        gbc.setState(0x964c, 0xff1f, 0xdbc0, 0x2720, 0x3ddf, 0xf63, 0x1, 0x0);
        gbc.writeMem(0x964c, { 0xaa });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xff1f, gbc.sp());
        EXPECT(0x964d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x964c));
        // AA 0144
        gbc.setState(0xdd02, 0xcc8d, 0xb000, 0xdde2, 0xb027, 0x213d, 0x1, 0x0);
        gbc.writeMem(0xdd02, { 0xaa });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xcc8d, gbc.sp());
        EXPECT(0xdd03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xdd02));
        // AA 0145
        gbc.setState(0xc4d9, 0x474e, 0xf4c0, 0xe293, 0xf27b, 0xc158, 0x1, 0x0);
        gbc.writeMem(0xc4d9, { 0xaa });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x474e, gbc.sp());
        EXPECT(0xc4da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc4d9));
        // AA 0146
        gbc.setState(0x34f9, 0x4dfb, 0xef70, 0x97cd, 0x48cd, 0xcb02, 0x0, 0x0);
        gbc.writeMem(0x34f9, { 0xaa });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4dfb, gbc.sp());
        EXPECT(0x34fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0147
        gbc.setState(0xb1c5, 0x3e7e, 0x4050, 0x646a, 0xcd1c, 0x3cd2, 0x0, 0x1);
        gbc.writeMem(0xb1c5, { 0xaa });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3e7e, gbc.sp());
        EXPECT(0xb1c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb1c5));
        // AA 0148
        gbc.setState(0xc8eb, 0xd6bf, 0x42f0, 0xb82f, 0xd3a8, 0x28ae, 0x0, 0x0);
        gbc.writeMem(0xc8eb, { 0xaa });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd6bf, gbc.sp());
        EXPECT(0xc8ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc8eb));
        // AA 0149
        gbc.setState(0x381f, 0x7103, 0xa380, 0xdb64, 0xd8e0, 0x8cc0, 0x0, 0x0);
        gbc.writeMem(0x381f, { 0xaa });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7103, gbc.sp());
        EXPECT(0x3820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 014B
        gbc.setState(0x79a2, 0x74cf, 0x5440, 0xf3fd, 0xed66, 0x803f, 0x1, 0x1);
        gbc.writeMem(0x79a2, { 0xaa });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x74cf, gbc.sp());
        EXPECT(0x79a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 014C
        gbc.setState(0x2903, 0xb443, 0xd820, 0x8e00, 0xedcc, 0xd2ec, 0x1, 0x0);
        gbc.writeMem(0x2903, { 0xaa });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb443, gbc.sp());
        EXPECT(0x2904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 014D
        gbc.setState(0x9b25, 0x30f1, 0xfed0, 0x8193, 0x7d4e, 0x3b4b, 0x0, 0x0);
        gbc.writeMem(0x9b25, { 0xaa });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x30f1, gbc.sp());
        EXPECT(0x9b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9b25));
        // AA 014E
        gbc.setState(0x5e5, 0x2d42, 0x31f0, 0xe8b1, 0xbbbc, 0x3da0, 0x1, 0x1);
        gbc.writeMem(0x5e5, { 0xaa });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2d42, gbc.sp());
        EXPECT(0x5e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 014F
        gbc.setState(0x4014, 0xd385, 0x1c70, 0xd960, 0x57ff, 0x7cc, 0x0, 0x1);
        gbc.writeMem(0x4014, { 0xaa });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd385, gbc.sp());
        EXPECT(0x4015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0150
        gbc.setState(0x4be1, 0xf222, 0x2cf0, 0xd9b5, 0x3a3e, 0xd067, 0x1, 0x0);
        gbc.writeMem(0x4be1, { 0xaa });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf222, gbc.sp());
        EXPECT(0x4be2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0151
        gbc.setState(0x5ebe, 0xe892, 0xb30, 0x7ee0, 0xf31a, 0x1dde, 0x1, 0x0);
        gbc.writeMem(0x5ebe, { 0xaa });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe892, gbc.sp());
        EXPECT(0x5ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0152
        gbc.setState(0x38e5, 0x483a, 0xde10, 0xa981, 0x3fe4, 0x6a4c, 0x0, 0x0);
        gbc.writeMem(0x38e5, { 0xaa });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x483a, gbc.sp());
        EXPECT(0x38e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0153
        gbc.setState(0xc2ec, 0xd7a5, 0xc660, 0x7324, 0x8424, 0xe483, 0x1, 0x0);
        gbc.writeMem(0xc2ec, { 0xaa });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd7a5, gbc.sp());
        EXPECT(0xc2ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc2ec));
        // AA 0154
        gbc.setState(0x5718, 0x4875, 0x5490, 0xc3ac, 0x5233, 0xccc4, 0x0, 0x1);
        gbc.writeMem(0x5718, { 0xaa });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4875, gbc.sp());
        EXPECT(0x5719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0155
        gbc.setState(0xec69, 0x1655, 0xbd40, 0xc675, 0x3f3, 0x350e, 0x1, 0x0);
        gbc.writeMem(0xec69, { 0xaa });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1655, gbc.sp());
        EXPECT(0xec6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xec69));
        // AA 0156
        gbc.setState(0x6d8a, 0x4193, 0xc770, 0x952e, 0xad14, 0xc5cf, 0x1, 0x1);
        gbc.writeMem(0x6d8a, { 0xaa });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4193, gbc.sp());
        EXPECT(0x6d8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0157
        gbc.setState(0x4a92, 0xea35, 0x5880, 0x2dbe, 0x5614, 0x7216, 0x1, 0x1);
        gbc.writeMem(0x4a92, { 0xaa });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xea35, gbc.sp());
        EXPECT(0x4a93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0158
        gbc.setState(0xdd7, 0x1461, 0x9160, 0x829, 0x27f8, 0x6797, 0x0, 0x0);
        gbc.writeMem(0xdd7, { 0xaa });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1461, gbc.sp());
        EXPECT(0xdd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0159
        gbc.setState(0x8858, 0x43a6, 0x5b90, 0x63dd, 0x6a5f, 0xedd8, 0x1, 0x0);
        gbc.writeMem(0x8858, { 0xaa });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x43a6, gbc.sp());
        EXPECT(0x8859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8858));
        // AA 015A
        gbc.setState(0x13e5, 0xb904, 0xe4f0, 0x51f7, 0xe4, 0xa09, 0x1, 0x1);
        gbc.writeMem(0x13e5, { 0xaa });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb904, gbc.sp());
        EXPECT(0x13e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 015B
        gbc.setState(0xa08f, 0x8d24, 0xeb80, 0xcc0a, 0x84b5, 0x26ab, 0x1, 0x1);
        gbc.writeMem(0xa08f, { 0xaa });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8d24, gbc.sp());
        EXPECT(0xa090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa08f));
        // AA 015C
        gbc.setState(0x347e, 0x1947, 0xd3a0, 0xa0d3, 0x49a0, 0x75c5, 0x0, 0x1);
        gbc.writeMem(0x347e, { 0xaa });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1947, gbc.sp());
        EXPECT(0x347f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 015D
        gbc.setState(0x48d0, 0x2fbf, 0xba40, 0x95f7, 0x98f5, 0xc71e, 0x0, 0x0);
        gbc.writeMem(0x48d0, { 0xaa });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2fbf, gbc.sp());
        EXPECT(0x48d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 015E
        gbc.setState(0x84c4, 0x4d16, 0xa2a0, 0x99f0, 0x699a, 0xc9c9, 0x1, 0x1);
        gbc.writeMem(0x84c4, { 0xaa });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4d16, gbc.sp());
        EXPECT(0x84c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x84c4));
        // AA 015F
        gbc.setState(0x44d2, 0x37db, 0xa720, 0xd1d, 0x4a1d, 0x341f, 0x0, 0x0);
        gbc.writeMem(0x44d2, { 0xaa });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x37db, gbc.sp());
        EXPECT(0x44d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0160
        gbc.setState(0x5404, 0x4a53, 0xe140, 0x883f, 0x4a9b, 0x5f2e, 0x1, 0x0);
        gbc.writeMem(0x5404, { 0xaa });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4a53, gbc.sp());
        EXPECT(0x5405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0161
        gbc.setState(0xef4e, 0x4d26, 0x70c0, 0x353b, 0x2314, 0xe600, 0x1, 0x0);
        gbc.writeMem(0xef4e, { 0xaa });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4d26, gbc.sp());
        EXPECT(0xef4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xef4e));
        // AA 0162
        gbc.setState(0x37ea, 0xd736, 0xd920, 0xe0c5, 0x4ff8, 0xa93b, 0x0, 0x0);
        gbc.writeMem(0x37ea, { 0xaa });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd736, gbc.sp());
        EXPECT(0x37eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0163
        gbc.setState(0xd0c2, 0x24b6, 0xe3e0, 0x5df9, 0x6cd4, 0x9cb, 0x0, 0x0);
        gbc.writeMem(0xd0c2, { 0xaa });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x24b6, gbc.sp());
        EXPECT(0xd0c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd0c2));
        // AA 0164
        gbc.setState(0xa832, 0x21fd, 0x73b0, 0xc5eb, 0xd694, 0xe12e, 0x0, 0x1);
        gbc.writeMem(0xa832, { 0xaa });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x21fd, gbc.sp());
        EXPECT(0xa833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa832));
        // AA 0165
        gbc.setState(0x224d, 0x10bb, 0xf450, 0x8a14, 0x6e83, 0x3aae, 0x1, 0x1);
        gbc.writeMem(0x224d, { 0xaa });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x10bb, gbc.sp());
        EXPECT(0x224e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0166
        gbc.setState(0x35d9, 0x9976, 0xf030, 0x5ae5, 0x6866, 0xc45b, 0x1, 0x0);
        gbc.writeMem(0x35d9, { 0xaa });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9976, gbc.sp());
        EXPECT(0x35da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0167
        gbc.setState(0xe86e, 0xba49, 0x2260, 0x79c3, 0xa8d2, 0x25d6, 0x1, 0x1);
        gbc.writeMem(0xe86e, { 0xaa });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xba49, gbc.sp());
        EXPECT(0xe86f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe86e));
        // AA 0168
        gbc.setState(0xea77, 0x13e5, 0xf040, 0xf74e, 0xdea9, 0xc719, 0x1, 0x0);
        gbc.writeMem(0xea77, { 0xaa });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x13e5, gbc.sp());
        EXPECT(0xea78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xea77));
        // AA 0169
        gbc.setState(0x9b, 0x47ed, 0x3820, 0xa6dc, 0x5eb2, 0xbeb7, 0x1, 0x1);
        gbc.writeMem(0x9b, { 0xaa });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x47ed, gbc.sp());
        EXPECT(0x9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 016A
        gbc.setState(0xed42, 0x753d, 0x85c0, 0x9c, 0x9d53, 0xacec, 0x0, 0x1);
        gbc.writeMem(0xed42, { 0xaa });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x753d, gbc.sp());
        EXPECT(0xed43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xed42));
        // AA 016B
        gbc.setState(0x3b80, 0x1638, 0x1570, 0xa1dc, 0xa90f, 0xc5f0, 0x1, 0x0);
        gbc.writeMem(0x3b80, { 0xaa });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1638, gbc.sp());
        EXPECT(0x3b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 016C
        gbc.setState(0x5023, 0xa3db, 0xe620, 0xc324, 0x1ceb, 0xf00b, 0x1, 0x1);
        gbc.writeMem(0x5023, { 0xaa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa3db, gbc.sp());
        EXPECT(0x5024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 016D
        gbc.setState(0x46b, 0xbfd3, 0x380, 0x6940, 0x5b30, 0xa011, 0x1, 0x0);
        gbc.writeMem(0x46b, { 0xaa });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbfd3, gbc.sp());
        EXPECT(0x46c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 016E
        gbc.setState(0x559a, 0x4ef7, 0xc2d0, 0x3cb3, 0x9fb, 0xda9, 0x1, 0x0);
        gbc.writeMem(0x559a, { 0xaa });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4ef7, gbc.sp());
        EXPECT(0x559b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 016F
        gbc.setState(0xb72, 0x9e13, 0x4e50, 0x592c, 0x688c, 0xf603, 0x0, 0x0);
        gbc.writeMem(0xb72, { 0xaa });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9e13, gbc.sp());
        EXPECT(0xb73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0170
        gbc.setState(0x9a4a, 0x5029, 0x8030, 0xb78f, 0xe4cd, 0xe4de, 0x0, 0x0);
        gbc.writeMem(0x9a4a, { 0xaa });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5029, gbc.sp());
        EXPECT(0x9a4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9a4a));
        // AA 0172
        gbc.setState(0xe223, 0x77a4, 0xa2d0, 0x4786, 0xd80d, 0xd334, 0x0, 0x0);
        gbc.writeMem(0xe223, { 0xaa });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x77a4, gbc.sp());
        EXPECT(0xe224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe223));
        // AA 0173
        gbc.setState(0x23bb, 0x6e6c, 0xcf00, 0x7a82, 0x6488, 0x1c4f, 0x1, 0x0);
        gbc.writeMem(0x23bb, { 0xaa });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6e6c, gbc.sp());
        EXPECT(0x23bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0174
        gbc.setState(0x5dfd, 0x2107, 0x1450, 0x6a10, 0xa951, 0xf159, 0x0, 0x1);
        gbc.writeMem(0x5dfd, { 0xaa });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2107, gbc.sp());
        EXPECT(0x5dfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0175
        gbc.setState(0x3e37, 0x1e46, 0x1780, 0x59d, 0xbfe1, 0x287e, 0x0, 0x0);
        gbc.writeMem(0x3e37, { 0xaa });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1e46, gbc.sp());
        EXPECT(0x3e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0176
        gbc.setState(0x2a60, 0xa1bf, 0x94a0, 0xfec9, 0xf036, 0xb1b, 0x1, 0x0);
        gbc.writeMem(0x2a60, { 0xaa });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa1bf, gbc.sp());
        EXPECT(0x2a61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0177
        gbc.setState(0xb11c, 0xe201, 0x2c80, 0x7b51, 0xedcf, 0x9b50, 0x1, 0x1);
        gbc.writeMem(0xb11c, { 0xaa });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe201, gbc.sp());
        EXPECT(0xb11d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb11c));
        // AA 0178
        gbc.setState(0xe87f, 0x50c4, 0x560, 0xa83d, 0x749f, 0xa4e4, 0x1, 0x1);
        gbc.writeMem(0xe87f, { 0xaa });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x50c4, gbc.sp());
        EXPECT(0xe880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe87f));
        // AA 0179
        gbc.setState(0xb533, 0x8c63, 0xd5b0, 0x2cd9, 0x2508, 0x357e, 0x1, 0x1);
        gbc.writeMem(0xb533, { 0xaa });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8c63, gbc.sp());
        EXPECT(0xb534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb533));
        // AA 017A
        gbc.setState(0x2260, 0x9f64, 0xb9d0, 0x7e92, 0x4ef, 0x1a01, 0x1, 0x0);
        gbc.writeMem(0x2260, { 0xaa });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9f64, gbc.sp());
        EXPECT(0x2261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 017B
        gbc.setState(0x1b0c, 0x95e6, 0x5100, 0xa6d8, 0xd34d, 0x384a, 0x0, 0x0);
        gbc.writeMem(0x1b0c, { 0xaa });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x95e6, gbc.sp());
        EXPECT(0x1b0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 017C
        gbc.setState(0xd70b, 0x963e, 0x2900, 0xf17, 0xd52, 0x520e, 0x1, 0x0);
        gbc.writeMem(0xd70b, { 0xaa });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x963e, gbc.sp());
        EXPECT(0xd70c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd70b));
        // AA 017D
        gbc.setState(0xb7b3, 0xadf, 0xd750, 0xc151, 0xde5e, 0x92e5, 0x0, 0x0);
        gbc.writeMem(0xb7b3, { 0xaa });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xadf, gbc.sp());
        EXPECT(0xb7b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb7b3));
        // AA 017E
        gbc.setState(0xb77f, 0x279, 0x14e0, 0x39f6, 0x44e5, 0x49b, 0x0, 0x1);
        gbc.writeMem(0xb77f, { 0xaa });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x279, gbc.sp());
        EXPECT(0xb780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb77f));
        // AA 017F
        gbc.setState(0x40a7, 0xd8e1, 0xf010, 0x21cb, 0xa0fd, 0x9fd9, 0x0, 0x0);
        gbc.writeMem(0x40a7, { 0xaa });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd8e1, gbc.sp());
        EXPECT(0x40a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0180
        gbc.setState(0xad39, 0xca69, 0xf0f0, 0x76af, 0x3cbf, 0x95c8, 0x1, 0x1);
        gbc.writeMem(0xad39, { 0xaa });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xca69, gbc.sp());
        EXPECT(0xad3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xad39));
        // AA 0181
        gbc.setState(0x766c, 0xb2c8, 0xe6a0, 0x4718, 0x386c, 0xcfba, 0x1, 0x1);
        gbc.writeMem(0x766c, { 0xaa });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb2c8, gbc.sp());
        EXPECT(0x766d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0182
        gbc.setState(0x50c0, 0x9778, 0x9540, 0x7486, 0x1ce6, 0xebb2, 0x1, 0x0);
        gbc.writeMem(0x50c0, { 0xaa });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9778, gbc.sp());
        EXPECT(0x50c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0183
        gbc.setState(0x80b6, 0x490d, 0x4970, 0x72cc, 0x7911, 0xceeb, 0x1, 0x1);
        gbc.writeMem(0x80b6, { 0xaa });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x490d, gbc.sp());
        EXPECT(0x80b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x80b6));
        // AA 0184
        gbc.setState(0xb976, 0xab9d, 0x61a0, 0x5446, 0xe3b, 0x67b6, 0x0, 0x1);
        gbc.writeMem(0xb976, { 0xaa });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xab9d, gbc.sp());
        EXPECT(0xb977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb976));
        // AA 0185
        gbc.setState(0x7675, 0xed1d, 0x2650, 0x2559, 0x8ad, 0xf6f0, 0x1, 0x0);
        gbc.writeMem(0x7675, { 0xaa });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xed1d, gbc.sp());
        EXPECT(0x7676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0186
        gbc.setState(0x339b, 0x4d77, 0xc050, 0x6d5d, 0xd97, 0x4698, 0x0, 0x1);
        gbc.writeMem(0x339b, { 0xaa });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4d77, gbc.sp());
        EXPECT(0x339c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0187
        gbc.setState(0x16f8, 0x6c84, 0xb5b0, 0xa39d, 0xbf0, 0xcd57, 0x0, 0x1);
        gbc.writeMem(0x16f8, { 0xaa });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6c84, gbc.sp());
        EXPECT(0x16f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0188
        gbc.setState(0x3139, 0x5c61, 0x7b30, 0x4597, 0xe933, 0x64a, 0x1, 0x1);
        gbc.writeMem(0x3139, { 0xaa });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5c61, gbc.sp());
        EXPECT(0x313a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0189
        gbc.setState(0x439a, 0xcab, 0x3240, 0xa3f3, 0x9970, 0x3cc9, 0x0, 0x1);
        gbc.writeMem(0x439a, { 0xaa });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xcab, gbc.sp());
        EXPECT(0x439b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 018A
        gbc.setState(0xe221, 0xfdfb, 0x3020, 0x6d9c, 0xeca9, 0xcd57, 0x1, 0x0);
        gbc.writeMem(0xe221, { 0xaa });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfdfb, gbc.sp());
        EXPECT(0xe222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe221));
        // AA 018B
        gbc.setState(0x99cc, 0x30c9, 0xebb0, 0xb9eb, 0x31d, 0x11f4, 0x1, 0x1);
        gbc.writeMem(0x99cc, { 0xaa });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x30c9, gbc.sp());
        EXPECT(0x99cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x99cc));
        // AA 018C
        gbc.setState(0x9503, 0x3e9, 0x6f0, 0x12f9, 0xa6f8, 0x2cba, 0x1, 0x0);
        gbc.writeMem(0x9503, { 0xaa });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3e9, gbc.sp());
        EXPECT(0x9504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9503));
        // AA 018D
        gbc.setState(0x958, 0xa763, 0xeb50, 0x2a8b, 0x699, 0xd9e6, 0x1, 0x1);
        gbc.writeMem(0x958, { 0xaa });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa763, gbc.sp());
        EXPECT(0x959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 018E
        gbc.setState(0x55a3, 0xeb8a, 0xefd0, 0x8c27, 0x7ee3, 0x2770, 0x1, 0x0);
        gbc.writeMem(0x55a3, { 0xaa });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xeb8a, gbc.sp());
        EXPECT(0x55a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 018F
        gbc.setState(0x1d17, 0xf8c, 0xddd0, 0x3c04, 0x7c0a, 0x41, 0x1, 0x0);
        gbc.writeMem(0x1d17, { 0xaa });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf8c, gbc.sp());
        EXPECT(0x1d18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0190
        gbc.setState(0x2e88, 0xbd30, 0xbd40, 0xc9dd, 0x2460, 0x886b, 0x1, 0x1);
        gbc.writeMem(0x2e88, { 0xaa });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xbd30, gbc.sp());
        EXPECT(0x2e89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0191
        gbc.setState(0x78fe, 0xc78e, 0xef00, 0x181a, 0x9571, 0xe731, 0x0, 0x0);
        gbc.writeMem(0x78fe, { 0xaa });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc78e, gbc.sp());
        EXPECT(0x78ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0192
        gbc.setState(0x7ebc, 0x3f5e, 0x9720, 0xb5e5, 0xc72f, 0x2474, 0x1, 0x0);
        gbc.writeMem(0x7ebc, { 0xaa });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3f5e, gbc.sp());
        EXPECT(0x7ebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0193
        gbc.setState(0xae0b, 0x65ee, 0xc2f0, 0xc6fa, 0x3a10, 0x5379, 0x1, 0x0);
        gbc.writeMem(0xae0b, { 0xaa });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x65ee, gbc.sp());
        EXPECT(0xae0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xae0b));
        // AA 0195
        gbc.setState(0xbc26, 0x9ce1, 0x3d60, 0x7675, 0xe15b, 0xaedb, 0x1, 0x1);
        gbc.writeMem(0xbc26, { 0xaa });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9ce1, gbc.sp());
        EXPECT(0xbc27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbc26));
        // AA 0196
        gbc.setState(0xad5b, 0x8206, 0x960, 0x808, 0x68d, 0xd221, 0x0, 0x0);
        gbc.writeMem(0xad5b, { 0xaa });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8206, gbc.sp());
        EXPECT(0xad5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xad5b));
        // AA 0197
        gbc.setState(0xc869, 0x8f5f, 0xd460, 0x7568, 0x6199, 0xce46, 0x1, 0x0);
        gbc.writeMem(0xc869, { 0xaa });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8f5f, gbc.sp());
        EXPECT(0xc86a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc869));
        // AA 0198
        gbc.setState(0x4f48, 0x816f, 0x11c0, 0x3406, 0x40e5, 0xe699, 0x0, 0x1);
        gbc.writeMem(0x4f48, { 0xaa });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x816f, gbc.sp());
        EXPECT(0x4f49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0199
        gbc.setState(0xef6f, 0x8cc9, 0x28a0, 0x119c, 0x860c, 0x69cf, 0x0, 0x0);
        gbc.writeMem(0xef6f, { 0xaa });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8cc9, gbc.sp());
        EXPECT(0xef70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xef6f));
        // AA 019A
        gbc.setState(0xab1a, 0xa6aa, 0x8680, 0x795f, 0xd8c4, 0xf8cf, 0x1, 0x0);
        gbc.writeMem(0xab1a, { 0xaa });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa6aa, gbc.sp());
        EXPECT(0xab1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xab1a));
        // AA 019B
        gbc.setState(0x3155, 0x5238, 0x9f70, 0x19af, 0xa99f, 0x351, 0x0, 0x1);
        gbc.writeMem(0x3155, { 0xaa });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5238, gbc.sp());
        EXPECT(0x3156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 019C
        gbc.setState(0x1f50, 0x8d14, 0x41a0, 0xbad4, 0xad1c, 0x9109, 0x0, 0x0);
        gbc.writeMem(0x1f50, { 0xaa });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8d14, gbc.sp());
        EXPECT(0x1f51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 019D
        gbc.setState(0x64b8, 0xb7a0, 0xcd0, 0x39a7, 0x4e1c, 0x4d13, 0x1, 0x0);
        gbc.writeMem(0x64b8, { 0xaa });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb7a0, gbc.sp());
        EXPECT(0x64b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 019E
        gbc.setState(0x6b1a, 0xcf4c, 0xfa0, 0x77d8, 0x5c21, 0x9243, 0x0, 0x0);
        gbc.writeMem(0x6b1a, { 0xaa });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcf4c, gbc.sp());
        EXPECT(0x6b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 019F
        gbc.setState(0x9d90, 0x88e, 0x1230, 0x4f9d, 0x4b5b, 0xeeda, 0x1, 0x0);
        gbc.writeMem(0x9d90, { 0xaa });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x88e, gbc.sp());
        EXPECT(0x9d91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9d90));
        // AA 01A0
        gbc.setState(0x2929, 0xf421, 0x2eb0, 0x779a, 0xa24b, 0xc952, 0x1, 0x1);
        gbc.writeMem(0x2929, { 0xaa });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf421, gbc.sp());
        EXPECT(0x292a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01A1
        gbc.setState(0x9c4c, 0xbb83, 0x4000, 0xb80c, 0x2e61, 0x832d, 0x1, 0x1);
        gbc.writeMem(0x9c4c, { 0xaa });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbb83, gbc.sp());
        EXPECT(0x9c4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9c4c));
        // AA 01A2
        gbc.setState(0xb09c, 0x3a5, 0xeab0, 0x29e0, 0x6b6c, 0xcec6, 0x0, 0x1);
        gbc.writeMem(0xb09c, { 0xaa });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3a5, gbc.sp());
        EXPECT(0xb09d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb09c));
        // AA 01A3
        gbc.setState(0x2387, 0xba7a, 0x9090, 0xc894, 0x7722, 0x4d5a, 0x1, 0x0);
        gbc.writeMem(0x2387, { 0xaa });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xba7a, gbc.sp());
        EXPECT(0x2388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01A4
        gbc.setState(0x4a7e, 0xb5bc, 0xee80, 0x22a, 0x646c, 0xb7eb, 0x0, 0x0);
        gbc.writeMem(0x4a7e, { 0xaa });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb5bc, gbc.sp());
        EXPECT(0x4a7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01A5
        gbc.setState(0x93aa, 0xcce4, 0x4300, 0x267d, 0x9da0, 0x354a, 0x1, 0x1);
        gbc.writeMem(0x93aa, { 0xaa });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcce4, gbc.sp());
        EXPECT(0x93ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x93aa));
        // AA 01A6
        gbc.setState(0x525a, 0xaf56, 0xd110, 0x3ee4, 0x40be, 0x6c1e, 0x1, 0x0);
        gbc.writeMem(0x525a, { 0xaa });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xaf56, gbc.sp());
        EXPECT(0x525b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01A7
        gbc.setState(0xd7e5, 0xb0b0, 0x2d40, 0xb19f, 0xe53a, 0xdbd5, 0x1, 0x0);
        gbc.writeMem(0xd7e5, { 0xaa });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb0b0, gbc.sp());
        EXPECT(0xd7e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd7e5));
        // AA 01A8
        gbc.setState(0x5167, 0x4438, 0x86f0, 0x2b12, 0x5871, 0x4643, 0x1, 0x0);
        gbc.writeMem(0x5167, { 0xaa });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4438, gbc.sp());
        EXPECT(0x5168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01A9
        gbc.setState(0x1bae, 0x1ec9, 0xadc0, 0xbcb, 0x4ffb, 0xdee1, 0x1, 0x0);
        gbc.writeMem(0x1bae, { 0xaa });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1ec9, gbc.sp());
        EXPECT(0x1baf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01AA
        gbc.setState(0xb4d9, 0xba8e, 0x97e0, 0x34e0, 0x9434, 0xe7eb, 0x0, 0x0);
        gbc.writeMem(0xb4d9, { 0xaa });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xba8e, gbc.sp());
        EXPECT(0xb4da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb4d9));
        // AA 01AC
        gbc.setState(0x77e8, 0x2224, 0xa330, 0x7566, 0x6293, 0xefb3, 0x0, 0x1);
        gbc.writeMem(0x77e8, { 0xaa });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2224, gbc.sp());
        EXPECT(0x77e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01AD
        gbc.setState(0x64f6, 0x771e, 0xf390, 0xb37d, 0x43a6, 0xf0c9, 0x0, 0x0);
        gbc.writeMem(0x64f6, { 0xaa });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x771e, gbc.sp());
        EXPECT(0x64f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01AF
        gbc.setState(0xbeb9, 0xff6f, 0x7f70, 0xf77e, 0xaa4d, 0x1828, 0x1, 0x0);
        gbc.writeMem(0xbeb9, { 0xaa });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xff6f, gbc.sp());
        EXPECT(0xbeba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbeb9));
        // AA 01B0
        gbc.setState(0xc59b, 0xccfe, 0x81b0, 0x7953, 0x339c, 0xd13a, 0x1, 0x1);
        gbc.writeMem(0xc59b, { 0xaa });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xccfe, gbc.sp());
        EXPECT(0xc59c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc59b));
        // AA 01B1
        gbc.setState(0x2977, 0x16d, 0x7a70, 0x154a, 0xfb63, 0x1796, 0x1, 0x1);
        gbc.writeMem(0x2977, { 0xaa });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x16d, gbc.sp());
        EXPECT(0x2978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01B2
        gbc.setState(0x4ff4, 0xcf24, 0xe6c0, 0x44aa, 0xfa63, 0xfd45, 0x1, 0x0);
        gbc.writeMem(0x4ff4, { 0xaa });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcf24, gbc.sp());
        EXPECT(0x4ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01B3
        gbc.setState(0x566, 0x654d, 0x7960, 0x1216, 0x50f3, 0x8d9f, 0x1, 0x1);
        gbc.writeMem(0x566, { 0xaa });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x654d, gbc.sp());
        EXPECT(0x567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01B4
        gbc.setState(0x7a8c, 0xcf90, 0x3f40, 0xab85, 0xbbb8, 0xd490, 0x1, 0x0);
        gbc.writeMem(0x7a8c, { 0xaa });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcf90, gbc.sp());
        EXPECT(0x7a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01B5
        gbc.setState(0x9d9c, 0x5e64, 0xc710, 0x4565, 0x560, 0x1125, 0x1, 0x1);
        gbc.writeMem(0x9d9c, { 0xaa });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5e64, gbc.sp());
        EXPECT(0x9d9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9d9c));
        // AA 01B6
        gbc.setState(0x6e13, 0x312, 0xfe00, 0x6e8e, 0x4534, 0x6674, 0x1, 0x1);
        gbc.writeMem(0x6e13, { 0xaa });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x312, gbc.sp());
        EXPECT(0x6e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01B7
        gbc.setState(0x9d60, 0x30ed, 0xe10, 0xb651, 0xbb7c, 0xd477, 0x0, 0x0);
        gbc.writeMem(0x9d60, { 0xaa });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x30ed, gbc.sp());
        EXPECT(0x9d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9d60));
        // AA 01B8
        gbc.setState(0xb348, 0xad09, 0xf600, 0x59df, 0xd87b, 0xbceb, 0x1, 0x1);
        gbc.writeMem(0xb348, { 0xaa });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xad09, gbc.sp());
        EXPECT(0xb349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb348));
        // AA 01B9
        gbc.setState(0xa36d, 0xb3f7, 0x4320, 0x23e4, 0x5dd1, 0x1ee, 0x0, 0x1);
        gbc.writeMem(0xa36d, { 0xaa });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb3f7, gbc.sp());
        EXPECT(0xa36e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa36d));
        // AA 01BA
        gbc.setState(0x8af2, 0x57b, 0x50c0, 0xbba4, 0x500e, 0x4778, 0x0, 0x0);
        gbc.writeMem(0x8af2, { 0xaa });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x57b, gbc.sp());
        EXPECT(0x8af3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8af2));
        // AA 01BB
        gbc.setState(0x9193, 0x8a03, 0xe460, 0x6984, 0xa22d, 0xefa8, 0x0, 0x1);
        gbc.writeMem(0x9193, { 0xaa });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8a03, gbc.sp());
        EXPECT(0x9194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9193));
        // AA 01BC
        gbc.setState(0xae6a, 0x661c, 0x7320, 0x7bd5, 0x93f2, 0x8e1, 0x0, 0x0);
        gbc.writeMem(0xae6a, { 0xaa });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x661c, gbc.sp());
        EXPECT(0xae6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xae6a));
        // AA 01BD
        gbc.setState(0x7e83, 0xc180, 0x36d0, 0x95ca, 0x634e, 0x1dd7, 0x0, 0x0);
        gbc.writeMem(0x7e83, { 0xaa });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc180, gbc.sp());
        EXPECT(0x7e84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01BE
        gbc.setState(0xd6e4, 0x11a3, 0x66a0, 0xb58c, 0x88e0, 0xe39d, 0x1, 0x1);
        gbc.writeMem(0xd6e4, { 0xaa });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x11a3, gbc.sp());
        EXPECT(0xd6e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd6e4));
        // AA 01BF
        gbc.setState(0x4d3b, 0xe06e, 0xa580, 0xe0f0, 0xc4af, 0x6f29, 0x1, 0x1);
        gbc.writeMem(0x4d3b, { 0xaa });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe06e, gbc.sp());
        EXPECT(0x4d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01C0
        gbc.setState(0x7799, 0x650d, 0x410, 0xaa2c, 0x824, 0xba10, 0x0, 0x1);
        gbc.writeMem(0x7799, { 0xaa });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x650d, gbc.sp());
        EXPECT(0x779a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01C1
        gbc.setState(0xec08, 0xe373, 0x4150, 0xb5fb, 0xc7e, 0xcc68, 0x1, 0x0);
        gbc.writeMem(0xec08, { 0xaa });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe373, gbc.sp());
        EXPECT(0xec09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xec08));
        // AA 01C2
        gbc.setState(0xe100, 0xc968, 0x5d40, 0x5350, 0xf094, 0xbaf0, 0x0, 0x1);
        gbc.writeMem(0xe100, { 0xaa });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc968, gbc.sp());
        EXPECT(0xe101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe100));
        // AA 01C3
        gbc.setState(0x2f4c, 0x3e72, 0xee50, 0x4e24, 0x3f02, 0xdee3, 0x1, 0x0);
        gbc.writeMem(0x2f4c, { 0xaa });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3e72, gbc.sp());
        EXPECT(0x2f4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01C4
        gbc.setState(0xbe6a, 0xe3a5, 0x1c40, 0x191a, 0x6adf, 0xfeab, 0x0, 0x0);
        gbc.writeMem(0xbe6a, { 0xaa });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe3a5, gbc.sp());
        EXPECT(0xbe6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbe6a));
        // AA 01C5
        gbc.setState(0x8db2, 0x1fe0, 0xc480, 0xf7df, 0x4e24, 0x4225, 0x1, 0x0);
        gbc.writeMem(0x8db2, { 0xaa });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1fe0, gbc.sp());
        EXPECT(0x8db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8db2));
        // AA 01C6
        gbc.setState(0xb939, 0x7079, 0x13e0, 0xce74, 0xb283, 0xc8a5, 0x1, 0x1);
        gbc.writeMem(0xb939, { 0xaa });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7079, gbc.sp());
        EXPECT(0xb93a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb939));
        // AA 01C7
        gbc.setState(0xca45, 0xa952, 0xecd0, 0x9cc2, 0xcf77, 0x3c2a, 0x1, 0x1);
        gbc.writeMem(0xca45, { 0xaa });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa952, gbc.sp());
        EXPECT(0xca46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xca45));
        // AA 01C8
        gbc.setState(0x4bbe, 0xd47e, 0xd9e0, 0x91a5, 0xf57c, 0x3cb1, 0x0, 0x1);
        gbc.writeMem(0x4bbe, { 0xaa });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd47e, gbc.sp());
        EXPECT(0x4bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01C9
        gbc.setState(0x7f41, 0x76cc, 0xfab0, 0xf4af, 0x99a8, 0x4926, 0x0, 0x0);
        gbc.writeMem(0x7f41, { 0xaa });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x76cc, gbc.sp());
        EXPECT(0x7f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01CA
        gbc.setState(0xb1d4, 0xa922, 0x5ef0, 0xf67d, 0xe1d6, 0xbfdf, 0x1, 0x1);
        gbc.writeMem(0xb1d4, { 0xaa });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa922, gbc.sp());
        EXPECT(0xb1d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb1d4));
        // AA 01CB
        gbc.setState(0x2840, 0xbf28, 0x68f0, 0x5543, 0xe9d, 0x87ee, 0x0, 0x1);
        gbc.writeMem(0x2840, { 0xaa });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xbf28, gbc.sp());
        EXPECT(0x2841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01CC
        gbc.setState(0x4bae, 0xc9af, 0x4ca0, 0x2f6a, 0xb2d2, 0xccda, 0x1, 0x0);
        gbc.writeMem(0x4bae, { 0xaa });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc9af, gbc.sp());
        EXPECT(0x4baf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01CD
        gbc.setState(0x9715, 0x7efb, 0x1f40, 0x3c72, 0xc239, 0x9e00, 0x0, 0x0);
        gbc.writeMem(0x9715, { 0xaa });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7efb, gbc.sp());
        EXPECT(0x9716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9715));
        // AA 01CE
        gbc.setState(0x357, 0x1d0b, 0xc7c0, 0xd6e7, 0x3e85, 0x147d, 0x1, 0x1);
        gbc.writeMem(0x357, { 0xaa });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1d0b, gbc.sp());
        EXPECT(0x358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01CF
        gbc.setState(0x3a16, 0xc2fd, 0xcf10, 0x424a, 0x5b4c, 0x1b54, 0x1, 0x0);
        gbc.writeMem(0x3a16, { 0xaa });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc2fd, gbc.sp());
        EXPECT(0x3a17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01D0
        gbc.setState(0x1df4, 0x16cb, 0x22f0, 0x92bf, 0x52c8, 0xc798, 0x1, 0x1);
        gbc.writeMem(0x1df4, { 0xaa });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x16cb, gbc.sp());
        EXPECT(0x1df5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01D1
        gbc.setState(0x612b, 0x2426, 0x8d90, 0xcfde, 0xb1db, 0xeb95, 0x1, 0x1);
        gbc.writeMem(0x612b, { 0xaa });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2426, gbc.sp());
        EXPECT(0x612c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01D2
        gbc.setState(0x70fe, 0x48f6, 0xd650, 0x9f35, 0x426e, 0xf8cc, 0x0, 0x1);
        gbc.writeMem(0x70fe, { 0xaa });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x48f6, gbc.sp());
        EXPECT(0x70ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01D3
        gbc.setState(0xeb88, 0x493d, 0xb770, 0x66ef, 0x4954, 0xe9d0, 0x0, 0x1);
        gbc.writeMem(0xeb88, { 0xaa });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x493d, gbc.sp());
        EXPECT(0xeb89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xeb88));
        // AA 01D4
        gbc.setState(0xa9ff, 0x1fce, 0xaef0, 0x8b19, 0x8aa1, 0x60f0, 0x1, 0x1);
        gbc.writeMem(0xa9ff, { 0xaa });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1fce, gbc.sp());
        EXPECT(0xaa00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa9ff));
        // AA 01D5
        gbc.setState(0xb6ad, 0x50ce, 0x6c00, 0x7ceb, 0xc3d, 0x6869, 0x0, 0x0);
        gbc.writeMem(0xb6ad, { 0xaa });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x50ce, gbc.sp());
        EXPECT(0xb6ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb6ad));
        // AA 01D6
        gbc.setState(0xaba9, 0xf3e0, 0xd5a0, 0x83d9, 0x21b0, 0xe4ab, 0x1, 0x0);
        gbc.writeMem(0xaba9, { 0xaa });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf3e0, gbc.sp());
        EXPECT(0xabaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xaba9));
        // AA 01D7
        gbc.setState(0xc3c4, 0xc02c, 0x5fa0, 0x9ba5, 0xfd59, 0xb57b, 0x0, 0x0);
        gbc.writeMem(0xc3c4, { 0xaa });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc02c, gbc.sp());
        EXPECT(0xc3c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc3c4));
        // AA 01D9
        gbc.setState(0x12a9, 0x7ba2, 0xbf80, 0x2dec, 0xad96, 0xfbf5, 0x0, 0x0);
        gbc.writeMem(0x12a9, { 0xaa });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7ba2, gbc.sp());
        EXPECT(0x12aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01DA
        gbc.setState(0x59de, 0x4ac2, 0xf910, 0xe38a, 0xbaae, 0xeaec, 0x0, 0x0);
        gbc.writeMem(0x59de, { 0xaa });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4ac2, gbc.sp());
        EXPECT(0x59df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01DB
        gbc.setState(0x523f, 0x2407, 0xcdf0, 0xa2fb, 0xe436, 0x8b82, 0x1, 0x1);
        gbc.writeMem(0x523f, { 0xaa });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2407, gbc.sp());
        EXPECT(0x5240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01DC
        gbc.setState(0x591c, 0x776e, 0x3680, 0x9494, 0x3d00, 0x6d54, 0x0, 0x0);
        gbc.writeMem(0x591c, { 0xaa });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x776e, gbc.sp());
        EXPECT(0x591d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01DD
        gbc.setState(0xe458, 0x1f6a, 0x5710, 0x3a39, 0xd811, 0x74ac, 0x0, 0x0);
        gbc.writeMem(0xe458, { 0xaa });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1f6a, gbc.sp());
        EXPECT(0xe459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe458));
        // AA 01DE
        gbc.setState(0xeee1, 0x9d5a, 0xb0c0, 0x9e22, 0x34bb, 0x6b, 0x1, 0x0);
        gbc.writeMem(0xeee1, { 0xaa });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9d5a, gbc.sp());
        EXPECT(0xeee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xeee1));
        // AA 01E0
        gbc.setState(0x197d, 0x9467, 0x5c0, 0x8f25, 0xc6d3, 0x14bd, 0x0, 0x1);
        gbc.writeMem(0x197d, { 0xaa });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9467, gbc.sp());
        EXPECT(0x197e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01E1
        gbc.setState(0x6e04, 0xa51b, 0xdb40, 0xc305, 0xc595, 0xee8e, 0x0, 0x0);
        gbc.writeMem(0x6e04, { 0xaa });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa51b, gbc.sp());
        EXPECT(0x6e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01E2
        gbc.setState(0x2239, 0xe275, 0x9e0, 0xf717, 0x1ac, 0x2213, 0x1, 0x1);
        gbc.writeMem(0x2239, { 0xaa });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe275, gbc.sp());
        EXPECT(0x223a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01E3
        gbc.setState(0x11d3, 0x157e, 0xa110, 0xb8d3, 0xb5bb, 0xc8ea, 0x1, 0x0);
        gbc.writeMem(0x11d3, { 0xaa });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x157e, gbc.sp());
        EXPECT(0x11d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01E4
        gbc.setState(0x583, 0x554f, 0xc070, 0xc525, 0x1461, 0x379e, 0x0, 0x1);
        gbc.writeMem(0x583, { 0xaa });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x554f, gbc.sp());
        EXPECT(0x584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01E5
        gbc.setState(0x7b4e, 0x8113, 0x1810, 0x3fdd, 0x9ffc, 0xc39e, 0x1, 0x1);
        gbc.writeMem(0x7b4e, { 0xaa });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8113, gbc.sp());
        EXPECT(0x7b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01E6
        gbc.setState(0x1737, 0xb24a, 0xa460, 0xf601, 0xd5b4, 0xc722, 0x1, 0x0);
        gbc.writeMem(0x1737, { 0xaa });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb24a, gbc.sp());
        EXPECT(0x1738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01E7
        gbc.setState(0xb97e, 0x22ae, 0x6c90, 0xb49d, 0x7a84, 0x8dbd, 0x1, 0x1);
        gbc.writeMem(0xb97e, { 0xaa });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x22ae, gbc.sp());
        EXPECT(0xb97f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb97e));
        // AA 01E8
        gbc.setState(0x7da2, 0xfd52, 0x6a40, 0xb391, 0x91b4, 0xc93e, 0x1, 0x1);
        gbc.writeMem(0x7da2, { 0xaa });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfd52, gbc.sp());
        EXPECT(0x7da3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01E9
        gbc.setState(0xa41d, 0x169c, 0x5a0, 0x3da9, 0x9953, 0x2729, 0x1, 0x1);
        gbc.writeMem(0xa41d, { 0xaa });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x169c, gbc.sp());
        EXPECT(0xa41e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa41d));
        // AA 01EA
        gbc.setState(0xe6a5, 0xde03, 0xf6c0, 0x6853, 0x8145, 0xd176, 0x1, 0x1);
        gbc.writeMem(0xe6a5, { 0xaa });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xde03, gbc.sp());
        EXPECT(0xe6a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe6a5));
        // AA 01EB
        gbc.setState(0xdaa5, 0x7263, 0xfcb0, 0x461, 0x419e, 0xa8af, 0x0, 0x0);
        gbc.writeMem(0xdaa5, { 0xaa });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7263, gbc.sp());
        EXPECT(0xdaa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xdaa5));
        // AA 01EC
        gbc.setState(0x4e9b, 0xfede, 0x6c50, 0x188a, 0x9bf5, 0x2b10, 0x0, 0x1);
        gbc.writeMem(0x4e9b, { 0xaa });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfede, gbc.sp());
        EXPECT(0x4e9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01ED
        gbc.setState(0xaa73, 0x25be, 0x3b60, 0x7025, 0xebca, 0x3bd4, 0x1, 0x0);
        gbc.writeMem(0xaa73, { 0xaa });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x25be, gbc.sp());
        EXPECT(0xaa74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xaa73));
        // AA 01EE
        gbc.setState(0xb631, 0x5437, 0x1eb0, 0x4d19, 0xf93d, 0x7371, 0x0, 0x0);
        gbc.writeMem(0xb631, { 0xaa });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5437, gbc.sp());
        EXPECT(0xb632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb631));
        // AA 01EF
        gbc.setState(0x6a4f, 0xfce0, 0xed50, 0xc3a3, 0xf407, 0xeb9, 0x0, 0x0);
        gbc.writeMem(0x6a4f, { 0xaa });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfce0, gbc.sp());
        EXPECT(0x6a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01F0
        gbc.setState(0x277e, 0x2ed0, 0x170, 0xb88f, 0x203c, 0x1dee, 0x1, 0x0);
        gbc.writeMem(0x277e, { 0xaa });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2ed0, gbc.sp());
        EXPECT(0x277f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01F1
        gbc.setState(0x5bdc, 0x1420, 0x7160, 0x2aa, 0x46e3, 0xa691, 0x0, 0x1);
        gbc.writeMem(0x5bdc, { 0xaa });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1420, gbc.sp());
        EXPECT(0x5bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01F2
        gbc.setState(0xdb3f, 0xdf96, 0x6df0, 0xd1e3, 0xf913, 0xdd63, 0x0, 0x0);
        gbc.writeMem(0xdb3f, { 0xaa });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xdf96, gbc.sp());
        EXPECT(0xdb40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xdb3f));
        // AA 01F3
        gbc.setState(0xc087, 0xcef5, 0xd520, 0xe960, 0x7609, 0x7f3f, 0x0, 0x1);
        gbc.writeMem(0xc087, { 0xaa });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xcef5, gbc.sp());
        EXPECT(0xc088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc087));
        // AA 01F4
        gbc.setState(0x190f, 0xd67b, 0xdf40, 0x51e0, 0x5380, 0x2332, 0x0, 0x0);
        gbc.writeMem(0x190f, { 0xaa });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd67b, gbc.sp());
        EXPECT(0x1910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01F5
        gbc.setState(0x6629, 0x20bb, 0xa850, 0x7299, 0x25de, 0xd378, 0x1, 0x0);
        gbc.writeMem(0x6629, { 0xaa });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x20bb, gbc.sp());
        EXPECT(0x662a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01F6
        gbc.setState(0xa522, 0xdc4e, 0x3df0, 0x74ed, 0xf805, 0x4af7, 0x1, 0x1);
        gbc.writeMem(0xa522, { 0xaa });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xdc4e, gbc.sp());
        EXPECT(0xa523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa522));
        // AA 01F7
        gbc.setState(0x8955, 0x36e1, 0xc200, 0xd65a, 0x2012, 0x89fd, 0x0, 0x0);
        gbc.writeMem(0x8955, { 0xaa });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x36e1, gbc.sp());
        EXPECT(0x8956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8955));
        // AA 01F8
        gbc.setState(0x8993, 0x463d, 0x3dc0, 0x30e6, 0x64e5, 0x67b0, 0x1, 0x1);
        gbc.writeMem(0x8993, { 0xaa });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x463d, gbc.sp());
        EXPECT(0x8994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8993));
        // AA 01F9
        gbc.setState(0xe66a, 0xb33f, 0x2e40, 0xad76, 0xae1d, 0xfe32, 0x1, 0x1);
        gbc.writeMem(0xe66a, { 0xaa });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb33f, gbc.sp());
        EXPECT(0xe66b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe66a));
        // AA 01FA
        gbc.setState(0x6f99, 0x9e2f, 0xb6d0, 0x92e4, 0x44cc, 0xbed5, 0x1, 0x0);
        gbc.writeMem(0x6f99, { 0xaa });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9e2f, gbc.sp());
        EXPECT(0x6f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01FB
        gbc.setState(0x36d0, 0xd0ce, 0xb440, 0x13df, 0x24b2, 0x3b42, 0x1, 0x0);
        gbc.writeMem(0x36d0, { 0xaa });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd0ce, gbc.sp());
        EXPECT(0x36d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01FC
        gbc.setState(0x1ebf, 0xd221, 0x78f0, 0x2f67, 0x50ee, 0xee44, 0x0, 0x0);
        gbc.writeMem(0x1ebf, { 0xaa });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd221, gbc.sp());
        EXPECT(0x1ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 01FD
        gbc.setState(0xc40e, 0x1e3b, 0xc010, 0x1878, 0xcac5, 0x3ad1, 0x0, 0x1);
        gbc.writeMem(0xc40e, { 0xaa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1e3b, gbc.sp());
        EXPECT(0xc40f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc40e));
        // AA 01FE
        gbc.setState(0xd145, 0xb238, 0x6b80, 0xda4e, 0x1f22, 0x9b01, 0x1, 0x0);
        gbc.writeMem(0xd145, { 0xaa });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb238, gbc.sp());
        EXPECT(0xd146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd145));
        // AA 01FF
        gbc.setState(0xcd02, 0x970e, 0xc0e0, 0xfea7, 0xbbc0, 0x710e, 0x0, 0x1);
        gbc.writeMem(0xcd02, { 0xaa });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x970e, gbc.sp());
        EXPECT(0xcd03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xcd02));
        // AA 0200
        gbc.setState(0x1759, 0x2bdc, 0xc5b0, 0x2ef8, 0x332c, 0xb2fe, 0x0, 0x0);
        gbc.writeMem(0x1759, { 0xaa });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2bdc, gbc.sp());
        EXPECT(0x175a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0201
        gbc.setState(0x59e0, 0xc5b3, 0xb180, 0xa0e4, 0xaa42, 0x8687, 0x1, 0x1);
        gbc.writeMem(0x59e0, { 0xaa });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc5b3, gbc.sp());
        EXPECT(0x59e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0202
        gbc.setState(0xbb51, 0x66fd, 0x1a30, 0xeeec, 0x73d, 0xe6b1, 0x0, 0x0);
        gbc.writeMem(0xbb51, { 0xaa });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x66fd, gbc.sp());
        EXPECT(0xbb52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbb51));
        // AA 0203
        gbc.setState(0x3bc, 0x5b8b, 0x7310, 0xaa57, 0x8a63, 0x77bf, 0x1, 0x1);
        gbc.writeMem(0x3bc, { 0xaa });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5b8b, gbc.sp());
        EXPECT(0x3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0204
        gbc.setState(0x6138, 0x8ef6, 0x4f40, 0x2b68, 0x928d, 0xa083, 0x0, 0x0);
        gbc.writeMem(0x6138, { 0xaa });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8ef6, gbc.sp());
        EXPECT(0x6139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0205
        gbc.setState(0xad4d, 0xe431, 0xab90, 0x79e8, 0x65dc, 0x32b8, 0x0, 0x1);
        gbc.writeMem(0xad4d, { 0xaa });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe431, gbc.sp());
        EXPECT(0xad4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xad4d));
        // AA 0206
        gbc.setState(0xa8f5, 0xd03c, 0x5d50, 0x5450, 0x6752, 0xc418, 0x1, 0x1);
        gbc.writeMem(0xa8f5, { 0xaa });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd03c, gbc.sp());
        EXPECT(0xa8f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa8f5));
        // AA 0207
        gbc.setState(0xc286, 0x58fd, 0x5510, 0xbebb, 0xa3f6, 0xbb8c, 0x0, 0x0);
        gbc.writeMem(0xc286, { 0xaa });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x58fd, gbc.sp());
        EXPECT(0xc287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc286));
        // AA 0208
        gbc.setState(0x97ea, 0x12d2, 0x910, 0x813e, 0x8775, 0xcae3, 0x1, 0x1);
        gbc.writeMem(0x97ea, { 0xaa });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x12d2, gbc.sp());
        EXPECT(0x97eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x97ea));
        // AA 0209
        gbc.setState(0xa877, 0x2bba, 0xcbe0, 0x7116, 0x6eaf, 0x4bca, 0x1, 0x1);
        gbc.writeMem(0xa877, { 0xaa });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2bba, gbc.sp());
        EXPECT(0xa878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa877));
        // AA 020B
        gbc.setState(0x6ba8, 0x55a1, 0x2a0, 0x5b7f, 0xa519, 0x6590, 0x0, 0x1);
        gbc.writeMem(0x6ba8, { 0xaa });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x55a1, gbc.sp());
        EXPECT(0x6ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 020C
        gbc.setState(0x3aeb, 0xfb61, 0x24e0, 0xa3e9, 0xf792, 0x62d8, 0x0, 0x1);
        gbc.writeMem(0x3aeb, { 0xaa });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfb61, gbc.sp());
        EXPECT(0x3aec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 020E
        gbc.setState(0x7264, 0x1b14, 0x6290, 0x7271, 0xe8db, 0x1b6a, 0x1, 0x0);
        gbc.writeMem(0x7264, { 0xaa });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1b14, gbc.sp());
        EXPECT(0x7265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 020F
        gbc.setState(0x572a, 0x9a41, 0x14f0, 0x8c74, 0xdf7b, 0x71fe, 0x1, 0x0);
        gbc.writeMem(0x572a, { 0xaa });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9a41, gbc.sp());
        EXPECT(0x572b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0210
        gbc.setState(0x9281, 0x22a8, 0x1c40, 0x27c4, 0x2591, 0x3d44, 0x0, 0x1);
        gbc.writeMem(0x9281, { 0xaa });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x22a8, gbc.sp());
        EXPECT(0x9282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9281));
        // AA 0211
        gbc.setState(0x2f4f, 0xa8d4, 0x7680, 0x7d69, 0xde34, 0x8efd, 0x0, 0x0);
        gbc.writeMem(0x2f4f, { 0xaa });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa8d4, gbc.sp());
        EXPECT(0x2f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0212
        gbc.setState(0x7e20, 0x19cc, 0x38c0, 0xc84c, 0xf34e, 0xf70c, 0x0, 0x0);
        gbc.writeMem(0x7e20, { 0xaa });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x19cc, gbc.sp());
        EXPECT(0x7e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0213
        gbc.setState(0x1402, 0x7be3, 0xdfe0, 0x7f47, 0x3ad3, 0xd72d, 0x0, 0x1);
        gbc.writeMem(0x1402, { 0xaa });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7be3, gbc.sp());
        EXPECT(0x1403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0214
        gbc.setState(0xd81e, 0x2f83, 0x3510, 0xbe8, 0xcfcc, 0x6b33, 0x0, 0x1);
        gbc.writeMem(0xd81e, { 0xaa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2f83, gbc.sp());
        EXPECT(0xd81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd81e));
        // AA 0215
        gbc.setState(0x3a26, 0x8494, 0x2e30, 0x775a, 0xdf8, 0xc7dc, 0x1, 0x1);
        gbc.writeMem(0x3a26, { 0xaa });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8494, gbc.sp());
        EXPECT(0x3a27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0217
        gbc.setState(0x18d2, 0x53a3, 0x1b70, 0x60cd, 0x4c26, 0xf64f, 0x0, 0x0);
        gbc.writeMem(0x18d2, { 0xaa });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x53a3, gbc.sp());
        EXPECT(0x18d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0218
        gbc.setState(0xc84f, 0x94cc, 0x9190, 0xea02, 0xc6e, 0x6641, 0x1, 0x0);
        gbc.writeMem(0xc84f, { 0xaa });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x94cc, gbc.sp());
        EXPECT(0xc850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc84f));
        // AA 0219
        gbc.setState(0x863d, 0x8020, 0x2060, 0x2008, 0xa444, 0xaeb4, 0x1, 0x1);
        gbc.writeMem(0x863d, { 0xaa });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8020, gbc.sp());
        EXPECT(0x863e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x863d));
        // AA 021A
        gbc.setState(0xa9c5, 0x6f35, 0xef50, 0x26ea, 0x49c3, 0x5276, 0x1, 0x1);
        gbc.writeMem(0xa9c5, { 0xaa });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6f35, gbc.sp());
        EXPECT(0xa9c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa9c5));
        // AA 021B
        gbc.setState(0x4deb, 0x14c8, 0xea50, 0x44b, 0x53fb, 0xc343, 0x1, 0x0);
        gbc.writeMem(0x4deb, { 0xaa });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x14c8, gbc.sp());
        EXPECT(0x4dec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 021C
        gbc.setState(0x6c1e, 0x8a27, 0xab60, 0x6e75, 0x4874, 0x2d9a, 0x1, 0x1);
        gbc.writeMem(0x6c1e, { 0xaa });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8a27, gbc.sp());
        EXPECT(0x6c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 021D
        gbc.setState(0x5964, 0x352b, 0xd820, 0x21b0, 0x24ad, 0x8d14, 0x0, 0x0);
        gbc.writeMem(0x5964, { 0xaa });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x352b, gbc.sp());
        EXPECT(0x5965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 021E
        gbc.setState(0xb741, 0xf8a, 0x72a0, 0x396f, 0xfbbc, 0xed87, 0x0, 0x0);
        gbc.writeMem(0xb741, { 0xaa });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf8a, gbc.sp());
        EXPECT(0xb742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb741));
        // AA 021F
        gbc.setState(0xb45b, 0xe8b1, 0xddc0, 0x3fb, 0xaee9, 0x57a, 0x1, 0x1);
        gbc.writeMem(0xb45b, { 0xaa });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe8b1, gbc.sp());
        EXPECT(0xb45c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb45b));
        // AA 0221
        gbc.setState(0x609a, 0xa2dd, 0xfa30, 0xf5e, 0xb738, 0xe218, 0x0, 0x1);
        gbc.writeMem(0x609a, { 0xaa });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa2dd, gbc.sp());
        EXPECT(0x609b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0222
        gbc.setState(0xa35, 0x1f5f, 0xaa70, 0x80fa, 0x9d5a, 0xcc1c, 0x0, 0x0);
        gbc.writeMem(0xa35, { 0xaa });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1f5f, gbc.sp());
        EXPECT(0xa36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0223
        gbc.setState(0x1bf5, 0xb341, 0xe720, 0xa7f3, 0xcc24, 0x66fa, 0x0, 0x0);
        gbc.writeMem(0x1bf5, { 0xaa });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb341, gbc.sp());
        EXPECT(0x1bf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0224
        gbc.setState(0xd28f, 0xeda3, 0xab20, 0x9780, 0x4a67, 0xa14c, 0x0, 0x1);
        gbc.writeMem(0xd28f, { 0xaa });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xeda3, gbc.sp());
        EXPECT(0xd290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd28f));
        // AA 0226
        gbc.setState(0x297a, 0xefe, 0xf7f0, 0x2f60, 0xb3d1, 0x7f02, 0x0, 0x1);
        gbc.writeMem(0x297a, { 0xaa });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xefe, gbc.sp());
        EXPECT(0x297b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0227
        gbc.setState(0xa511, 0x9295, 0xa5f0, 0x629c, 0xca44, 0xdf2f, 0x1, 0x0);
        gbc.writeMem(0xa511, { 0xaa });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9295, gbc.sp());
        EXPECT(0xa512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa511));
        // AA 0229
        gbc.setState(0x9f5a, 0xbe6f, 0xbc0, 0x35fb, 0xc41b, 0xe8d9, 0x1, 0x1);
        gbc.writeMem(0x9f5a, { 0xaa });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbe6f, gbc.sp());
        EXPECT(0x9f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9f5a));
        // AA 022A
        gbc.setState(0xb678, 0xfdec, 0x9fc0, 0x5cc, 0x9f05, 0x84bf, 0x0, 0x1);
        gbc.writeMem(0xb678, { 0xaa });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfdec, gbc.sp());
        EXPECT(0xb679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb678));
        // AA 022B
        gbc.setState(0x44cf, 0x65cb, 0xcc20, 0x1ba, 0x6ae0, 0x8a21, 0x1, 0x1);
        gbc.writeMem(0x44cf, { 0xaa });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x65cb, gbc.sp());
        EXPECT(0x44d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 022C
        gbc.setState(0xcfb6, 0xb18a, 0x4960, 0x9564, 0x1945, 0x5ddc, 0x0, 0x0);
        gbc.writeMem(0xcfb6, { 0xaa });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb18a, gbc.sp());
        EXPECT(0xcfb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xcfb6));
        // AA 022D
        gbc.setState(0x37ad, 0x340c, 0x72a0, 0x5c6b, 0x847c, 0x98a8, 0x1, 0x0);
        gbc.writeMem(0x37ad, { 0xaa });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x340c, gbc.sp());
        EXPECT(0x37ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 022E
        gbc.setState(0xc6de, 0x2040, 0x33d0, 0x4769, 0x90b1, 0x6922, 0x0, 0x0);
        gbc.writeMem(0xc6de, { 0xaa });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2040, gbc.sp());
        EXPECT(0xc6df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc6de));
        // AA 022F
        gbc.setState(0x526d, 0x9d94, 0xb00, 0xfbfa, 0xa150, 0xb927, 0x1, 0x0);
        gbc.writeMem(0x526d, { 0xaa });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9d94, gbc.sp());
        EXPECT(0x526e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0231
        gbc.setState(0x675f, 0x9ef4, 0xf660, 0x78f6, 0xbc14, 0x337, 0x0, 0x1);
        gbc.writeMem(0x675f, { 0xaa });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9ef4, gbc.sp());
        EXPECT(0x6760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0232
        gbc.setState(0xc88f, 0xf655, 0xdb70, 0x4706, 0x6fc5, 0x1c6b, 0x0, 0x0);
        gbc.writeMem(0xc88f, { 0xaa });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf655, gbc.sp());
        EXPECT(0xc890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc88f));
        // AA 0233
        gbc.setState(0x4cd8, 0x7e7e, 0x1c70, 0xb914, 0xf16b, 0xde2b, 0x1, 0x0);
        gbc.writeMem(0x4cd8, { 0xaa });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7e7e, gbc.sp());
        EXPECT(0x4cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0234
        gbc.setState(0x38dd, 0xc7ee, 0xb7c0, 0x10c4, 0x940, 0x4128, 0x0, 0x0);
        gbc.writeMem(0x38dd, { 0xaa });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc7ee, gbc.sp());
        EXPECT(0x38de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0235
        gbc.setState(0x1cb7, 0xa71f, 0x5f50, 0x3d24, 0xf9e1, 0x7987, 0x1, 0x1);
        gbc.writeMem(0x1cb7, { 0xaa });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa71f, gbc.sp());
        EXPECT(0x1cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0236
        gbc.setState(0x61be, 0x9c52, 0x6ab0, 0x597a, 0x7216, 0x7485, 0x0, 0x1);
        gbc.writeMem(0x61be, { 0xaa });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9c52, gbc.sp());
        EXPECT(0x61bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0237
        gbc.setState(0x12e4, 0xca2e, 0xe870, 0xe337, 0x80ca, 0x6177, 0x1, 0x0);
        gbc.writeMem(0x12e4, { 0xaa });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xca2e, gbc.sp());
        EXPECT(0x12e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0238
        gbc.setState(0x55e1, 0xde7c, 0xc110, 0x7d3f, 0xeedf, 0x8ea3, 0x1, 0x1);
        gbc.writeMem(0x55e1, { 0xaa });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xde7c, gbc.sp());
        EXPECT(0x55e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0239
        gbc.setState(0xcd9b, 0xad25, 0x4ee0, 0x3f5e, 0xe414, 0x394, 0x1, 0x1);
        gbc.writeMem(0xcd9b, { 0xaa });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xad25, gbc.sp());
        EXPECT(0xcd9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xcd9b));
        // AA 023A
        gbc.setState(0x1908, 0xf432, 0xa930, 0x71f8, 0x7971, 0x759c, 0x1, 0x0);
        gbc.writeMem(0x1908, { 0xaa });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf432, gbc.sp());
        EXPECT(0x1909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 023B
        gbc.setState(0x8865, 0x29bb, 0x7fb0, 0xcc26, 0x6ada, 0x250f, 0x1, 0x0);
        gbc.writeMem(0x8865, { 0xaa });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x29bb, gbc.sp());
        EXPECT(0x8866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8865));
        // AA 023C
        gbc.setState(0x9cf0, 0xcbf7, 0xce50, 0xd4e1, 0x3b67, 0x22dd, 0x0, 0x0);
        gbc.writeMem(0x9cf0, { 0xaa });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xcbf7, gbc.sp());
        EXPECT(0x9cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9cf0));
        // AA 023D
        gbc.setState(0x5e55, 0x263a, 0xb460, 0xe49, 0xaa9c, 0x55c3, 0x0, 0x1);
        gbc.writeMem(0x5e55, { 0xaa });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x263a, gbc.sp());
        EXPECT(0x5e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 023E
        gbc.setState(0x360f, 0x8558, 0xf940, 0xd2bc, 0xb843, 0x51f5, 0x0, 0x0);
        gbc.writeMem(0x360f, { 0xaa });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8558, gbc.sp());
        EXPECT(0x3610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 023F
        gbc.setState(0x9540, 0x2f9c, 0x5f10, 0x7830, 0x7a93, 0xcfec, 0x0, 0x1);
        gbc.writeMem(0x9540, { 0xaa });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2f9c, gbc.sp());
        EXPECT(0x9541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9540));
        // AA 0240
        gbc.setState(0x8ae1, 0xc645, 0xb970, 0xa15d, 0xeb9d, 0x9960, 0x0, 0x1);
        gbc.writeMem(0x8ae1, { 0xaa });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc645, gbc.sp());
        EXPECT(0x8ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8ae1));
        // AA 0241
        gbc.setState(0xdde0, 0xcbad, 0xa730, 0x6000, 0x7d8a, 0x7214, 0x0, 0x0);
        gbc.writeMem(0xdde0, { 0xaa });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xcbad, gbc.sp());
        EXPECT(0xdde1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xdde0));
        // AA 0242
        gbc.setState(0x7fed, 0x97ee, 0xfa00, 0x4f0d, 0x7586, 0xf574, 0x0, 0x1);
        gbc.writeMem(0x7fed, { 0xaa });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x97ee, gbc.sp());
        EXPECT(0x7fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0243
        gbc.setState(0x750a, 0x5ff6, 0xba50, 0x9802, 0xed99, 0x8934, 0x1, 0x0);
        gbc.writeMem(0x750a, { 0xaa });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5ff6, gbc.sp());
        EXPECT(0x750b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0244
        gbc.setState(0x4d73, 0xe792, 0x3870, 0x2a8c, 0x5101, 0x748e, 0x0, 0x0);
        gbc.writeMem(0x4d73, { 0xaa });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe792, gbc.sp());
        EXPECT(0x4d74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0245
        gbc.setState(0x8a2, 0x592e, 0x1860, 0xa4f, 0x4be4, 0x2903, 0x1, 0x1);
        gbc.writeMem(0x8a2, { 0xaa });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x592e, gbc.sp());
        EXPECT(0x8a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0246
        gbc.setState(0x4abf, 0x1bb4, 0x3e30, 0xf6eb, 0x280e, 0x9f0b, 0x0, 0x1);
        gbc.writeMem(0x4abf, { 0xaa });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1bb4, gbc.sp());
        EXPECT(0x4ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0247
        gbc.setState(0x74d5, 0x70f0, 0x2800, 0x694c, 0x36b8, 0x816b, 0x1, 0x0);
        gbc.writeMem(0x74d5, { 0xaa });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x70f0, gbc.sp());
        EXPECT(0x74d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0248
        gbc.setState(0xa238, 0x403c, 0x8c00, 0x6d07, 0x92c3, 0x9688, 0x0, 0x0);
        gbc.writeMem(0xa238, { 0xaa });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x403c, gbc.sp());
        EXPECT(0xa239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa238));
        // AA 0249
        gbc.setState(0xb19f, 0xdd0a, 0x5810, 0x1d20, 0xeca2, 0x7b56, 0x0, 0x1);
        gbc.writeMem(0xb19f, { 0xaa });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdd0a, gbc.sp());
        EXPECT(0xb1a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb19f));
        // AA 024A
        gbc.setState(0x6e85, 0xa088, 0x99f0, 0x1074, 0xf4fa, 0xef4b, 0x0, 0x0);
        gbc.writeMem(0x6e85, { 0xaa });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa088, gbc.sp());
        EXPECT(0x6e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 024B
        gbc.setState(0x4ccf, 0x5fde, 0xcd40, 0x973c, 0x46e6, 0xa7e6, 0x0, 0x1);
        gbc.writeMem(0x4ccf, { 0xaa });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5fde, gbc.sp());
        EXPECT(0x4cd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 024C
        gbc.setState(0xeeb3, 0xfb14, 0x8e0, 0x57e5, 0x917a, 0x3006, 0x0, 0x1);
        gbc.writeMem(0xeeb3, { 0xaa });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfb14, gbc.sp());
        EXPECT(0xeeb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xeeb3));
        // AA 024D
        gbc.setState(0xe987, 0x438f, 0x79f0, 0xe9ef, 0x67a8, 0x2b62, 0x0, 0x1);
        gbc.writeMem(0xe987, { 0xaa });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x438f, gbc.sp());
        EXPECT(0xe988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe987));
        // AA 024E
        gbc.setState(0x630e, 0xbc1b, 0x4e30, 0x5d99, 0xc524, 0x9866, 0x1, 0x0);
        gbc.writeMem(0x630e, { 0xaa });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbc1b, gbc.sp());
        EXPECT(0x630f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 024F
        gbc.setState(0x2bad, 0xb9e0, 0xb9d0, 0xa3b8, 0xecce, 0x5499, 0x1, 0x1);
        gbc.writeMem(0x2bad, { 0xaa });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb9e0, gbc.sp());
        EXPECT(0x2bae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0250
        gbc.setState(0xd3bf, 0xa8f7, 0x94c0, 0x128e, 0x9bab, 0xf810, 0x0, 0x0);
        gbc.writeMem(0xd3bf, { 0xaa });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa8f7, gbc.sp());
        EXPECT(0xd3c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd3bf));
        // AA 0252
        gbc.setState(0x9335, 0xef74, 0x4bd0, 0xa2e6, 0x5631, 0xca2e, 0x0, 0x1);
        gbc.writeMem(0x9335, { 0xaa });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xef74, gbc.sp());
        EXPECT(0x9336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9335));
        // AA 0253
        gbc.setState(0x8dd2, 0xb015, 0x72e0, 0xba82, 0xd474, 0xfcb1, 0x0, 0x0);
        gbc.writeMem(0x8dd2, { 0xaa });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb015, gbc.sp());
        EXPECT(0x8dd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8dd2));
        // AA 0254
        gbc.setState(0xc510, 0x89c6, 0x5270, 0x5400, 0x663e, 0x6c1a, 0x1, 0x1);
        gbc.writeMem(0xc510, { 0xaa });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x89c6, gbc.sp());
        EXPECT(0xc511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc510));
        // AA 0255
        gbc.setState(0xc167, 0x3d93, 0x4870, 0x4768, 0x2819, 0x53b5, 0x0, 0x0);
        gbc.writeMem(0xc167, { 0xaa });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3d93, gbc.sp());
        EXPECT(0xc168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc167));
        // AA 0256
        gbc.setState(0x5998, 0xf7f5, 0xbbb0, 0x2c07, 0xd1b9, 0x1f16, 0x1, 0x0);
        gbc.writeMem(0x5998, { 0xaa });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf7f5, gbc.sp());
        EXPECT(0x5999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0257
        gbc.setState(0xd571, 0xd353, 0xb4c0, 0x1bdd, 0x69a, 0x6924, 0x0, 0x1);
        gbc.writeMem(0xd571, { 0xaa });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd353, gbc.sp());
        EXPECT(0xd572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd571));
        // AA 0258
        gbc.setState(0x72af, 0x4b5c, 0xf4e0, 0x1ad0, 0x10f, 0x5098, 0x1, 0x1);
        gbc.writeMem(0x72af, { 0xaa });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4b5c, gbc.sp());
        EXPECT(0x72b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0259
        gbc.setState(0x2f6c, 0x570, 0x19d0, 0x2dc5, 0xd999, 0x4901, 0x0, 0x0);
        gbc.writeMem(0x2f6c, { 0xaa });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x570, gbc.sp());
        EXPECT(0x2f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 025A
        gbc.setState(0x3e4, 0x3814, 0x7d70, 0x2505, 0xb593, 0x62, 0x1, 0x0);
        gbc.writeMem(0x3e4, { 0xaa });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3814, gbc.sp());
        EXPECT(0x3e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 025B
        gbc.setState(0x2fcf, 0x566b, 0x25a0, 0xd4d, 0xcda7, 0xab6b, 0x0, 0x0);
        gbc.writeMem(0x2fcf, { 0xaa });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x566b, gbc.sp());
        EXPECT(0x2fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 025C
        gbc.setState(0x4d, 0xc2b5, 0x1a0, 0x9f37, 0x2cf4, 0x84d0, 0x0, 0x1);
        gbc.writeMem(0x4d, { 0xaa });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc2b5, gbc.sp());
        EXPECT(0x4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 025D
        gbc.setState(0x32b9, 0xba6c, 0x1d20, 0x184d, 0xa24, 0x70d9, 0x0, 0x1);
        gbc.writeMem(0x32b9, { 0xaa });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xba6c, gbc.sp());
        EXPECT(0x32ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 025E
        gbc.setState(0xdbdd, 0x74fc, 0x3890, 0xbc64, 0xda0, 0x3ddb, 0x1, 0x0);
        gbc.writeMem(0xdbdd, { 0xaa });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x74fc, gbc.sp());
        EXPECT(0xdbde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xdbdd));
        // AA 025F
        gbc.setState(0x33f7, 0x7832, 0x4370, 0x72ce, 0x8e3a, 0x922b, 0x0, 0x0);
        gbc.writeMem(0x33f7, { 0xaa });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7832, gbc.sp());
        EXPECT(0x33f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0260
        gbc.setState(0x2504, 0x42f7, 0xdb30, 0xe61, 0x3517, 0xa31a, 0x0, 0x0);
        gbc.writeMem(0x2504, { 0xaa });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x42f7, gbc.sp());
        EXPECT(0x2505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0261
        gbc.setState(0x4abd, 0x4c8a, 0x65f0, 0x61cf, 0xa6b3, 0xf55b, 0x0, 0x1);
        gbc.writeMem(0x4abd, { 0xaa });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4c8a, gbc.sp());
        EXPECT(0x4abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0262
        gbc.setState(0xef4b, 0xe50f, 0xc3c0, 0x19d7, 0xf263, 0xcbd6, 0x0, 0x0);
        gbc.writeMem(0xef4b, { 0xaa });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe50f, gbc.sp());
        EXPECT(0xef4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xef4b));
        // AA 0263
        gbc.setState(0xb677, 0x4c54, 0x24c0, 0x232a, 0x8c84, 0x8a4b, 0x0, 0x1);
        gbc.writeMem(0xb677, { 0xaa });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4c54, gbc.sp());
        EXPECT(0xb678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb677));
        // AA 0264
        gbc.setState(0x1c30, 0xf4ae, 0x2e20, 0xc670, 0x1f28, 0x980d, 0x1, 0x1);
        gbc.writeMem(0x1c30, { 0xaa });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf4ae, gbc.sp());
        EXPECT(0x1c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0265
        gbc.setState(0x5eb4, 0xd742, 0xa5b0, 0x344, 0x9fe8, 0x52bf, 0x1, 0x1);
        gbc.writeMem(0x5eb4, { 0xaa });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd742, gbc.sp());
        EXPECT(0x5eb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0266
        gbc.setState(0x3687, 0x9977, 0x1150, 0x76ae, 0xc907, 0x4c62, 0x1, 0x1);
        gbc.writeMem(0x3687, { 0xaa });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9977, gbc.sp());
        EXPECT(0x3688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0267
        gbc.setState(0xa6cd, 0x4b46, 0x5570, 0x3210, 0xd0d1, 0x37c1, 0x0, 0x1);
        gbc.writeMem(0xa6cd, { 0xaa });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4b46, gbc.sp());
        EXPECT(0xa6ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa6cd));
        // AA 0268
        gbc.setState(0x8867, 0x7a0c, 0xfa90, 0x1262, 0x7723, 0xb64, 0x1, 0x1);
        gbc.writeMem(0x8867, { 0xaa });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7a0c, gbc.sp());
        EXPECT(0x8868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8867));
        // AA 0269
        gbc.setState(0xe3fc, 0x4cf3, 0xe030, 0xe1f8, 0xc761, 0x9562, 0x1, 0x0);
        gbc.writeMem(0xe3fc, { 0xaa });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4cf3, gbc.sp());
        EXPECT(0xe3fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe3fc));
        // AA 026A
        gbc.setState(0x6a8b, 0xbfe, 0xcd0, 0xbc5c, 0x3e2, 0x583a, 0x0, 0x0);
        gbc.writeMem(0x6a8b, { 0xaa });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbfe, gbc.sp());
        EXPECT(0x6a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 026B
        gbc.setState(0x3dfe, 0xe6f, 0xe510, 0xa82a, 0xc62a, 0x68d1, 0x1, 0x0);
        gbc.writeMem(0x3dfe, { 0xaa });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe6f, gbc.sp());
        EXPECT(0x3dff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 026C
        gbc.setState(0xafec, 0x5eb9, 0xe020, 0x3bfd, 0xa650, 0xe014, 0x1, 0x0);
        gbc.writeMem(0xafec, { 0xaa });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5eb9, gbc.sp());
        EXPECT(0xafed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xafec));
        // AA 026D
        gbc.setState(0xe6f1, 0x1e6d, 0x6060, 0xbfff, 0x5387, 0xd2fe, 0x1, 0x0);
        gbc.writeMem(0xe6f1, { 0xaa });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1e6d, gbc.sp());
        EXPECT(0xe6f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe6f1));
        // AA 026E
        gbc.setState(0x824d, 0x36cf, 0xebb0, 0xb231, 0xb786, 0x4e01, 0x0, 0x0);
        gbc.writeMem(0x824d, { 0xaa });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x36cf, gbc.sp());
        EXPECT(0x824e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x824d));
        // AA 026F
        gbc.setState(0x6b71, 0x6684, 0x95d0, 0xf7bc, 0x8e1d, 0x4d92, 0x0, 0x1);
        gbc.writeMem(0x6b71, { 0xaa });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6684, gbc.sp());
        EXPECT(0x6b72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0270
        gbc.setState(0xb57b, 0xe70c, 0x3ff0, 0xde35, 0xe74c, 0x6f3c, 0x1, 0x0);
        gbc.writeMem(0xb57b, { 0xaa });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe70c, gbc.sp());
        EXPECT(0xb57c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb57b));
        // AA 0271
        gbc.setState(0x97e4, 0x4e8, 0xf640, 0x4232, 0xbecd, 0x2b71, 0x1, 0x0);
        gbc.writeMem(0x97e4, { 0xaa });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4e8, gbc.sp());
        EXPECT(0x97e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x97e4));
        // AA 0272
        gbc.setState(0xe7cc, 0x1bce, 0x9390, 0x9495, 0x2fc9, 0x3436, 0x0, 0x0);
        gbc.writeMem(0xe7cc, { 0xaa });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1bce, gbc.sp());
        EXPECT(0xe7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe7cc));
        // AA 0273
        gbc.setState(0x54e3, 0x227d, 0xed00, 0xd6ae, 0xb40b, 0x420e, 0x1, 0x1);
        gbc.writeMem(0x54e3, { 0xaa });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x227d, gbc.sp());
        EXPECT(0x54e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0274
        gbc.setState(0xc968, 0xa6c0, 0x4560, 0x1b50, 0x652b, 0xc205, 0x0, 0x0);
        gbc.writeMem(0xc968, { 0xaa });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa6c0, gbc.sp());
        EXPECT(0xc969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc968));
        // AA 0275
        gbc.setState(0x34c, 0xaf21, 0x6820, 0xee13, 0xbfe8, 0xb3cd, 0x0, 0x1);
        gbc.writeMem(0x34c, { 0xaa });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xaf21, gbc.sp());
        EXPECT(0x34d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0276
        gbc.setState(0x4cbb, 0x222f, 0xb270, 0xb91c, 0x5894, 0xf0db, 0x1, 0x0);
        gbc.writeMem(0x4cbb, { 0xaa });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x222f, gbc.sp());
        EXPECT(0x4cbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0277
        gbc.setState(0xe964, 0xc60a, 0xe7e0, 0xc2ea, 0xea33, 0xa4ab, 0x0, 0x1);
        gbc.writeMem(0xe964, { 0xaa });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc60a, gbc.sp());
        EXPECT(0xe965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe964));
        // AA 0278
        gbc.setState(0x5281, 0x6dbf, 0x2be0, 0x7aa3, 0x30ac, 0x108, 0x0, 0x1);
        gbc.writeMem(0x5281, { 0xaa });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6dbf, gbc.sp());
        EXPECT(0x5282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0279
        gbc.setState(0xef8d, 0xa2e7, 0x9390, 0xdbaf, 0xe632, 0xe6b7, 0x0, 0x0);
        gbc.writeMem(0xef8d, { 0xaa });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa2e7, gbc.sp());
        EXPECT(0xef8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xef8d));
        // AA 027A
        gbc.setState(0xa3ac, 0xeb06, 0x7ab0, 0xe804, 0xa29c, 0xeef5, 0x0, 0x0);
        gbc.writeMem(0xa3ac, { 0xaa });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xeb06, gbc.sp());
        EXPECT(0xa3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa3ac));
        // AA 027B
        gbc.setState(0xc389, 0x611d, 0xa160, 0xb879, 0x30c1, 0xcce2, 0x0, 0x1);
        gbc.writeMem(0xc389, { 0xaa });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x611d, gbc.sp());
        EXPECT(0xc38a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc389));
        // AA 027C
        gbc.setState(0xbd40, 0x4d14, 0xff20, 0x963d, 0xf602, 0x809, 0x1, 0x0);
        gbc.writeMem(0xbd40, { 0xaa });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4d14, gbc.sp());
        EXPECT(0xbd41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbd40));
        // AA 027D
        gbc.setState(0xb448, 0x473, 0xeab0, 0xd930, 0x2244, 0x8875, 0x1, 0x0);
        gbc.writeMem(0xb448, { 0xaa });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x473, gbc.sp());
        EXPECT(0xb449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb448));
        // AA 027E
        gbc.setState(0x34b9, 0xf929, 0xa7c0, 0x1580, 0xa4a5, 0xc1b8, 0x0, 0x0);
        gbc.writeMem(0x34b9, { 0xaa });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf929, gbc.sp());
        EXPECT(0x34ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 027F
        gbc.setState(0xc5fa, 0xbe23, 0xf3b0, 0xc898, 0xb4f8, 0x81b7, 0x1, 0x0);
        gbc.writeMem(0xc5fa, { 0xaa });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xbe23, gbc.sp());
        EXPECT(0xc5fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc5fa));
        // AA 0280
        gbc.setState(0x91da, 0x9b, 0x3b20, 0x39ff, 0xfd5d, 0xbdc6, 0x0, 0x0);
        gbc.writeMem(0x91da, { 0xaa });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9b, gbc.sp());
        EXPECT(0x91db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x91da));
        // AA 0281
        gbc.setState(0xef82, 0x4974, 0x600, 0xa50, 0x8399, 0x4dec, 0x1, 0x1);
        gbc.writeMem(0xef82, { 0xaa });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4974, gbc.sp());
        EXPECT(0xef83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xef82));
        // AA 0282
        gbc.setState(0xbaea, 0x1353, 0x9150, 0x983b, 0x98f4, 0x896a, 0x1, 0x0);
        gbc.writeMem(0xbaea, { 0xaa });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1353, gbc.sp());
        EXPECT(0xbaeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbaea));
        // AA 0284
        gbc.setState(0xad00, 0xdac, 0xb900, 0x3f6, 0x3782, 0x7501, 0x0, 0x1);
        gbc.writeMem(0xad00, { 0xaa });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xdac, gbc.sp());
        EXPECT(0xad01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xad00));
        // AA 0285
        gbc.setState(0x716d, 0x7592, 0x9580, 0x9671, 0xdb1e, 0x9592, 0x1, 0x1);
        gbc.writeMem(0x716d, { 0xaa });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7592, gbc.sp());
        EXPECT(0x716e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0286
        gbc.setState(0xbd07, 0xfff2, 0x97d0, 0xc458, 0xfa3a, 0xd62f, 0x0, 0x0);
        gbc.writeMem(0xbd07, { 0xaa });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfff2, gbc.sp());
        EXPECT(0xbd08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbd07));
        // AA 0287
        gbc.setState(0xa5ef, 0x240d, 0x4430, 0x823d, 0x21f3, 0x55e9, 0x0, 0x0);
        gbc.writeMem(0xa5ef, { 0xaa });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x240d, gbc.sp());
        EXPECT(0xa5f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa5ef));
        // AA 0288
        gbc.setState(0x9f5d, 0x5cf, 0x4030, 0x51a2, 0xcb4, 0xf5fa, 0x1, 0x1);
        gbc.writeMem(0x9f5d, { 0xaa });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5cf, gbc.sp());
        EXPECT(0x9f5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9f5d));
        // AA 0289
        gbc.setState(0x274c, 0x1b73, 0xc640, 0x64fc, 0xc7df, 0xb2ec, 0x1, 0x1);
        gbc.writeMem(0x274c, { 0xaa });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1b73, gbc.sp());
        EXPECT(0x274d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 028A
        gbc.setState(0x3745, 0x3503, 0x8000, 0xb881, 0x58e0, 0xf4e6, 0x1, 0x1);
        gbc.writeMem(0x3745, { 0xaa });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3503, gbc.sp());
        EXPECT(0x3746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 028C
        gbc.setState(0x3370, 0xf0e9, 0x680, 0xf906, 0xebb9, 0x2645, 0x0, 0x1);
        gbc.writeMem(0x3370, { 0xaa });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf0e9, gbc.sp());
        EXPECT(0x3371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 028D
        gbc.setState(0xd39c, 0x97c1, 0xa6b0, 0xb853, 0x37ca, 0xda07, 0x0, 0x1);
        gbc.writeMem(0xd39c, { 0xaa });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x97c1, gbc.sp());
        EXPECT(0xd39d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd39c));
        // AA 028E
        gbc.setState(0xe8c3, 0x59be, 0x6390, 0x88e3, 0xdd20, 0x80cb, 0x1, 0x1);
        gbc.writeMem(0xe8c3, { 0xaa });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x59be, gbc.sp());
        EXPECT(0xe8c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe8c3));
        // AA 028F
        gbc.setState(0xd571, 0x3d5e, 0xacf0, 0x7f78, 0x2642, 0x36e3, 0x0, 0x1);
        gbc.writeMem(0xd571, { 0xaa });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3d5e, gbc.sp());
        EXPECT(0xd572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd571));
        // AA 0290
        gbc.setState(0xe7e2, 0x7ae3, 0xee70, 0x4f4, 0x5b3c, 0x502a, 0x0, 0x0);
        gbc.writeMem(0xe7e2, { 0xaa });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7ae3, gbc.sp());
        EXPECT(0xe7e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe7e2));
        // AA 0291
        gbc.setState(0x85e8, 0xfdb, 0xe500, 0x3beb, 0x64a3, 0x7598, 0x0, 0x0);
        gbc.writeMem(0x85e8, { 0xaa });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfdb, gbc.sp());
        EXPECT(0x85e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x85e8));
        // AA 0292
        gbc.setState(0x52cd, 0xd2ec, 0x5f30, 0xdbce, 0xf927, 0xfc3, 0x1, 0x0);
        gbc.writeMem(0x52cd, { 0xaa });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd2ec, gbc.sp());
        EXPECT(0x52ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0293
        gbc.setState(0x9c53, 0xe8cb, 0xfc10, 0x5941, 0xf00, 0x1c8b, 0x0, 0x1);
        gbc.writeMem(0x9c53, { 0xaa });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe8cb, gbc.sp());
        EXPECT(0x9c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9c53));
        // AA 0294
        gbc.setState(0x6fa2, 0xf586, 0x4b90, 0x8fcb, 0xfaf2, 0xf55a, 0x1, 0x0);
        gbc.writeMem(0x6fa2, { 0xaa });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf586, gbc.sp());
        EXPECT(0x6fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0295
        gbc.setState(0xe216, 0xd6c5, 0x3180, 0x3494, 0xb95d, 0x265e, 0x1, 0x1);
        gbc.writeMem(0xe216, { 0xaa });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd6c5, gbc.sp());
        EXPECT(0xe217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe216));
        // AA 0296
        gbc.setState(0xa62b, 0x3801, 0x80c0, 0x5ee1, 0x841e, 0x8812, 0x1, 0x1);
        gbc.writeMem(0xa62b, { 0xaa });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3801, gbc.sp());
        EXPECT(0xa62c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa62b));
        // AA 0297
        gbc.setState(0x7bab, 0x76db, 0x2880, 0xc4d, 0x6531, 0xbd33, 0x1, 0x1);
        gbc.writeMem(0x7bab, { 0xaa });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x76db, gbc.sp());
        EXPECT(0x7bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0298
        gbc.setState(0xa0f7, 0xe9d6, 0x7f60, 0x7877, 0x354f, 0xf458, 0x1, 0x0);
        gbc.writeMem(0xa0f7, { 0xaa });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe9d6, gbc.sp());
        EXPECT(0xa0f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa0f7));
        // AA 0299
        gbc.setState(0x3f6e, 0x402e, 0x4660, 0xbedf, 0xb30b, 0x16b1, 0x0, 0x1);
        gbc.writeMem(0x3f6e, { 0xaa });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x402e, gbc.sp());
        EXPECT(0x3f6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 029A
        gbc.setState(0xa6fb, 0x9da5, 0xb770, 0x92f2, 0x6bca, 0x808e, 0x0, 0x1);
        gbc.writeMem(0xa6fb, { 0xaa });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9da5, gbc.sp());
        EXPECT(0xa6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa6fb));
        // AA 029B
        gbc.setState(0x9d, 0xbf96, 0xbdb0, 0xb624, 0x980d, 0xec1f, 0x0, 0x1);
        gbc.writeMem(0x9d, { 0xaa });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbf96, gbc.sp());
        EXPECT(0x9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 029C
        gbc.setState(0x8c50, 0xcd55, 0x40e0, 0x189c, 0xa95a, 0x2c73, 0x1, 0x1);
        gbc.writeMem(0x8c50, { 0xaa });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xcd55, gbc.sp());
        EXPECT(0x8c51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8c50));
        // AA 029D
        gbc.setState(0xdf27, 0x8047, 0x4430, 0x2ec1, 0x85da, 0x312a, 0x0, 0x1);
        gbc.writeMem(0xdf27, { 0xaa });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8047, gbc.sp());
        EXPECT(0xdf28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xdf27));
        // AA 029E
        gbc.setState(0x1447, 0x9e2e, 0xecb0, 0xe7ee, 0x2f5a, 0xe2fd, 0x1, 0x1);
        gbc.writeMem(0x1447, { 0xaa });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9e2e, gbc.sp());
        EXPECT(0x1448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 029F
        gbc.setState(0xbd0b, 0x459b, 0xe3e0, 0x914d, 0xb636, 0xc, 0x0, 0x0);
        gbc.writeMem(0xbd0b, { 0xaa });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x459b, gbc.sp());
        EXPECT(0xbd0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbd0b));
        // AA 02A0
        gbc.setState(0xe995, 0xb7da, 0x7cf0, 0xed26, 0xc5a2, 0xd0e1, 0x0, 0x1);
        gbc.writeMem(0xe995, { 0xaa });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb7da, gbc.sp());
        EXPECT(0xe996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe995));
        // AA 02A1
        gbc.setState(0x37e5, 0xbac6, 0x47c0, 0x43cc, 0x2f32, 0xdd2, 0x0, 0x0);
        gbc.writeMem(0x37e5, { 0xaa });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbac6, gbc.sp());
        EXPECT(0x37e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02A2
        gbc.setState(0x54f6, 0xe62e, 0x7ec0, 0x3cd, 0x1eee, 0x6172, 0x0, 0x1);
        gbc.writeMem(0x54f6, { 0xaa });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe62e, gbc.sp());
        EXPECT(0x54f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02A3
        gbc.setState(0x1d5e, 0xaed, 0x58a0, 0x95ff, 0xb4b6, 0xd173, 0x0, 0x1);
        gbc.writeMem(0x1d5e, { 0xaa });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xaed, gbc.sp());
        EXPECT(0x1d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02A4
        gbc.setState(0x59b2, 0x74b, 0x7c40, 0x58c3, 0xe0d, 0x5b8d, 0x1, 0x1);
        gbc.writeMem(0x59b2, { 0xaa });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x74b, gbc.sp());
        EXPECT(0x59b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02A5
        gbc.setState(0x2a47, 0x397d, 0x61f0, 0xbb2d, 0xadc6, 0xa796, 0x1, 0x0);
        gbc.writeMem(0x2a47, { 0xaa });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x397d, gbc.sp());
        EXPECT(0x2a48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02A6
        gbc.setState(0x4864, 0xadf8, 0x7670, 0x1b71, 0xd04c, 0x5339, 0x0, 0x0);
        gbc.writeMem(0x4864, { 0xaa });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xadf8, gbc.sp());
        EXPECT(0x4865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02A7
        gbc.setState(0x9622, 0x6a3b, 0xc2f0, 0xc2b5, 0x7837, 0xd83e, 0x1, 0x0);
        gbc.writeMem(0x9622, { 0xaa });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6a3b, gbc.sp());
        EXPECT(0x9623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9622));
        // AA 02A8
        gbc.setState(0x4e10, 0x68af, 0x7790, 0xe458, 0xd059, 0x2928, 0x0, 0x1);
        gbc.writeMem(0x4e10, { 0xaa });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x68af, gbc.sp());
        EXPECT(0x4e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02A9
        gbc.setState(0xda14, 0x3979, 0x59c0, 0xb76a, 0x7f8e, 0x4997, 0x0, 0x1);
        gbc.writeMem(0xda14, { 0xaa });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3979, gbc.sp());
        EXPECT(0xda15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xda14));
        // AA 02AA
        gbc.setState(0x70bc, 0x7a63, 0xecb0, 0x8366, 0x39e, 0x5691, 0x0, 0x0);
        gbc.writeMem(0x70bc, { 0xaa });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7a63, gbc.sp());
        EXPECT(0x70bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02AB
        gbc.setState(0xa216, 0xf73c, 0x89b0, 0x76a3, 0x1cfb, 0x9e13, 0x0, 0x1);
        gbc.writeMem(0xa216, { 0xaa });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf73c, gbc.sp());
        EXPECT(0xa217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa216));
        // AA 02AC
        gbc.setState(0x526a, 0xafc9, 0xd4e0, 0x11ad, 0x6c5a, 0xbf1f, 0x1, 0x1);
        gbc.writeMem(0x526a, { 0xaa });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xafc9, gbc.sp());
        EXPECT(0x526b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02AD
        gbc.setState(0x8973, 0xc43a, 0xdda0, 0x5bb3, 0xd6e9, 0xe389, 0x0, 0x0);
        gbc.writeMem(0x8973, { 0xaa });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc43a, gbc.sp());
        EXPECT(0x8974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8973));
        // AA 02AE
        gbc.setState(0x7d46, 0x5f48, 0x7f20, 0xd12e, 0xb8d, 0x35b4, 0x1, 0x1);
        gbc.writeMem(0x7d46, { 0xaa });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5f48, gbc.sp());
        EXPECT(0x7d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02AF
        gbc.setState(0x5b23, 0x2d7a, 0x37b0, 0x2910, 0x30ff, 0xe04f, 0x0, 0x0);
        gbc.writeMem(0x5b23, { 0xaa });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2d7a, gbc.sp());
        EXPECT(0x5b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02B0
        gbc.setState(0x9700, 0x4b86, 0x37a0, 0x6bbb, 0x67fc, 0xd6fe, 0x0, 0x1);
        gbc.writeMem(0x9700, { 0xaa });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4b86, gbc.sp());
        EXPECT(0x9701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9700));
        // AA 02B1
        gbc.setState(0x5607, 0xa4a8, 0x5dd0, 0xe8fe, 0x2d36, 0xf8d2, 0x1, 0x1);
        gbc.writeMem(0x5607, { 0xaa });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa4a8, gbc.sp());
        EXPECT(0x5608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02B2
        gbc.setState(0xdbda, 0x2d69, 0xfae0, 0xcd89, 0xf64b, 0x8070, 0x1, 0x0);
        gbc.writeMem(0xdbda, { 0xaa });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2d69, gbc.sp());
        EXPECT(0xdbdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xdbda));
        // AA 02B3
        gbc.setState(0x881e, 0x153e, 0x7a90, 0xb320, 0xc458, 0xaa8f, 0x1, 0x1);
        gbc.writeMem(0x881e, { 0xaa });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x153e, gbc.sp());
        EXPECT(0x881f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x881e));
        // AA 02B5
        gbc.setState(0x3afb, 0x106d, 0xe8a0, 0x2ad3, 0xe6dc, 0xa2eb, 0x0, 0x1);
        gbc.writeMem(0x3afb, { 0xaa });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x106d, gbc.sp());
        EXPECT(0x3afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02B7
        gbc.setState(0x3340, 0x1aac, 0xaa90, 0x391, 0x3f74, 0xcdad, 0x0, 0x1);
        gbc.writeMem(0x3340, { 0xaa });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1aac, gbc.sp());
        EXPECT(0x3341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02B8
        gbc.setState(0x179d, 0x450d, 0x3f10, 0x6a5a, 0xafcc, 0xec1b, 0x0, 0x1);
        gbc.writeMem(0x179d, { 0xaa });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x450d, gbc.sp());
        EXPECT(0x179e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02B9
        gbc.setState(0x8bda, 0xa865, 0xc40, 0x8ddc, 0xd04d, 0x63a6, 0x0, 0x0);
        gbc.writeMem(0x8bda, { 0xaa });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa865, gbc.sp());
        EXPECT(0x8bdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8bda));
        // AA 02BA
        gbc.setState(0x3044, 0x724b, 0x26b0, 0x8e1b, 0x4a99, 0xc9fa, 0x1, 0x1);
        gbc.writeMem(0x3044, { 0xaa });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x724b, gbc.sp());
        EXPECT(0x3045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02BB
        gbc.setState(0xd9e2, 0xe911, 0xc190, 0xfbd8, 0xa847, 0xd3fb, 0x1, 0x1);
        gbc.writeMem(0xd9e2, { 0xaa });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe911, gbc.sp());
        EXPECT(0xd9e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd9e2));
        // AA 02BC
        gbc.setState(0x4733, 0xb1e6, 0x23c0, 0xc474, 0xb5ef, 0xb5f3, 0x0, 0x0);
        gbc.writeMem(0x4733, { 0xaa });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb1e6, gbc.sp());
        EXPECT(0x4734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02BD
        gbc.setState(0xaa61, 0x13f4, 0x5d20, 0x686d, 0xe925, 0xdf8e, 0x1, 0x1);
        gbc.writeMem(0xaa61, { 0xaa });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x13f4, gbc.sp());
        EXPECT(0xaa62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xaa61));
        // AA 02BE
        gbc.setState(0x2b08, 0xee69, 0xe210, 0x958e, 0x3278, 0x55f8, 0x0, 0x0);
        gbc.writeMem(0x2b08, { 0xaa });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xee69, gbc.sp());
        EXPECT(0x2b09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02BF
        gbc.setState(0xd3ea, 0xca7c, 0x60a0, 0x90cd, 0xe3f6, 0xe2bc, 0x0, 0x0);
        gbc.writeMem(0xd3ea, { 0xaa });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xca7c, gbc.sp());
        EXPECT(0xd3eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd3ea));
        // AA 02C0
        gbc.setState(0xc6c0, 0x3b36, 0x92f0, 0xbb5, 0x6fa7, 0x6e61, 0x1, 0x1);
        gbc.writeMem(0xc6c0, { 0xaa });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3b36, gbc.sp());
        EXPECT(0xc6c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc6c0));
        // AA 02C1
        gbc.setState(0x2c47, 0xcac6, 0xd2d0, 0x2c0a, 0xaffc, 0x4f04, 0x1, 0x1);
        gbc.writeMem(0x2c47, { 0xaa });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcac6, gbc.sp());
        EXPECT(0x2c48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02C2
        gbc.setState(0xd99e, 0x30c7, 0x4e60, 0xe476, 0xdfb1, 0xcf2, 0x1, 0x0);
        gbc.writeMem(0xd99e, { 0xaa });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x30c7, gbc.sp());
        EXPECT(0xd99f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd99e));
        // AA 02C3
        gbc.setState(0x4da5, 0x6907, 0xd100, 0x64a5, 0xdab5, 0xc44b, 0x1, 0x0);
        gbc.writeMem(0x4da5, { 0xaa });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6907, gbc.sp());
        EXPECT(0x4da6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02C4
        gbc.setState(0x1bc3, 0x7b9, 0x1740, 0x85e6, 0xb8bf, 0x4fec, 0x1, 0x1);
        gbc.writeMem(0x1bc3, { 0xaa });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7b9, gbc.sp());
        EXPECT(0x1bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02C5
        gbc.setState(0x302f, 0x9bb, 0x2070, 0xaeb8, 0xae8b, 0x2b8, 0x1, 0x0);
        gbc.writeMem(0x302f, { 0xaa });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9bb, gbc.sp());
        EXPECT(0x3030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02C6
        gbc.setState(0xda1b, 0x5f74, 0xf3a0, 0xfb64, 0xbf00, 0x1239, 0x0, 0x0);
        gbc.writeMem(0xda1b, { 0xaa });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5f74, gbc.sp());
        EXPECT(0xda1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xda1b));
        // AA 02C7
        gbc.setState(0x7fb2, 0xedec, 0xc1c0, 0x3b3b, 0xda6b, 0xa6a3, 0x1, 0x1);
        gbc.writeMem(0x7fb2, { 0xaa });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xedec, gbc.sp());
        EXPECT(0x7fb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02C8
        gbc.setState(0xbd47, 0x7c0a, 0x4000, 0x2bd4, 0x4a64, 0xa521, 0x1, 0x1);
        gbc.writeMem(0xbd47, { 0xaa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7c0a, gbc.sp());
        EXPECT(0xbd48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbd47));
        // AA 02C9
        gbc.setState(0x1104, 0x8fba, 0x9bb0, 0x2033, 0xb6f, 0xc5b8, 0x1, 0x0);
        gbc.writeMem(0x1104, { 0xaa });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8fba, gbc.sp());
        EXPECT(0x1105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02CA
        gbc.setState(0x54ec, 0x4465, 0xca40, 0x1eda, 0xff68, 0x5e82, 0x0, 0x1);
        gbc.writeMem(0x54ec, { 0xaa });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4465, gbc.sp());
        EXPECT(0x54ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02CB
        gbc.setState(0x1765, 0x87f3, 0xff90, 0xf6dd, 0xf5ee, 0xe5ab, 0x0, 0x1);
        gbc.writeMem(0x1765, { 0xaa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x87f3, gbc.sp());
        EXPECT(0x1766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02CC
        gbc.setState(0xabb5, 0x7138, 0x660, 0x911a, 0x1c81, 0x7eeb, 0x0, 0x0);
        gbc.writeMem(0xabb5, { 0xaa });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7138, gbc.sp());
        EXPECT(0xabb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xabb5));
        // AA 02CD
        gbc.setState(0xac29, 0x3dfe, 0x72c0, 0xe303, 0x77e5, 0x8170, 0x0, 0x1);
        gbc.writeMem(0xac29, { 0xaa });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3dfe, gbc.sp());
        EXPECT(0xac2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xac29));
        // AA 02CE
        gbc.setState(0x1724, 0x58ba, 0x1d0, 0x8e91, 0x641a, 0x9a4, 0x0, 0x0);
        gbc.writeMem(0x1724, { 0xaa });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x58ba, gbc.sp());
        EXPECT(0x1725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02CF
        gbc.setState(0xd881, 0xdc, 0xa420, 0xb836, 0xc8c8, 0x196, 0x1, 0x1);
        gbc.writeMem(0xd881, { 0xaa });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xdc, gbc.sp());
        EXPECT(0xd882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd881));
        // AA 02D0
        gbc.setState(0xe3ba, 0x6a00, 0x7490, 0xf893, 0x8104, 0x5cc4, 0x1, 0x0);
        gbc.writeMem(0xe3ba, { 0xaa });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6a00, gbc.sp());
        EXPECT(0xe3bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe3ba));
        // AA 02D1
        gbc.setState(0xc3c8, 0x4502, 0x62a0, 0x2bbe, 0xfabf, 0xd0e2, 0x0, 0x0);
        gbc.writeMem(0xc3c8, { 0xaa });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4502, gbc.sp());
        EXPECT(0xc3c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc3c8));
        // AA 02D2
        gbc.setState(0xd4ef, 0x5888, 0x6ae0, 0xff13, 0x2cb6, 0x9052, 0x0, 0x1);
        gbc.writeMem(0xd4ef, { 0xaa });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5888, gbc.sp());
        EXPECT(0xd4f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd4ef));
        // AA 02D3
        gbc.setState(0x68da, 0xd99a, 0x4330, 0x56c6, 0x82e6, 0x5e2f, 0x0, 0x1);
        gbc.writeMem(0x68da, { 0xaa });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd99a, gbc.sp());
        EXPECT(0x68db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02D4
        gbc.setState(0xca33, 0xdfbc, 0x8b90, 0x9681, 0xf4c, 0x7f7b, 0x1, 0x1);
        gbc.writeMem(0xca33, { 0xaa });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdfbc, gbc.sp());
        EXPECT(0xca34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xca33));
        // AA 02D5
        gbc.setState(0x6de4, 0x2b17, 0xff20, 0xaac, 0xf04c, 0xdc01, 0x0, 0x0);
        gbc.writeMem(0x6de4, { 0xaa });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2b17, gbc.sp());
        EXPECT(0x6de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02D6
        gbc.setState(0xad49, 0xfd5e, 0x89a0, 0x81be, 0xc08d, 0x6bba, 0x0, 0x1);
        gbc.writeMem(0xad49, { 0xaa });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfd5e, gbc.sp());
        EXPECT(0xad4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xad49));
        // AA 02D7
        gbc.setState(0x2df, 0x85f3, 0x6890, 0x6fc7, 0xa372, 0x7bb8, 0x1, 0x1);
        gbc.writeMem(0x2df, { 0xaa });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x85f3, gbc.sp());
        EXPECT(0x2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02D8
        gbc.setState(0x1230, 0xf73b, 0x8690, 0xc7c8, 0x8b58, 0xce3a, 0x1, 0x0);
        gbc.writeMem(0x1230, { 0xaa });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf73b, gbc.sp());
        EXPECT(0x1231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02D9
        gbc.setState(0x37c0, 0x756d, 0x6e00, 0x3c35, 0x379c, 0xf29d, 0x0, 0x0);
        gbc.writeMem(0x37c0, { 0xaa });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x756d, gbc.sp());
        EXPECT(0x37c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02DA
        gbc.setState(0x459a, 0x85dd, 0xa40, 0x3b29, 0x58e1, 0xdd72, 0x0, 0x0);
        gbc.writeMem(0x459a, { 0xaa });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x85dd, gbc.sp());
        EXPECT(0x459b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02DB
        gbc.setState(0xc25f, 0x47e9, 0xd820, 0xca64, 0x25e3, 0x7595, 0x0, 0x1);
        gbc.writeMem(0xc25f, { 0xaa });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x47e9, gbc.sp());
        EXPECT(0xc260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc25f));
        // AA 02DD
        gbc.setState(0x9835, 0xed79, 0xa110, 0x1ad0, 0xbb89, 0xf2b0, 0x0, 0x0);
        gbc.writeMem(0x9835, { 0xaa });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xed79, gbc.sp());
        EXPECT(0x9836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9835));
        // AA 02DE
        gbc.setState(0x4e48, 0x7e35, 0x4560, 0xc8e7, 0x7aae, 0xb1f8, 0x1, 0x0);
        gbc.writeMem(0x4e48, { 0xaa });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7e35, gbc.sp());
        EXPECT(0x4e49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02DF
        gbc.setState(0xa616, 0x85c5, 0xf3e0, 0xad08, 0x7412, 0xbcef, 0x0, 0x0);
        gbc.writeMem(0xa616, { 0xaa });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x85c5, gbc.sp());
        EXPECT(0xa617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa616));
        // AA 02E0
        gbc.setState(0xbf77, 0x3361, 0x8050, 0xf703, 0xe4a, 0xf271, 0x1, 0x0);
        gbc.writeMem(0xbf77, { 0xaa });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3361, gbc.sp());
        EXPECT(0xbf78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbf77));
        // AA 02E1
        gbc.setState(0xb758, 0x5b3, 0x4a40, 0x306c, 0xaad6, 0xe9d4, 0x0, 0x1);
        gbc.writeMem(0xb758, { 0xaa });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5b3, gbc.sp());
        EXPECT(0xb759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb758));
        // AA 02E2
        gbc.setState(0xe884, 0x9449, 0xbd80, 0x364c, 0xfa51, 0xb999, 0x1, 0x1);
        gbc.writeMem(0xe884, { 0xaa });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9449, gbc.sp());
        EXPECT(0xe885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe884));
        // AA 02E3
        gbc.setState(0x53c4, 0x1619, 0xe4e0, 0x3fa6, 0xc15c, 0xa809, 0x1, 0x0);
        gbc.writeMem(0x53c4, { 0xaa });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1619, gbc.sp());
        EXPECT(0x53c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02E5
        gbc.setState(0x87a6, 0x9697, 0xcb20, 0xd505, 0xf735, 0xc020, 0x0, 0x0);
        gbc.writeMem(0x87a6, { 0xaa });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9697, gbc.sp());
        EXPECT(0x87a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x87a6));
        // AA 02E6
        gbc.setState(0x6690, 0x8294, 0xed00, 0xdbdf, 0xaf72, 0xec15, 0x1, 0x0);
        gbc.writeMem(0x6690, { 0xaa });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8294, gbc.sp());
        EXPECT(0x6691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02E7
        gbc.setState(0x17c, 0xdf41, 0xd70, 0x19a9, 0xc92b, 0xc0d4, 0x0, 0x0);
        gbc.writeMem(0x17c, { 0xaa });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdf41, gbc.sp());
        EXPECT(0x17d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02E8
        gbc.setState(0x6081, 0x1668, 0x610, 0x513e, 0x48e8, 0xda10, 0x1, 0x1);
        gbc.writeMem(0x6081, { 0xaa });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1668, gbc.sp());
        EXPECT(0x6082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02E9
        gbc.setState(0x259b, 0x6081, 0x6210, 0xc703, 0x3168, 0x2e82, 0x0, 0x1);
        gbc.writeMem(0x259b, { 0xaa });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6081, gbc.sp());
        EXPECT(0x259c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02EA
        gbc.setState(0x811d, 0xd918, 0x6a50, 0xeccc, 0xd5a5, 0x53d, 0x1, 0x0);
        gbc.writeMem(0x811d, { 0xaa });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd918, gbc.sp());
        EXPECT(0x811e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x811d));
        // AA 02EB
        gbc.setState(0xdc9, 0x660f, 0x56d0, 0x8bf4, 0xf14e, 0x133b, 0x1, 0x1);
        gbc.writeMem(0xdc9, { 0xaa });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x660f, gbc.sp());
        EXPECT(0xdca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02EC
        gbc.setState(0x8bc3, 0xae64, 0x2cf0, 0x4e7f, 0x285c, 0x22bb, 0x1, 0x1);
        gbc.writeMem(0x8bc3, { 0xaa });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xae64, gbc.sp());
        EXPECT(0x8bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8bc3));
        // AA 02ED
        gbc.setState(0x52e0, 0x7f89, 0xb580, 0x531b, 0xec42, 0x6bb6, 0x1, 0x0);
        gbc.writeMem(0x52e0, { 0xaa });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7f89, gbc.sp());
        EXPECT(0x52e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02EE
        gbc.setState(0x9ac0, 0x9f95, 0x7e70, 0x8a01, 0x7d41, 0x673f, 0x0, 0x0);
        gbc.writeMem(0x9ac0, { 0xaa });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9f95, gbc.sp());
        EXPECT(0x9ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9ac0));
        // AA 02EF
        gbc.setState(0xbde7, 0x63f0, 0x50d0, 0x2367, 0xc072, 0x611, 0x1, 0x1);
        gbc.writeMem(0xbde7, { 0xaa });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x63f0, gbc.sp());
        EXPECT(0xbde8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbde7));
        // AA 02F0
        gbc.setState(0x3ffb, 0xe7bc, 0x6970, 0x1eb7, 0x242a, 0x25de, 0x1, 0x0);
        gbc.writeMem(0x3ffb, { 0xaa });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe7bc, gbc.sp());
        EXPECT(0x3ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02F1
        gbc.setState(0x986b, 0x94e3, 0xcfb0, 0x3160, 0x60f4, 0x9bc1, 0x1, 0x1);
        gbc.writeMem(0x986b, { 0xaa });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x94e3, gbc.sp());
        EXPECT(0x986c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x986b));
        // AA 02F2
        gbc.setState(0x3046, 0xfec7, 0x8e00, 0x9a5b, 0xf9de, 0x3fac, 0x0, 0x1);
        gbc.writeMem(0x3046, { 0xaa });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfec7, gbc.sp());
        EXPECT(0x3047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02F3
        gbc.setState(0x30c9, 0x1934, 0xb2d0, 0xab0a, 0xd041, 0x68a, 0x0, 0x1);
        gbc.writeMem(0x30c9, { 0xaa });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1934, gbc.sp());
        EXPECT(0x30ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02F4
        gbc.setState(0x90c2, 0x4ca4, 0x43f0, 0x6c73, 0xa45e, 0x33a6, 0x1, 0x1);
        gbc.writeMem(0x90c2, { 0xaa });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4ca4, gbc.sp());
        EXPECT(0x90c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x90c2));
        // AA 02F6
        gbc.setState(0xc432, 0x4ce7, 0x1b30, 0x52a7, 0x6b0e, 0x2186, 0x0, 0x0);
        gbc.writeMem(0xc432, { 0xaa });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4ce7, gbc.sp());
        EXPECT(0xc433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc432));
        // AA 02F7
        gbc.setState(0x39a, 0xcdc1, 0xeb90, 0x1235, 0x59e7, 0xd5a3, 0x1, 0x0);
        gbc.writeMem(0x39a, { 0xaa });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcdc1, gbc.sp());
        EXPECT(0x39b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02F8
        gbc.setState(0x15f8, 0x2a78, 0x530, 0x54fc, 0x310d, 0x6515, 0x0, 0x0);
        gbc.writeMem(0x15f8, { 0xaa });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2a78, gbc.sp());
        EXPECT(0x15f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02F9
        gbc.setState(0xa7c3, 0xed3c, 0x4d70, 0xb73d, 0x341c, 0x60ea, 0x1, 0x1);
        gbc.writeMem(0xa7c3, { 0xaa });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xed3c, gbc.sp());
        EXPECT(0xa7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa7c3));
        // AA 02FA
        gbc.setState(0xd861, 0xf354, 0x56d0, 0xfd6b, 0x3d87, 0x8c58, 0x0, 0x0);
        gbc.writeMem(0xd861, { 0xaa });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf354, gbc.sp());
        EXPECT(0xd862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd861));
        // AA 02FB
        gbc.setState(0x81ab, 0x1b41, 0xcc00, 0xfcf4, 0xf02d, 0x28b5, 0x0, 0x1);
        gbc.writeMem(0x81ab, { 0xaa });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1b41, gbc.sp());
        EXPECT(0x81ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x81ab));
        // AA 02FC
        gbc.setState(0xa709, 0x2e66, 0xd070, 0x4a6, 0x4a0, 0xbe63, 0x0, 0x1);
        gbc.writeMem(0xa709, { 0xaa });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2e66, gbc.sp());
        EXPECT(0xa70a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa709));
        // AA 02FD
        gbc.setState(0xcb9d, 0x571f, 0x740, 0x48eb, 0xa2eb, 0x6165, 0x1, 0x1);
        gbc.writeMem(0xcb9d, { 0xaa });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x571f, gbc.sp());
        EXPECT(0xcb9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xcb9d));
        // AA 02FE
        gbc.setState(0x121, 0xcb54, 0x5390, 0xd554, 0x6f6d, 0x94c9, 0x1, 0x1);
        gbc.writeMem(0x121, { 0xaa });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xcb54, gbc.sp());
        EXPECT(0x122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 02FF
        gbc.setState(0x101b, 0xc60a, 0x8d0, 0x6a75, 0x1f8d, 0x317, 0x0, 0x0);
        gbc.writeMem(0x101b, { 0xaa });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc60a, gbc.sp());
        EXPECT(0x101c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0300
        gbc.setState(0x6318, 0x4381, 0x12b0, 0x8c1b, 0x73b4, 0xebb, 0x0, 0x0);
        gbc.writeMem(0x6318, { 0xaa });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4381, gbc.sp());
        EXPECT(0x6319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0301
        gbc.setState(0xa702, 0xab45, 0x4440, 0x5bfb, 0x9101, 0x1b4a, 0x1, 0x0);
        gbc.writeMem(0xa702, { 0xaa });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xab45, gbc.sp());
        EXPECT(0xa703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa702));
        // AA 0302
        gbc.setState(0x2a6, 0xc1ef, 0x4450, 0xdeaf, 0xa4d, 0xafac, 0x1, 0x1);
        gbc.writeMem(0x2a6, { 0xaa });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc1ef, gbc.sp());
        EXPECT(0x2a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0303
        gbc.setState(0x71ef, 0x6b16, 0xc9a0, 0xb152, 0x494b, 0x2376, 0x0, 0x0);
        gbc.writeMem(0x71ef, { 0xaa });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6b16, gbc.sp());
        EXPECT(0x71f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0304
        gbc.setState(0xed1f, 0x7f02, 0xafd0, 0x7668, 0x4cac, 0x2d9d, 0x0, 0x0);
        gbc.writeMem(0xed1f, { 0xaa });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7f02, gbc.sp());
        EXPECT(0xed20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xed1f));
        // AA 0305
        gbc.setState(0xcb0d, 0x27f0, 0xc540, 0x4b4d, 0x82d9, 0x8bd1, 0x0, 0x1);
        gbc.writeMem(0xcb0d, { 0xaa });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x27f0, gbc.sp());
        EXPECT(0xcb0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xcb0d));
        // AA 0306
        gbc.setState(0xb366, 0xaed9, 0xfb70, 0xe7d0, 0xdb24, 0x3b5f, 0x0, 0x0);
        gbc.writeMem(0xb366, { 0xaa });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xaed9, gbc.sp());
        EXPECT(0xb367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb366));
        // AA 0307
        gbc.setState(0x431c, 0x27e6, 0xe10, 0xd1f9, 0x8eb4, 0xee1, 0x0, 0x0);
        gbc.writeMem(0x431c, { 0xaa });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x27e6, gbc.sp());
        EXPECT(0x431d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0308
        gbc.setState(0x4bbe, 0x8a13, 0x5f40, 0x11d9, 0xc110, 0xc9c4, 0x1, 0x0);
        gbc.writeMem(0x4bbe, { 0xaa });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8a13, gbc.sp());
        EXPECT(0x4bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0309
        gbc.setState(0xbb07, 0x6a6e, 0xb720, 0xbbb3, 0x2fb5, 0x8c61, 0x0, 0x0);
        gbc.writeMem(0xbb07, { 0xaa });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6a6e, gbc.sp());
        EXPECT(0xbb08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbb07));
        // AA 030A
        gbc.setState(0x3d24, 0x2711, 0xa080, 0x75d9, 0xd1e9, 0xdc62, 0x1, 0x0);
        gbc.writeMem(0x3d24, { 0xaa });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2711, gbc.sp());
        EXPECT(0x3d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 030B
        gbc.setState(0x14e1, 0xc32c, 0xd290, 0x4f04, 0xb423, 0x79a7, 0x1, 0x0);
        gbc.writeMem(0x14e1, { 0xaa });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc32c, gbc.sp());
        EXPECT(0x14e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 030C
        gbc.setState(0x2fda, 0xf9e4, 0xe9d0, 0xa9a0, 0x97d7, 0x74bf, 0x1, 0x0);
        gbc.writeMem(0x2fda, { 0xaa });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf9e4, gbc.sp());
        EXPECT(0x2fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 030D
        gbc.setState(0x8b1b, 0x329f, 0x2c00, 0x95ef, 0x9a42, 0x7e13, 0x0, 0x1);
        gbc.writeMem(0x8b1b, { 0xaa });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x329f, gbc.sp());
        EXPECT(0x8b1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8b1b));
        // AA 030E
        gbc.setState(0x166e, 0x1b1e, 0x3860, 0x9bf2, 0xdbf6, 0xea22, 0x1, 0x0);
        gbc.writeMem(0x166e, { 0xaa });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1b1e, gbc.sp());
        EXPECT(0x166f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 030F
        gbc.setState(0x22, 0x6a8, 0x5200, 0xed4c, 0xd977, 0x5f40, 0x0, 0x0);
        gbc.writeMem(0x22, { 0xaa });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6a8, gbc.sp());
        EXPECT(0x23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0310
        gbc.setState(0xbd81, 0xde6b, 0xa0c0, 0x9e75, 0x6532, 0x969d, 0x0, 0x1);
        gbc.writeMem(0xbd81, { 0xaa });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xde6b, gbc.sp());
        EXPECT(0xbd82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbd81));
        // AA 0311
        gbc.setState(0xd1d0, 0x6724, 0x2d40, 0x9147, 0xcb08, 0x218c, 0x1, 0x1);
        gbc.writeMem(0xd1d0, { 0xaa });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6724, gbc.sp());
        EXPECT(0xd1d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd1d0));
        // AA 0312
        gbc.setState(0xdcfa, 0x4e6f, 0x3430, 0xe5e9, 0xbfa6, 0xe4d9, 0x0, 0x0);
        gbc.writeMem(0xdcfa, { 0xaa });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4e6f, gbc.sp());
        EXPECT(0xdcfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xdcfa));
        // AA 0314
        gbc.setState(0x80a4, 0xd5e, 0x8df0, 0xaaf, 0x1421, 0x6aab, 0x0, 0x1);
        gbc.writeMem(0x80a4, { 0xaa });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd5e, gbc.sp());
        EXPECT(0x80a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x80a4));
        // AA 0315
        gbc.setState(0x9abe, 0xcc5c, 0xf520, 0xf712, 0xa912, 0x10dc, 0x1, 0x0);
        gbc.writeMem(0x9abe, { 0xaa });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcc5c, gbc.sp());
        EXPECT(0x9abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9abe));
        // AA 0316
        gbc.setState(0x8d7, 0x29c7, 0x4e10, 0xd8b7, 0xf862, 0x418a, 0x0, 0x0);
        gbc.writeMem(0x8d7, { 0xaa });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x29c7, gbc.sp());
        EXPECT(0x8d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0317
        gbc.setState(0xdc23, 0xf2be, 0x4060, 0x5fa0, 0x323b, 0x65c2, 0x0, 0x1);
        gbc.writeMem(0xdc23, { 0xaa });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf2be, gbc.sp());
        EXPECT(0xdc24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xdc23));
        // AA 0318
        gbc.setState(0x9237, 0x83a1, 0xcda0, 0xeb7c, 0xbfa0, 0x21cf, 0x1, 0x1);
        gbc.writeMem(0x9237, { 0xaa });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x83a1, gbc.sp());
        EXPECT(0x9238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9237));
        // AA 0319
        gbc.setState(0x12f0, 0x10a6, 0xf360, 0xc5ed, 0x798c, 0x1521, 0x1, 0x0);
        gbc.writeMem(0x12f0, { 0xaa });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x10a6, gbc.sp());
        EXPECT(0x12f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 031A
        gbc.setState(0x87c, 0xac38, 0xa8d0, 0x538d, 0x2a7d, 0xe521, 0x0, 0x0);
        gbc.writeMem(0x87c, { 0xaa });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xac38, gbc.sp());
        EXPECT(0x87d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 031B
        gbc.setState(0xedca, 0xd0d9, 0x2ad0, 0x58ae, 0xe90c, 0x3d56, 0x1, 0x0);
        gbc.writeMem(0xedca, { 0xaa });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd0d9, gbc.sp());
        EXPECT(0xedcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xedca));
        // AA 031C
        gbc.setState(0x304, 0x55ad, 0x11a0, 0x5255, 0x359b, 0xaafb, 0x0, 0x0);
        gbc.writeMem(0x304, { 0xaa });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x55ad, gbc.sp());
        EXPECT(0x305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 031D
        gbc.setState(0x537c, 0xa756, 0xd0a0, 0x1974, 0x6d8e, 0x61c6, 0x0, 0x0);
        gbc.writeMem(0x537c, { 0xaa });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa756, gbc.sp());
        EXPECT(0x537d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 031E
        gbc.setState(0x897f, 0x3628, 0x25b0, 0xf30, 0xcac9, 0x3c8d, 0x1, 0x0);
        gbc.writeMem(0x897f, { 0xaa });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3628, gbc.sp());
        EXPECT(0x8980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x897f));
        // AA 0320
        gbc.setState(0x26c1, 0x2e4c, 0xa470, 0x6376, 0xf9a5, 0xfcf6, 0x0, 0x0);
        gbc.writeMem(0x26c1, { 0xaa });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2e4c, gbc.sp());
        EXPECT(0x26c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0321
        gbc.setState(0xca44, 0xca84, 0x7d10, 0x1888, 0x854c, 0x514d, 0x0, 0x1);
        gbc.writeMem(0xca44, { 0xaa });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xca84, gbc.sp());
        EXPECT(0xca45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xca44));
        // AA 0322
        gbc.setState(0x4e2f, 0xb57, 0x8820, 0x3e57, 0xce47, 0x532, 0x0, 0x1);
        gbc.writeMem(0x4e2f, { 0xaa });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb57, gbc.sp());
        EXPECT(0x4e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0323
        gbc.setState(0x5527, 0xaa1b, 0x17e0, 0xf9d1, 0xc93f, 0x51ba, 0x1, 0x1);
        gbc.writeMem(0x5527, { 0xaa });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xaa1b, gbc.sp());
        EXPECT(0x5528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0324
        gbc.setState(0xb90c, 0xd94, 0xd00, 0xcc67, 0x2282, 0x1d04, 0x0, 0x0);
        gbc.writeMem(0xb90c, { 0xaa });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd94, gbc.sp());
        EXPECT(0xb90d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb90c));
        // AA 0325
        gbc.setState(0x5686, 0x22a1, 0x8db0, 0xcc17, 0x629c, 0x3189, 0x1, 0x1);
        gbc.writeMem(0x5686, { 0xaa });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x22a1, gbc.sp());
        EXPECT(0x5687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0326
        gbc.setState(0xec00, 0x72b4, 0x60b0, 0xda9c, 0x3bad, 0x1263, 0x0, 0x1);
        gbc.writeMem(0xec00, { 0xaa });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x72b4, gbc.sp());
        EXPECT(0xec01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xec00));
        // AA 0327
        gbc.setState(0xb28e, 0x2ca1, 0xae30, 0x411f, 0xc987, 0xcd5a, 0x0, 0x0);
        gbc.writeMem(0xb28e, { 0xaa });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2ca1, gbc.sp());
        EXPECT(0xb28f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb28e));
        // AA 0328
        gbc.setState(0x6986, 0xf322, 0xaaa0, 0x586e, 0xf41b, 0x9e49, 0x1, 0x1);
        gbc.writeMem(0x6986, { 0xaa });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf322, gbc.sp());
        EXPECT(0x6987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0329
        gbc.setState(0x4f8d, 0xf25b, 0x7ea0, 0x62da, 0x1a01, 0x913f, 0x1, 0x1);
        gbc.writeMem(0x4f8d, { 0xaa });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf25b, gbc.sp());
        EXPECT(0x4f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 032A
        gbc.setState(0x81f4, 0x47b4, 0x6ea0, 0xcdf8, 0x801f, 0xae47, 0x1, 0x1);
        gbc.writeMem(0x81f4, { 0xaa });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x47b4, gbc.sp());
        EXPECT(0x81f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x81f4));
        // AA 032B
        gbc.setState(0x656, 0x83ce, 0x9f10, 0xfcf6, 0x1396, 0xfe9, 0x0, 0x1);
        gbc.writeMem(0x656, { 0xaa });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x83ce, gbc.sp());
        EXPECT(0x657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 032D
        gbc.setState(0x56db, 0x3f4d, 0x5ed0, 0xbc92, 0xb9ef, 0x1af4, 0x0, 0x1);
        gbc.writeMem(0x56db, { 0xaa });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3f4d, gbc.sp());
        EXPECT(0x56dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 032E
        gbc.setState(0x38e0, 0xb9ed, 0xa40, 0xb21a, 0x1ce0, 0x16ce, 0x1, 0x0);
        gbc.writeMem(0x38e0, { 0xaa });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb9ed, gbc.sp());
        EXPECT(0x38e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 032F
        gbc.setState(0x798, 0xff5b, 0xf8a0, 0xac7c, 0xe0b5, 0x15dd, 0x0, 0x0);
        gbc.writeMem(0x798, { 0xaa });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xff5b, gbc.sp());
        EXPECT(0x799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0330
        gbc.setState(0x5c75, 0x768, 0xe750, 0x5e41, 0x9cb, 0x47fe, 0x1, 0x1);
        gbc.writeMem(0x5c75, { 0xaa });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x768, gbc.sp());
        EXPECT(0x5c76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0331
        gbc.setState(0xbcad, 0xaca8, 0x4a00, 0x2df9, 0xb21d, 0x8f01, 0x1, 0x0);
        gbc.writeMem(0xbcad, { 0xaa });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xaca8, gbc.sp());
        EXPECT(0xbcae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbcad));
        // AA 0332
        gbc.setState(0xcfcf, 0xb7d2, 0x3b50, 0x4987, 0xddd3, 0x951b, 0x1, 0x0);
        gbc.writeMem(0xcfcf, { 0xaa });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb7d2, gbc.sp());
        EXPECT(0xcfd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xcfcf));
        // AA 0333
        gbc.setState(0xd15, 0x2f89, 0xd4e0, 0x58ea, 0xd9f7, 0xdee2, 0x1, 0x0);
        gbc.writeMem(0xd15, { 0xaa });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2f89, gbc.sp());
        EXPECT(0xd16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0334
        gbc.setState(0x9b45, 0xcd5b, 0x2430, 0x8c34, 0x7b4d, 0x4a69, 0x1, 0x0);
        gbc.writeMem(0x9b45, { 0xaa });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xcd5b, gbc.sp());
        EXPECT(0x9b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9b45));
        // AA 0335
        gbc.setState(0x41d6, 0x7c5f, 0xd8a0, 0xe, 0x3589, 0xfebc, 0x1, 0x0);
        gbc.writeMem(0x41d6, { 0xaa });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7c5f, gbc.sp());
        EXPECT(0x41d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0336
        gbc.setState(0xe3da, 0xa3c7, 0xd870, 0x5f70, 0x5af8, 0x844d, 0x0, 0x0);
        gbc.writeMem(0xe3da, { 0xaa });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa3c7, gbc.sp());
        EXPECT(0xe3db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe3da));
        // AA 0337
        gbc.setState(0xc364, 0xa052, 0x9da0, 0x5b5c, 0xaed9, 0x8af, 0x1, 0x0);
        gbc.writeMem(0xc364, { 0xaa });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa052, gbc.sp());
        EXPECT(0xc365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc364));
        // AA 0338
        gbc.setState(0x77e3, 0xbb0b, 0xfe0, 0x5931, 0x2cbe, 0x32a, 0x1, 0x1);
        gbc.writeMem(0x77e3, { 0xaa });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbb0b, gbc.sp());
        EXPECT(0x77e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0339
        gbc.setState(0x7ea3, 0x5eb0, 0x7ca0, 0xb542, 0x3ac, 0x4b7e, 0x0, 0x0);
        gbc.writeMem(0x7ea3, { 0xaa });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5eb0, gbc.sp());
        EXPECT(0x7ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 033A
        gbc.setState(0xd13c, 0xfdd5, 0x3d0, 0x5cf, 0x5310, 0xcf4f, 0x1, 0x1);
        gbc.writeMem(0xd13c, { 0xaa });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xfdd5, gbc.sp());
        EXPECT(0xd13d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd13c));
        // AA 033C
        gbc.setState(0x863a, 0xd69e, 0x0, 0x98b, 0xb496, 0x8436, 0x1, 0x1);
        gbc.writeMem(0x863a, { 0xaa });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd69e, gbc.sp());
        EXPECT(0x863b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x863a));
        // AA 033D
        gbc.setState(0xc05f, 0x3b15, 0x7da0, 0xde9b, 0xae79, 0x6d8b, 0x0, 0x0);
        gbc.writeMem(0xc05f, { 0xaa });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3b15, gbc.sp());
        EXPECT(0xc060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc05f));
        // AA 033E
        gbc.setState(0xa062, 0x1f5c, 0x7750, 0xba0f, 0x3973, 0x7903, 0x0, 0x1);
        gbc.writeMem(0xa062, { 0xaa });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1f5c, gbc.sp());
        EXPECT(0xa063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa062));
        // AA 033F
        gbc.setState(0x48c9, 0xd2dc, 0xa5c0, 0xc126, 0xceb, 0x2d96, 0x0, 0x0);
        gbc.writeMem(0x48c9, { 0xaa });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd2dc, gbc.sp());
        EXPECT(0x48ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0340
        gbc.setState(0x241b, 0x83f6, 0x500, 0x81bf, 0x140d, 0xbe9, 0x0, 0x0);
        gbc.writeMem(0x241b, { 0xaa });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x83f6, gbc.sp());
        EXPECT(0x241c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0341
        gbc.setState(0xb67c, 0x4b2b, 0x67e0, 0x92b7, 0x4008, 0xa946, 0x1, 0x0);
        gbc.writeMem(0xb67c, { 0xaa });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4b2b, gbc.sp());
        EXPECT(0xb67d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb67c));
        // AA 0342
        gbc.setState(0x96b9, 0x3b7c, 0x60d0, 0xb951, 0x2a42, 0x532f, 0x0, 0x1);
        gbc.writeMem(0x96b9, { 0xaa });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3b7c, gbc.sp());
        EXPECT(0x96ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x96b9));
        // AA 0343
        gbc.setState(0x51f8, 0x1161, 0xcad0, 0x748e, 0x78c5, 0x8bbe, 0x1, 0x1);
        gbc.writeMem(0x51f8, { 0xaa });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1161, gbc.sp());
        EXPECT(0x51f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0344
        gbc.setState(0xdb70, 0x6a24, 0x7890, 0x7602, 0x5dd1, 0x8c0, 0x0, 0x0);
        gbc.writeMem(0xdb70, { 0xaa });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6a24, gbc.sp());
        EXPECT(0xdb71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xdb70));
        // AA 0345
        gbc.setState(0xbe1b, 0xf486, 0x3a20, 0x93b, 0x2f42, 0xa929, 0x1, 0x1);
        gbc.writeMem(0xbe1b, { 0xaa });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf486, gbc.sp());
        EXPECT(0xbe1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbe1b));
        // AA 0346
        gbc.setState(0x7ae, 0x1fa5, 0xfed0, 0x9624, 0x335e, 0x5af3, 0x0, 0x0);
        gbc.writeMem(0x7ae, { 0xaa });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1fa5, gbc.sp());
        EXPECT(0x7af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0347
        gbc.setState(0x504a, 0x4858, 0x8130, 0x2695, 0xe254, 0x9475, 0x0, 0x0);
        gbc.writeMem(0x504a, { 0xaa });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4858, gbc.sp());
        EXPECT(0x504b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0348
        gbc.setState(0xad99, 0xac30, 0x49d0, 0x1e4c, 0x5430, 0x9a8, 0x1, 0x0);
        gbc.writeMem(0xad99, { 0xaa });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xac30, gbc.sp());
        EXPECT(0xad9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xad99));
        // AA 0349
        gbc.setState(0x7d93, 0x4c8c, 0x3d0, 0xcb9b, 0x5646, 0x3f41, 0x1, 0x1);
        gbc.writeMem(0x7d93, { 0xaa });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4c8c, gbc.sp());
        EXPECT(0x7d94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 034A
        gbc.setState(0x3033, 0xcb25, 0x90, 0xf885, 0x46ea, 0xd02, 0x1, 0x1);
        gbc.writeMem(0x3033, { 0xaa });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcb25, gbc.sp());
        EXPECT(0x3034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 034C
        gbc.setState(0x22f0, 0xf294, 0x8b10, 0x984b, 0x6e93, 0x34a9, 0x0, 0x1);
        gbc.writeMem(0x22f0, { 0xaa });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf294, gbc.sp());
        EXPECT(0x22f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 034F
        gbc.setState(0x7ff7, 0x4bae, 0x1280, 0x52e9, 0x7ea0, 0xb7e2, 0x1, 0x0);
        gbc.writeMem(0x7ff7, { 0xaa });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4bae, gbc.sp());
        EXPECT(0x7ff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0350
        gbc.setState(0xde90, 0x9fac, 0xd090, 0x4889, 0x8b71, 0x4b5a, 0x1, 0x0);
        gbc.writeMem(0xde90, { 0xaa });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9fac, gbc.sp());
        EXPECT(0xde91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xde90));
        // AA 0351
        gbc.setState(0x4367, 0xcb02, 0x6c80, 0x5e86, 0x5afc, 0x622b, 0x0, 0x0);
        gbc.writeMem(0x4367, { 0xaa });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcb02, gbc.sp());
        EXPECT(0x4368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0352
        gbc.setState(0x496a, 0x3a4e, 0x5100, 0xe222, 0xb41f, 0x3d52, 0x1, 0x0);
        gbc.writeMem(0x496a, { 0xaa });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3a4e, gbc.sp());
        EXPECT(0x496b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0353
        gbc.setState(0x5f69, 0x8324, 0xe9f0, 0xc0d3, 0xf773, 0x3de3, 0x0, 0x1);
        gbc.writeMem(0x5f69, { 0xaa });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8324, gbc.sp());
        EXPECT(0x5f6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0354
        gbc.setState(0x15f2, 0x8459, 0x1970, 0xc21, 0xae08, 0x579c, 0x1, 0x1);
        gbc.writeMem(0x15f2, { 0xaa });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8459, gbc.sp());
        EXPECT(0x15f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0356
        gbc.setState(0xcb35, 0x7f0d, 0x8b40, 0x70a2, 0xa7ff, 0x16f3, 0x0, 0x0);
        gbc.writeMem(0xcb35, { 0xaa });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7f0d, gbc.sp());
        EXPECT(0xcb36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xcb35));
        // AA 0357
        gbc.setState(0x864, 0xf288, 0xcce0, 0x97c5, 0xe246, 0x998b, 0x1, 0x1);
        gbc.writeMem(0x864, { 0xaa });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf288, gbc.sp());
        EXPECT(0x865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0358
        gbc.setState(0x28ca, 0x7028, 0x5420, 0x4ab2, 0xcbdc, 0x798b, 0x1, 0x0);
        gbc.writeMem(0x28ca, { 0xaa });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7028, gbc.sp());
        EXPECT(0x28cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0359
        gbc.setState(0xc026, 0x77f7, 0x5bb0, 0x84b3, 0x1024, 0x999, 0x1, 0x1);
        gbc.writeMem(0xc026, { 0xaa });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x77f7, gbc.sp());
        EXPECT(0xc027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc026));
        // AA 035A
        gbc.setState(0xec42, 0xe381, 0x8380, 0x4186, 0x7cba, 0x285c, 0x0, 0x0);
        gbc.writeMem(0xec42, { 0xaa });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe381, gbc.sp());
        EXPECT(0xec43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xec42));
        // AA 035B
        gbc.setState(0xb5d0, 0xfc62, 0xd910, 0xf197, 0xadd6, 0xd32a, 0x0, 0x1);
        gbc.writeMem(0xb5d0, { 0xaa });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfc62, gbc.sp());
        EXPECT(0xb5d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb5d0));
        // AA 035C
        gbc.setState(0x9670, 0xc4dd, 0xd870, 0x5a0b, 0x28da, 0xfa33, 0x1, 0x1);
        gbc.writeMem(0x9670, { 0xaa });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc4dd, gbc.sp());
        EXPECT(0x9671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9670));
        // AA 035D
        gbc.setState(0xdc44, 0x6009, 0x5100, 0x7d87, 0x1172, 0x5399, 0x1, 0x1);
        gbc.writeMem(0xdc44, { 0xaa });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6009, gbc.sp());
        EXPECT(0xdc45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xdc44));
        // AA 035E
        gbc.setState(0xda7c, 0xdd0e, 0xaef0, 0x22c3, 0x80aa, 0x4395, 0x1, 0x0);
        gbc.writeMem(0xda7c, { 0xaa });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdd0e, gbc.sp());
        EXPECT(0xda7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xda7c));
        // AA 035F
        gbc.setState(0xebf6, 0xde59, 0x1fc0, 0xec10, 0x63bd, 0xe30d, 0x0, 0x0);
        gbc.writeMem(0xebf6, { 0xaa });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xde59, gbc.sp());
        EXPECT(0xebf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xebf6));
        // AA 0360
        gbc.setState(0xb752, 0x34f2, 0xb880, 0xa53c, 0x91f, 0xf8a9, 0x1, 0x0);
        gbc.writeMem(0xb752, { 0xaa });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x34f2, gbc.sp());
        EXPECT(0xb753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb752));
        // AA 0361
        gbc.setState(0x8625, 0x963a, 0x1750, 0x876d, 0xb8a7, 0x57e6, 0x0, 0x1);
        gbc.writeMem(0x8625, { 0xaa });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x963a, gbc.sp());
        EXPECT(0x8626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8625));
        // AA 0362
        gbc.setState(0x975f, 0x99e7, 0x7050, 0xfb46, 0xa1c5, 0x8abf, 0x0, 0x0);
        gbc.writeMem(0x975f, { 0xaa });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x99e7, gbc.sp());
        EXPECT(0x9760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x975f));
        // AA 0363
        gbc.setState(0x2e6, 0x5199, 0x4cb0, 0x2e7b, 0x9c2f, 0x69e3, 0x1, 0x1);
        gbc.writeMem(0x2e6, { 0xaa });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5199, gbc.sp());
        EXPECT(0x2e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0364
        gbc.setState(0x263c, 0x6992, 0xca50, 0x37c9, 0x16e6, 0xa4e, 0x0, 0x1);
        gbc.writeMem(0x263c, { 0xaa });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6992, gbc.sp());
        EXPECT(0x263d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0365
        gbc.setState(0x5842, 0x8f67, 0x95e0, 0xcc2f, 0xf043, 0x5409, 0x0, 0x0);
        gbc.writeMem(0x5842, { 0xaa });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8f67, gbc.sp());
        EXPECT(0x5843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0366
        gbc.setState(0xb46a, 0xb75b, 0x580, 0xe4e3, 0xce32, 0x7ba1, 0x1, 0x1);
        gbc.writeMem(0xb46a, { 0xaa });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb75b, gbc.sp());
        EXPECT(0xb46b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb46a));
        // AA 0367
        gbc.setState(0x8bf6, 0xcfcb, 0xf4b0, 0x90a6, 0x820, 0x53e1, 0x1, 0x0);
        gbc.writeMem(0x8bf6, { 0xaa });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcfcb, gbc.sp());
        EXPECT(0x8bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8bf6));
        // AA 0368
        gbc.setState(0xce4e, 0xb6e5, 0xc900, 0x7849, 0xa5fa, 0xe87a, 0x0, 0x0);
        gbc.writeMem(0xce4e, { 0xaa });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb6e5, gbc.sp());
        EXPECT(0xce4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xce4e));
        // AA 0369
        gbc.setState(0xdd9c, 0xb5f7, 0x2c40, 0x945, 0xc3f7, 0x173b, 0x1, 0x0);
        gbc.writeMem(0xdd9c, { 0xaa });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb5f7, gbc.sp());
        EXPECT(0xdd9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xdd9c));
        // AA 036A
        gbc.setState(0x3124, 0x328a, 0xdde0, 0x5a8f, 0x4466, 0x1dce, 0x1, 0x0);
        gbc.writeMem(0x3124, { 0xaa });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x328a, gbc.sp());
        EXPECT(0x3125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 036B
        gbc.setState(0xec4e, 0xd01e, 0x4c80, 0x94e0, 0x6853, 0xe953, 0x0, 0x1);
        gbc.writeMem(0xec4e, { 0xaa });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd01e, gbc.sp());
        EXPECT(0xec4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xec4e));
        // AA 036C
        gbc.setState(0x3cd8, 0x6888, 0x5070, 0xc1fa, 0x9ec7, 0x40de, 0x1, 0x1);
        gbc.writeMem(0x3cd8, { 0xaa });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6888, gbc.sp());
        EXPECT(0x3cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 036D
        gbc.setState(0x5364, 0x53e7, 0xd140, 0x7778, 0xdf0b, 0xb5e4, 0x1, 0x1);
        gbc.writeMem(0x5364, { 0xaa });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x53e7, gbc.sp());
        EXPECT(0x5365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 036E
        gbc.setState(0x9618, 0x64d4, 0xb7e0, 0x9587, 0x9669, 0xa1d5, 0x0, 0x1);
        gbc.writeMem(0x9618, { 0xaa });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x64d4, gbc.sp());
        EXPECT(0x9619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9618));
        // AA 036F
        gbc.setState(0xc78, 0x5ac2, 0x1e50, 0xe7ae, 0x1d4f, 0x1698, 0x1, 0x0);
        gbc.writeMem(0xc78, { 0xaa });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5ac2, gbc.sp());
        EXPECT(0xc79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0370
        gbc.setState(0x4579, 0x5391, 0x65f0, 0x8de1, 0x9c9f, 0xc168, 0x1, 0x0);
        gbc.writeMem(0x4579, { 0xaa });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5391, gbc.sp());
        EXPECT(0x457a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0371
        gbc.setState(0x2542, 0xe884, 0xd780, 0xf749, 0xc5d0, 0x6372, 0x1, 0x1);
        gbc.writeMem(0x2542, { 0xaa });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe884, gbc.sp());
        EXPECT(0x2543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0372
        gbc.setState(0xc8b8, 0xb387, 0x83e0, 0x92c2, 0x606b, 0x523f, 0x0, 0x0);
        gbc.writeMem(0xc8b8, { 0xaa });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb387, gbc.sp());
        EXPECT(0xc8b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc8b8));
        // AA 0373
        gbc.setState(0xa035, 0x89f6, 0xb690, 0x3372, 0x6347, 0xeb39, 0x1, 0x1);
        gbc.writeMem(0xa035, { 0xaa });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x89f6, gbc.sp());
        EXPECT(0xa036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa035));
        // AA 0374
        gbc.setState(0x6a78, 0x59eb, 0xd740, 0x41, 0xe1a9, 0x352b, 0x0, 0x1);
        gbc.writeMem(0x6a78, { 0xaa });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x59eb, gbc.sp());
        EXPECT(0x6a79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0375
        gbc.setState(0x1a33, 0x79e6, 0xcd40, 0xf8ca, 0x230d, 0xaacf, 0x1, 0x0);
        gbc.writeMem(0x1a33, { 0xaa });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x79e6, gbc.sp());
        EXPECT(0x1a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0376
        gbc.setState(0xdb7, 0xaa18, 0x910, 0x95ec, 0x8b2b, 0xc16c, 0x0, 0x1);
        gbc.writeMem(0xdb7, { 0xaa });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xaa18, gbc.sp());
        EXPECT(0xdb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0377
        gbc.setState(0x250d, 0xdb3e, 0x3690, 0xb9bb, 0x8842, 0x4fad, 0x0, 0x1);
        gbc.writeMem(0x250d, { 0xaa });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xdb3e, gbc.sp());
        EXPECT(0x250e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0378
        gbc.setState(0x2ce4, 0xcfe9, 0x58a0, 0xff9b, 0xe2dc, 0xf049, 0x1, 0x1);
        gbc.writeMem(0x2ce4, { 0xaa });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcfe9, gbc.sp());
        EXPECT(0x2ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0379
        gbc.setState(0x87a8, 0x21c4, 0xc220, 0x52cb, 0x33b7, 0x9fb, 0x0, 0x1);
        gbc.writeMem(0x87a8, { 0xaa });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x21c4, gbc.sp());
        EXPECT(0x87a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x87a8));
        // AA 037A
        gbc.setState(0x55e1, 0x70c0, 0xd970, 0x8941, 0x5004, 0x5b63, 0x0, 0x1);
        gbc.writeMem(0x55e1, { 0xaa });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x70c0, gbc.sp());
        EXPECT(0x55e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 037B
        gbc.setState(0x21aa, 0x8cfa, 0x8b50, 0xac3b, 0xd5b8, 0x8f, 0x1, 0x1);
        gbc.writeMem(0x21aa, { 0xaa });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8cfa, gbc.sp());
        EXPECT(0x21ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 037C
        gbc.setState(0x1b9e, 0xae72, 0xc310, 0xaa49, 0xb355, 0x3116, 0x0, 0x1);
        gbc.writeMem(0x1b9e, { 0xaa });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xae72, gbc.sp());
        EXPECT(0x1b9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 037D
        gbc.setState(0x1e3a, 0x5ed8, 0x6600, 0x8060, 0xbb42, 0xde03, 0x0, 0x0);
        gbc.writeMem(0x1e3a, { 0xaa });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5ed8, gbc.sp());
        EXPECT(0x1e3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 037E
        gbc.setState(0xd577, 0xdc66, 0x8160, 0x4f99, 0xcdb1, 0xea24, 0x1, 0x0);
        gbc.writeMem(0xd577, { 0xaa });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdc66, gbc.sp());
        EXPECT(0xd578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd577));
        // AA 037F
        gbc.setState(0xbf45, 0xc815, 0x2f70, 0x41ef, 0x42d0, 0x9fa6, 0x0, 0x0);
        gbc.writeMem(0xbf45, { 0xaa });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc815, gbc.sp());
        EXPECT(0xbf46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbf45));
        // AA 0380
        gbc.setState(0x1805, 0x3693, 0x1780, 0x2c86, 0x8ded, 0xf685, 0x0, 0x1);
        gbc.writeMem(0x1805, { 0xaa });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3693, gbc.sp());
        EXPECT(0x1806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0381
        gbc.setState(0xc047, 0x673, 0x4090, 0xd2fb, 0xeb6, 0xf0c4, 0x0, 0x0);
        gbc.writeMem(0xc047, { 0xaa });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x673, gbc.sp());
        EXPECT(0xc048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc047));
        // AA 0382
        gbc.setState(0x42b8, 0x8179, 0x8020, 0xd13f, 0x8561, 0x77df, 0x1, 0x0);
        gbc.writeMem(0x42b8, { 0xaa });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8179, gbc.sp());
        EXPECT(0x42b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0383
        gbc.setState(0x38c, 0xa04e, 0x37c0, 0xb27e, 0x67c0, 0x4c95, 0x1, 0x1);
        gbc.writeMem(0x38c, { 0xaa });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa04e, gbc.sp());
        EXPECT(0x38d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0384
        gbc.setState(0xa7d6, 0x3174, 0x86f0, 0x7665, 0xec12, 0x5552, 0x1, 0x0);
        gbc.writeMem(0xa7d6, { 0xaa });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3174, gbc.sp());
        EXPECT(0xa7d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa7d6));
        // AA 0385
        gbc.setState(0x9462, 0x3607, 0x3af0, 0x3c14, 0x6e71, 0xfaaf, 0x0, 0x1);
        gbc.writeMem(0x9462, { 0xaa });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3607, gbc.sp());
        EXPECT(0x9463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9462));
        // AA 0386
        gbc.setState(0xaea1, 0x95ba, 0x5700, 0x3af1, 0x8773, 0x20f1, 0x0, 0x0);
        gbc.writeMem(0xaea1, { 0xaa });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x95ba, gbc.sp());
        EXPECT(0xaea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xaea1));
        // AA 0387
        gbc.setState(0x17b7, 0x7d37, 0xd90, 0x5ef5, 0x34c6, 0x8f76, 0x0, 0x0);
        gbc.writeMem(0x17b7, { 0xaa });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7d37, gbc.sp());
        EXPECT(0x17b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0388
        gbc.setState(0x2f3f, 0xacc0, 0x3330, 0xeb0c, 0x147e, 0x6fc9, 0x0, 0x0);
        gbc.writeMem(0x2f3f, { 0xaa });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xacc0, gbc.sp());
        EXPECT(0x2f40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0389
        gbc.setState(0xe664, 0x7417, 0x3180, 0xc070, 0x7777, 0x3a74, 0x1, 0x0);
        gbc.writeMem(0xe664, { 0xaa });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7417, gbc.sp());
        EXPECT(0xe665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe664));
        // AA 038B
        gbc.setState(0x8bf5, 0x870b, 0x3c80, 0x3ae, 0x6b21, 0x8c8c, 0x1, 0x1);
        gbc.writeMem(0x8bf5, { 0xaa });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x870b, gbc.sp());
        EXPECT(0x8bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8bf5));
        // AA 038C
        gbc.setState(0x5f90, 0x1be7, 0x8c70, 0x5ad2, 0xa66e, 0xea15, 0x0, 0x0);
        gbc.writeMem(0x5f90, { 0xaa });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1be7, gbc.sp());
        EXPECT(0x5f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 038D
        gbc.setState(0x9981, 0x70a4, 0x5a90, 0x1f71, 0x46d0, 0x8bfc, 0x0, 0x0);
        gbc.writeMem(0x9981, { 0xaa });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x70a4, gbc.sp());
        EXPECT(0x9982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9981));
        // AA 038E
        gbc.setState(0xdc69, 0xf1b8, 0xdb00, 0xd6bf, 0x467d, 0xb6e7, 0x0, 0x1);
        gbc.writeMem(0xdc69, { 0xaa });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf1b8, gbc.sp());
        EXPECT(0xdc6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xdc69));
        // AA 038F
        gbc.setState(0x99c4, 0x3e09, 0x6760, 0xaee2, 0xc81d, 0x3028, 0x1, 0x1);
        gbc.writeMem(0x99c4, { 0xaa });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3e09, gbc.sp());
        EXPECT(0x99c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x99c4));
        // AA 0390
        gbc.setState(0x5f9e, 0xce09, 0x8c00, 0xcdeb, 0x403, 0x2fc, 0x0, 0x0);
        gbc.writeMem(0x5f9e, { 0xaa });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xce09, gbc.sp());
        EXPECT(0x5f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0391
        gbc.setState(0x1743, 0x1e7e, 0x9d90, 0x52f, 0xbbd7, 0x81d1, 0x0, 0x1);
        gbc.writeMem(0x1743, { 0xaa });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1e7e, gbc.sp());
        EXPECT(0x1744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0392
        gbc.setState(0x1e5c, 0xd793, 0xaea0, 0x144, 0xd2bc, 0x559f, 0x0, 0x1);
        gbc.writeMem(0x1e5c, { 0xaa });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd793, gbc.sp());
        EXPECT(0x1e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0393
        gbc.setState(0x2656, 0x7dbb, 0x1f0, 0x5e91, 0xef3a, 0x5d64, 0x0, 0x0);
        gbc.writeMem(0x2656, { 0xaa });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7dbb, gbc.sp());
        EXPECT(0x2657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0394
        gbc.setState(0xa01a, 0xcc42, 0x2e40, 0x74ba, 0x1aa8, 0xec14, 0x0, 0x1);
        gbc.writeMem(0xa01a, { 0xaa });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xcc42, gbc.sp());
        EXPECT(0xa01b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa01a));
        // AA 0395
        gbc.setState(0xe6c6, 0x801c, 0x660, 0x17b2, 0x5cae, 0x2ee7, 0x1, 0x0);
        gbc.writeMem(0xe6c6, { 0xaa });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x801c, gbc.sp());
        EXPECT(0xe6c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe6c6));
        // AA 0396
        gbc.setState(0x507e, 0x15fe, 0xcbe0, 0x3ed8, 0x3424, 0xa918, 0x0, 0x0);
        gbc.writeMem(0x507e, { 0xaa });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x15fe, gbc.sp());
        EXPECT(0x507f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 0397
        gbc.setState(0xc4c0, 0x585f, 0x2770, 0x5172, 0xacbf, 0x1dee, 0x1, 0x0);
        gbc.writeMem(0xc4c0, { 0xaa });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x585f, gbc.sp());
        EXPECT(0xc4c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc4c0));
        // AA 0398
        gbc.setState(0xbaff, 0x4c40, 0x1a40, 0xb9f9, 0xf328, 0x4678, 0x1, 0x0);
        gbc.writeMem(0xbaff, { 0xaa });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4c40, gbc.sp());
        EXPECT(0xbb00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbaff));
        // AA 0399
        gbc.setState(0xb0e0, 0x406e, 0x2670, 0x134c, 0x25e7, 0x5048, 0x1, 0x0);
        gbc.writeMem(0xb0e0, { 0xaa });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x406e, gbc.sp());
        EXPECT(0xb0e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb0e0));
        // AA 039A
        gbc.setState(0x920a, 0x277a, 0xe7b0, 0xce57, 0xfa6b, 0x8f66, 0x0, 0x1);
        gbc.writeMem(0x920a, { 0xaa });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x277a, gbc.sp());
        EXPECT(0x920b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x920a));
        // AA 039B
        gbc.setState(0xa6f, 0xa2d7, 0xc620, 0x4d8a, 0x7a0e, 0xe5cc, 0x0, 0x0);
        gbc.writeMem(0xa6f, { 0xaa });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa2d7, gbc.sp());
        EXPECT(0xa70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 039C
        gbc.setState(0x68a, 0xd7bb, 0x9850, 0xc71, 0x3ce9, 0x2152, 0x0, 0x1);
        gbc.writeMem(0x68a, { 0xaa });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd7bb, gbc.sp());
        EXPECT(0x68b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 039D
        gbc.setState(0xa14f, 0x821b, 0xea40, 0x1830, 0x5d44, 0x5aa9, 0x0, 0x0);
        gbc.writeMem(0xa14f, { 0xaa });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x821b, gbc.sp());
        EXPECT(0xa150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa14f));
        // AA 039E
        gbc.setState(0x6b9f, 0xc55b, 0x88b0, 0x9a4, 0xa873, 0xa353, 0x0, 0x1);
        gbc.writeMem(0x6b9f, { 0xaa });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc55b, gbc.sp());
        EXPECT(0x6ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 039F
        gbc.setState(0x5332, 0xcfce, 0x6880, 0x4723, 0x7061, 0x1ad8, 0x0, 0x1);
        gbc.writeMem(0x5332, { 0xaa });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcfce, gbc.sp());
        EXPECT(0x5333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03A0
        gbc.setState(0x7a5c, 0x9431, 0x8eb0, 0x8d7, 0x49cf, 0xd571, 0x0, 0x1);
        gbc.writeMem(0x7a5c, { 0xaa });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9431, gbc.sp());
        EXPECT(0x7a5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03A1
        gbc.setState(0xe592, 0x29c1, 0xb140, 0x2fbc, 0xbb61, 0x7cf7, 0x1, 0x1);
        gbc.writeMem(0xe592, { 0xaa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x29c1, gbc.sp());
        EXPECT(0xe593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe592));
        // AA 03A2
        gbc.setState(0xa0bd, 0x46fd, 0x4460, 0xff81, 0xdd65, 0xd5c7, 0x1, 0x1);
        gbc.writeMem(0xa0bd, { 0xaa });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x46fd, gbc.sp());
        EXPECT(0xa0be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa0bd));
        // AA 03A3
        gbc.setState(0x2c4e, 0x9234, 0xe670, 0xa39, 0xc9a5, 0x4053, 0x0, 0x0);
        gbc.writeMem(0x2c4e, { 0xaa });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9234, gbc.sp());
        EXPECT(0x2c4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03A5
        gbc.setState(0xe314, 0xa84b, 0xe320, 0xe35d, 0xe3c6, 0x33c, 0x1, 0x1);
        gbc.writeMem(0xe314, { 0xaa });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa84b, gbc.sp());
        EXPECT(0xe315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe314));
        // AA 03A6
        gbc.setState(0xee61, 0xa9fb, 0xa60, 0x2a1a, 0x55e2, 0xad1d, 0x1, 0x1);
        gbc.writeMem(0xee61, { 0xaa });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa9fb, gbc.sp());
        EXPECT(0xee62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xee61));
        // AA 03A7
        gbc.setState(0xa555, 0x2a75, 0x75b0, 0xf83a, 0x8e4a, 0xe01e, 0x1, 0x0);
        gbc.writeMem(0xa555, { 0xaa });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2a75, gbc.sp());
        EXPECT(0xa556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa555));
        // AA 03A8
        gbc.setState(0xd240, 0xcb65, 0xbf50, 0x6d64, 0x8671, 0xe44, 0x0, 0x0);
        gbc.writeMem(0xd240, { 0xaa });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcb65, gbc.sp());
        EXPECT(0xd241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd240));
        // AA 03A9
        gbc.setState(0x6660, 0x72a8, 0xc750, 0xc3f7, 0x4363, 0x1b5f, 0x1, 0x1);
        gbc.writeMem(0x6660, { 0xaa });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x72a8, gbc.sp());
        EXPECT(0x6661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03AA
        gbc.setState(0x5bed, 0xe050, 0x1f0, 0xd3ff, 0x20fb, 0x4851, 0x1, 0x1);
        gbc.writeMem(0x5bed, { 0xaa });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe050, gbc.sp());
        EXPECT(0x5bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03AB
        gbc.setState(0x4199, 0x1c79, 0xb2e0, 0xc439, 0x2070, 0x898f, 0x0, 0x0);
        gbc.writeMem(0x4199, { 0xaa });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1c79, gbc.sp());
        EXPECT(0x419a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03AC
        gbc.setState(0x6dc1, 0x2bae, 0x4f00, 0xeab2, 0x204b, 0x52f8, 0x1, 0x0);
        gbc.writeMem(0x6dc1, { 0xaa });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2bae, gbc.sp());
        EXPECT(0x6dc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03AD
        gbc.setState(0x282d, 0x37b5, 0x9420, 0x5c72, 0x90e9, 0x9eb5, 0x1, 0x0);
        gbc.writeMem(0x282d, { 0xaa });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x37b5, gbc.sp());
        EXPECT(0x282e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03B0
        gbc.setState(0x3b59, 0xf3cf, 0x4640, 0x6c02, 0xc05f, 0x1cd5, 0x0, 0x1);
        gbc.writeMem(0x3b59, { 0xaa });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf3cf, gbc.sp());
        EXPECT(0x3b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03B1
        gbc.setState(0x343d, 0x700c, 0x2e70, 0xef98, 0x596e, 0x1acb, 0x1, 0x0);
        gbc.writeMem(0x343d, { 0xaa });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x700c, gbc.sp());
        EXPECT(0x343e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03B2
        gbc.setState(0xdc9b, 0x22bf, 0xcc00, 0x8570, 0xd1c7, 0xfc56, 0x0, 0x0);
        gbc.writeMem(0xdc9b, { 0xaa });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x22bf, gbc.sp());
        EXPECT(0xdc9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xdc9b));
        // AA 03B3
        gbc.setState(0x9cfe, 0xbaf7, 0x3330, 0x7371, 0x9d17, 0x88b4, 0x1, 0x0);
        gbc.writeMem(0x9cfe, { 0xaa });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbaf7, gbc.sp());
        EXPECT(0x9cff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9cfe));
        // AA 03B4
        gbc.setState(0x4b5f, 0xcbff, 0x6160, 0xd0c, 0xf704, 0xf899, 0x1, 0x1);
        gbc.writeMem(0x4b5f, { 0xaa });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcbff, gbc.sp());
        EXPECT(0x4b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03B5
        gbc.setState(0x975e, 0xa07f, 0xf770, 0x6dc7, 0x770a, 0xb4e6, 0x1, 0x1);
        gbc.writeMem(0x975e, { 0xaa });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa07f, gbc.sp());
        EXPECT(0x975f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x975e));
        // AA 03B6
        gbc.setState(0x1513, 0x6450, 0x4400, 0x7dbc, 0xf3ac, 0xdd7e, 0x1, 0x1);
        gbc.writeMem(0x1513, { 0xaa });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6450, gbc.sp());
        EXPECT(0x1514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03B7
        gbc.setState(0xe8ad, 0xd72, 0x5e90, 0x2c82, 0xb72b, 0xc1f3, 0x1, 0x0);
        gbc.writeMem(0xe8ad, { 0xaa });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd72, gbc.sp());
        EXPECT(0xe8ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe8ad));
        // AA 03B8
        gbc.setState(0x266e, 0x2b8, 0x5450, 0x85bc, 0x98fe, 0x759, 0x1, 0x0);
        gbc.writeMem(0x266e, { 0xaa });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2b8, gbc.sp());
        EXPECT(0x266f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03B9
        gbc.setState(0xbda7, 0xc73f, 0xd1d0, 0xe561, 0x800a, 0xc844, 0x0, 0x1);
        gbc.writeMem(0xbda7, { 0xaa });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc73f, gbc.sp());
        EXPECT(0xbda8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbda7));
        // AA 03BA
        gbc.setState(0xac7f, 0x7738, 0x95f0, 0xf3b8, 0xafd2, 0xcdcd, 0x0, 0x1);
        gbc.writeMem(0xac7f, { 0xaa });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7738, gbc.sp());
        EXPECT(0xac80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xac7f));
        // AA 03BB
        gbc.setState(0xaa43, 0x4fc1, 0xbfd0, 0xad8d, 0x3eb2, 0x34a9, 0x0, 0x0);
        gbc.writeMem(0xaa43, { 0xaa });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4fc1, gbc.sp());
        EXPECT(0xaa44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xaa43));
        // AA 03BC
        gbc.setState(0xa2c5, 0xa942, 0xbd00, 0xab88, 0x446f, 0x29c6, 0x1, 0x0);
        gbc.writeMem(0xa2c5, { 0xaa });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa942, gbc.sp());
        EXPECT(0xa2c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa2c5));
        // AA 03BD
        gbc.setState(0xc6db, 0x4dc1, 0xa650, 0x3984, 0x7fcb, 0xda4e, 0x0, 0x0);
        gbc.writeMem(0xc6db, { 0xaa });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4dc1, gbc.sp());
        EXPECT(0xc6dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc6db));
        // AA 03BE
        gbc.setState(0xef90, 0xaf4e, 0xd020, 0xb4d6, 0xa5c, 0x692, 0x0, 0x1);
        gbc.writeMem(0xef90, { 0xaa });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xaf4e, gbc.sp());
        EXPECT(0xef91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xef90));
        // AA 03BF
        gbc.setState(0xd2a2, 0x447c, 0x29b0, 0x517d, 0x8c6e, 0x45ac, 0x0, 0x0);
        gbc.writeMem(0xd2a2, { 0xaa });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x447c, gbc.sp());
        EXPECT(0xd2a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd2a2));
        // AA 03C0
        gbc.setState(0xbb8d, 0xd74f, 0xe7b0, 0x6849, 0x60a, 0xb1dc, 0x1, 0x0);
        gbc.writeMem(0xbb8d, { 0xaa });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd74f, gbc.sp());
        EXPECT(0xbb8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbb8d));
        // AA 03C1
        gbc.setState(0x6cf, 0x1f59, 0x7730, 0xc9fe, 0xdf30, 0x1cb4, 0x1, 0x1);
        gbc.writeMem(0x6cf, { 0xaa });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1f59, gbc.sp());
        EXPECT(0x6d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03C2
        gbc.setState(0xe3a2, 0xbad4, 0xdc60, 0x4127, 0x4f4e, 0x22a7, 0x1, 0x1);
        gbc.writeMem(0xe3a2, { 0xaa });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbad4, gbc.sp());
        EXPECT(0xe3a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe3a2));
        // AA 03C3
        gbc.setState(0xa3fe, 0x69ae, 0x9a50, 0x27b6, 0x8f39, 0xc549, 0x0, 0x1);
        gbc.writeMem(0xa3fe, { 0xaa });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x69ae, gbc.sp());
        EXPECT(0xa3ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa3fe));
        // AA 03C4
        gbc.setState(0xeb03, 0xc4cc, 0x9b30, 0x7d4e, 0x6bcd, 0x3e14, 0x1, 0x0);
        gbc.writeMem(0xeb03, { 0xaa });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc4cc, gbc.sp());
        EXPECT(0xeb04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xeb03));
        // AA 03C5
        gbc.setState(0x5214, 0xdcba, 0xaaf0, 0x4e44, 0xa0c, 0x5520, 0x0, 0x0);
        gbc.writeMem(0x5214, { 0xaa });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xdcba, gbc.sp());
        EXPECT(0x5215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03C6
        gbc.setState(0x588f, 0xf1fe, 0x1890, 0x1c30, 0xd7d9, 0x4466, 0x0, 0x0);
        gbc.writeMem(0x588f, { 0xaa });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf1fe, gbc.sp());
        EXPECT(0x5890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03C7
        gbc.setState(0xc8c, 0x5f1e, 0x7c40, 0x9ff5, 0x28a9, 0x4a38, 0x0, 0x0);
        gbc.writeMem(0xc8c, { 0xaa });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5f1e, gbc.sp());
        EXPECT(0xc8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03C8
        gbc.setState(0x20cf, 0x6262, 0xe70, 0x4e9f, 0xacc3, 0x95ca, 0x0, 0x0);
        gbc.writeMem(0x20cf, { 0xaa });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6262, gbc.sp());
        EXPECT(0x20d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03C9
        gbc.setState(0x308a, 0xb861, 0x65c0, 0x1c75, 0x13a, 0x3d20, 0x1, 0x1);
        gbc.writeMem(0x308a, { 0xaa });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb861, gbc.sp());
        EXPECT(0x308b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03CA
        gbc.setState(0x6ad7, 0x3f3c, 0xca70, 0x3c71, 0x3636, 0xfe9d, 0x0, 0x0);
        gbc.writeMem(0x6ad7, { 0xaa });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3f3c, gbc.sp());
        EXPECT(0x6ad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03CB
        gbc.setState(0xc8da, 0x229b, 0xb570, 0x686d, 0xc6f8, 0xe230, 0x0, 0x1);
        gbc.writeMem(0xc8da, { 0xaa });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x229b, gbc.sp());
        EXPECT(0xc8db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc8da));
        // AA 03CC
        gbc.setState(0x66df, 0x117c, 0x7130, 0x29c7, 0x126, 0xfde5, 0x0, 0x1);
        gbc.writeMem(0x66df, { 0xaa });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x117c, gbc.sp());
        EXPECT(0x66e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03CD
        gbc.setState(0x14b5, 0xd22d, 0x5e80, 0xd058, 0xc62b, 0xb92f, 0x0, 0x1);
        gbc.writeMem(0x14b5, { 0xaa });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd22d, gbc.sp());
        EXPECT(0x14b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03CE
        gbc.setState(0x7222, 0xf8c3, 0x43d0, 0x20d8, 0xa301, 0x8ddd, 0x0, 0x1);
        gbc.writeMem(0x7222, { 0xaa });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf8c3, gbc.sp());
        EXPECT(0x7223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03CF
        gbc.setState(0x753d, 0x3151, 0xd0b0, 0xdb1, 0xecd0, 0x1a31, 0x0, 0x1);
        gbc.writeMem(0x753d, { 0xaa });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3151, gbc.sp());
        EXPECT(0x753e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03D0
        gbc.setState(0xa383, 0xd030, 0x16b0, 0xb125, 0x8d1d, 0xf100, 0x0, 0x1);
        gbc.writeMem(0xa383, { 0xaa });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd030, gbc.sp());
        EXPECT(0xa384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa383));
        // AA 03D1
        gbc.setState(0xd503, 0x70e7, 0xeb80, 0x8626, 0x1653, 0x2514, 0x0, 0x0);
        gbc.writeMem(0xd503, { 0xaa });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x70e7, gbc.sp());
        EXPECT(0xd504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd503));
        // AA 03D2
        gbc.setState(0x238f, 0x333f, 0x3710, 0x27b1, 0xac2d, 0x69df, 0x0, 0x0);
        gbc.writeMem(0x238f, { 0xaa });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x333f, gbc.sp());
        EXPECT(0x2390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03D3
        gbc.setState(0xc65e, 0x5d7a, 0xf220, 0x7e5a, 0xd99f, 0x7ea9, 0x0, 0x1);
        gbc.writeMem(0xc65e, { 0xaa });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5d7a, gbc.sp());
        EXPECT(0xc65f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc65e));
        // AA 03D4
        gbc.setState(0x6cac, 0xa7e7, 0x7040, 0x56d1, 0xb293, 0x332c, 0x0, 0x1);
        gbc.writeMem(0x6cac, { 0xaa });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa7e7, gbc.sp());
        EXPECT(0x6cad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03D5
        gbc.setState(0x5ce5, 0x879a, 0x8860, 0xdab7, 0xc71b, 0x8f6f, 0x1, 0x0);
        gbc.writeMem(0x5ce5, { 0xaa });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x879a, gbc.sp());
        EXPECT(0x5ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03D6
        gbc.setState(0x37cf, 0x2953, 0x8e50, 0xebdc, 0xfd81, 0x14fd, 0x0, 0x0);
        gbc.writeMem(0x37cf, { 0xaa });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2953, gbc.sp());
        EXPECT(0x37d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03D7
        gbc.setState(0x1f9c, 0xb73b, 0xc9e0, 0xebaf, 0x596c, 0xb03, 0x0, 0x1);
        gbc.writeMem(0x1f9c, { 0xaa });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb73b, gbc.sp());
        EXPECT(0x1f9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03D8
        gbc.setState(0xe5ab, 0xd126, 0x51b0, 0xd1d3, 0xd4f7, 0x9334, 0x0, 0x0);
        gbc.writeMem(0xe5ab, { 0xaa });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd126, gbc.sp());
        EXPECT(0xe5ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe5ab));
        // AA 03D9
        gbc.setState(0x65b8, 0x8852, 0x2920, 0x5d66, 0x3af1, 0xadf4, 0x1, 0x1);
        gbc.writeMem(0x65b8, { 0xaa });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8852, gbc.sp());
        EXPECT(0x65b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03DA
        gbc.setState(0xca54, 0x21a9, 0x8a30, 0x149, 0x7742, 0x3451, 0x0, 0x1);
        gbc.writeMem(0xca54, { 0xaa });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x21a9, gbc.sp());
        EXPECT(0xca55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xca54));
        // AA 03DC
        gbc.setState(0xad7, 0x285, 0x3000, 0x7ba5, 0xf91a, 0x28b2, 0x0, 0x1);
        gbc.writeMem(0xad7, { 0xaa });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x285, gbc.sp());
        EXPECT(0xad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03DD
        gbc.setState(0x57df, 0xae99, 0x68b0, 0xe11a, 0xd848, 0x816a, 0x0, 0x0);
        gbc.writeMem(0x57df, { 0xaa });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xae99, gbc.sp());
        EXPECT(0x57e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03DE
        gbc.setState(0x1438, 0xb67b, 0x1b30, 0x274b, 0x9d81, 0x9c26, 0x0, 0x1);
        gbc.writeMem(0x1438, { 0xaa });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb67b, gbc.sp());
        EXPECT(0x1439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03DF
        gbc.setState(0x6f00, 0xa8aa, 0x3870, 0xc3f3, 0xe6ff, 0x643, 0x1, 0x0);
        gbc.writeMem(0x6f00, { 0xaa });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa8aa, gbc.sp());
        EXPECT(0x6f01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03E0
        gbc.setState(0x17c0, 0x2d8a, 0x9020, 0x59e4, 0xaada, 0xcba4, 0x1, 0x1);
        gbc.writeMem(0x17c0, { 0xaa });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2d8a, gbc.sp());
        EXPECT(0x17c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03E1
        gbc.setState(0xa9dc, 0xd9ad, 0x1770, 0x7926, 0xa570, 0x2191, 0x1, 0x1);
        gbc.writeMem(0xa9dc, { 0xaa });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd9ad, gbc.sp());
        EXPECT(0xa9dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa9dc));
        // AA 03E2
        gbc.setState(0xcf7a, 0xea53, 0xfb20, 0x9d21, 0x5ac8, 0x220a, 0x0, 0x0);
        gbc.writeMem(0xcf7a, { 0xaa });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xea53, gbc.sp());
        EXPECT(0xcf7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xcf7a));
        // AA 03E3
        gbc.setState(0x7aae, 0x53fe, 0x29f0, 0x865, 0x1e67, 0x86a4, 0x1, 0x1);
        gbc.writeMem(0x7aae, { 0xaa });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x53fe, gbc.sp());
        EXPECT(0x7aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AA 03E4
        gbc.setState(0xd61b, 0xa733, 0xf150, 0xe56a, 0x48b3, 0x89db, 0x0, 0x1);
        gbc.writeMem(0xd61b, { 0xaa });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa733, gbc.sp());
        EXPECT(0xd61c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd61b));
        // AA 03E6
        gbc.setState(0xb423, 0x9788, 0x2190, 0x9ae6, 0x7e1e, 0xc240, 0x0, 0x1);
        gbc.writeMem(0xb423, { 0xaa });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9788, gbc.sp());
        EXPECT(0xb424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb423));
        // AA 03E7
        gbc.setState(0x99a, 0x2896, 0x7520, 0xd95c, 0x9f34, 0x6f6b, 0x1, 0x1);
        gbc.writeMem(0x99a, { 0xaa });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2896, gbc.sp());
        EXPECT(0x99b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
