    TEST(gbcemu, opcode_cb_8f) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 8F 0001
        gbc.setState(0x52f, 0x80fe, 0xfa50, 0x9840, 0x749f, 0x686a, 0x0, 0x0);
        gbc.writeMem(0x52f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x80fe, gbc.sp());
        EXPECT(0x531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0002
        gbc.setState(0x5482, 0x6ecf, 0x5bf0, 0xa50a, 0x64da, 0x8e45, 0x1, 0x1);
        gbc.writeMem(0x5482, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6ecf, gbc.sp());
        EXPECT(0x5484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0004
        gbc.setState(0x27f3, 0x5fb9, 0x7900, 0x12b1, 0x3e22, 0xbaca, 0x0, 0x1);
        gbc.writeMem(0x27f3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5fb9, gbc.sp());
        EXPECT(0x27f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0005
        gbc.setState(0xa4c9, 0xb629, 0x6c00, 0x9281, 0xe426, 0xd5ac, 0x1, 0x1);
        gbc.writeMem(0xa4c9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb629, gbc.sp());
        EXPECT(0xa4cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c9));
        EXPECT(0x8f, gbc.readMem(0xa4ca));
        // CB 8F 0006
        gbc.setState(0x9693, 0x969f, 0x45b0, 0xdd9d, 0x74bc, 0xbe9f, 0x0, 0x1);
        gbc.writeMem(0x9693, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x969f, gbc.sp());
        EXPECT(0x9695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9693));
        EXPECT(0x8f, gbc.readMem(0x9694));
        // CB 8F 0007
        gbc.setState(0x36b5, 0x435c, 0x1da0, 0xeede, 0xc08f, 0xc717, 0x1, 0x1);
        gbc.writeMem(0x36b5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x435c, gbc.sp());
        EXPECT(0x36b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0008
        gbc.setState(0xed45, 0x56c4, 0xedd0, 0xd83b, 0xb3a8, 0x38a6, 0x0, 0x1);
        gbc.writeMem(0xed45, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x56c4, gbc.sp());
        EXPECT(0xed47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed45));
        EXPECT(0x8f, gbc.readMem(0xed46));
        // CB 8F 0009
        gbc.setState(0xdb80, 0x57, 0x2650, 0xc8d0, 0x8974, 0x658e, 0x0, 0x0);
        gbc.writeMem(0xdb80, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x57, gbc.sp());
        EXPECT(0xdb82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb80));
        EXPECT(0x8f, gbc.readMem(0xdb81));
        // CB 8F 000A
        gbc.setState(0x1f59, 0xe5af, 0x4bd0, 0x4a2a, 0xb35c, 0x8759, 0x1, 0x1);
        gbc.writeMem(0x1f59, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe5af, gbc.sp());
        EXPECT(0x1f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 000B
        gbc.setState(0xdabf, 0xca73, 0xf3d0, 0x7dc0, 0x38a0, 0xb1d9, 0x0, 0x0);
        gbc.writeMem(0xdabf, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xca73, gbc.sp());
        EXPECT(0xdac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdabf));
        EXPECT(0x8f, gbc.readMem(0xdac0));
        // CB 8F 000C
        gbc.setState(0x4ddc, 0xca04, 0xa900, 0x48dd, 0xbf1b, 0xf03a, 0x0, 0x0);
        gbc.writeMem(0x4ddc, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xca04, gbc.sp());
        EXPECT(0x4dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 000D
        gbc.setState(0x4aab, 0x4362, 0xb270, 0xfbcb, 0x6e7c, 0x5ed4, 0x0, 0x0);
        gbc.writeMem(0x4aab, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4362, gbc.sp());
        EXPECT(0x4aad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 000F
        gbc.setState(0x4016, 0xbeae, 0x38b0, 0xf4a2, 0x7195, 0xf280, 0x0, 0x1);
        gbc.writeMem(0x4016, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbeae, gbc.sp());
        EXPECT(0x4018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0010
        gbc.setState(0xebd3, 0xf60a, 0x25c0, 0x2ff5, 0xc28, 0xf229, 0x0, 0x1);
        gbc.writeMem(0xebd3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf60a, gbc.sp());
        EXPECT(0xebd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd3));
        EXPECT(0x8f, gbc.readMem(0xebd4));
        // CB 8F 0011
        gbc.setState(0x217b, 0xaa26, 0x9b30, 0xfe14, 0xc12c, 0x364a, 0x1, 0x0);
        gbc.writeMem(0x217b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xaa26, gbc.sp());
        EXPECT(0x217d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0012
        gbc.setState(0xaccf, 0x764b, 0x1080, 0x4b0f, 0xa176, 0xb3ed, 0x0, 0x1);
        gbc.writeMem(0xaccf, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x764b, gbc.sp());
        EXPECT(0xacd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaccf));
        EXPECT(0x8f, gbc.readMem(0xacd0));
        // CB 8F 0013
        gbc.setState(0x97b, 0x55a4, 0x1500, 0x7732, 0xdd91, 0xb8fb, 0x0, 0x0);
        gbc.writeMem(0x97b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x55a4, gbc.sp());
        EXPECT(0x97d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0016
        gbc.setState(0x950e, 0x1872, 0x5970, 0x36, 0x76e1, 0xc123, 0x1, 0x0);
        gbc.writeMem(0x950e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1872, gbc.sp());
        EXPECT(0x9510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x950e));
        EXPECT(0x8f, gbc.readMem(0x950f));
        // CB 8F 0017
        gbc.setState(0x2f40, 0xfd67, 0xf7a0, 0x44f0, 0x43ab, 0xf564, 0x1, 0x1);
        gbc.writeMem(0x2f40, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfd67, gbc.sp());
        EXPECT(0x2f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0018
        gbc.setState(0x721b, 0x5a0f, 0x3e40, 0xdd35, 0xd681, 0x300c, 0x0, 0x1);
        gbc.writeMem(0x721b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5a0f, gbc.sp());
        EXPECT(0x721d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 001A
        gbc.setState(0x460c, 0x94fc, 0xdb0, 0xa7d5, 0xab37, 0x611e, 0x0, 0x0);
        gbc.writeMem(0x460c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x94fc, gbc.sp());
        EXPECT(0x460e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 001B
        gbc.setState(0x7f8, 0x277e, 0x31f0, 0x65f5, 0xfcf1, 0x59f1, 0x1, 0x1);
        gbc.writeMem(0x7f8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x277e, gbc.sp());
        EXPECT(0x7fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 001C
        gbc.setState(0x35d1, 0x3994, 0x1040, 0x233a, 0x5ae4, 0x5f27, 0x1, 0x1);
        gbc.writeMem(0x35d1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3994, gbc.sp());
        EXPECT(0x35d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 001D
        gbc.setState(0x8bc2, 0x5fff, 0xc8c0, 0x2aad, 0xd436, 0x4bfd, 0x1, 0x1);
        gbc.writeMem(0x8bc2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5fff, gbc.sp());
        EXPECT(0x8bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc2));
        EXPECT(0x8f, gbc.readMem(0x8bc3));
        // CB 8F 001E
        gbc.setState(0x6196, 0xd61e, 0xe2f0, 0x8856, 0x62f6, 0x73da, 0x0, 0x0);
        gbc.writeMem(0x6196, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd61e, gbc.sp());
        EXPECT(0x6198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 001F
        gbc.setState(0x40f1, 0x3c64, 0x8b70, 0xda48, 0x5f5, 0xaf63, 0x1, 0x1);
        gbc.writeMem(0x40f1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3c64, gbc.sp());
        EXPECT(0x40f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0020
        gbc.setState(0x72a1, 0x9dac, 0x81b0, 0x5f41, 0xb588, 0x9ac, 0x1, 0x0);
        gbc.writeMem(0x72a1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9dac, gbc.sp());
        EXPECT(0x72a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0021
        gbc.setState(0x427b, 0x26c6, 0x1320, 0xcc3f, 0xc7ac, 0xe8fa, 0x0, 0x1);
        gbc.writeMem(0x427b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x26c6, gbc.sp());
        EXPECT(0x427d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0024
        gbc.setState(0x19f1, 0x1ae1, 0x2530, 0x42dc, 0xf8f6, 0x39f9, 0x0, 0x1);
        gbc.writeMem(0x19f1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1ae1, gbc.sp());
        EXPECT(0x19f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0025
        gbc.setState(0xdc92, 0x84d7, 0x2340, 0x8bae, 0x383, 0x9f30, 0x1, 0x0);
        gbc.writeMem(0xdc92, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x84d7, gbc.sp());
        EXPECT(0xdc94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc92));
        EXPECT(0x8f, gbc.readMem(0xdc93));
        // CB 8F 0026
        gbc.setState(0xd788, 0x132c, 0x660, 0x9286, 0xfac0, 0x10c3, 0x0, 0x1);
        gbc.writeMem(0xd788, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x132c, gbc.sp());
        EXPECT(0xd78a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd788));
        EXPECT(0x8f, gbc.readMem(0xd789));
        // CB 8F 0027
        gbc.setState(0xb8ea, 0x5ef0, 0x3d20, 0xcd5a, 0x8f6c, 0x6ffb, 0x1, 0x0);
        gbc.writeMem(0xb8ea, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5ef0, gbc.sp());
        EXPECT(0xb8ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ea));
        EXPECT(0x8f, gbc.readMem(0xb8eb));
        // CB 8F 0028
        gbc.setState(0xe492, 0x7e14, 0x81d0, 0x1cb8, 0x45c6, 0xa3fe, 0x1, 0x1);
        gbc.writeMem(0xe492, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7e14, gbc.sp());
        EXPECT(0xe494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe492));
        EXPECT(0x8f, gbc.readMem(0xe493));
        // CB 8F 0029
        gbc.setState(0x8f0f, 0x9ef1, 0x6880, 0x768f, 0xd7f0, 0xd303, 0x0, 0x1);
        gbc.writeMem(0x8f0f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9ef1, gbc.sp());
        EXPECT(0x8f11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f0f));
        EXPECT(0x8f, gbc.readMem(0x8f10));
        // CB 8F 002A
        gbc.setState(0xb86d, 0x29ec, 0x670, 0x6801, 0x559b, 0x83f7, 0x1, 0x0);
        gbc.writeMem(0xb86d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x29ec, gbc.sp());
        EXPECT(0xb86f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb86d));
        EXPECT(0x8f, gbc.readMem(0xb86e));
        // CB 8F 002B
        gbc.setState(0xe175, 0x2116, 0x67d0, 0x8735, 0xcb52, 0x8686, 0x1, 0x1);
        gbc.writeMem(0xe175, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2116, gbc.sp());
        EXPECT(0xe177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe175));
        EXPECT(0x8f, gbc.readMem(0xe176));
        // CB 8F 002C
        gbc.setState(0xe4cc, 0xa27a, 0xcdb0, 0xc80b, 0x19f7, 0x1d52, 0x1, 0x0);
        gbc.writeMem(0xe4cc, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa27a, gbc.sp());
        EXPECT(0xe4ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4cc));
        EXPECT(0x8f, gbc.readMem(0xe4cd));
        // CB 8F 002D
        gbc.setState(0xbb17, 0x3bdc, 0xce40, 0x3243, 0xf76f, 0xb5a1, 0x0, 0x1);
        gbc.writeMem(0xbb17, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3bdc, gbc.sp());
        EXPECT(0xbb19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb17));
        EXPECT(0x8f, gbc.readMem(0xbb18));
        // CB 8F 002E
        gbc.setState(0x10fc, 0x6fa2, 0xb6c0, 0x38, 0xdafb, 0x52b0, 0x1, 0x0);
        gbc.writeMem(0x10fc, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6fa2, gbc.sp());
        EXPECT(0x10fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 002F
        gbc.setState(0x3a10, 0x88dc, 0x9df0, 0xb477, 0x139f, 0xfd44, 0x0, 0x0);
        gbc.writeMem(0x3a10, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x88dc, gbc.sp());
        EXPECT(0x3a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0030
        gbc.setState(0x62dd, 0x9b68, 0xa200, 0xbb2, 0x32a8, 0xfddd, 0x0, 0x1);
        gbc.writeMem(0x62dd, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9b68, gbc.sp());
        EXPECT(0x62df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0032
        gbc.setState(0xe8cb, 0x888e, 0xf2d0, 0xe7dc, 0xe416, 0x38a2, 0x1, 0x1);
        gbc.writeMem(0xe8cb, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x888e, gbc.sp());
        EXPECT(0xe8cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8cb));
        EXPECT(0x8f, gbc.readMem(0xe8cc));
        // CB 8F 0033
        gbc.setState(0xe810, 0x8388, 0x330, 0x3efd, 0x8f5, 0xca8b, 0x1, 0x1);
        gbc.writeMem(0xe810, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8388, gbc.sp());
        EXPECT(0xe812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe810));
        EXPECT(0x8f, gbc.readMem(0xe811));
        // CB 8F 0034
        gbc.setState(0xab0e, 0xd3c6, 0x9640, 0xf26d, 0xa786, 0xd2c8, 0x0, 0x1);
        gbc.writeMem(0xab0e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd3c6, gbc.sp());
        EXPECT(0xab10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab0e));
        EXPECT(0x8f, gbc.readMem(0xab0f));
        // CB 8F 0035
        gbc.setState(0xddd1, 0x19de, 0xc1e0, 0xa07c, 0x9db8, 0x236a, 0x0, 0x0);
        gbc.writeMem(0xddd1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x19de, gbc.sp());
        EXPECT(0xddd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddd1));
        EXPECT(0x8f, gbc.readMem(0xddd2));
        // CB 8F 0036
        gbc.setState(0xe1db, 0xce62, 0x4120, 0xb31f, 0xf09e, 0x57e0, 0x0, 0x1);
        gbc.writeMem(0xe1db, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xce62, gbc.sp());
        EXPECT(0xe1dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1db));
        EXPECT(0x8f, gbc.readMem(0xe1dc));
        // CB 8F 0037
        gbc.setState(0x54dc, 0xd6b4, 0x9ef0, 0x5b37, 0xac9e, 0x54e3, 0x1, 0x1);
        gbc.writeMem(0x54dc, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd6b4, gbc.sp());
        EXPECT(0x54de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0038
        gbc.setState(0xb55b, 0xb772, 0xbb70, 0xe5fe, 0x4d44, 0x4bd0, 0x0, 0x1);
        gbc.writeMem(0xb55b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb772, gbc.sp());
        EXPECT(0xb55d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb55b));
        EXPECT(0x8f, gbc.readMem(0xb55c));
        // CB 8F 0039
        gbc.setState(0x5614, 0xe727, 0x5d40, 0x135b, 0x64a5, 0x4fdc, 0x1, 0x1);
        gbc.writeMem(0x5614, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe727, gbc.sp());
        EXPECT(0x5616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 003A
        gbc.setState(0x8f30, 0xb0c7, 0xe720, 0x6fdf, 0xb144, 0x2f5e, 0x1, 0x1);
        gbc.writeMem(0x8f30, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb0c7, gbc.sp());
        EXPECT(0x8f32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f30));
        EXPECT(0x8f, gbc.readMem(0x8f31));
        // CB 8F 003B
        gbc.setState(0xb56f, 0xfd1b, 0x9050, 0x5bd2, 0xcec2, 0xb04f, 0x1, 0x0);
        gbc.writeMem(0xb56f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xfd1b, gbc.sp());
        EXPECT(0xb571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb56f));
        EXPECT(0x8f, gbc.readMem(0xb570));
        // CB 8F 003C
        gbc.setState(0xcd17, 0xe9e6, 0xe120, 0x6d17, 0xa520, 0x9a12, 0x1, 0x1);
        gbc.writeMem(0xcd17, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe9e6, gbc.sp());
        EXPECT(0xcd19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd17));
        EXPECT(0x8f, gbc.readMem(0xcd18));
        // CB 8F 003D
        gbc.setState(0x630d, 0x4586, 0x5690, 0x765f, 0xbde8, 0x7096, 0x0, 0x1);
        gbc.writeMem(0x630d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4586, gbc.sp());
        EXPECT(0x630f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 003F
        gbc.setState(0x69f2, 0x8993, 0xc570, 0x83a6, 0x3aa8, 0x2cd, 0x0, 0x1);
        gbc.writeMem(0x69f2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8993, gbc.sp());
        EXPECT(0x69f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0040
        gbc.setState(0xe45c, 0x7db4, 0xb690, 0x76c3, 0x129f, 0x2c21, 0x0, 0x1);
        gbc.writeMem(0xe45c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7db4, gbc.sp());
        EXPECT(0xe45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe45c));
        EXPECT(0x8f, gbc.readMem(0xe45d));
        // CB 8F 0042
        gbc.setState(0x9c11, 0x33da, 0x8e10, 0x79da, 0x9320, 0x4fad, 0x1, 0x0);
        gbc.writeMem(0x9c11, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x33da, gbc.sp());
        EXPECT(0x9c13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c11));
        EXPECT(0x8f, gbc.readMem(0x9c12));
        // CB 8F 0043
        gbc.setState(0x7021, 0x26fb, 0xff60, 0x77ff, 0xef40, 0xbf22, 0x0, 0x0);
        gbc.writeMem(0x7021, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x26fb, gbc.sp());
        EXPECT(0x7023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0044
        gbc.setState(0x16ba, 0x595e, 0x4ae0, 0x870a, 0x6c19, 0xf88a, 0x1, 0x1);
        gbc.writeMem(0x16ba, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x595e, gbc.sp());
        EXPECT(0x16bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0045
        gbc.setState(0x2999, 0x5f55, 0xa690, 0x3d61, 0xcdf, 0x1d5f, 0x1, 0x1);
        gbc.writeMem(0x2999, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5f55, gbc.sp());
        EXPECT(0x299b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0046
        gbc.setState(0x6a69, 0x77fc, 0x59f0, 0xed70, 0xb6de, 0xb5fa, 0x0, 0x0);
        gbc.writeMem(0x6a69, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x77fc, gbc.sp());
        EXPECT(0x6a6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0048
        gbc.setState(0x2a74, 0xe88d, 0xd030, 0x72da, 0xfba5, 0x2098, 0x0, 0x0);
        gbc.writeMem(0x2a74, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe88d, gbc.sp());
        EXPECT(0x2a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0049
        gbc.setState(0x62f9, 0xa679, 0x4860, 0x36a6, 0x5534, 0xa9a, 0x0, 0x0);
        gbc.writeMem(0x62f9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa679, gbc.sp());
        EXPECT(0x62fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 004A
        gbc.setState(0xd393, 0xe147, 0xb70, 0x56a0, 0x4487, 0x314b, 0x1, 0x0);
        gbc.writeMem(0xd393, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe147, gbc.sp());
        EXPECT(0xd395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd393));
        EXPECT(0x8f, gbc.readMem(0xd394));
        // CB 8F 004B
        gbc.setState(0x5910, 0x5718, 0xde10, 0x7bb7, 0x123, 0xd401, 0x1, 0x1);
        gbc.writeMem(0x5910, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5718, gbc.sp());
        EXPECT(0x5912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 004C
        gbc.setState(0x6fae, 0xcf0f, 0x4ed0, 0x605f, 0x66e3, 0x6e9, 0x0, 0x0);
        gbc.writeMem(0x6fae, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcf0f, gbc.sp());
        EXPECT(0x6fb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 004D
        gbc.setState(0x693c, 0xb6bc, 0x6ee0, 0xbf0d, 0x2c36, 0xb309, 0x1, 0x1);
        gbc.writeMem(0x693c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb6bc, gbc.sp());
        EXPECT(0x693e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 004E
        gbc.setState(0x67ee, 0x7d4, 0x9890, 0x58cb, 0x4a06, 0x3ddb, 0x0, 0x1);
        gbc.writeMem(0x67ee, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7d4, gbc.sp());
        EXPECT(0x67f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 004F
        gbc.setState(0xc1fc, 0xe0de, 0xb6c0, 0x4e83, 0x3c91, 0xd73b, 0x0, 0x1);
        gbc.writeMem(0xc1fc, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe0de, gbc.sp());
        EXPECT(0xc1fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1fc));
        EXPECT(0x8f, gbc.readMem(0xc1fd));
        // CB 8F 0050
        gbc.setState(0xe8c0, 0x62f9, 0xec50, 0x5c89, 0x5cef, 0x4195, 0x1, 0x0);
        gbc.writeMem(0xe8c0, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x62f9, gbc.sp());
        EXPECT(0xe8c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c0));
        EXPECT(0x8f, gbc.readMem(0xe8c1));
        // CB 8F 0051
        gbc.setState(0xc4dd, 0x9029, 0x7230, 0x2873, 0xcabc, 0x41f9, 0x1, 0x1);
        gbc.writeMem(0xc4dd, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9029, gbc.sp());
        EXPECT(0xc4df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4dd));
        EXPECT(0x8f, gbc.readMem(0xc4de));
        // CB 8F 0052
        gbc.setState(0x8b51, 0xa87, 0xe10, 0xc4e1, 0x24e0, 0x3975, 0x1, 0x1);
        gbc.writeMem(0x8b51, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa87, gbc.sp());
        EXPECT(0x8b53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b51));
        EXPECT(0x8f, gbc.readMem(0x8b52));
        // CB 8F 0053
        gbc.setState(0x3024, 0x6eae, 0x5b50, 0xdf3e, 0x970d, 0x41e1, 0x1, 0x1);
        gbc.writeMem(0x3024, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6eae, gbc.sp());
        EXPECT(0x3026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0054
        gbc.setState(0xc443, 0xa79d, 0xe240, 0xa6dd, 0xab97, 0x8a1f, 0x1, 0x1);
        gbc.writeMem(0xc443, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa79d, gbc.sp());
        EXPECT(0xc445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc443));
        EXPECT(0x8f, gbc.readMem(0xc444));
        // CB 8F 0055
        gbc.setState(0x8b8a, 0x980a, 0x51b0, 0x93d5, 0xc55, 0x98c, 0x0, 0x0);
        gbc.writeMem(0x8b8a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x980a, gbc.sp());
        EXPECT(0x8b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b8a));
        EXPECT(0x8f, gbc.readMem(0x8b8b));
        // CB 8F 0056
        gbc.setState(0x1906, 0x45bd, 0x700, 0x8315, 0x6041, 0x7de4, 0x1, 0x0);
        gbc.writeMem(0x1906, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x45bd, gbc.sp());
        EXPECT(0x1908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0057
        gbc.setState(0x3cb3, 0x9b90, 0x1920, 0x1b84, 0x9396, 0x325e, 0x1, 0x0);
        gbc.writeMem(0x3cb3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9b90, gbc.sp());
        EXPECT(0x3cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0059
        gbc.setState(0x9e4b, 0xfe1b, 0xee70, 0x16c7, 0xe622, 0xf445, 0x1, 0x0);
        gbc.writeMem(0x9e4b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfe1b, gbc.sp());
        EXPECT(0x9e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e4b));
        EXPECT(0x8f, gbc.readMem(0x9e4c));
        // CB 8F 005A
        gbc.setState(0x4a06, 0xfbb, 0x3c60, 0xecfb, 0xe4c9, 0x1464, 0x0, 0x1);
        gbc.writeMem(0x4a06, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfbb, gbc.sp());
        EXPECT(0x4a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 005B
        gbc.setState(0x6d4b, 0xe2cf, 0xb30, 0x1247, 0x8263, 0xb1cd, 0x1, 0x0);
        gbc.writeMem(0x6d4b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe2cf, gbc.sp());
        EXPECT(0x6d4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 005C
        gbc.setState(0xafbe, 0xfcf4, 0x4570, 0xd866, 0x6da3, 0xa65f, 0x0, 0x0);
        gbc.writeMem(0xafbe, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfcf4, gbc.sp());
        EXPECT(0xafc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafbe));
        EXPECT(0x8f, gbc.readMem(0xafbf));
        // CB 8F 005D
        gbc.setState(0xd238, 0xb5e0, 0xb8c0, 0x75e9, 0x23ba, 0xbff5, 0x1, 0x1);
        gbc.writeMem(0xd238, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb5e0, gbc.sp());
        EXPECT(0xd23a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd238));
        EXPECT(0x8f, gbc.readMem(0xd239));
        // CB 8F 005E
        gbc.setState(0x8ab3, 0xbdb5, 0xacb0, 0x32cd, 0x158, 0x160b, 0x0, 0x1);
        gbc.writeMem(0x8ab3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbdb5, gbc.sp());
        EXPECT(0x8ab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab3));
        EXPECT(0x8f, gbc.readMem(0x8ab4));
        // CB 8F 005F
        gbc.setState(0xc03e, 0xbb29, 0xff40, 0x9e9f, 0x3a11, 0x979f, 0x1, 0x1);
        gbc.writeMem(0xc03e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbb29, gbc.sp());
        EXPECT(0xc040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc03e));
        EXPECT(0x8f, gbc.readMem(0xc03f));
        // CB 8F 0060
        gbc.setState(0xd2d5, 0x46da, 0x69f0, 0x23b6, 0xbc35, 0xbd20, 0x0, 0x0);
        gbc.writeMem(0xd2d5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x46da, gbc.sp());
        EXPECT(0xd2d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d5));
        EXPECT(0x8f, gbc.readMem(0xd2d6));
        // CB 8F 0061
        gbc.setState(0x3183, 0xe863, 0x65f0, 0x5f74, 0xe68b, 0xcc88, 0x0, 0x1);
        gbc.writeMem(0x3183, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe863, gbc.sp());
        EXPECT(0x3185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0062
        gbc.setState(0x556b, 0xcff6, 0x27d0, 0xeb7f, 0x6a99, 0x74a3, 0x1, 0x1);
        gbc.writeMem(0x556b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcff6, gbc.sp());
        EXPECT(0x556d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0063
        gbc.setState(0x985a, 0xfc65, 0xb7c0, 0x2a31, 0x1e9d, 0x1ec2, 0x0, 0x0);
        gbc.writeMem(0x985a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfc65, gbc.sp());
        EXPECT(0x985c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x985a));
        EXPECT(0x8f, gbc.readMem(0x985b));
        // CB 8F 0064
        gbc.setState(0xe61c, 0x9517, 0xc470, 0xb0e1, 0xcfdb, 0xb454, 0x1, 0x0);
        gbc.writeMem(0xe61c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9517, gbc.sp());
        EXPECT(0xe61e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe61c));
        EXPECT(0x8f, gbc.readMem(0xe61d));
        // CB 8F 0065
        gbc.setState(0xd55d, 0x590c, 0x1660, 0x11d4, 0x44f9, 0x823a, 0x1, 0x0);
        gbc.writeMem(0xd55d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x590c, gbc.sp());
        EXPECT(0xd55f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd55d));
        EXPECT(0x8f, gbc.readMem(0xd55e));
        // CB 8F 0066
        gbc.setState(0xd1bd, 0x8a81, 0x7d10, 0xdfd9, 0xa7d9, 0x279a, 0x0, 0x0);
        gbc.writeMem(0xd1bd, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8a81, gbc.sp());
        EXPECT(0xd1bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1bd));
        EXPECT(0x8f, gbc.readMem(0xd1be));
        // CB 8F 0067
        gbc.setState(0xe007, 0x67f, 0xd4c0, 0xa6a1, 0x83f4, 0xfc63, 0x0, 0x0);
        gbc.writeMem(0xe007, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x67f, gbc.sp());
        EXPECT(0xe009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe007));
        EXPECT(0x8f, gbc.readMem(0xe008));
        // CB 8F 0068
        gbc.setState(0xb1da, 0xbb6a, 0xb080, 0xaa2f, 0x5e86, 0x3264, 0x1, 0x1);
        gbc.writeMem(0xb1da, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbb6a, gbc.sp());
        EXPECT(0xb1dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1da));
        EXPECT(0x8f, gbc.readMem(0xb1db));
        // CB 8F 0069
        gbc.setState(0x5662, 0xc7da, 0x73a0, 0xf70c, 0xafb3, 0x8dee, 0x1, 0x0);
        gbc.writeMem(0x5662, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc7da, gbc.sp());
        EXPECT(0x5664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 006A
        gbc.setState(0x25b8, 0x5711, 0x8680, 0x12a5, 0xd259, 0x2ee3, 0x1, 0x0);
        gbc.writeMem(0x25b8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5711, gbc.sp());
        EXPECT(0x25ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 006B
        gbc.setState(0x69b3, 0xf76f, 0x9450, 0xf2bd, 0xba15, 0x10fa, 0x0, 0x0);
        gbc.writeMem(0x69b3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf76f, gbc.sp());
        EXPECT(0x69b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 006C
        gbc.setState(0x9a7b, 0xa239, 0x68c0, 0x5fb6, 0x39f2, 0x66ba, 0x1, 0x1);
        gbc.writeMem(0x9a7b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa239, gbc.sp());
        EXPECT(0x9a7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a7b));
        EXPECT(0x8f, gbc.readMem(0x9a7c));
        // CB 8F 006D
        gbc.setState(0x6afe, 0x699a, 0x79a0, 0xd628, 0x98e8, 0x40af, 0x1, 0x1);
        gbc.writeMem(0x6afe, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x699a, gbc.sp());
        EXPECT(0x6b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 006E
        gbc.setState(0x855c, 0x11de, 0xec30, 0x4ab3, 0x3d0e, 0xf0e5, 0x0, 0x0);
        gbc.writeMem(0x855c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x11de, gbc.sp());
        EXPECT(0x855e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x855c));
        EXPECT(0x8f, gbc.readMem(0x855d));
        // CB 8F 006F
        gbc.setState(0x6c2a, 0x3391, 0xc710, 0x378c, 0x71a4, 0xb0d9, 0x1, 0x1);
        gbc.writeMem(0x6c2a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3391, gbc.sp());
        EXPECT(0x6c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0070
        gbc.setState(0x6351, 0x538e, 0x3430, 0x7512, 0xff9, 0x1036, 0x0, 0x0);
        gbc.writeMem(0x6351, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x538e, gbc.sp());
        EXPECT(0x6353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0071
        gbc.setState(0x33d, 0x6d74, 0x3db0, 0xccf3, 0xfb0b, 0x2a67, 0x1, 0x0);
        gbc.writeMem(0x33d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6d74, gbc.sp());
        EXPECT(0x33f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0072
        gbc.setState(0xc40b, 0x5322, 0x5b30, 0x9aed, 0xd6ce, 0x9f77, 0x1, 0x1);
        gbc.writeMem(0xc40b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5322, gbc.sp());
        EXPECT(0xc40d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc40b));
        EXPECT(0x8f, gbc.readMem(0xc40c));
        // CB 8F 0073
        gbc.setState(0xc341, 0xee85, 0x1fe0, 0x2a29, 0x8d9f, 0xf1be, 0x0, 0x1);
        gbc.writeMem(0xc341, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xee85, gbc.sp());
        EXPECT(0xc343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc341));
        EXPECT(0x8f, gbc.readMem(0xc342));
        // CB 8F 0074
        gbc.setState(0xdc50, 0x732d, 0x3580, 0x8260, 0x1471, 0x940, 0x0, 0x1);
        gbc.writeMem(0xdc50, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x732d, gbc.sp());
        EXPECT(0xdc52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc50));
        EXPECT(0x8f, gbc.readMem(0xdc51));
        // CB 8F 0075
        gbc.setState(0x3393, 0x5454, 0x6000, 0x456a, 0xa855, 0xf32f, 0x0, 0x1);
        gbc.writeMem(0x3393, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5454, gbc.sp());
        EXPECT(0x3395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0076
        gbc.setState(0x46ea, 0x6b3a, 0x1370, 0xb4cd, 0x61d3, 0xdfc2, 0x1, 0x1);
        gbc.writeMem(0x46ea, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6b3a, gbc.sp());
        EXPECT(0x46ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0077
        gbc.setState(0xb2f7, 0x7e27, 0x21b0, 0x662e, 0x1b3b, 0x4d10, 0x0, 0x0);
        gbc.writeMem(0xb2f7, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7e27, gbc.sp());
        EXPECT(0xb2f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f7));
        EXPECT(0x8f, gbc.readMem(0xb2f8));
        // CB 8F 0078
        gbc.setState(0x62a5, 0xecc2, 0x3290, 0x6a6f, 0xa3d3, 0xf789, 0x0, 0x0);
        gbc.writeMem(0x62a5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xecc2, gbc.sp());
        EXPECT(0x62a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 007A
        gbc.setState(0x902b, 0x3b37, 0xde10, 0xdf27, 0x53c9, 0xf262, 0x1, 0x0);
        gbc.writeMem(0x902b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3b37, gbc.sp());
        EXPECT(0x902d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x902b));
        EXPECT(0x8f, gbc.readMem(0x902c));
        // CB 8F 007C
        gbc.setState(0x2081, 0xbb58, 0x7780, 0xfe7, 0x1c1, 0x6de, 0x0, 0x1);
        gbc.writeMem(0x2081, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xbb58, gbc.sp());
        EXPECT(0x2083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 007D
        gbc.setState(0x15e4, 0xf49b, 0xd7a0, 0xcff0, 0xc6c9, 0x9853, 0x0, 0x0);
        gbc.writeMem(0x15e4, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf49b, gbc.sp());
        EXPECT(0x15e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 007E
        gbc.setState(0xd202, 0x89d7, 0x93e0, 0xb875, 0x6f0e, 0xcc9c, 0x0, 0x1);
        gbc.writeMem(0xd202, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x89d7, gbc.sp());
        EXPECT(0xd204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd202));
        EXPECT(0x8f, gbc.readMem(0xd203));
        // CB 8F 007F
        gbc.setState(0x100c, 0xa0e8, 0xdea0, 0x8738, 0x832a, 0xbc7c, 0x1, 0x0);
        gbc.writeMem(0x100c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa0e8, gbc.sp());
        EXPECT(0x100e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0080
        gbc.setState(0x8dc6, 0x2f93, 0x6e10, 0xef5b, 0xd98d, 0xac68, 0x0, 0x0);
        gbc.writeMem(0x8dc6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2f93, gbc.sp());
        EXPECT(0x8dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc6));
        EXPECT(0x8f, gbc.readMem(0x8dc7));
        // CB 8F 0081
        gbc.setState(0x68eb, 0xa6d8, 0x5310, 0x7cca, 0xdfd0, 0x4b93, 0x0, 0x1);
        gbc.writeMem(0x68eb, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa6d8, gbc.sp());
        EXPECT(0x68ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0082
        gbc.setState(0xca6f, 0xfbbb, 0x9160, 0x602d, 0xb823, 0xed42, 0x0, 0x1);
        gbc.writeMem(0xca6f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfbbb, gbc.sp());
        EXPECT(0xca71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca6f));
        EXPECT(0x8f, gbc.readMem(0xca70));
        // CB 8F 0083
        gbc.setState(0xe52c, 0xc42b, 0xc290, 0x17c9, 0xe397, 0xf78f, 0x1, 0x0);
        gbc.writeMem(0xe52c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc42b, gbc.sp());
        EXPECT(0xe52e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe52c));
        EXPECT(0x8f, gbc.readMem(0xe52d));
        // CB 8F 0084
        gbc.setState(0xa6ae, 0x77fb, 0xa1a0, 0x295f, 0xb01b, 0x96bd, 0x0, 0x0);
        gbc.writeMem(0xa6ae, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x77fb, gbc.sp());
        EXPECT(0xa6b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ae));
        EXPECT(0x8f, gbc.readMem(0xa6af));
        // CB 8F 0085
        gbc.setState(0xd33b, 0x6977, 0x4a0, 0x24dc, 0x9070, 0xe5e2, 0x0, 0x0);
        gbc.writeMem(0xd33b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6977, gbc.sp());
        EXPECT(0xd33d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd33b));
        EXPECT(0x8f, gbc.readMem(0xd33c));
        // CB 8F 0086
        gbc.setState(0xb757, 0xc1c9, 0xb760, 0x8451, 0xfe28, 0xd137, 0x0, 0x1);
        gbc.writeMem(0xb757, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc1c9, gbc.sp());
        EXPECT(0xb759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb757));
        EXPECT(0x8f, gbc.readMem(0xb758));
        // CB 8F 0088
        gbc.setState(0x96bb, 0x6784, 0x6640, 0x4427, 0x9362, 0x6808, 0x0, 0x0);
        gbc.writeMem(0x96bb, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6784, gbc.sp());
        EXPECT(0x96bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96bb));
        EXPECT(0x8f, gbc.readMem(0x96bc));
        // CB 8F 0089
        gbc.setState(0xe649, 0x7dbc, 0x27d0, 0x19af, 0x1521, 0xc316, 0x0, 0x0);
        gbc.writeMem(0xe649, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7dbc, gbc.sp());
        EXPECT(0xe64b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe649));
        EXPECT(0x8f, gbc.readMem(0xe64a));
        // CB 8F 008A
        gbc.setState(0xb985, 0x2f9, 0xe240, 0x7061, 0xcc9b, 0xc760, 0x0, 0x0);
        gbc.writeMem(0xb985, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2f9, gbc.sp());
        EXPECT(0xb987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb985));
        EXPECT(0x8f, gbc.readMem(0xb986));
        // CB 8F 008B
        gbc.setState(0xe59e, 0x1f95, 0x8ad0, 0x2cbd, 0xb7ea, 0x555, 0x0, 0x0);
        gbc.writeMem(0xe59e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1f95, gbc.sp());
        EXPECT(0xe5a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe59e));
        EXPECT(0x8f, gbc.readMem(0xe59f));
        // CB 8F 008C
        gbc.setState(0xa712, 0x772a, 0xe020, 0xdca6, 0xea3a, 0xc9e, 0x1, 0x1);
        gbc.writeMem(0xa712, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x772a, gbc.sp());
        EXPECT(0xa714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa712));
        EXPECT(0x8f, gbc.readMem(0xa713));
        // CB 8F 008D
        gbc.setState(0xbac7, 0xfff0, 0x8a40, 0x29f3, 0x7299, 0x6e30, 0x0, 0x1);
        gbc.writeMem(0xbac7, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfff0, gbc.sp());
        EXPECT(0xbac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac7));
        EXPECT(0x8f, gbc.readMem(0xbac8));
        // CB 8F 008E
        gbc.setState(0xe086, 0x4c5, 0xf820, 0x2fb0, 0x4f65, 0x4c6c, 0x1, 0x0);
        gbc.writeMem(0xe086, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4c5, gbc.sp());
        EXPECT(0xe088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe086));
        EXPECT(0x8f, gbc.readMem(0xe087));
        // CB 8F 008F
        gbc.setState(0x90a3, 0xcdb7, 0x5a30, 0xaf42, 0x1a54, 0xc4ff, 0x1, 0x1);
        gbc.writeMem(0x90a3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcdb7, gbc.sp());
        EXPECT(0x90a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90a3));
        EXPECT(0x8f, gbc.readMem(0x90a4));
        // CB 8F 0090
        gbc.setState(0xc730, 0xfd58, 0x3760, 0x2fe4, 0x92c0, 0x2366, 0x1, 0x0);
        gbc.writeMem(0xc730, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xfd58, gbc.sp());
        EXPECT(0xc732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc730));
        EXPECT(0x8f, gbc.readMem(0xc731));
        // CB 8F 0091
        gbc.setState(0xa98a, 0x9068, 0xe8f0, 0xf915, 0xd415, 0x1f93, 0x0, 0x1);
        gbc.writeMem(0xa98a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9068, gbc.sp());
        EXPECT(0xa98c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa98a));
        EXPECT(0x8f, gbc.readMem(0xa98b));
        // CB 8F 0092
        gbc.setState(0xb476, 0x4ba, 0xd2d0, 0x2356, 0xf8c0, 0xf160, 0x0, 0x1);
        gbc.writeMem(0xb476, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4ba, gbc.sp());
        EXPECT(0xb478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb476));
        EXPECT(0x8f, gbc.readMem(0xb477));
        // CB 8F 0093
        gbc.setState(0x1ae, 0xaef8, 0x6e0, 0x21cc, 0xa263, 0x9192, 0x1, 0x1);
        gbc.writeMem(0x1ae, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xaef8, gbc.sp());
        EXPECT(0x1b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0095
        gbc.setState(0x4fe9, 0x59ca, 0x8a40, 0xb062, 0x2233, 0x3e80, 0x0, 0x0);
        gbc.writeMem(0x4fe9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x59ca, gbc.sp());
        EXPECT(0x4feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0097
        gbc.setState(0xc49, 0x4466, 0x6f90, 0x5bcd, 0x9be, 0xa747, 0x1, 0x0);
        gbc.writeMem(0xc49, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4466, gbc.sp());
        EXPECT(0xc4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0098
        gbc.setState(0xb679, 0x1b79, 0x76c0, 0xa7b0, 0x4574, 0x8ac, 0x1, 0x1);
        gbc.writeMem(0xb679, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1b79, gbc.sp());
        EXPECT(0xb67b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb679));
        EXPECT(0x8f, gbc.readMem(0xb67a));
        // CB 8F 0099
        gbc.setState(0xc5b2, 0x3a84, 0x7700, 0x36e3, 0xefff, 0x2bf3, 0x0, 0x0);
        gbc.writeMem(0xc5b2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3a84, gbc.sp());
        EXPECT(0xc5b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5b2));
        EXPECT(0x8f, gbc.readMem(0xc5b3));
        // CB 8F 009A
        gbc.setState(0xd367, 0xff8b, 0xcf0, 0xd7e1, 0x5a7d, 0x35d3, 0x1, 0x0);
        gbc.writeMem(0xd367, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xff8b, gbc.sp());
        EXPECT(0xd369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd367));
        EXPECT(0x8f, gbc.readMem(0xd368));
        // CB 8F 009B
        gbc.setState(0x1f14, 0xf1e0, 0xe9a0, 0xff7e, 0x2f3a, 0xbf54, 0x1, 0x0);
        gbc.writeMem(0x1f14, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf1e0, gbc.sp());
        EXPECT(0x1f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 009C
        gbc.setState(0x5884, 0xe960, 0xafd0, 0x735a, 0x18ab, 0x293f, 0x1, 0x1);
        gbc.writeMem(0x5884, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe960, gbc.sp());
        EXPECT(0x5886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 009D
        gbc.setState(0x6b2, 0xcaaf, 0x4de0, 0x6eca, 0x9c8a, 0x4521, 0x1, 0x0);
        gbc.writeMem(0x6b2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcaaf, gbc.sp());
        EXPECT(0x6b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 009E
        gbc.setState(0x1d14, 0xd25, 0x4fb0, 0x2298, 0x929d, 0xd127, 0x0, 0x1);
        gbc.writeMem(0x1d14, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd25, gbc.sp());
        EXPECT(0x1d16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 009F
        gbc.setState(0x37f7, 0xab57, 0x4d30, 0x4eaa, 0xec8, 0x817, 0x1, 0x0);
        gbc.writeMem(0x37f7, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xab57, gbc.sp());
        EXPECT(0x37f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00A0
        gbc.setState(0xa99a, 0x35d2, 0xd550, 0x12ed, 0xc958, 0x4d4a, 0x1, 0x0);
        gbc.writeMem(0xa99a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x35d2, gbc.sp());
        EXPECT(0xa99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa99a));
        EXPECT(0x8f, gbc.readMem(0xa99b));
        // CB 8F 00A1
        gbc.setState(0x692d, 0xe81, 0xd330, 0x7a9e, 0x4028, 0x8424, 0x1, 0x1);
        gbc.writeMem(0x692d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe81, gbc.sp());
        EXPECT(0x692f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00A2
        gbc.setState(0x6477, 0x4280, 0xee90, 0x1ee6, 0x9449, 0xd4b2, 0x0, 0x0);
        gbc.writeMem(0x6477, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4280, gbc.sp());
        EXPECT(0x6479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00A3
        gbc.setState(0xe42c, 0x438b, 0x2850, 0xc954, 0x540e, 0xe41d, 0x1, 0x0);
        gbc.writeMem(0xe42c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x438b, gbc.sp());
        EXPECT(0xe42e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe42c));
        EXPECT(0x8f, gbc.readMem(0xe42d));
        // CB 8F 00A4
        gbc.setState(0x9b44, 0x4748, 0x9f00, 0xfd48, 0xa705, 0xbe5f, 0x0, 0x1);
        gbc.writeMem(0x9b44, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4748, gbc.sp());
        EXPECT(0x9b46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b44));
        EXPECT(0x8f, gbc.readMem(0x9b45));
        // CB 8F 00A5
        gbc.setState(0x8d54, 0x2e70, 0xb800, 0x9391, 0xa4d6, 0xb4ec, 0x1, 0x1);
        gbc.writeMem(0x8d54, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2e70, gbc.sp());
        EXPECT(0x8d56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d54));
        EXPECT(0x8f, gbc.readMem(0x8d55));
        // CB 8F 00A6
        gbc.setState(0xe420, 0x5bb4, 0x2440, 0xe79c, 0xbfa6, 0xcbd2, 0x1, 0x0);
        gbc.writeMem(0xe420, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5bb4, gbc.sp());
        EXPECT(0xe422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe420));
        EXPECT(0x8f, gbc.readMem(0xe421));
        // CB 8F 00A7
        gbc.setState(0xb0e1, 0x7041, 0x5bc0, 0xadfc, 0x7da9, 0xcea4, 0x1, 0x1);
        gbc.writeMem(0xb0e1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7041, gbc.sp());
        EXPECT(0xb0e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e1));
        EXPECT(0x8f, gbc.readMem(0xb0e2));
        // CB 8F 00A8
        gbc.setState(0x2955, 0x18bf, 0x8730, 0x28db, 0xdbcf, 0x3c2f, 0x0, 0x1);
        gbc.writeMem(0x2955, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x18bf, gbc.sp());
        EXPECT(0x2957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00A9
        gbc.setState(0x1f14, 0x4746, 0x99e0, 0xbf98, 0x1609, 0xc698, 0x0, 0x1);
        gbc.writeMem(0x1f14, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4746, gbc.sp());
        EXPECT(0x1f16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00AA
        gbc.setState(0x4eb5, 0x38e7, 0x9680, 0xd306, 0x5d67, 0xbef7, 0x0, 0x0);
        gbc.writeMem(0x4eb5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x38e7, gbc.sp());
        EXPECT(0x4eb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00AB
        gbc.setState(0xe198, 0x502b, 0x1570, 0x7ee1, 0x9a58, 0x6abd, 0x1, 0x1);
        gbc.writeMem(0xe198, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x502b, gbc.sp());
        EXPECT(0xe19a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe198));
        EXPECT(0x8f, gbc.readMem(0xe199));
        // CB 8F 00AC
        gbc.setState(0x72b2, 0x898e, 0xb6b0, 0x50d8, 0xdbdd, 0x4cec, 0x1, 0x0);
        gbc.writeMem(0x72b2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x898e, gbc.sp());
        EXPECT(0x72b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00AE
        gbc.setState(0x1dae, 0x57b1, 0x41f0, 0x9993, 0x3b74, 0x6f7e, 0x1, 0x0);
        gbc.writeMem(0x1dae, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x57b1, gbc.sp());
        EXPECT(0x1db0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00AF
        gbc.setState(0xcb4d, 0xfa61, 0xfed0, 0x5564, 0x9d72, 0x83b7, 0x1, 0x0);
        gbc.writeMem(0xcb4d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xfa61, gbc.sp());
        EXPECT(0xcb4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb4d));
        EXPECT(0x8f, gbc.readMem(0xcb4e));
        // CB 8F 00B0
        gbc.setState(0xa689, 0xc1a0, 0xb240, 0xc04d, 0xd36b, 0x8213, 0x1, 0x0);
        gbc.writeMem(0xa689, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc1a0, gbc.sp());
        EXPECT(0xa68b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa689));
        EXPECT(0x8f, gbc.readMem(0xa68a));
        // CB 8F 00B1
        gbc.setState(0x9656, 0x6f56, 0x3100, 0xa535, 0x5f3c, 0xdf0, 0x1, 0x0);
        gbc.writeMem(0x9656, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6f56, gbc.sp());
        EXPECT(0x9658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9656));
        EXPECT(0x8f, gbc.readMem(0x9657));
        // CB 8F 00B2
        gbc.setState(0xcd89, 0x6ce6, 0x8110, 0xf455, 0xd4b4, 0xc5b0, 0x0, 0x0);
        gbc.writeMem(0xcd89, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6ce6, gbc.sp());
        EXPECT(0xcd8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd89));
        EXPECT(0x8f, gbc.readMem(0xcd8a));
        // CB 8F 00B4
        gbc.setState(0x9101, 0x7f4, 0xc800, 0x7d8, 0x6f5, 0x8cb4, 0x1, 0x1);
        gbc.writeMem(0x9101, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7f4, gbc.sp());
        EXPECT(0x9103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9101));
        EXPECT(0x8f, gbc.readMem(0x9102));
        // CB 8F 00B5
        gbc.setState(0xea79, 0x70ce, 0x6e40, 0x23b5, 0xf584, 0xa560, 0x1, 0x1);
        gbc.writeMem(0xea79, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x70ce, gbc.sp());
        EXPECT(0xea7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea79));
        EXPECT(0x8f, gbc.readMem(0xea7a));
        // CB 8F 00B6
        gbc.setState(0xed37, 0x8b36, 0x9b0, 0x58a2, 0x471e, 0x853d, 0x1, 0x1);
        gbc.writeMem(0xed37, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8b36, gbc.sp());
        EXPECT(0xed39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed37));
        EXPECT(0x8f, gbc.readMem(0xed38));
        // CB 8F 00B7
        gbc.setState(0xe7d, 0x3241, 0xcf80, 0x75ad, 0xc94, 0x5ae2, 0x0, 0x1);
        gbc.writeMem(0xe7d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3241, gbc.sp());
        EXPECT(0xe7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00B8
        gbc.setState(0xd157, 0x1093, 0x7a10, 0x6518, 0x6dec, 0xf36a, 0x1, 0x0);
        gbc.writeMem(0xd157, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1093, gbc.sp());
        EXPECT(0xd159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd157));
        EXPECT(0x8f, gbc.readMem(0xd158));
        // CB 8F 00B9
        gbc.setState(0x9ed7, 0x7b, 0x5470, 0x7dec, 0x6733, 0x83cd, 0x0, 0x0);
        gbc.writeMem(0x9ed7, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7b, gbc.sp());
        EXPECT(0x9ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed7));
        EXPECT(0x8f, gbc.readMem(0x9ed8));
        // CB 8F 00BA
        gbc.setState(0x1a81, 0x62b9, 0x8f40, 0x9cd4, 0x6b17, 0x596e, 0x0, 0x0);
        gbc.writeMem(0x1a81, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x62b9, gbc.sp());
        EXPECT(0x1a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00BB
        gbc.setState(0x52d1, 0x4b5a, 0x2090, 0xfbbc, 0x1c1e, 0xb6fd, 0x1, 0x1);
        gbc.writeMem(0x52d1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4b5a, gbc.sp());
        EXPECT(0x52d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00BC
        gbc.setState(0xc2f1, 0x5414, 0x3100, 0x79b, 0x29d2, 0xc706, 0x0, 0x1);
        gbc.writeMem(0xc2f1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5414, gbc.sp());
        EXPECT(0xc2f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f1));
        EXPECT(0x8f, gbc.readMem(0xc2f2));
        // CB 8F 00BD
        gbc.setState(0x9ea0, 0xc89, 0x1fd0, 0x939f, 0xd13d, 0x448d, 0x1, 0x1);
        gbc.writeMem(0x9ea0, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc89, gbc.sp());
        EXPECT(0x9ea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea0));
        EXPECT(0x8f, gbc.readMem(0x9ea1));
        // CB 8F 00BE
        gbc.setState(0xa2e3, 0xd1f, 0xcf90, 0x6c91, 0x6eb0, 0xcb53, 0x1, 0x1);
        gbc.writeMem(0xa2e3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd1f, gbc.sp());
        EXPECT(0xa2e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e3));
        EXPECT(0x8f, gbc.readMem(0xa2e4));
        // CB 8F 00BF
        gbc.setState(0x791b, 0xf74, 0x1430, 0x2253, 0xff28, 0x8156, 0x0, 0x0);
        gbc.writeMem(0x791b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf74, gbc.sp());
        EXPECT(0x791d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00C2
        gbc.setState(0x225, 0xfc7a, 0x1480, 0xde9b, 0xb1b8, 0x28b7, 0x0, 0x1);
        gbc.writeMem(0x225, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xfc7a, gbc.sp());
        EXPECT(0x227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00C3
        gbc.setState(0x92f3, 0x6b5b, 0xccc0, 0x93e4, 0x487e, 0xb1d7, 0x1, 0x0);
        gbc.writeMem(0x92f3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6b5b, gbc.sp());
        EXPECT(0x92f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92f3));
        EXPECT(0x8f, gbc.readMem(0x92f4));
        // CB 8F 00C4
        gbc.setState(0x77f8, 0x5cf1, 0x3f60, 0x122c, 0x36c8, 0xfc87, 0x0, 0x1);
        gbc.writeMem(0x77f8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5cf1, gbc.sp());
        EXPECT(0x77fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00C5
        gbc.setState(0x314f, 0x66c2, 0xeb10, 0x8e1a, 0x9786, 0x70b1, 0x1, 0x0);
        gbc.writeMem(0x314f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x66c2, gbc.sp());
        EXPECT(0x3151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00C6
        gbc.setState(0xa673, 0x2851, 0x3470, 0xa52e, 0x63ee, 0xbd2, 0x0, 0x1);
        gbc.writeMem(0xa673, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2851, gbc.sp());
        EXPECT(0xa675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa673));
        EXPECT(0x8f, gbc.readMem(0xa674));
        // CB 8F 00C7
        gbc.setState(0x1dc2, 0x6b52, 0x2880, 0xc220, 0xcc1f, 0x90b9, 0x0, 0x0);
        gbc.writeMem(0x1dc2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6b52, gbc.sp());
        EXPECT(0x1dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00C8
        gbc.setState(0xd4e, 0x6763, 0x59b0, 0x9fb5, 0x7838, 0xd267, 0x0, 0x1);
        gbc.writeMem(0xd4e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6763, gbc.sp());
        EXPECT(0xd50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00C9
        gbc.setState(0x7821, 0xc7c2, 0xefa0, 0xd093, 0xb3b9, 0xa3fe, 0x0, 0x0);
        gbc.writeMem(0x7821, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc7c2, gbc.sp());
        EXPECT(0x7823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00CA
        gbc.setState(0xd96e, 0x66d8, 0x5680, 0x9317, 0x6897, 0x219b, 0x1, 0x0);
        gbc.writeMem(0xd96e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x66d8, gbc.sp());
        EXPECT(0xd970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd96e));
        EXPECT(0x8f, gbc.readMem(0xd96f));
        // CB 8F 00CB
        gbc.setState(0xcd74, 0x8fae, 0x9220, 0x140d, 0xc8c8, 0xbfa1, 0x0, 0x1);
        gbc.writeMem(0xcd74, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8fae, gbc.sp());
        EXPECT(0xcd76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd74));
        EXPECT(0x8f, gbc.readMem(0xcd75));
        // CB 8F 00CC
        gbc.setState(0x2621, 0xea9e, 0xd4b0, 0x9aa3, 0x2ef4, 0x9ceb, 0x1, 0x0);
        gbc.writeMem(0x2621, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xea9e, gbc.sp());
        EXPECT(0x2623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00CD
        gbc.setState(0x1212, 0xa5c3, 0xdde0, 0x8051, 0x22ab, 0xd5d8, 0x0, 0x1);
        gbc.writeMem(0x1212, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa5c3, gbc.sp());
        EXPECT(0x1214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00CE
        gbc.setState(0x4c44, 0x1c80, 0xbe20, 0x238, 0xd046, 0xc5e2, 0x0, 0x0);
        gbc.writeMem(0x4c44, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1c80, gbc.sp());
        EXPECT(0x4c46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00CF
        gbc.setState(0x653b, 0xa7e5, 0x29c0, 0x4109, 0xa988, 0x1235, 0x1, 0x0);
        gbc.writeMem(0x653b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa7e5, gbc.sp());
        EXPECT(0x653d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00D0
        gbc.setState(0xa520, 0xb1ee, 0x80a0, 0x49cf, 0x851e, 0x33d7, 0x0, 0x1);
        gbc.writeMem(0xa520, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb1ee, gbc.sp());
        EXPECT(0xa522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa520));
        EXPECT(0x8f, gbc.readMem(0xa521));
        // CB 8F 00D1
        gbc.setState(0xed87, 0x5bc0, 0x62c0, 0x1210, 0xa99b, 0x7716, 0x1, 0x0);
        gbc.writeMem(0xed87, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5bc0, gbc.sp());
        EXPECT(0xed89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed87));
        EXPECT(0x8f, gbc.readMem(0xed88));
        // CB 8F 00D2
        gbc.setState(0x154d, 0x3666, 0x8660, 0x1a5c, 0x36a0, 0x5c7e, 0x1, 0x0);
        gbc.writeMem(0x154d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3666, gbc.sp());
        EXPECT(0x154f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00D3
        gbc.setState(0x583b, 0x6b14, 0xf4d0, 0xe3d4, 0x44ea, 0x4a42, 0x0, 0x0);
        gbc.writeMem(0x583b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6b14, gbc.sp());
        EXPECT(0x583d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00D4
        gbc.setState(0xd036, 0x732a, 0xe0a0, 0xbc6d, 0x9581, 0x4567, 0x1, 0x0);
        gbc.writeMem(0xd036, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x732a, gbc.sp());
        EXPECT(0xd038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd036));
        EXPECT(0x8f, gbc.readMem(0xd037));
        // CB 8F 00D5
        gbc.setState(0x4077, 0x1df9, 0x8270, 0x4495, 0xcb84, 0xd32d, 0x1, 0x0);
        gbc.writeMem(0x4077, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1df9, gbc.sp());
        EXPECT(0x4079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00D6
        gbc.setState(0x7ce0, 0xbee6, 0x5e20, 0x3fdd, 0xbb15, 0xe67c, 0x0, 0x1);
        gbc.writeMem(0x7ce0, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbee6, gbc.sp());
        EXPECT(0x7ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00D7
        gbc.setState(0xab75, 0x5fff, 0x6910, 0x5593, 0xb3e3, 0x306a, 0x1, 0x0);
        gbc.writeMem(0xab75, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5fff, gbc.sp());
        EXPECT(0xab77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab75));
        EXPECT(0x8f, gbc.readMem(0xab76));
        // CB 8F 00D8
        gbc.setState(0x5144, 0x8a9c, 0x5f70, 0x434d, 0xa368, 0x1368, 0x0, 0x1);
        gbc.writeMem(0x5144, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8a9c, gbc.sp());
        EXPECT(0x5146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00D9
        gbc.setState(0xd5d8, 0xd93, 0xf9e0, 0xea11, 0x3e91, 0xecad, 0x1, 0x1);
        gbc.writeMem(0xd5d8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd93, gbc.sp());
        EXPECT(0xd5da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d8));
        EXPECT(0x8f, gbc.readMem(0xd5d9));
        // CB 8F 00DA
        gbc.setState(0x72a8, 0x5439, 0x2220, 0xab0c, 0x2f92, 0xf0ec, 0x1, 0x1);
        gbc.writeMem(0x72a8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5439, gbc.sp());
        EXPECT(0x72aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00DB
        gbc.setState(0x13e1, 0x8407, 0x9b00, 0xd74f, 0xeaef, 0x6afe, 0x1, 0x1);
        gbc.writeMem(0x13e1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8407, gbc.sp());
        EXPECT(0x13e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00DC
        gbc.setState(0x530a, 0x5bab, 0xe180, 0x2196, 0x729f, 0x90d3, 0x0, 0x1);
        gbc.writeMem(0x530a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5bab, gbc.sp());
        EXPECT(0x530c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00DE
        gbc.setState(0x4aac, 0xd079, 0x81d0, 0x2e01, 0xe0c7, 0xeab5, 0x0, 0x0);
        gbc.writeMem(0x4aac, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd079, gbc.sp());
        EXPECT(0x4aae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00DF
        gbc.setState(0x8c51, 0xed35, 0x7d20, 0x5839, 0xbf1e, 0x1c, 0x1, 0x1);
        gbc.writeMem(0x8c51, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xed35, gbc.sp());
        EXPECT(0x8c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c51));
        EXPECT(0x8f, gbc.readMem(0x8c52));
        // CB 8F 00E0
        gbc.setState(0x105d, 0xd327, 0x1470, 0x12bb, 0x8f64, 0x5b70, 0x1, 0x0);
        gbc.writeMem(0x105d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd327, gbc.sp());
        EXPECT(0x105f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00E1
        gbc.setState(0x1c60, 0x3236, 0xa090, 0xe600, 0x8e68, 0x7bac, 0x1, 0x1);
        gbc.writeMem(0x1c60, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3236, gbc.sp());
        EXPECT(0x1c62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00E3
        gbc.setState(0x387f, 0xc0be, 0x6330, 0x4ab7, 0xfe29, 0x2ddd, 0x1, 0x1);
        gbc.writeMem(0x387f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc0be, gbc.sp());
        EXPECT(0x3881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00E4
        gbc.setState(0x606a, 0x2eee, 0x4520, 0xecee, 0x8244, 0x33c3, 0x0, 0x0);
        gbc.writeMem(0x606a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2eee, gbc.sp());
        EXPECT(0x606c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00E5
        gbc.setState(0xaf5f, 0xb474, 0xdcc0, 0x5b7c, 0x9683, 0xb723, 0x1, 0x1);
        gbc.writeMem(0xaf5f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb474, gbc.sp());
        EXPECT(0xaf61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf5f));
        EXPECT(0x8f, gbc.readMem(0xaf60));
        // CB 8F 00E6
        gbc.setState(0x2904, 0x23fe, 0x5ce0, 0xc6f3, 0x3d6d, 0x6922, 0x0, 0x0);
        gbc.writeMem(0x2904, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x23fe, gbc.sp());
        EXPECT(0x2906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00E7
        gbc.setState(0x87d9, 0xfdc4, 0x7250, 0x3127, 0x4034, 0x7245, 0x0, 0x1);
        gbc.writeMem(0x87d9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfdc4, gbc.sp());
        EXPECT(0x87db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d9));
        EXPECT(0x8f, gbc.readMem(0x87da));
        // CB 8F 00E8
        gbc.setState(0x3a20, 0x17d2, 0xc530, 0x7adf, 0xab43, 0x4183, 0x0, 0x0);
        gbc.writeMem(0x3a20, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x17d2, gbc.sp());
        EXPECT(0x3a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00EA
        gbc.setState(0xa994, 0xeca7, 0x4b60, 0x76dc, 0x91dd, 0xe4cc, 0x0, 0x0);
        gbc.writeMem(0xa994, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xeca7, gbc.sp());
        EXPECT(0xa996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa994));
        EXPECT(0x8f, gbc.readMem(0xa995));
        // CB 8F 00EB
        gbc.setState(0x3a3d, 0x2009, 0x69e0, 0x28a4, 0x7d52, 0x8fb6, 0x0, 0x0);
        gbc.writeMem(0x3a3d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2009, gbc.sp());
        EXPECT(0x3a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00EC
        gbc.setState(0xc2e1, 0x3394, 0x9a50, 0x32d, 0xb88a, 0x9c4b, 0x1, 0x0);
        gbc.writeMem(0xc2e1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3394, gbc.sp());
        EXPECT(0xc2e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2e1));
        EXPECT(0x8f, gbc.readMem(0xc2e2));
        // CB 8F 00ED
        gbc.setState(0xeb41, 0xe26c, 0x4030, 0x6073, 0x4a3b, 0x59ed, 0x1, 0x1);
        gbc.writeMem(0xeb41, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe26c, gbc.sp());
        EXPECT(0xeb43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb41));
        EXPECT(0x8f, gbc.readMem(0xeb42));
        // CB 8F 00EE
        gbc.setState(0xd2b, 0xb29d, 0xa3c0, 0xfaf5, 0xdf46, 0xe94e, 0x0, 0x0);
        gbc.writeMem(0xd2b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb29d, gbc.sp());
        EXPECT(0xd2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00EF
        gbc.setState(0xb412, 0xf08a, 0x2240, 0x9457, 0x56ac, 0x7e8, 0x1, 0x1);
        gbc.writeMem(0xb412, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf08a, gbc.sp());
        EXPECT(0xb414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb412));
        EXPECT(0x8f, gbc.readMem(0xb413));
        // CB 8F 00F0
        gbc.setState(0x1c03, 0x5ca7, 0xa2e0, 0x2b7e, 0xf3cf, 0x5a80, 0x1, 0x0);
        gbc.writeMem(0x1c03, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5ca7, gbc.sp());
        EXPECT(0x1c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00F1
        gbc.setState(0x32eb, 0xac74, 0x8bd0, 0x3b23, 0xf0db, 0xde58, 0x0, 0x1);
        gbc.writeMem(0x32eb, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xac74, gbc.sp());
        EXPECT(0x32ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00F2
        gbc.setState(0xbd75, 0x125d, 0x1810, 0x9d93, 0xe498, 0x6532, 0x0, 0x0);
        gbc.writeMem(0xbd75, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x125d, gbc.sp());
        EXPECT(0xbd77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd75));
        EXPECT(0x8f, gbc.readMem(0xbd76));
        // CB 8F 00F3
        gbc.setState(0xc84b, 0x414f, 0x6f40, 0x6709, 0xd705, 0xc603, 0x1, 0x1);
        gbc.writeMem(0xc84b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x414f, gbc.sp());
        EXPECT(0xc84d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc84b));
        EXPECT(0x8f, gbc.readMem(0xc84c));
        // CB 8F 00F5
        gbc.setState(0xbb1, 0x9b25, 0x69b0, 0x59fd, 0xc8b2, 0x23a1, 0x1, 0x1);
        gbc.writeMem(0xbb1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9b25, gbc.sp());
        EXPECT(0xbb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00F6
        gbc.setState(0x3f47, 0x4823, 0xdc20, 0x83df, 0x9037, 0xeb27, 0x1, 0x0);
        gbc.writeMem(0x3f47, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4823, gbc.sp());
        EXPECT(0x3f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00F7
        gbc.setState(0x11ed, 0x4be4, 0xbc90, 0x367, 0x1276, 0x1884, 0x1, 0x0);
        gbc.writeMem(0x11ed, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4be4, gbc.sp());
        EXPECT(0x11ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 00F8
        gbc.setState(0xcfb1, 0xbd2c, 0x31a0, 0xa51d, 0x82a6, 0x5ab6, 0x0, 0x1);
        gbc.writeMem(0xcfb1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xbd2c, gbc.sp());
        EXPECT(0xcfb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb1));
        EXPECT(0x8f, gbc.readMem(0xcfb2));
        // CB 8F 00F9
        gbc.setState(0xb09c, 0x9b6, 0xc610, 0xabf6, 0xdc5d, 0xda2f, 0x1, 0x0);
        gbc.writeMem(0xb09c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9b6, gbc.sp());
        EXPECT(0xb09e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb09c));
        EXPECT(0x8f, gbc.readMem(0xb09d));
        // CB 8F 00FA
        gbc.setState(0x10d6, 0x31d6, 0xce0, 0x60a2, 0x224f, 0xcecc, 0x1, 0x1);
        gbc.writeMem(0x10d6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x31d6, gbc.sp());
        EXPECT(0x10d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00FB
        gbc.setState(0xa80d, 0xf716, 0x7b50, 0xd3d4, 0xa13, 0xb550, 0x0, 0x1);
        gbc.writeMem(0xa80d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf716, gbc.sp());
        EXPECT(0xa80f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80d));
        EXPECT(0x8f, gbc.readMem(0xa80e));
        // CB 8F 00FC
        gbc.setState(0x7499, 0x9925, 0x6a20, 0x7140, 0xf1, 0xfd27, 0x0, 0x1);
        gbc.writeMem(0x7499, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9925, gbc.sp());
        EXPECT(0x749b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00FD
        gbc.setState(0x9bf8, 0x2264, 0xabb0, 0x9db1, 0xd9ec, 0xa869, 0x1, 0x0);
        gbc.writeMem(0x9bf8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2264, gbc.sp());
        EXPECT(0x9bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf8));
        EXPECT(0x8f, gbc.readMem(0x9bf9));
        // CB 8F 00FE
        gbc.setState(0x4b22, 0x5143, 0x93a0, 0xb7a6, 0x78f6, 0xefd8, 0x0, 0x0);
        gbc.writeMem(0x4b22, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5143, gbc.sp());
        EXPECT(0x4b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 00FF
        gbc.setState(0x44af, 0x5d40, 0x29f0, 0x6a55, 0x49f4, 0x1391, 0x0, 0x0);
        gbc.writeMem(0x44af, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5d40, gbc.sp());
        EXPECT(0x44b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0100
        gbc.setState(0x479a, 0x7741, 0xc60, 0x5569, 0x5650, 0x9fc9, 0x1, 0x0);
        gbc.writeMem(0x479a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7741, gbc.sp());
        EXPECT(0x479c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0102
        gbc.setState(0x9d3e, 0xffe1, 0x2fd0, 0x743a, 0x77c, 0xabc8, 0x1, 0x1);
        gbc.writeMem(0x9d3e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xffe1, gbc.sp());
        EXPECT(0x9d40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d3e));
        EXPECT(0x8f, gbc.readMem(0x9d3f));
        // CB 8F 0103
        gbc.setState(0x86fc, 0x83be, 0xc510, 0xd270, 0xcabc, 0xf6a0, 0x0, 0x0);
        gbc.writeMem(0x86fc, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x83be, gbc.sp());
        EXPECT(0x86fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fc));
        EXPECT(0x8f, gbc.readMem(0x86fd));
        // CB 8F 0104
        gbc.setState(0x6420, 0x200f, 0x3d00, 0x42da, 0x2b00, 0x9966, 0x1, 0x0);
        gbc.writeMem(0x6420, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x200f, gbc.sp());
        EXPECT(0x6422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0105
        gbc.setState(0xd5b6, 0x1617, 0xc370, 0x8f65, 0x849a, 0x28ac, 0x0, 0x0);
        gbc.writeMem(0xd5b6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1617, gbc.sp());
        EXPECT(0xd5b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b6));
        EXPECT(0x8f, gbc.readMem(0xd5b7));
        // CB 8F 0106
        gbc.setState(0xa620, 0x6396, 0xf80, 0xa1c0, 0xec8b, 0x7811, 0x0, 0x0);
        gbc.writeMem(0xa620, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6396, gbc.sp());
        EXPECT(0xa622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa620));
        EXPECT(0x8f, gbc.readMem(0xa621));
        // CB 8F 0107
        gbc.setState(0xcc9e, 0x7fa6, 0xfef0, 0xc9a8, 0x785a, 0xd791, 0x0, 0x1);
        gbc.writeMem(0xcc9e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7fa6, gbc.sp());
        EXPECT(0xcca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc9e));
        EXPECT(0x8f, gbc.readMem(0xcc9f));
        // CB 8F 0108
        gbc.setState(0xeb5d, 0x4f34, 0xd700, 0xc67b, 0x5840, 0x9794, 0x1, 0x0);
        gbc.writeMem(0xeb5d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4f34, gbc.sp());
        EXPECT(0xeb5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb5d));
        EXPECT(0x8f, gbc.readMem(0xeb5e));
        // CB 8F 0109
        gbc.setState(0xb18d, 0xce40, 0xdc40, 0x65d5, 0x6d0b, 0x56f2, 0x1, 0x1);
        gbc.writeMem(0xb18d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xce40, gbc.sp());
        EXPECT(0xb18f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb18d));
        EXPECT(0x8f, gbc.readMem(0xb18e));
        // CB 8F 010A
        gbc.setState(0x1ada, 0xb071, 0x6fc0, 0xf6ec, 0x8315, 0xb44e, 0x1, 0x1);
        gbc.writeMem(0x1ada, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb071, gbc.sp());
        EXPECT(0x1adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 010B
        gbc.setState(0xbdf1, 0x7a1b, 0x8080, 0xb94e, 0xf327, 0xf307, 0x1, 0x0);
        gbc.writeMem(0xbdf1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7a1b, gbc.sp());
        EXPECT(0xbdf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf1));
        EXPECT(0x8f, gbc.readMem(0xbdf2));
        // CB 8F 010C
        gbc.setState(0x1677, 0xb731, 0xfcd0, 0x8031, 0x706e, 0x2967, 0x1, 0x1);
        gbc.writeMem(0x1677, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb731, gbc.sp());
        EXPECT(0x1679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 010D
        gbc.setState(0x442, 0x9e43, 0x4dd0, 0x1e14, 0x36e4, 0x59cb, 0x0, 0x0);
        gbc.writeMem(0x442, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9e43, gbc.sp());
        EXPECT(0x444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 010E
        gbc.setState(0x67d, 0xa3b3, 0xc0b0, 0xcee3, 0xad87, 0x4769, 0x0, 0x0);
        gbc.writeMem(0x67d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa3b3, gbc.sp());
        EXPECT(0x67f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 010F
        gbc.setState(0x2cd3, 0x206d, 0xba10, 0x913e, 0x32b9, 0xccfe, 0x0, 0x1);
        gbc.writeMem(0x2cd3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x206d, gbc.sp());
        EXPECT(0x2cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0110
        gbc.setState(0xd569, 0x99fb, 0xc480, 0x604e, 0xe1b8, 0xafcf, 0x0, 0x0);
        gbc.writeMem(0xd569, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x99fb, gbc.sp());
        EXPECT(0xd56b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd569));
        EXPECT(0x8f, gbc.readMem(0xd56a));
        // CB 8F 0111
        gbc.setState(0x2e1d, 0xd29, 0x9fc0, 0xf376, 0xa0b0, 0xd89b, 0x1, 0x0);
        gbc.writeMem(0x2e1d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd29, gbc.sp());
        EXPECT(0x2e1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0112
        gbc.setState(0xec40, 0x9817, 0xca0, 0xfb1a, 0x9691, 0x293b, 0x1, 0x0);
        gbc.writeMem(0xec40, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9817, gbc.sp());
        EXPECT(0xec42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec40));
        EXPECT(0x8f, gbc.readMem(0xec41));
        // CB 8F 0113
        gbc.setState(0xa65b, 0x8516, 0x2130, 0xaece, 0x202b, 0x1c70, 0x1, 0x1);
        gbc.writeMem(0xa65b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8516, gbc.sp());
        EXPECT(0xa65d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa65b));
        EXPECT(0x8f, gbc.readMem(0xa65c));
        // CB 8F 0114
        gbc.setState(0x68f8, 0xbf5d, 0x8a80, 0xc3b2, 0x4837, 0xb907, 0x0, 0x0);
        gbc.writeMem(0x68f8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbf5d, gbc.sp());
        EXPECT(0x68fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0115
        gbc.setState(0x20a5, 0x181f, 0x2570, 0x109e, 0x2c86, 0x4b00, 0x0, 0x0);
        gbc.writeMem(0x20a5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x181f, gbc.sp());
        EXPECT(0x20a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0116
        gbc.setState(0x211, 0x3ce5, 0xc390, 0x83d5, 0x1bdb, 0xa6ab, 0x1, 0x0);
        gbc.writeMem(0x211, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3ce5, gbc.sp());
        EXPECT(0x213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0117
        gbc.setState(0xd511, 0xc950, 0xf750, 0x8d55, 0x5ed9, 0xdf4d, 0x0, 0x1);
        gbc.writeMem(0xd511, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc950, gbc.sp());
        EXPECT(0xd513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd511));
        EXPECT(0x8f, gbc.readMem(0xd512));
        // CB 8F 0118
        gbc.setState(0x63d8, 0xba7, 0xd7a0, 0xbdfe, 0x7d7e, 0x8d08, 0x1, 0x0);
        gbc.writeMem(0x63d8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xba7, gbc.sp());
        EXPECT(0x63da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0119
        gbc.setState(0x22c5, 0xf323, 0x4310, 0x574c, 0x94a8, 0xcc45, 0x0, 0x0);
        gbc.writeMem(0x22c5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf323, gbc.sp());
        EXPECT(0x22c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 011B
        gbc.setState(0xed63, 0x292c, 0x87c0, 0x6bda, 0xd507, 0x91c, 0x0, 0x0);
        gbc.writeMem(0xed63, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x292c, gbc.sp());
        EXPECT(0xed65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed63));
        EXPECT(0x8f, gbc.readMem(0xed64));
        // CB 8F 011C
        gbc.setState(0x6268, 0xdc1c, 0x2030, 0x2238, 0x4a79, 0x1d7b, 0x1, 0x1);
        gbc.writeMem(0x6268, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdc1c, gbc.sp());
        EXPECT(0x626a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 011D
        gbc.setState(0xbaea, 0x7acf, 0x67a0, 0xecf5, 0xadcd, 0x653c, 0x0, 0x1);
        gbc.writeMem(0xbaea, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7acf, gbc.sp());
        EXPECT(0xbaec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaea));
        EXPECT(0x8f, gbc.readMem(0xbaeb));
        // CB 8F 011E
        gbc.setState(0x7a12, 0xf66a, 0xe0e0, 0xd5a5, 0xe610, 0x16fd, 0x1, 0x1);
        gbc.writeMem(0x7a12, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf66a, gbc.sp());
        EXPECT(0x7a14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 011F
        gbc.setState(0x5e44, 0xd81f, 0xf3e0, 0x5131, 0xfec1, 0x39a0, 0x1, 0x1);
        gbc.writeMem(0x5e44, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd81f, gbc.sp());
        EXPECT(0x5e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0120
        gbc.setState(0xdb94, 0x31de, 0xd830, 0x9e3f, 0x81a, 0xe512, 0x1, 0x0);
        gbc.writeMem(0xdb94, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x31de, gbc.sp());
        EXPECT(0xdb96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb94));
        EXPECT(0x8f, gbc.readMem(0xdb95));
        // CB 8F 0121
        gbc.setState(0xd361, 0x2476, 0xab00, 0xdde, 0xbd20, 0x7ed6, 0x0, 0x1);
        gbc.writeMem(0xd361, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2476, gbc.sp());
        EXPECT(0xd363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd361));
        EXPECT(0x8f, gbc.readMem(0xd362));
        // CB 8F 0122
        gbc.setState(0x99e1, 0xf553, 0xe9f0, 0x2c46, 0xd49f, 0xf2da, 0x1, 0x0);
        gbc.writeMem(0x99e1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf553, gbc.sp());
        EXPECT(0x99e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e1));
        EXPECT(0x8f, gbc.readMem(0x99e2));
        // CB 8F 0123
        gbc.setState(0xd0f0, 0x661f, 0x1e0, 0x73b2, 0xc972, 0xd90e, 0x1, 0x1);
        gbc.writeMem(0xd0f0, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x661f, gbc.sp());
        EXPECT(0xd0f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0f0));
        EXPECT(0x8f, gbc.readMem(0xd0f1));
        // CB 8F 0124
        gbc.setState(0x3d66, 0x419f, 0x7aa0, 0x205c, 0x2356, 0x3dab, 0x0, 0x1);
        gbc.writeMem(0x3d66, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x419f, gbc.sp());
        EXPECT(0x3d68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0125
        gbc.setState(0x78c5, 0x512f, 0x8ad0, 0xeccc, 0x80e1, 0x5d6b, 0x0, 0x1);
        gbc.writeMem(0x78c5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x512f, gbc.sp());
        EXPECT(0x78c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0126
        gbc.setState(0x21b8, 0xd87e, 0xd1f0, 0x1913, 0x456d, 0x7172, 0x1, 0x0);
        gbc.writeMem(0x21b8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd87e, gbc.sp());
        EXPECT(0x21ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0127
        gbc.setState(0x365a, 0x4c5c, 0xd290, 0xc1ad, 0x168a, 0xa869, 0x0, 0x1);
        gbc.writeMem(0x365a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4c5c, gbc.sp());
        EXPECT(0x365c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0128
        gbc.setState(0xe5d6, 0x429, 0xefb0, 0x1a2c, 0xd8a4, 0x4681, 0x0, 0x0);
        gbc.writeMem(0xe5d6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x429, gbc.sp());
        EXPECT(0xe5d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d6));
        EXPECT(0x8f, gbc.readMem(0xe5d7));
        // CB 8F 0129
        gbc.setState(0x7075, 0x678a, 0x98d0, 0x432b, 0x1104, 0xc44, 0x1, 0x1);
        gbc.writeMem(0x7075, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x678a, gbc.sp());
        EXPECT(0x7077, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 012A
        gbc.setState(0xc3be, 0x1ae9, 0x9fd0, 0x512e, 0xec87, 0x3ad4, 0x0, 0x1);
        gbc.writeMem(0xc3be, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1ae9, gbc.sp());
        EXPECT(0xc3c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3be));
        EXPECT(0x8f, gbc.readMem(0xc3bf));
        // CB 8F 012B
        gbc.setState(0xbc43, 0x4723, 0x75b0, 0xa322, 0x5416, 0xa78c, 0x1, 0x0);
        gbc.writeMem(0xbc43, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4723, gbc.sp());
        EXPECT(0xbc45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc43));
        EXPECT(0x8f, gbc.readMem(0xbc44));
        // CB 8F 012C
        gbc.setState(0x997e, 0xa30d, 0xee50, 0x72d9, 0x8c97, 0x1038, 0x0, 0x1);
        gbc.writeMem(0x997e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa30d, gbc.sp());
        EXPECT(0x9980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x997e));
        EXPECT(0x8f, gbc.readMem(0x997f));
        // CB 8F 012D
        gbc.setState(0x3b19, 0x8f5, 0x9640, 0x70dc, 0x8592, 0x7b3b, 0x0, 0x0);
        gbc.writeMem(0x3b19, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8f5, gbc.sp());
        EXPECT(0x3b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 012E
        gbc.setState(0xc6cd, 0x6924, 0xed30, 0xf5ae, 0x931c, 0xfab0, 0x0, 0x0);
        gbc.writeMem(0xc6cd, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6924, gbc.sp());
        EXPECT(0xc6cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6cd));
        EXPECT(0x8f, gbc.readMem(0xc6ce));
        // CB 8F 012F
        gbc.setState(0x8a2f, 0xe4a4, 0xf8d0, 0x797a, 0xa7df, 0xc5d5, 0x1, 0x0);
        gbc.writeMem(0x8a2f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe4a4, gbc.sp());
        EXPECT(0x8a31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a2f));
        EXPECT(0x8f, gbc.readMem(0x8a30));
        // CB 8F 0130
        gbc.setState(0xc81e, 0xad7d, 0x21f0, 0xa323, 0x4c10, 0x5c82, 0x0, 0x1);
        gbc.writeMem(0xc81e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xad7d, gbc.sp());
        EXPECT(0xc820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc81e));
        EXPECT(0x8f, gbc.readMem(0xc81f));
        // CB 8F 0131
        gbc.setState(0x9424, 0x1550, 0x27a0, 0x1f25, 0xf6af, 0x9d1b, 0x1, 0x0);
        gbc.writeMem(0x9424, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1550, gbc.sp());
        EXPECT(0x9426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9424));
        EXPECT(0x8f, gbc.readMem(0x9425));
        // CB 8F 0132
        gbc.setState(0xb260, 0x9c6e, 0x20d0, 0xbfaa, 0xcb4a, 0xb897, 0x0, 0x0);
        gbc.writeMem(0xb260, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9c6e, gbc.sp());
        EXPECT(0xb262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb260));
        EXPECT(0x8f, gbc.readMem(0xb261));
        // CB 8F 0133
        gbc.setState(0x8616, 0xc8e6, 0x6500, 0x98fb, 0xc5b8, 0x2f63, 0x1, 0x1);
        gbc.writeMem(0x8616, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc8e6, gbc.sp());
        EXPECT(0x8618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8616));
        EXPECT(0x8f, gbc.readMem(0x8617));
        // CB 8F 0134
        gbc.setState(0x1721, 0x226e, 0x6950, 0xfa80, 0x5ff6, 0x9d93, 0x0, 0x0);
        gbc.writeMem(0x1721, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x226e, gbc.sp());
        EXPECT(0x1723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0135
        gbc.setState(0x15ea, 0x2782, 0x3a10, 0x1817, 0x9b99, 0x5641, 0x0, 0x0);
        gbc.writeMem(0x15ea, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2782, gbc.sp());
        EXPECT(0x15ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0136
        gbc.setState(0x4ca6, 0x332c, 0x6600, 0x3480, 0xb9dd, 0x9818, 0x0, 0x1);
        gbc.writeMem(0x4ca6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x332c, gbc.sp());
        EXPECT(0x4ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0137
        gbc.setState(0xdca, 0xe660, 0xc340, 0x7348, 0xbca8, 0x4de1, 0x0, 0x1);
        gbc.writeMem(0xdca, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe660, gbc.sp());
        EXPECT(0xdcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0139
        gbc.setState(0x85d2, 0x2c97, 0x34e0, 0xc64f, 0x6c11, 0xb699, 0x0, 0x1);
        gbc.writeMem(0x85d2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2c97, gbc.sp());
        EXPECT(0x85d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d2));
        EXPECT(0x8f, gbc.readMem(0x85d3));
        // CB 8F 013A
        gbc.setState(0x2d48, 0x27a, 0x840, 0xfbba, 0x1a00, 0xf380, 0x1, 0x1);
        gbc.writeMem(0x2d48, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x27a, gbc.sp());
        EXPECT(0x2d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 013B
        gbc.setState(0xc7bd, 0x5a6d, 0x730, 0x3220, 0x910d, 0x5ac6, 0x1, 0x1);
        gbc.writeMem(0xc7bd, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5a6d, gbc.sp());
        EXPECT(0xc7bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7bd));
        EXPECT(0x8f, gbc.readMem(0xc7be));
        // CB 8F 013C
        gbc.setState(0x6bf1, 0x1e16, 0xa7e0, 0xd5d3, 0x1af5, 0x5e26, 0x0, 0x0);
        gbc.writeMem(0x6bf1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1e16, gbc.sp());
        EXPECT(0x6bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 013D
        gbc.setState(0xe6a8, 0xec0, 0x3b40, 0x453c, 0x907a, 0xcc03, 0x1, 0x0);
        gbc.writeMem(0xe6a8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xec0, gbc.sp());
        EXPECT(0xe6aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a8));
        EXPECT(0x8f, gbc.readMem(0xe6a9));
        // CB 8F 013E
        gbc.setState(0x699a, 0xfe41, 0x9540, 0xd260, 0x9caf, 0xa599, 0x1, 0x0);
        gbc.writeMem(0x699a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfe41, gbc.sp());
        EXPECT(0x699c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 013F
        gbc.setState(0x48fa, 0x6026, 0x1e30, 0x9d72, 0xf28e, 0xdfa1, 0x0, 0x0);
        gbc.writeMem(0x48fa, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6026, gbc.sp());
        EXPECT(0x48fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0140
        gbc.setState(0x7b93, 0x973e, 0x3640, 0x462, 0xd9ff, 0x8b59, 0x0, 0x0);
        gbc.writeMem(0x7b93, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x973e, gbc.sp());
        EXPECT(0x7b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0141
        gbc.setState(0x429, 0xb8c5, 0x5710, 0x8e8c, 0xe82, 0xb942, 0x1, 0x1);
        gbc.writeMem(0x429, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb8c5, gbc.sp());
        EXPECT(0x42b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0142
        gbc.setState(0xa79d, 0x6992, 0x7d90, 0xe2f7, 0xd17, 0xa566, 0x1, 0x1);
        gbc.writeMem(0xa79d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6992, gbc.sp());
        EXPECT(0xa79f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa79d));
        EXPECT(0x8f, gbc.readMem(0xa79e));
        // CB 8F 0143
        gbc.setState(0xa144, 0x4459, 0x28a0, 0x628d, 0xd46c, 0x5349, 0x0, 0x1);
        gbc.writeMem(0xa144, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4459, gbc.sp());
        EXPECT(0xa146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa144));
        EXPECT(0x8f, gbc.readMem(0xa145));
        // CB 8F 0144
        gbc.setState(0x1ab8, 0x577e, 0xce0, 0xfcee, 0xdd1f, 0x162b, 0x0, 0x1);
        gbc.writeMem(0x1ab8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x577e, gbc.sp());
        EXPECT(0x1aba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0145
        gbc.setState(0x33a2, 0xca60, 0x8050, 0x89bc, 0xc9b9, 0xb724, 0x0, 0x0);
        gbc.writeMem(0x33a2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xca60, gbc.sp());
        EXPECT(0x33a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0146
        gbc.setState(0xe7cc, 0xacc, 0x90d0, 0x9c1c, 0xf20e, 0xc169, 0x1, 0x1);
        gbc.writeMem(0xe7cc, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xacc, gbc.sp());
        EXPECT(0xe7ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7cc));
        EXPECT(0x8f, gbc.readMem(0xe7cd));
        // CB 8F 0147
        gbc.setState(0xb354, 0xab8c, 0xca0, 0xcc3e, 0xe79c, 0xdf7, 0x1, 0x0);
        gbc.writeMem(0xb354, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xab8c, gbc.sp());
        EXPECT(0xb356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb354));
        EXPECT(0x8f, gbc.readMem(0xb355));
        // CB 8F 0148
        gbc.setState(0x4f89, 0xe5c9, 0x74e0, 0x1347, 0x5e1f, 0x6dd3, 0x0, 0x1);
        gbc.writeMem(0x4f89, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe5c9, gbc.sp());
        EXPECT(0x4f8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0149
        gbc.setState(0x5968, 0x8f70, 0x9c20, 0x5a69, 0xa668, 0x2734, 0x1, 0x1);
        gbc.writeMem(0x5968, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8f70, gbc.sp());
        EXPECT(0x596a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 014A
        gbc.setState(0x51c4, 0x21b7, 0x40e0, 0xd8df, 0x79f1, 0xc3cb, 0x1, 0x1);
        gbc.writeMem(0x51c4, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x21b7, gbc.sp());
        EXPECT(0x51c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 014B
        gbc.setState(0x5501, 0x8b5c, 0xce20, 0x41ea, 0x5723, 0x8961, 0x1, 0x0);
        gbc.writeMem(0x5501, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8b5c, gbc.sp());
        EXPECT(0x5503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 014D
        gbc.setState(0x35cb, 0x7d2d, 0x3ca0, 0x9eae, 0x1f, 0xcf3a, 0x1, 0x0);
        gbc.writeMem(0x35cb, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7d2d, gbc.sp());
        EXPECT(0x35cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 014E
        gbc.setState(0x40e1, 0xea0e, 0xcd90, 0xdacf, 0xa4de, 0xba9a, 0x0, 0x0);
        gbc.writeMem(0x40e1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xea0e, gbc.sp());
        EXPECT(0x40e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 014F
        gbc.setState(0x9d7, 0xf173, 0xf070, 0x2160, 0xe16e, 0xd571, 0x0, 0x0);
        gbc.writeMem(0x9d7, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf173, gbc.sp());
        EXPECT(0x9d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0150
        gbc.setState(0x1a7a, 0xbd13, 0xfe50, 0xbc12, 0xbb0e, 0x1054, 0x1, 0x1);
        gbc.writeMem(0x1a7a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbd13, gbc.sp());
        EXPECT(0x1a7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0151
        gbc.setState(0x96a, 0x1296, 0x2d10, 0x3887, 0xd42b, 0x3400, 0x1, 0x0);
        gbc.writeMem(0x96a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1296, gbc.sp());
        EXPECT(0x96c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0152
        gbc.setState(0x3193, 0xf1bc, 0x4f50, 0xbb14, 0x256, 0xc2d2, 0x0, 0x1);
        gbc.writeMem(0x3193, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf1bc, gbc.sp());
        EXPECT(0x3195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0153
        gbc.setState(0x498f, 0x3f6c, 0xc50, 0x8457, 0xbb32, 0x71e8, 0x0, 0x0);
        gbc.writeMem(0x498f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3f6c, gbc.sp());
        EXPECT(0x4991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0154
        gbc.setState(0xd59d, 0x7136, 0xbe90, 0x3670, 0xb8e7, 0xc24d, 0x1, 0x1);
        gbc.writeMem(0xd59d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7136, gbc.sp());
        EXPECT(0xd59f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd59d));
        EXPECT(0x8f, gbc.readMem(0xd59e));
        // CB 8F 0155
        gbc.setState(0x2c72, 0xd486, 0x8a00, 0xdd8e, 0x257b, 0x386, 0x0, 0x0);
        gbc.writeMem(0x2c72, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd486, gbc.sp());
        EXPECT(0x2c74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0156
        gbc.setState(0xc716, 0x868a, 0x8440, 0x2bb5, 0x8df, 0x694c, 0x1, 0x0);
        gbc.writeMem(0xc716, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x868a, gbc.sp());
        EXPECT(0xc718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc716));
        EXPECT(0x8f, gbc.readMem(0xc717));
        // CB 8F 0157
        gbc.setState(0xa735, 0xc6ee, 0xae50, 0xc561, 0xedc9, 0xec3b, 0x1, 0x0);
        gbc.writeMem(0xa735, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc6ee, gbc.sp());
        EXPECT(0xa737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa735));
        EXPECT(0x8f, gbc.readMem(0xa736));
        // CB 8F 0158
        gbc.setState(0x1fbc, 0x44b8, 0x85b0, 0x2615, 0xef5a, 0x85b5, 0x0, 0x1);
        gbc.writeMem(0x1fbc, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x44b8, gbc.sp());
        EXPECT(0x1fbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0159
        gbc.setState(0xb3a8, 0x8d54, 0x5080, 0xa567, 0xce8f, 0x133b, 0x1, 0x1);
        gbc.writeMem(0xb3a8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8d54, gbc.sp());
        EXPECT(0xb3aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a8));
        EXPECT(0x8f, gbc.readMem(0xb3a9));
        // CB 8F 015A
        gbc.setState(0x1f33, 0x4d9b, 0x9120, 0x58bf, 0x59e, 0xde87, 0x1, 0x0);
        gbc.writeMem(0x1f33, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4d9b, gbc.sp());
        EXPECT(0x1f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 015B
        gbc.setState(0x14de, 0xbbad, 0x8f80, 0xee9e, 0x6320, 0x14db, 0x0, 0x0);
        gbc.writeMem(0x14de, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbbad, gbc.sp());
        EXPECT(0x14e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 015D
        gbc.setState(0x7c9, 0x2af2, 0x7100, 0x62cb, 0xc257, 0x6de, 0x0, 0x0);
        gbc.writeMem(0x7c9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2af2, gbc.sp());
        EXPECT(0x7cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 015E
        gbc.setState(0xb812, 0xe0e0, 0x1780, 0x4f43, 0x4961, 0x7424, 0x0, 0x1);
        gbc.writeMem(0xb812, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe0e0, gbc.sp());
        EXPECT(0xb814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb812));
        EXPECT(0x8f, gbc.readMem(0xb813));
        // CB 8F 015F
        gbc.setState(0xb4f2, 0xbf20, 0x4670, 0x664f, 0x6cd5, 0xea0e, 0x1, 0x0);
        gbc.writeMem(0xb4f2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xbf20, gbc.sp());
        EXPECT(0xb4f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f2));
        EXPECT(0x8f, gbc.readMem(0xb4f3));
        // CB 8F 0160
        gbc.setState(0x8d2a, 0xe1c1, 0x3d0, 0x6e42, 0x4569, 0x6595, 0x0, 0x1);
        gbc.writeMem(0x8d2a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe1c1, gbc.sp());
        EXPECT(0x8d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d2a));
        EXPECT(0x8f, gbc.readMem(0x8d2b));
        // CB 8F 0161
        gbc.setState(0x78, 0x2efc, 0xe160, 0x818a, 0x3ef4, 0xd96b, 0x0, 0x0);
        gbc.writeMem(0x78, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2efc, gbc.sp());
        EXPECT(0x7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0162
        gbc.setState(0xc51c, 0x40dd, 0x3c30, 0x1bf6, 0x9c86, 0xc915, 0x0, 0x1);
        gbc.writeMem(0xc51c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x40dd, gbc.sp());
        EXPECT(0xc51e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc51c));
        EXPECT(0x8f, gbc.readMem(0xc51d));
        // CB 8F 0163
        gbc.setState(0x9734, 0xedaf, 0xa970, 0x7bff, 0x4183, 0x2c7f, 0x0, 0x0);
        gbc.writeMem(0x9734, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xedaf, gbc.sp());
        EXPECT(0x9736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9734));
        EXPECT(0x8f, gbc.readMem(0x9735));
        // CB 8F 0164
        gbc.setState(0xb303, 0xaab9, 0xd7a0, 0x199b, 0x7349, 0xaed0, 0x0, 0x0);
        gbc.writeMem(0xb303, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xaab9, gbc.sp());
        EXPECT(0xb305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb303));
        EXPECT(0x8f, gbc.readMem(0xb304));
        // CB 8F 0165
        gbc.setState(0x2026, 0xa281, 0xd640, 0x8c5a, 0xdda5, 0xe967, 0x1, 0x1);
        gbc.writeMem(0x2026, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa281, gbc.sp());
        EXPECT(0x2028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0166
        gbc.setState(0x9e47, 0x25ab, 0xd670, 0xe1b, 0xecd4, 0x73e5, 0x0, 0x1);
        gbc.writeMem(0x9e47, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x25ab, gbc.sp());
        EXPECT(0x9e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e47));
        EXPECT(0x8f, gbc.readMem(0x9e48));
        // CB 8F 0168
        gbc.setState(0xc219, 0xea94, 0xb190, 0xb6c2, 0x8731, 0x8226, 0x1, 0x1);
        gbc.writeMem(0xc219, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xea94, gbc.sp());
        EXPECT(0xc21b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc219));
        EXPECT(0x8f, gbc.readMem(0xc21a));
        // CB 8F 0169
        gbc.setState(0xdfc2, 0xa0f1, 0x20, 0x3bc2, 0xbe71, 0x6db7, 0x1, 0x0);
        gbc.writeMem(0xdfc2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa0f1, gbc.sp());
        EXPECT(0xdfc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc2));
        EXPECT(0x8f, gbc.readMem(0xdfc3));
        // CB 8F 016A
        gbc.setState(0x977c, 0x3890, 0xbc60, 0xbf2b, 0x5349, 0x796, 0x1, 0x0);
        gbc.writeMem(0x977c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3890, gbc.sp());
        EXPECT(0x977e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x977c));
        EXPECT(0x8f, gbc.readMem(0x977d));
        // CB 8F 016B
        gbc.setState(0xd309, 0x5885, 0x750, 0xc9d6, 0x1102, 0x65f9, 0x0, 0x0);
        gbc.writeMem(0xd309, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5885, gbc.sp());
        EXPECT(0xd30b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd309));
        EXPECT(0x8f, gbc.readMem(0xd30a));
        // CB 8F 016D
        gbc.setState(0x8a60, 0x2fd8, 0xaa30, 0x73e1, 0x9982, 0x649b, 0x1, 0x0);
        gbc.writeMem(0x8a60, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2fd8, gbc.sp());
        EXPECT(0x8a62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a60));
        EXPECT(0x8f, gbc.readMem(0x8a61));
        // CB 8F 016E
        gbc.setState(0x486e, 0x443d, 0x5220, 0xe3a0, 0x3a2c, 0x3bf3, 0x0, 0x1);
        gbc.writeMem(0x486e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x443d, gbc.sp());
        EXPECT(0x4870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 016F
        gbc.setState(0x62c4, 0xcafc, 0x6dd0, 0x1bdf, 0xee4, 0x673c, 0x1, 0x1);
        gbc.writeMem(0x62c4, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xcafc, gbc.sp());
        EXPECT(0x62c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0170
        gbc.setState(0x262c, 0xf01f, 0x80f0, 0xd3d, 0xe4ed, 0x88ed, 0x0, 0x1);
        gbc.writeMem(0x262c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf01f, gbc.sp());
        EXPECT(0x262e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0171
        gbc.setState(0x5043, 0xe99f, 0x1060, 0x36ab, 0xd7d6, 0x32d7, 0x0, 0x0);
        gbc.writeMem(0x5043, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe99f, gbc.sp());
        EXPECT(0x5045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0172
        gbc.setState(0xea75, 0x149f, 0x7f80, 0x7adc, 0x604a, 0xca4a, 0x1, 0x0);
        gbc.writeMem(0xea75, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x149f, gbc.sp());
        EXPECT(0xea77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea75));
        EXPECT(0x8f, gbc.readMem(0xea76));
        // CB 8F 0173
        gbc.setState(0x8c1c, 0x9d25, 0xbf90, 0x305e, 0x9209, 0x9dc6, 0x0, 0x1);
        gbc.writeMem(0x8c1c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9d25, gbc.sp());
        EXPECT(0x8c1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c1c));
        EXPECT(0x8f, gbc.readMem(0x8c1d));
        // CB 8F 0174
        gbc.setState(0x9bdd, 0xa39b, 0x9cc0, 0x4e10, 0x7c5f, 0x986f, 0x1, 0x0);
        gbc.writeMem(0x9bdd, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa39b, gbc.sp());
        EXPECT(0x9bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bdd));
        EXPECT(0x8f, gbc.readMem(0x9bde));
        // CB 8F 0175
        gbc.setState(0x761a, 0x5d86, 0x7960, 0xeb09, 0xba9f, 0xc078, 0x1, 0x0);
        gbc.writeMem(0x761a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5d86, gbc.sp());
        EXPECT(0x761c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0176
        gbc.setState(0x28b0, 0xa0da, 0x7f50, 0x3390, 0xd36f, 0xc9b2, 0x0, 0x1);
        gbc.writeMem(0x28b0, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa0da, gbc.sp());
        EXPECT(0x28b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0177
        gbc.setState(0x9c12, 0xf69f, 0xf2e0, 0xda77, 0xbd1a, 0xbc11, 0x0, 0x1);
        gbc.writeMem(0x9c12, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf69f, gbc.sp());
        EXPECT(0x9c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c12));
        EXPECT(0x8f, gbc.readMem(0x9c13));
        // CB 8F 0178
        gbc.setState(0xcd9, 0xfcf3, 0xedb0, 0x26fd, 0x73ba, 0x16a2, 0x0, 0x1);
        gbc.writeMem(0xcd9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfcf3, gbc.sp());
        EXPECT(0xcdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0179
        gbc.setState(0xd84, 0x588e, 0xc3c0, 0xd265, 0xc103, 0xeb89, 0x1, 0x1);
        gbc.writeMem(0xd84, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x588e, gbc.sp());
        EXPECT(0xd86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 017B
        gbc.setState(0xdadf, 0x1e25, 0x820, 0xf017, 0x797, 0x7681, 0x0, 0x1);
        gbc.writeMem(0xdadf, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1e25, gbc.sp());
        EXPECT(0xdae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdadf));
        EXPECT(0x8f, gbc.readMem(0xdae0));
        // CB 8F 017C
        gbc.setState(0x3477, 0x2a41, 0x9960, 0x1341, 0x693a, 0x8608, 0x0, 0x0);
        gbc.writeMem(0x3477, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2a41, gbc.sp());
        EXPECT(0x3479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 017D
        gbc.setState(0xdc42, 0x1b9e, 0x950, 0x9347, 0xd80d, 0x1c2b, 0x1, 0x0);
        gbc.writeMem(0xdc42, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1b9e, gbc.sp());
        EXPECT(0xdc44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc42));
        EXPECT(0x8f, gbc.readMem(0xdc43));
        // CB 8F 017E
        gbc.setState(0x9651, 0xd9e8, 0xe0a0, 0x25d7, 0xdb66, 0xc011, 0x1, 0x1);
        gbc.writeMem(0x9651, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd9e8, gbc.sp());
        EXPECT(0x9653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9651));
        EXPECT(0x8f, gbc.readMem(0x9652));
        // CB 8F 017F
        gbc.setState(0x4528, 0x33fd, 0x4e40, 0xfc11, 0xcfa1, 0x7b0b, 0x1, 0x1);
        gbc.writeMem(0x4528, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x33fd, gbc.sp());
        EXPECT(0x452a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0180
        gbc.setState(0x8c1a, 0x2348, 0x25e0, 0xbe04, 0x9a, 0x9028, 0x1, 0x0);
        gbc.writeMem(0x8c1a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2348, gbc.sp());
        EXPECT(0x8c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c1a));
        EXPECT(0x8f, gbc.readMem(0x8c1b));
        // CB 8F 0181
        gbc.setState(0xb669, 0xf924, 0xd760, 0x8853, 0x8a5c, 0xd45a, 0x0, 0x1);
        gbc.writeMem(0xb669, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf924, gbc.sp());
        EXPECT(0xb66b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb669));
        EXPECT(0x8f, gbc.readMem(0xb66a));
        // CB 8F 0182
        gbc.setState(0xa0cc, 0xe5c, 0x1e00, 0x5e57, 0x5c32, 0x56b3, 0x1, 0x1);
        gbc.writeMem(0xa0cc, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe5c, gbc.sp());
        EXPECT(0xa0ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0cc));
        EXPECT(0x8f, gbc.readMem(0xa0cd));
        // CB 8F 0183
        gbc.setState(0x944e, 0xd4c, 0x3d20, 0xac4, 0x3645, 0x4fd2, 0x0, 0x0);
        gbc.writeMem(0x944e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd4c, gbc.sp());
        EXPECT(0x9450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x944e));
        EXPECT(0x8f, gbc.readMem(0x944f));
        // CB 8F 0184
        gbc.setState(0x43b3, 0xe472, 0xc90, 0xf0c0, 0xf886, 0x4e28, 0x0, 0x0);
        gbc.writeMem(0x43b3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe472, gbc.sp());
        EXPECT(0x43b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0185
        gbc.setState(0xdcab, 0x4dbe, 0x22a0, 0x593d, 0x6432, 0x1eb0, 0x1, 0x1);
        gbc.writeMem(0xdcab, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4dbe, gbc.sp());
        EXPECT(0xdcad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcab));
        EXPECT(0x8f, gbc.readMem(0xdcac));
        // CB 8F 0187
        gbc.setState(0xcec6, 0x80a3, 0x2fe0, 0x948d, 0x7e23, 0xb9af, 0x0, 0x0);
        gbc.writeMem(0xcec6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x80a3, gbc.sp());
        EXPECT(0xcec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcec6));
        EXPECT(0x8f, gbc.readMem(0xcec7));
        // CB 8F 0188
        gbc.setState(0xef90, 0x76ca, 0xd280, 0xff30, 0xda85, 0x4827, 0x1, 0x1);
        gbc.writeMem(0xef90, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x76ca, gbc.sp());
        EXPECT(0xef92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef90));
        EXPECT(0x8f, gbc.readMem(0xef91));
        // CB 8F 0189
        gbc.setState(0x95d5, 0xa3ff, 0x3b00, 0x9070, 0x5dc6, 0x8898, 0x0, 0x1);
        gbc.writeMem(0x95d5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa3ff, gbc.sp());
        EXPECT(0x95d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d5));
        EXPECT(0x8f, gbc.readMem(0x95d6));
        // CB 8F 018A
        gbc.setState(0x3c01, 0x1f28, 0xa8d0, 0xb719, 0x9685, 0x1210, 0x1, 0x1);
        gbc.writeMem(0x3c01, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1f28, gbc.sp());
        EXPECT(0x3c03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 018B
        gbc.setState(0x1892, 0xb335, 0x95e0, 0x95e7, 0xb2e2, 0xf9fe, 0x1, 0x0);
        gbc.writeMem(0x1892, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb335, gbc.sp());
        EXPECT(0x1894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 018C
        gbc.setState(0x45e8, 0xd54b, 0xc640, 0x25e5, 0x6c3b, 0x9bd9, 0x0, 0x0);
        gbc.writeMem(0x45e8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd54b, gbc.sp());
        EXPECT(0x45ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 018D
        gbc.setState(0x2b5, 0x4e70, 0x6de0, 0xcb27, 0x91c1, 0xe173, 0x0, 0x0);
        gbc.writeMem(0x2b5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4e70, gbc.sp());
        EXPECT(0x2b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 018E
        gbc.setState(0x6923, 0x656f, 0x7fb0, 0x619, 0x43f1, 0xb10d, 0x0, 0x0);
        gbc.writeMem(0x6923, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x656f, gbc.sp());
        EXPECT(0x6925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 018F
        gbc.setState(0xd32d, 0x4b17, 0xa9e0, 0xa901, 0x257c, 0xb5f2, 0x1, 0x1);
        gbc.writeMem(0xd32d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4b17, gbc.sp());
        EXPECT(0xd32f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32d));
        EXPECT(0x8f, gbc.readMem(0xd32e));
        // CB 8F 0190
        gbc.setState(0x2392, 0xd834, 0xff90, 0xa336, 0xe8ec, 0xb4dd, 0x0, 0x0);
        gbc.writeMem(0x2392, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd834, gbc.sp());
        EXPECT(0x2394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0191
        gbc.setState(0x57f, 0x74a8, 0x8100, 0xdc89, 0x44f3, 0x3c44, 0x0, 0x1);
        gbc.writeMem(0x57f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x74a8, gbc.sp());
        EXPECT(0x581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0192
        gbc.setState(0xada1, 0x1e72, 0x9430, 0xcb89, 0x69d5, 0x1485, 0x1, 0x1);
        gbc.writeMem(0xada1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1e72, gbc.sp());
        EXPECT(0xada3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada1));
        EXPECT(0x8f, gbc.readMem(0xada2));
        // CB 8F 0193
        gbc.setState(0xb028, 0x7126, 0x98a0, 0x7d29, 0xcc43, 0x66ef, 0x0, 0x1);
        gbc.writeMem(0xb028, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7126, gbc.sp());
        EXPECT(0xb02a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb028));
        EXPECT(0x8f, gbc.readMem(0xb029));
        // CB 8F 0194
        gbc.setState(0xded3, 0x3e0d, 0x2620, 0x8329, 0x7340, 0xf3c, 0x0, 0x1);
        gbc.writeMem(0xded3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3e0d, gbc.sp());
        EXPECT(0xded5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded3));
        EXPECT(0x8f, gbc.readMem(0xded4));
        // CB 8F 0195
        gbc.setState(0x1d5b, 0x6387, 0xe7f0, 0xd1b, 0x6e08, 0x8e8a, 0x0, 0x0);
        gbc.writeMem(0x1d5b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6387, gbc.sp());
        EXPECT(0x1d5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0196
        gbc.setState(0x1362, 0x48bc, 0x7e50, 0xc329, 0x41a9, 0x679a, 0x0, 0x1);
        gbc.writeMem(0x1362, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x48bc, gbc.sp());
        EXPECT(0x1364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0197
        gbc.setState(0xe81d, 0xa059, 0xb110, 0x4f73, 0xf910, 0x1de1, 0x1, 0x0);
        gbc.writeMem(0xe81d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa059, gbc.sp());
        EXPECT(0xe81f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe81d));
        EXPECT(0x8f, gbc.readMem(0xe81e));
        // CB 8F 0198
        gbc.setState(0x373e, 0x165c, 0x960, 0x8b43, 0x8fa2, 0xf3ea, 0x0, 0x1);
        gbc.writeMem(0x373e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x165c, gbc.sp());
        EXPECT(0x3740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0199
        gbc.setState(0xb822, 0xfd2d, 0x3bc0, 0xb427, 0x21f1, 0xee0d, 0x0, 0x1);
        gbc.writeMem(0xb822, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfd2d, gbc.sp());
        EXPECT(0xb824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb822));
        EXPECT(0x8f, gbc.readMem(0xb823));
        // CB 8F 019B
        gbc.setState(0x7f8d, 0x8fe6, 0x8fe0, 0xb0c4, 0x20f1, 0xe1e5, 0x0, 0x0);
        gbc.writeMem(0x7f8d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8fe6, gbc.sp());
        EXPECT(0x7f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 019C
        gbc.setState(0x471b, 0x5d6f, 0x3f80, 0xca2a, 0x9d62, 0x34d9, 0x1, 0x0);
        gbc.writeMem(0x471b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5d6f, gbc.sp());
        EXPECT(0x471d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 019D
        gbc.setState(0xa73a, 0x689c, 0x9590, 0x5536, 0xcb78, 0x1a02, 0x1, 0x0);
        gbc.writeMem(0xa73a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x689c, gbc.sp());
        EXPECT(0xa73c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa73a));
        EXPECT(0x8f, gbc.readMem(0xa73b));
        // CB 8F 019E
        gbc.setState(0xbad7, 0xbc8d, 0x7910, 0x22d4, 0x306c, 0xb0aa, 0x1, 0x0);
        gbc.writeMem(0xbad7, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbc8d, gbc.sp());
        EXPECT(0xbad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad7));
        EXPECT(0x8f, gbc.readMem(0xbad8));
        // CB 8F 019F
        gbc.setState(0xc651, 0xe8ac, 0x2850, 0x79f2, 0xba5f, 0x7dc1, 0x0, 0x0);
        gbc.writeMem(0xc651, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe8ac, gbc.sp());
        EXPECT(0xc653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc651));
        EXPECT(0x8f, gbc.readMem(0xc652));
        // CB 8F 01A0
        gbc.setState(0x5dd5, 0xe778, 0x2070, 0xb0ec, 0x2cd7, 0x7885, 0x1, 0x0);
        gbc.writeMem(0x5dd5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe778, gbc.sp());
        EXPECT(0x5dd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 01A1
        gbc.setState(0x7461, 0x7041, 0xce00, 0x4460, 0xe87a, 0xf663, 0x0, 0x1);
        gbc.writeMem(0x7461, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7041, gbc.sp());
        EXPECT(0x7463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01A3
        gbc.setState(0x2062, 0x650a, 0xeca0, 0xe0ab, 0xa1a2, 0xecc6, 0x0, 0x1);
        gbc.writeMem(0x2062, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x650a, gbc.sp());
        EXPECT(0x2064, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01A4
        gbc.setState(0xe6e6, 0xf5cd, 0xf710, 0xd915, 0xa4d7, 0xb997, 0x0, 0x0);
        gbc.writeMem(0xe6e6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf5cd, gbc.sp());
        EXPECT(0xe6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e6));
        EXPECT(0x8f, gbc.readMem(0xe6e7));
        // CB 8F 01A5
        gbc.setState(0xa30a, 0xa9c8, 0x4300, 0x9ea1, 0xb4eb, 0x4c87, 0x0, 0x0);
        gbc.writeMem(0xa30a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa9c8, gbc.sp());
        EXPECT(0xa30c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa30a));
        EXPECT(0x8f, gbc.readMem(0xa30b));
        // CB 8F 01A6
        gbc.setState(0xea73, 0x5d59, 0x7a30, 0x66d, 0x217e, 0x1da3, 0x1, 0x0);
        gbc.writeMem(0xea73, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5d59, gbc.sp());
        EXPECT(0xea75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea73));
        EXPECT(0x8f, gbc.readMem(0xea74));
        // CB 8F 01A7
        gbc.setState(0xe341, 0x511d, 0x9200, 0xc92e, 0x66ee, 0xfa4d, 0x1, 0x0);
        gbc.writeMem(0xe341, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x511d, gbc.sp());
        EXPECT(0xe343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe341));
        EXPECT(0x8f, gbc.readMem(0xe342));
        // CB 8F 01A8
        gbc.setState(0x7418, 0x2aa2, 0xeac0, 0xb759, 0x52d5, 0xcb7c, 0x1, 0x1);
        gbc.writeMem(0x7418, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2aa2, gbc.sp());
        EXPECT(0x741a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01A9
        gbc.setState(0x427b, 0x259c, 0x19c0, 0xcd18, 0x720f, 0x69da, 0x1, 0x0);
        gbc.writeMem(0x427b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x259c, gbc.sp());
        EXPECT(0x427d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01AA
        gbc.setState(0xbff2, 0xb539, 0xcf0, 0x64b0, 0xfd9d, 0xb7db, 0x0, 0x1);
        gbc.writeMem(0xbff2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb539, gbc.sp());
        EXPECT(0xbff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff2));
        EXPECT(0x8f, gbc.readMem(0xbff3));
        // CB 8F 01AB
        gbc.setState(0x603d, 0x9629, 0xd9c0, 0xbef6, 0xb218, 0x7fc2, 0x0, 0x0);
        gbc.writeMem(0x603d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9629, gbc.sp());
        EXPECT(0x603f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01AC
        gbc.setState(0xa402, 0x28f0, 0x8360, 0x23e0, 0x53c6, 0x18cb, 0x0, 0x1);
        gbc.writeMem(0xa402, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x28f0, gbc.sp());
        EXPECT(0xa404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa402));
        EXPECT(0x8f, gbc.readMem(0xa403));
        // CB 8F 01AD
        gbc.setState(0x20af, 0x1c96, 0x6550, 0x8f4, 0x7a17, 0xf73, 0x1, 0x1);
        gbc.writeMem(0x20af, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1c96, gbc.sp());
        EXPECT(0x20b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 01AE
        gbc.setState(0xa149, 0xb5b8, 0x4540, 0xddef, 0xb65d, 0x6e27, 0x0, 0x0);
        gbc.writeMem(0xa149, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb5b8, gbc.sp());
        EXPECT(0xa14b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa149));
        EXPECT(0x8f, gbc.readMem(0xa14a));
        // CB 8F 01AF
        gbc.setState(0x28f6, 0xa8e0, 0xada0, 0x621, 0x4b22, 0x361c, 0x0, 0x1);
        gbc.writeMem(0x28f6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa8e0, gbc.sp());
        EXPECT(0x28f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01B0
        gbc.setState(0xda18, 0x2078, 0xdd20, 0xb807, 0x9cbb, 0x28d5, 0x0, 0x1);
        gbc.writeMem(0xda18, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2078, gbc.sp());
        EXPECT(0xda1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda18));
        EXPECT(0x8f, gbc.readMem(0xda19));
        // CB 8F 01B2
        gbc.setState(0xa3fc, 0x48f7, 0x180, 0xb3f1, 0x107c, 0x5da6, 0x0, 0x0);
        gbc.writeMem(0xa3fc, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x48f7, gbc.sp());
        EXPECT(0xa3fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3fc));
        EXPECT(0x8f, gbc.readMem(0xa3fd));
        // CB 8F 01B3
        gbc.setState(0x8950, 0xd941, 0xc0c0, 0x3a43, 0x44ae, 0xd348, 0x1, 0x1);
        gbc.writeMem(0x8950, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd941, gbc.sp());
        EXPECT(0x8952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8950));
        EXPECT(0x8f, gbc.readMem(0x8951));
        // CB 8F 01B4
        gbc.setState(0xc546, 0xf289, 0x6d80, 0xb5aa, 0xeb62, 0x641a, 0x0, 0x0);
        gbc.writeMem(0xc546, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf289, gbc.sp());
        EXPECT(0xc548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc546));
        EXPECT(0x8f, gbc.readMem(0xc547));
        // CB 8F 01B5
        gbc.setState(0xdb28, 0x9a71, 0xb300, 0x3b31, 0x131c, 0x1b39, 0x1, 0x1);
        gbc.writeMem(0xdb28, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9a71, gbc.sp());
        EXPECT(0xdb2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb28));
        EXPECT(0x8f, gbc.readMem(0xdb29));
        // CB 8F 01B7
        gbc.setState(0x4b73, 0xd398, 0xac10, 0xc1ae, 0xe977, 0xfe0c, 0x1, 0x0);
        gbc.writeMem(0x4b73, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd398, gbc.sp());
        EXPECT(0x4b75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 01B8
        gbc.setState(0x9873, 0x9f6, 0x6a00, 0x3085, 0xefb8, 0xb84d, 0x0, 0x1);
        gbc.writeMem(0x9873, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9f6, gbc.sp());
        EXPECT(0x9875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9873));
        EXPECT(0x8f, gbc.readMem(0x9874));
        // CB 8F 01B9
        gbc.setState(0x9a3e, 0xa218, 0xb040, 0x9fca, 0xf106, 0x86bd, 0x1, 0x0);
        gbc.writeMem(0x9a3e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa218, gbc.sp());
        EXPECT(0x9a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a3e));
        EXPECT(0x8f, gbc.readMem(0x9a3f));
        // CB 8F 01BA
        gbc.setState(0x7620, 0xfe70, 0xf560, 0x9694, 0x21de, 0x62a1, 0x1, 0x0);
        gbc.writeMem(0x7620, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfe70, gbc.sp());
        EXPECT(0x7622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01BB
        gbc.setState(0x4ba1, 0x5ea8, 0xfb50, 0x995b, 0xeac1, 0xdb48, 0x0, 0x1);
        gbc.writeMem(0x4ba1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5ea8, gbc.sp());
        EXPECT(0x4ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 01BC
        gbc.setState(0x86ec, 0xcfdf, 0x16a0, 0xdc9f, 0x1b2f, 0x5799, 0x0, 0x1);
        gbc.writeMem(0x86ec, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcfdf, gbc.sp());
        EXPECT(0x86ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ec));
        EXPECT(0x8f, gbc.readMem(0x86ed));
        // CB 8F 01BD
        gbc.setState(0x5d5a, 0x4c49, 0x9510, 0xda5a, 0x7755, 0xf588, 0x1, 0x0);
        gbc.writeMem(0x5d5a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4c49, gbc.sp());
        EXPECT(0x5d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 01BE
        gbc.setState(0x665, 0x6b21, 0xf400, 0x94db, 0x7bb8, 0x1ed1, 0x0, 0x1);
        gbc.writeMem(0x665, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6b21, gbc.sp());
        EXPECT(0x667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01BF
        gbc.setState(0xdf2c, 0xad5e, 0x1310, 0x63a3, 0x57c0, 0xe9e, 0x0, 0x1);
        gbc.writeMem(0xdf2c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xad5e, gbc.sp());
        EXPECT(0xdf2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf2c));
        EXPECT(0x8f, gbc.readMem(0xdf2d));
        // CB 8F 01C1
        gbc.setState(0x5db0, 0x495d, 0x54a0, 0x5b11, 0xf146, 0x6dc0, 0x1, 0x0);
        gbc.writeMem(0x5db0, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x495d, gbc.sp());
        EXPECT(0x5db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01C2
        gbc.setState(0x3bb0, 0x60c5, 0x75a0, 0x660c, 0xa678, 0x2642, 0x1, 0x0);
        gbc.writeMem(0x3bb0, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x60c5, gbc.sp());
        EXPECT(0x3bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01C3
        gbc.setState(0xebf6, 0x9c8e, 0xa670, 0xcecf, 0xa64c, 0x9417, 0x1, 0x0);
        gbc.writeMem(0xebf6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9c8e, gbc.sp());
        EXPECT(0xebf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf6));
        EXPECT(0x8f, gbc.readMem(0xebf7));
        // CB 8F 01C4
        gbc.setState(0xa299, 0x1840, 0xe750, 0x1135, 0x350d, 0x164b, 0x1, 0x0);
        gbc.writeMem(0xa299, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1840, gbc.sp());
        EXPECT(0xa29b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa299));
        EXPECT(0x8f, gbc.readMem(0xa29a));
        // CB 8F 01C6
        gbc.setState(0x7a7, 0xb1cf, 0xd6c0, 0xc4c0, 0x4541, 0x56d8, 0x0, 0x0);
        gbc.writeMem(0x7a7, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb1cf, gbc.sp());
        EXPECT(0x7a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01C7
        gbc.setState(0xa50c, 0x5b76, 0x28d0, 0x8d12, 0x9665, 0xbe9c, 0x1, 0x1);
        gbc.writeMem(0xa50c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5b76, gbc.sp());
        EXPECT(0xa50e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50c));
        EXPECT(0x8f, gbc.readMem(0xa50d));
        // CB 8F 01C8
        gbc.setState(0xbbcd, 0x27c5, 0xef80, 0x7f76, 0x1c8e, 0xb03c, 0x1, 0x1);
        gbc.writeMem(0xbbcd, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x27c5, gbc.sp());
        EXPECT(0xbbcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbcd));
        EXPECT(0x8f, gbc.readMem(0xbbce));
        // CB 8F 01C9
        gbc.setState(0x76ff, 0x7694, 0x17f0, 0x975f, 0x1ea7, 0x3a72, 0x0, 0x0);
        gbc.writeMem(0x76ff, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7694, gbc.sp());
        EXPECT(0x7701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 01CA
        gbc.setState(0x8a7b, 0x4208, 0xbb60, 0xcb81, 0x2095, 0xa131, 0x0, 0x0);
        gbc.writeMem(0x8a7b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4208, gbc.sp());
        EXPECT(0x8a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a7b));
        EXPECT(0x8f, gbc.readMem(0x8a7c));
        // CB 8F 01CB
        gbc.setState(0x2305, 0xb839, 0x2b40, 0xc9ca, 0x9ff9, 0x8118, 0x0, 0x0);
        gbc.writeMem(0x2305, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb839, gbc.sp());
        EXPECT(0x2307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01CC
        gbc.setState(0x370c, 0x4cec, 0xedc0, 0xbc69, 0xadf9, 0x9228, 0x0, 0x0);
        gbc.writeMem(0x370c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4cec, gbc.sp());
        EXPECT(0x370e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01CD
        gbc.setState(0x5779, 0x8e35, 0x48d0, 0x7ec4, 0xbae, 0xfefe, 0x1, 0x1);
        gbc.writeMem(0x5779, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8e35, gbc.sp());
        EXPECT(0x577b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 01CE
        gbc.setState(0xc19, 0xe62c, 0xae50, 0x93f2, 0x1766, 0xf571, 0x0, 0x0);
        gbc.writeMem(0xc19, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe62c, gbc.sp());
        EXPECT(0xc1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 01CF
        gbc.setState(0x975e, 0x2b96, 0xb450, 0x8f4e, 0xa40c, 0xa230, 0x0, 0x0);
        gbc.writeMem(0x975e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2b96, gbc.sp());
        EXPECT(0x9760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x975e));
        EXPECT(0x8f, gbc.readMem(0x975f));
        // CB 8F 01D0
        gbc.setState(0x497b, 0x4bd3, 0x52c0, 0x2526, 0xcad, 0x7d38, 0x0, 0x1);
        gbc.writeMem(0x497b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4bd3, gbc.sp());
        EXPECT(0x497d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01D1
        gbc.setState(0xd68f, 0xa375, 0x6d50, 0x2ae0, 0x683d, 0x6a4d, 0x1, 0x1);
        gbc.writeMem(0xd68f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa375, gbc.sp());
        EXPECT(0xd691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd68f));
        EXPECT(0x8f, gbc.readMem(0xd690));
        // CB 8F 01D2
        gbc.setState(0x861e, 0x2d4d, 0xf4b0, 0xb4db, 0x7a6f, 0x3c0f, 0x0, 0x0);
        gbc.writeMem(0x861e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2d4d, gbc.sp());
        EXPECT(0x8620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x861e));
        EXPECT(0x8f, gbc.readMem(0x861f));
        // CB 8F 01D3
        gbc.setState(0xccb5, 0x9a26, 0x9b40, 0x626c, 0xf157, 0x705f, 0x1, 0x1);
        gbc.writeMem(0xccb5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9a26, gbc.sp());
        EXPECT(0xccb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb5));
        EXPECT(0x8f, gbc.readMem(0xccb6));
        // CB 8F 01D4
        gbc.setState(0xeab7, 0x4039, 0x65d0, 0x62ea, 0x973f, 0xa581, 0x1, 0x0);
        gbc.writeMem(0xeab7, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4039, gbc.sp());
        EXPECT(0xeab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeab7));
        EXPECT(0x8f, gbc.readMem(0xeab8));
        // CB 8F 01D5
        gbc.setState(0x4e9f, 0x597, 0x1ba0, 0xf510, 0x7130, 0xd391, 0x1, 0x0);
        gbc.writeMem(0x4e9f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x597, gbc.sp());
        EXPECT(0x4ea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01D6
        gbc.setState(0x485e, 0x4675, 0xc7f0, 0x752d, 0x5a24, 0x64e2, 0x0, 0x0);
        gbc.writeMem(0x485e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4675, gbc.sp());
        EXPECT(0x4860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 01D7
        gbc.setState(0xc794, 0x1944, 0xe7c0, 0x1b3e, 0x19b9, 0x1d71, 0x0, 0x1);
        gbc.writeMem(0xc794, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1944, gbc.sp());
        EXPECT(0xc796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc794));
        EXPECT(0x8f, gbc.readMem(0xc795));
        // CB 8F 01D8
        gbc.setState(0x122f, 0x401c, 0xb850, 0x3ad9, 0x3556, 0x7545, 0x0, 0x0);
        gbc.writeMem(0x122f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x401c, gbc.sp());
        EXPECT(0x1231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 01D9
        gbc.setState(0x9237, 0x6f2c, 0x38a0, 0xaee0, 0x3a85, 0x73dc, 0x0, 0x1);
        gbc.writeMem(0x9237, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6f2c, gbc.sp());
        EXPECT(0x9239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9237));
        EXPECT(0x8f, gbc.readMem(0x9238));
        // CB 8F 01DA
        gbc.setState(0x77ef, 0x729, 0xc820, 0x9c49, 0x396c, 0x179e, 0x0, 0x1);
        gbc.writeMem(0x77ef, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x729, gbc.sp());
        EXPECT(0x77f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01DB
        gbc.setState(0xd65a, 0xfdca, 0x6ea0, 0xf924, 0xfa04, 0xf216, 0x1, 0x0);
        gbc.writeMem(0xd65a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfdca, gbc.sp());
        EXPECT(0xd65c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd65a));
        EXPECT(0x8f, gbc.readMem(0xd65b));
        // CB 8F 01DC
        gbc.setState(0x537c, 0x8ea6, 0xd440, 0x9b60, 0x72ad, 0x214b, 0x0, 0x1);
        gbc.writeMem(0x537c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8ea6, gbc.sp());
        EXPECT(0x537e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01DD
        gbc.setState(0x553d, 0x2e7e, 0xbb70, 0xb497, 0xced5, 0xa82f, 0x0, 0x0);
        gbc.writeMem(0x553d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2e7e, gbc.sp());
        EXPECT(0x553f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 01DE
        gbc.setState(0xd8d8, 0xcf7, 0x42a0, 0xa856, 0xd7c, 0xbc2e, 0x0, 0x1);
        gbc.writeMem(0xd8d8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcf7, gbc.sp());
        EXPECT(0xd8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8d8));
        EXPECT(0x8f, gbc.readMem(0xd8d9));
        // CB 8F 01DF
        gbc.setState(0xe57c, 0xdac5, 0x7c80, 0x8aed, 0x9396, 0x89a1, 0x1, 0x0);
        gbc.writeMem(0xe57c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdac5, gbc.sp());
        EXPECT(0xe57e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe57c));
        EXPECT(0x8f, gbc.readMem(0xe57d));
        // CB 8F 01E0
        gbc.setState(0x371f, 0xe3b5, 0xd7a0, 0x2b57, 0xa82f, 0x8d78, 0x1, 0x0);
        gbc.writeMem(0x371f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe3b5, gbc.sp());
        EXPECT(0x3721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01E1
        gbc.setState(0x96fe, 0x4909, 0x2380, 0xf17f, 0x7aba, 0x3fd8, 0x1, 0x0);
        gbc.writeMem(0x96fe, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4909, gbc.sp());
        EXPECT(0x9700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96fe));
        EXPECT(0x8f, gbc.readMem(0x96ff));
        // CB 8F 01E2
        gbc.setState(0x69a, 0x81cb, 0x2cf0, 0x2574, 0xbcf9, 0x3d9e, 0x1, 0x1);
        gbc.writeMem(0x69a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x81cb, gbc.sp());
        EXPECT(0x69c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 01E3
        gbc.setState(0x63e4, 0xee92, 0xbb50, 0xed19, 0x8a76, 0xc24d, 0x1, 0x0);
        gbc.writeMem(0x63e4, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xee92, gbc.sp());
        EXPECT(0x63e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 01E4
        gbc.setState(0x77c5, 0xbcdc, 0x22e0, 0x51be, 0x9daf, 0x437b, 0x0, 0x1);
        gbc.writeMem(0x77c5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbcdc, gbc.sp());
        EXPECT(0x77c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01E5
        gbc.setState(0x10b4, 0x312c, 0x8540, 0x6ac6, 0xe1ef, 0xb0a4, 0x1, 0x0);
        gbc.writeMem(0x10b4, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x312c, gbc.sp());
        EXPECT(0x10b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01E6
        gbc.setState(0xc7bc, 0xd784, 0xa550, 0x5646, 0x423c, 0x211a, 0x0, 0x0);
        gbc.writeMem(0xc7bc, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd784, gbc.sp());
        EXPECT(0xc7be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7bc));
        EXPECT(0x8f, gbc.readMem(0xc7bd));
        // CB 8F 01E8
        gbc.setState(0x9f38, 0xde14, 0xca10, 0xdbb0, 0x4e15, 0xdd90, 0x1, 0x1);
        gbc.writeMem(0x9f38, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xde14, gbc.sp());
        EXPECT(0x9f3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f38));
        EXPECT(0x8f, gbc.readMem(0x9f39));
        // CB 8F 01E9
        gbc.setState(0x3055, 0xc7c, 0x28b0, 0x25fb, 0x4b41, 0x3a0c, 0x1, 0x1);
        gbc.writeMem(0x3055, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc7c, gbc.sp());
        EXPECT(0x3057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 01EA
        gbc.setState(0xaada, 0x904, 0x6350, 0xb80e, 0xc1a2, 0x24a1, 0x0, 0x1);
        gbc.writeMem(0xaada, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x904, gbc.sp());
        EXPECT(0xaadc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaada));
        EXPECT(0x8f, gbc.readMem(0xaadb));
        // CB 8F 01EB
        gbc.setState(0x8616, 0xbfd9, 0x9660, 0xe905, 0x4580, 0x1f5c, 0x1, 0x1);
        gbc.writeMem(0x8616, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbfd9, gbc.sp());
        EXPECT(0x8618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8616));
        EXPECT(0x8f, gbc.readMem(0x8617));
        // CB 8F 01EC
        gbc.setState(0x8eb3, 0x43e3, 0xa710, 0xb90e, 0xee99, 0x78a2, 0x0, 0x0);
        gbc.writeMem(0x8eb3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x43e3, gbc.sp());
        EXPECT(0x8eb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb3));
        EXPECT(0x8f, gbc.readMem(0x8eb4));
        // CB 8F 01ED
        gbc.setState(0x7dcf, 0xcf4, 0x59d0, 0x8de9, 0xf617, 0xbe1f, 0x1, 0x0);
        gbc.writeMem(0x7dcf, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcf4, gbc.sp());
        EXPECT(0x7dd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 01EE
        gbc.setState(0xd833, 0x555b, 0x4310, 0x9809, 0xc906, 0x72b5, 0x0, 0x1);
        gbc.writeMem(0xd833, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x555b, gbc.sp());
        EXPECT(0xd835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd833));
        EXPECT(0x8f, gbc.readMem(0xd834));
        // CB 8F 01EF
        gbc.setState(0x1c2c, 0x1c90, 0x7f30, 0xda96, 0x7522, 0xd583, 0x1, 0x1);
        gbc.writeMem(0x1c2c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1c90, gbc.sp());
        EXPECT(0x1c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 01F0
        gbc.setState(0xfb9, 0x81ff, 0x7b60, 0xdd0d, 0xc40f, 0x5064, 0x1, 0x1);
        gbc.writeMem(0xfb9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x81ff, gbc.sp());
        EXPECT(0xfbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01F1
        gbc.setState(0x3466, 0xeeab, 0xfac0, 0xdd1e, 0xa33, 0x9c95, 0x0, 0x1);
        gbc.writeMem(0x3466, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xeeab, gbc.sp());
        EXPECT(0x3468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01F2
        gbc.setState(0xeed6, 0x8f7e, 0x4970, 0xef1d, 0x7a8f, 0xf49b, 0x0, 0x1);
        gbc.writeMem(0xeed6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8f7e, gbc.sp());
        EXPECT(0xeed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed6));
        EXPECT(0x8f, gbc.readMem(0xeed7));
        // CB 8F 01F3
        gbc.setState(0x4a9f, 0x3d87, 0x9290, 0x83d9, 0x9b6c, 0x9d4d, 0x0, 0x0);
        gbc.writeMem(0x4a9f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3d87, gbc.sp());
        EXPECT(0x4aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 01F4
        gbc.setState(0xa789, 0xab9d, 0xa0e0, 0x5198, 0x30c5, 0xb420, 0x0, 0x0);
        gbc.writeMem(0xa789, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xab9d, gbc.sp());
        EXPECT(0xa78b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa789));
        EXPECT(0x8f, gbc.readMem(0xa78a));
        // CB 8F 01F5
        gbc.setState(0x3ed, 0x79cb, 0x1120, 0x33c6, 0xa6e9, 0x5bf0, 0x1, 0x0);
        gbc.writeMem(0x3ed, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x79cb, gbc.sp());
        EXPECT(0x3ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01F6
        gbc.setState(0x2089, 0xefad, 0x120, 0xbf1d, 0x4e4b, 0x138a, 0x0, 0x0);
        gbc.writeMem(0x2089, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xefad, gbc.sp());
        EXPECT(0x208b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01F7
        gbc.setState(0x8f8, 0xdd0a, 0x8d50, 0xec34, 0xa86, 0x2ff, 0x1, 0x0);
        gbc.writeMem(0x8f8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xdd0a, gbc.sp());
        EXPECT(0x8fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 01F8
        gbc.setState(0x2d0a, 0xc3d1, 0xd1d0, 0xf670, 0x73d2, 0x7cf0, 0x0, 0x0);
        gbc.writeMem(0x2d0a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc3d1, gbc.sp());
        EXPECT(0x2d0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 01F9
        gbc.setState(0x5886, 0x25ef, 0x1c50, 0x811e, 0x3a36, 0x449a, 0x0, 0x0);
        gbc.writeMem(0x5886, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x25ef, gbc.sp());
        EXPECT(0x5888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 01FA
        gbc.setState(0x8ef2, 0x64ce, 0xf920, 0xfd56, 0x29a2, 0x273e, 0x1, 0x1);
        gbc.writeMem(0x8ef2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x64ce, gbc.sp());
        EXPECT(0x8ef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef2));
        EXPECT(0x8f, gbc.readMem(0x8ef3));
        // CB 8F 01FB
        gbc.setState(0x17a6, 0x9614, 0x49a0, 0x5e2e, 0x31f8, 0x7f80, 0x0, 0x0);
        gbc.writeMem(0x17a6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9614, gbc.sp());
        EXPECT(0x17a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01FC
        gbc.setState(0x7d36, 0xf7a0, 0x9300, 0x36a2, 0xcfbb, 0xcb85, 0x0, 0x1);
        gbc.writeMem(0x7d36, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf7a0, gbc.sp());
        EXPECT(0x7d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01FD
        gbc.setState(0x2c03, 0xfe23, 0xc1a0, 0xf1cd, 0xf629, 0x485c, 0x0, 0x1);
        gbc.writeMem(0x2c03, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfe23, gbc.sp());
        EXPECT(0x2c05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01FE
        gbc.setState(0x74f5, 0x9f57, 0x80, 0x929c, 0x36c1, 0xc703, 0x1, 0x1);
        gbc.writeMem(0x74f5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9f57, gbc.sp());
        EXPECT(0x74f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 01FF
        gbc.setState(0xb32d, 0xb731, 0x4a50, 0x77a9, 0xa4fb, 0xe27e, 0x0, 0x1);
        gbc.writeMem(0xb32d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb731, gbc.sp());
        EXPECT(0xb32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32d));
        EXPECT(0x8f, gbc.readMem(0xb32e));
        // CB 8F 0200
        gbc.setState(0x2e60, 0x2f56, 0xd4f0, 0xb44b, 0x63a8, 0x37d, 0x1, 0x1);
        gbc.writeMem(0x2e60, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2f56, gbc.sp());
        EXPECT(0x2e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0201
        gbc.setState(0x2c70, 0x6843, 0x6fc0, 0x8f8, 0xcd23, 0x8735, 0x0, 0x1);
        gbc.writeMem(0x2c70, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6843, gbc.sp());
        EXPECT(0x2c72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0202
        gbc.setState(0x47bf, 0xf0f6, 0x4730, 0x7d68, 0x5a27, 0xe4e7, 0x1, 0x0);
        gbc.writeMem(0x47bf, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf0f6, gbc.sp());
        EXPECT(0x47c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0203
        gbc.setState(0x7b78, 0x974d, 0x4ac0, 0x94e8, 0x747b, 0xc623, 0x1, 0x0);
        gbc.writeMem(0x7b78, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x974d, gbc.sp());
        EXPECT(0x7b7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0205
        gbc.setState(0x454, 0xa8c5, 0x7b50, 0xd7c7, 0xba90, 0x2f09, 0x1, 0x0);
        gbc.writeMem(0x454, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa8c5, gbc.sp());
        EXPECT(0x456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0206
        gbc.setState(0xe8de, 0xd5e3, 0x93b0, 0xc84, 0xc829, 0xb73, 0x1, 0x1);
        gbc.writeMem(0xe8de, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd5e3, gbc.sp());
        EXPECT(0xe8e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8de));
        EXPECT(0x8f, gbc.readMem(0xe8df));
        // CB 8F 0207
        gbc.setState(0x5562, 0xdb08, 0x2680, 0x7994, 0x8d78, 0x579, 0x1, 0x0);
        gbc.writeMem(0x5562, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdb08, gbc.sp());
        EXPECT(0x5564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0208
        gbc.setState(0x19ed, 0x675e, 0x1710, 0x5a4b, 0x5d11, 0xb067, 0x1, 0x1);
        gbc.writeMem(0x19ed, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x675e, gbc.sp());
        EXPECT(0x19ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0209
        gbc.setState(0x655e, 0x530f, 0xf430, 0xc344, 0x3332, 0x305a, 0x1, 0x0);
        gbc.writeMem(0x655e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x530f, gbc.sp());
        EXPECT(0x6560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 020A
        gbc.setState(0x9bce, 0x8ce2, 0xdc80, 0x807f, 0xc06a, 0x243a, 0x0, 0x0);
        gbc.writeMem(0x9bce, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8ce2, gbc.sp());
        EXPECT(0x9bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bce));
        EXPECT(0x8f, gbc.readMem(0x9bcf));
        // CB 8F 020C
        gbc.setState(0x86d4, 0x7c9c, 0x22e0, 0x58bf, 0x6c9a, 0xa5da, 0x0, 0x0);
        gbc.writeMem(0x86d4, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7c9c, gbc.sp());
        EXPECT(0x86d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86d4));
        EXPECT(0x8f, gbc.readMem(0x86d5));
        // CB 8F 020D
        gbc.setState(0xaee9, 0xa7d6, 0x5d40, 0x7baa, 0x6b3, 0x521d, 0x0, 0x1);
        gbc.writeMem(0xaee9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa7d6, gbc.sp());
        EXPECT(0xaeeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee9));
        EXPECT(0x8f, gbc.readMem(0xaeea));
        // CB 8F 020E
        gbc.setState(0x86f5, 0x7ed0, 0x2940, 0x5973, 0x5c3b, 0x67b5, 0x1, 0x1);
        gbc.writeMem(0x86f5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7ed0, gbc.sp());
        EXPECT(0x86f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f5));
        EXPECT(0x8f, gbc.readMem(0x86f6));
        // CB 8F 020F
        gbc.setState(0x98a7, 0xafa4, 0x33f0, 0x5b8b, 0xb648, 0xf850, 0x1, 0x1);
        gbc.writeMem(0x98a7, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xafa4, gbc.sp());
        EXPECT(0x98a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98a7));
        EXPECT(0x8f, gbc.readMem(0x98a8));
        // CB 8F 0210
        gbc.setState(0x3b86, 0xeb3f, 0x2260, 0xfcbc, 0xf992, 0xbdee, 0x1, 0x1);
        gbc.writeMem(0x3b86, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xeb3f, gbc.sp());
        EXPECT(0x3b88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0211
        gbc.setState(0x760d, 0xc71c, 0x65a0, 0xde, 0xad46, 0x859d, 0x1, 0x0);
        gbc.writeMem(0x760d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc71c, gbc.sp());
        EXPECT(0x760f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0212
        gbc.setState(0x8a01, 0xdd59, 0xf150, 0x6f3b, 0x4ed1, 0xb1b9, 0x1, 0x0);
        gbc.writeMem(0x8a01, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xdd59, gbc.sp());
        EXPECT(0x8a03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a01));
        EXPECT(0x8f, gbc.readMem(0x8a02));
        // CB 8F 0213
        gbc.setState(0x4a79, 0xfdad, 0x7410, 0xb6a1, 0xbd9e, 0x30fd, 0x1, 0x1);
        gbc.writeMem(0x4a79, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xfdad, gbc.sp());
        EXPECT(0x4a7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0214
        gbc.setState(0x575d, 0x7260, 0xa130, 0x7c1e, 0xc1c, 0xede8, 0x1, 0x0);
        gbc.writeMem(0x575d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7260, gbc.sp());
        EXPECT(0x575f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0215
        gbc.setState(0x1c7, 0x7e53, 0x4300, 0x39ac, 0x9dd6, 0x7610, 0x0, 0x0);
        gbc.writeMem(0x1c7, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7e53, gbc.sp());
        EXPECT(0x1c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0216
        gbc.setState(0x3b40, 0x3585, 0xe150, 0xb041, 0x4781, 0x444d, 0x0, 0x0);
        gbc.writeMem(0x3b40, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3585, gbc.sp());
        EXPECT(0x3b42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0217
        gbc.setState(0x8152, 0xad24, 0x9040, 0xb6cf, 0x9d1, 0x259b, 0x0, 0x1);
        gbc.writeMem(0x8152, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xad24, gbc.sp());
        EXPECT(0x8154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8152));
        EXPECT(0x8f, gbc.readMem(0x8153));
        // CB 8F 0218
        gbc.setState(0xcb9a, 0xa3d2, 0xa9c0, 0x998, 0x5cd, 0x5d88, 0x0, 0x0);
        gbc.writeMem(0xcb9a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa3d2, gbc.sp());
        EXPECT(0xcb9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb9a));
        EXPECT(0x8f, gbc.readMem(0xcb9b));
        // CB 8F 0219
        gbc.setState(0xd656, 0xa11, 0xe350, 0x8518, 0xae7a, 0xbf7f, 0x1, 0x1);
        gbc.writeMem(0xd656, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa11, gbc.sp());
        EXPECT(0xd658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd656));
        EXPECT(0x8f, gbc.readMem(0xd657));
        // CB 8F 021B
        gbc.setState(0x355b, 0x1982, 0x9580, 0xd411, 0xc7c5, 0xd0d8, 0x0, 0x1);
        gbc.writeMem(0x355b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1982, gbc.sp());
        EXPECT(0x355d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 021C
        gbc.setState(0x9b33, 0x295e, 0x9420, 0xbf24, 0x9302, 0x5e15, 0x0, 0x1);
        gbc.writeMem(0x9b33, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x295e, gbc.sp());
        EXPECT(0x9b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b33));
        EXPECT(0x8f, gbc.readMem(0x9b34));
        // CB 8F 021D
        gbc.setState(0xc2f5, 0x75b6, 0xc560, 0x6bd7, 0x1593, 0xfa27, 0x1, 0x0);
        gbc.writeMem(0xc2f5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x75b6, gbc.sp());
        EXPECT(0xc2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f5));
        EXPECT(0x8f, gbc.readMem(0xc2f6));
        // CB 8F 021E
        gbc.setState(0xaad1, 0x6891, 0x3e10, 0xbd9f, 0x1cb5, 0xfcda, 0x0, 0x0);
        gbc.writeMem(0xaad1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6891, gbc.sp());
        EXPECT(0xaad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad1));
        EXPECT(0x8f, gbc.readMem(0xaad2));
        // CB 8F 021F
        gbc.setState(0xa514, 0xe363, 0x9090, 0x2d2b, 0x7a88, 0xda3f, 0x0, 0x0);
        gbc.writeMem(0xa514, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe363, gbc.sp());
        EXPECT(0xa516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa514));
        EXPECT(0x8f, gbc.readMem(0xa515));
        // CB 8F 0220
        gbc.setState(0x6880, 0x4395, 0xa040, 0xf47e, 0x9ecc, 0x5a10, 0x0, 0x0);
        gbc.writeMem(0x6880, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4395, gbc.sp());
        EXPECT(0x6882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0221
        gbc.setState(0x253a, 0x3c57, 0x4510, 0x2b37, 0x2f30, 0xf84d, 0x1, 0x0);
        gbc.writeMem(0x253a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3c57, gbc.sp());
        EXPECT(0x253c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0222
        gbc.setState(0x6298, 0xd731, 0x2300, 0xc5f6, 0x1036, 0x70a9, 0x0, 0x1);
        gbc.writeMem(0x6298, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd731, gbc.sp());
        EXPECT(0x629a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0223
        gbc.setState(0x5232, 0x9d94, 0x5960, 0x9164, 0x2752, 0x72e, 0x0, 0x0);
        gbc.writeMem(0x5232, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9d94, gbc.sp());
        EXPECT(0x5234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0224
        gbc.setState(0x842d, 0x4dc8, 0x8640, 0x8c04, 0xa43, 0xb9fc, 0x1, 0x1);
        gbc.writeMem(0x842d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4dc8, gbc.sp());
        EXPECT(0x842f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x842d));
        EXPECT(0x8f, gbc.readMem(0x842e));
        // CB 8F 0225
        gbc.setState(0x446c, 0x746a, 0x4440, 0x9ca2, 0xb361, 0x890e, 0x1, 0x0);
        gbc.writeMem(0x446c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x746a, gbc.sp());
        EXPECT(0x446e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0226
        gbc.setState(0x4ab2, 0xe6cd, 0xc1d0, 0x2a34, 0x4162, 0x8b1, 0x1, 0x1);
        gbc.writeMem(0x4ab2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe6cd, gbc.sp());
        EXPECT(0x4ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0227
        gbc.setState(0xe620, 0xa6e9, 0xbcd0, 0xbb4c, 0x911e, 0x9fc2, 0x0, 0x0);
        gbc.writeMem(0xe620, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa6e9, gbc.sp());
        EXPECT(0xe622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe620));
        EXPECT(0x8f, gbc.readMem(0xe621));
        // CB 8F 0228
        gbc.setState(0xc48d, 0x13ec, 0xd690, 0x827b, 0xd1c3, 0x8bd6, 0x0, 0x1);
        gbc.writeMem(0xc48d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x13ec, gbc.sp());
        EXPECT(0xc48f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc48d));
        EXPECT(0x8f, gbc.readMem(0xc48e));
        // CB 8F 0229
        gbc.setState(0x84a2, 0x8c4a, 0x8cd0, 0x5c9e, 0xa5b9, 0x9f7c, 0x0, 0x1);
        gbc.writeMem(0x84a2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8c4a, gbc.sp());
        EXPECT(0x84a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a2));
        EXPECT(0x8f, gbc.readMem(0x84a3));
        // CB 8F 022A
        gbc.setState(0xdef2, 0xbbbf, 0x4920, 0x224e, 0xd869, 0x6159, 0x0, 0x1);
        gbc.writeMem(0xdef2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbbbf, gbc.sp());
        EXPECT(0xdef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdef2));
        EXPECT(0x8f, gbc.readMem(0xdef3));
        // CB 8F 022B
        gbc.setState(0xbe4f, 0xa74e, 0x8a10, 0x843a, 0x8a5a, 0x349f, 0x1, 0x0);
        gbc.writeMem(0xbe4f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa74e, gbc.sp());
        EXPECT(0xbe51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe4f));
        EXPECT(0x8f, gbc.readMem(0xbe50));
        // CB 8F 022C
        gbc.setState(0xa7f0, 0x6d75, 0x5fe0, 0xe90c, 0x1f4c, 0x6a1a, 0x1, 0x0);
        gbc.writeMem(0xa7f0, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6d75, gbc.sp());
        EXPECT(0xa7f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f0));
        EXPECT(0x8f, gbc.readMem(0xa7f1));
        // CB 8F 022D
        gbc.setState(0x28b4, 0x4c35, 0xe660, 0xdf71, 0x5b13, 0x3821, 0x1, 0x1);
        gbc.writeMem(0x28b4, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4c35, gbc.sp());
        EXPECT(0x28b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 022E
        gbc.setState(0x9ea7, 0x1dcd, 0xaea0, 0x4e2e, 0x8200, 0x9c19, 0x0, 0x0);
        gbc.writeMem(0x9ea7, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1dcd, gbc.sp());
        EXPECT(0x9ea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea7));
        EXPECT(0x8f, gbc.readMem(0x9ea8));
        // CB 8F 022F
        gbc.setState(0x49e6, 0x1b18, 0x6d10, 0x5a05, 0xf160, 0x287, 0x0, 0x0);
        gbc.writeMem(0x49e6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1b18, gbc.sp());
        EXPECT(0x49e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0230
        gbc.setState(0x7f9e, 0x3aa5, 0x19f0, 0xa8b3, 0x8e36, 0x6a42, 0x1, 0x1);
        gbc.writeMem(0x7f9e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3aa5, gbc.sp());
        EXPECT(0x7fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0231
        gbc.setState(0x4c44, 0xbd26, 0x1090, 0xc0e7, 0x8617, 0x79d, 0x0, 0x1);
        gbc.writeMem(0x4c44, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xbd26, gbc.sp());
        EXPECT(0x4c46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0232
        gbc.setState(0xdfd4, 0x5a94, 0x32b0, 0x97ab, 0x705e, 0xda9c, 0x1, 0x0);
        gbc.writeMem(0xdfd4, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5a94, gbc.sp());
        EXPECT(0xdfd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd4));
        EXPECT(0x8f, gbc.readMem(0xdfd5));
        // CB 8F 0233
        gbc.setState(0x466, 0x2b6c, 0x1ba0, 0x9053, 0x90dd, 0x4501, 0x1, 0x0);
        gbc.writeMem(0x466, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2b6c, gbc.sp());
        EXPECT(0x468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0234
        gbc.setState(0x495f, 0x89, 0xff80, 0x5c09, 0xf9f0, 0xf981, 0x1, 0x0);
        gbc.writeMem(0x495f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x89, gbc.sp());
        EXPECT(0x4961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0235
        gbc.setState(0x6cbe, 0x9e08, 0x36d0, 0x1ae0, 0x21cf, 0x1cf6, 0x0, 0x0);
        gbc.writeMem(0x6cbe, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9e08, gbc.sp());
        EXPECT(0x6cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0237
        gbc.setState(0xa6b9, 0x43, 0xe730, 0x5120, 0x2220, 0x5ba5, 0x0, 0x1);
        gbc.writeMem(0xa6b9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x43, gbc.sp());
        EXPECT(0xa6bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b9));
        EXPECT(0x8f, gbc.readMem(0xa6ba));
        // CB 8F 0238
        gbc.setState(0x3bb1, 0x1f89, 0x7ca0, 0xefa8, 0xb0ae, 0x271, 0x1, 0x0);
        gbc.writeMem(0x3bb1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1f89, gbc.sp());
        EXPECT(0x3bb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0239
        gbc.setState(0xbe22, 0xda35, 0xbef0, 0x58e3, 0x1e49, 0x202b, 0x0, 0x1);
        gbc.writeMem(0xbe22, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xda35, gbc.sp());
        EXPECT(0xbe24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe22));
        EXPECT(0x8f, gbc.readMem(0xbe23));
        // CB 8F 023A
        gbc.setState(0x24c3, 0xc17d, 0xceb0, 0x246d, 0xf2a4, 0x4731, 0x1, 0x1);
        gbc.writeMem(0x24c3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc17d, gbc.sp());
        EXPECT(0x24c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 023B
        gbc.setState(0xd910, 0x7c65, 0xaa10, 0x8d90, 0x131d, 0x6ff0, 0x0, 0x1);
        gbc.writeMem(0xd910, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7c65, gbc.sp());
        EXPECT(0xd912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd910));
        EXPECT(0x8f, gbc.readMem(0xd911));
        // CB 8F 023C
        gbc.setState(0x35d8, 0xd8e9, 0xc190, 0xe681, 0xf816, 0x16fc, 0x0, 0x0);
        gbc.writeMem(0x35d8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd8e9, gbc.sp());
        EXPECT(0x35da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 023D
        gbc.setState(0x2524, 0xaf5d, 0x6a70, 0xcc46, 0xb01d, 0x82f9, 0x1, 0x0);
        gbc.writeMem(0x2524, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xaf5d, gbc.sp());
        EXPECT(0x2526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 023E
        gbc.setState(0xcdf, 0x17bf, 0xbbc0, 0xfaca, 0x7b54, 0x36a7, 0x1, 0x1);
        gbc.writeMem(0xcdf, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x17bf, gbc.sp());
        EXPECT(0xce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 023F
        gbc.setState(0x1d89, 0x85d5, 0xfef0, 0x1aa9, 0x99ac, 0x7e77, 0x1, 0x0);
        gbc.writeMem(0x1d89, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x85d5, gbc.sp());
        EXPECT(0x1d8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0240
        gbc.setState(0x1363, 0x8b7, 0x1b0, 0xe212, 0x73a4, 0xdfa3, 0x0, 0x0);
        gbc.writeMem(0x1363, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8b7, gbc.sp());
        EXPECT(0x1365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0241
        gbc.setState(0x5428, 0xe65c, 0x6130, 0xbeb, 0x3154, 0xdbc9, 0x0, 0x1);
        gbc.writeMem(0x5428, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe65c, gbc.sp());
        EXPECT(0x542a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0242
        gbc.setState(0x1bf9, 0xe54c, 0xa290, 0xd871, 0xe9d6, 0xdd19, 0x1, 0x1);
        gbc.writeMem(0x1bf9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe54c, gbc.sp());
        EXPECT(0x1bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0243
        gbc.setState(0x4ec9, 0xa85b, 0x9e90, 0x5ffc, 0x5a16, 0x6aff, 0x0, 0x0);
        gbc.writeMem(0x4ec9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa85b, gbc.sp());
        EXPECT(0x4ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0244
        gbc.setState(0x2e75, 0x4699, 0xf10, 0x8050, 0x8bc8, 0xcc4, 0x1, 0x1);
        gbc.writeMem(0x2e75, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4699, gbc.sp());
        EXPECT(0x2e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0245
        gbc.setState(0x8abe, 0xd3a9, 0xf370, 0x5ee, 0xaa9a, 0x20c5, 0x1, 0x0);
        gbc.writeMem(0x8abe, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd3a9, gbc.sp());
        EXPECT(0x8ac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8abe));
        EXPECT(0x8f, gbc.readMem(0x8abf));
        // CB 8F 0246
        gbc.setState(0xeccd, 0x4dda, 0x1f20, 0xb93b, 0xf38e, 0x5a36, 0x0, 0x0);
        gbc.writeMem(0xeccd, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4dda, gbc.sp());
        EXPECT(0xeccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeccd));
        EXPECT(0x8f, gbc.readMem(0xecce));
        // CB 8F 0247
        gbc.setState(0x42f9, 0x446f, 0x84a0, 0x894c, 0xcb87, 0xb90d, 0x0, 0x0);
        gbc.writeMem(0x42f9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x446f, gbc.sp());
        EXPECT(0x42fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0248
        gbc.setState(0xeeb0, 0xf8ef, 0xf650, 0x5593, 0x6f03, 0x7aa9, 0x0, 0x1);
        gbc.writeMem(0xeeb0, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf8ef, gbc.sp());
        EXPECT(0xeeb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb0));
        EXPECT(0x8f, gbc.readMem(0xeeb1));
        // CB 8F 0249
        gbc.setState(0x757a, 0x4145, 0x79f0, 0x5e4f, 0xf8d8, 0x6c47, 0x1, 0x1);
        gbc.writeMem(0x757a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4145, gbc.sp());
        EXPECT(0x757c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 024A
        gbc.setState(0xa7fd, 0xcad, 0x7df0, 0x2b83, 0x7080, 0xf348, 0x1, 0x1);
        gbc.writeMem(0xa7fd, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xcad, gbc.sp());
        EXPECT(0xa7ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7fd));
        EXPECT(0x8f, gbc.readMem(0xa7fe));
        // CB 8F 024B
        gbc.setState(0xf71, 0xa5e, 0x5780, 0x8df2, 0xd420, 0xa6c5, 0x1, 0x1);
        gbc.writeMem(0xf71, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa5e, gbc.sp());
        EXPECT(0xf73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 024C
        gbc.setState(0xc68f, 0x9e6b, 0x9ca0, 0xce39, 0x7db0, 0x1123, 0x1, 0x0);
        gbc.writeMem(0xc68f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9e6b, gbc.sp());
        EXPECT(0xc691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc68f));
        EXPECT(0x8f, gbc.readMem(0xc690));
        // CB 8F 024D
        gbc.setState(0x2330, 0xebf, 0xf420, 0x9108, 0xe0ac, 0x4864, 0x0, 0x0);
        gbc.writeMem(0x2330, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xebf, gbc.sp());
        EXPECT(0x2332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 024E
        gbc.setState(0x76f5, 0xf4a1, 0x27b0, 0x5577, 0x7b57, 0x2a8b, 0x1, 0x0);
        gbc.writeMem(0x76f5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf4a1, gbc.sp());
        EXPECT(0x76f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 024F
        gbc.setState(0x146c, 0xd5e0, 0xbe40, 0x890, 0xc5dd, 0xb401, 0x1, 0x1);
        gbc.writeMem(0x146c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd5e0, gbc.sp());
        EXPECT(0x146e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0250
        gbc.setState(0x13bb, 0x4074, 0x6e20, 0xc1fd, 0x6522, 0x49c3, 0x0, 0x0);
        gbc.writeMem(0x13bb, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4074, gbc.sp());
        EXPECT(0x13bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0252
        gbc.setState(0x1ad3, 0xb062, 0xfa60, 0xb5d4, 0x1d1a, 0xa3d9, 0x1, 0x1);
        gbc.writeMem(0x1ad3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb062, gbc.sp());
        EXPECT(0x1ad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0253
        gbc.setState(0x2b50, 0xe43f, 0x3e0, 0x6182, 0x7bed, 0x4e3b, 0x1, 0x0);
        gbc.writeMem(0x2b50, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe43f, gbc.sp());
        EXPECT(0x2b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0254
        gbc.setState(0x86f7, 0x4d96, 0x3060, 0x20a4, 0x3b81, 0xb562, 0x0, 0x1);
        gbc.writeMem(0x86f7, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4d96, gbc.sp());
        EXPECT(0x86f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f7));
        EXPECT(0x8f, gbc.readMem(0x86f8));
        // CB 8F 0255
        gbc.setState(0xdcfe, 0xc804, 0x7980, 0xa279, 0xe9e1, 0xc760, 0x1, 0x0);
        gbc.writeMem(0xdcfe, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc804, gbc.sp());
        EXPECT(0xdd00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcfe));
        EXPECT(0x8f, gbc.readMem(0xdcff));
        // CB 8F 0256
        gbc.setState(0x157b, 0x44b8, 0xd520, 0x3dfa, 0xbc83, 0x4e88, 0x1, 0x0);
        gbc.writeMem(0x157b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x44b8, gbc.sp());
        EXPECT(0x157d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0257
        gbc.setState(0x2b5c, 0x1280, 0x9920, 0xc41f, 0xd86f, 0xd92b, 0x0, 0x1);
        gbc.writeMem(0x2b5c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1280, gbc.sp());
        EXPECT(0x2b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0258
        gbc.setState(0xa803, 0xc14d, 0x4d10, 0xcd0e, 0x4096, 0xd9b9, 0x0, 0x0);
        gbc.writeMem(0xa803, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc14d, gbc.sp());
        EXPECT(0xa805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa803));
        EXPECT(0x8f, gbc.readMem(0xa804));
        // CB 8F 0259
        gbc.setState(0x301e, 0x97ac, 0x3ef0, 0x731a, 0xbeb5, 0x151, 0x1, 0x0);
        gbc.writeMem(0x301e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x97ac, gbc.sp());
        EXPECT(0x3020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 025A
        gbc.setState(0x5f93, 0x51a2, 0x8360, 0x82da, 0xef9d, 0xc18d, 0x0, 0x0);
        gbc.writeMem(0x5f93, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x51a2, gbc.sp());
        EXPECT(0x5f95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 025B
        gbc.setState(0x25c4, 0x797e, 0xc620, 0xf651, 0x1b18, 0xd48f, 0x1, 0x0);
        gbc.writeMem(0x25c4, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x797e, gbc.sp());
        EXPECT(0x25c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 025C
        gbc.setState(0x2fa, 0x2b53, 0xcfd0, 0x89df, 0x2eeb, 0xc35b, 0x1, 0x0);
        gbc.writeMem(0x2fa, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2b53, gbc.sp());
        EXPECT(0x2fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 025D
        gbc.setState(0x8edd, 0x696f, 0xb3a0, 0xe844, 0x64f8, 0x80b4, 0x1, 0x0);
        gbc.writeMem(0x8edd, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x696f, gbc.sp());
        EXPECT(0x8edf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8edd));
        EXPECT(0x8f, gbc.readMem(0x8ede));
        // CB 8F 025F
        gbc.setState(0x954b, 0x46cd, 0x8550, 0xba7b, 0xbd90, 0xb4cc, 0x0, 0x1);
        gbc.writeMem(0x954b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x46cd, gbc.sp());
        EXPECT(0x954d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x954b));
        EXPECT(0x8f, gbc.readMem(0x954c));
        // CB 8F 0260
        gbc.setState(0x5246, 0xfec, 0x4d20, 0xdcb0, 0x20eb, 0x730d, 0x1, 0x0);
        gbc.writeMem(0x5246, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfec, gbc.sp());
        EXPECT(0x5248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0262
        gbc.setState(0x7a9e, 0x4069, 0xf430, 0x36a2, 0x136c, 0xa959, 0x1, 0x0);
        gbc.writeMem(0x7a9e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4069, gbc.sp());
        EXPECT(0x7aa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0263
        gbc.setState(0x60fd, 0x45dc, 0x3670, 0xa49f, 0xae13, 0x9940, 0x1, 0x0);
        gbc.writeMem(0x60fd, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x45dc, gbc.sp());
        EXPECT(0x60ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0264
        gbc.setState(0x3ec1, 0x595d, 0xf450, 0x21d9, 0x553a, 0xef16, 0x1, 0x1);
        gbc.writeMem(0x3ec1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x595d, gbc.sp());
        EXPECT(0x3ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0265
        gbc.setState(0x3e20, 0x9665, 0xfb50, 0x9292, 0x13bb, 0xaead, 0x0, 0x1);
        gbc.writeMem(0x3e20, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9665, gbc.sp());
        EXPECT(0x3e22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0266
        gbc.setState(0x25b9, 0x8309, 0xe980, 0x64, 0x4300, 0xb9cf, 0x1, 0x1);
        gbc.writeMem(0x25b9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8309, gbc.sp());
        EXPECT(0x25bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0267
        gbc.setState(0x94dc, 0x5ba5, 0x1c50, 0x182c, 0x7269, 0x5881, 0x0, 0x1);
        gbc.writeMem(0x94dc, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5ba5, gbc.sp());
        EXPECT(0x94de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94dc));
        EXPECT(0x8f, gbc.readMem(0x94dd));
        // CB 8F 0268
        gbc.setState(0x3276, 0xb727, 0x2840, 0x1893, 0xe54c, 0x62d, 0x1, 0x0);
        gbc.writeMem(0x3276, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb727, gbc.sp());
        EXPECT(0x3278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0269
        gbc.setState(0x50d0, 0xb3e7, 0xfca0, 0xc85, 0xe615, 0xed57, 0x1, 0x1);
        gbc.writeMem(0x50d0, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb3e7, gbc.sp());
        EXPECT(0x50d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 026A
        gbc.setState(0x822b, 0xf003, 0xe850, 0x3d07, 0x5ff8, 0xd01d, 0x1, 0x1);
        gbc.writeMem(0x822b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf003, gbc.sp());
        EXPECT(0x822d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x822b));
        EXPECT(0x8f, gbc.readMem(0x822c));
        // CB 8F 026B
        gbc.setState(0xa40b, 0x5ce, 0x870, 0x2148, 0xe23e, 0x709a, 0x0, 0x1);
        gbc.writeMem(0xa40b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5ce, gbc.sp());
        EXPECT(0xa40d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa40b));
        EXPECT(0x8f, gbc.readMem(0xa40c));
        // CB 8F 026C
        gbc.setState(0x23, 0xd554, 0x770, 0xdb48, 0x5d18, 0xaa4f, 0x1, 0x0);
        gbc.writeMem(0x23, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd554, gbc.sp());
        EXPECT(0x25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 026D
        gbc.setState(0x7a24, 0x42d4, 0x9670, 0x1ada, 0xadbc, 0x93b8, 0x0, 0x1);
        gbc.writeMem(0x7a24, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x42d4, gbc.sp());
        EXPECT(0x7a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 026E
        gbc.setState(0x82e6, 0x9dd4, 0x4680, 0x6be2, 0xc284, 0xc5b5, 0x0, 0x1);
        gbc.writeMem(0x82e6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9dd4, gbc.sp());
        EXPECT(0x82e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e6));
        EXPECT(0x8f, gbc.readMem(0x82e7));
        // CB 8F 026F
        gbc.setState(0x2ecd, 0xaba, 0xe230, 0xb412, 0x3f58, 0xdb0f, 0x0, 0x0);
        gbc.writeMem(0x2ecd, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xaba, gbc.sp());
        EXPECT(0x2ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0270
        gbc.setState(0x8436, 0xaaeb, 0xae50, 0xd743, 0xc32f, 0xf5b8, 0x0, 0x1);
        gbc.writeMem(0x8436, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xaaeb, gbc.sp());
        EXPECT(0x8438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8436));
        EXPECT(0x8f, gbc.readMem(0x8437));
        // CB 8F 0271
        gbc.setState(0x76e8, 0x1f12, 0x6260, 0x5551, 0xf82b, 0xdd29, 0x1, 0x1);
        gbc.writeMem(0x76e8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1f12, gbc.sp());
        EXPECT(0x76ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0272
        gbc.setState(0x50ca, 0x4bf1, 0x54b0, 0x3777, 0xaa6c, 0x8852, 0x0, 0x1);
        gbc.writeMem(0x50ca, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4bf1, gbc.sp());
        EXPECT(0x50cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0273
        gbc.setState(0x2f21, 0xc7a5, 0x8f70, 0x6c29, 0x61, 0x5e1c, 0x0, 0x1);
        gbc.writeMem(0x2f21, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc7a5, gbc.sp());
        EXPECT(0x2f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0274
        gbc.setState(0xe7d4, 0xe69, 0x2f60, 0x4728, 0xd4e1, 0x182b, 0x0, 0x0);
        gbc.writeMem(0xe7d4, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe69, gbc.sp());
        EXPECT(0xe7d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d4));
        EXPECT(0x8f, gbc.readMem(0xe7d5));
        // CB 8F 0275
        gbc.setState(0xe1be, 0x2792, 0xe550, 0x9a6a, 0xf2b2, 0xa9d1, 0x0, 0x1);
        gbc.writeMem(0xe1be, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2792, gbc.sp());
        EXPECT(0xe1c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1be));
        EXPECT(0x8f, gbc.readMem(0xe1bf));
        // CB 8F 0276
        gbc.setState(0x7670, 0xfa47, 0x4cd0, 0x1bb6, 0xe897, 0x3288, 0x1, 0x1);
        gbc.writeMem(0x7670, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfa47, gbc.sp());
        EXPECT(0x7672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0277
        gbc.setState(0x9d3a, 0xd28a, 0xe510, 0x10eb, 0x26d4, 0xd123, 0x1, 0x1);
        gbc.writeMem(0x9d3a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd28a, gbc.sp());
        EXPECT(0x9d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d3a));
        EXPECT(0x8f, gbc.readMem(0x9d3b));
        // CB 8F 0278
        gbc.setState(0x707f, 0x53a8, 0x4b10, 0xaa7c, 0xc2f3, 0x9d19, 0x0, 0x0);
        gbc.writeMem(0x707f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x53a8, gbc.sp());
        EXPECT(0x7081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0279
        gbc.setState(0x4e3c, 0x16d8, 0x30b0, 0x9b89, 0x76fc, 0xcf6f, 0x0, 0x0);
        gbc.writeMem(0x4e3c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x16d8, gbc.sp());
        EXPECT(0x4e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 027B
        gbc.setState(0x2a7d, 0x3773, 0x14b0, 0x3de4, 0x49bb, 0xedb3, 0x1, 0x0);
        gbc.writeMem(0x2a7d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3773, gbc.sp());
        EXPECT(0x2a7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 027C
        gbc.setState(0x369, 0xb097, 0xa30, 0x629, 0x73e2, 0x19cf, 0x0, 0x1);
        gbc.writeMem(0x369, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb097, gbc.sp());
        EXPECT(0x36b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 027D
        gbc.setState(0xc787, 0x9235, 0x53e0, 0xa740, 0x726f, 0x9004, 0x1, 0x1);
        gbc.writeMem(0xc787, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9235, gbc.sp());
        EXPECT(0xc789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc787));
        EXPECT(0x8f, gbc.readMem(0xc788));
        // CB 8F 027E
        gbc.setState(0x56f3, 0x356e, 0xf4b0, 0xe793, 0x2f29, 0x4517, 0x0, 0x1);
        gbc.writeMem(0x56f3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x356e, gbc.sp());
        EXPECT(0x56f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 027F
        gbc.setState(0x14f5, 0x720e, 0xf790, 0xdfd3, 0xd4ef, 0x1bf, 0x0, 0x1);
        gbc.writeMem(0x14f5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x720e, gbc.sp());
        EXPECT(0x14f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0280
        gbc.setState(0xd427, 0xeadd, 0x3a90, 0x3b24, 0x8845, 0x6ac5, 0x1, 0x0);
        gbc.writeMem(0xd427, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xeadd, gbc.sp());
        EXPECT(0xd429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd427));
        EXPECT(0x8f, gbc.readMem(0xd428));
        // CB 8F 0281
        gbc.setState(0x37a6, 0xe950, 0x7f70, 0xc3bb, 0x21a2, 0xf1b0, 0x1, 0x1);
        gbc.writeMem(0x37a6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe950, gbc.sp());
        EXPECT(0x37a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0282
        gbc.setState(0x4101, 0xa225, 0x67b0, 0xc42d, 0x1b67, 0x4b80, 0x1, 0x0);
        gbc.writeMem(0x4101, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa225, gbc.sp());
        EXPECT(0x4103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0283
        gbc.setState(0x6763, 0x29c9, 0xa660, 0xc293, 0xcfcc, 0x6f9b, 0x1, 0x0);
        gbc.writeMem(0x6763, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x29c9, gbc.sp());
        EXPECT(0x6765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0284
        gbc.setState(0x8e6a, 0xc4d4, 0xbcf0, 0x9fee, 0xdada, 0x7c7c, 0x0, 0x0);
        gbc.writeMem(0x8e6a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc4d4, gbc.sp());
        EXPECT(0x8e6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e6a));
        EXPECT(0x8f, gbc.readMem(0x8e6b));
        // CB 8F 0285
        gbc.setState(0xbc3f, 0x63f9, 0xbd80, 0x6f39, 0x8e1f, 0x4e6a, 0x1, 0x1);
        gbc.writeMem(0xbc3f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x63f9, gbc.sp());
        EXPECT(0xbc41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc3f));
        EXPECT(0x8f, gbc.readMem(0xbc40));
        // CB 8F 0286
        gbc.setState(0x25dc, 0x4d93, 0x30e0, 0x26a0, 0x6156, 0x8cf3, 0x1, 0x1);
        gbc.writeMem(0x25dc, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4d93, gbc.sp());
        EXPECT(0x25de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0287
        gbc.setState(0x38cc, 0x14c6, 0x5e70, 0x5dea, 0x92c5, 0xd088, 0x0, 0x1);
        gbc.writeMem(0x38cc, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x14c6, gbc.sp());
        EXPECT(0x38ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0288
        gbc.setState(0xea44, 0xf5dc, 0x3ec0, 0x473e, 0x9d74, 0x58f2, 0x0, 0x0);
        gbc.writeMem(0xea44, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf5dc, gbc.sp());
        EXPECT(0xea46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea44));
        EXPECT(0x8f, gbc.readMem(0xea45));
        // CB 8F 0289
        gbc.setState(0x8824, 0xf556, 0xe890, 0xb1fa, 0x6c34, 0xd5e, 0x1, 0x1);
        gbc.writeMem(0x8824, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf556, gbc.sp());
        EXPECT(0x8826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8824));
        EXPECT(0x8f, gbc.readMem(0x8825));
        // CB 8F 028A
        gbc.setState(0x323e, 0x7979, 0xe230, 0x9ef3, 0x1e91, 0x94bf, 0x0, 0x1);
        gbc.writeMem(0x323e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7979, gbc.sp());
        EXPECT(0x3240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 028B
        gbc.setState(0x41e, 0xb95b, 0x8f70, 0xa564, 0x289b, 0x739c, 0x1, 0x1);
        gbc.writeMem(0x41e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb95b, gbc.sp());
        EXPECT(0x420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 028C
        gbc.setState(0x9e14, 0xb6e5, 0x15e0, 0x6466, 0xebd1, 0xd146, 0x1, 0x1);
        gbc.writeMem(0x9e14, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb6e5, gbc.sp());
        EXPECT(0x9e16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e14));
        EXPECT(0x8f, gbc.readMem(0x9e15));
        // CB 8F 028D
        gbc.setState(0x1f33, 0xa50e, 0xa0, 0x51a4, 0xd7cf, 0x5fe1, 0x0, 0x1);
        gbc.writeMem(0x1f33, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa50e, gbc.sp());
        EXPECT(0x1f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 028E
        gbc.setState(0xbadb, 0x4c83, 0x6620, 0x49ec, 0x76eb, 0xea7b, 0x1, 0x0);
        gbc.writeMem(0xbadb, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4c83, gbc.sp());
        EXPECT(0xbadd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbadb));
        EXPECT(0x8f, gbc.readMem(0xbadc));
        // CB 8F 028F
        gbc.setState(0x52b9, 0xc0ff, 0xf910, 0xf928, 0x54f2, 0x369c, 0x1, 0x1);
        gbc.writeMem(0x52b9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc0ff, gbc.sp());
        EXPECT(0x52bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0290
        gbc.setState(0xa962, 0xa94b, 0x9ca0, 0x47fe, 0x45a7, 0xc439, 0x1, 0x0);
        gbc.writeMem(0xa962, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa94b, gbc.sp());
        EXPECT(0xa964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa962));
        EXPECT(0x8f, gbc.readMem(0xa963));
        // CB 8F 0291
        gbc.setState(0x2701, 0x3df9, 0x5b0, 0x4fe3, 0xde67, 0x5562, 0x0, 0x0);
        gbc.writeMem(0x2701, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3df9, gbc.sp());
        EXPECT(0x2703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0292
        gbc.setState(0xb7ba, 0xebbd, 0xd800, 0x88f8, 0x97, 0x45ee, 0x1, 0x1);
        gbc.writeMem(0xb7ba, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xebbd, gbc.sp());
        EXPECT(0xb7bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ba));
        EXPECT(0x8f, gbc.readMem(0xb7bb));
        // CB 8F 0293
        gbc.setState(0x4671, 0xf491, 0x5000, 0xdaaa, 0xfa96, 0xe4e7, 0x1, 0x1);
        gbc.writeMem(0x4671, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf491, gbc.sp());
        EXPECT(0x4673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0294
        gbc.setState(0x7716, 0x95f2, 0x16b0, 0x5bc3, 0xc43a, 0xbb5b, 0x0, 0x1);
        gbc.writeMem(0x7716, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x95f2, gbc.sp());
        EXPECT(0x7718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0295
        gbc.setState(0x895d, 0x55db, 0x46e0, 0x4e26, 0x4fc8, 0xef3f, 0x0, 0x1);
        gbc.writeMem(0x895d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x55db, gbc.sp());
        EXPECT(0x895f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x895d));
        EXPECT(0x8f, gbc.readMem(0x895e));
        // CB 8F 0296
        gbc.setState(0xde48, 0x2248, 0xf180, 0xb13e, 0x1cf7, 0xd0af, 0x0, 0x0);
        gbc.writeMem(0xde48, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2248, gbc.sp());
        EXPECT(0xde4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde48));
        EXPECT(0x8f, gbc.readMem(0xde49));
        // CB 8F 0297
        gbc.setState(0x4163, 0x7512, 0x87c0, 0xf383, 0xe87b, 0xd5e8, 0x1, 0x1);
        gbc.writeMem(0x4163, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7512, gbc.sp());
        EXPECT(0x4165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0298
        gbc.setState(0xd5ec, 0xb0b1, 0x73e0, 0x4ef7, 0xe156, 0x3fce, 0x0, 0x1);
        gbc.writeMem(0xd5ec, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb0b1, gbc.sp());
        EXPECT(0xd5ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ec));
        EXPECT(0x8f, gbc.readMem(0xd5ed));
        // CB 8F 0299
        gbc.setState(0xde89, 0x254, 0xdd50, 0x61d5, 0xf0a1, 0xc2fb, 0x1, 0x1);
        gbc.writeMem(0xde89, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x254, gbc.sp());
        EXPECT(0xde8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde89));
        EXPECT(0x8f, gbc.readMem(0xde8a));
        // CB 8F 029A
        gbc.setState(0x7510, 0x7c4a, 0xa8e0, 0x209f, 0x7bca, 0x8231, 0x0, 0x0);
        gbc.writeMem(0x7510, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7c4a, gbc.sp());
        EXPECT(0x7512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 029B
        gbc.setState(0xb626, 0xd3dd, 0xeb30, 0xe64b, 0x3702, 0xc97d, 0x0, 0x0);
        gbc.writeMem(0xb626, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd3dd, gbc.sp());
        EXPECT(0xb628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb626));
        EXPECT(0x8f, gbc.readMem(0xb627));
        // CB 8F 029D
        gbc.setState(0x4caf, 0xcac0, 0xb580, 0xa614, 0xf212, 0x60e2, 0x0, 0x1);
        gbc.writeMem(0x4caf, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xcac0, gbc.sp());
        EXPECT(0x4cb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 029E
        gbc.setState(0x6cb0, 0xa8b8, 0x3cd0, 0x4bba, 0x3db3, 0x4df5, 0x0, 0x1);
        gbc.writeMem(0x6cb0, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa8b8, gbc.sp());
        EXPECT(0x6cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 029F
        gbc.setState(0x5c23, 0xb166, 0x9560, 0x435b, 0xcabb, 0xb62b, 0x0, 0x1);
        gbc.writeMem(0x5c23, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb166, gbc.sp());
        EXPECT(0x5c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02A0
        gbc.setState(0x5862, 0x596c, 0x5d10, 0xd4d8, 0xdd9c, 0xe6c5, 0x1, 0x1);
        gbc.writeMem(0x5862, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x596c, gbc.sp());
        EXPECT(0x5864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02A1
        gbc.setState(0xdeba, 0x8a65, 0x1670, 0xad07, 0x3206, 0xd818, 0x0, 0x0);
        gbc.writeMem(0xdeba, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8a65, gbc.sp());
        EXPECT(0xdebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeba));
        EXPECT(0x8f, gbc.readMem(0xdebb));
        // CB 8F 02A2
        gbc.setState(0xbffd, 0x8135, 0xa590, 0xe46e, 0x13bd, 0x6cac, 0x1, 0x0);
        gbc.writeMem(0xbffd, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8135, gbc.sp());
        EXPECT(0xbfff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbffd));
        EXPECT(0x8f, gbc.readMem(0xbffe));
        // CB 8F 02A3
        gbc.setState(0x7258, 0xde5c, 0xc3a0, 0x4fa7, 0x2a93, 0xc217, 0x1, 0x1);
        gbc.writeMem(0x7258, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xde5c, gbc.sp());
        EXPECT(0x725a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02A4
        gbc.setState(0x3fcf, 0x9088, 0x7210, 0x4ef7, 0x1cfa, 0x8316, 0x0, 0x0);
        gbc.writeMem(0x3fcf, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9088, gbc.sp());
        EXPECT(0x3fd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02A5
        gbc.setState(0x988, 0xb2d1, 0xa600, 0x32f4, 0x5a25, 0x2806, 0x1, 0x0);
        gbc.writeMem(0x988, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb2d1, gbc.sp());
        EXPECT(0x98a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02A6
        gbc.setState(0x3ef9, 0x8b83, 0x3780, 0x10d4, 0x26e2, 0xbcb4, 0x1, 0x0);
        gbc.writeMem(0x3ef9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8b83, gbc.sp());
        EXPECT(0x3efb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02A7
        gbc.setState(0x88ec, 0xd7ae, 0x26c0, 0xe94f, 0xeee3, 0x8c12, 0x0, 0x0);
        gbc.writeMem(0x88ec, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd7ae, gbc.sp());
        EXPECT(0x88ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ec));
        EXPECT(0x8f, gbc.readMem(0x88ed));
        // CB 8F 02A8
        gbc.setState(0x8c73, 0x7702, 0x8f30, 0xf059, 0xe557, 0x22e4, 0x0, 0x0);
        gbc.writeMem(0x8c73, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7702, gbc.sp());
        EXPECT(0x8c75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c73));
        EXPECT(0x8f, gbc.readMem(0x8c74));
        // CB 8F 02A9
        gbc.setState(0x5dac, 0xf05d, 0x5aa0, 0x5b47, 0x11c3, 0xc3ca, 0x0, 0x0);
        gbc.writeMem(0x5dac, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf05d, gbc.sp());
        EXPECT(0x5dae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02AA
        gbc.setState(0xa21f, 0x5d73, 0xf9d0, 0x4d32, 0xcc84, 0x9371, 0x0, 0x0);
        gbc.writeMem(0xa21f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5d73, gbc.sp());
        EXPECT(0xa221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa21f));
        EXPECT(0x8f, gbc.readMem(0xa220));
        // CB 8F 02AB
        gbc.setState(0xc979, 0x4dea, 0x1cc0, 0xa66a, 0x749d, 0x59e9, 0x0, 0x1);
        gbc.writeMem(0xc979, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4dea, gbc.sp());
        EXPECT(0xc97b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc979));
        EXPECT(0x8f, gbc.readMem(0xc97a));
        // CB 8F 02AC
        gbc.setState(0xac77, 0xacd1, 0x640, 0xa994, 0x4aa6, 0xba54, 0x0, 0x1);
        gbc.writeMem(0xac77, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xacd1, gbc.sp());
        EXPECT(0xac79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac77));
        EXPECT(0x8f, gbc.readMem(0xac78));
        // CB 8F 02AD
        gbc.setState(0xbf10, 0xebd, 0xaa70, 0xa265, 0xe339, 0xb0a9, 0x0, 0x0);
        gbc.writeMem(0xbf10, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xebd, gbc.sp());
        EXPECT(0xbf12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf10));
        EXPECT(0x8f, gbc.readMem(0xbf11));
        // CB 8F 02AE
        gbc.setState(0x994d, 0x9b39, 0xab50, 0xa4af, 0x7a87, 0xc7e9, 0x1, 0x1);
        gbc.writeMem(0x994d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9b39, gbc.sp());
        EXPECT(0x994f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994d));
        EXPECT(0x8f, gbc.readMem(0x994e));
        // CB 8F 02AF
        gbc.setState(0xe1d1, 0xa741, 0xe750, 0xa49b, 0xe4db, 0xc418, 0x1, 0x1);
        gbc.writeMem(0xe1d1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa741, gbc.sp());
        EXPECT(0xe1d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1d1));
        EXPECT(0x8f, gbc.readMem(0xe1d2));
        // CB 8F 02B0
        gbc.setState(0x19b7, 0xd089, 0xa9b0, 0xe251, 0x4cf8, 0x5b80, 0x1, 0x1);
        gbc.writeMem(0x19b7, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd089, gbc.sp());
        EXPECT(0x19b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02B1
        gbc.setState(0x2e9f, 0xb5ab, 0x49b0, 0x6770, 0xd976, 0x6d0, 0x0, 0x0);
        gbc.writeMem(0x2e9f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb5ab, gbc.sp());
        EXPECT(0x2ea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02B2
        gbc.setState(0x4d46, 0x73f5, 0x35b0, 0x7f63, 0x8426, 0xe8bd, 0x0, 0x1);
        gbc.writeMem(0x4d46, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x73f5, gbc.sp());
        EXPECT(0x4d48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02B3
        gbc.setState(0xedc6, 0x4d45, 0xc5c0, 0xa378, 0x121a, 0x4178, 0x1, 0x0);
        gbc.writeMem(0xedc6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4d45, gbc.sp());
        EXPECT(0xedc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc6));
        EXPECT(0x8f, gbc.readMem(0xedc7));
        // CB 8F 02B4
        gbc.setState(0x4423, 0xdef1, 0x7db0, 0x445f, 0x974b, 0x7cd8, 0x1, 0x1);
        gbc.writeMem(0x4423, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xdef1, gbc.sp());
        EXPECT(0x4425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02B5
        gbc.setState(0xedb5, 0x485, 0x6320, 0x8c26, 0x476f, 0x509, 0x1, 0x1);
        gbc.writeMem(0xedb5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x485, gbc.sp());
        EXPECT(0xedb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb5));
        EXPECT(0x8f, gbc.readMem(0xedb6));
        // CB 8F 02B6
        gbc.setState(0x16dd, 0xd702, 0x2c70, 0x9aef, 0xfdfd, 0x1cdc, 0x0, 0x0);
        gbc.writeMem(0x16dd, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd702, gbc.sp());
        EXPECT(0x16df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02B7
        gbc.setState(0xcdca, 0x5002, 0x6d40, 0x969f, 0xdeef, 0xe999, 0x0, 0x0);
        gbc.writeMem(0xcdca, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5002, gbc.sp());
        EXPECT(0xcdcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdca));
        EXPECT(0x8f, gbc.readMem(0xcdcb));
        // CB 8F 02B8
        gbc.setState(0x129b, 0x6f3a, 0x70e0, 0x3745, 0xa8a4, 0xb29c, 0x0, 0x0);
        gbc.writeMem(0x129b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6f3a, gbc.sp());
        EXPECT(0x129d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02B9
        gbc.setState(0x7960, 0x2f9c, 0xc90, 0xef7f, 0x57fc, 0xb11c, 0x0, 0x0);
        gbc.writeMem(0x7960, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2f9c, gbc.sp());
        EXPECT(0x7962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02BA
        gbc.setState(0x2692, 0x2dc7, 0x1920, 0x3a23, 0xe19f, 0x65b2, 0x1, 0x1);
        gbc.writeMem(0x2692, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2dc7, gbc.sp());
        EXPECT(0x2694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02BB
        gbc.setState(0x5a05, 0xc924, 0x5710, 0xd894, 0xfc1c, 0x9ec9, 0x1, 0x1);
        gbc.writeMem(0x5a05, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc924, gbc.sp());
        EXPECT(0x5a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02BD
        gbc.setState(0xe282, 0xf755, 0xe700, 0x321c, 0xdc06, 0xaef4, 0x1, 0x1);
        gbc.writeMem(0xe282, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf755, gbc.sp());
        EXPECT(0xe284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe282));
        EXPECT(0x8f, gbc.readMem(0xe283));
        // CB 8F 02BE
        gbc.setState(0x8b0f, 0x2278, 0x8900, 0x8875, 0xcf29, 0x9dd9, 0x0, 0x1);
        gbc.writeMem(0x8b0f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2278, gbc.sp());
        EXPECT(0x8b11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b0f));
        EXPECT(0x8f, gbc.readMem(0x8b10));
        // CB 8F 02BF
        gbc.setState(0x97a2, 0xe9f, 0x4a30, 0x1875, 0x51c9, 0x1616, 0x1, 0x1);
        gbc.writeMem(0x97a2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe9f, gbc.sp());
        EXPECT(0x97a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97a2));
        EXPECT(0x8f, gbc.readMem(0x97a3));
        // CB 8F 02C0
        gbc.setState(0xb031, 0x2fbe, 0x94b0, 0xadc3, 0xb53b, 0x95d9, 0x1, 0x1);
        gbc.writeMem(0xb031, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2fbe, gbc.sp());
        EXPECT(0xb033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb031));
        EXPECT(0x8f, gbc.readMem(0xb032));
        // CB 8F 02C1
        gbc.setState(0x234a, 0xaf69, 0x6670, 0x4122, 0xd5b2, 0xd866, 0x1, 0x0);
        gbc.writeMem(0x234a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xaf69, gbc.sp());
        EXPECT(0x234c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02C2
        gbc.setState(0xb0a2, 0x988d, 0xb8e0, 0x13ec, 0xdd3e, 0xd6bb, 0x1, 0x0);
        gbc.writeMem(0xb0a2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x988d, gbc.sp());
        EXPECT(0xb0a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a2));
        EXPECT(0x8f, gbc.readMem(0xb0a3));
        // CB 8F 02C3
        gbc.setState(0xb019, 0x50e2, 0x4af0, 0x9b79, 0xb07d, 0x2193, 0x1, 0x1);
        gbc.writeMem(0xb019, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x50e2, gbc.sp());
        EXPECT(0xb01b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb019));
        EXPECT(0x8f, gbc.readMem(0xb01a));
        // CB 8F 02C4
        gbc.setState(0x9cf6, 0xcf0c, 0x43a0, 0x5ebc, 0xf521, 0x1b4e, 0x0, 0x1);
        gbc.writeMem(0x9cf6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcf0c, gbc.sp());
        EXPECT(0x9cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf6));
        EXPECT(0x8f, gbc.readMem(0x9cf7));
        // CB 8F 02C5
        gbc.setState(0x28e2, 0x703a, 0x3ac0, 0x46dd, 0x665a, 0x5e3a, 0x0, 0x1);
        gbc.writeMem(0x28e2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x703a, gbc.sp());
        EXPECT(0x28e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02C6
        gbc.setState(0x4ff7, 0xbf47, 0x18b0, 0xe638, 0xd06b, 0xf52a, 0x1, 0x0);
        gbc.writeMem(0x4ff7, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbf47, gbc.sp());
        EXPECT(0x4ff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02C7
        gbc.setState(0x7084, 0x682d, 0x2030, 0xf88a, 0x132e, 0x4a83, 0x0, 0x0);
        gbc.writeMem(0x7084, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x682d, gbc.sp());
        EXPECT(0x7086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02C8
        gbc.setState(0x4fdc, 0x9bca, 0x2b60, 0xf49e, 0x146b, 0xb6f9, 0x0, 0x1);
        gbc.writeMem(0x4fdc, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9bca, gbc.sp());
        EXPECT(0x4fde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02C9
        gbc.setState(0xabf2, 0x1935, 0x6ce0, 0xc554, 0x192b, 0x7bae, 0x1, 0x1);
        gbc.writeMem(0xabf2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1935, gbc.sp());
        EXPECT(0xabf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf2));
        EXPECT(0x8f, gbc.readMem(0xabf3));
        // CB 8F 02CA
        gbc.setState(0x3188, 0x43e4, 0xf570, 0x34ef, 0xb01b, 0xce59, 0x1, 0x1);
        gbc.writeMem(0x3188, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x43e4, gbc.sp());
        EXPECT(0x318a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02CB
        gbc.setState(0x64e4, 0x6464, 0x7820, 0xe63f, 0xfa3c, 0xef38, 0x0, 0x1);
        gbc.writeMem(0x64e4, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6464, gbc.sp());
        EXPECT(0x64e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02CC
        gbc.setState(0x3459, 0xd97f, 0x2100, 0x7739, 0xaf31, 0x38e5, 0x1, 0x1);
        gbc.writeMem(0x3459, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd97f, gbc.sp());
        EXPECT(0x345b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02CD
        gbc.setState(0xa586, 0x84c0, 0xfb90, 0xb96b, 0x432, 0x6296, 0x0, 0x0);
        gbc.writeMem(0xa586, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x84c0, gbc.sp());
        EXPECT(0xa588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa586));
        EXPECT(0x8f, gbc.readMem(0xa587));
        // CB 8F 02CE
        gbc.setState(0xd7bd, 0x2b44, 0xe270, 0xa44b, 0x44c0, 0x9ec, 0x1, 0x1);
        gbc.writeMem(0xd7bd, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2b44, gbc.sp());
        EXPECT(0xd7bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7bd));
        EXPECT(0x8f, gbc.readMem(0xd7be));
        // CB 8F 02CF
        gbc.setState(0x5ffc, 0x5022, 0xc320, 0xfc26, 0x87b9, 0x84e3, 0x1, 0x1);
        gbc.writeMem(0x5ffc, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5022, gbc.sp());
        EXPECT(0x5ffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02D0
        gbc.setState(0x155a, 0x2cf1, 0xfc10, 0x198a, 0x805, 0xbe9e, 0x0, 0x1);
        gbc.writeMem(0x155a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2cf1, gbc.sp());
        EXPECT(0x155c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02D1
        gbc.setState(0x34b2, 0xfbc0, 0xf020, 0xf9f1, 0xbb67, 0xd633, 0x0, 0x1);
        gbc.writeMem(0x34b2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfbc0, gbc.sp());
        EXPECT(0x34b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02D2
        gbc.setState(0x571c, 0x121f, 0xc270, 0x935d, 0x5848, 0xf224, 0x1, 0x0);
        gbc.writeMem(0x571c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x121f, gbc.sp());
        EXPECT(0x571e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02D3
        gbc.setState(0xc891, 0x891f, 0xca60, 0xbc53, 0xc534, 0x6865, 0x0, 0x0);
        gbc.writeMem(0xc891, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x891f, gbc.sp());
        EXPECT(0xc893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc891));
        EXPECT(0x8f, gbc.readMem(0xc892));
        // CB 8F 02D4
        gbc.setState(0x89a, 0x2bda, 0x9f80, 0x3ea9, 0x3f39, 0x86, 0x1, 0x1);
        gbc.writeMem(0x89a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2bda, gbc.sp());
        EXPECT(0x89c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02D5
        gbc.setState(0x3d71, 0x3236, 0x6670, 0xb83b, 0x463c, 0x2ab8, 0x0, 0x0);
        gbc.writeMem(0x3d71, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3236, gbc.sp());
        EXPECT(0x3d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02D6
        gbc.setState(0x2c02, 0xcb85, 0x4ae0, 0x6af8, 0x430, 0x86ef, 0x1, 0x0);
        gbc.writeMem(0x2c02, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xcb85, gbc.sp());
        EXPECT(0x2c04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02D7
        gbc.setState(0x5034, 0xb96, 0x6900, 0xd921, 0xb9fe, 0xcd65, 0x1, 0x0);
        gbc.writeMem(0x5034, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb96, gbc.sp());
        EXPECT(0x5036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02D8
        gbc.setState(0x73c6, 0xadd5, 0x3b60, 0x920, 0xb81f, 0x14c2, 0x1, 0x0);
        gbc.writeMem(0x73c6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xadd5, gbc.sp());
        EXPECT(0x73c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02DA
        gbc.setState(0xbeaa, 0xfc35, 0x6370, 0x90, 0x8e5b, 0xba31, 0x0, 0x1);
        gbc.writeMem(0xbeaa, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfc35, gbc.sp());
        EXPECT(0xbeac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeaa));
        EXPECT(0x8f, gbc.readMem(0xbeab));
        // CB 8F 02DB
        gbc.setState(0x3eec, 0x2db9, 0xfa70, 0x81b4, 0xc3de, 0x9b00, 0x1, 0x1);
        gbc.writeMem(0x3eec, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2db9, gbc.sp());
        EXPECT(0x3eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02DC
        gbc.setState(0x6388, 0x240e, 0x3a10, 0x1f86, 0x26da, 0xe610, 0x0, 0x0);
        gbc.writeMem(0x6388, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x240e, gbc.sp());
        EXPECT(0x638a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02DD
        gbc.setState(0xd812, 0x8832, 0x8f60, 0x891d, 0xbe39, 0x1a69, 0x0, 0x1);
        gbc.writeMem(0xd812, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8832, gbc.sp());
        EXPECT(0xd814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd812));
        EXPECT(0x8f, gbc.readMem(0xd813));
        // CB 8F 02DE
        gbc.setState(0x6ab2, 0x87ea, 0x28e0, 0xc591, 0xa71f, 0xf1f3, 0x0, 0x0);
        gbc.writeMem(0x6ab2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x87ea, gbc.sp());
        EXPECT(0x6ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02DF
        gbc.setState(0xa162, 0x35ab, 0xe180, 0xde01, 0xbc6c, 0x866c, 0x1, 0x1);
        gbc.writeMem(0xa162, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x35ab, gbc.sp());
        EXPECT(0xa164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa162));
        EXPECT(0x8f, gbc.readMem(0xa163));
        // CB 8F 02E0
        gbc.setState(0xa96, 0x2a0d, 0xb870, 0x38fc, 0x8867, 0x92e2, 0x0, 0x0);
        gbc.writeMem(0xa96, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2a0d, gbc.sp());
        EXPECT(0xa98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02E1
        gbc.setState(0x9902, 0x23d8, 0xadd0, 0xb5f0, 0xb254, 0xab8a, 0x0, 0x0);
        gbc.writeMem(0x9902, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x23d8, gbc.sp());
        EXPECT(0x9904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9902));
        EXPECT(0x8f, gbc.readMem(0x9903));
        // CB 8F 02E2
        gbc.setState(0x2a01, 0xfccf, 0x90d0, 0xa5f6, 0x1cdd, 0xe60a, 0x0, 0x0);
        gbc.writeMem(0x2a01, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfccf, gbc.sp());
        EXPECT(0x2a03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02E3
        gbc.setState(0x7be0, 0x5af3, 0x8c50, 0xe709, 0xd81c, 0x5a1b, 0x1, 0x1);
        gbc.writeMem(0x7be0, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5af3, gbc.sp());
        EXPECT(0x7be2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02E4
        gbc.setState(0x370b, 0xe0da, 0xc480, 0xeba, 0xf831, 0x2549, 0x0, 0x0);
        gbc.writeMem(0x370b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe0da, gbc.sp());
        EXPECT(0x370d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02E5
        gbc.setState(0x2124, 0x4d65, 0x78d0, 0x183e, 0x7ff8, 0xc054, 0x0, 0x1);
        gbc.writeMem(0x2124, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4d65, gbc.sp());
        EXPECT(0x2126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02E6
        gbc.setState(0x3794, 0x27e3, 0x4cb0, 0x50a2, 0x2f1f, 0x6ec8, 0x0, 0x1);
        gbc.writeMem(0x3794, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x27e3, gbc.sp());
        EXPECT(0x3796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02E7
        gbc.setState(0x9c6a, 0xa71c, 0x7ba0, 0x2d75, 0x78d4, 0xdd34, 0x1, 0x1);
        gbc.writeMem(0x9c6a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa71c, gbc.sp());
        EXPECT(0x9c6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c6a));
        EXPECT(0x8f, gbc.readMem(0x9c6b));
        // CB 8F 02E8
        gbc.setState(0x7154, 0xae2c, 0x2270, 0xdee5, 0x1d74, 0x5747, 0x1, 0x0);
        gbc.writeMem(0x7154, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xae2c, gbc.sp());
        EXPECT(0x7156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02E9
        gbc.setState(0x559a, 0x4413, 0xdfa0, 0xe28c, 0x46d0, 0xc3b5, 0x1, 0x1);
        gbc.writeMem(0x559a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4413, gbc.sp());
        EXPECT(0x559c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02EA
        gbc.setState(0xcc33, 0x427d, 0x2690, 0x1b68, 0x330c, 0x5ff8, 0x0, 0x1);
        gbc.writeMem(0xcc33, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x427d, gbc.sp());
        EXPECT(0xcc35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc33));
        EXPECT(0x8f, gbc.readMem(0xcc34));
        // CB 8F 02EB
        gbc.setState(0x732f, 0xf28a, 0x2060, 0x9c03, 0x3f, 0x81ea, 0x1, 0x1);
        gbc.writeMem(0x732f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf28a, gbc.sp());
        EXPECT(0x7331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02EC
        gbc.setState(0x6c53, 0x9c00, 0xe990, 0xaaa5, 0x24ec, 0x8a8d, 0x0, 0x0);
        gbc.writeMem(0x6c53, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9c00, gbc.sp());
        EXPECT(0x6c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02ED
        gbc.setState(0x3a8c, 0x6b3b, 0x7f50, 0x7cf, 0x4018, 0x4c3, 0x0, 0x1);
        gbc.writeMem(0x3a8c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6b3b, gbc.sp());
        EXPECT(0x3a8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02EF
        gbc.setState(0xaeca, 0x93da, 0x51a0, 0x787e, 0x25f2, 0xbdfe, 0x0, 0x1);
        gbc.writeMem(0xaeca, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x93da, gbc.sp());
        EXPECT(0xaecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeca));
        EXPECT(0x8f, gbc.readMem(0xaecb));
        // CB 8F 02F0
        gbc.setState(0xe20c, 0x3ff8, 0xb2f0, 0x383a, 0x7930, 0x31f7, 0x0, 0x0);
        gbc.writeMem(0xe20c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3ff8, gbc.sp());
        EXPECT(0xe20e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe20c));
        EXPECT(0x8f, gbc.readMem(0xe20d));
        // CB 8F 02F1
        gbc.setState(0x8cc3, 0x7e56, 0x3c70, 0x28a8, 0x698c, 0xb60a, 0x0, 0x1);
        gbc.writeMem(0x8cc3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7e56, gbc.sp());
        EXPECT(0x8cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc3));
        EXPECT(0x8f, gbc.readMem(0x8cc4));
        // CB 8F 02F2
        gbc.setState(0xc4d7, 0xbc32, 0x8dd0, 0x76ec, 0xdd1d, 0x351a, 0x0, 0x0);
        gbc.writeMem(0xc4d7, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbc32, gbc.sp());
        EXPECT(0xc4d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d7));
        EXPECT(0x8f, gbc.readMem(0xc4d8));
        // CB 8F 02F3
        gbc.setState(0xc206, 0x8fdb, 0xad00, 0xcead, 0x4ee4, 0xcdbb, 0x0, 0x1);
        gbc.writeMem(0xc206, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8fdb, gbc.sp());
        EXPECT(0xc208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc206));
        EXPECT(0x8f, gbc.readMem(0xc207));
        // CB 8F 02F4
        gbc.setState(0xa2cf, 0x7d23, 0x5480, 0x7334, 0xabfc, 0xe6ca, 0x0, 0x1);
        gbc.writeMem(0xa2cf, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7d23, gbc.sp());
        EXPECT(0xa2d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2cf));
        EXPECT(0x8f, gbc.readMem(0xa2d0));
        // CB 8F 02F5
        gbc.setState(0x8a31, 0x171, 0x5dd0, 0x41fc, 0xdf40, 0xa00, 0x1, 0x0);
        gbc.writeMem(0x8a31, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x171, gbc.sp());
        EXPECT(0x8a33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a31));
        EXPECT(0x8f, gbc.readMem(0x8a32));
        // CB 8F 02F6
        gbc.setState(0x8f02, 0x97e6, 0x6aa0, 0xfb14, 0x22, 0x988b, 0x1, 0x0);
        gbc.writeMem(0x8f02, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x97e6, gbc.sp());
        EXPECT(0x8f04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f02));
        EXPECT(0x8f, gbc.readMem(0x8f03));
        // CB 8F 02F7
        gbc.setState(0x4444, 0x8c5f, 0x31f0, 0xc86e, 0x822f, 0xed95, 0x0, 0x0);
        gbc.writeMem(0x4444, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8c5f, gbc.sp());
        EXPECT(0x4446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02F8
        gbc.setState(0xc596, 0x8456, 0x99f0, 0x7ff4, 0xed12, 0x8609, 0x1, 0x0);
        gbc.writeMem(0xc596, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8456, gbc.sp());
        EXPECT(0xc598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc596));
        EXPECT(0x8f, gbc.readMem(0xc597));
        // CB 8F 02F9
        gbc.setState(0x7ef0, 0xcb14, 0x6140, 0x3afc, 0x177e, 0x68db, 0x1, 0x0);
        gbc.writeMem(0x7ef0, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcb14, gbc.sp());
        EXPECT(0x7ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 02FA
        gbc.setState(0xe219, 0xac82, 0x4c0, 0x7a80, 0xc4e9, 0xe116, 0x1, 0x1);
        gbc.writeMem(0xe219, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xac82, gbc.sp());
        EXPECT(0xe21b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe219));
        EXPECT(0x8f, gbc.readMem(0xe21a));
        // CB 8F 02FC
        gbc.setState(0x15c3, 0xef60, 0xc450, 0xa379, 0x2362, 0xcd94, 0x0, 0x1);
        gbc.writeMem(0x15c3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xef60, gbc.sp());
        EXPECT(0x15c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 02FD
        gbc.setState(0xbeb9, 0xf8d0, 0xda40, 0xca6f, 0x4151, 0x236e, 0x0, 0x0);
        gbc.writeMem(0xbeb9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf8d0, gbc.sp());
        EXPECT(0xbebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeb9));
        EXPECT(0x8f, gbc.readMem(0xbeba));
        // CB 8F 02FF
        gbc.setState(0xe2ae, 0xa9dd, 0x8090, 0x391e, 0x103d, 0xff6b, 0x0, 0x1);
        gbc.writeMem(0xe2ae, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa9dd, gbc.sp());
        EXPECT(0xe2b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ae));
        EXPECT(0x8f, gbc.readMem(0xe2af));
        // CB 8F 0300
        gbc.setState(0xcd5f, 0xb3e5, 0xeb70, 0xacc5, 0x519f, 0xa6e8, 0x1, 0x0);
        gbc.writeMem(0xcd5f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb3e5, gbc.sp());
        EXPECT(0xcd61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd5f));
        EXPECT(0x8f, gbc.readMem(0xcd60));
        // CB 8F 0301
        gbc.setState(0x7807, 0xd295, 0xf7d0, 0x99c3, 0xa73d, 0xe086, 0x0, 0x1);
        gbc.writeMem(0x7807, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd295, gbc.sp());
        EXPECT(0x7809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0302
        gbc.setState(0x263d, 0x8bc4, 0x5480, 0xa992, 0x55bb, 0x4143, 0x0, 0x1);
        gbc.writeMem(0x263d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8bc4, gbc.sp());
        EXPECT(0x263f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0303
        gbc.setState(0x4826, 0x9632, 0x9320, 0x4cb1, 0x7c55, 0xf080, 0x1, 0x0);
        gbc.writeMem(0x4826, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9632, gbc.sp());
        EXPECT(0x4828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0304
        gbc.setState(0x370f, 0xd1c, 0x8c80, 0xf8f5, 0xe5d0, 0x400b, 0x0, 0x0);
        gbc.writeMem(0x370f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd1c, gbc.sp());
        EXPECT(0x3711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0305
        gbc.setState(0x2c31, 0xeac2, 0x3010, 0xf7f1, 0x9787, 0xd1bd, 0x1, 0x0);
        gbc.writeMem(0x2c31, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xeac2, gbc.sp());
        EXPECT(0x2c33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0307
        gbc.setState(0xb581, 0x8e6, 0x560, 0xf281, 0x3c54, 0xb904, 0x1, 0x0);
        gbc.writeMem(0xb581, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8e6, gbc.sp());
        EXPECT(0xb583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb581));
        EXPECT(0x8f, gbc.readMem(0xb582));
        // CB 8F 0308
        gbc.setState(0x5a2e, 0x2cb8, 0xaf00, 0x6045, 0x3806, 0x4761, 0x1, 0x1);
        gbc.writeMem(0x5a2e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2cb8, gbc.sp());
        EXPECT(0x5a30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0309
        gbc.setState(0xe58b, 0x5b93, 0x9b70, 0x3b59, 0x7ac1, 0xbfd, 0x1, 0x0);
        gbc.writeMem(0xe58b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5b93, gbc.sp());
        EXPECT(0xe58d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe58b));
        EXPECT(0x8f, gbc.readMem(0xe58c));
        // CB 8F 030A
        gbc.setState(0x3ce6, 0x58a7, 0xfa0, 0x23de, 0x21c1, 0xc8af, 0x1, 0x1);
        gbc.writeMem(0x3ce6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x58a7, gbc.sp());
        EXPECT(0x3ce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 030B
        gbc.setState(0x45a3, 0x62d6, 0xcd0, 0xe061, 0xebf3, 0xce7f, 0x0, 0x0);
        gbc.writeMem(0x45a3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x62d6, gbc.sp());
        EXPECT(0x45a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 030C
        gbc.setState(0x9ca5, 0x996f, 0x41a0, 0xd98a, 0x4c10, 0xc71e, 0x0, 0x0);
        gbc.writeMem(0x9ca5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x996f, gbc.sp());
        EXPECT(0x9ca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca5));
        EXPECT(0x8f, gbc.readMem(0x9ca6));
        // CB 8F 030D
        gbc.setState(0xbea9, 0x3e47, 0x1160, 0x25eb, 0x3587, 0x19e5, 0x1, 0x1);
        gbc.writeMem(0xbea9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3e47, gbc.sp());
        EXPECT(0xbeab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbea9));
        EXPECT(0x8f, gbc.readMem(0xbeaa));
        // CB 8F 030F
        gbc.setState(0x3b5a, 0x2a89, 0x4240, 0xbcac, 0x789a, 0xdba4, 0x0, 0x1);
        gbc.writeMem(0x3b5a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2a89, gbc.sp());
        EXPECT(0x3b5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0310
        gbc.setState(0xcc97, 0x1326, 0xa3e0, 0x8ca0, 0xc069, 0xdf22, 0x0, 0x1);
        gbc.writeMem(0xcc97, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1326, gbc.sp());
        EXPECT(0xcc99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc97));
        EXPECT(0x8f, gbc.readMem(0xcc98));
        // CB 8F 0311
        gbc.setState(0xe637, 0x14f1, 0xb930, 0x42f6, 0x936d, 0xebce, 0x1, 0x1);
        gbc.writeMem(0xe637, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x14f1, gbc.sp());
        EXPECT(0xe639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe637));
        EXPECT(0x8f, gbc.readMem(0xe638));
        // CB 8F 0312
        gbc.setState(0x7664, 0xf9e9, 0x60d0, 0xa89, 0xa7a5, 0x606d, 0x0, 0x1);
        gbc.writeMem(0x7664, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf9e9, gbc.sp());
        EXPECT(0x7666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0313
        gbc.setState(0x71a6, 0x9a32, 0x4a50, 0x8e39, 0xb0a5, 0x5244, 0x0, 0x0);
        gbc.writeMem(0x71a6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9a32, gbc.sp());
        EXPECT(0x71a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0314
        gbc.setState(0x73d, 0xc67d, 0xd7e0, 0x7697, 0x7d4c, 0x7525, 0x0, 0x0);
        gbc.writeMem(0x73d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc67d, gbc.sp());
        EXPECT(0x73f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0315
        gbc.setState(0x3ae7, 0x276d, 0xe740, 0x2cdc, 0x163, 0x940f, 0x1, 0x1);
        gbc.writeMem(0x3ae7, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x276d, gbc.sp());
        EXPECT(0x3ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0316
        gbc.setState(0x4c6b, 0x11c8, 0x4d70, 0xb9ea, 0x69a0, 0x71b7, 0x0, 0x1);
        gbc.writeMem(0x4c6b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x11c8, gbc.sp());
        EXPECT(0x4c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0317
        gbc.setState(0x7732, 0xe909, 0x3320, 0x1085, 0x1b7, 0x25bd, 0x1, 0x0);
        gbc.writeMem(0x7732, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe909, gbc.sp());
        EXPECT(0x7734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0318
        gbc.setState(0x7517, 0x9cac, 0x5900, 0xbf87, 0x9a07, 0xcc65, 0x1, 0x1);
        gbc.writeMem(0x7517, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9cac, gbc.sp());
        EXPECT(0x7519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0319
        gbc.setState(0x2d9a, 0xc698, 0x8210, 0x7e6b, 0xdda5, 0x2885, 0x0, 0x1);
        gbc.writeMem(0x2d9a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc698, gbc.sp());
        EXPECT(0x2d9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 031A
        gbc.setState(0x3fc1, 0xde00, 0x2680, 0xe821, 0xfc0, 0xebe0, 0x0, 0x0);
        gbc.writeMem(0x3fc1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xde00, gbc.sp());
        EXPECT(0x3fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 031B
        gbc.setState(0x3e92, 0xdc21, 0xeb00, 0x88db, 0x9975, 0xed63, 0x1, 0x0);
        gbc.writeMem(0x3e92, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xdc21, gbc.sp());
        EXPECT(0x3e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 031C
        gbc.setState(0x45b0, 0xf83d, 0xfd60, 0x617e, 0x9e37, 0x2277, 0x1, 0x0);
        gbc.writeMem(0x45b0, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf83d, gbc.sp());
        EXPECT(0x45b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 031D
        gbc.setState(0xda2e, 0x8bb9, 0x4150, 0xf508, 0x884a, 0x993f, 0x0, 0x0);
        gbc.writeMem(0xda2e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8bb9, gbc.sp());
        EXPECT(0xda30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda2e));
        EXPECT(0x8f, gbc.readMem(0xda2f));
        // CB 8F 031E
        gbc.setState(0x71f3, 0x3c2, 0x41e0, 0xc8cf, 0x2832, 0x3d10, 0x1, 0x1);
        gbc.writeMem(0x71f3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3c2, gbc.sp());
        EXPECT(0x71f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 031F
        gbc.setState(0xdea7, 0xcc66, 0xb9a0, 0x6292, 0xd6cb, 0xfbdc, 0x1, 0x1);
        gbc.writeMem(0xdea7, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcc66, gbc.sp());
        EXPECT(0xdea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea7));
        EXPECT(0x8f, gbc.readMem(0xdea8));
        // CB 8F 0320
        gbc.setState(0x6e7e, 0xb1c0, 0x5b90, 0xca7e, 0xecf6, 0x6433, 0x1, 0x0);
        gbc.writeMem(0x6e7e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb1c0, gbc.sp());
        EXPECT(0x6e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0321
        gbc.setState(0x3ce2, 0xd5a3, 0xea30, 0x72ff, 0xca9e, 0xf5ce, 0x1, 0x0);
        gbc.writeMem(0x3ce2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd5a3, gbc.sp());
        EXPECT(0x3ce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0322
        gbc.setState(0x88c1, 0xc725, 0x5300, 0x619a, 0x59f0, 0x70b4, 0x1, 0x0);
        gbc.writeMem(0x88c1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc725, gbc.sp());
        EXPECT(0x88c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c1));
        EXPECT(0x8f, gbc.readMem(0x88c2));
        // CB 8F 0323
        gbc.setState(0x924, 0x98da, 0x9670, 0x9cb0, 0x83af, 0xa612, 0x1, 0x0);
        gbc.writeMem(0x924, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x98da, gbc.sp());
        EXPECT(0x926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0324
        gbc.setState(0xd40a, 0xea12, 0xd540, 0xd8e5, 0x6ea6, 0x8ced, 0x0, 0x1);
        gbc.writeMem(0xd40a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xea12, gbc.sp());
        EXPECT(0xd40c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd40a));
        EXPECT(0x8f, gbc.readMem(0xd40b));
        // CB 8F 0325
        gbc.setState(0xa01e, 0x34d9, 0xf000, 0x24bb, 0x952e, 0x15ba, 0x1, 0x0);
        gbc.writeMem(0xa01e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x34d9, gbc.sp());
        EXPECT(0xa020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa01e));
        EXPECT(0x8f, gbc.readMem(0xa01f));
        // CB 8F 0326
        gbc.setState(0xb71c, 0x6200, 0x8f60, 0xbc64, 0xa26a, 0x4380, 0x1, 0x0);
        gbc.writeMem(0xb71c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6200, gbc.sp());
        EXPECT(0xb71e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb71c));
        EXPECT(0x8f, gbc.readMem(0xb71d));
        // CB 8F 0327
        gbc.setState(0xa7d8, 0xba23, 0xff10, 0x92b9, 0x7929, 0x642e, 0x0, 0x0);
        gbc.writeMem(0xa7d8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xba23, gbc.sp());
        EXPECT(0xa7da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d8));
        EXPECT(0x8f, gbc.readMem(0xa7d9));
        // CB 8F 0328
        gbc.setState(0xa7ee, 0x208d, 0x20b0, 0x5191, 0x92f0, 0x3425, 0x0, 0x0);
        gbc.writeMem(0xa7ee, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x208d, gbc.sp());
        EXPECT(0xa7f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ee));
        EXPECT(0x8f, gbc.readMem(0xa7ef));
        // CB 8F 0329
        gbc.setState(0x3e09, 0x16e8, 0x5630, 0x396f, 0x200a, 0xeb68, 0x0, 0x0);
        gbc.writeMem(0x3e09, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x16e8, gbc.sp());
        EXPECT(0x3e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 032A
        gbc.setState(0xc34b, 0x83b5, 0xb410, 0x84f2, 0xb236, 0xaa89, 0x1, 0x1);
        gbc.writeMem(0xc34b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x83b5, gbc.sp());
        EXPECT(0xc34d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc34b));
        EXPECT(0x8f, gbc.readMem(0xc34c));
        // CB 8F 032B
        gbc.setState(0xef43, 0x3f0f, 0x8c30, 0xd553, 0xf6b6, 0x28da, 0x0, 0x1);
        gbc.writeMem(0xef43, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3f0f, gbc.sp());
        EXPECT(0xef45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef43));
        EXPECT(0x8f, gbc.readMem(0xef44));
        // CB 8F 032C
        gbc.setState(0x81bd, 0x1afc, 0x7240, 0x664f, 0xb58c, 0xe7dd, 0x0, 0x1);
        gbc.writeMem(0x81bd, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1afc, gbc.sp());
        EXPECT(0x81bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81bd));
        EXPECT(0x8f, gbc.readMem(0x81be));
        // CB 8F 032D
        gbc.setState(0xc61f, 0xd258, 0x23f0, 0x7bee, 0x6b7f, 0xff25, 0x0, 0x0);
        gbc.writeMem(0xc61f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd258, gbc.sp());
        EXPECT(0xc621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc61f));
        EXPECT(0x8f, gbc.readMem(0xc620));
        // CB 8F 032E
        gbc.setState(0x757c, 0xb397, 0x26d0, 0xb764, 0xc7f5, 0x8853, 0x0, 0x0);
        gbc.writeMem(0x757c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb397, gbc.sp());
        EXPECT(0x757e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 032F
        gbc.setState(0x6688, 0xce39, 0x5350, 0x1b1b, 0x6651, 0xadcf, 0x1, 0x1);
        gbc.writeMem(0x6688, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xce39, gbc.sp());
        EXPECT(0x668a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0330
        gbc.setState(0x75b3, 0x5045, 0x5080, 0x9cee, 0xc1cc, 0x6b4, 0x0, 0x1);
        gbc.writeMem(0x75b3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5045, gbc.sp());
        EXPECT(0x75b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0331
        gbc.setState(0xc938, 0x770b, 0x2380, 0xa226, 0x4adc, 0xddb9, 0x0, 0x1);
        gbc.writeMem(0xc938, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x770b, gbc.sp());
        EXPECT(0xc93a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc938));
        EXPECT(0x8f, gbc.readMem(0xc939));
        // CB 8F 0332
        gbc.setState(0x36ec, 0xd91b, 0x1990, 0xb148, 0x3878, 0x9552, 0x1, 0x1);
        gbc.writeMem(0x36ec, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd91b, gbc.sp());
        EXPECT(0x36ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0333
        gbc.setState(0xc95, 0xec8c, 0xfa50, 0x897e, 0x2936, 0x50c6, 0x0, 0x1);
        gbc.writeMem(0xc95, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xec8c, gbc.sp());
        EXPECT(0xc97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0335
        gbc.setState(0x8731, 0x76e7, 0xf1d0, 0x18be, 0x37c3, 0x584c, 0x0, 0x0);
        gbc.writeMem(0x8731, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x76e7, gbc.sp());
        EXPECT(0x8733, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8731));
        EXPECT(0x8f, gbc.readMem(0x8732));
        // CB 8F 0336
        gbc.setState(0xc587, 0x96de, 0xef40, 0xcbd5, 0xbeb8, 0x79cf, 0x1, 0x0);
        gbc.writeMem(0xc587, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x96de, gbc.sp());
        EXPECT(0xc589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc587));
        EXPECT(0x8f, gbc.readMem(0xc588));
        // CB 8F 0337
        gbc.setState(0x5d23, 0xb4b4, 0x42f0, 0x881f, 0xb808, 0xd424, 0x1, 0x0);
        gbc.writeMem(0x5d23, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb4b4, gbc.sp());
        EXPECT(0x5d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0338
        gbc.setState(0xf93, 0xdf01, 0x36b0, 0xdc0a, 0xf369, 0x15fd, 0x1, 0x0);
        gbc.writeMem(0xf93, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xdf01, gbc.sp());
        EXPECT(0xf95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0339
        gbc.setState(0x5911, 0x7784, 0xf320, 0x4658, 0x8e24, 0x989f, 0x0, 0x0);
        gbc.writeMem(0x5911, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7784, gbc.sp());
        EXPECT(0x5913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 033A
        gbc.setState(0xdd66, 0x74ab, 0xd120, 0x51f1, 0x8770, 0x4ad3, 0x1, 0x0);
        gbc.writeMem(0xdd66, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x74ab, gbc.sp());
        EXPECT(0xdd68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd66));
        EXPECT(0x8f, gbc.readMem(0xdd67));
        // CB 8F 033B
        gbc.setState(0xb5cf, 0x5cea, 0x1190, 0xc262, 0xae6f, 0x1bfd, 0x0, 0x1);
        gbc.writeMem(0xb5cf, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5cea, gbc.sp());
        EXPECT(0xb5d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5cf));
        EXPECT(0x8f, gbc.readMem(0xb5d0));
        // CB 8F 033C
        gbc.setState(0x3df9, 0xf568, 0xb490, 0x38bf, 0xefbb, 0x4f10, 0x0, 0x1);
        gbc.writeMem(0x3df9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf568, gbc.sp());
        EXPECT(0x3dfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 033D
        gbc.setState(0xce55, 0xf49b, 0x150, 0x66be, 0xc0a6, 0x2a40, 0x1, 0x1);
        gbc.writeMem(0xce55, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf49b, gbc.sp());
        EXPECT(0xce57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce55));
        EXPECT(0x8f, gbc.readMem(0xce56));
        // CB 8F 033E
        gbc.setState(0x7bdb, 0x4d07, 0xcd10, 0x52aa, 0xb682, 0x21bd, 0x1, 0x0);
        gbc.writeMem(0x7bdb, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4d07, gbc.sp());
        EXPECT(0x7bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 033F
        gbc.setState(0x90d2, 0xfb11, 0x3d40, 0xd0c2, 0xa153, 0xee4a, 0x0, 0x0);
        gbc.writeMem(0x90d2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfb11, gbc.sp());
        EXPECT(0x90d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d2));
        EXPECT(0x8f, gbc.readMem(0x90d3));
        // CB 8F 0340
        gbc.setState(0x307, 0xcb6, 0xe940, 0x257, 0xee7e, 0x9c6, 0x0, 0x0);
        gbc.writeMem(0x307, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xcb6, gbc.sp());
        EXPECT(0x309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0341
        gbc.setState(0xaeb6, 0x463, 0xd3b0, 0x7d41, 0x7ac8, 0xb8cb, 0x0, 0x1);
        gbc.writeMem(0xaeb6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x463, gbc.sp());
        EXPECT(0xaeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeb6));
        EXPECT(0x8f, gbc.readMem(0xaeb7));
        // CB 8F 0342
        gbc.setState(0xafd4, 0xe26f, 0x9480, 0x5eb0, 0x59c9, 0x1148, 0x1, 0x0);
        gbc.writeMem(0xafd4, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe26f, gbc.sp());
        EXPECT(0xafd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd4));
        EXPECT(0x8f, gbc.readMem(0xafd5));
        // CB 8F 0343
        gbc.setState(0x5442, 0x71f4, 0x31f0, 0xb92a, 0xc226, 0x6bed, 0x1, 0x1);
        gbc.writeMem(0x5442, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x71f4, gbc.sp());
        EXPECT(0x5444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0344
        gbc.setState(0xb855, 0xee76, 0x28e0, 0x64f0, 0x5616, 0xc360, 0x0, 0x1);
        gbc.writeMem(0xb855, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xee76, gbc.sp());
        EXPECT(0xb857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb855));
        EXPECT(0x8f, gbc.readMem(0xb856));
        // CB 8F 0346
        gbc.setState(0xb4d6, 0xc186, 0xa770, 0x3494, 0xf4, 0xd363, 0x0, 0x1);
        gbc.writeMem(0xb4d6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc186, gbc.sp());
        EXPECT(0xb4d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4d6));
        EXPECT(0x8f, gbc.readMem(0xb4d7));
        // CB 8F 0347
        gbc.setState(0x77db, 0x75f6, 0x2f50, 0xd070, 0x5c77, 0x4f9b, 0x0, 0x0);
        gbc.writeMem(0x77db, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x75f6, gbc.sp());
        EXPECT(0x77dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0348
        gbc.setState(0x2584, 0x7da, 0xd530, 0xc2bb, 0xbd6b, 0x5eef, 0x0, 0x0);
        gbc.writeMem(0x2584, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7da, gbc.sp());
        EXPECT(0x2586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0349
        gbc.setState(0xdc6c, 0xd182, 0xa380, 0xe0de, 0x4c07, 0x5cb3, 0x0, 0x0);
        gbc.writeMem(0xdc6c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd182, gbc.sp());
        EXPECT(0xdc6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc6c));
        EXPECT(0x8f, gbc.readMem(0xdc6d));
        // CB 8F 034B
        gbc.setState(0x9a18, 0xa95c, 0xe900, 0x2244, 0x46ef, 0x397c, 0x1, 0x0);
        gbc.writeMem(0x9a18, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa95c, gbc.sp());
        EXPECT(0x9a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a18));
        EXPECT(0x8f, gbc.readMem(0x9a19));
        // CB 8F 034C
        gbc.setState(0x2ebb, 0xbaf4, 0x7d40, 0xcb62, 0xc42b, 0xa00e, 0x1, 0x1);
        gbc.writeMem(0x2ebb, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xbaf4, gbc.sp());
        EXPECT(0x2ebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 034D
        gbc.setState(0x809, 0xcf0b, 0xe00, 0x185e, 0x3450, 0xe4a4, 0x0, 0x0);
        gbc.writeMem(0x809, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xcf0b, gbc.sp());
        EXPECT(0x80b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 034E
        gbc.setState(0x8326, 0x50ff, 0x6f60, 0xf981, 0x7384, 0xb2af, 0x0, 0x0);
        gbc.writeMem(0x8326, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x50ff, gbc.sp());
        EXPECT(0x8328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8326));
        EXPECT(0x8f, gbc.readMem(0x8327));
        // CB 8F 034F
        gbc.setState(0x8273, 0x72c0, 0xf920, 0x783f, 0x4111, 0xe261, 0x0, 0x1);
        gbc.writeMem(0x8273, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x72c0, gbc.sp());
        EXPECT(0x8275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8273));
        EXPECT(0x8f, gbc.readMem(0x8274));
        // CB 8F 0350
        gbc.setState(0xd498, 0x4f0b, 0x4850, 0x47a2, 0x7ee5, 0x8594, 0x0, 0x1);
        gbc.writeMem(0xd498, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4f0b, gbc.sp());
        EXPECT(0xd49a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd498));
        EXPECT(0x8f, gbc.readMem(0xd499));
        // CB 8F 0351
        gbc.setState(0x3c62, 0x6faa, 0xd1e0, 0x412e, 0xff83, 0xc1c2, 0x0, 0x1);
        gbc.writeMem(0x3c62, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6faa, gbc.sp());
        EXPECT(0x3c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0352
        gbc.setState(0x3a9f, 0xe275, 0x1e00, 0x1675, 0x8d18, 0xc812, 0x1, 0x1);
        gbc.writeMem(0x3a9f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe275, gbc.sp());
        EXPECT(0x3aa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0353
        gbc.setState(0x2b12, 0xe442, 0x2600, 0x9834, 0x192f, 0x4d3, 0x1, 0x0);
        gbc.writeMem(0x2b12, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe442, gbc.sp());
        EXPECT(0x2b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0354
        gbc.setState(0xd160, 0x9189, 0x6000, 0xaaea, 0x7b30, 0x85d9, 0x0, 0x0);
        gbc.writeMem(0xd160, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9189, gbc.sp());
        EXPECT(0xd162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd160));
        EXPECT(0x8f, gbc.readMem(0xd161));
        // CB 8F 0355
        gbc.setState(0xe9d9, 0x11c9, 0x47a0, 0x7a65, 0x1904, 0x8e49, 0x1, 0x1);
        gbc.writeMem(0xe9d9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x11c9, gbc.sp());
        EXPECT(0xe9db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9d9));
        EXPECT(0x8f, gbc.readMem(0xe9da));
        // CB 8F 0356
        gbc.setState(0x864, 0xe8b9, 0x97d0, 0x3dc7, 0xc85c, 0xc381, 0x0, 0x0);
        gbc.writeMem(0x864, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe8b9, gbc.sp());
        EXPECT(0x866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0357
        gbc.setState(0x5227, 0x293, 0x16d0, 0x3dc7, 0x6294, 0xface, 0x0, 0x1);
        gbc.writeMem(0x5227, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x293, gbc.sp());
        EXPECT(0x5229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0358
        gbc.setState(0xfad, 0x5211, 0x5b60, 0x9dd1, 0x8f1, 0xdb79, 0x1, 0x1);
        gbc.writeMem(0xfad, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5211, gbc.sp());
        EXPECT(0xfaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0359
        gbc.setState(0x43d9, 0xe829, 0xe410, 0x5fe6, 0x963d, 0x8dd9, 0x1, 0x0);
        gbc.writeMem(0x43d9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe829, gbc.sp());
        EXPECT(0x43db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 035A
        gbc.setState(0xbcec, 0x7ab3, 0x3b0, 0x9a83, 0xda86, 0x5ef2, 0x1, 0x1);
        gbc.writeMem(0xbcec, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7ab3, gbc.sp());
        EXPECT(0xbcee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcec));
        EXPECT(0x8f, gbc.readMem(0xbced));
        // CB 8F 035B
        gbc.setState(0x2c93, 0x772f, 0x5910, 0x5e52, 0xfa6b, 0x3473, 0x1, 0x0);
        gbc.writeMem(0x2c93, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x772f, gbc.sp());
        EXPECT(0x2c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 035C
        gbc.setState(0xdf35, 0xbcb1, 0xbb40, 0xa92c, 0x4471, 0x788d, 0x1, 0x1);
        gbc.writeMem(0xdf35, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbcb1, gbc.sp());
        EXPECT(0xdf37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf35));
        EXPECT(0x8f, gbc.readMem(0xdf36));
        // CB 8F 035D
        gbc.setState(0x5a68, 0xe99d, 0x7800, 0x78f9, 0x74aa, 0x9fa, 0x1, 0x0);
        gbc.writeMem(0x5a68, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe99d, gbc.sp());
        EXPECT(0x5a6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 035E
        gbc.setState(0x4430, 0xaeed, 0xaf90, 0x8794, 0x8229, 0x799b, 0x0, 0x0);
        gbc.writeMem(0x4430, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xaeed, gbc.sp());
        EXPECT(0x4432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 035F
        gbc.setState(0xbf71, 0x5860, 0x39b0, 0x68c0, 0x7259, 0x7814, 0x1, 0x1);
        gbc.writeMem(0xbf71, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5860, gbc.sp());
        EXPECT(0xbf73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf71));
        EXPECT(0x8f, gbc.readMem(0xbf72));
        // CB 8F 0360
        gbc.setState(0xe95e, 0xab7f, 0xc210, 0xbb8d, 0xdb18, 0x61dc, 0x0, 0x0);
        gbc.writeMem(0xe95e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xab7f, gbc.sp());
        EXPECT(0xe960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe95e));
        EXPECT(0x8f, gbc.readMem(0xe95f));
        // CB 8F 0361
        gbc.setState(0x1888, 0x458f, 0x2b10, 0xa95b, 0xbbc0, 0x1719, 0x1, 0x0);
        gbc.writeMem(0x1888, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x458f, gbc.sp());
        EXPECT(0x188a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0362
        gbc.setState(0x148e, 0xabc3, 0x7710, 0x220e, 0xaed6, 0xd302, 0x0, 0x1);
        gbc.writeMem(0x148e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xabc3, gbc.sp());
        EXPECT(0x1490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0363
        gbc.setState(0x9128, 0x3f0, 0xfcf0, 0xc16c, 0xd755, 0x4246, 0x1, 0x0);
        gbc.writeMem(0x9128, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3f0, gbc.sp());
        EXPECT(0x912a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9128));
        EXPECT(0x8f, gbc.readMem(0x9129));
        // CB 8F 0364
        gbc.setState(0x9cd8, 0xa32c, 0x3be0, 0x3f0b, 0x2179, 0xe42d, 0x1, 0x1);
        gbc.writeMem(0x9cd8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa32c, gbc.sp());
        EXPECT(0x9cda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd8));
        EXPECT(0x8f, gbc.readMem(0x9cd9));
        // CB 8F 0365
        gbc.setState(0x5b22, 0xca76, 0x2840, 0x2edd, 0xc719, 0xf30d, 0x1, 0x0);
        gbc.writeMem(0x5b22, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xca76, gbc.sp());
        EXPECT(0x5b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0366
        gbc.setState(0xa781, 0xc07e, 0x97b0, 0x72d0, 0x202f, 0xf924, 0x0, 0x1);
        gbc.writeMem(0xa781, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc07e, gbc.sp());
        EXPECT(0xa783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa781));
        EXPECT(0x8f, gbc.readMem(0xa782));
        // CB 8F 0367
        gbc.setState(0x5e34, 0x6ab6, 0x3130, 0xa667, 0x991a, 0xeea3, 0x0, 0x1);
        gbc.writeMem(0x5e34, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6ab6, gbc.sp());
        EXPECT(0x5e36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0368
        gbc.setState(0x803d, 0xf513, 0x6140, 0xb280, 0x3d75, 0xb848, 0x1, 0x1);
        gbc.writeMem(0x803d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf513, gbc.sp());
        EXPECT(0x803f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x803d));
        EXPECT(0x8f, gbc.readMem(0x803e));
        // CB 8F 0369
        gbc.setState(0xa19d, 0x346d, 0x6db0, 0x751c, 0xc10, 0x5069, 0x1, 0x0);
        gbc.writeMem(0xa19d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x346d, gbc.sp());
        EXPECT(0xa19f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa19d));
        EXPECT(0x8f, gbc.readMem(0xa19e));
        // CB 8F 036A
        gbc.setState(0xb339, 0x1192, 0x1eb0, 0x5c6a, 0x25d4, 0xf867, 0x0, 0x0);
        gbc.writeMem(0xb339, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1192, gbc.sp());
        EXPECT(0xb33b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb339));
        EXPECT(0x8f, gbc.readMem(0xb33a));
        // CB 8F 036B
        gbc.setState(0x705a, 0x9b9c, 0x930, 0x29ff, 0x5c5d, 0xd2d6, 0x0, 0x1);
        gbc.writeMem(0x705a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9b9c, gbc.sp());
        EXPECT(0x705c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 036C
        gbc.setState(0x576c, 0x7eab, 0x54e0, 0x580, 0x4ab8, 0x5849, 0x0, 0x1);
        gbc.writeMem(0x576c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7eab, gbc.sp());
        EXPECT(0x576e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 036D
        gbc.setState(0x6682, 0xc424, 0xde40, 0x7eee, 0xff6a, 0xae92, 0x1, 0x0);
        gbc.writeMem(0x6682, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc424, gbc.sp());
        EXPECT(0x6684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 036E
        gbc.setState(0x324a, 0xbdbe, 0x6220, 0x531e, 0x6333, 0xc404, 0x0, 0x0);
        gbc.writeMem(0x324a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbdbe, gbc.sp());
        EXPECT(0x324c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 036F
        gbc.setState(0x2203, 0x42bb, 0xf4c0, 0x5f9e, 0x312e, 0xa10c, 0x1, 0x0);
        gbc.writeMem(0x2203, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x42bb, gbc.sp());
        EXPECT(0x2205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0370
        gbc.setState(0x33e8, 0x3b86, 0xdc80, 0xc83b, 0x1e5a, 0x8676, 0x1, 0x1);
        gbc.writeMem(0x33e8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3b86, gbc.sp());
        EXPECT(0x33ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0371
        gbc.setState(0x22d8, 0xc664, 0xd20, 0x7a7c, 0x14be, 0xf945, 0x1, 0x1);
        gbc.writeMem(0x22d8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc664, gbc.sp());
        EXPECT(0x22da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0372
        gbc.setState(0xeb8f, 0xed70, 0xbcc0, 0x36ae, 0x6d29, 0x17f2, 0x0, 0x1);
        gbc.writeMem(0xeb8f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xed70, gbc.sp());
        EXPECT(0xeb91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb8f));
        EXPECT(0x8f, gbc.readMem(0xeb90));
        // CB 8F 0373
        gbc.setState(0x743e, 0xbccc, 0xc690, 0x84e2, 0x5192, 0x9187, 0x1, 0x0);
        gbc.writeMem(0x743e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xbccc, gbc.sp());
        EXPECT(0x7440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0374
        gbc.setState(0x77d4, 0xb85b, 0xf20, 0x20bb, 0x812b, 0x248e, 0x1, 0x0);
        gbc.writeMem(0x77d4, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb85b, gbc.sp());
        EXPECT(0x77d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0375
        gbc.setState(0xeb73, 0x671d, 0x4450, 0xc66b, 0x4abe, 0x131a, 0x0, 0x0);
        gbc.writeMem(0xeb73, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x671d, gbc.sp());
        EXPECT(0xeb75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb73));
        EXPECT(0x8f, gbc.readMem(0xeb74));
        // CB 8F 0376
        gbc.setState(0x8b49, 0x85a5, 0xe50, 0xa75, 0xf2b8, 0x5e2c, 0x1, 0x1);
        gbc.writeMem(0x8b49, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x85a5, gbc.sp());
        EXPECT(0x8b4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b49));
        EXPECT(0x8f, gbc.readMem(0x8b4a));
        // CB 8F 0377
        gbc.setState(0x262a, 0xf114, 0xedd0, 0xc41b, 0x3f4a, 0x6cba, 0x0, 0x1);
        gbc.writeMem(0x262a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf114, gbc.sp());
        EXPECT(0x262c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0378
        gbc.setState(0xbee4, 0xa108, 0x76f0, 0x3c70, 0xd80b, 0xf557, 0x0, 0x0);
        gbc.writeMem(0xbee4, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa108, gbc.sp());
        EXPECT(0xbee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbee4));
        EXPECT(0x8f, gbc.readMem(0xbee5));
        // CB 8F 0379
        gbc.setState(0x6cee, 0x3b09, 0x540, 0xdb94, 0xca8a, 0x9d0d, 0x0, 0x0);
        gbc.writeMem(0x6cee, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3b09, gbc.sp());
        EXPECT(0x6cf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 037A
        gbc.setState(0xa38, 0xf9e4, 0x6b10, 0xfdca, 0x58b1, 0x67a, 0x1, 0x0);
        gbc.writeMem(0xa38, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf9e4, gbc.sp());
        EXPECT(0xa3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 037B
        gbc.setState(0x2d91, 0x1976, 0xca00, 0xcb80, 0x2d84, 0x8808, 0x0, 0x0);
        gbc.writeMem(0x2d91, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1976, gbc.sp());
        EXPECT(0x2d93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 037C
        gbc.setState(0x43f0, 0x8563, 0x57d0, 0x5a53, 0x3897, 0x7a42, 0x1, 0x0);
        gbc.writeMem(0x43f0, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8563, gbc.sp());
        EXPECT(0x43f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 037D
        gbc.setState(0x26c9, 0x13d0, 0xaeb0, 0x2b64, 0x37c0, 0x463d, 0x1, 0x0);
        gbc.writeMem(0x26c9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x13d0, gbc.sp());
        EXPECT(0x26cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 037E
        gbc.setState(0x84e5, 0xa5b7, 0x7600, 0x8729, 0x5d08, 0xb268, 0x0, 0x1);
        gbc.writeMem(0x84e5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa5b7, gbc.sp());
        EXPECT(0x84e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e5));
        EXPECT(0x8f, gbc.readMem(0x84e6));
        // CB 8F 037F
        gbc.setState(0x7809, 0x981, 0xe920, 0x4ae6, 0x16cc, 0xd520, 0x0, 0x1);
        gbc.writeMem(0x7809, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x981, gbc.sp());
        EXPECT(0x780b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0380
        gbc.setState(0x8ab1, 0x82bd, 0x5f80, 0xa00c, 0x2948, 0xb40f, 0x0, 0x1);
        gbc.writeMem(0x8ab1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x82bd, gbc.sp());
        EXPECT(0x8ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab1));
        EXPECT(0x8f, gbc.readMem(0x8ab2));
        // CB 8F 0381
        gbc.setState(0xdbb5, 0xf14f, 0x5630, 0xb19e, 0x6d54, 0x2978, 0x0, 0x0);
        gbc.writeMem(0xdbb5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf14f, gbc.sp());
        EXPECT(0xdbb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb5));
        EXPECT(0x8f, gbc.readMem(0xdbb6));
        // CB 8F 0382
        gbc.setState(0xccc4, 0x434d, 0xb680, 0x645b, 0xa08f, 0x9e6d, 0x1, 0x1);
        gbc.writeMem(0xccc4, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x434d, gbc.sp());
        EXPECT(0xccc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccc4));
        EXPECT(0x8f, gbc.readMem(0xccc5));
        // CB 8F 0383
        gbc.setState(0xb3de, 0x5f9c, 0xe9d0, 0x592a, 0xe62b, 0xe36e, 0x1, 0x0);
        gbc.writeMem(0xb3de, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5f9c, gbc.sp());
        EXPECT(0xb3e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3de));
        EXPECT(0x8f, gbc.readMem(0xb3df));
        // CB 8F 0384
        gbc.setState(0x15fa, 0x19c5, 0x7d80, 0x115b, 0x74c5, 0x4725, 0x0, 0x0);
        gbc.writeMem(0x15fa, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x19c5, gbc.sp());
        EXPECT(0x15fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0385
        gbc.setState(0x76f2, 0xccb, 0xbb20, 0xee92, 0xe557, 0xa948, 0x1, 0x1);
        gbc.writeMem(0x76f2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xccb, gbc.sp());
        EXPECT(0x76f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0386
        gbc.setState(0x72d1, 0xef67, 0x8870, 0x7372, 0x8b9f, 0x2253, 0x0, 0x1);
        gbc.writeMem(0x72d1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xef67, gbc.sp());
        EXPECT(0x72d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0387
        gbc.setState(0xbe70, 0x7a44, 0x390, 0x3226, 0xf8dc, 0x58b9, 0x1, 0x0);
        gbc.writeMem(0xbe70, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7a44, gbc.sp());
        EXPECT(0xbe72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe70));
        EXPECT(0x8f, gbc.readMem(0xbe71));
        // CB 8F 0388
        gbc.setState(0x4f8f, 0x693f, 0xe360, 0x29da, 0x78d9, 0x4d38, 0x0, 0x0);
        gbc.writeMem(0x4f8f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x693f, gbc.sp());
        EXPECT(0x4f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0389
        gbc.setState(0x13d3, 0xcb3d, 0xb480, 0xee, 0x5bd5, 0xf21c, 0x0, 0x1);
        gbc.writeMem(0x13d3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcb3d, gbc.sp());
        EXPECT(0x13d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 038A
        gbc.setState(0x322f, 0xb695, 0x3400, 0x9ab8, 0x30ac, 0x50df, 0x1, 0x1);
        gbc.writeMem(0x322f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb695, gbc.sp());
        EXPECT(0x3231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 038B
        gbc.setState(0x7e2a, 0x4df9, 0xcc90, 0xfad2, 0x7611, 0x6a9b, 0x0, 0x1);
        gbc.writeMem(0x7e2a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4df9, gbc.sp());
        EXPECT(0x7e2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 038C
        gbc.setState(0x12de, 0xce0f, 0xe1a0, 0xfff4, 0xae49, 0xaafb, 0x1, 0x0);
        gbc.writeMem(0x12de, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xce0f, gbc.sp());
        EXPECT(0x12e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 038D
        gbc.setState(0xdf25, 0x9a82, 0x1d30, 0xd71e, 0x8265, 0x2b10, 0x0, 0x0);
        gbc.writeMem(0xdf25, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9a82, gbc.sp());
        EXPECT(0xdf27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf25));
        EXPECT(0x8f, gbc.readMem(0xdf26));
        // CB 8F 038E
        gbc.setState(0xcfff, 0x1273, 0xb270, 0x6ff8, 0xaab4, 0xf1, 0x1, 0x0);
        gbc.writeMem(0xcfff, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1273, gbc.sp());
        EXPECT(0xd001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfff));
        EXPECT(0x8f, gbc.readMem(0xd000));
        // CB 8F 038F
        gbc.setState(0xbcad, 0x627f, 0x2bd0, 0xc622, 0x3c8, 0x9800, 0x0, 0x1);
        gbc.writeMem(0xbcad, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x627f, gbc.sp());
        EXPECT(0xbcaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcad));
        EXPECT(0x8f, gbc.readMem(0xbcae));
        // CB 8F 0390
        gbc.setState(0x493f, 0x3b11, 0x7ff0, 0xb669, 0x3a2b, 0xf460, 0x1, 0x1);
        gbc.writeMem(0x493f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3b11, gbc.sp());
        EXPECT(0x4941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0391
        gbc.setState(0xcdef, 0x4a0, 0x8530, 0xdfc0, 0x8bc9, 0xe9d7, 0x1, 0x0);
        gbc.writeMem(0xcdef, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4a0, gbc.sp());
        EXPECT(0xcdf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdef));
        EXPECT(0x8f, gbc.readMem(0xcdf0));
        // CB 8F 0392
        gbc.setState(0x3e1, 0x6b32, 0x9e60, 0xa66d, 0xeb84, 0xb444, 0x0, 0x1);
        gbc.writeMem(0x3e1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6b32, gbc.sp());
        EXPECT(0x3e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0393
        gbc.setState(0x671f, 0xb3cf, 0xb00, 0xfb77, 0xdf95, 0x6b9, 0x0, 0x0);
        gbc.writeMem(0x671f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb3cf, gbc.sp());
        EXPECT(0x6721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0394
        gbc.setState(0x3a50, 0xbe2d, 0x8e00, 0xb73b, 0x352, 0x7886, 0x1, 0x0);
        gbc.writeMem(0x3a50, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbe2d, gbc.sp());
        EXPECT(0x3a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0395
        gbc.setState(0x26f6, 0xda1c, 0x3bb0, 0x6412, 0x92bc, 0x3908, 0x1, 0x1);
        gbc.writeMem(0x26f6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xda1c, gbc.sp());
        EXPECT(0x26f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0396
        gbc.setState(0x2106, 0x9e39, 0xdc60, 0x2177, 0x1f0d, 0x1ccc, 0x1, 0x0);
        gbc.writeMem(0x2106, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9e39, gbc.sp());
        EXPECT(0x2108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0397
        gbc.setState(0x55f0, 0x90c3, 0x2800, 0x66ce, 0xb723, 0x167f, 0x1, 0x1);
        gbc.writeMem(0x55f0, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x90c3, gbc.sp());
        EXPECT(0x55f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 0398
        gbc.setState(0x1454, 0x703b, 0x1d50, 0xa9c8, 0x13fd, 0xe8d2, 0x1, 0x0);
        gbc.writeMem(0x1454, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x703b, gbc.sp());
        EXPECT(0x1456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 0399
        gbc.setState(0x3905, 0xa658, 0xcd40, 0xa343, 0x9bfd, 0xf470, 0x0, 0x0);
        gbc.writeMem(0x3905, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa658, gbc.sp());
        EXPECT(0x3907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 039A
        gbc.setState(0x788c, 0x7b66, 0xe50, 0x4d69, 0xd5bb, 0x451d, 0x1, 0x1);
        gbc.writeMem(0x788c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7b66, gbc.sp());
        EXPECT(0x788e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 039B
        gbc.setState(0xa824, 0xafd7, 0x4240, 0xfb14, 0xd4ba, 0x3b09, 0x1, 0x0);
        gbc.writeMem(0xa824, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xafd7, gbc.sp());
        EXPECT(0xa826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa824));
        EXPECT(0x8f, gbc.readMem(0xa825));
        // CB 8F 039C
        gbc.setState(0x1f5b, 0x8669, 0x8300, 0xb46, 0xe116, 0x5b50, 0x0, 0x0);
        gbc.writeMem(0x1f5b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8669, gbc.sp());
        EXPECT(0x1f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 039D
        gbc.setState(0x70ef, 0xd6e0, 0xe2e0, 0xc8bf, 0x66ef, 0x9363, 0x0, 0x0);
        gbc.writeMem(0x70ef, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd6e0, gbc.sp());
        EXPECT(0x70f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 039E
        gbc.setState(0x5b43, 0x587d, 0x4210, 0xa0a5, 0x63a7, 0xe4ff, 0x0, 0x1);
        gbc.writeMem(0x5b43, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x587d, gbc.sp());
        EXPECT(0x5b45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 039F
        gbc.setState(0xe8a3, 0x6fd5, 0x3670, 0x9bb3, 0x27f6, 0xf039, 0x0, 0x0);
        gbc.writeMem(0xe8a3, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6fd5, gbc.sp());
        EXPECT(0xe8a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8a3));
        EXPECT(0x8f, gbc.readMem(0xe8a4));
        // CB 8F 03A0
        gbc.setState(0xace4, 0xd2d, 0x8e90, 0x9301, 0x6a6f, 0x8e0c, 0x0, 0x1);
        gbc.writeMem(0xace4, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd2d, gbc.sp());
        EXPECT(0xace6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace4));
        EXPECT(0x8f, gbc.readMem(0xace5));
        // CB 8F 03A1
        gbc.setState(0x45b1, 0xf577, 0x4860, 0x1a90, 0x6af, 0xdf6c, 0x0, 0x0);
        gbc.writeMem(0x45b1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf577, gbc.sp());
        EXPECT(0x45b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 03A2
        gbc.setState(0xab30, 0x61a, 0x3010, 0x633e, 0xbadf, 0x2bb4, 0x1, 0x0);
        gbc.writeMem(0xab30, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x61a, gbc.sp());
        EXPECT(0xab32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab30));
        EXPECT(0x8f, gbc.readMem(0xab31));
        // CB 8F 03A3
        gbc.setState(0xefd9, 0x8f76, 0x7ce0, 0x94fc, 0x9681, 0x96dd, 0x0, 0x1);
        gbc.writeMem(0xefd9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8f76, gbc.sp());
        EXPECT(0xefdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd9));
        EXPECT(0x8f, gbc.readMem(0xefda));
        // CB 8F 03A4
        gbc.setState(0xda21, 0xb34b, 0x1da0, 0x265a, 0x5885, 0x1fbb, 0x0, 0x0);
        gbc.writeMem(0xda21, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb34b, gbc.sp());
        EXPECT(0xda23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda21));
        EXPECT(0x8f, gbc.readMem(0xda22));
        // CB 8F 03A5
        gbc.setState(0x60dc, 0xb54f, 0x60c0, 0xbe66, 0xa196, 0x2506, 0x1, 0x0);
        gbc.writeMem(0x60dc, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb54f, gbc.sp());
        EXPECT(0x60de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 03A6
        gbc.setState(0x6fee, 0x9fc3, 0xb220, 0xa340, 0x895d, 0x9825, 0x1, 0x0);
        gbc.writeMem(0x6fee, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9fc3, gbc.sp());
        EXPECT(0x6ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 03A7
        gbc.setState(0x491c, 0x88ef, 0x6bc0, 0xfeb0, 0xa92f, 0xb077, 0x0, 0x1);
        gbc.writeMem(0x491c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x88ef, gbc.sp());
        EXPECT(0x491e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 03A8
        gbc.setState(0x24c0, 0x2385, 0xb770, 0x8433, 0xd7e9, 0x92a4, 0x0, 0x1);
        gbc.writeMem(0x24c0, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2385, gbc.sp());
        EXPECT(0x24c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 03A9
        gbc.setState(0x1ef4, 0xbb53, 0x78b0, 0xac0d, 0x6584, 0x6c48, 0x1, 0x1);
        gbc.writeMem(0x1ef4, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbb53, gbc.sp());
        EXPECT(0x1ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 03AA
        gbc.setState(0x36a7, 0xeee3, 0xb520, 0xa5e7, 0xaf7a, 0xa365, 0x1, 0x0);
        gbc.writeMem(0x36a7, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xeee3, gbc.sp());
        EXPECT(0x36a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 03AB
        gbc.setState(0x3f3d, 0x6120, 0x2b30, 0x1d9e, 0x75e5, 0x4471, 0x0, 0x0);
        gbc.writeMem(0x3f3d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6120, gbc.sp());
        EXPECT(0x3f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 03AC
        gbc.setState(0x31d2, 0xa3dc, 0x1510, 0x2b8a, 0xbde1, 0x4072, 0x0, 0x1);
        gbc.writeMem(0x31d2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa3dc, gbc.sp());
        EXPECT(0x31d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 03AD
        gbc.setState(0x1661, 0xc937, 0x2a50, 0xae1c, 0x4af1, 0x7ce5, 0x1, 0x0);
        gbc.writeMem(0x1661, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc937, gbc.sp());
        EXPECT(0x1663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 03AE
        gbc.setState(0x97c5, 0xc25b, 0x6ff0, 0x9834, 0x8a15, 0x8614, 0x1, 0x1);
        gbc.writeMem(0x97c5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc25b, gbc.sp());
        EXPECT(0x97c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97c5));
        EXPECT(0x8f, gbc.readMem(0x97c6));
        // CB 8F 03AF
        gbc.setState(0x6e20, 0x33fe, 0x310, 0x7f84, 0xecce, 0xf711, 0x0, 0x1);
        gbc.writeMem(0x6e20, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x33fe, gbc.sp());
        EXPECT(0x6e22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 03B0
        gbc.setState(0xca4c, 0xf68a, 0x8ab0, 0xa2fd, 0xcdac, 0x7602, 0x0, 0x0);
        gbc.writeMem(0xca4c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf68a, gbc.sp());
        EXPECT(0xca4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca4c));
        EXPECT(0x8f, gbc.readMem(0xca4d));
        // CB 8F 03B1
        gbc.setState(0x909f, 0x7e38, 0xfb30, 0x93b0, 0xa90, 0x427c, 0x1, 0x0);
        gbc.writeMem(0x909f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7e38, gbc.sp());
        EXPECT(0x90a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x909f));
        EXPECT(0x8f, gbc.readMem(0x90a0));
        // CB 8F 03B3
        gbc.setState(0xc930, 0x1ee2, 0x6d70, 0xdcbf, 0x85b, 0x885d, 0x0, 0x1);
        gbc.writeMem(0xc930, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1ee2, gbc.sp());
        EXPECT(0xc932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc930));
        EXPECT(0x8f, gbc.readMem(0xc931));
        // CB 8F 03B4
        gbc.setState(0x2f7a, 0xb189, 0x3ea0, 0xeded, 0x2bca, 0x94e9, 0x0, 0x0);
        gbc.writeMem(0x2f7a, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb189, gbc.sp());
        EXPECT(0x2f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 03B5
        gbc.setState(0x40d1, 0x2440, 0xa560, 0xc9fa, 0x74cd, 0xa489, 0x0, 0x0);
        gbc.writeMem(0x40d1, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2440, gbc.sp());
        EXPECT(0x40d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 03B6
        gbc.setState(0xa651, 0xb37d, 0x2760, 0xf04d, 0xcd36, 0xda7d, 0x1, 0x0);
        gbc.writeMem(0xa651, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb37d, gbc.sp());
        EXPECT(0xa653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa651));
        EXPECT(0x8f, gbc.readMem(0xa652));
        // CB 8F 03B7
        gbc.setState(0x8c6f, 0xfc84, 0x4800, 0xbc6d, 0x9120, 0xaeee, 0x1, 0x1);
        gbc.writeMem(0x8c6f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xfc84, gbc.sp());
        EXPECT(0x8c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c6f));
        EXPECT(0x8f, gbc.readMem(0x8c70));
        // CB 8F 03B8
        gbc.setState(0x5a16, 0x10c, 0x58d0, 0x16a, 0x749c, 0x4747, 0x0, 0x0);
        gbc.writeMem(0x5a16, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x10c, gbc.sp());
        EXPECT(0x5a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 03B9
        gbc.setState(0x63b, 0x97b1, 0x6c60, 0x13fd, 0x66ff, 0xf138, 0x0, 0x0);
        gbc.writeMem(0x63b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x97b1, gbc.sp());
        EXPECT(0x63d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 03BA
        gbc.setState(0x261b, 0x82eb, 0x1080, 0x3377, 0x50cc, 0x1644, 0x0, 0x0);
        gbc.writeMem(0x261b, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x82eb, gbc.sp());
        EXPECT(0x261d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 03BB
        gbc.setState(0x8f37, 0x18f, 0x56f0, 0x120, 0xd3b0, 0x470a, 0x1, 0x0);
        gbc.writeMem(0x8f37, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x18f, gbc.sp());
        EXPECT(0x8f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f37));
        EXPECT(0x8f, gbc.readMem(0x8f38));
        // CB 8F 03BC
        gbc.setState(0xa0b2, 0xc0d7, 0xa650, 0x6106, 0xc879, 0x905a, 0x1, 0x0);
        gbc.writeMem(0xa0b2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc0d7, gbc.sp());
        EXPECT(0xa0b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0b2));
        EXPECT(0x8f, gbc.readMem(0xa0b3));
        // CB 8F 03BD
        gbc.setState(0x6516, 0x7bcf, 0x4130, 0xc3e6, 0x61e5, 0x940, 0x1, 0x1);
        gbc.writeMem(0x6516, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7bcf, gbc.sp());
        EXPECT(0x6518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 03BE
        gbc.setState(0x34c9, 0x3300, 0x9d40, 0x50c1, 0x6b08, 0x41a8, 0x1, 0x0);
        gbc.writeMem(0x34c9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3300, gbc.sp());
        EXPECT(0x34cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 03BF
        gbc.setState(0x57e0, 0x425a, 0x8860, 0x4c4e, 0x5131, 0xf8f4, 0x1, 0x1);
        gbc.writeMem(0x57e0, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x425a, gbc.sp());
        EXPECT(0x57e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 03C0
        gbc.setState(0x4b5, 0xebe8, 0xe790, 0xfad5, 0x6dcf, 0x407e, 0x1, 0x0);
        gbc.writeMem(0x4b5, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xebe8, gbc.sp());
        EXPECT(0x4b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 03C1
        gbc.setState(0x3bc0, 0x73b9, 0x120, 0xa6c5, 0x4834, 0x7f55, 0x1, 0x0);
        gbc.writeMem(0x3bc0, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x73b9, gbc.sp());
        EXPECT(0x3bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 03C2
        gbc.setState(0xd941, 0xd570, 0xc4d0, 0x4d95, 0x3787, 0x6a47, 0x1, 0x1);
        gbc.writeMem(0xd941, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd570, gbc.sp());
        EXPECT(0xd943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd941));
        EXPECT(0x8f, gbc.readMem(0xd942));
        // CB 8F 03C3
        gbc.setState(0x2443, 0x16d8, 0x88f0, 0xbe44, 0x3c3e, 0xff44, 0x0, 0x0);
        gbc.writeMem(0x2443, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x16d8, gbc.sp());
        EXPECT(0x2445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 03C4
        gbc.setState(0x6862, 0x87bb, 0x9eb0, 0x7b76, 0x80ab, 0x72f9, 0x0, 0x1);
        gbc.writeMem(0x6862, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x87bb, gbc.sp());
        EXPECT(0x6864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 03C5
        gbc.setState(0x7442, 0x91fa, 0xadf0, 0xae3e, 0xdaab, 0x96f8, 0x0, 0x0);
        gbc.writeMem(0x7442, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x91fa, gbc.sp());
        EXPECT(0x7444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 03C6
        gbc.setState(0xc947, 0x7630, 0x2f20, 0xcc6d, 0x9b97, 0x5235, 0x0, 0x0);
        gbc.writeMem(0xc947, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7630, gbc.sp());
        EXPECT(0xc949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc947));
        EXPECT(0x8f, gbc.readMem(0xc948));
        // CB 8F 03C8
        gbc.setState(0x5599, 0x15ae, 0x7cd0, 0x4532, 0x5328, 0x8698, 0x0, 0x1);
        gbc.writeMem(0x5599, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x15ae, gbc.sp());
        EXPECT(0x559b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 03C9
        gbc.setState(0xccd6, 0x5bf3, 0x2720, 0x7e77, 0xe491, 0x5a2c, 0x1, 0x1);
        gbc.writeMem(0xccd6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5bf3, gbc.sp());
        EXPECT(0xccd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd6));
        EXPECT(0x8f, gbc.readMem(0xccd7));
        // CB 8F 03CA
        gbc.setState(0xc742, 0xd70a, 0x5620, 0xabeb, 0xf0bb, 0xd69e, 0x0, 0x0);
        gbc.writeMem(0xc742, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd70a, gbc.sp());
        EXPECT(0xc744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc742));
        EXPECT(0x8f, gbc.readMem(0xc743));
        // CB 8F 03CB
        gbc.setState(0x336f, 0xb4dd, 0xfd60, 0xcca9, 0x1fa7, 0x203a, 0x0, 0x0);
        gbc.writeMem(0x336f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb4dd, gbc.sp());
        EXPECT(0x3371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 03CC
        gbc.setState(0x8e3e, 0x20fc, 0x21f0, 0xda11, 0xd3ab, 0xf4ae, 0x0, 0x0);
        gbc.writeMem(0x8e3e, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x20fc, gbc.sp());
        EXPECT(0x8e40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e3e));
        EXPECT(0x8f, gbc.readMem(0x8e3f));
        // CB 8F 03CD
        gbc.setState(0x5f67, 0x8047, 0x240, 0x5d34, 0x2140, 0x8d96, 0x0, 0x1);
        gbc.writeMem(0x5f67, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8047, gbc.sp());
        EXPECT(0x5f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 03CE
        gbc.setState(0x38b9, 0x85a7, 0x2610, 0xbd5, 0xc297, 0x53fd, 0x1, 0x0);
        gbc.writeMem(0x38b9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x85a7, gbc.sp());
        EXPECT(0x38bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 03CF
        gbc.setState(0xc00, 0xa80e, 0x77e0, 0xe8f1, 0x5bcf, 0x2740, 0x0, 0x1);
        gbc.writeMem(0xc00, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa80e, gbc.sp());
        EXPECT(0xc02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 03D0
        gbc.setState(0x8960, 0xff64, 0x3210, 0x5417, 0x4727, 0x9efd, 0x1, 0x0);
        gbc.writeMem(0x8960, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xff64, gbc.sp());
        EXPECT(0x8962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8960));
        EXPECT(0x8f, gbc.readMem(0x8961));
        // CB 8F 03D2
        gbc.setState(0x64c6, 0x341f, 0x8cc0, 0x489c, 0x4b1c, 0x2c57, 0x0, 0x1);
        gbc.writeMem(0x64c6, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x341f, gbc.sp());
        EXPECT(0x64c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 03D3
        gbc.setState(0xeac2, 0xbc7, 0x7270, 0xfc8f, 0x98a2, 0x9886, 0x0, 0x1);
        gbc.writeMem(0xeac2, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbc7, gbc.sp());
        EXPECT(0xeac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac2));
        EXPECT(0x8f, gbc.readMem(0xeac3));
        // CB 8F 03D4
        gbc.setState(0xeded, 0xb635, 0x6420, 0x1707, 0x4a38, 0x7de7, 0x0, 0x0);
        gbc.writeMem(0xeded, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb635, gbc.sp());
        EXPECT(0xedef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeded));
        EXPECT(0x8f, gbc.readMem(0xedee));
        // CB 8F 03D5
        gbc.setState(0xca22, 0xd48f, 0xc1d0, 0xde37, 0xb053, 0xf6da, 0x0, 0x1);
        gbc.writeMem(0xca22, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd48f, gbc.sp());
        EXPECT(0xca24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca22));
        EXPECT(0x8f, gbc.readMem(0xca23));
        // CB 8F 03D6
        gbc.setState(0x1880, 0xf0c5, 0x9da0, 0x40b0, 0xa503, 0xc7d9, 0x0, 0x1);
        gbc.writeMem(0x1880, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf0c5, gbc.sp());
        EXPECT(0x1882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 03D7
        gbc.setState(0x154f, 0x5de3, 0xc4a0, 0x4f84, 0xcbc0, 0x2617, 0x1, 0x0);
        gbc.writeMem(0x154f, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5de3, gbc.sp());
        EXPECT(0x1551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 03D8
        gbc.setState(0x5503, 0x24fa, 0xb220, 0xe45f, 0xcdd5, 0x146b, 0x1, 0x1);
        gbc.writeMem(0x5503, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x24fa, gbc.sp());
        EXPECT(0x5505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 03DA
        gbc.setState(0x8293, 0x5a1d, 0xaf30, 0xc1b8, 0xe2e8, 0x1f3c, 0x0, 0x1);
        gbc.writeMem(0x8293, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5a1d, gbc.sp());
        EXPECT(0x8295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8293));
        EXPECT(0x8f, gbc.readMem(0x8294));
        // CB 8F 03DB
        gbc.setState(0x4dbd, 0x815b, 0xc010, 0xaecc, 0x79a9, 0xf571, 0x0, 0x0);
        gbc.writeMem(0x4dbd, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x815b, gbc.sp());
        EXPECT(0x4dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 03DD
        gbc.setState(0xefb4, 0xb31a, 0xa800, 0xa881, 0xb013, 0xe220, 0x1, 0x1);
        gbc.writeMem(0xefb4, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb31a, gbc.sp());
        EXPECT(0xefb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb4));
        EXPECT(0x8f, gbc.readMem(0xefb5));
        // CB 8F 03DE
        gbc.setState(0xd4e9, 0xc770, 0x6120, 0xade8, 0x7620, 0xe5a3, 0x1, 0x0);
        gbc.writeMem(0xd4e9, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc770, gbc.sp());
        EXPECT(0xd4eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4e9));
        EXPECT(0x8f, gbc.readMem(0xd4ea));
        // CB 8F 03DF
        gbc.setState(0xaff8, 0x3da2, 0x1470, 0x113b, 0x5ea0, 0xa967, 0x1, 0x1);
        gbc.writeMem(0xaff8, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3da2, gbc.sp());
        EXPECT(0xaffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff8));
        EXPECT(0x8f, gbc.readMem(0xaff9));
        // CB 8F 03E0
        gbc.setState(0xebcb, 0x4bf0, 0xe630, 0x616b, 0x91ef, 0xadd2, 0x1, 0x1);
        gbc.writeMem(0xebcb, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4bf0, gbc.sp());
        EXPECT(0xebcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebcb));
        EXPECT(0x8f, gbc.readMem(0xebcc));
        // CB 8F 03E1
        gbc.setState(0xe86c, 0x640, 0xa370, 0xfcaa, 0x926f, 0x3e8e, 0x0, 0x1);
        gbc.writeMem(0xe86c, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x640, gbc.sp());
        EXPECT(0xe86e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe86c));
        EXPECT(0x8f, gbc.readMem(0xe86d));
        // CB 8F 03E2
        gbc.setState(0xb568, 0x4e1e, 0x1b80, 0x8de1, 0x1920, 0x6a4d, 0x0, 0x1);
        gbc.writeMem(0xb568, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4e1e, gbc.sp());
        EXPECT(0xb56a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb568));
        EXPECT(0x8f, gbc.readMem(0xb569));
        // CB 8F 03E3
        gbc.setState(0x874, 0x4491, 0x5d50, 0x3a25, 0x7a22, 0x65f3, 0x0, 0x1);
        gbc.writeMem(0x874, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4491, gbc.sp());
        EXPECT(0x876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8F 03E4
        gbc.setState(0x801d, 0x4b8b, 0x9800, 0xb1dc, 0x656e, 0xa607, 0x0, 0x1);
        gbc.writeMem(0x801d, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4b8b, gbc.sp());
        EXPECT(0x801f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x801d));
        EXPECT(0x8f, gbc.readMem(0x801e));
        // CB 8F 03E5
        gbc.setState(0xdee4, 0x37ef, 0xe560, 0xb76e, 0x2303, 0xd031, 0x0, 0x0);
        gbc.writeMem(0xdee4, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x37ef, gbc.sp());
        EXPECT(0xdee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdee4));
        EXPECT(0x8f, gbc.readMem(0xdee5));
        // CB 8F 03E6
        gbc.setState(0x3306, 0xedae, 0x720, 0x404c, 0xadc8, 0xc586, 0x1, 0x1);
        gbc.writeMem(0x3306, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xedae, gbc.sp());
        EXPECT(0x3308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8F 03E7
        gbc.setState(0xce26, 0xfcdf, 0xe8a0, 0x2925, 0x8aea, 0x1ba1, 0x0, 0x0);
        gbc.writeMem(0xce26, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfcdf, gbc.sp());
        EXPECT(0xce28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce26));
        EXPECT(0x8f, gbc.readMem(0xce27));
    }
