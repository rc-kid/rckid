#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_ee)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_ee) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // EE 0000
        gbc.setState(0x7414, 0x12, 0x9670, 0xcd1e, 0x543d, 0x5658, 0x1, 0x1);
        gbc.writeMem(0x7414, { 0xee, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x12);
        EXPECT(gbc.pc(), 0x7416);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0001
        gbc.setState(0x79f6, 0xa6b, 0xf1e0, 0x4841, 0x698a, 0xd147, 0x0, 0x0);
        gbc.writeMem(0x79f6, { 0xee, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa6b);
        EXPECT(gbc.pc(), 0x79f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0002
        gbc.setState(0x2feb, 0x7120, 0xdc40, 0x956, 0x7cb9, 0x8d9b, 0x1, 0x1);
        gbc.writeMem(0x2feb, { 0xee, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7120);
        EXPECT(gbc.pc(), 0x2fed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0003
        gbc.setState(0x7db0, 0x7f55, 0x8b0, 0x110a, 0xd7ca, 0xf4b, 0x1, 0x0);
        gbc.writeMem(0x7db0, { 0xee, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7f55);
        EXPECT(gbc.pc(), 0x7db2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0004
        gbc.setState(0x61b0, 0xf839, 0xb4f0, 0x641a, 0x4f70, 0x315f, 0x1, 0x1);
        gbc.writeMem(0x61b0, { 0xee, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf839);
        EXPECT(gbc.pc(), 0x61b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0005
        gbc.setState(0x3454, 0x2749, 0xeb30, 0xb476, 0x4300, 0x2229, 0x0, 0x1);
        gbc.writeMem(0x3454, { 0xee, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2749);
        EXPECT(gbc.pc(), 0x3456);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0006
        gbc.setState(0x870a, 0x217f, 0x7e0, 0x6797, 0xe034, 0x717f, 0x0, 0x1);
        gbc.writeMem(0x870a, { 0xee, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x217f);
        EXPECT(gbc.pc(), 0x870c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x870a), 0xee);
        EXPECT(gbc.readMem(0x870b), 0xce);
        // EE 0007
        gbc.setState(0x16cd, 0x9de8, 0x3d90, 0xb376, 0xdc5c, 0x5c15, 0x0, 0x0);
        gbc.writeMem(0x16cd, { 0xee, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9de8);
        EXPECT(gbc.pc(), 0x16cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0008
        gbc.setState(0x5811, 0x60c7, 0xce20, 0xf599, 0x1d16, 0xa0ec, 0x0, 0x1);
        gbc.writeMem(0x5811, { 0xee, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x60c7);
        EXPECT(gbc.pc(), 0x5813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0009
        gbc.setState(0xdb, 0x1949, 0x59f0, 0x5b5f, 0x7d82, 0xd057, 0x1, 0x1);
        gbc.writeMem(0xdb, { 0xee, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x1949);
        EXPECT(gbc.pc(), 0xdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 000A
        gbc.setState(0x79cd, 0xec3f, 0x2890, 0x8241, 0xd0e0, 0x443f, 0x0, 0x0);
        gbc.writeMem(0x79cd, { 0xee, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xec3f);
        EXPECT(gbc.pc(), 0x79cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 000B
        gbc.setState(0xe759, 0x1c79, 0x38f0, 0xd97d, 0x205a, 0x817a, 0x1, 0x0);
        gbc.writeMem(0xe759, { 0xee, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x1c79);
        EXPECT(gbc.pc(), 0xe75b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe759), 0xee);
        EXPECT(gbc.readMem(0xe75a), 0x43);
        // EE 000C
        gbc.setState(0xcace, 0xfa39, 0x70c0, 0x3b06, 0x54d7, 0x319a, 0x1, 0x1);
        gbc.writeMem(0xcace, { 0xee, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xfa39);
        EXPECT(gbc.pc(), 0xcad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcace), 0xee);
        EXPECT(gbc.readMem(0xcacf), 0x5f);
        // EE 000E
        gbc.setState(0xbb91, 0x6cec, 0x9ba0, 0x4839, 0x6430, 0xa402, 0x1, 0x0);
        gbc.writeMem(0xbb91, { 0xee, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x6cec);
        EXPECT(gbc.pc(), 0xbb93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb91), 0xee);
        EXPECT(gbc.readMem(0xbb92), 0xbf);
        // EE 000F
        gbc.setState(0x4523, 0x9dba, 0x7da0, 0x5341, 0x7b, 0x5303, 0x0, 0x0);
        gbc.writeMem(0x4523, { 0xee, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x9dba);
        EXPECT(gbc.pc(), 0x4525);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0010
        gbc.setState(0x6b4c, 0xae5c, 0x8f10, 0x128c, 0x887c, 0x7049, 0x0, 0x0);
        gbc.writeMem(0x6b4c, { 0xee, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xae5c);
        EXPECT(gbc.pc(), 0x6b4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0011
        gbc.setState(0x28cf, 0x928d, 0x61d0, 0x92f3, 0x5343, 0x74b9, 0x0, 0x0);
        gbc.writeMem(0x28cf, { 0xee, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x928d);
        EXPECT(gbc.pc(), 0x28d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0012
        gbc.setState(0xa0e6, 0xb01a, 0x4830, 0x1ce, 0xe684, 0x277, 0x0, 0x1);
        gbc.writeMem(0xa0e6, { 0xee, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb01a);
        EXPECT(gbc.pc(), 0xa0e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e6), 0xee);
        EXPECT(gbc.readMem(0xa0e7), 0xbf);
        // EE 0013
        gbc.setState(0xd685, 0x5615, 0x94e0, 0xbe89, 0x9253, 0x81c1, 0x0, 0x1);
        gbc.writeMem(0xd685, { 0xee, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5615);
        EXPECT(gbc.pc(), 0xd687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd685), 0xee);
        EXPECT(gbc.readMem(0xd686), 0x2c);
        // EE 0014
        gbc.setState(0xcd72, 0x4638, 0x4bb0, 0x6745, 0xe6d2, 0x8a12, 0x1, 0x0);
        gbc.writeMem(0xcd72, { 0xee, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x4638);
        EXPECT(gbc.pc(), 0xcd74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd72), 0xee);
        EXPECT(gbc.readMem(0xcd73), 0x88);
        // EE 0017
        gbc.setState(0xe89a, 0xa491, 0xf440, 0xcada, 0x633b, 0x534b, 0x1, 0x0);
        gbc.writeMem(0xe89a, { 0xee, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xa491);
        EXPECT(gbc.pc(), 0xe89c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe89a), 0xee);
        EXPECT(gbc.readMem(0xe89b), 0x40);
        // EE 0018
        gbc.setState(0x786c, 0x1645, 0xbc90, 0x27f9, 0xe969, 0x19c9, 0x1, 0x0);
        gbc.writeMem(0x786c, { 0xee, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1645);
        EXPECT(gbc.pc(), 0x786e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0019
        gbc.setState(0x9828, 0xed4, 0x6370, 0x8f00, 0x6197, 0x628a, 0x1, 0x1);
        gbc.writeMem(0x9828, { 0xee, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xed4);
        EXPECT(gbc.pc(), 0x982a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9828), 0xee);
        EXPECT(gbc.readMem(0x9829), 0x67);
        // EE 001A
        gbc.setState(0xbe15, 0xf911, 0xd140, 0x368, 0xa04a, 0x5fe2, 0x1, 0x1);
        gbc.writeMem(0xbe15, { 0xee, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf911);
        EXPECT(gbc.pc(), 0xbe17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe15), 0xee);
        EXPECT(gbc.readMem(0xbe16), 0xf7);
        // EE 001B
        gbc.setState(0x4537, 0xf164, 0x680, 0x701f, 0xd68, 0x62ed, 0x1, 0x0);
        gbc.writeMem(0x4537, { 0xee, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf164);
        EXPECT(gbc.pc(), 0x4539);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 001C
        gbc.setState(0x30a8, 0x5f6c, 0x6830, 0x6c25, 0x223b, 0xc016, 0x0, 0x1);
        gbc.writeMem(0x30a8, { 0xee, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5f6c);
        EXPECT(gbc.pc(), 0x30aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 001D
        gbc.setState(0x1a61, 0xf815, 0x8a70, 0x7f2c, 0xcc06, 0xe72d, 0x0, 0x1);
        gbc.writeMem(0x1a61, { 0xee, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf815);
        EXPECT(gbc.pc(), 0x1a63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 001E
        gbc.setState(0x7ffe, 0x1c99, 0xb510, 0x143d, 0x394d, 0x84f6, 0x0, 0x1);
        gbc.writeMem(0x7ffe, { 0xee, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x1c99);
        EXPECT(gbc.pc(), 0x8000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 001F
        gbc.setState(0xb72, 0x6ad6, 0xe540, 0x449, 0xbeb0, 0xd132, 0x1, 0x0);
        gbc.writeMem(0xb72, { 0xee, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6ad6);
        EXPECT(gbc.pc(), 0xb74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0020
        gbc.setState(0x569c, 0x231, 0x7a50, 0xe28a, 0xc21d, 0xaf28, 0x1, 0x1);
        gbc.writeMem(0x569c, { 0xee, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x231);
        EXPECT(gbc.pc(), 0x569e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0021
        gbc.setState(0x77a3, 0xf79b, 0xe840, 0x68ed, 0x8798, 0xe4d9, 0x0, 0x0);
        gbc.writeMem(0x77a3, { 0xee, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf79b);
        EXPECT(gbc.pc(), 0x77a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0022
        gbc.setState(0x1a52, 0x8aea, 0x7c40, 0x6f67, 0x35e, 0xb3c6, 0x0, 0x0);
        gbc.writeMem(0x1a52, { 0xee, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8aea);
        EXPECT(gbc.pc(), 0x1a54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0024
        gbc.setState(0x7752, 0xadec, 0x3c0, 0x8b79, 0x8013, 0x347f, 0x0, 0x0);
        gbc.writeMem(0x7752, { 0xee, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xadec);
        EXPECT(gbc.pc(), 0x7754);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0025
        gbc.setState(0xdb9f, 0x3e38, 0x1d60, 0xd1f6, 0xeb0a, 0x8ae8, 0x0, 0x0);
        gbc.writeMem(0xdb9f, { 0xee, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3e38);
        EXPECT(gbc.pc(), 0xdba1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb9f), 0xee);
        EXPECT(gbc.readMem(0xdba0), 0x6c);
        // EE 0026
        gbc.setState(0x8c86, 0x3b4, 0x950, 0x3943, 0x5e22, 0xe364, 0x0, 0x0);
        gbc.writeMem(0x8c86, { 0xee, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3b4);
        EXPECT(gbc.pc(), 0x8c88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c86), 0xee);
        EXPECT(gbc.readMem(0x8c87), 0x84);
        // EE 0027
        gbc.setState(0x207e, 0xe28e, 0x5f50, 0x2962, 0x2d36, 0x434f, 0x0, 0x1);
        gbc.writeMem(0x207e, { 0xee, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe28e);
        EXPECT(gbc.pc(), 0x2080);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0028
        gbc.setState(0x6538, 0x349d, 0xd1c0, 0xa72f, 0x72d5, 0x902, 0x0, 0x1);
        gbc.writeMem(0x6538, { 0xee, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x349d);
        EXPECT(gbc.pc(), 0x653a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0029
        gbc.setState(0x9bab, 0x7632, 0xd970, 0x3a13, 0x73e1, 0x55d5, 0x1, 0x0);
        gbc.writeMem(0x9bab, { 0xee, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7632);
        EXPECT(gbc.pc(), 0x9bad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bab), 0xee);
        EXPECT(gbc.readMem(0x9bac), 0xbe);
        // EE 002A
        gbc.setState(0xdb20, 0x134d, 0x4410, 0x294e, 0x12d4, 0x526, 0x0, 0x1);
        gbc.writeMem(0xdb20, { 0xee, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x134d);
        EXPECT(gbc.pc(), 0xdb22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb20), 0xee);
        EXPECT(gbc.readMem(0xdb21), 0x76);
        // EE 002B
        gbc.setState(0x2cca, 0xf549, 0x6e40, 0xd712, 0x4336, 0x6d46, 0x1, 0x0);
        gbc.writeMem(0x2cca, { 0xee, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf549);
        EXPECT(gbc.pc(), 0x2ccc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 002C
        gbc.setState(0x9fe6, 0x2e30, 0x9d30, 0xb545, 0x38b7, 0xb172, 0x0, 0x1);
        gbc.writeMem(0x9fe6, { 0xee, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2e30);
        EXPECT(gbc.pc(), 0x9fe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fe6), 0xee);
        EXPECT(gbc.readMem(0x9fe7), 0x1b);
        // EE 002D
        gbc.setState(0x9911, 0xff1c, 0x7840, 0x7287, 0xfec7, 0x532b, 0x0, 0x1);
        gbc.writeMem(0x9911, { 0xee, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xff1c);
        EXPECT(gbc.pc(), 0x9913);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9911), 0xee);
        EXPECT(gbc.readMem(0x9912), 0x17);
        // EE 002E
        gbc.setState(0xa8f6, 0xd916, 0xcea0, 0x1b08, 0xcc2b, 0xa2d, 0x0, 0x0);
        gbc.writeMem(0xa8f6, { 0xee, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd916);
        EXPECT(gbc.pc(), 0xa8f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8f6), 0xee);
        EXPECT(gbc.readMem(0xa8f7), 0x20);
        // EE 002F
        gbc.setState(0x8245, 0x3dd9, 0x6d30, 0x1bce, 0x15c3, 0xa624, 0x0, 0x1);
        gbc.writeMem(0x8245, { 0xee, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3dd9);
        EXPECT(gbc.pc(), 0x8247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8245), 0xee);
        EXPECT(gbc.readMem(0x8246), 0x11);
        // EE 0030
        gbc.setState(0x949e, 0xdfa1, 0xe550, 0xa90, 0x6572, 0xc575, 0x1, 0x1);
        gbc.writeMem(0x949e, { 0xee, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xdfa1);
        EXPECT(gbc.pc(), 0x94a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x949e), 0xee);
        EXPECT(gbc.readMem(0x949f), 0xd);
        // EE 0031
        gbc.setState(0x48a6, 0x575b, 0xc460, 0x427f, 0x5207, 0xaad4, 0x1, 0x1);
        gbc.writeMem(0x48a6, { 0xee, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x575b);
        EXPECT(gbc.pc(), 0x48a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0032
        gbc.setState(0x261e, 0x19a7, 0x95a0, 0x6b08, 0x7a0b, 0x4412, 0x1, 0x1);
        gbc.writeMem(0x261e, { 0xee, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x19a7);
        EXPECT(gbc.pc(), 0x2620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0033
        gbc.setState(0xb2b1, 0xb403, 0x7860, 0xfd3c, 0x60c9, 0xa9c7, 0x1, 0x0);
        gbc.writeMem(0xb2b1, { 0xee, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb403);
        EXPECT(gbc.pc(), 0xb2b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2b1), 0xee);
        EXPECT(gbc.readMem(0xb2b2), 0x43);
        // EE 0034
        gbc.setState(0x6dcc, 0x3ca1, 0x20f0, 0xc0ea, 0x8df8, 0x9134, 0x0, 0x1);
        gbc.writeMem(0x6dcc, { 0xee, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3ca1);
        EXPECT(gbc.pc(), 0x6dce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0035
        gbc.setState(0xb915, 0x4617, 0x4e60, 0x3f99, 0x796b, 0x33dd, 0x1, 0x0);
        gbc.writeMem(0xb915, { 0xee, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4617);
        EXPECT(gbc.pc(), 0xb917);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb915), 0xee);
        EXPECT(gbc.readMem(0xb916), 0xeb);
        // EE 0036
        gbc.setState(0x3dd, 0x221c, 0x34a0, 0xaefa, 0x4541, 0xe395, 0x1, 0x1);
        gbc.writeMem(0x3dd, { 0xee, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x221c);
        EXPECT(gbc.pc(), 0x3df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0037
        gbc.setState(0xfb0, 0x3aaf, 0xa0a0, 0xc561, 0xef9c, 0xfe59, 0x1, 0x1);
        gbc.writeMem(0xfb0, { 0xee, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x3aaf);
        EXPECT(gbc.pc(), 0xfb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0038
        gbc.setState(0x7755, 0x5762, 0x31f0, 0x3566, 0x4c6b, 0x18fd, 0x1, 0x1);
        gbc.writeMem(0x7755, { 0xee, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x5762);
        EXPECT(gbc.pc(), 0x7757);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0039
        gbc.setState(0x8778, 0x7fdc, 0x71f0, 0xcec, 0xf8d6, 0xdbdf, 0x1, 0x0);
        gbc.writeMem(0x8778, { 0xee, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7fdc);
        EXPECT(gbc.pc(), 0x877a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8778), 0xee);
        EXPECT(gbc.readMem(0x8779), 0x3f);
        // EE 003A
        gbc.setState(0x82c4, 0x1c55, 0x8c90, 0x9ce6, 0xf845, 0x4ae, 0x1, 0x1);
        gbc.writeMem(0x82c4, { 0xee, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1c55);
        EXPECT(gbc.pc(), 0x82c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82c4), 0xee);
        EXPECT(gbc.readMem(0x82c5), 0xdc);
        // EE 003B
        gbc.setState(0x301b, 0xcb06, 0x5240, 0xf2d8, 0xd15b, 0xa9aa, 0x0, 0x1);
        gbc.writeMem(0x301b, { 0xee, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xcb06);
        EXPECT(gbc.pc(), 0x301d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 003C
        gbc.setState(0xd892, 0x57b7, 0x3890, 0x3515, 0x3ee0, 0x55a, 0x0, 0x0);
        gbc.writeMem(0xd892, { 0xee, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x57b7);
        EXPECT(gbc.pc(), 0xd894);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd892), 0xee);
        EXPECT(gbc.readMem(0xd893), 0x5e);
        // EE 003D
        gbc.setState(0xa3cd, 0x11f3, 0xeb10, 0xcb75, 0x7d4f, 0x29ad, 0x1, 0x0);
        gbc.writeMem(0xa3cd, { 0xee, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x11f3);
        EXPECT(gbc.pc(), 0xa3cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3cd), 0xee);
        EXPECT(gbc.readMem(0xa3ce), 0x28);
        // EE 003E
        gbc.setState(0xb2fa, 0x3022, 0xeae0, 0x7eaa, 0xde54, 0x7d26, 0x1, 0x0);
        gbc.writeMem(0xb2fa, { 0xee, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3022);
        EXPECT(gbc.pc(), 0xb2fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2fa), 0xee);
        EXPECT(gbc.readMem(0xb2fb), 0x7b);
        // EE 003F
        gbc.setState(0xbee7, 0x95b0, 0x1dc0, 0xd085, 0x10e7, 0x4b84, 0x0, 0x1);
        gbc.writeMem(0xbee7, { 0xee, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x95b0);
        EXPECT(gbc.pc(), 0xbee9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbee7), 0xee);
        EXPECT(gbc.readMem(0xbee8), 0x35);
        // EE 0041
        gbc.setState(0x9ddd, 0x34fd, 0xfb80, 0x32f0, 0xbdca, 0x3d94, 0x1, 0x0);
        gbc.writeMem(0x9ddd, { 0xee, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x34fd);
        EXPECT(gbc.pc(), 0x9ddf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ddd), 0xee);
        EXPECT(gbc.readMem(0x9dde), 0xa0);
        // EE 0042
        gbc.setState(0xd616, 0xcecb, 0x2350, 0xf6b9, 0x6db0, 0x798a, 0x1, 0x1);
        gbc.writeMem(0xd616, { 0xee, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xcecb);
        EXPECT(gbc.pc(), 0xd618);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd616), 0xee);
        EXPECT(gbc.readMem(0xd617), 0x22);
        // EE 0043
        gbc.setState(0xd356, 0x2d85, 0x5090, 0x4ea3, 0x64de, 0x485d, 0x0, 0x0);
        gbc.writeMem(0xd356, { 0xee, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2d85);
        EXPECT(gbc.pc(), 0xd358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd356), 0xee);
        EXPECT(gbc.readMem(0xd357), 0x8d);
        // EE 0044
        gbc.setState(0x35e0, 0x235c, 0x2580, 0xf66b, 0x73aa, 0x51b, 0x0, 0x1);
        gbc.writeMem(0x35e0, { 0xee, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x235c);
        EXPECT(gbc.pc(), 0x35e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0045
        gbc.setState(0x331c, 0xcecb, 0xe0a0, 0xa0f6, 0x3528, 0xa3b2, 0x0, 0x0);
        gbc.writeMem(0x331c, { 0xee, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xcecb);
        EXPECT(gbc.pc(), 0x331e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0046
        gbc.setState(0xe3a4, 0x87d3, 0xb5c0, 0x412d, 0xf453, 0xa674, 0x1, 0x0);
        gbc.writeMem(0xe3a4, { 0xee, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x87d3);
        EXPECT(gbc.pc(), 0xe3a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3a4), 0xee);
        EXPECT(gbc.readMem(0xe3a5), 0x68);
        // EE 0047
        gbc.setState(0x3431, 0xebce, 0x2e50, 0x599, 0x625a, 0x9cab, 0x0, 0x1);
        gbc.writeMem(0x3431, { 0xee, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xebce);
        EXPECT(gbc.pc(), 0x3433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0048
        gbc.setState(0xcb95, 0xf03, 0x4160, 0x9d4d, 0xbac6, 0xb9bf, 0x0, 0x0);
        gbc.writeMem(0xcb95, { 0xee, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf03);
        EXPECT(gbc.pc(), 0xcb97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb95), 0xee);
        EXPECT(gbc.readMem(0xcb96), 0xc5);
        // EE 0049
        gbc.setState(0x2e57, 0x8b61, 0x37a0, 0xcbad, 0x227, 0x7ebf, 0x1, 0x0);
        gbc.writeMem(0x2e57, { 0xee, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8b61);
        EXPECT(gbc.pc(), 0x2e59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 004A
        gbc.setState(0xaddc, 0x7257, 0xeaf0, 0x3ba, 0x57ff, 0xc00b, 0x0, 0x1);
        gbc.writeMem(0xaddc, { 0xee, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7257);
        EXPECT(gbc.pc(), 0xadde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaddc), 0xee);
        EXPECT(gbc.readMem(0xaddd), 0x9a);
        // EE 004B
        gbc.setState(0xb218, 0x1ad6, 0x52d0, 0xa765, 0x3151, 0x9007, 0x1, 0x1);
        gbc.writeMem(0xb218, { 0xee, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1ad6);
        EXPECT(gbc.pc(), 0xb21a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb218), 0xee);
        EXPECT(gbc.readMem(0xb219), 0x5c);
        // EE 004C
        gbc.setState(0x2c74, 0xeb14, 0xa590, 0x1611, 0xf364, 0x26d, 0x1, 0x0);
        gbc.writeMem(0x2c74, { 0xee, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xeb14);
        EXPECT(gbc.pc(), 0x2c76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 004D
        gbc.setState(0xbe35, 0x6b0b, 0x6270, 0x7776, 0x84db, 0x8e3d, 0x1, 0x1);
        gbc.writeMem(0xbe35, { 0xee, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6b0b);
        EXPECT(gbc.pc(), 0xbe37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe35), 0xee);
        EXPECT(gbc.readMem(0xbe36), 0x6e);
        // EE 004E
        gbc.setState(0x77a6, 0xc3ce, 0xe80, 0xa8f1, 0xf646, 0x5917, 0x1, 0x1);
        gbc.writeMem(0x77a6, { 0xee, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc3ce);
        EXPECT(gbc.pc(), 0x77a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 004F
        gbc.setState(0xdde6, 0x3ade, 0x4a20, 0xf5ba, 0xed96, 0x6dd, 0x0, 0x1);
        gbc.writeMem(0xdde6, { 0xee, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3ade);
        EXPECT(gbc.pc(), 0xdde8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdde6), 0xee);
        EXPECT(gbc.readMem(0xdde7), 0x86);
        // EE 0050
        gbc.setState(0xd12, 0x7e8f, 0xe500, 0x7d8a, 0x5723, 0xafb6, 0x0, 0x1);
        gbc.writeMem(0xd12, { 0xee, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7e8f);
        EXPECT(gbc.pc(), 0xd14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0051
        gbc.setState(0x91f, 0x2e17, 0x7660, 0x7d05, 0xbdeb, 0xdd38, 0x0, 0x0);
        gbc.writeMem(0x91f, { 0xee, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2e17);
        EXPECT(gbc.pc(), 0x921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0052
        gbc.setState(0x839e, 0x6e7b, 0xbd20, 0x51bd, 0xcc2, 0x38b0, 0x1, 0x0);
        gbc.writeMem(0x839e, { 0xee, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6e7b);
        EXPECT(gbc.pc(), 0x83a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x839e), 0xee);
        EXPECT(gbc.readMem(0x839f), 0xcc);
        // EE 0053
        gbc.setState(0xb87b, 0x89c, 0x4d20, 0x3830, 0x690d, 0xa54c, 0x1, 0x0);
        gbc.writeMem(0xb87b, { 0xee, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x89c);
        EXPECT(gbc.pc(), 0xb87d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb87b), 0xee);
        EXPECT(gbc.readMem(0xb87c), 0x3d);
        // EE 0054
        gbc.setState(0x7647, 0x9c37, 0xcac0, 0x7fad, 0xc16d, 0xd9cb, 0x1, 0x0);
        gbc.writeMem(0x7647, { 0xee, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9c37);
        EXPECT(gbc.pc(), 0x7649);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0055
        gbc.setState(0xc572, 0x6e5c, 0x490, 0x3aea, 0x8f77, 0xf8c0, 0x0, 0x0);
        gbc.writeMem(0xc572, { 0xee, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6e5c);
        EXPECT(gbc.pc(), 0xc574);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc572), 0xee);
        EXPECT(gbc.readMem(0xc573), 0x5e);
        // EE 0056
        gbc.setState(0xd1a6, 0x5425, 0x5930, 0x1ad, 0x3d5b, 0x437f, 0x1, 0x0);
        gbc.writeMem(0xd1a6, { 0xee, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5425);
        EXPECT(gbc.pc(), 0xd1a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1a6), 0xee);
        EXPECT(gbc.readMem(0xd1a7), 0xb9);
        // EE 0057
        gbc.setState(0x8b71, 0x2d04, 0xe5a0, 0xcb77, 0xcf3, 0xbcbb, 0x0, 0x1);
        gbc.writeMem(0x8b71, { 0xee, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2d04);
        EXPECT(gbc.pc(), 0x8b73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b71), 0xee);
        EXPECT(gbc.readMem(0x8b72), 0xe2);
        // EE 0058
        gbc.setState(0x414c, 0x8f32, 0x8910, 0xf971, 0x5657, 0x7088, 0x1, 0x0);
        gbc.writeMem(0x414c, { 0xee, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x8f32);
        EXPECT(gbc.pc(), 0x414e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0059
        gbc.setState(0xde0a, 0xa36e, 0xccc0, 0x48ae, 0xefd6, 0x85f, 0x0, 0x1);
        gbc.writeMem(0xde0a, { 0xee, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa36e);
        EXPECT(gbc.pc(), 0xde0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde0a), 0xee);
        EXPECT(gbc.readMem(0xde0b), 0xa0);
        // EE 005A
        gbc.setState(0x20e9, 0x5c3e, 0x130, 0xb5bb, 0x689f, 0xdea4, 0x1, 0x0);
        gbc.writeMem(0x20e9, { 0xee, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x5c3e);
        EXPECT(gbc.pc(), 0x20eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 005B
        gbc.setState(0x890a, 0xda4a, 0xa10, 0x46e2, 0xe1c8, 0xcaf, 0x1, 0x1);
        gbc.writeMem(0x890a, { 0xee, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xda4a);
        EXPECT(gbc.pc(), 0x890c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x890a), 0xee);
        EXPECT(gbc.readMem(0x890b), 0x90);
        // EE 005C
        gbc.setState(0xbf6b, 0x2a66, 0x79f0, 0x7264, 0x56c8, 0x62c3, 0x1, 0x0);
        gbc.writeMem(0xbf6b, { 0xee, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2a66);
        EXPECT(gbc.pc(), 0xbf6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf6b), 0xee);
        EXPECT(gbc.readMem(0xbf6c), 0x2d);
        // EE 005D
        gbc.setState(0xae83, 0x3b0e, 0xbc70, 0x6033, 0x9e3c, 0x533b, 0x0, 0x0);
        gbc.writeMem(0xae83, { 0xee, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3b0e);
        EXPECT(gbc.pc(), 0xae85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae83), 0xee);
        EXPECT(gbc.readMem(0xae84), 0x1e);
        // EE 005E
        gbc.setState(0x8dae, 0xa0d7, 0x8f10, 0x88a2, 0x8703, 0x24e1, 0x1, 0x1);
        gbc.writeMem(0x8dae, { 0xee, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa0d7);
        EXPECT(gbc.pc(), 0x8db0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dae), 0xee);
        EXPECT(gbc.readMem(0x8daf), 0xf6);
        // EE 005F
        gbc.setState(0x94e4, 0xfa76, 0xc7b0, 0xa344, 0xc12e, 0xacd5, 0x1, 0x1);
        gbc.writeMem(0x94e4, { 0xee, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xfa76);
        EXPECT(gbc.pc(), 0x94e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94e4), 0xee);
        EXPECT(gbc.readMem(0x94e5), 0xa6);
        // EE 0060
        gbc.setState(0xdcf9, 0x168e, 0xb220, 0x5d5b, 0x639f, 0x9ce3, 0x0, 0x1);
        gbc.writeMem(0xdcf9, { 0xee, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x168e);
        EXPECT(gbc.pc(), 0xdcfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcf9), 0xee);
        EXPECT(gbc.readMem(0xdcfa), 0xf2);
        // EE 0061
        gbc.setState(0x7895, 0xfc09, 0xa970, 0xbded, 0x5f03, 0xaaa2, 0x1, 0x1);
        gbc.writeMem(0x7895, { 0xee, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xfc09);
        EXPECT(gbc.pc(), 0x7897);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0063
        gbc.setState(0x8811, 0x9b4c, 0x69c0, 0x8f4e, 0xee75, 0x35dc, 0x1, 0x0);
        gbc.writeMem(0x8811, { 0xee, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9b4c);
        EXPECT(gbc.pc(), 0x8813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8811), 0xee);
        EXPECT(gbc.readMem(0x8812), 0x6e);
        // EE 0064
        gbc.setState(0x449d, 0x956a, 0x1a20, 0xc52a, 0x3345, 0xdb17, 0x1, 0x0);
        gbc.writeMem(0x449d, { 0xee, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x956a);
        EXPECT(gbc.pc(), 0x449f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0066
        gbc.setState(0x723e, 0xdf9f, 0x2310, 0x2e61, 0xda89, 0x6138, 0x1, 0x1);
        gbc.writeMem(0x723e, { 0xee, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xdf9f);
        EXPECT(gbc.pc(), 0x7240);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0067
        gbc.setState(0x327e, 0xae5e, 0xd30, 0xf6bd, 0x1709, 0xf9f1, 0x1, 0x0);
        gbc.writeMem(0x327e, { 0xee, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xae5e);
        EXPECT(gbc.pc(), 0x3280);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0068
        gbc.setState(0x7ff4, 0xc931, 0x640, 0x87b2, 0xd2e5, 0x1d68, 0x0, 0x0);
        gbc.writeMem(0x7ff4, { 0xee, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc931);
        EXPECT(gbc.pc(), 0x7ff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0069
        gbc.setState(0x10e1, 0xee86, 0x7170, 0x6858, 0xb414, 0x1298, 0x0, 0x1);
        gbc.writeMem(0x10e1, { 0xee, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xee86);
        EXPECT(gbc.pc(), 0x10e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 006A
        gbc.setState(0x1da6, 0xb2b4, 0x7140, 0xb701, 0x24db, 0xf1f3, 0x1, 0x0);
        gbc.writeMem(0x1da6, { 0xee, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb2b4);
        EXPECT(gbc.pc(), 0x1da8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 006B
        gbc.setState(0x11ca, 0x4069, 0xc0b0, 0xe423, 0x89a8, 0xc604, 0x0, 0x0);
        gbc.writeMem(0x11ca, { 0xee, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x4069);
        EXPECT(gbc.pc(), 0x11cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 006C
        gbc.setState(0x5c55, 0xee9a, 0x90, 0xad7a, 0xb2d4, 0xfa08, 0x1, 0x1);
        gbc.writeMem(0x5c55, { 0xee, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xee9a);
        EXPECT(gbc.pc(), 0x5c57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 006D
        gbc.setState(0xd007, 0x4c96, 0x3720, 0x82cc, 0xffef, 0xb28f, 0x1, 0x1);
        gbc.writeMem(0xd007, { 0xee, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x4c96);
        EXPECT(gbc.pc(), 0xd009);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd007), 0xee);
        EXPECT(gbc.readMem(0xd008), 0xb4);
        // EE 006E
        gbc.setState(0x73bd, 0xb9c7, 0x15f0, 0x1271, 0x1c7, 0x55fd, 0x0, 0x1);
        gbc.writeMem(0x73bd, { 0xee, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb9c7);
        EXPECT(gbc.pc(), 0x73bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 006F
        gbc.setState(0x244a, 0x6212, 0xded0, 0xa9b0, 0xf372, 0x1608, 0x1, 0x0);
        gbc.writeMem(0x244a, { 0xee, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6212);
        EXPECT(gbc.pc(), 0x244c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0070
        gbc.setState(0xee55, 0x5559, 0x3b90, 0x74a4, 0x929d, 0x9701, 0x0, 0x1);
        gbc.writeMem(0xee55, { 0xee, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5559);
        EXPECT(gbc.pc(), 0xee57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee55), 0xee);
        EXPECT(gbc.readMem(0xee56), 0x27);
        // EE 0071
        gbc.setState(0xc48d, 0x7a40, 0xc820, 0xd914, 0x9ddb, 0x9e90, 0x0, 0x1);
        gbc.writeMem(0xc48d, { 0xee, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7a40);
        EXPECT(gbc.pc(), 0xc48f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc48d), 0xee);
        EXPECT(gbc.readMem(0xc48e), 0x7e);
        // EE 0072
        gbc.setState(0xfbe, 0x3e58, 0x7ba0, 0xbc87, 0x2cd7, 0xe222, 0x0, 0x1);
        gbc.writeMem(0xfbe, { 0xee, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3e58);
        EXPECT(gbc.pc(), 0xfc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0074
        gbc.setState(0xbba1, 0xd1df, 0xa0f0, 0x54a2, 0x3ee9, 0xeebb, 0x0, 0x0);
        gbc.writeMem(0xbba1, { 0xee, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd1df);
        EXPECT(gbc.pc(), 0xbba3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbba1), 0xee);
        EXPECT(gbc.readMem(0xbba2), 0x47);
        // EE 0075
        gbc.setState(0x5010, 0x38d6, 0x6520, 0x5ac2, 0x23cc, 0x2e9b, 0x0, 0x0);
        gbc.writeMem(0x5010, { 0xee, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x38d6);
        EXPECT(gbc.pc(), 0x5012);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0076
        gbc.setState(0xed41, 0x1f00, 0x4230, 0xa854, 0x1b5b, 0x72ed, 0x1, 0x0);
        gbc.writeMem(0xed41, { 0xee, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1f00);
        EXPECT(gbc.pc(), 0xed43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed41), 0xee);
        EXPECT(gbc.readMem(0xed42), 0xbf);
        // EE 0078
        gbc.setState(0x939a, 0x87a, 0x1410, 0xf6ec, 0x7bf, 0xfe05, 0x0, 0x1);
        gbc.writeMem(0x939a, { 0xee, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x87a);
        EXPECT(gbc.pc(), 0x939c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x939a), 0xee);
        EXPECT(gbc.readMem(0x939b), 0x76);
        // EE 0079
        gbc.setState(0xeb9f, 0xd192, 0xba30, 0x581d, 0xfe49, 0x1906, 0x1, 0x1);
        gbc.writeMem(0xeb9f, { 0xee, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd192);
        EXPECT(gbc.pc(), 0xeba1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb9f), 0xee);
        EXPECT(gbc.readMem(0xeba0), 0xcd);
        // EE 007A
        gbc.setState(0x1a95, 0xfc0c, 0xc660, 0x9ce3, 0x69b0, 0xb89a, 0x0, 0x0);
        gbc.writeMem(0x1a95, { 0xee, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xfc0c);
        EXPECT(gbc.pc(), 0x1a97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 007B
        gbc.setState(0x9b91, 0x3b45, 0x43b0, 0x997b, 0xb6da, 0x66f2, 0x1, 0x1);
        gbc.writeMem(0x9b91, { 0xee, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3b45);
        EXPECT(gbc.pc(), 0x9b93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b91), 0xee);
        EXPECT(gbc.readMem(0x9b92), 0xf7);
        // EE 007C
        gbc.setState(0x8b1d, 0x64e8, 0x5210, 0x9aac, 0x5f0c, 0xf8c7, 0x1, 0x0);
        gbc.writeMem(0x8b1d, { 0xee, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x64e8);
        EXPECT(gbc.pc(), 0x8b1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b1d), 0xee);
        EXPECT(gbc.readMem(0x8b1e), 0x15);
        // EE 007D
        gbc.setState(0x1b10, 0xa85b, 0xf980, 0xfe35, 0x6ef7, 0x8c7c, 0x1, 0x1);
        gbc.writeMem(0x1b10, { 0xee, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa85b);
        EXPECT(gbc.pc(), 0x1b12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 007E
        gbc.setState(0xdc91, 0x38bd, 0xd990, 0x997c, 0x8756, 0xb66b, 0x1, 0x0);
        gbc.writeMem(0xdc91, { 0xee, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x38bd);
        EXPECT(gbc.pc(), 0xdc93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc91), 0xee);
        EXPECT(gbc.readMem(0xdc92), 0xeb);
        // EE 007F
        gbc.setState(0xbc5a, 0xc12e, 0xccf0, 0x9a87, 0x4d28, 0xb33d, 0x0, 0x0);
        gbc.writeMem(0xbc5a, { 0xee, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc12e);
        EXPECT(gbc.pc(), 0xbc5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc5a), 0xee);
        EXPECT(gbc.readMem(0xbc5b), 0x35);
        // EE 0080
        gbc.setState(0x56bb, 0x546, 0x8c70, 0x5ce3, 0x5d9c, 0x66a3, 0x0, 0x1);
        gbc.writeMem(0x56bb, { 0xee, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x546);
        EXPECT(gbc.pc(), 0x56bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0081
        gbc.setState(0x598d, 0xfe20, 0x4460, 0x98c7, 0xebb9, 0x3cdf, 0x0, 0x0);
        gbc.writeMem(0x598d, { 0xee, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xfe20);
        EXPECT(gbc.pc(), 0x598f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0082
        gbc.setState(0xe58a, 0xdd33, 0xf840, 0x53bf, 0xe8a2, 0xa13, 0x0, 0x1);
        gbc.writeMem(0xe58a, { 0xee, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xdd33);
        EXPECT(gbc.pc(), 0xe58c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe58a), 0xee);
        EXPECT(gbc.readMem(0xe58b), 0x77);
        // EE 0083
        gbc.setState(0x9e8c, 0x8839, 0x8c00, 0xe12c, 0x9d4e, 0xeaf, 0x1, 0x0);
        gbc.writeMem(0x9e8c, { 0xee, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8839);
        EXPECT(gbc.pc(), 0x9e8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e8c), 0xee);
        EXPECT(gbc.readMem(0x9e8d), 0xcf);
        // EE 0084
        gbc.setState(0x517c, 0x2550, 0x6b20, 0x9bb0, 0xc8be, 0x200e, 0x0, 0x1);
        gbc.writeMem(0x517c, { 0xee, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2550);
        EXPECT(gbc.pc(), 0x517e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0085
        gbc.setState(0x13f2, 0xf61f, 0x1c50, 0x45ff, 0x3b56, 0x9529, 0x1, 0x1);
        gbc.writeMem(0x13f2, { 0xee, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf61f);
        EXPECT(gbc.pc(), 0x13f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0086
        gbc.setState(0x94cb, 0x375c, 0xb540, 0x93b6, 0x5598, 0xe4f5, 0x0, 0x1);
        gbc.writeMem(0x94cb, { 0xee, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x375c);
        EXPECT(gbc.pc(), 0x94cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94cb), 0xee);
        EXPECT(gbc.readMem(0x94cc), 0x3d);
        // EE 0087
        gbc.setState(0xee51, 0x4292, 0x1aa0, 0xce42, 0x651a, 0xe9, 0x1, 0x0);
        gbc.writeMem(0xee51, { 0xee, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4292);
        EXPECT(gbc.pc(), 0xee53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee51), 0xee);
        EXPECT(gbc.readMem(0xee52), 0xa);
        // EE 0088
        gbc.setState(0xad71, 0xded3, 0x27c0, 0xb943, 0xc94a, 0xc249, 0x1, 0x1);
        gbc.writeMem(0xad71, { 0xee, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xded3);
        EXPECT(gbc.pc(), 0xad73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad71), 0xee);
        EXPECT(gbc.readMem(0xad72), 0x2);
        // EE 0089
        gbc.setState(0x15c9, 0x3dd8, 0xfe30, 0x5d20, 0x4c1e, 0x43ab, 0x1, 0x0);
        gbc.writeMem(0x15c9, { 0xee, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3dd8);
        EXPECT(gbc.pc(), 0x15cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 008A
        gbc.setState(0x2a41, 0xb99a, 0xab00, 0xf7a8, 0x243b, 0x4533, 0x1, 0x1);
        gbc.writeMem(0x2a41, { 0xee, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xb99a);
        EXPECT(gbc.pc(), 0x2a43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 008B
        gbc.setState(0xbff6, 0x374a, 0xfdc0, 0x1ef4, 0x517a, 0x2282, 0x1, 0x0);
        gbc.writeMem(0xbff6, { 0xee, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x374a);
        EXPECT(gbc.pc(), 0xbff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbff6), 0xee);
        EXPECT(gbc.readMem(0xbff7), 0x5c);
        // EE 008C
        gbc.setState(0x2b59, 0xcef8, 0x2950, 0xd716, 0xc1b8, 0xb152, 0x1, 0x0);
        gbc.writeMem(0x2b59, { 0xee, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xcef8);
        EXPECT(gbc.pc(), 0x2b5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 008D
        gbc.setState(0x8858, 0x64bf, 0x31e0, 0x33be, 0x7190, 0xfb0b, 0x0, 0x1);
        gbc.writeMem(0x8858, { 0xee, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x64bf);
        EXPECT(gbc.pc(), 0x885a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8858), 0xee);
        EXPECT(gbc.readMem(0x8859), 0xba);
        // EE 008E
        gbc.setState(0x9015, 0x53b4, 0x70, 0xed83, 0x4e1, 0x38d1, 0x1, 0x0);
        gbc.writeMem(0x9015, { 0xee, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x53b4);
        EXPECT(gbc.pc(), 0x9017);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9015), 0xee);
        EXPECT(gbc.readMem(0x9016), 0xf0);
        // EE 008F
        gbc.setState(0x7ab, 0xaa9e, 0x7390, 0xc5da, 0xb098, 0xb974, 0x0, 0x1);
        gbc.writeMem(0x7ab, { 0xee, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xaa9e);
        EXPECT(gbc.pc(), 0x7ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0090
        gbc.setState(0x841d, 0xfe22, 0xe9e0, 0x8b22, 0x13c6, 0xb056, 0x0, 0x1);
        gbc.writeMem(0x841d, { 0xee, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xfe22);
        EXPECT(gbc.pc(), 0x841f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x841d), 0xee);
        EXPECT(gbc.readMem(0x841e), 0x76);
        // EE 0091
        gbc.setState(0x2b90, 0x2a5c, 0xb670, 0xf25d, 0x7ad5, 0x8ec5, 0x0, 0x0);
        gbc.writeMem(0x2b90, { 0xee, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2a5c);
        EXPECT(gbc.pc(), 0x2b92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0092
        gbc.setState(0x813e, 0x7365, 0x8f70, 0x5292, 0x1be1, 0x49dc, 0x1, 0x1);
        gbc.writeMem(0x813e, { 0xee, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7365);
        EXPECT(gbc.pc(), 0x8140);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x813e), 0xee);
        EXPECT(gbc.readMem(0x813f), 0x98);
        // EE 0093
        gbc.setState(0x8202, 0x5fc5, 0xe0a0, 0x130f, 0x8d9e, 0x518, 0x0, 0x0);
        gbc.writeMem(0x8202, { 0xee, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5fc5);
        EXPECT(gbc.pc(), 0x8204);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8202), 0xee);
        EXPECT(gbc.readMem(0x8203), 0x16);
        // EE 0094
        gbc.setState(0xc4cd, 0xe0d5, 0xb430, 0xc927, 0x1bae, 0x459a, 0x0, 0x0);
        gbc.writeMem(0xc4cd, { 0xee, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe0d5);
        EXPECT(gbc.pc(), 0xc4cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4cd), 0xee);
        EXPECT(gbc.readMem(0xc4ce), 0xed);
        // EE 0095
        gbc.setState(0x4256, 0xaae0, 0x5670, 0xdb9f, 0x969c, 0xf3be, 0x1, 0x1);
        gbc.writeMem(0x4256, { 0xee, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xaae0);
        EXPECT(gbc.pc(), 0x4258);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0096
        gbc.setState(0x306c, 0xa6d6, 0x690, 0xcbb7, 0x1071, 0xe281, 0x1, 0x1);
        gbc.writeMem(0x306c, { 0xee, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa6d6);
        EXPECT(gbc.pc(), 0x306e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0097
        gbc.setState(0xa3e9, 0xc7b2, 0x7560, 0x9d8a, 0x215b, 0x7a84, 0x0, 0x0);
        gbc.writeMem(0xa3e9, { 0xee, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc7b2);
        EXPECT(gbc.pc(), 0xa3eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3e9), 0xee);
        EXPECT(gbc.readMem(0xa3ea), 0x1d);
        // EE 0098
        gbc.setState(0xcba9, 0xdcb3, 0x8260, 0x7349, 0xeb00, 0x9d52, 0x0, 0x1);
        gbc.writeMem(0xcba9, { 0xee, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xdcb3);
        EXPECT(gbc.pc(), 0xcbab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcba9), 0xee);
        EXPECT(gbc.readMem(0xcbaa), 0x15);
        // EE 0099
        gbc.setState(0x85ef, 0x3469, 0x3090, 0xf8ee, 0x44c2, 0xd20a, 0x1, 0x1);
        gbc.writeMem(0x85ef, { 0xee, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3469);
        EXPECT(gbc.pc(), 0x85f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85ef), 0xee);
        EXPECT(gbc.readMem(0x85f0), 0xbe);
        // EE 009A
        gbc.setState(0xcc60, 0xc892, 0xf400, 0xfb9c, 0x68cc, 0x1933, 0x1, 0x0);
        gbc.writeMem(0xcc60, { 0xee, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc892);
        EXPECT(gbc.pc(), 0xcc62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc60), 0xee);
        EXPECT(gbc.readMem(0xcc61), 0xb5);
        // EE 009B
        gbc.setState(0x1c87, 0x20f0, 0x4510, 0x3059, 0xb32a, 0x74f5, 0x0, 0x1);
        gbc.writeMem(0x1c87, { 0xee, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x20f0);
        EXPECT(gbc.pc(), 0x1c89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 009C
        gbc.setState(0x249a, 0x274b, 0x14a0, 0x1fc7, 0xc84e, 0x791e, 0x1, 0x0);
        gbc.writeMem(0x249a, { 0xee, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x274b);
        EXPECT(gbc.pc(), 0x249c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 009D
        gbc.setState(0x4fe3, 0xa628, 0x4340, 0xe73e, 0x5d5e, 0xb093, 0x1, 0x1);
        gbc.writeMem(0x4fe3, { 0xee, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa628);
        EXPECT(gbc.pc(), 0x4fe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 009E
        gbc.setState(0x102c, 0xacce, 0x8450, 0xd425, 0x71af, 0xf0a1, 0x0, 0x0);
        gbc.writeMem(0x102c, { 0xee, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xacce);
        EXPECT(gbc.pc(), 0x102e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 009F
        gbc.setState(0x5e91, 0x248e, 0xb6c0, 0x35f5, 0x8ee1, 0x5ae8, 0x0, 0x0);
        gbc.writeMem(0x5e91, { 0xee, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x248e);
        EXPECT(gbc.pc(), 0x5e93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00A0
        gbc.setState(0x7369, 0x2087, 0x57d0, 0x4376, 0xa304, 0x8dc, 0x1, 0x0);
        gbc.writeMem(0x7369, { 0xee, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x2087);
        EXPECT(gbc.pc(), 0x736b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00A1
        gbc.setState(0xa778, 0xb328, 0xf4c0, 0x7a91, 0x1107, 0x37be, 0x1, 0x0);
        gbc.writeMem(0xa778, { 0xee, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb328);
        EXPECT(gbc.pc(), 0xa77a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa778), 0xee);
        EXPECT(gbc.readMem(0xa779), 0xd2);
        // EE 00A2
        gbc.setState(0x6946, 0xd26a, 0x80c0, 0x5926, 0x817f, 0x15b2, 0x0, 0x0);
        gbc.writeMem(0x6946, { 0xee, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd26a);
        EXPECT(gbc.pc(), 0x6948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00A3
        gbc.setState(0x4bd, 0xd79, 0x9ee0, 0x113e, 0xda94, 0xe1f7, 0x0, 0x0);
        gbc.writeMem(0x4bd, { 0xee, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd79);
        EXPECT(gbc.pc(), 0x4bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00A4
        gbc.setState(0x9879, 0xbf45, 0x1cc0, 0x2f93, 0xd54, 0xba6b, 0x1, 0x1);
        gbc.writeMem(0x9879, { 0xee, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xbf45);
        EXPECT(gbc.pc(), 0x987b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9879), 0xee);
        EXPECT(gbc.readMem(0x987a), 0x23);
        // EE 00A5
        gbc.setState(0x7938, 0xd2ff, 0x6c30, 0x339c, 0x19fe, 0x3b63, 0x0, 0x0);
        gbc.writeMem(0x7938, { 0xee, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd2ff);
        EXPECT(gbc.pc(), 0x793a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00A6
        gbc.setState(0x8007, 0x3ec8, 0x4db0, 0x64ff, 0xdf8f, 0x6370, 0x1, 0x0);
        gbc.writeMem(0x8007, { 0xee, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3ec8);
        EXPECT(gbc.pc(), 0x8009);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8007), 0xee);
        EXPECT(gbc.readMem(0x8008), 0xd);
        // EE 00A7
        gbc.setState(0xd809, 0x7d8b, 0xeb00, 0x75b9, 0xf07c, 0x5f50, 0x0, 0x1);
        gbc.writeMem(0xd809, { 0xee, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7d8b);
        EXPECT(gbc.pc(), 0xd80b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd809), 0xee);
        EXPECT(gbc.readMem(0xd80a), 0x56);
        // EE 00A9
        gbc.setState(0x6223, 0x1f73, 0x2660, 0xefd4, 0xcb5b, 0xdbc0, 0x1, 0x1);
        gbc.writeMem(0x6223, { 0xee, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1f73);
        EXPECT(gbc.pc(), 0x6225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00AA
        gbc.setState(0xee0e, 0xf07b, 0x2810, 0x2dee, 0xa7a5, 0xffb5, 0x0, 0x1);
        gbc.writeMem(0xee0e, { 0xee, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf07b);
        EXPECT(gbc.pc(), 0xee10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee0e), 0xee);
        EXPECT(gbc.readMem(0xee0f), 0x8e);
        // EE 00AB
        gbc.setState(0x3a70, 0xf7f, 0x2710, 0x113a, 0x8cfa, 0xa289, 0x0, 0x1);
        gbc.writeMem(0x3a70, { 0xee, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf7f);
        EXPECT(gbc.pc(), 0x3a72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00AC
        gbc.setState(0x7430, 0xa6a5, 0x8110, 0x66d9, 0xe04f, 0x8db1, 0x1, 0x1);
        gbc.writeMem(0x7430, { 0xee, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa6a5);
        EXPECT(gbc.pc(), 0x7432);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00AD
        gbc.setState(0x251f, 0x4a5f, 0x94f0, 0x15ac, 0x98bb, 0xe931, 0x1, 0x0);
        gbc.writeMem(0x251f, { 0xee, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4a5f);
        EXPECT(gbc.pc(), 0x2521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00AE
        gbc.setState(0xc978, 0x5543, 0x9de0, 0x6a97, 0x5efa, 0xf250, 0x0, 0x1);
        gbc.writeMem(0xc978, { 0xee, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5543);
        EXPECT(gbc.pc(), 0xc97a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc978), 0xee);
        EXPECT(gbc.readMem(0xc979), 0x18);
        // EE 00AF
        gbc.setState(0xa1fe, 0xc140, 0x63c0, 0x6a67, 0xe4c7, 0x2665, 0x1, 0x1);
        gbc.writeMem(0xa1fe, { 0xee, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc140);
        EXPECT(gbc.pc(), 0xa200);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1fe), 0xee);
        EXPECT(gbc.readMem(0xa1ff), 0x21);
        // EE 00B0
        gbc.setState(0xb8cb, 0x558d, 0x6da0, 0xb0f0, 0x9f4a, 0x8d4e, 0x1, 0x0);
        gbc.writeMem(0xb8cb, { 0xee, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x558d);
        EXPECT(gbc.pc(), 0xb8cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8cb), 0xee);
        EXPECT(gbc.readMem(0xb8cc), 0x63);
        // EE 00B1
        gbc.setState(0x9e49, 0xf168, 0x86e0, 0x3261, 0x44e3, 0xa761, 0x1, 0x0);
        gbc.writeMem(0x9e49, { 0xee, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf168);
        EXPECT(gbc.pc(), 0x9e4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e49), 0xee);
        EXPECT(gbc.readMem(0x9e4a), 0x94);
        // EE 00B2
        gbc.setState(0x7fe2, 0x572f, 0xeaf0, 0xe926, 0x88e6, 0xe7b0, 0x0, 0x1);
        gbc.writeMem(0x7fe2, { 0xee, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x572f);
        EXPECT(gbc.pc(), 0x7fe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00B3
        gbc.setState(0xa9c, 0x71bf, 0xe8a0, 0xbb5c, 0x8545, 0x985d, 0x1, 0x0);
        gbc.writeMem(0xa9c, { 0xee, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x71bf);
        EXPECT(gbc.pc(), 0xa9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00B4
        gbc.setState(0xa2d3, 0x33e, 0x98e0, 0x2655, 0x8844, 0xc295, 0x0, 0x0);
        gbc.writeMem(0xa2d3, { 0xee, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x33e);
        EXPECT(gbc.pc(), 0xa2d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2d3), 0xee);
        EXPECT(gbc.readMem(0xa2d4), 0xd4);
        // EE 00B5
        gbc.setState(0xc721, 0xff32, 0xb0a0, 0x8216, 0x9e3d, 0x8fa6, 0x0, 0x1);
        gbc.writeMem(0xc721, { 0xee, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xff32);
        EXPECT(gbc.pc(), 0xc723);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc721), 0xee);
        EXPECT(gbc.readMem(0xc722), 0xf2);
        // EE 00B6
        gbc.setState(0xb887, 0x5239, 0xf880, 0xd086, 0xca38, 0xe986, 0x1, 0x1);
        gbc.writeMem(0xb887, { 0xee, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5239);
        EXPECT(gbc.pc(), 0xb889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb887), 0xee);
        EXPECT(gbc.readMem(0xb888), 0x60);
        // EE 00B7
        gbc.setState(0xe9c8, 0x8da, 0x740, 0xcbba, 0x4d16, 0x442c, 0x0, 0x0);
        gbc.writeMem(0xe9c8, { 0xee, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x8da);
        EXPECT(gbc.pc(), 0xe9ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9c8), 0xee);
        EXPECT(gbc.readMem(0xe9c9), 0x37);
        // EE 00B8
        gbc.setState(0xd541, 0x479b, 0xe060, 0xfce8, 0x70de, 0x7751, 0x0, 0x0);
        gbc.writeMem(0xd541, { 0xee, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x479b);
        EXPECT(gbc.pc(), 0xd543);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd541), 0xee);
        EXPECT(gbc.readMem(0xd542), 0x63);
        // EE 00B9
        gbc.setState(0x2862, 0xcd70, 0xfab0, 0x71cd, 0x5269, 0xccff, 0x1, 0x1);
        gbc.writeMem(0x2862, { 0xee, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xcd70);
        EXPECT(gbc.pc(), 0x2864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00BA
        gbc.setState(0x71ce, 0x67b9, 0x7a90, 0x8e5c, 0xf28a, 0x3e28, 0x0, 0x0);
        gbc.writeMem(0x71ce, { 0xee, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x67b9);
        EXPECT(gbc.pc(), 0x71d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00BB
        gbc.setState(0xed51, 0xb228, 0x10f0, 0xddde, 0xc2c3, 0xcfe9, 0x0, 0x1);
        gbc.writeMem(0xed51, { 0xee, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb228);
        EXPECT(gbc.pc(), 0xed53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed51), 0xee);
        EXPECT(gbc.readMem(0xed52), 0xee);
        // EE 00BC
        gbc.setState(0x57a, 0xd6b5, 0x8f70, 0xb774, 0xdc4, 0x3bb0, 0x1, 0x1);
        gbc.writeMem(0x57a, { 0xee, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd6b5);
        EXPECT(gbc.pc(), 0x57c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00BD
        gbc.setState(0xb8b8, 0xdfa1, 0xad30, 0x296, 0x1fd4, 0x549d, 0x0, 0x1);
        gbc.writeMem(0xb8b8, { 0xee, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xdfa1);
        EXPECT(gbc.pc(), 0xb8ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8b8), 0xee);
        EXPECT(gbc.readMem(0xb8b9), 0xdb);
        // EE 00BE
        gbc.setState(0x63a9, 0x3f59, 0x5fb0, 0xe33d, 0x8a4f, 0x8c7f, 0x0, 0x1);
        gbc.writeMem(0x63a9, { 0xee, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x3f59);
        EXPECT(gbc.pc(), 0x63ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00BF
        gbc.setState(0xbf0a, 0xba17, 0xf170, 0xd409, 0x7651, 0x4aac, 0x0, 0x0);
        gbc.writeMem(0xbf0a, { 0xee, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xba17);
        EXPECT(gbc.pc(), 0xbf0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf0a), 0xee);
        EXPECT(gbc.readMem(0xbf0b), 0x82);
        // EE 00C0
        gbc.setState(0xd26e, 0x60e, 0xe60, 0xb7aa, 0x36c7, 0xd143, 0x1, 0x0);
        gbc.writeMem(0xd26e, { 0xee, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x60e);
        EXPECT(gbc.pc(), 0xd270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd26e), 0xee);
        EXPECT(gbc.readMem(0xd26f), 0xed);
        // EE 00C1
        gbc.setState(0x702d, 0x3898, 0x46a0, 0x69a, 0x68ab, 0xd907, 0x1, 0x0);
        gbc.writeMem(0x702d, { 0xee, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3898);
        EXPECT(gbc.pc(), 0x702f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00C2
        gbc.setState(0x2741, 0x2153, 0x1220, 0xe89, 0xc24f, 0x352c, 0x0, 0x1);
        gbc.writeMem(0x2741, { 0xee, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2153);
        EXPECT(gbc.pc(), 0x2743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00C3
        gbc.setState(0x192f, 0x3f9e, 0xe810, 0x26bc, 0x58bc, 0x9f74, 0x0, 0x0);
        gbc.writeMem(0x192f, { 0xee, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3f9e);
        EXPECT(gbc.pc(), 0x1931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00C4
        gbc.setState(0x9f5a, 0xa2e4, 0x1590, 0xa85a, 0x834d, 0xda2e, 0x1, 0x1);
        gbc.writeMem(0x9f5a, { 0xee, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa2e4);
        EXPECT(gbc.pc(), 0x9f5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f5a), 0xee);
        EXPECT(gbc.readMem(0x9f5b), 0x34);
        // EE 00C5
        gbc.setState(0x7479, 0x76c5, 0xd100, 0xfd07, 0x2b7f, 0x28a5, 0x0, 0x0);
        gbc.writeMem(0x7479, { 0xee, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x76c5);
        EXPECT(gbc.pc(), 0x747b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00C6
        gbc.setState(0x671c, 0xe505, 0xe6d0, 0x8959, 0x1b4e, 0xdcb6, 0x1, 0x1);
        gbc.writeMem(0x671c, { 0xee, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe505);
        EXPECT(gbc.pc(), 0x671e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00C7
        gbc.setState(0x2ec6, 0xcfc9, 0x4620, 0xde60, 0x3345, 0x867f, 0x0, 0x0);
        gbc.writeMem(0x2ec6, { 0xee, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xcfc9);
        EXPECT(gbc.pc(), 0x2ec8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00C8
        gbc.setState(0x34c1, 0x4992, 0x5b30, 0x7e05, 0xc569, 0x198a, 0x0, 0x1);
        gbc.writeMem(0x34c1, { 0xee, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4992);
        EXPECT(gbc.pc(), 0x34c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00CA
        gbc.setState(0xac81, 0xea96, 0xf890, 0xfd42, 0x8b21, 0x5fd0, 0x1, 0x0);
        gbc.writeMem(0xac81, { 0xee, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xea96);
        EXPECT(gbc.pc(), 0xac83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac81), 0xee);
        EXPECT(gbc.readMem(0xac82), 0x6a);
        // EE 00CB
        gbc.setState(0x4aad, 0x70de, 0x8440, 0xaeeb, 0xb34f, 0xc2d1, 0x1, 0x0);
        gbc.writeMem(0x4aad, { 0xee, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x70de);
        EXPECT(gbc.pc(), 0x4aaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00CC
        gbc.setState(0x6121, 0x66f, 0x5100, 0x2cf, 0x24c1, 0xb954, 0x0, 0x0);
        gbc.writeMem(0x6121, { 0xee, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x66f);
        EXPECT(gbc.pc(), 0x6123);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00CD
        gbc.setState(0x3784, 0x42e2, 0xd0, 0x31f4, 0xc383, 0x4109, 0x0, 0x1);
        gbc.writeMem(0x3784, { 0xee, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x42e2);
        EXPECT(gbc.pc(), 0x3786);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00CE
        gbc.setState(0x328b, 0x6704, 0xb2a0, 0x92b1, 0x7bba, 0xd53b, 0x0, 0x1);
        gbc.writeMem(0x328b, { 0xee, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6704);
        EXPECT(gbc.pc(), 0x328d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00CF
        gbc.setState(0xecd2, 0xb125, 0xbce0, 0xdf08, 0x33c6, 0x8af6, 0x0, 0x1);
        gbc.writeMem(0xecd2, { 0xee, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb125);
        EXPECT(gbc.pc(), 0xecd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecd2), 0xee);
        EXPECT(gbc.readMem(0xecd3), 0xca);
        // EE 00D0
        gbc.setState(0x8d8e, 0xe950, 0x19e0, 0x34ac, 0x7ad6, 0x176d, 0x0, 0x0);
        gbc.writeMem(0x8d8e, { 0xee, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe950);
        EXPECT(gbc.pc(), 0x8d90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d8e), 0xee);
        EXPECT(gbc.readMem(0x8d8f), 0x7b);
        // EE 00D1
        gbc.setState(0x27b6, 0xda50, 0x2580, 0xfcc7, 0x6c88, 0xdaab, 0x0, 0x1);
        gbc.writeMem(0x27b6, { 0xee, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xda50);
        EXPECT(gbc.pc(), 0x27b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00D2
        gbc.setState(0x95b, 0x645e, 0x3ec0, 0x123d, 0xdfe, 0x493e, 0x1, 0x0);
        gbc.writeMem(0x95b, { 0xee, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x645e);
        EXPECT(gbc.pc(), 0x95d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00D3
        gbc.setState(0xd723, 0x22b1, 0x2190, 0x45e, 0x8b1b, 0xee6, 0x1, 0x0);
        gbc.writeMem(0xd723, { 0xee, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x22b1);
        EXPECT(gbc.pc(), 0xd725);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd723), 0xee);
        EXPECT(gbc.readMem(0xd724), 0xd4);
        // EE 00D4
        gbc.setState(0x5b5a, 0x7981, 0xec50, 0x7c87, 0x8927, 0xbb14, 0x1, 0x0);
        gbc.writeMem(0x5b5a, { 0xee, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7981);
        EXPECT(gbc.pc(), 0x5b5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00D6
        gbc.setState(0xeac7, 0xf139, 0x38b0, 0x3a05, 0x26ae, 0xc5a2, 0x0, 0x1);
        gbc.writeMem(0xeac7, { 0xee, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf139);
        EXPECT(gbc.pc(), 0xeac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeac7), 0xee);
        EXPECT(gbc.readMem(0xeac8), 0xef);
        // EE 00D7
        gbc.setState(0x8dfe, 0x46b9, 0xff0, 0x6475, 0x736d, 0x8aa2, 0x1, 0x0);
        gbc.writeMem(0x8dfe, { 0xee, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x46b9);
        EXPECT(gbc.pc(), 0x8e00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dfe), 0xee);
        EXPECT(gbc.readMem(0x8dff), 0xf8);
        // EE 00D8
        gbc.setState(0x4c7d, 0x572f, 0xdf70, 0x2395, 0x4939, 0x5813, 0x1, 0x1);
        gbc.writeMem(0x4c7d, { 0xee, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x572f);
        EXPECT(gbc.pc(), 0x4c7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00D9
        gbc.setState(0x4491, 0x9bf2, 0xd5f0, 0xa98b, 0x24e1, 0xd69e, 0x1, 0x1);
        gbc.writeMem(0x4491, { 0xee, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9bf2);
        EXPECT(gbc.pc(), 0x4493);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00DA
        gbc.setState(0x8c95, 0x78e0, 0x37d0, 0x67f9, 0xb5e9, 0xa58d, 0x1, 0x1);
        gbc.writeMem(0x8c95, { 0xee, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x78e0);
        EXPECT(gbc.pc(), 0x8c97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c95), 0xee);
        EXPECT(gbc.readMem(0x8c96), 0x21);
        // EE 00DB
        gbc.setState(0x255b, 0x841a, 0xcbb0, 0xf072, 0x577b, 0x97e1, 0x1, 0x0);
        gbc.writeMem(0x255b, { 0xee, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x841a);
        EXPECT(gbc.pc(), 0x255d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00DC
        gbc.setState(0x3b20, 0x780e, 0x1690, 0x970f, 0x64fe, 0x7fa0, 0x1, 0x1);
        gbc.writeMem(0x3b20, { 0xee, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x780e);
        EXPECT(gbc.pc(), 0x3b22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00DD
        gbc.setState(0x9da7, 0xd53c, 0x31a0, 0x85d1, 0xd5cb, 0xb3b3, 0x0, 0x0);
        gbc.writeMem(0x9da7, { 0xee, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd53c);
        EXPECT(gbc.pc(), 0x9da9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9da7), 0xee);
        EXPECT(gbc.readMem(0x9da8), 0x7d);
        // EE 00DE
        gbc.setState(0xe06d, 0x661c, 0x84b0, 0x3677, 0xf68f, 0x4d03, 0x1, 0x0);
        gbc.writeMem(0xe06d, { 0xee, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x661c);
        EXPECT(gbc.pc(), 0xe06f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe06d), 0xee);
        EXPECT(gbc.readMem(0xe06e), 0xfc);
        // EE 00DF
        gbc.setState(0x8517, 0x3ef6, 0xed20, 0x8308, 0x101e, 0x347c, 0x1, 0x0);
        gbc.writeMem(0x8517, { 0xee, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x3ef6);
        EXPECT(gbc.pc(), 0x8519);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8517), 0xee);
        EXPECT(gbc.readMem(0x8518), 0xb9);
        // EE 00E0
        gbc.setState(0xe32c, 0x5b92, 0xe2d0, 0x88, 0xd380, 0xe063, 0x1, 0x1);
        gbc.writeMem(0xe32c, { 0xee, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5b92);
        EXPECT(gbc.pc(), 0xe32e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe32c), 0xee);
        EXPECT(gbc.readMem(0xe32d), 0x4);
        // EE 00E1
        gbc.setState(0xaecb, 0x1c26, 0xd940, 0xb07a, 0xc8b6, 0x4cfb, 0x1, 0x1);
        gbc.writeMem(0xaecb, { 0xee, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1c26);
        EXPECT(gbc.pc(), 0xaecd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaecb), 0xee);
        EXPECT(gbc.readMem(0xaecc), 0xfa);
        // EE 00E2
        gbc.setState(0x892b, 0xc176, 0xa020, 0xe79c, 0x1a89, 0x42b, 0x1, 0x0);
        gbc.writeMem(0x892b, { 0xee, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xc176);
        EXPECT(gbc.pc(), 0x892d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x892b), 0xee);
        EXPECT(gbc.readMem(0x892c), 0xf4);
        // EE 00E3
        gbc.setState(0x3018, 0x591a, 0x3390, 0x1826, 0x649f, 0x6ce, 0x1, 0x0);
        gbc.writeMem(0x3018, { 0xee, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x591a);
        EXPECT(gbc.pc(), 0x301a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00E4
        gbc.setState(0x63f1, 0x2b3b, 0x7cf0, 0xd177, 0xbb50, 0xbe60, 0x1, 0x0);
        gbc.writeMem(0x63f1, { 0xee, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2b3b);
        EXPECT(gbc.pc(), 0x63f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00E5
        gbc.setState(0xec04, 0x1af9, 0x9b60, 0x4158, 0x4333, 0x4376, 0x1, 0x1);
        gbc.writeMem(0xec04, { 0xee, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1af9);
        EXPECT(gbc.pc(), 0xec06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec04), 0xee);
        EXPECT(gbc.readMem(0xec05), 0x8a);
        // EE 00E6
        gbc.setState(0x98c7, 0x8558, 0x9990, 0xf78f, 0xab6f, 0xb2c6, 0x0, 0x0);
        gbc.writeMem(0x98c7, { 0xee, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8558);
        EXPECT(gbc.pc(), 0x98c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c7), 0xee);
        EXPECT(gbc.readMem(0x98c8), 0xf2);
        // EE 00E7
        gbc.setState(0xc61d, 0xe7af, 0x2870, 0x2f31, 0x427d, 0xc5f5, 0x0, 0x0);
        gbc.writeMem(0xc61d, { 0xee, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe7af);
        EXPECT(gbc.pc(), 0xc61f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc61d), 0xee);
        EXPECT(gbc.readMem(0xc61e), 0xd4);
        // EE 00E8
        gbc.setState(0xa5be, 0xe705, 0xa0e0, 0xf45, 0x1625, 0x8682, 0x1, 0x0);
        gbc.writeMem(0xa5be, { 0xee, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe705);
        EXPECT(gbc.pc(), 0xa5c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5be), 0xee);
        EXPECT(gbc.readMem(0xa5bf), 0x34);
        // EE 00E9
        gbc.setState(0x9f38, 0x6c79, 0xf110, 0xde97, 0x704, 0x6af, 0x1, 0x1);
        gbc.writeMem(0x9f38, { 0xee, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6c79);
        EXPECT(gbc.pc(), 0x9f3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f38), 0xee);
        EXPECT(gbc.readMem(0x9f39), 0x6e);
        // EE 00EB
        gbc.setState(0xc33d, 0x4831, 0x1360, 0xccf1, 0x9ef7, 0x948d, 0x1, 0x0);
        gbc.writeMem(0xc33d, { 0xee, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x4831);
        EXPECT(gbc.pc(), 0xc33f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc33d), 0xee);
        EXPECT(gbc.readMem(0xc33e), 0x72);
        // EE 00EC
        gbc.setState(0x2b6b, 0xceb3, 0xfb50, 0xdbd6, 0xb2f, 0x2f31, 0x1, 0x1);
        gbc.writeMem(0x2b6b, { 0xee, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xceb3);
        EXPECT(gbc.pc(), 0x2b6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00ED
        gbc.setState(0xe3b3, 0x6a30, 0xea30, 0xfab1, 0x68fc, 0x9e08, 0x1, 0x1);
        gbc.writeMem(0xe3b3, { 0xee, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6a30);
        EXPECT(gbc.pc(), 0xe3b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3b3), 0xee);
        EXPECT(gbc.readMem(0xe3b4), 0xb2);
        // EE 00EF
        gbc.setState(0x4ec0, 0x7643, 0x91d0, 0x174e, 0xe25a, 0x5c5c, 0x0, 0x0);
        gbc.writeMem(0x4ec0, { 0xee, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7643);
        EXPECT(gbc.pc(), 0x4ec2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00F0
        gbc.setState(0x66e5, 0x6bf0, 0x4b70, 0xc40a, 0x18a4, 0x2c4d, 0x0, 0x1);
        gbc.writeMem(0x66e5, { 0xee, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6bf0);
        EXPECT(gbc.pc(), 0x66e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00F1
        gbc.setState(0x6c8f, 0xaf24, 0xc050, 0xcf66, 0x4ac1, 0x69e7, 0x0, 0x0);
        gbc.writeMem(0x6c8f, { 0xee, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xaf24);
        EXPECT(gbc.pc(), 0x6c91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00F2
        gbc.setState(0xe41, 0xaa2a, 0xcc20, 0x9259, 0xb4eb, 0x481b, 0x1, 0x1);
        gbc.writeMem(0xe41, { 0xee, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xaa2a);
        EXPECT(gbc.pc(), 0xe43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00F3
        gbc.setState(0xce1d, 0x3fd2, 0x9bc0, 0x190d, 0x237d, 0x4ca3, 0x1, 0x0);
        gbc.writeMem(0xce1d, { 0xee, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3fd2);
        EXPECT(gbc.pc(), 0xce1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce1d), 0xee);
        EXPECT(gbc.readMem(0xce1e), 0x69);
        // EE 00F4
        gbc.setState(0x6c3e, 0xeb01, 0x9de0, 0x15e7, 0xd61f, 0xfb1a, 0x1, 0x1);
        gbc.writeMem(0x6c3e, { 0xee, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xeb01);
        EXPECT(gbc.pc(), 0x6c40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00F5
        gbc.setState(0x43ad, 0xd8e2, 0x1c80, 0xf9ea, 0xaa61, 0x8562, 0x0, 0x0);
        gbc.writeMem(0x43ad, { 0xee, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd8e2);
        EXPECT(gbc.pc(), 0x43af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00F6
        gbc.setState(0x4e2c, 0x43f9, 0x7140, 0x1fa8, 0xd604, 0xa8ae, 0x1, 0x1);
        gbc.writeMem(0x4e2c, { 0xee, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x43f9);
        EXPECT(gbc.pc(), 0x4e2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00F7
        gbc.setState(0x4a02, 0x6b50, 0x77e0, 0x124a, 0x90f1, 0x1452, 0x0, 0x0);
        gbc.writeMem(0x4a02, { 0xee, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6b50);
        EXPECT(gbc.pc(), 0x4a04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00F8
        gbc.setState(0xb560, 0x22b, 0xbe60, 0xba60, 0xa9a9, 0x1f01, 0x1, 0x1);
        gbc.writeMem(0xb560, { 0xee, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x22b);
        EXPECT(gbc.pc(), 0xb562);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb560), 0xee);
        EXPECT(gbc.readMem(0xb561), 0xb9);
        // EE 00F9
        gbc.setState(0x60e9, 0x85a2, 0x3bb0, 0x6dbc, 0xaf9a, 0xae68, 0x0, 0x0);
        gbc.writeMem(0x60e9, { 0xee, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x85a2);
        EXPECT(gbc.pc(), 0x60eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00FA
        gbc.setState(0x3503, 0xa9bc, 0x4040, 0xde5c, 0xb22a, 0xbfda, 0x1, 0x1);
        gbc.writeMem(0x3503, { 0xee, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xa9bc);
        EXPECT(gbc.pc(), 0x3505);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 00FB
        gbc.setState(0x8c01, 0xfc28, 0x7280, 0x136a, 0xd174, 0x5db9, 0x1, 0x0);
        gbc.writeMem(0x8c01, { 0xee, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xfc28);
        EXPECT(gbc.pc(), 0x8c03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c01), 0xee);
        EXPECT(gbc.readMem(0x8c02), 0x12);
        // EE 00FC
        gbc.setState(0xac9a, 0x2da7, 0x14f0, 0x4faf, 0x5b98, 0x1360, 0x1, 0x0);
        gbc.writeMem(0xac9a, { 0xee, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2da7);
        EXPECT(gbc.pc(), 0xac9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac9a), 0xee);
        EXPECT(gbc.readMem(0xac9b), 0x29);
        // EE 00FD
        gbc.setState(0xcd11, 0x9e6f, 0xd660, 0xc215, 0xf4cf, 0x36ed, 0x1, 0x0);
        gbc.writeMem(0xcd11, { 0xee, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9e6f);
        EXPECT(gbc.pc(), 0xcd13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd11), 0xee);
        EXPECT(gbc.readMem(0xcd12), 0x0);
        // EE 00FE
        gbc.setState(0x9b79, 0xd2c9, 0x57a0, 0x99e, 0xf6d3, 0x626a, 0x1, 0x0);
        gbc.writeMem(0x9b79, { 0xee, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd2c9);
        EXPECT(gbc.pc(), 0x9b7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b79), 0xee);
        EXPECT(gbc.readMem(0x9b7a), 0xa0);
        // EE 00FF
        gbc.setState(0x5dce, 0x7705, 0xafb0, 0x5db3, 0x6ac1, 0x352f, 0x1, 0x0);
        gbc.writeMem(0x5dce, { 0xee, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7705);
        EXPECT(gbc.pc(), 0x5dd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0100
        gbc.setState(0x4fe2, 0x3db5, 0x72f0, 0xea5c, 0x5a67, 0x69be, 0x0, 0x1);
        gbc.writeMem(0x4fe2, { 0xee, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x3db5);
        EXPECT(gbc.pc(), 0x4fe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0101
        gbc.setState(0x73f8, 0xf08b, 0xefc0, 0xf695, 0x5504, 0x4630, 0x1, 0x1);
        gbc.writeMem(0x73f8, { 0xee, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf08b);
        EXPECT(gbc.pc(), 0x73fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0102
        gbc.setState(0xda70, 0xa35b, 0x40f0, 0x6572, 0xf91c, 0xd3d, 0x1, 0x1);
        gbc.writeMem(0xda70, { 0xee, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xa35b);
        EXPECT(gbc.pc(), 0xda72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda70), 0xee);
        EXPECT(gbc.readMem(0xda71), 0xe1);
        // EE 0103
        gbc.setState(0x2068, 0x9c36, 0x9cb0, 0xf920, 0x1ab8, 0xf925, 0x0, 0x1);
        gbc.writeMem(0x2068, { 0xee, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9c36);
        EXPECT(gbc.pc(), 0x206a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0104
        gbc.setState(0x6e26, 0x6bca, 0x8d70, 0xc717, 0xf450, 0xde34, 0x0, 0x1);
        gbc.writeMem(0x6e26, { 0xee, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6bca);
        EXPECT(gbc.pc(), 0x6e28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0105
        gbc.setState(0xc968, 0xc947, 0x9780, 0x5332, 0x1ebf, 0x1c28, 0x0, 0x1);
        gbc.writeMem(0xc968, { 0xee, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc947);
        EXPECT(gbc.pc(), 0xc96a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc968), 0xee);
        EXPECT(gbc.readMem(0xc969), 0x20);
        // EE 0106
        gbc.setState(0x5dce, 0x210b, 0xf4b0, 0xa85b, 0xd63d, 0x542d, 0x0, 0x0);
        gbc.writeMem(0x5dce, { 0xee, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x210b);
        EXPECT(gbc.pc(), 0x5dd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0107
        gbc.setState(0x7ef6, 0xa4b1, 0x7f50, 0xa519, 0x7e1a, 0xc363, 0x1, 0x0);
        gbc.writeMem(0x7ef6, { 0xee, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xa4b1);
        EXPECT(gbc.pc(), 0x7ef8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0108
        gbc.setState(0xb649, 0x1487, 0x9da0, 0xc342, 0xc440, 0x706a, 0x1, 0x1);
        gbc.writeMem(0xb649, { 0xee, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1487);
        EXPECT(gbc.pc(), 0xb64b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb649), 0xee);
        EXPECT(gbc.readMem(0xb64a), 0x23);
        // EE 0109
        gbc.setState(0x969b, 0xc58a, 0xe9d0, 0xf7aa, 0x95af, 0xf169, 0x0, 0x0);
        gbc.writeMem(0x969b, { 0xee, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xc58a);
        EXPECT(gbc.pc(), 0x969d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x969b), 0xee);
        EXPECT(gbc.readMem(0x969c), 0x60);
        // EE 010A
        gbc.setState(0x2624, 0x1f59, 0xb0c0, 0x5b63, 0x2701, 0xa2c6, 0x1, 0x1);
        gbc.writeMem(0x2624, { 0xee, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1f59);
        EXPECT(gbc.pc(), 0x2626);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 010B
        gbc.setState(0x8163, 0xe50f, 0x38a0, 0xa4b4, 0x1150, 0x7638, 0x1, 0x1);
        gbc.writeMem(0x8163, { 0xee, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe50f);
        EXPECT(gbc.pc(), 0x8165);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8163), 0xee);
        EXPECT(gbc.readMem(0x8164), 0x42);
        // EE 010D
        gbc.setState(0x6679, 0x63f1, 0x1260, 0x7fae, 0xb272, 0xdf4, 0x1, 0x1);
        gbc.writeMem(0x6679, { 0xee, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x63f1);
        EXPECT(gbc.pc(), 0x667b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 010E
        gbc.setState(0x4a72, 0x51f6, 0x5e90, 0x935a, 0xcc3b, 0x25a, 0x1, 0x0);
        gbc.writeMem(0x4a72, { 0xee, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x51f6);
        EXPECT(gbc.pc(), 0x4a74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 010F
        gbc.setState(0x3136, 0x120a, 0xab80, 0x1d7e, 0x1936, 0x720, 0x1, 0x0);
        gbc.writeMem(0x3136, { 0xee, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x120a);
        EXPECT(gbc.pc(), 0x3138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0110
        gbc.setState(0x657, 0x29b8, 0x1fb0, 0x6972, 0x1cb2, 0xc2b0, 0x1, 0x0);
        gbc.writeMem(0x657, { 0xee, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x29b8);
        EXPECT(gbc.pc(), 0x659);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0111
        gbc.setState(0x3b30, 0xf42a, 0x8c50, 0xb74, 0x1ae3, 0x8ae, 0x1, 0x1);
        gbc.writeMem(0x3b30, { 0xee, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf42a);
        EXPECT(gbc.pc(), 0x3b32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0112
        gbc.setState(0x4ac4, 0x3a31, 0x8790, 0x5437, 0x6c71, 0x4a1d, 0x1, 0x0);
        gbc.writeMem(0x4ac4, { 0xee, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3a31);
        EXPECT(gbc.pc(), 0x4ac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0113
        gbc.setState(0x451e, 0xe906, 0xffb0, 0x6600, 0xf160, 0xd765, 0x1, 0x1);
        gbc.writeMem(0x451e, { 0xee, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe906);
        EXPECT(gbc.pc(), 0x4520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0114
        gbc.setState(0xa988, 0x99a7, 0xe520, 0x4646, 0x477a, 0x7fad, 0x0, 0x1);
        gbc.writeMem(0xa988, { 0xee, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x99a7);
        EXPECT(gbc.pc(), 0xa98a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa988), 0xee);
        EXPECT(gbc.readMem(0xa989), 0x90);
        // EE 0115
        gbc.setState(0xc083, 0xadb4, 0xe230, 0xdf5c, 0x6ca0, 0x65b6, 0x0, 0x1);
        gbc.writeMem(0xc083, { 0xee, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xadb4);
        EXPECT(gbc.pc(), 0xc085);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc083), 0xee);
        EXPECT(gbc.readMem(0xc084), 0x99);
        // EE 0116
        gbc.setState(0xe075, 0xefa8, 0xb930, 0xd884, 0xa000, 0x3d7, 0x0, 0x1);
        gbc.writeMem(0xe075, { 0xee, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xefa8);
        EXPECT(gbc.pc(), 0xe077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe075), 0xee);
        EXPECT(gbc.readMem(0xe076), 0x11);
        // EE 0117
        gbc.setState(0x3bb6, 0x3a65, 0xafc0, 0x69ea, 0x4e29, 0xa965, 0x1, 0x1);
        gbc.writeMem(0x3bb6, { 0xee, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x3a65);
        EXPECT(gbc.pc(), 0x3bb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0118
        gbc.setState(0x19e4, 0x1bfa, 0x3fd0, 0xaf10, 0x57e6, 0xbaed, 0x1, 0x0);
        gbc.writeMem(0x19e4, { 0xee, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1bfa);
        EXPECT(gbc.pc(), 0x19e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0119
        gbc.setState(0x6a45, 0x5c41, 0xc660, 0xed6, 0x7b04, 0xde96, 0x1, 0x0);
        gbc.writeMem(0x6a45, { 0xee, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5c41);
        EXPECT(gbc.pc(), 0x6a47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 011A
        gbc.setState(0x332, 0x65d2, 0x60d0, 0xbd5f, 0xd112, 0x955, 0x0, 0x1);
        gbc.writeMem(0x332, { 0xee, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x65d2);
        EXPECT(gbc.pc(), 0x334);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 011B
        gbc.setState(0x5725, 0xc257, 0x9840, 0x3eb0, 0xfad4, 0xee20, 0x0, 0x0);
        gbc.writeMem(0x5725, { 0xee, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc257);
        EXPECT(gbc.pc(), 0x5727);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 011C
        gbc.setState(0x5647, 0xbfc, 0xf470, 0x98f9, 0x1616, 0xcd29, 0x0, 0x0);
        gbc.writeMem(0x5647, { 0xee, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xbfc);
        EXPECT(gbc.pc(), 0x5649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 011D
        gbc.setState(0xe94e, 0x1d2, 0x3d40, 0x740, 0x8c8a, 0xb415, 0x0, 0x0);
        gbc.writeMem(0xe94e, { 0xee, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1d2);
        EXPECT(gbc.pc(), 0xe950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe94e), 0xee);
        EXPECT(gbc.readMem(0xe94f), 0x54);
        // EE 011E
        gbc.setState(0x59a6, 0x4441, 0x69a0, 0x8397, 0x37dc, 0x1b42, 0x1, 0x1);
        gbc.writeMem(0x59a6, { 0xee, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4441);
        EXPECT(gbc.pc(), 0x59a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 011F
        gbc.setState(0x6694, 0xb960, 0x6920, 0xbba0, 0xd095, 0x3141, 0x0, 0x0);
        gbc.writeMem(0x6694, { 0xee, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xb960);
        EXPECT(gbc.pc(), 0x6696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0120
        gbc.setState(0xd9c5, 0x7042, 0x2060, 0x1ad7, 0x1f17, 0x2edb, 0x1, 0x0);
        gbc.writeMem(0xd9c5, { 0xee, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7042);
        EXPECT(gbc.pc(), 0xd9c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9c5), 0xee);
        EXPECT(gbc.readMem(0xd9c6), 0xa1);
        // EE 0121
        gbc.setState(0x7619, 0xb248, 0x2ed0, 0x6cb1, 0xdbd4, 0xcf47, 0x0, 0x1);
        gbc.writeMem(0x7619, { 0xee, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb248);
        EXPECT(gbc.pc(), 0x761b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0123
        gbc.setState(0x8a87, 0x33bc, 0x3a00, 0xbfd8, 0x5fad, 0xabb4, 0x1, 0x0);
        gbc.writeMem(0x8a87, { 0xee, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x33bc);
        EXPECT(gbc.pc(), 0x8a89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a87), 0xee);
        EXPECT(gbc.readMem(0x8a88), 0x0);
        // EE 0124
        gbc.setState(0x3bd5, 0xb89e, 0x5790, 0x112d, 0x70c4, 0xb661, 0x1, 0x1);
        gbc.writeMem(0x3bd5, { 0xee, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb89e);
        EXPECT(gbc.pc(), 0x3bd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0125
        gbc.setState(0x2a2f, 0xd2f6, 0x7920, 0x366a, 0x93eb, 0xf2ac, 0x1, 0x1);
        gbc.writeMem(0x2a2f, { 0xee, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd2f6);
        EXPECT(gbc.pc(), 0x2a31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0126
        gbc.setState(0x5687, 0xab16, 0xb4a0, 0x4413, 0xa944, 0x59b0, 0x0, 0x1);
        gbc.writeMem(0x5687, { 0xee, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xab16);
        EXPECT(gbc.pc(), 0x5689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0127
        gbc.setState(0xe7f, 0x6ce8, 0x1100, 0xa7f, 0x6676, 0x5e68, 0x1, 0x1);
        gbc.writeMem(0xe7f, { 0xee, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x6ce8);
        EXPECT(gbc.pc(), 0xe81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0129
        gbc.setState(0x9503, 0xce9, 0x3fc0, 0x4b9b, 0x8393, 0x57a, 0x0, 0x1);
        gbc.writeMem(0x9503, { 0xee, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xce9);
        EXPECT(gbc.pc(), 0x9505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9503), 0xee);
        EXPECT(gbc.readMem(0x9504), 0x48);
        // EE 012A
        gbc.setState(0x89bb, 0x27f5, 0x7d10, 0xa09b, 0x4701, 0x4c15, 0x1, 0x0);
        gbc.writeMem(0x89bb, { 0xee, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x27f5);
        EXPECT(gbc.pc(), 0x89bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89bb), 0xee);
        EXPECT(gbc.readMem(0x89bc), 0x38);
        // EE 012C
        gbc.setState(0x9791, 0x4b38, 0x4870, 0xc817, 0x30cd, 0x8e06, 0x0, 0x1);
        gbc.writeMem(0x9791, { 0xee, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4b38);
        EXPECT(gbc.pc(), 0x9793);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9791), 0xee);
        EXPECT(gbc.readMem(0x9792), 0x62);
        // EE 012D
        gbc.setState(0x994a, 0x87ca, 0x4ed0, 0x227e, 0x69e4, 0xfa44, 0x0, 0x1);
        gbc.writeMem(0x994a, { 0xee, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x87ca);
        EXPECT(gbc.pc(), 0x994c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x994a), 0xee);
        EXPECT(gbc.readMem(0x994b), 0xe9);
        // EE 012E
        gbc.setState(0x2901, 0xd8f3, 0xa1a0, 0x3b88, 0xf6c4, 0x612, 0x1, 0x0);
        gbc.writeMem(0x2901, { 0xee, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd8f3);
        EXPECT(gbc.pc(), 0x2903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 012F
        gbc.setState(0x4177, 0xf2cd, 0x7bd0, 0x6c21, 0x1bff, 0xfdd4, 0x1, 0x1);
        gbc.writeMem(0x4177, { 0xee, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf2cd);
        EXPECT(gbc.pc(), 0x4179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0130
        gbc.setState(0xc2e9, 0xa422, 0xb60, 0x521e, 0x13cb, 0x27f5, 0x1, 0x0);
        gbc.writeMem(0xc2e9, { 0xee, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa422);
        EXPECT(gbc.pc(), 0xc2eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2e9), 0xee);
        EXPECT(gbc.readMem(0xc2ea), 0x52);
        // EE 0131
        gbc.setState(0xbb69, 0x6663, 0x7fb0, 0x397d, 0x60c1, 0x5101, 0x1, 0x0);
        gbc.writeMem(0xbb69, { 0xee, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6663);
        EXPECT(gbc.pc(), 0xbb6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb69), 0xee);
        EXPECT(gbc.readMem(0xbb6a), 0x42);
        // EE 0132
        gbc.setState(0xcf61, 0x8ab8, 0x53a0, 0xd9da, 0x7f78, 0x7aef, 0x1, 0x1);
        gbc.writeMem(0xcf61, { 0xee, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8ab8);
        EXPECT(gbc.pc(), 0xcf63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf61), 0xee);
        EXPECT(gbc.readMem(0xcf62), 0xba);
        // EE 0133
        gbc.setState(0x88a5, 0xa44e, 0xa350, 0xc026, 0x259b, 0x2e80, 0x1, 0x1);
        gbc.writeMem(0x88a5, { 0xee, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa44e);
        EXPECT(gbc.pc(), 0x88a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88a5), 0xee);
        EXPECT(gbc.readMem(0x88a6), 0xa);
        // EE 0134
        gbc.setState(0x2f5a, 0x6417, 0x9020, 0xe8ce, 0xc795, 0x541, 0x1, 0x1);
        gbc.writeMem(0x2f5a, { 0xee, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6417);
        EXPECT(gbc.pc(), 0x2f5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0135
        gbc.setState(0xfaf, 0xe870, 0x9680, 0x3574, 0x87be, 0x7b8b, 0x0, 0x1);
        gbc.writeMem(0xfaf, { 0xee, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe870);
        EXPECT(gbc.pc(), 0xfb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0136
        gbc.setState(0x7ac7, 0xb66, 0xd6c0, 0x8c29, 0xa776, 0xc3a8, 0x0, 0x0);
        gbc.writeMem(0x7ac7, { 0xee, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb66);
        EXPECT(gbc.pc(), 0x7ac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0137
        gbc.setState(0x2354, 0x25b9, 0xe740, 0x7317, 0xefd4, 0xeaba, 0x0, 0x1);
        gbc.writeMem(0x2354, { 0xee, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x25b9);
        EXPECT(gbc.pc(), 0x2356);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0138
        gbc.setState(0x972c, 0xce51, 0x40b0, 0x17ff, 0x8f3b, 0xfb35, 0x0, 0x1);
        gbc.writeMem(0x972c, { 0xee, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xce51);
        EXPECT(gbc.pc(), 0x972e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x972c), 0xee);
        EXPECT(gbc.readMem(0x972d), 0xf3);
        // EE 0139
        gbc.setState(0x9598, 0x31ee, 0x7df0, 0x8d45, 0x380f, 0x15dd, 0x1, 0x0);
        gbc.writeMem(0x9598, { 0xee, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x31ee);
        EXPECT(gbc.pc(), 0x959a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9598), 0xee);
        EXPECT(gbc.readMem(0x9599), 0x9d);
        // EE 013A
        gbc.setState(0x664e, 0xe503, 0x94d0, 0xdfbc, 0xe268, 0x801, 0x0, 0x0);
        gbc.writeMem(0x664e, { 0xee, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe503);
        EXPECT(gbc.pc(), 0x6650);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 013B
        gbc.setState(0xefaa, 0x3cf2, 0xff60, 0xca70, 0x134a, 0x197b, 0x1, 0x0);
        gbc.writeMem(0xefaa, { 0xee, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3cf2);
        EXPECT(gbc.pc(), 0xefac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefaa), 0xee);
        EXPECT(gbc.readMem(0xefab), 0x74);
        // EE 013C
        gbc.setState(0xb630, 0x2ece, 0x8200, 0x1bd1, 0x6e38, 0x4423, 0x0, 0x1);
        gbc.writeMem(0xb630, { 0xee, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2ece);
        EXPECT(gbc.pc(), 0xb632);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb630), 0xee);
        EXPECT(gbc.readMem(0xb631), 0x4a);
        // EE 013D
        gbc.setState(0x3a15, 0x9959, 0xdf40, 0x37f3, 0x4418, 0xc50e, 0x0, 0x0);
        gbc.writeMem(0x3a15, { 0xee, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9959);
        EXPECT(gbc.pc(), 0x3a17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 013E
        gbc.setState(0xdb41, 0xa28e, 0x930, 0xcabd, 0x5497, 0x1096, 0x0, 0x1);
        gbc.writeMem(0xdb41, { 0xee, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xa28e);
        EXPECT(gbc.pc(), 0xdb43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb41), 0xee);
        EXPECT(gbc.readMem(0xdb42), 0xee);
        // EE 013F
        gbc.setState(0xed87, 0x32a4, 0x4c60, 0xd8a2, 0x6068, 0x1048, 0x1, 0x0);
        gbc.writeMem(0xed87, { 0xee, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x32a4);
        EXPECT(gbc.pc(), 0xed89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed87), 0xee);
        EXPECT(gbc.readMem(0xed88), 0x76);
        // EE 0140
        gbc.setState(0xa1b8, 0xf626, 0x9990, 0x7934, 0x9b83, 0xef61, 0x0, 0x1);
        gbc.writeMem(0xa1b8, { 0xee, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf626);
        EXPECT(gbc.pc(), 0xa1ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1b8), 0xee);
        EXPECT(gbc.readMem(0xa1b9), 0x54);
        // EE 0141
        gbc.setState(0xee52, 0xe84f, 0x39c0, 0xf339, 0xd2e1, 0xeefe, 0x0, 0x1);
        gbc.writeMem(0xee52, { 0xee, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe84f);
        EXPECT(gbc.pc(), 0xee54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee52), 0xee);
        EXPECT(gbc.readMem(0xee53), 0x5b);
        // EE 0142
        gbc.setState(0x20ff, 0x6acf, 0x5860, 0x8fde, 0xde77, 0x4b78, 0x1, 0x1);
        gbc.writeMem(0x20ff, { 0xee, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6acf);
        EXPECT(gbc.pc(), 0x2101);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0143
        gbc.setState(0xec50, 0x1a2, 0x13a0, 0x43a9, 0xadcd, 0x2c3d, 0x1, 0x0);
        gbc.writeMem(0xec50, { 0xee, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1a2);
        EXPECT(gbc.pc(), 0xec52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec50), 0xee);
        EXPECT(gbc.readMem(0xec51), 0xd2);
        // EE 0144
        gbc.setState(0xab1d, 0xea3b, 0x5030, 0xd713, 0xef17, 0x193c, 0x1, 0x1);
        gbc.writeMem(0xab1d, { 0xee, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xea3b);
        EXPECT(gbc.pc(), 0xab1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab1d), 0xee);
        EXPECT(gbc.readMem(0xab1e), 0xab);
        // EE 0145
        gbc.setState(0x6fbc, 0x80fc, 0x9f40, 0xffc8, 0x9d30, 0x5b78, 0x1, 0x1);
        gbc.writeMem(0x6fbc, { 0xee, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x80fc);
        EXPECT(gbc.pc(), 0x6fbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0146
        gbc.setState(0xb905, 0x92d4, 0x3ae0, 0x668d, 0x1a12, 0xf9af, 0x0, 0x1);
        gbc.writeMem(0xb905, { 0xee, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x92d4);
        EXPECT(gbc.pc(), 0xb907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb905), 0xee);
        EXPECT(gbc.readMem(0xb906), 0x42);
        // EE 0147
        gbc.setState(0xa19e, 0x1636, 0xef0, 0x1b84, 0x83c4, 0x6172, 0x1, 0x1);
        gbc.writeMem(0xa19e, { 0xee, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1636);
        EXPECT(gbc.pc(), 0xa1a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa19e), 0xee);
        EXPECT(gbc.readMem(0xa19f), 0xa3);
        // EE 0148
        gbc.setState(0xbb4, 0xc26a, 0x5c40, 0xa35f, 0xba23, 0x2a22, 0x1, 0x1);
        gbc.writeMem(0xbb4, { 0xee, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc26a);
        EXPECT(gbc.pc(), 0xbb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0149
        gbc.setState(0x7fe2, 0xc773, 0x1c0, 0x384, 0xedc5, 0x2715, 0x1, 0x0);
        gbc.writeMem(0x7fe2, { 0xee, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc773);
        EXPECT(gbc.pc(), 0x7fe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 014A
        gbc.setState(0xa6ba, 0xebad, 0x2df0, 0x9cd3, 0xed0f, 0x5fb4, 0x0, 0x1);
        gbc.writeMem(0xa6ba, { 0xee, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xebad);
        EXPECT(gbc.pc(), 0xa6bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ba), 0xee);
        EXPECT(gbc.readMem(0xa6bb), 0xc7);
        // EE 014B
        gbc.setState(0x79df, 0x3938, 0xdeb0, 0xa1bc, 0x9e93, 0x12ed, 0x0, 0x1);
        gbc.writeMem(0x79df, { 0xee, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3938);
        EXPECT(gbc.pc(), 0x79e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 014C
        gbc.setState(0xb89e, 0xb70e, 0xa250, 0xc387, 0x16d2, 0x8f3e, 0x0, 0x1);
        gbc.writeMem(0xb89e, { 0xee, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb70e);
        EXPECT(gbc.pc(), 0xb8a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb89e), 0xee);
        EXPECT(gbc.readMem(0xb89f), 0xb6);
        // EE 014D
        gbc.setState(0xdfb3, 0xa794, 0xf9d0, 0x744f, 0x5da9, 0x7d0b, 0x1, 0x1);
        gbc.writeMem(0xdfb3, { 0xee, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa794);
        EXPECT(gbc.pc(), 0xdfb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfb3), 0xee);
        EXPECT(gbc.readMem(0xdfb4), 0x98);
        // EE 014E
        gbc.setState(0xc010, 0x83f0, 0x4b90, 0x5311, 0xebc4, 0x8ba7, 0x1, 0x1);
        gbc.writeMem(0xc010, { 0xee, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x83f0);
        EXPECT(gbc.pc(), 0xc012);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc010), 0xee);
        EXPECT(gbc.readMem(0xc011), 0xd2);
        // EE 014F
        gbc.setState(0xb456, 0xb51b, 0x9b20, 0xe45d, 0xbccc, 0xbed7, 0x0, 0x1);
        gbc.writeMem(0xb456, { 0xee, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb51b);
        EXPECT(gbc.pc(), 0xb458);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb456), 0xee);
        EXPECT(gbc.readMem(0xb457), 0x74);
        // EE 0150
        gbc.setState(0x67e1, 0x44e1, 0x4a00, 0xe43a, 0xc5f1, 0x323, 0x0, 0x1);
        gbc.writeMem(0x67e1, { 0xee, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x44e1);
        EXPECT(gbc.pc(), 0x67e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0151
        gbc.setState(0x5ab7, 0x1bb0, 0x3c60, 0x7d94, 0x8a72, 0xd8f9, 0x0, 0x0);
        gbc.writeMem(0x5ab7, { 0xee, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1bb0);
        EXPECT(gbc.pc(), 0x5ab9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0153
        gbc.setState(0x6e95, 0x76fb, 0x6a90, 0x6545, 0x6056, 0xda, 0x1, 0x1);
        gbc.writeMem(0x6e95, { 0xee, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x76fb);
        EXPECT(gbc.pc(), 0x6e97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0154
        gbc.setState(0xcb04, 0x49aa, 0x6860, 0x90b8, 0xc570, 0x1206, 0x1, 0x0);
        gbc.writeMem(0xcb04, { 0xee, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x49aa);
        EXPECT(gbc.pc(), 0xcb06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb04), 0xee);
        EXPECT(gbc.readMem(0xcb05), 0xc2);
        // EE 0155
        gbc.setState(0x526b, 0xaa61, 0xd840, 0x2603, 0x86ca, 0xafc5, 0x0, 0x1);
        gbc.writeMem(0x526b, { 0xee, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xaa61);
        EXPECT(gbc.pc(), 0x526d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0156
        gbc.setState(0x6eea, 0xb61d, 0x66f0, 0xa92e, 0x29ef, 0x3eec, 0x0, 0x0);
        gbc.writeMem(0x6eea, { 0xee, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb61d);
        EXPECT(gbc.pc(), 0x6eec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0157
        gbc.setState(0x9cf1, 0x372d, 0xa3a0, 0xdd1a, 0x894c, 0x9c2f, 0x0, 0x1);
        gbc.writeMem(0x9cf1, { 0xee, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x372d);
        EXPECT(gbc.pc(), 0x9cf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cf1), 0xee);
        EXPECT(gbc.readMem(0x9cf2), 0xa2);
        // EE 0158
        gbc.setState(0x7561, 0x8b9a, 0x8460, 0xdf53, 0xc057, 0xcb4f, 0x1, 0x0);
        gbc.writeMem(0x7561, { 0xee, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8b9a);
        EXPECT(gbc.pc(), 0x7563);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0159
        gbc.setState(0x221b, 0x4780, 0x8e60, 0xef60, 0x5a1f, 0x3a6c, 0x1, 0x1);
        gbc.writeMem(0x221b, { 0xee, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4780);
        EXPECT(gbc.pc(), 0x221d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 015A
        gbc.setState(0x50fa, 0x7ef1, 0xada0, 0x5b9e, 0x370, 0x6f9d, 0x1, 0x0);
        gbc.writeMem(0x50fa, { 0xee, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7ef1);
        EXPECT(gbc.pc(), 0x50fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 015B
        gbc.setState(0x62b3, 0x310c, 0x6cf0, 0x2310, 0x7fd3, 0x269c, 0x0, 0x0);
        gbc.writeMem(0x62b3, { 0xee, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x310c);
        EXPECT(gbc.pc(), 0x62b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 015C
        gbc.setState(0x49f7, 0x81a7, 0xc4c0, 0x2135, 0x853c, 0xa57a, 0x0, 0x1);
        gbc.writeMem(0x49f7, { 0xee, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x81a7);
        EXPECT(gbc.pc(), 0x49f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 015D
        gbc.setState(0x10b6, 0x6e9e, 0x5d30, 0xe56a, 0x8587, 0x8ebd, 0x0, 0x1);
        gbc.writeMem(0x10b6, { 0xee, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x6e9e);
        EXPECT(gbc.pc(), 0x10b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 015F
        gbc.setState(0x28fe, 0xd43e, 0x52f0, 0x7b6, 0x9775, 0x7c57, 0x0, 0x0);
        gbc.writeMem(0x28fe, { 0xee, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd43e);
        EXPECT(gbc.pc(), 0x2900);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0160
        gbc.setState(0x70fe, 0x890e, 0xe940, 0x8833, 0x99e0, 0x5f7, 0x0, 0x0);
        gbc.writeMem(0x70fe, { 0xee, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x890e);
        EXPECT(gbc.pc(), 0x7100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0161
        gbc.setState(0x39d8, 0x2574, 0xf220, 0x38dc, 0x5fa3, 0xf3dd, 0x1, 0x0);
        gbc.writeMem(0x39d8, { 0xee, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2574);
        EXPECT(gbc.pc(), 0x39da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0163
        gbc.setState(0x45b5, 0x9379, 0x63f0, 0xfb55, 0xef43, 0x87fc, 0x1, 0x0);
        gbc.writeMem(0x45b5, { 0xee, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9379);
        EXPECT(gbc.pc(), 0x45b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0164
        gbc.setState(0x76ac, 0xc9ed, 0x2a50, 0x9270, 0x6590, 0xe63e, 0x1, 0x0);
        gbc.writeMem(0x76ac, { 0xee, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc9ed);
        EXPECT(gbc.pc(), 0x76ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0165
        gbc.setState(0x326d, 0x3ca0, 0x7690, 0x7f16, 0x8b26, 0xa0, 0x0, 0x0);
        gbc.writeMem(0x326d, { 0xee, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3ca0);
        EXPECT(gbc.pc(), 0x326f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0166
        gbc.setState(0x2744, 0xc142, 0xe3f0, 0x8b9e, 0xbd7a, 0x4983, 0x0, 0x1);
        gbc.writeMem(0x2744, { 0xee, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc142);
        EXPECT(gbc.pc(), 0x2746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0167
        gbc.setState(0x419a, 0x5168, 0x5ed0, 0x8af8, 0x7362, 0xedf8, 0x0, 0x0);
        gbc.writeMem(0x419a, { 0xee, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x5168);
        EXPECT(gbc.pc(), 0x419c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0168
        gbc.setState(0xc26b, 0x19be, 0x470, 0x1155, 0x45c6, 0xa11e, 0x0, 0x1);
        gbc.writeMem(0xc26b, { 0xee, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x19be);
        EXPECT(gbc.pc(), 0xc26d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc26b), 0xee);
        EXPECT(gbc.readMem(0xc26c), 0x67);
        // EE 0169
        gbc.setState(0x3b16, 0x5732, 0xefa0, 0x7ea9, 0x929f, 0xf100, 0x0, 0x1);
        gbc.writeMem(0x3b16, { 0xee, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5732);
        EXPECT(gbc.pc(), 0x3b18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 016A
        gbc.setState(0x5917, 0x3a8, 0xd970, 0xcc44, 0x32eb, 0x448c, 0x0, 0x0);
        gbc.writeMem(0x5917, { 0xee, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3a8);
        EXPECT(gbc.pc(), 0x5919);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 016B
        gbc.setState(0x98b, 0x4db9, 0x1ea0, 0x343e, 0x819e, 0xbda2, 0x0, 0x0);
        gbc.writeMem(0x98b, { 0xee, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x4db9);
        EXPECT(gbc.pc(), 0x98d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 016C
        gbc.setState(0x6bc9, 0xa1d6, 0xa830, 0x2953, 0xab0f, 0x6f89, 0x1, 0x1);
        gbc.writeMem(0x6bc9, { 0xee, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa1d6);
        EXPECT(gbc.pc(), 0x6bcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 016D
        gbc.setState(0x302e, 0xaa7a, 0x31b0, 0x526e, 0xace1, 0xa88d, 0x1, 0x0);
        gbc.writeMem(0x302e, { 0xee, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xaa7a);
        EXPECT(gbc.pc(), 0x3030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 016E
        gbc.setState(0x9c65, 0x1d91, 0x3460, 0x8fbc, 0x28bd, 0x8f73, 0x0, 0x0);
        gbc.writeMem(0x9c65, { 0xee, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x1d91);
        EXPECT(gbc.pc(), 0x9c67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c65), 0xee);
        EXPECT(gbc.readMem(0x9c66), 0xe6);
        // EE 016F
        gbc.setState(0x691f, 0x3310, 0xe010, 0x48a2, 0x6cdd, 0xfbb9, 0x1, 0x0);
        gbc.writeMem(0x691f, { 0xee, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x3310);
        EXPECT(gbc.pc(), 0x6921);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0170
        gbc.setState(0xc573, 0x5954, 0xad10, 0xd5e0, 0x205c, 0xe03c, 0x1, 0x0);
        gbc.writeMem(0xc573, { 0xee, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x5954);
        EXPECT(gbc.pc(), 0xc575);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc573), 0xee);
        EXPECT(gbc.readMem(0xc574), 0xa9);
        // EE 0171
        gbc.setState(0xd58c, 0x32b8, 0xcc20, 0xe472, 0x5594, 0x5fd7, 0x1, 0x1);
        gbc.writeMem(0xd58c, { 0xee, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x32b8);
        EXPECT(gbc.pc(), 0xd58e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd58c), 0xee);
        EXPECT(gbc.readMem(0xd58d), 0xf6);
        // EE 0172
        gbc.setState(0x7af, 0x8ddd, 0x3490, 0x3cec, 0xd0ab, 0xf38e, 0x0, 0x1);
        gbc.writeMem(0x7af, { 0xee, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8ddd);
        EXPECT(gbc.pc(), 0x7b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0173
        gbc.setState(0x757c, 0xdb75, 0x99f0, 0xaa7, 0x6949, 0xa77f, 0x1, 0x1);
        gbc.writeMem(0x757c, { 0xee, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xdb75);
        EXPECT(gbc.pc(), 0x757e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0174
        gbc.setState(0x8d87, 0xd0c7, 0x6540, 0x965b, 0x8c83, 0x770d, 0x0, 0x1);
        gbc.writeMem(0x8d87, { 0xee, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd0c7);
        EXPECT(gbc.pc(), 0x8d89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d87), 0xee);
        EXPECT(gbc.readMem(0x8d88), 0xb4);
        // EE 0175
        gbc.setState(0xa660, 0x2bf2, 0x810, 0x7a94, 0xbccf, 0xb941, 0x0, 0x0);
        gbc.writeMem(0xa660, { 0xee, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x2bf2);
        EXPECT(gbc.pc(), 0xa662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa660), 0xee);
        EXPECT(gbc.readMem(0xa661), 0xe6);
        // EE 0176
        gbc.setState(0x3762, 0x849b, 0xee40, 0x5d85, 0x9e88, 0x977f, 0x1, 0x0);
        gbc.writeMem(0x3762, { 0xee, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x849b);
        EXPECT(gbc.pc(), 0x3764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0177
        gbc.setState(0x62f5, 0x2b0, 0xef60, 0xb336, 0x6da8, 0x2ca3, 0x0, 0x0);
        gbc.writeMem(0x62f5, { 0xee, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2b0);
        EXPECT(gbc.pc(), 0x62f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0178
        gbc.setState(0x6714, 0x3d93, 0x2860, 0xcc64, 0x38c9, 0x99bc, 0x0, 0x0);
        gbc.writeMem(0x6714, { 0xee, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3d93);
        EXPECT(gbc.pc(), 0x6716);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 017A
        gbc.setState(0xa71f, 0x3121, 0xcc0, 0x65c, 0x304f, 0x9ab, 0x1, 0x0);
        gbc.writeMem(0xa71f, { 0xee, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3121);
        EXPECT(gbc.pc(), 0xa721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa71f), 0xee);
        EXPECT(gbc.readMem(0xa720), 0x8c);
        // EE 017B
        gbc.setState(0xeb96, 0xd12b, 0xe760, 0x9b29, 0xf166, 0xd8c7, 0x1, 0x1);
        gbc.writeMem(0xeb96, { 0xee, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd12b);
        EXPECT(gbc.pc(), 0xeb98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb96), 0xee);
        EXPECT(gbc.readMem(0xeb97), 0x1);
        // EE 017C
        gbc.setState(0xa51f, 0xec5c, 0xa980, 0x7834, 0x8f1b, 0x269a, 0x0, 0x0);
        gbc.writeMem(0xa51f, { 0xee, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xec5c);
        EXPECT(gbc.pc(), 0xa521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa51f), 0xee);
        EXPECT(gbc.readMem(0xa520), 0x4f);
        // EE 017D
        gbc.setState(0x1375, 0xaa6c, 0x6ef0, 0x1222, 0x57ff, 0x306a, 0x0, 0x1);
        gbc.writeMem(0x1375, { 0xee, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xaa6c);
        EXPECT(gbc.pc(), 0x1377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 017E
        gbc.setState(0x5f22, 0x7b08, 0x3fd0, 0x61a2, 0x8b30, 0x387c, 0x0, 0x0);
        gbc.writeMem(0x5f22, { 0xee, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7b08);
        EXPECT(gbc.pc(), 0x5f24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 017F
        gbc.setState(0x6d4a, 0xe38d, 0x6f40, 0xb3ad, 0xce15, 0x1a7d, 0x0, 0x0);
        gbc.writeMem(0x6d4a, { 0xee, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe38d);
        EXPECT(gbc.pc(), 0x6d4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0180
        gbc.setState(0x8abd, 0xb418, 0xdeb0, 0xce07, 0xe677, 0xacba, 0x0, 0x1);
        gbc.writeMem(0x8abd, { 0xee, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb418);
        EXPECT(gbc.pc(), 0x8abf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8abd), 0xee);
        EXPECT(gbc.readMem(0x8abe), 0xc5);
        // EE 0181
        gbc.setState(0x2ba6, 0x9ff4, 0x2f90, 0x9270, 0x3c7c, 0xfd94, 0x0, 0x1);
        gbc.writeMem(0x2ba6, { 0xee, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9ff4);
        EXPECT(gbc.pc(), 0x2ba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0182
        gbc.setState(0xc4a, 0x9c7f, 0x8a80, 0x4066, 0x300, 0x2473, 0x1, 0x0);
        gbc.writeMem(0xc4a, { 0xee, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9c7f);
        EXPECT(gbc.pc(), 0xc4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0183
        gbc.setState(0x3f63, 0xbb31, 0x8d70, 0x1c43, 0xac71, 0xf85c, 0x0, 0x1);
        gbc.writeMem(0x3f63, { 0xee, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xbb31);
        EXPECT(gbc.pc(), 0x3f65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0184
        gbc.setState(0x1752, 0xe1b9, 0x1a30, 0xc276, 0x5b99, 0xae5d, 0x1, 0x0);
        gbc.writeMem(0x1752, { 0xee, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe1b9);
        EXPECT(gbc.pc(), 0x1754);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0185
        gbc.setState(0x56ad, 0xf4f8, 0xe380, 0xd26b, 0x5881, 0x43b8, 0x0, 0x0);
        gbc.writeMem(0x56ad, { 0xee, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf4f8);
        EXPECT(gbc.pc(), 0x56af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0186
        gbc.setState(0x65f5, 0x751b, 0x4920, 0xfd3e, 0xd18d, 0x4adf, 0x1, 0x0);
        gbc.writeMem(0x65f5, { 0xee, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x751b);
        EXPECT(gbc.pc(), 0x65f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0187
        gbc.setState(0x970c, 0x59a8, 0x220, 0xe8cd, 0x9db7, 0xde69, 0x0, 0x0);
        gbc.writeMem(0x970c, { 0xee, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x59a8);
        EXPECT(gbc.pc(), 0x970e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x970c), 0xee);
        EXPECT(gbc.readMem(0x970d), 0x26);
        // EE 0188
        gbc.setState(0x1e14, 0xcb8, 0x62b0, 0xb7b3, 0x9642, 0xf63d, 0x0, 0x1);
        gbc.writeMem(0x1e14, { 0xee, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xcb8);
        EXPECT(gbc.pc(), 0x1e16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0189
        gbc.setState(0xbc3f, 0xfa3, 0x5260, 0x2c64, 0xbb0d, 0xa502, 0x0, 0x1);
        gbc.writeMem(0xbc3f, { 0xee, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xfa3);
        EXPECT(gbc.pc(), 0xbc41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc3f), 0xee);
        EXPECT(gbc.readMem(0xbc40), 0xef);
        // EE 018A
        gbc.setState(0x472, 0xbbe5, 0xc340, 0x313b, 0x9976, 0x506f, 0x1, 0x0);
        gbc.writeMem(0x472, { 0xee, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xbbe5);
        EXPECT(gbc.pc(), 0x474);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 018B
        gbc.setState(0x9e54, 0xd74d, 0xb760, 0x421f, 0x3b8, 0xb54f, 0x1, 0x1);
        gbc.writeMem(0x9e54, { 0xee, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd74d);
        EXPECT(gbc.pc(), 0x9e56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e54), 0xee);
        EXPECT(gbc.readMem(0x9e55), 0x60);
        // EE 018C
        gbc.setState(0x401a, 0xf2ed, 0xf4e0, 0xdb64, 0xff04, 0xa4f7, 0x0, 0x0);
        gbc.writeMem(0x401a, { 0xee, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf2ed);
        EXPECT(gbc.pc(), 0x401c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 018D
        gbc.setState(0x6064, 0xa885, 0x61b0, 0xe9ee, 0xca5b, 0xffde, 0x1, 0x0);
        gbc.writeMem(0x6064, { 0xee, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa885);
        EXPECT(gbc.pc(), 0x6066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 018E
        gbc.setState(0x7769, 0x84f3, 0x3f60, 0x574f, 0xd5d1, 0x581b, 0x1, 0x0);
        gbc.writeMem(0x7769, { 0xee, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x84f3);
        EXPECT(gbc.pc(), 0x776b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 018F
        gbc.setState(0x7958, 0xd26e, 0xe9f0, 0x8c90, 0x7814, 0x894f, 0x0, 0x0);
        gbc.writeMem(0x7958, { 0xee, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd26e);
        EXPECT(gbc.pc(), 0x795a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0190
        gbc.setState(0x655, 0xdb2c, 0x9640, 0x8cd5, 0xae25, 0x9254, 0x1, 0x0);
        gbc.writeMem(0x655, { 0xee, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xdb2c);
        EXPECT(gbc.pc(), 0x657);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0191
        gbc.setState(0x26ce, 0x1d8f, 0xa8e0, 0xe9c9, 0x4689, 0x229d, 0x0, 0x0);
        gbc.writeMem(0x26ce, { 0xee, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1d8f);
        EXPECT(gbc.pc(), 0x26d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0192
        gbc.setState(0x774a, 0xac5e, 0xb2d0, 0xb85, 0xe595, 0x3e6a, 0x0, 0x1);
        gbc.writeMem(0x774a, { 0xee, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xac5e);
        EXPECT(gbc.pc(), 0x774c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0193
        gbc.setState(0x4256, 0x1b9, 0x8320, 0x10fc, 0xced8, 0xb269, 0x1, 0x1);
        gbc.writeMem(0x4256, { 0xee, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1b9);
        EXPECT(gbc.pc(), 0x4258);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0194
        gbc.setState(0xde9f, 0x5d22, 0xd8a0, 0xc79, 0x3ff1, 0xa075, 0x0, 0x1);
        gbc.writeMem(0xde9f, { 0xee, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x5d22);
        EXPECT(gbc.pc(), 0xdea1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde9f), 0xee);
        EXPECT(gbc.readMem(0xdea0), 0x1a);
        // EE 0195
        gbc.setState(0x1e65, 0xd7f9, 0xe7a0, 0x2e25, 0xfb7e, 0x4536, 0x1, 0x1);
        gbc.writeMem(0x1e65, { 0xee, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd7f9);
        EXPECT(gbc.pc(), 0x1e67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0196
        gbc.setState(0xa4c7, 0x18b9, 0x4190, 0xa45e, 0x1176, 0x6b, 0x0, 0x0);
        gbc.writeMem(0xa4c7, { 0xee, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x18b9);
        EXPECT(gbc.pc(), 0xa4c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4c7), 0xee);
        EXPECT(gbc.readMem(0xa4c8), 0x47);
        // EE 0197
        gbc.setState(0xa2ea, 0x7339, 0x91c0, 0x61b8, 0x326c, 0x4b0d, 0x1, 0x0);
        gbc.writeMem(0xa2ea, { 0xee, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7339);
        EXPECT(gbc.pc(), 0xa2ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2ea), 0xee);
        EXPECT(gbc.readMem(0xa2eb), 0x88);
        // EE 0198
        gbc.setState(0x67dc, 0x61a8, 0x1470, 0xaee5, 0x10e9, 0xb667, 0x0, 0x0);
        gbc.writeMem(0x67dc, { 0xee, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x61a8);
        EXPECT(gbc.pc(), 0x67de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0199
        gbc.setState(0x3d66, 0x73bd, 0xef20, 0xc03b, 0xd06b, 0xac7e, 0x1, 0x1);
        gbc.writeMem(0x3d66, { 0xee, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x73bd);
        EXPECT(gbc.pc(), 0x3d68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 019A
        gbc.setState(0x7adc, 0x924b, 0xba30, 0x8e00, 0xcc0e, 0xb378, 0x1, 0x1);
        gbc.writeMem(0x7adc, { 0xee, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x924b);
        EXPECT(gbc.pc(), 0x7ade);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 019B
        gbc.setState(0xacbc, 0x5fe8, 0x390, 0x128d, 0xc1b0, 0x69d5, 0x1, 0x1);
        gbc.writeMem(0xacbc, { 0xee, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5fe8);
        EXPECT(gbc.pc(), 0xacbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacbc), 0xee);
        EXPECT(gbc.readMem(0xacbd), 0xfa);
        // EE 019D
        gbc.setState(0xdb2c, 0x6004, 0xe670, 0xebd3, 0xf5f7, 0xddd4, 0x0, 0x0);
        gbc.writeMem(0xdb2c, { 0xee, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6004);
        EXPECT(gbc.pc(), 0xdb2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb2c), 0xee);
        EXPECT(gbc.readMem(0xdb2d), 0x77);
        // EE 019E
        gbc.setState(0x8297, 0x1596, 0x6410, 0xb80c, 0xa5f4, 0xe514, 0x1, 0x0);
        gbc.writeMem(0x8297, { 0xee, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x1596);
        EXPECT(gbc.pc(), 0x8299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8297), 0xee);
        EXPECT(gbc.readMem(0x8298), 0x45);
        // EE 019F
        gbc.setState(0x1129, 0x99f0, 0xe860, 0x7e64, 0x35fa, 0x4239, 0x0, 0x1);
        gbc.writeMem(0x1129, { 0xee, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x99f0);
        EXPECT(gbc.pc(), 0x112b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01A0
        gbc.setState(0xbed0, 0x2d49, 0xdd0, 0x2a39, 0xf72d, 0xdf76, 0x1, 0x1);
        gbc.writeMem(0xbed0, { 0xee, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2d49);
        EXPECT(gbc.pc(), 0xbed2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbed0), 0xee);
        EXPECT(gbc.readMem(0xbed1), 0x7b);
        // EE 01A1
        gbc.setState(0xd089, 0x825e, 0x8d40, 0xc326, 0x1e2d, 0xafa5, 0x0, 0x1);
        gbc.writeMem(0xd089, { 0xee, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x825e);
        EXPECT(gbc.pc(), 0xd08b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd089), 0xee);
        EXPECT(gbc.readMem(0xd08a), 0xd8);
        // EE 01A2
        gbc.setState(0x1ba9, 0x1a53, 0xf5e0, 0x5e58, 0xea09, 0x55ec, 0x0, 0x0);
        gbc.writeMem(0x1ba9, { 0xee, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1a53);
        EXPECT(gbc.pc(), 0x1bab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01A3
        gbc.setState(0x1600, 0x19ee, 0x6cf0, 0x3d65, 0xa492, 0xb76f, 0x0, 0x1);
        gbc.writeMem(0x1600, { 0xee, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x19ee);
        EXPECT(gbc.pc(), 0x1602);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01A4
        gbc.setState(0x881a, 0xb374, 0x9f0, 0x7a3e, 0x9d2, 0x210c, 0x0, 0x0);
        gbc.writeMem(0x881a, { 0xee, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb374);
        EXPECT(gbc.pc(), 0x881c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x881a), 0xee);
        EXPECT(gbc.readMem(0x881b), 0x36);
        // EE 01A5
        gbc.setState(0xba7e, 0xcb82, 0x8910, 0x35f1, 0xd967, 0x9f47, 0x1, 0x0);
        gbc.writeMem(0xba7e, { 0xee, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xcb82);
        EXPECT(gbc.pc(), 0xba80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba7e), 0xee);
        EXPECT(gbc.readMem(0xba7f), 0x4d);
        // EE 01A6
        gbc.setState(0xae2f, 0x5481, 0x4be0, 0xb9a3, 0xbab, 0xd2bb, 0x1, 0x0);
        gbc.writeMem(0xae2f, { 0xee, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5481);
        EXPECT(gbc.pc(), 0xae31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae2f), 0xee);
        EXPECT(gbc.readMem(0xae30), 0x98);
        // EE 01A7
        gbc.setState(0xdef2, 0xf6e7, 0x87f0, 0x4c1b, 0x69cb, 0x6d4d, 0x0, 0x0);
        gbc.writeMem(0xdef2, { 0xee, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf6e7);
        EXPECT(gbc.pc(), 0xdef4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdef2), 0xee);
        EXPECT(gbc.readMem(0xdef3), 0x10);
        // EE 01A8
        gbc.setState(0x23c2, 0xc35a, 0x8aa0, 0x2542, 0x2cf4, 0x5d5a, 0x1, 0x1);
        gbc.writeMem(0x23c2, { 0xee, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc35a);
        EXPECT(gbc.pc(), 0x23c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01A9
        gbc.setState(0x378f, 0x2705, 0x7330, 0x5f0d, 0xd06d, 0xe6ae, 0x0, 0x0);
        gbc.writeMem(0x378f, { 0xee, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x2705);
        EXPECT(gbc.pc(), 0x3791);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01AA
        gbc.setState(0x2c9c, 0xcae6, 0x3d50, 0x83ab, 0xce30, 0xe7d5, 0x1, 0x1);
        gbc.writeMem(0x2c9c, { 0xee, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xcae6);
        EXPECT(gbc.pc(), 0x2c9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01AB
        gbc.setState(0xc316, 0x31f0, 0xc420, 0x76e0, 0xeb38, 0x3e4, 0x0, 0x0);
        gbc.writeMem(0xc316, { 0xee, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x31f0);
        EXPECT(gbc.pc(), 0xc318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc316), 0xee);
        EXPECT(gbc.readMem(0xc317), 0x58);
        // EE 01AC
        gbc.setState(0xd6c8, 0x2975, 0xdf0, 0x2be4, 0x4f41, 0xe03d, 0x0, 0x0);
        gbc.writeMem(0xd6c8, { 0xee, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2975);
        EXPECT(gbc.pc(), 0xd6ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c8), 0xee);
        EXPECT(gbc.readMem(0xd6c9), 0xa7);
        // EE 01AD
        gbc.setState(0xad58, 0x438f, 0xe7a0, 0xe5b8, 0xc1d3, 0xecf8, 0x1, 0x0);
        gbc.writeMem(0xad58, { 0xee, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x438f);
        EXPECT(gbc.pc(), 0xad5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad58), 0xee);
        EXPECT(gbc.readMem(0xad59), 0xf4);
        // EE 01AE
        gbc.setState(0x542b, 0x1346, 0xcaa0, 0xce6d, 0xeffa, 0x2a6c, 0x0, 0x0);
        gbc.writeMem(0x542b, { 0xee, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1346);
        EXPECT(gbc.pc(), 0x542d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01AF
        gbc.setState(0xa949, 0xf9b, 0xb520, 0xef24, 0x6b5, 0xae44, 0x1, 0x0);
        gbc.writeMem(0xa949, { 0xee, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf9b);
        EXPECT(gbc.pc(), 0xa94b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa949), 0xee);
        EXPECT(gbc.readMem(0xa94a), 0x4);
        // EE 01B0
        gbc.setState(0x3e98, 0x5505, 0x8160, 0xa89d, 0x7467, 0x837b, 0x0, 0x1);
        gbc.writeMem(0x3e98, { 0xee, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x5505);
        EXPECT(gbc.pc(), 0x3e9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01B1
        gbc.setState(0xe081, 0x9315, 0xdaf0, 0x3781, 0x43c6, 0x2f95, 0x1, 0x0);
        gbc.writeMem(0xe081, { 0xee, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x9315);
        EXPECT(gbc.pc(), 0xe083);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe081), 0xee);
        EXPECT(gbc.readMem(0xe082), 0x7a);
        // EE 01B2
        gbc.setState(0x28ab, 0xd3e7, 0xceb0, 0xeabe, 0xa6dc, 0x9252, 0x1, 0x0);
        gbc.writeMem(0x28ab, { 0xee, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd3e7);
        EXPECT(gbc.pc(), 0x28ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01B3
        gbc.setState(0xd892, 0x2602, 0xf1b0, 0x324f, 0x8d87, 0x68a2, 0x0, 0x1);
        gbc.writeMem(0xd892, { 0xee, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2602);
        EXPECT(gbc.pc(), 0xd894);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd892), 0xee);
        EXPECT(gbc.readMem(0xd893), 0x5e);
        // EE 01B4
        gbc.setState(0x139f, 0xb4b8, 0xd0f0, 0xb1bc, 0xa3c8, 0x2a3f, 0x1, 0x0);
        gbc.writeMem(0x139f, { 0xee, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb4b8);
        EXPECT(gbc.pc(), 0x13a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01B5
        gbc.setState(0xd20b, 0x614b, 0xa0e0, 0x1784, 0x7aac, 0xa637, 0x0, 0x0);
        gbc.writeMem(0xd20b, { 0xee, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x614b);
        EXPECT(gbc.pc(), 0xd20d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd20b), 0xee);
        EXPECT(gbc.readMem(0xd20c), 0xc);
        // EE 01B6
        gbc.setState(0x98a1, 0xf5a8, 0xe1b0, 0xbbc1, 0x614b, 0x4f2d, 0x0, 0x0);
        gbc.writeMem(0x98a1, { 0xee, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf5a8);
        EXPECT(gbc.pc(), 0x98a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98a1), 0xee);
        EXPECT(gbc.readMem(0x98a2), 0x75);
        // EE 01B8
        gbc.setState(0xd0a6, 0xb406, 0x2620, 0x1598, 0x61d4, 0x7b33, 0x1, 0x1);
        gbc.writeMem(0xd0a6, { 0xee, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xb406);
        EXPECT(gbc.pc(), 0xd0a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0a6), 0xee);
        EXPECT(gbc.readMem(0xd0a7), 0x73);
        // EE 01B9
        gbc.setState(0x58c1, 0x50a3, 0xefd0, 0x50d7, 0xc9d4, 0x3d63, 0x1, 0x1);
        gbc.writeMem(0x58c1, { 0xee, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x50a3);
        EXPECT(gbc.pc(), 0x58c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01BA
        gbc.setState(0xe2dd, 0xf5b4, 0x4c60, 0x80ff, 0x8a49, 0x1a06, 0x1, 0x1);
        gbc.writeMem(0xe2dd, { 0xee, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf5b4);
        EXPECT(gbc.pc(), 0xe2df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2dd), 0xee);
        EXPECT(gbc.readMem(0xe2de), 0xc6);
        // EE 01BB
        gbc.setState(0x5abe, 0x8631, 0xc260, 0xb716, 0xdda, 0x145c, 0x1, 0x0);
        gbc.writeMem(0x5abe, { 0xee, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8631);
        EXPECT(gbc.pc(), 0x5ac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01BC
        gbc.setState(0x9cdb, 0xcd19, 0x42f0, 0xb099, 0x1c30, 0x361f, 0x1, 0x0);
        gbc.writeMem(0x9cdb, { 0xee, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xcd19);
        EXPECT(gbc.pc(), 0x9cdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cdb), 0xee);
        EXPECT(gbc.readMem(0x9cdc), 0xf1);
        // EE 01BD
        gbc.setState(0x53e8, 0x460b, 0x3170, 0x8823, 0xcd93, 0x2d89, 0x0, 0x1);
        gbc.writeMem(0x53e8, { 0xee, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x460b);
        EXPECT(gbc.pc(), 0x53ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01BE
        gbc.setState(0x729f, 0x4eaf, 0x6720, 0xf506, 0xa53a, 0xc500, 0x0, 0x1);
        gbc.writeMem(0x729f, { 0xee, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4eaf);
        EXPECT(gbc.pc(), 0x72a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01BF
        gbc.setState(0xc683, 0x9128, 0x18b0, 0x4833, 0x3fb0, 0x9567, 0x1, 0x1);
        gbc.writeMem(0xc683, { 0xee, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9128);
        EXPECT(gbc.pc(), 0xc685);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc683), 0xee);
        EXPECT(gbc.readMem(0xc684), 0xc1);
        // EE 01C0
        gbc.setState(0xa897, 0x6d0, 0x9d0, 0xdaca, 0xb327, 0x16aa, 0x0, 0x0);
        gbc.writeMem(0xa897, { 0xee, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6d0);
        EXPECT(gbc.pc(), 0xa899);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa897), 0xee);
        EXPECT(gbc.readMem(0xa898), 0xa5);
        // EE 01C1
        gbc.setState(0x9d9d, 0x9719, 0x1ea0, 0x1a95, 0x7033, 0xece9, 0x0, 0x1);
        gbc.writeMem(0x9d9d, { 0xee, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9719);
        EXPECT(gbc.pc(), 0x9d9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d9d), 0xee);
        EXPECT(gbc.readMem(0x9d9e), 0x1);
        // EE 01C2
        gbc.setState(0xb8c, 0x61c6, 0x2020, 0x7b01, 0xbe51, 0x5f7e, 0x0, 0x0);
        gbc.writeMem(0xb8c, { 0xee, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x61c6);
        EXPECT(gbc.pc(), 0xb8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01C3
        gbc.setState(0x3675, 0xe7d, 0xd3a0, 0x214d, 0xb00, 0xd087, 0x1, 0x0);
        gbc.writeMem(0x3675, { 0xee, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe7d);
        EXPECT(gbc.pc(), 0x3677);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01C4
        gbc.setState(0x8230, 0xa8f9, 0x5fe0, 0x75e8, 0x15a, 0xfa97, 0x1, 0x0);
        gbc.writeMem(0x8230, { 0xee, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa8f9);
        EXPECT(gbc.pc(), 0x8232);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8230), 0xee);
        EXPECT(gbc.readMem(0x8231), 0x5a);
        // EE 01C5
        gbc.setState(0x3573, 0xcf98, 0xa770, 0xc44, 0xefef, 0x2bb2, 0x0, 0x1);
        gbc.writeMem(0x3573, { 0xee, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xcf98);
        EXPECT(gbc.pc(), 0x3575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01C6
        gbc.setState(0xb4f8, 0xd787, 0x2470, 0x7710, 0x1bb7, 0x9ae5, 0x0, 0x1);
        gbc.writeMem(0xb4f8, { 0xee, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd787);
        EXPECT(gbc.pc(), 0xb4fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4f8), 0xee);
        EXPECT(gbc.readMem(0xb4f9), 0xa8);
        // EE 01C7
        gbc.setState(0x84b8, 0xd88f, 0x5ad0, 0x489e, 0x4068, 0x2bab, 0x0, 0x1);
        gbc.writeMem(0x84b8, { 0xee, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd88f);
        EXPECT(gbc.pc(), 0x84ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84b8), 0xee);
        EXPECT(gbc.readMem(0x84b9), 0x79);
        // EE 01C8
        gbc.setState(0x23cb, 0xef99, 0x7e80, 0x141a, 0xf006, 0xe84a, 0x0, 0x1);
        gbc.writeMem(0x23cb, { 0xee, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xef99);
        EXPECT(gbc.pc(), 0x23cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01C9
        gbc.setState(0x5c15, 0x48f0, 0x1e90, 0x617, 0x4814, 0xe39e, 0x0, 0x0);
        gbc.writeMem(0x5c15, { 0xee, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x48f0);
        EXPECT(gbc.pc(), 0x5c17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01CA
        gbc.setState(0xbd70, 0x76f6, 0xc7d0, 0xa6c2, 0xbc36, 0x5d81, 0x0, 0x1);
        gbc.writeMem(0xbd70, { 0xee, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x76f6);
        EXPECT(gbc.pc(), 0xbd72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd70), 0xee);
        EXPECT(gbc.readMem(0xbd71), 0xf7);
        // EE 01CB
        gbc.setState(0x73c7, 0x9cf, 0x1270, 0x955f, 0xb89a, 0xa771, 0x1, 0x1);
        gbc.writeMem(0x73c7, { 0xee, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9cf);
        EXPECT(gbc.pc(), 0x73c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01CC
        gbc.setState(0xb9c2, 0x2239, 0x7300, 0x2130, 0xfd5e, 0xc43c, 0x0, 0x1);
        gbc.writeMem(0xb9c2, { 0xee, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2239);
        EXPECT(gbc.pc(), 0xb9c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9c2), 0xee);
        EXPECT(gbc.readMem(0xb9c3), 0x13);
        // EE 01CD
        gbc.setState(0x9e8d, 0xeea3, 0x9630, 0x8901, 0xc998, 0x6553, 0x0, 0x0);
        gbc.writeMem(0x9e8d, { 0xee, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xeea3);
        EXPECT(gbc.pc(), 0x9e8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e8d), 0xee);
        EXPECT(gbc.readMem(0x9e8e), 0xed);
        // EE 01CE
        gbc.setState(0x4f35, 0x57ea, 0x7070, 0xfb2a, 0xbdc2, 0x9b3d, 0x0, 0x1);
        gbc.writeMem(0x4f35, { 0xee, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x57ea);
        EXPECT(gbc.pc(), 0x4f37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01CF
        gbc.setState(0xde9f, 0x62cc, 0x3d00, 0x1a71, 0x1e98, 0x623e, 0x0, 0x0);
        gbc.writeMem(0xde9f, { 0xee, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x62cc);
        EXPECT(gbc.pc(), 0xdea1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde9f), 0xee);
        EXPECT(gbc.readMem(0xdea0), 0x1a);
        // EE 01D1
        gbc.setState(0x3f9f, 0x9e3f, 0x6590, 0x102a, 0xe942, 0x54b1, 0x1, 0x1);
        gbc.writeMem(0x3f9f, { 0xee, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9e3f);
        EXPECT(gbc.pc(), 0x3fa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01D2
        gbc.setState(0x7538, 0x4949, 0xaea0, 0x2827, 0x2963, 0xf478, 0x1, 0x0);
        gbc.writeMem(0x7538, { 0xee, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4949);
        EXPECT(gbc.pc(), 0x753a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01D3
        gbc.setState(0x1beb, 0x4bf2, 0x2fc0, 0x2177, 0x677c, 0x5dfa, 0x0, 0x1);
        gbc.writeMem(0x1beb, { 0xee, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4bf2);
        EXPECT(gbc.pc(), 0x1bed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01D4
        gbc.setState(0x1049, 0xefbd, 0xbca0, 0x2efe, 0x5702, 0xa0b9, 0x1, 0x0);
        gbc.writeMem(0x1049, { 0xee, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xefbd);
        EXPECT(gbc.pc(), 0x104b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01D6
        gbc.setState(0x4779, 0x733e, 0xb4a0, 0x44c7, 0x57b6, 0x77d8, 0x0, 0x1);
        gbc.writeMem(0x4779, { 0xee, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x733e);
        EXPECT(gbc.pc(), 0x477b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01D7
        gbc.setState(0x1648, 0x88be, 0xa130, 0xce5e, 0x37c3, 0xfea2, 0x0, 0x0);
        gbc.writeMem(0x1648, { 0xee, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x88be);
        EXPECT(gbc.pc(), 0x164a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01D8
        gbc.setState(0x317, 0x3442, 0x6d70, 0xb339, 0x4c89, 0x3138, 0x0, 0x1);
        gbc.writeMem(0x317, { 0xee, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3442);
        EXPECT(gbc.pc(), 0x319);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01D9
        gbc.setState(0x6def, 0x1610, 0xc580, 0xf45, 0xa45d, 0xddd5, 0x1, 0x0);
        gbc.writeMem(0x6def, { 0xee, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1610);
        EXPECT(gbc.pc(), 0x6df1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01DA
        gbc.setState(0xd7ee, 0xe286, 0x5bb0, 0xbf0a, 0x19a0, 0x68cb, 0x0, 0x0);
        gbc.writeMem(0xd7ee, { 0xee, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe286);
        EXPECT(gbc.pc(), 0xd7f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7ee), 0xee);
        EXPECT(gbc.readMem(0xd7ef), 0x40);
        // EE 01DB
        gbc.setState(0x7f2f, 0xc423, 0xcf70, 0x3bb7, 0x8e33, 0x8228, 0x0, 0x1);
        gbc.writeMem(0x7f2f, { 0xee, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc423);
        EXPECT(gbc.pc(), 0x7f31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01DC
        gbc.setState(0x9bd1, 0x1528, 0xa60, 0xab6a, 0x8ca3, 0x27c, 0x1, 0x0);
        gbc.writeMem(0x9bd1, { 0xee, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1528);
        EXPECT(gbc.pc(), 0x9bd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bd1), 0xee);
        EXPECT(gbc.readMem(0x9bd2), 0x33);
        // EE 01DD
        gbc.setState(0xd6b6, 0xa4c4, 0x8450, 0x3910, 0x89fa, 0xc97, 0x1, 0x1);
        gbc.writeMem(0xd6b6, { 0xee, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa4c4);
        EXPECT(gbc.pc(), 0xd6b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6b6), 0xee);
        EXPECT(gbc.readMem(0xd6b7), 0x69);
        // EE 01DE
        gbc.setState(0x6ecf, 0x3c4b, 0x6bb0, 0x611d, 0x6dce, 0x7d2, 0x0, 0x1);
        gbc.writeMem(0x6ecf, { 0xee, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x3c4b);
        EXPECT(gbc.pc(), 0x6ed1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01DF
        gbc.setState(0xd360, 0xeb39, 0x3d60, 0x9dcf, 0xf675, 0x5979, 0x1, 0x1);
        gbc.writeMem(0xd360, { 0xee, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xeb39);
        EXPECT(gbc.pc(), 0xd362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd360), 0xee);
        EXPECT(gbc.readMem(0xd361), 0xd0);
        // EE 01E0
        gbc.setState(0x445f, 0xe601, 0x4db0, 0x6d6d, 0xa2b0, 0xacd5, 0x1, 0x0);
        gbc.writeMem(0x445f, { 0xee, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe601);
        EXPECT(gbc.pc(), 0x4461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01E1
        gbc.setState(0x9a0b, 0x5b3d, 0xcec0, 0xe59e, 0x5e8d, 0x1de, 0x0, 0x1);
        gbc.writeMem(0x9a0b, { 0xee, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x5b3d);
        EXPECT(gbc.pc(), 0x9a0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a0b), 0xee);
        EXPECT(gbc.readMem(0x9a0c), 0xa2);
        // EE 01E2
        gbc.setState(0x5612, 0x1b27, 0x2b80, 0xa7ce, 0x94e5, 0x5716, 0x0, 0x0);
        gbc.writeMem(0x5612, { 0xee, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1b27);
        EXPECT(gbc.pc(), 0x5614);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01E3
        gbc.setState(0xdd31, 0xc18c, 0xe150, 0xb7e2, 0xa09b, 0x594b, 0x0, 0x0);
        gbc.writeMem(0xdd31, { 0xee, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc18c);
        EXPECT(gbc.pc(), 0xdd33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd31), 0xee);
        EXPECT(gbc.readMem(0xdd32), 0x80);
        // EE 01E4
        gbc.setState(0x3122, 0xbe8d, 0xacc0, 0xc104, 0xfa01, 0x26f2, 0x0, 0x1);
        gbc.writeMem(0x3122, { 0xee, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xbe8d);
        EXPECT(gbc.pc(), 0x3124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01E5
        gbc.setState(0x15c9, 0x3442, 0xb8e0, 0xced8, 0x8dc, 0x6f31, 0x1, 0x1);
        gbc.writeMem(0x15c9, { 0xee, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3442);
        EXPECT(gbc.pc(), 0x15cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01E7
        gbc.setState(0x5955, 0x8116, 0x20a0, 0x30a2, 0xe5e9, 0x67b8, 0x0, 0x0);
        gbc.writeMem(0x5955, { 0xee, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x8116);
        EXPECT(gbc.pc(), 0x5957);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01E8
        gbc.setState(0xe675, 0xcb3c, 0xf050, 0xe12a, 0x2d20, 0xa386, 0x1, 0x1);
        gbc.writeMem(0xe675, { 0xee, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xcb3c);
        EXPECT(gbc.pc(), 0xe677);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe675), 0xee);
        EXPECT(gbc.readMem(0xe676), 0x8c);
        // EE 01E9
        gbc.setState(0xbf10, 0xe6d8, 0xdab0, 0xc302, 0x7731, 0xbc3d, 0x0, 0x1);
        gbc.writeMem(0xbf10, { 0xee, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe6d8);
        EXPECT(gbc.pc(), 0xbf12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf10), 0xee);
        EXPECT(gbc.readMem(0xbf11), 0xe4);
        // EE 01EA
        gbc.setState(0x2875, 0xf7e3, 0x47d0, 0x34f7, 0x7f4c, 0xc433, 0x0, 0x1);
        gbc.writeMem(0x2875, { 0xee, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf7e3);
        EXPECT(gbc.pc(), 0x2877);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01EB
        gbc.setState(0xa5a0, 0x6e12, 0x63a0, 0x96e5, 0x6cf4, 0xe0c5, 0x1, 0x1);
        gbc.writeMem(0xa5a0, { 0xee, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6e12);
        EXPECT(gbc.pc(), 0xa5a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5a0), 0xee);
        EXPECT(gbc.readMem(0xa5a1), 0x6e);
        // EE 01EC
        gbc.setState(0x2703, 0xb239, 0xe580, 0x69d, 0x95a6, 0x11c9, 0x1, 0x0);
        gbc.writeMem(0x2703, { 0xee, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb239);
        EXPECT(gbc.pc(), 0x2705);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01ED
        gbc.setState(0xa31a, 0x1600, 0x6a80, 0x9b, 0x6e13, 0xabc3, 0x1, 0x0);
        gbc.writeMem(0xa31a, { 0xee, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1600);
        EXPECT(gbc.pc(), 0xa31c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa31a), 0xee);
        EXPECT(gbc.readMem(0xa31b), 0xed);
        // EE 01EE
        gbc.setState(0x518c, 0x144c, 0xb110, 0xc3fd, 0xe9d7, 0x71a8, 0x1, 0x0);
        gbc.writeMem(0x518c, { 0xee, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x144c);
        EXPECT(gbc.pc(), 0x518e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01EF
        gbc.setState(0xacda, 0xc40f, 0xbef0, 0xe055, 0xd2f5, 0x8e07, 0x1, 0x1);
        gbc.writeMem(0xacda, { 0xee, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc40f);
        EXPECT(gbc.pc(), 0xacdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacda), 0xee);
        EXPECT(gbc.readMem(0xacdb), 0x8b);
        // EE 01F0
        gbc.setState(0x1309, 0x29a7, 0xed80, 0x8dc9, 0xfd83, 0x68c2, 0x0, 0x1);
        gbc.writeMem(0x1309, { 0xee, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x29a7);
        EXPECT(gbc.pc(), 0x130b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01F2
        gbc.setState(0xbb06, 0x7bd2, 0xe700, 0x609e, 0xcdaf, 0xb5b5, 0x1, 0x0);
        gbc.writeMem(0xbb06, { 0xee, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x7bd2);
        EXPECT(gbc.pc(), 0xbb08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb06), 0xee);
        EXPECT(gbc.readMem(0xbb07), 0x83);
        // EE 01F3
        gbc.setState(0xb5cf, 0xf3f4, 0xf00, 0x8e66, 0xb816, 0x697c, 0x0, 0x1);
        gbc.writeMem(0xb5cf, { 0xee, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf3f4);
        EXPECT(gbc.pc(), 0xb5d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5cf), 0xee);
        EXPECT(gbc.readMem(0xb5d0), 0xe6);
        // EE 01F4
        gbc.setState(0x666b, 0x58a8, 0x79a0, 0xb6e9, 0xd0d5, 0xf8a5, 0x1, 0x1);
        gbc.writeMem(0x666b, { 0xee, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x58a8);
        EXPECT(gbc.pc(), 0x666d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01F5
        gbc.setState(0xdc1d, 0xff95, 0xf660, 0x9afb, 0x981a, 0xc169, 0x1, 0x1);
        gbc.writeMem(0xdc1d, { 0xee, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xff95);
        EXPECT(gbc.pc(), 0xdc1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc1d), 0xee);
        EXPECT(gbc.readMem(0xdc1e), 0x31);
        // EE 01F6
        gbc.setState(0xcfcf, 0x604e, 0xc7c0, 0x66a6, 0x617d, 0xf493, 0x0, 0x1);
        gbc.writeMem(0xcfcf, { 0xee, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x604e);
        EXPECT(gbc.pc(), 0xcfd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfcf), 0xee);
        EXPECT(gbc.readMem(0xcfd0), 0x82);
        // EE 01F7
        gbc.setState(0x8447, 0xb3a9, 0x9950, 0x267d, 0xf064, 0x2018, 0x0, 0x0);
        gbc.writeMem(0x8447, { 0xee, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb3a9);
        EXPECT(gbc.pc(), 0x8449);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8447), 0xee);
        EXPECT(gbc.readMem(0x8448), 0x98);
        // EE 01F8
        gbc.setState(0x62c, 0x7fa6, 0xc200, 0x6449, 0x47f5, 0x6e7d, 0x1, 0x0);
        gbc.writeMem(0x62c, { 0xee, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7fa6);
        EXPECT(gbc.pc(), 0x62e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01F9
        gbc.setState(0x19e2, 0x4c4a, 0x55d0, 0x17c1, 0xf52d, 0x9973, 0x0, 0x0);
        gbc.writeMem(0x19e2, { 0xee, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4c4a);
        EXPECT(gbc.pc(), 0x19e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01FA
        gbc.setState(0x2b5d, 0xd8df, 0x5e40, 0xa9bb, 0xa116, 0x3828, 0x0, 0x1);
        gbc.writeMem(0x2b5d, { 0xee, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd8df);
        EXPECT(gbc.pc(), 0x2b5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01FB
        gbc.setState(0x3c0, 0x4e24, 0x6b10, 0x842c, 0x2fc, 0x8814, 0x1, 0x1);
        gbc.writeMem(0x3c0, { 0xee, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4e24);
        EXPECT(gbc.pc(), 0x3c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01FC
        gbc.setState(0x8c46, 0xfb99, 0x60c0, 0xb44e, 0x39ba, 0x4516, 0x1, 0x0);
        gbc.writeMem(0x8c46, { 0xee, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfb99);
        EXPECT(gbc.pc(), 0x8c48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c46), 0xee);
        EXPECT(gbc.readMem(0x8c47), 0xb7);
        // EE 01FD
        gbc.setState(0xb8e7, 0xdc29, 0x210, 0x7f8f, 0xc06f, 0x6f36, 0x0, 0x0);
        gbc.writeMem(0xb8e7, { 0xee, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xdc29);
        EXPECT(gbc.pc(), 0xb8e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8e7), 0xee);
        EXPECT(gbc.readMem(0xb8e8), 0x17);
        // EE 01FE
        gbc.setState(0xe9a, 0x30f4, 0xf360, 0x46ac, 0xe39b, 0x8cc6, 0x0, 0x1);
        gbc.writeMem(0xe9a, { 0xee, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x30f4);
        EXPECT(gbc.pc(), 0xe9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 01FF
        gbc.setState(0xca89, 0x34d7, 0x4d80, 0x5fa8, 0x8dce, 0x9701, 0x1, 0x1);
        gbc.writeMem(0xca89, { 0xee, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x34d7);
        EXPECT(gbc.pc(), 0xca8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca89), 0xee);
        EXPECT(gbc.readMem(0xca8a), 0x9b);
        // EE 0200
        gbc.setState(0xc171, 0x273f, 0xc570, 0x9ea4, 0x79d0, 0xba9c, 0x1, 0x0);
        gbc.writeMem(0xc171, { 0xee, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x273f);
        EXPECT(gbc.pc(), 0xc173);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc171), 0xee);
        EXPECT(gbc.readMem(0xc172), 0x5f);
        // EE 0201
        gbc.setState(0xb018, 0x57c2, 0x7b80, 0xd77b, 0x2d69, 0x68ba, 0x0, 0x1);
        gbc.writeMem(0xb018, { 0xee, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x57c2);
        EXPECT(gbc.pc(), 0xb01a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb018), 0xee);
        EXPECT(gbc.readMem(0xb019), 0xee);
        // EE 0202
        gbc.setState(0x319d, 0xd86c, 0xe880, 0x39d8, 0x314d, 0x6d5c, 0x0, 0x0);
        gbc.writeMem(0x319d, { 0xee, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd86c);
        EXPECT(gbc.pc(), 0x319f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0203
        gbc.setState(0x5cbf, 0xb4cb, 0xb720, 0xf34d, 0xf4e4, 0xc336, 0x0, 0x1);
        gbc.writeMem(0x5cbf, { 0xee, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb4cb);
        EXPECT(gbc.pc(), 0x5cc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0204
        gbc.setState(0x8ee8, 0xc4dd, 0x89f0, 0x38dc, 0xb86c, 0x541e, 0x0, 0x1);
        gbc.writeMem(0x8ee8, { 0xee, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc4dd);
        EXPECT(gbc.pc(), 0x8eea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ee8), 0xee);
        EXPECT(gbc.readMem(0x8ee9), 0xbe);
        // EE 0205
        gbc.setState(0xb4de, 0x10d3, 0xc590, 0xf607, 0xde32, 0x9863, 0x0, 0x1);
        gbc.writeMem(0xb4de, { 0xee, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x10d3);
        EXPECT(gbc.pc(), 0xb4e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4de), 0xee);
        EXPECT(gbc.readMem(0xb4df), 0xa2);
        // EE 0206
        gbc.setState(0x451f, 0xa14, 0x6fc0, 0xaeac, 0x84a9, 0x9b51, 0x0, 0x0);
        gbc.writeMem(0x451f, { 0xee, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa14);
        EXPECT(gbc.pc(), 0x4521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0207
        gbc.setState(0xe218, 0x15f1, 0x5d90, 0xa536, 0x6384, 0x1939, 0x0, 0x1);
        gbc.writeMem(0xe218, { 0xee, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x15f1);
        EXPECT(gbc.pc(), 0xe21a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe218), 0xee);
        EXPECT(gbc.readMem(0xe219), 0x3f);
        // EE 0208
        gbc.setState(0x2a18, 0xe8ac, 0x9530, 0x5c3e, 0x2fe6, 0x4800, 0x1, 0x1);
        gbc.writeMem(0x2a18, { 0xee, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe8ac);
        EXPECT(gbc.pc(), 0x2a1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0209
        gbc.setState(0x3920, 0x5c83, 0x1a70, 0xdbf5, 0x980, 0x72c2, 0x0, 0x0);
        gbc.writeMem(0x3920, { 0xee, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5c83);
        EXPECT(gbc.pc(), 0x3922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 020A
        gbc.setState(0x24b4, 0x1d89, 0xbf20, 0xd98c, 0x4620, 0x1d3, 0x1, 0x0);
        gbc.writeMem(0x24b4, { 0xee, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x1d89);
        EXPECT(gbc.pc(), 0x24b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 020B
        gbc.setState(0x372b, 0x33ef, 0xcdf0, 0xe6a1, 0xba91, 0xd4c2, 0x0, 0x1);
        gbc.writeMem(0x372b, { 0xee, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x33ef);
        EXPECT(gbc.pc(), 0x372d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 020C
        gbc.setState(0xa3ef, 0x4ff0, 0x5c40, 0x4c81, 0x27b, 0xa5af, 0x1, 0x0);
        gbc.writeMem(0xa3ef, { 0xee, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4ff0);
        EXPECT(gbc.pc(), 0xa3f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ef), 0xee);
        EXPECT(gbc.readMem(0xa3f0), 0x5e);
        // EE 020D
        gbc.setState(0xde97, 0xd999, 0x6ed0, 0x3945, 0xed28, 0xcd15, 0x0, 0x0);
        gbc.writeMem(0xde97, { 0xee, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd999);
        EXPECT(gbc.pc(), 0xde99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde97), 0xee);
        EXPECT(gbc.readMem(0xde98), 0x2b);
        // EE 020E
        gbc.setState(0x12a2, 0x857c, 0xe5b0, 0x5e6e, 0x9396, 0xe0d4, 0x0, 0x0);
        gbc.writeMem(0x12a2, { 0xee, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x857c);
        EXPECT(gbc.pc(), 0x12a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 020F
        gbc.setState(0x4ef5, 0xe109, 0x1800, 0xb500, 0xd8e8, 0xccc7, 0x1, 0x0);
        gbc.writeMem(0x4ef5, { 0xee, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe109);
        EXPECT(gbc.pc(), 0x4ef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0210
        gbc.setState(0x3266, 0x6040, 0xe650, 0xaf5b, 0x7780, 0x2a89, 0x1, 0x1);
        gbc.writeMem(0x3266, { 0xee, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6040);
        EXPECT(gbc.pc(), 0x3268);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0211
        gbc.setState(0x828b, 0x12f2, 0x7210, 0x3418, 0x2465, 0x5392, 0x1, 0x0);
        gbc.writeMem(0x828b, { 0xee, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x12f2);
        EXPECT(gbc.pc(), 0x828d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x828b), 0xee);
        EXPECT(gbc.readMem(0x828c), 0x4);
        // EE 0212
        gbc.setState(0xb733, 0xa9d1, 0x2460, 0xcc0d, 0xaf18, 0xc0b, 0x0, 0x1);
        gbc.writeMem(0xb733, { 0xee, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa9d1);
        EXPECT(gbc.pc(), 0xb735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb733), 0xee);
        EXPECT(gbc.readMem(0xb734), 0xea);
        // EE 0213
        gbc.setState(0xb5cb, 0x229b, 0x6390, 0x17ce, 0x81d5, 0x15a9, 0x1, 0x0);
        gbc.writeMem(0xb5cb, { 0xee, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x229b);
        EXPECT(gbc.pc(), 0xb5cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5cb), 0xee);
        EXPECT(gbc.readMem(0xb5cc), 0xbb);
        // EE 0214
        gbc.setState(0x4d4f, 0x15c5, 0x40b0, 0xfd2, 0x433b, 0xcb67, 0x1, 0x0);
        gbc.writeMem(0x4d4f, { 0xee, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x15c5);
        EXPECT(gbc.pc(), 0x4d51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0215
        gbc.setState(0xe21, 0x9853, 0xe000, 0xfb7f, 0xfd3e, 0xad43, 0x0, 0x1);
        gbc.writeMem(0xe21, { 0xee, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9853);
        EXPECT(gbc.pc(), 0xe23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0216
        gbc.setState(0xdcec, 0x4f8d, 0x6550, 0x265a, 0xef4b, 0x14dd, 0x1, 0x0);
        gbc.writeMem(0xdcec, { 0xee, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4f8d);
        EXPECT(gbc.pc(), 0xdcee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcec), 0xee);
        EXPECT(gbc.readMem(0xdced), 0x64);
        // EE 0217
        gbc.setState(0xac7e, 0x5cb9, 0x7180, 0x3c88, 0x2597, 0x95ef, 0x0, 0x0);
        gbc.writeMem(0xac7e, { 0xee, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5cb9);
        EXPECT(gbc.pc(), 0xac80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac7e), 0xee);
        EXPECT(gbc.readMem(0xac7f), 0x51);
        // EE 0219
        gbc.setState(0x3aef, 0x9119, 0x35d0, 0xa711, 0xb192, 0x19a8, 0x0, 0x1);
        gbc.writeMem(0x3aef, { 0xee, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x9119);
        EXPECT(gbc.pc(), 0x3af1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 021A
        gbc.setState(0xad59, 0xedcd, 0x3940, 0x6de3, 0xa15c, 0x2036, 0x1, 0x1);
        gbc.writeMem(0xad59, { 0xee, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xedcd);
        EXPECT(gbc.pc(), 0xad5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad59), 0xee);
        EXPECT(gbc.readMem(0xad5a), 0x6f);
        // EE 021B
        gbc.setState(0xb090, 0x1c8, 0x17f0, 0x9bc5, 0xbb83, 0x1a47, 0x1, 0x1);
        gbc.writeMem(0xb090, { 0xee, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x1c8);
        EXPECT(gbc.pc(), 0xb092);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb090), 0xee);
        EXPECT(gbc.readMem(0xb091), 0x80);
        // EE 021C
        gbc.setState(0x8d4a, 0xe221, 0xa480, 0x3747, 0x175, 0x7d42, 0x1, 0x0);
        gbc.writeMem(0x8d4a, { 0xee, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe221);
        EXPECT(gbc.pc(), 0x8d4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d4a), 0xee);
        EXPECT(gbc.readMem(0x8d4b), 0xf8);
        // EE 021D
        gbc.setState(0xe518, 0x6dfd, 0x8480, 0x6d24, 0x5c8d, 0x48fb, 0x1, 0x0);
        gbc.writeMem(0xe518, { 0xee, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6dfd);
        EXPECT(gbc.pc(), 0xe51a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe518), 0xee);
        EXPECT(gbc.readMem(0xe519), 0x70);
        // EE 021E
        gbc.setState(0x1fa8, 0xfe56, 0x5620, 0x47b9, 0x862a, 0x2d34, 0x0, 0x1);
        gbc.writeMem(0x1fa8, { 0xee, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xfe56);
        EXPECT(gbc.pc(), 0x1faa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 021F
        gbc.setState(0x579e, 0xbd37, 0x82d0, 0x644, 0xd7c2, 0xf38b, 0x0, 0x1);
        gbc.writeMem(0x579e, { 0xee, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xbd37);
        EXPECT(gbc.pc(), 0x57a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0220
        gbc.setState(0xe526, 0x27be, 0x50c0, 0x5b3e, 0x829e, 0x57a7, 0x1, 0x1);
        gbc.writeMem(0xe526, { 0xee, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x27be);
        EXPECT(gbc.pc(), 0xe528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe526), 0xee);
        EXPECT(gbc.readMem(0xe527), 0x11);
        // EE 0221
        gbc.setState(0x5c96, 0x9b75, 0x9050, 0xb38f, 0xafa7, 0xb755, 0x0, 0x1);
        gbc.writeMem(0x5c96, { 0xee, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9b75);
        EXPECT(gbc.pc(), 0x5c98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0222
        gbc.setState(0xc4bb, 0x9f52, 0x4f70, 0xec91, 0xd57b, 0x7adb, 0x1, 0x0);
        gbc.writeMem(0xc4bb, { 0xee, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9f52);
        EXPECT(gbc.pc(), 0xc4bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4bb), 0xee);
        EXPECT(gbc.readMem(0xc4bc), 0xaf);
        // EE 0223
        gbc.setState(0x4ebf, 0xffc8, 0x2e30, 0x3f20, 0x6bf0, 0x2c4f, 0x0, 0x1);
        gbc.writeMem(0x4ebf, { 0xee, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xffc8);
        EXPECT(gbc.pc(), 0x4ec1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0224
        gbc.setState(0x405c, 0xb34c, 0x5a80, 0xc9e, 0x7b59, 0xaef, 0x0, 0x1);
        gbc.writeMem(0x405c, { 0xee, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb34c);
        EXPECT(gbc.pc(), 0x405e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0225
        gbc.setState(0x463f, 0xb368, 0xfd70, 0xd368, 0xaf24, 0x2583, 0x1, 0x0);
        gbc.writeMem(0x463f, { 0xee, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xb368);
        EXPECT(gbc.pc(), 0x4641);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0226
        gbc.setState(0xd2bc, 0x3221, 0xb640, 0xb5e8, 0x763b, 0xbbca, 0x0, 0x1);
        gbc.writeMem(0xd2bc, { 0xee, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3221);
        EXPECT(gbc.pc(), 0xd2be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2bc), 0xee);
        EXPECT(gbc.readMem(0xd2bd), 0xea);
        // EE 0227
        gbc.setState(0x77ca, 0x30b7, 0xc000, 0xfcf2, 0x6b1c, 0x797b, 0x1, 0x0);
        gbc.writeMem(0x77ca, { 0xee, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x30b7);
        EXPECT(gbc.pc(), 0x77cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0228
        gbc.setState(0xe610, 0x4aae, 0x6960, 0xd1da, 0x55cf, 0xa98a, 0x0, 0x1);
        gbc.writeMem(0xe610, { 0xee, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4aae);
        EXPECT(gbc.pc(), 0xe612);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe610), 0xee);
        EXPECT(gbc.readMem(0xe611), 0x18);
        // EE 0229
        gbc.setState(0xb187, 0x4c84, 0x6d40, 0x604, 0xb75e, 0xb54a, 0x0, 0x1);
        gbc.writeMem(0xb187, { 0xee, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4c84);
        EXPECT(gbc.pc(), 0xb189);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb187), 0xee);
        EXPECT(gbc.readMem(0xb188), 0x30);
        // EE 022A
        gbc.setState(0x5ea, 0x6271, 0x90f0, 0x68f0, 0xec5e, 0xba53, 0x0, 0x1);
        gbc.writeMem(0x5ea, { 0xee, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x6271);
        EXPECT(gbc.pc(), 0x5ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 022B
        gbc.setState(0x64ee, 0x5be4, 0x2000, 0x1031, 0xf894, 0x1602, 0x1, 0x0);
        gbc.writeMem(0x64ee, { 0xee, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5be4);
        EXPECT(gbc.pc(), 0x64f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 022C
        gbc.setState(0x37e7, 0xa181, 0xaa0, 0x4ad9, 0x161a, 0x8daf, 0x1, 0x1);
        gbc.writeMem(0x37e7, { 0xee, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa181);
        EXPECT(gbc.pc(), 0x37e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 022D
        gbc.setState(0xddeb, 0x4a3f, 0x5db0, 0xfb2, 0x2d7b, 0xf37e, 0x1, 0x0);
        gbc.writeMem(0xddeb, { 0xee, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4a3f);
        EXPECT(gbc.pc(), 0xdded);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddeb), 0xee);
        EXPECT(gbc.readMem(0xddec), 0xa4);
        // EE 022E
        gbc.setState(0xb8d1, 0x5578, 0x3d40, 0x651b, 0xd79b, 0xba67, 0x1, 0x0);
        gbc.writeMem(0xb8d1, { 0xee, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5578);
        EXPECT(gbc.pc(), 0xb8d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8d1), 0xee);
        EXPECT(gbc.readMem(0xb8d2), 0x9e);
        // EE 022F
        gbc.setState(0x8d71, 0xbba9, 0xb7f0, 0x7477, 0x3de0, 0xdf7a, 0x0, 0x0);
        gbc.writeMem(0x8d71, { 0xee, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xbba9);
        EXPECT(gbc.pc(), 0x8d73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d71), 0xee);
        EXPECT(gbc.readMem(0x8d72), 0x4);
        // EE 0230
        gbc.setState(0x5967, 0xdf4d, 0xbd50, 0xfa32, 0x1a09, 0xae, 0x1, 0x1);
        gbc.writeMem(0x5967, { 0xee, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xdf4d);
        EXPECT(gbc.pc(), 0x5969);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0231
        gbc.setState(0x3222, 0x9a05, 0x9930, 0xbcb5, 0x3bd8, 0xa002, 0x1, 0x0);
        gbc.writeMem(0x3222, { 0xee, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9a05);
        EXPECT(gbc.pc(), 0x3224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0232
        gbc.setState(0x82c6, 0x88af, 0x4310, 0x8ea6, 0x25a2, 0x4f66, 0x1, 0x1);
        gbc.writeMem(0x82c6, { 0xee, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x88af);
        EXPECT(gbc.pc(), 0x82c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82c6), 0xee);
        EXPECT(gbc.readMem(0x82c7), 0xe2);
        // EE 0233
        gbc.setState(0x57be, 0xa8e9, 0xc850, 0x6f35, 0xd65b, 0x46b9, 0x1, 0x1);
        gbc.writeMem(0x57be, { 0xee, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa8e9);
        EXPECT(gbc.pc(), 0x57c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0234
        gbc.setState(0x9418, 0xda61, 0x1270, 0xae54, 0xd40b, 0x70cd, 0x0, 0x0);
        gbc.writeMem(0x9418, { 0xee, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xda61);
        EXPECT(gbc.pc(), 0x941a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9418), 0xee);
        EXPECT(gbc.readMem(0x9419), 0x1c);
        // EE 0236
        gbc.setState(0x397e, 0x1b6d, 0x8a30, 0xb140, 0x151e, 0xfb60, 0x1, 0x1);
        gbc.writeMem(0x397e, { 0xee, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1b6d);
        EXPECT(gbc.pc(), 0x3980);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0237
        gbc.setState(0x84a4, 0x573e, 0x3a10, 0xc22f, 0xe280, 0xc249, 0x1, 0x0);
        gbc.writeMem(0x84a4, { 0xee, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x573e);
        EXPECT(gbc.pc(), 0x84a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84a4), 0xee);
        EXPECT(gbc.readMem(0x84a5), 0xaf);
        // EE 0238
        gbc.setState(0x1df2, 0xe386, 0xcd50, 0x9e3e, 0xfb3d, 0x8d4f, 0x1, 0x1);
        gbc.writeMem(0x1df2, { 0xee, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe386);
        EXPECT(gbc.pc(), 0x1df4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0239
        gbc.setState(0x779, 0x1232, 0x3510, 0x5962, 0xf61d, 0xc664, 0x1, 0x1);
        gbc.writeMem(0x779, { 0xee, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x1232);
        EXPECT(gbc.pc(), 0x77b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 023A
        gbc.setState(0xb86c, 0x83d4, 0xa740, 0x16ed, 0xd95c, 0x80e7, 0x0, 0x0);
        gbc.writeMem(0xb86c, { 0xee, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x83d4);
        EXPECT(gbc.pc(), 0xb86e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb86c), 0xee);
        EXPECT(gbc.readMem(0xb86d), 0x28);
        // EE 023B
        gbc.setState(0xa1d9, 0x3dc8, 0xb490, 0xe69b, 0x6fe6, 0x85e2, 0x0, 0x0);
        gbc.writeMem(0xa1d9, { 0xee, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3dc8);
        EXPECT(gbc.pc(), 0xa1db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1d9), 0xee);
        EXPECT(gbc.readMem(0xa1da), 0x16);
        // EE 023C
        gbc.setState(0x4d08, 0xa65a, 0x5070, 0x8321, 0xb9e2, 0xa7e7, 0x1, 0x1);
        gbc.writeMem(0x4d08, { 0xee, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa65a);
        EXPECT(gbc.pc(), 0x4d0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 023D
        gbc.setState(0xc490, 0xb4a9, 0xfe40, 0xfc32, 0x1f3b, 0xbf19, 0x1, 0x1);
        gbc.writeMem(0xc490, { 0xee, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb4a9);
        EXPECT(gbc.pc(), 0xc492);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc490), 0xee);
        EXPECT(gbc.readMem(0xc491), 0x20);
        // EE 023E
        gbc.setState(0xd289, 0x12c1, 0xf690, 0xd913, 0x605a, 0x9a8d, 0x0, 0x0);
        gbc.writeMem(0xd289, { 0xee, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x12c1);
        EXPECT(gbc.pc(), 0xd28b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd289), 0xee);
        EXPECT(gbc.readMem(0xd28a), 0xcb);
        // EE 023F
        gbc.setState(0xa07c, 0x852f, 0x3f90, 0x4089, 0x49aa, 0x6f29, 0x1, 0x0);
        gbc.writeMem(0xa07c, { 0xee, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x852f);
        EXPECT(gbc.pc(), 0xa07e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa07c), 0xee);
        EXPECT(gbc.readMem(0xa07d), 0x91);
        // EE 0240
        gbc.setState(0xe5a, 0x84e4, 0xe6a0, 0x8e67, 0x8e79, 0x970a, 0x1, 0x0);
        gbc.writeMem(0xe5a, { 0xee, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x84e4);
        EXPECT(gbc.pc(), 0xe5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0241
        gbc.setState(0x2908, 0xe841, 0x3720, 0x7eb1, 0x4be6, 0xfaf7, 0x1, 0x1);
        gbc.writeMem(0x2908, { 0xee, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xe841);
        EXPECT(gbc.pc(), 0x290a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0243
        gbc.setState(0x4550, 0xda77, 0x3ed0, 0x770c, 0xed2e, 0xa7e1, 0x0, 0x1);
        gbc.writeMem(0x4550, { 0xee, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xda77);
        EXPECT(gbc.pc(), 0x4552);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0244
        gbc.setState(0xc61e, 0xf157, 0xd7c0, 0xdb98, 0xce76, 0xcbcf, 0x1, 0x0);
        gbc.writeMem(0xc61e, { 0xee, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf157);
        EXPECT(gbc.pc(), 0xc620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc61e), 0xee);
        EXPECT(gbc.readMem(0xc61f), 0x7b);
        // EE 0245
        gbc.setState(0x1f31, 0xaeb5, 0xf370, 0x7cae, 0x7b65, 0x4038, 0x1, 0x0);
        gbc.writeMem(0x1f31, { 0xee, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xaeb5);
        EXPECT(gbc.pc(), 0x1f33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0246
        gbc.setState(0x1182, 0xaa1c, 0xe260, 0x77af, 0x4248, 0xd96c, 0x0, 0x1);
        gbc.writeMem(0x1182, { 0xee, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xaa1c);
        EXPECT(gbc.pc(), 0x1184);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0247
        gbc.setState(0x415c, 0x65d6, 0xae10, 0xf75f, 0x598c, 0xee47, 0x0, 0x0);
        gbc.writeMem(0x415c, { 0xee, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x65d6);
        EXPECT(gbc.pc(), 0x415e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0248
        gbc.setState(0xe512, 0xbe00, 0x8f10, 0x4253, 0xa6ef, 0x82f7, 0x0, 0x1);
        gbc.writeMem(0xe512, { 0xee, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xbe00);
        EXPECT(gbc.pc(), 0xe514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe512), 0xee);
        EXPECT(gbc.readMem(0xe513), 0xbc);
        // EE 0249
        gbc.setState(0x5323, 0x179a, 0x71b0, 0x9142, 0x56fd, 0x3116, 0x1, 0x0);
        gbc.writeMem(0x5323, { 0xee, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x179a);
        EXPECT(gbc.pc(), 0x5325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 024A
        gbc.setState(0x9952, 0x2a4b, 0x64f0, 0xe757, 0x7ebb, 0xdbb8, 0x1, 0x0);
        gbc.writeMem(0x9952, { 0xee, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2a4b);
        EXPECT(gbc.pc(), 0x9954);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9952), 0xee);
        EXPECT(gbc.readMem(0x9953), 0xf2);
        // EE 024B
        gbc.setState(0x236b, 0xf79c, 0x5290, 0x51dd, 0x574c, 0x5312, 0x0, 0x0);
        gbc.writeMem(0x236b, { 0xee, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xf79c);
        EXPECT(gbc.pc(), 0x236d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 024C
        gbc.setState(0x8781, 0xbad8, 0x48d0, 0x361b, 0x3a89, 0x9d2e, 0x1, 0x1);
        gbc.writeMem(0x8781, { 0xee, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xbad8);
        EXPECT(gbc.pc(), 0x8783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8781), 0xee);
        EXPECT(gbc.readMem(0x8782), 0xa4);
        // EE 024D
        gbc.setState(0x3475, 0xb5d7, 0xe280, 0xc1aa, 0xf4d9, 0x1acf, 0x0, 0x1);
        gbc.writeMem(0x3475, { 0xee, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb5d7);
        EXPECT(gbc.pc(), 0x3477);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 024E
        gbc.setState(0x73e7, 0xe2a0, 0x2a30, 0x897a, 0x863c, 0xcfd8, 0x1, 0x0);
        gbc.writeMem(0x73e7, { 0xee, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe2a0);
        EXPECT(gbc.pc(), 0x73e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 024F
        gbc.setState(0x692b, 0x72e, 0xfa30, 0x7e2e, 0x4af9, 0xdd41, 0x1, 0x0);
        gbc.writeMem(0x692b, { 0xee, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x72e);
        EXPECT(gbc.pc(), 0x692d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0250
        gbc.setState(0x4e4b, 0x1642, 0x3e00, 0x8445, 0xe8e, 0xc593, 0x0, 0x0);
        gbc.writeMem(0x4e4b, { 0xee, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1642);
        EXPECT(gbc.pc(), 0x4e4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0251
        gbc.setState(0xd90e, 0xcfd8, 0xb210, 0xa938, 0x1d6b, 0xf49d, 0x0, 0x0);
        gbc.writeMem(0xd90e, { 0xee, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xcfd8);
        EXPECT(gbc.pc(), 0xd910);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd90e), 0xee);
        EXPECT(gbc.readMem(0xd90f), 0x43);
        // EE 0252
        gbc.setState(0x7e5a, 0x9700, 0xf210, 0xa35, 0x8f30, 0x6b4e, 0x1, 0x0);
        gbc.writeMem(0x7e5a, { 0xee, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9700);
        EXPECT(gbc.pc(), 0x7e5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0253
        gbc.setState(0x5172, 0xa11a, 0x6760, 0x1a44, 0x358b, 0x419b, 0x0, 0x0);
        gbc.writeMem(0x5172, { 0xee, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa11a);
        EXPECT(gbc.pc(), 0x5174);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0254
        gbc.setState(0xb125, 0x29a8, 0xce70, 0x2ae7, 0x546c, 0x3228, 0x1, 0x1);
        gbc.writeMem(0xb125, { 0xee, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x29a8);
        EXPECT(gbc.pc(), 0xb127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb125), 0xee);
        EXPECT(gbc.readMem(0xb126), 0x3c);
        // EE 0256
        gbc.setState(0xa719, 0x13f0, 0x3d0, 0xf98b, 0x7f2, 0xef15, 0x1, 0x1);
        gbc.writeMem(0xa719, { 0xee, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x13f0);
        EXPECT(gbc.pc(), 0xa71b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa719), 0xee);
        EXPECT(gbc.readMem(0xa71a), 0xc);
        // EE 0257
        gbc.setState(0xea5a, 0x3c1b, 0x8d00, 0x7dc6, 0xf44b, 0x6be0, 0x0, 0x0);
        gbc.writeMem(0xea5a, { 0xee, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3c1b);
        EXPECT(gbc.pc(), 0xea5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea5a), 0xee);
        EXPECT(gbc.readMem(0xea5b), 0xa9);
        // EE 0258
        gbc.setState(0x6e00, 0x34f1, 0xb690, 0xb3e4, 0x4da, 0x8c10, 0x1, 0x1);
        gbc.writeMem(0x6e00, { 0xee, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x34f1);
        EXPECT(gbc.pc(), 0x6e02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0259
        gbc.setState(0x3bbb, 0x989a, 0x1600, 0x17e5, 0xcbc5, 0x201b, 0x0, 0x0);
        gbc.writeMem(0x3bbb, { 0xee, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x989a);
        EXPECT(gbc.pc(), 0x3bbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 025A
        gbc.setState(0xb54f, 0x4643, 0x9c20, 0xd453, 0xcac7, 0xe55f, 0x0, 0x1);
        gbc.writeMem(0xb54f, { 0xee, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x4643);
        EXPECT(gbc.pc(), 0xb551);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb54f), 0xee);
        EXPECT(gbc.readMem(0xb550), 0x5);
        // EE 025B
        gbc.setState(0x771a, 0xac17, 0x6e10, 0x1688, 0x68d4, 0x71c2, 0x1, 0x0);
        gbc.writeMem(0x771a, { 0xee, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xac17);
        EXPECT(gbc.pc(), 0x771c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 025C
        gbc.setState(0x36de, 0x1c5, 0x5970, 0x21d6, 0xd6d8, 0xf1d2, 0x0, 0x0);
        gbc.writeMem(0x36de, { 0xee, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1c5);
        EXPECT(gbc.pc(), 0x36e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 025D
        gbc.setState(0xad7a, 0x78e3, 0xe4c0, 0xe434, 0xac3a, 0x8ef6, 0x1, 0x0);
        gbc.writeMem(0xad7a, { 0xee, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x78e3);
        EXPECT(gbc.pc(), 0xad7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad7a), 0xee);
        EXPECT(gbc.readMem(0xad7b), 0x1c);
        // EE 025E
        gbc.setState(0x2d7b, 0xf798, 0x4b10, 0x6a7f, 0x1b79, 0x62e2, 0x0, 0x0);
        gbc.writeMem(0x2d7b, { 0xee, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf798);
        EXPECT(gbc.pc(), 0x2d7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 025F
        gbc.setState(0x300d, 0x932e, 0x2c20, 0x97dd, 0xb766, 0xf905, 0x0, 0x1);
        gbc.writeMem(0x300d, { 0xee, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x932e);
        EXPECT(gbc.pc(), 0x300f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0260
        gbc.setState(0xee36, 0x6dc5, 0xfdc0, 0x58ad, 0x9ae0, 0xdb24, 0x0, 0x0);
        gbc.writeMem(0xee36, { 0xee, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x6dc5);
        EXPECT(gbc.pc(), 0xee38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee36), 0xee);
        EXPECT(gbc.readMem(0xee37), 0x60);
        // EE 0261
        gbc.setState(0x8e62, 0xe86, 0x4ea0, 0xe67b, 0x581b, 0xcf3c, 0x0, 0x0);
        gbc.writeMem(0x8e62, { 0xee, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe86);
        EXPECT(gbc.pc(), 0x8e64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e62), 0xee);
        EXPECT(gbc.readMem(0x8e63), 0x1f);
        // EE 0262
        gbc.setState(0xc1be, 0xec1d, 0x41c0, 0x45de, 0x9e75, 0xa232, 0x1, 0x0);
        gbc.writeMem(0xc1be, { 0xee, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xec1d);
        EXPECT(gbc.pc(), 0xc1c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1be), 0xee);
        EXPECT(gbc.readMem(0xc1bf), 0x97);
        // EE 0263
        gbc.setState(0x3174, 0x2504, 0x5f70, 0xcba1, 0x2845, 0x46c6, 0x1, 0x0);
        gbc.writeMem(0x3174, { 0xee, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x2504);
        EXPECT(gbc.pc(), 0x3176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0264
        gbc.setState(0x8cf3, 0x9f50, 0xe230, 0xbf5e, 0x5498, 0xb12, 0x0, 0x1);
        gbc.writeMem(0x8cf3, { 0xee, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9f50);
        EXPECT(gbc.pc(), 0x8cf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cf3), 0xee);
        EXPECT(gbc.readMem(0x8cf4), 0x19);
        // EE 0265
        gbc.setState(0x4a68, 0xb944, 0xd650, 0xc3d6, 0x1c57, 0x14f9, 0x1, 0x0);
        gbc.writeMem(0x4a68, { 0xee, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb944);
        EXPECT(gbc.pc(), 0x4a6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0266
        gbc.setState(0xb64f, 0xe522, 0xcda0, 0x24b1, 0xa7d6, 0x8164, 0x0, 0x1);
        gbc.writeMem(0xb64f, { 0xee, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe522);
        EXPECT(gbc.pc(), 0xb651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb64f), 0xee);
        EXPECT(gbc.readMem(0xb650), 0xf);
        // EE 0267
        gbc.setState(0x2c66, 0xfa56, 0xcd80, 0x9aa4, 0x3240, 0x2ae8, 0x0, 0x1);
        gbc.writeMem(0x2c66, { 0xee, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xfa56);
        EXPECT(gbc.pc(), 0x2c68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0268
        gbc.setState(0x152e, 0x9212, 0x9960, 0x87a5, 0xb0b3, 0x7aa, 0x0, 0x1);
        gbc.writeMem(0x152e, { 0xee, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x9212);
        EXPECT(gbc.pc(), 0x1530);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0269
        gbc.setState(0x4e9b, 0x99e5, 0x7ff0, 0x6223, 0x94e5, 0x4553, 0x0, 0x0);
        gbc.writeMem(0x4e9b, { 0xee, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x99e5);
        EXPECT(gbc.pc(), 0x4e9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 026A
        gbc.setState(0x3746, 0x6fa3, 0x4180, 0x2795, 0x34b, 0xe5d1, 0x0, 0x0);
        gbc.writeMem(0x3746, { 0xee, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6fa3);
        EXPECT(gbc.pc(), 0x3748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 026B
        gbc.setState(0xdfc2, 0x8ba5, 0xb3d0, 0x3f71, 0x11d0, 0x8675, 0x1, 0x1);
        gbc.writeMem(0xdfc2, { 0xee, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x8ba5);
        EXPECT(gbc.pc(), 0xdfc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfc2), 0xee);
        EXPECT(gbc.readMem(0xdfc3), 0xd5);
        // EE 026D
        gbc.setState(0x442d, 0x42bf, 0x20e0, 0xfefc, 0x4d92, 0x14bf, 0x0, 0x0);
        gbc.writeMem(0x442d, { 0xee, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x42bf);
        EXPECT(gbc.pc(), 0x442f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 026E
        gbc.setState(0xd799, 0x1fdf, 0x1ff0, 0x3756, 0x520f, 0x124f, 0x1, 0x0);
        gbc.writeMem(0xd799, { 0xee, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x1fdf);
        EXPECT(gbc.pc(), 0xd79b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd799), 0xee);
        EXPECT(gbc.readMem(0xd79a), 0x8f);
        // EE 026F
        gbc.setState(0xc91a, 0x3fb5, 0x15f0, 0xe924, 0xf7bc, 0xa5c9, 0x0, 0x1);
        gbc.writeMem(0xc91a, { 0xee, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3fb5);
        EXPECT(gbc.pc(), 0xc91c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc91a), 0xee);
        EXPECT(gbc.readMem(0xc91b), 0x83);
        // EE 0270
        gbc.setState(0x2c73, 0x6443, 0x7a0, 0x6859, 0xda65, 0x1369, 0x0, 0x0);
        gbc.writeMem(0x2c73, { 0xee, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x6443);
        EXPECT(gbc.pc(), 0x2c75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0271
        gbc.setState(0x93bf, 0xb578, 0x8460, 0x8643, 0x92cc, 0x90de, 0x0, 0x1);
        gbc.writeMem(0x93bf, { 0xee, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb578);
        EXPECT(gbc.pc(), 0x93c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93bf), 0xee);
        EXPECT(gbc.readMem(0x93c0), 0xeb);
        // EE 0272
        gbc.setState(0xb61a, 0xc321, 0xe870, 0x6505, 0x35b1, 0xbf90, 0x1, 0x1);
        gbc.writeMem(0xb61a, { 0xee, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc321);
        EXPECT(gbc.pc(), 0xb61c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb61a), 0xee);
        EXPECT(gbc.readMem(0xb61b), 0xa5);
        // EE 0273
        gbc.setState(0xab53, 0x976f, 0x30f0, 0xe4ae, 0x5948, 0xb8c9, 0x1, 0x1);
        gbc.writeMem(0xab53, { 0xee, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x976f);
        EXPECT(gbc.pc(), 0xab55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab53), 0xee);
        EXPECT(gbc.readMem(0xab54), 0xb1);
        // EE 0274
        gbc.setState(0x50a3, 0x9eb0, 0x9000, 0x8f82, 0xf16d, 0xe8b3, 0x0, 0x0);
        gbc.writeMem(0x50a3, { 0xee, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9eb0);
        EXPECT(gbc.pc(), 0x50a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0275
        gbc.setState(0x9864, 0x3e47, 0x9ea0, 0x3edb, 0x9788, 0xc832, 0x1, 0x0);
        gbc.writeMem(0x9864, { 0xee, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x3e47);
        EXPECT(gbc.pc(), 0x9866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9864), 0xee);
        EXPECT(gbc.readMem(0x9865), 0x47);
        // EE 0276
        gbc.setState(0xcbde, 0xaf56, 0xb040, 0x30ef, 0xe052, 0x1645, 0x1, 0x0);
        gbc.writeMem(0xcbde, { 0xee, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xaf56);
        EXPECT(gbc.pc(), 0xcbe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbde), 0xee);
        EXPECT(gbc.readMem(0xcbdf), 0xcf);
        // EE 0277
        gbc.setState(0x3a84, 0xc38a, 0x9650, 0x149d, 0x3d8f, 0xdc40, 0x1, 0x0);
        gbc.writeMem(0x3a84, { 0xee, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc38a);
        EXPECT(gbc.pc(), 0x3a86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0278
        gbc.setState(0xaf70, 0xf516, 0x5340, 0x393c, 0x37c3, 0x4e9d, 0x1, 0x1);
        gbc.writeMem(0xaf70, { 0xee, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf516);
        EXPECT(gbc.pc(), 0xaf72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf70), 0xee);
        EXPECT(gbc.readMem(0xaf71), 0x4e);
        // EE 0279
        gbc.setState(0x926d, 0x3c84, 0x5ff0, 0xf386, 0xaca0, 0x3ef3, 0x1, 0x1);
        gbc.writeMem(0x926d, { 0xee, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3c84);
        EXPECT(gbc.pc(), 0x926f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x926d), 0xee);
        EXPECT(gbc.readMem(0x926e), 0x44);
        // EE 027A
        gbc.setState(0xff2, 0x2bc9, 0x6d10, 0x994f, 0xc506, 0x9d29, 0x0, 0x1);
        gbc.writeMem(0xff2, { 0xee, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2bc9);
        EXPECT(gbc.pc(), 0xff4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 027B
        gbc.setState(0x68e1, 0xc886, 0xec90, 0xc403, 0x2bc3, 0x60f3, 0x0, 0x0);
        gbc.writeMem(0x68e1, { 0xee, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc886);
        EXPECT(gbc.pc(), 0x68e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 027C
        gbc.setState(0x94f9, 0x254e, 0x190, 0x93a7, 0xb0a0, 0x87b6, 0x0, 0x1);
        gbc.writeMem(0x94f9, { 0xee, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x254e);
        EXPECT(gbc.pc(), 0x94fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94f9), 0xee);
        EXPECT(gbc.readMem(0x94fa), 0xeb);
        // EE 027D
        gbc.setState(0xe84f, 0xeda1, 0x3ec0, 0x700a, 0xfcb, 0xd955, 0x0, 0x1);
        gbc.writeMem(0xe84f, { 0xee, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xeda1);
        EXPECT(gbc.pc(), 0xe851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe84f), 0xee);
        EXPECT(gbc.readMem(0xe850), 0x51);
        // EE 027E
        gbc.setState(0x60d6, 0x53da, 0xc330, 0x7b2a, 0xb658, 0x2cb4, 0x1, 0x0);
        gbc.writeMem(0x60d6, { 0xee, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x53da);
        EXPECT(gbc.pc(), 0x60d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 027F
        gbc.setState(0xc48c, 0x57c7, 0x3740, 0x48cb, 0xa81d, 0x6e21, 0x0, 0x0);
        gbc.writeMem(0xc48c, { 0xee, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x57c7);
        EXPECT(gbc.pc(), 0xc48e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc48c), 0xee);
        EXPECT(gbc.readMem(0xc48d), 0x78);
        // EE 0280
        gbc.setState(0x9ae3, 0xdda3, 0x5890, 0xcc39, 0x6a7e, 0x6918, 0x0, 0x1);
        gbc.writeMem(0x9ae3, { 0xee, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xdda3);
        EXPECT(gbc.pc(), 0x9ae5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ae3), 0xee);
        EXPECT(gbc.readMem(0x9ae4), 0x55);
        // EE 0281
        gbc.setState(0x145f, 0xb5f2, 0xd70, 0x95d3, 0xf26e, 0x8eeb, 0x1, 0x1);
        gbc.writeMem(0x145f, { 0xee, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb5f2);
        EXPECT(gbc.pc(), 0x1461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0282
        gbc.setState(0x5672, 0xfcb5, 0xef0, 0x9e6d, 0xf873, 0x358f, 0x1, 0x0);
        gbc.writeMem(0x5672, { 0xee, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xfcb5);
        EXPECT(gbc.pc(), 0x5674);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0283
        gbc.setState(0x756e, 0xbfb9, 0x53b0, 0x975e, 0xd7e7, 0xc6a6, 0x0, 0x0);
        gbc.writeMem(0x756e, { 0xee, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xbfb9);
        EXPECT(gbc.pc(), 0x7570);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0284
        gbc.setState(0xba15, 0xc330, 0xb440, 0xbd53, 0x6238, 0x2775, 0x1, 0x0);
        gbc.writeMem(0xba15, { 0xee, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc330);
        EXPECT(gbc.pc(), 0xba17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba15), 0xee);
        EXPECT(gbc.readMem(0xba16), 0x79);
        // EE 0285
        gbc.setState(0xe21a, 0xdad0, 0xd540, 0xc3fd, 0x39f2, 0xa548, 0x0, 0x1);
        gbc.writeMem(0xe21a, { 0xee, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xdad0);
        EXPECT(gbc.pc(), 0xe21c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe21a), 0xee);
        EXPECT(gbc.readMem(0xe21b), 0xa4);
        // EE 0287
        gbc.setState(0x165a, 0xf80e, 0x6a30, 0x8066, 0x8f4e, 0x6699, 0x1, 0x0);
        gbc.writeMem(0x165a, { 0xee, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf80e);
        EXPECT(gbc.pc(), 0x165c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0288
        gbc.setState(0xe9d8, 0x1a97, 0xb200, 0x51db, 0x306c, 0xdf50, 0x1, 0x1);
        gbc.writeMem(0xe9d8, { 0xee, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1a97);
        EXPECT(gbc.pc(), 0xe9da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9d8), 0xee);
        EXPECT(gbc.readMem(0xe9d9), 0x2c);
        // EE 0289
        gbc.setState(0x88b5, 0xd76f, 0xc9b0, 0x9746, 0xa5aa, 0x39f8, 0x0, 0x0);
        gbc.writeMem(0x88b5, { 0xee, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd76f);
        EXPECT(gbc.pc(), 0x88b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88b5), 0xee);
        EXPECT(gbc.readMem(0x88b6), 0xbe);
        // EE 028A
        gbc.setState(0x8ace, 0xa00c, 0xabe0, 0xf6ff, 0x399c, 0x3b40, 0x0, 0x0);
        gbc.writeMem(0x8ace, { 0xee, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa00c);
        EXPECT(gbc.pc(), 0x8ad0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ace), 0xee);
        EXPECT(gbc.readMem(0x8acf), 0x10);
        // EE 028B
        gbc.setState(0x497d, 0x1d7d, 0x3550, 0x61af, 0xb36, 0xb10a, 0x1, 0x1);
        gbc.writeMem(0x497d, { 0xee, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x1d7d);
        EXPECT(gbc.pc(), 0x497f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 028C
        gbc.setState(0x5911, 0xae7d, 0x77b0, 0xe719, 0xf310, 0x7a19, 0x1, 0x0);
        gbc.writeMem(0x5911, { 0xee, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xae7d);
        EXPECT(gbc.pc(), 0x5913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 028D
        gbc.setState(0x2854, 0xfa89, 0x9ea0, 0xd74e, 0x5871, 0x2049, 0x1, 0x0);
        gbc.writeMem(0x2854, { 0xee, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xfa89);
        EXPECT(gbc.pc(), 0x2856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 028E
        gbc.setState(0xc39e, 0x5d62, 0x8e60, 0xaafb, 0xe9e6, 0xa61c, 0x1, 0x1);
        gbc.writeMem(0xc39e, { 0xee, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5d62);
        EXPECT(gbc.pc(), 0xc3a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc39e), 0xee);
        EXPECT(gbc.readMem(0xc39f), 0xd8);
        // EE 028F
        gbc.setState(0x2b09, 0xb915, 0xa910, 0xd494, 0x8e3f, 0xd78, 0x0, 0x0);
        gbc.writeMem(0x2b09, { 0xee, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb915);
        EXPECT(gbc.pc(), 0x2b0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0290
        gbc.setState(0x29b0, 0xbec7, 0xf600, 0x9709, 0x6ece, 0x841c, 0x1, 0x0);
        gbc.writeMem(0x29b0, { 0xee, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xbec7);
        EXPECT(gbc.pc(), 0x29b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0291
        gbc.setState(0x133f, 0x8948, 0x93f0, 0x633e, 0x6d5d, 0xf902, 0x0, 0x0);
        gbc.writeMem(0x133f, { 0xee, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8948);
        EXPECT(gbc.pc(), 0x1341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0292
        gbc.setState(0x630c, 0x9a01, 0xa70, 0xc82e, 0x9dc7, 0xe902, 0x1, 0x0);
        gbc.writeMem(0x630c, { 0xee, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9a01);
        EXPECT(gbc.pc(), 0x630e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0293
        gbc.setState(0xc02, 0x2bc4, 0xf1f0, 0xeb6c, 0x7ade, 0xe7fc, 0x1, 0x1);
        gbc.writeMem(0xc02, { 0xee, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2bc4);
        EXPECT(gbc.pc(), 0xc04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0294
        gbc.setState(0x8dca, 0x5bd9, 0x990, 0x9017, 0x54c2, 0x7132, 0x1, 0x0);
        gbc.writeMem(0x8dca, { 0xee, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5bd9);
        EXPECT(gbc.pc(), 0x8dcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dca), 0xee);
        EXPECT(gbc.readMem(0x8dcb), 0x8f);
        // EE 0295
        gbc.setState(0x51de, 0x8961, 0x770, 0x82c3, 0xafa2, 0xcb21, 0x0, 0x1);
        gbc.writeMem(0x51de, { 0xee, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8961);
        EXPECT(gbc.pc(), 0x51e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0296
        gbc.setState(0xa838, 0x8eff, 0x9ea0, 0xe531, 0x9139, 0x5216, 0x1, 0x0);
        gbc.writeMem(0xa838, { 0xee, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8eff);
        EXPECT(gbc.pc(), 0xa83a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa838), 0xee);
        EXPECT(gbc.readMem(0xa839), 0xe6);
        // EE 0297
        gbc.setState(0x4ed5, 0x4fa0, 0x3700, 0x5dc4, 0x7cc2, 0x95e0, 0x0, 0x0);
        gbc.writeMem(0x4ed5, { 0xee, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4fa0);
        EXPECT(gbc.pc(), 0x4ed7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0298
        gbc.setState(0x60e5, 0x2bb8, 0x1660, 0xd644, 0x1db9, 0x958b, 0x0, 0x0);
        gbc.writeMem(0x60e5, { 0xee, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2bb8);
        EXPECT(gbc.pc(), 0x60e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0299
        gbc.setState(0x1c2, 0x12f2, 0x6f70, 0xf09d, 0xa815, 0x7146, 0x0, 0x0);
        gbc.writeMem(0x1c2, { 0xee, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x12f2);
        EXPECT(gbc.pc(), 0x1c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 029A
        gbc.setState(0x8509, 0x317f, 0x66d0, 0x3c0e, 0x2919, 0xb7dd, 0x1, 0x0);
        gbc.writeMem(0x8509, { 0xee, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x317f);
        EXPECT(gbc.pc(), 0x850b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8509), 0xee);
        EXPECT(gbc.readMem(0x850a), 0x92);
        // EE 029B
        gbc.setState(0xd67d, 0x709e, 0xef80, 0xf203, 0x1a7f, 0xe5ae, 0x0, 0x0);
        gbc.writeMem(0xd67d, { 0xee, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x709e);
        EXPECT(gbc.pc(), 0xd67f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd67d), 0xee);
        EXPECT(gbc.readMem(0xd67e), 0x2a);
        // EE 029C
        gbc.setState(0x5f3e, 0x86fd, 0x96e0, 0xde11, 0x832, 0xaed0, 0x1, 0x0);
        gbc.writeMem(0x5f3e, { 0xee, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x86fd);
        EXPECT(gbc.pc(), 0x5f40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 029D
        gbc.setState(0x1aa1, 0x1eb1, 0xd340, 0x964b, 0x408a, 0xad3b, 0x1, 0x0);
        gbc.writeMem(0x1aa1, { 0xee, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1eb1);
        EXPECT(gbc.pc(), 0x1aa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 029F
        gbc.setState(0x1da6, 0x998f, 0x9190, 0x853c, 0xb986, 0xa7f6, 0x0, 0x1);
        gbc.writeMem(0x1da6, { 0xee, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x998f);
        EXPECT(gbc.pc(), 0x1da8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02A0
        gbc.setState(0x7f7a, 0x19b6, 0xee90, 0x6ec6, 0x14c6, 0xef4d, 0x0, 0x0);
        gbc.writeMem(0x7f7a, { 0xee, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x19b6);
        EXPECT(gbc.pc(), 0x7f7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02A1
        gbc.setState(0xc712, 0x131a, 0xe480, 0xbea4, 0x9ce2, 0x710b, 0x0, 0x1);
        gbc.writeMem(0xc712, { 0xee, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x131a);
        EXPECT(gbc.pc(), 0xc714);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc712), 0xee);
        EXPECT(gbc.readMem(0xc713), 0xbe);
        // EE 02A2
        gbc.setState(0x8154, 0xc499, 0xb2d0, 0xffe7, 0x3672, 0x8204, 0x0, 0x0);
        gbc.writeMem(0x8154, { 0xee, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xc499);
        EXPECT(gbc.pc(), 0x8156);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8154), 0xee);
        EXPECT(gbc.readMem(0x8155), 0x67);
        // EE 02A3
        gbc.setState(0x43dc, 0xac99, 0x1f0, 0x3582, 0x3c76, 0x693a, 0x0, 0x0);
        gbc.writeMem(0x43dc, { 0xee, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xac99);
        EXPECT(gbc.pc(), 0x43de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02A4
        gbc.setState(0x8ff7, 0x5723, 0x8980, 0x1910, 0x10d8, 0xe6c7, 0x1, 0x1);
        gbc.writeMem(0x8ff7, { 0xee, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x5723);
        EXPECT(gbc.pc(), 0x8ff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ff7), 0xee);
        EXPECT(gbc.readMem(0x8ff8), 0x36);
        // EE 02A5
        gbc.setState(0xce21, 0x7667, 0x1200, 0x8039, 0x9e96, 0x9c71, 0x0, 0x1);
        gbc.writeMem(0xce21, { 0xee, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7667);
        EXPECT(gbc.pc(), 0xce23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce21), 0xee);
        EXPECT(gbc.readMem(0xce22), 0xbf);
        // EE 02A6
        gbc.setState(0xab4, 0x7906, 0x70d0, 0x4dbf, 0x3d28, 0x77ae, 0x1, 0x1);
        gbc.writeMem(0xab4, { 0xee, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7906);
        EXPECT(gbc.pc(), 0xab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02A7
        gbc.setState(0xd299, 0xd33b, 0x1240, 0x953d, 0x71a8, 0x5896, 0x1, 0x1);
        gbc.writeMem(0xd299, { 0xee, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd33b);
        EXPECT(gbc.pc(), 0xd29b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd299), 0xee);
        EXPECT(gbc.readMem(0xd29a), 0x84);
        // EE 02A8
        gbc.setState(0x3645, 0x8484, 0xd750, 0xed50, 0xe749, 0xd16e, 0x1, 0x0);
        gbc.writeMem(0x3645, { 0xee, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8484);
        EXPECT(gbc.pc(), 0x3647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02A9
        gbc.setState(0xe3bb, 0xd494, 0x2700, 0x3020, 0x9da6, 0x775f, 0x1, 0x1);
        gbc.writeMem(0xe3bb, { 0xee, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd494);
        EXPECT(gbc.pc(), 0xe3bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3bb), 0xee);
        EXPECT(gbc.readMem(0xe3bc), 0x82);
        // EE 02AA
        gbc.setState(0x2dfa, 0x936b, 0x86d0, 0x7c9d, 0xafc5, 0xb99a, 0x1, 0x1);
        gbc.writeMem(0x2dfa, { 0xee, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x936b);
        EXPECT(gbc.pc(), 0x2dfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02AB
        gbc.setState(0x5fca, 0x575, 0xdc60, 0x4267, 0x4f3a, 0x27a0, 0x0, 0x0);
        gbc.writeMem(0x5fca, { 0xee, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x575);
        EXPECT(gbc.pc(), 0x5fcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02AC
        gbc.setState(0x969e, 0xdcf7, 0xf910, 0x8baf, 0x74e3, 0xd299, 0x0, 0x0);
        gbc.writeMem(0x969e, { 0xee, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xdcf7);
        EXPECT(gbc.pc(), 0x96a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x969e), 0xee);
        EXPECT(gbc.readMem(0x969f), 0xde);
        // EE 02AD
        gbc.setState(0x7d39, 0x24ee, 0x1570, 0x797b, 0x830f, 0x8d3b, 0x0, 0x0);
        gbc.writeMem(0x7d39, { 0xee, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x24ee);
        EXPECT(gbc.pc(), 0x7d3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02AE
        gbc.setState(0xa957, 0xc846, 0x6ac0, 0x6dcb, 0x5e84, 0xbe5b, 0x0, 0x1);
        gbc.writeMem(0xa957, { 0xee, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc846);
        EXPECT(gbc.pc(), 0xa959);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa957), 0xee);
        EXPECT(gbc.readMem(0xa958), 0xc0);
        // EE 02AF
        gbc.setState(0x31ed, 0x2797, 0xdb00, 0xb2ef, 0x8af1, 0x5809, 0x1, 0x0);
        gbc.writeMem(0x31ed, { 0xee, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2797);
        EXPECT(gbc.pc(), 0x31ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02B0
        gbc.setState(0xb287, 0x6817, 0x3a20, 0xc01f, 0x756d, 0xbaf9, 0x1, 0x1);
        gbc.writeMem(0xb287, { 0xee, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6817);
        EXPECT(gbc.pc(), 0xb289);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb287), 0xee);
        EXPECT(gbc.readMem(0xb288), 0xf2);
        // EE 02B1
        gbc.setState(0xd76f, 0x23b7, 0x1130, 0x1eed, 0xeedd, 0xf437, 0x0, 0x1);
        gbc.writeMem(0xd76f, { 0xee, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x23b7);
        EXPECT(gbc.pc(), 0xd771);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd76f), 0xee);
        EXPECT(gbc.readMem(0xd770), 0x1a);
        // EE 02B2
        gbc.setState(0xacae, 0x754, 0xed50, 0x1814, 0xf73c, 0xdb05, 0x0, 0x1);
        gbc.writeMem(0xacae, { 0xee, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x754);
        EXPECT(gbc.pc(), 0xacb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacae), 0xee);
        EXPECT(gbc.readMem(0xacaf), 0x1c);
        // EE 02B3
        gbc.setState(0xe923, 0x3a41, 0x7fe0, 0xbacc, 0xcf2, 0x85f7, 0x0, 0x0);
        gbc.writeMem(0xe923, { 0xee, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3a41);
        EXPECT(gbc.pc(), 0xe925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe923), 0xee);
        EXPECT(gbc.readMem(0xe924), 0xba);
        // EE 02B4
        gbc.setState(0x3349, 0x8f33, 0x7ae0, 0xf8f3, 0xa692, 0xf361, 0x1, 0x0);
        gbc.writeMem(0x3349, { 0xee, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8f33);
        EXPECT(gbc.pc(), 0x334b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02B5
        gbc.setState(0x5d57, 0xd4b3, 0x8fb0, 0x7b70, 0xe190, 0xcf9d, 0x1, 0x1);
        gbc.writeMem(0x5d57, { 0xee, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd4b3);
        EXPECT(gbc.pc(), 0x5d59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02B6
        gbc.setState(0x4eba, 0x6982, 0xa490, 0x5fb7, 0xf50d, 0x80fd, 0x0, 0x1);
        gbc.writeMem(0x4eba, { 0xee, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6982);
        EXPECT(gbc.pc(), 0x4ebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02B7
        gbc.setState(0xc587, 0xfb8d, 0x8ae0, 0x41f3, 0x8cbd, 0x4c13, 0x1, 0x0);
        gbc.writeMem(0xc587, { 0xee, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xfb8d);
        EXPECT(gbc.pc(), 0xc589);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc587), 0xee);
        EXPECT(gbc.readMem(0xc588), 0xe6);
        // EE 02B8
        gbc.setState(0x9b87, 0x1ecb, 0x53f0, 0x82d1, 0x96a7, 0x962e, 0x0, 0x0);
        gbc.writeMem(0x9b87, { 0xee, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1ecb);
        EXPECT(gbc.pc(), 0x9b89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b87), 0xee);
        EXPECT(gbc.readMem(0x9b88), 0x1);
        // EE 02B9
        gbc.setState(0x54f7, 0x4442, 0x8570, 0x8998, 0xffb1, 0xed8c, 0x0, 0x1);
        gbc.writeMem(0x54f7, { 0xee, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4442);
        EXPECT(gbc.pc(), 0x54f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02BA
        gbc.setState(0x50f6, 0x476c, 0xd6e0, 0xbcdd, 0x390a, 0xc95e, 0x1, 0x1);
        gbc.writeMem(0x50f6, { 0xee, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x476c);
        EXPECT(gbc.pc(), 0x50f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02BC
        gbc.setState(0xe115, 0x5b89, 0xb930, 0xd83e, 0x86c6, 0xa36e, 0x0, 0x0);
        gbc.writeMem(0xe115, { 0xee, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5b89);
        EXPECT(gbc.pc(), 0xe117);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe115), 0xee);
        EXPECT(gbc.readMem(0xe116), 0x8e);
        // EE 02BD
        gbc.setState(0xc9e1, 0xb63b, 0x28f0, 0x1f4b, 0xac69, 0x205a, 0x1, 0x1);
        gbc.writeMem(0xc9e1, { 0xee, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb63b);
        EXPECT(gbc.pc(), 0xc9e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9e1), 0xee);
        EXPECT(gbc.readMem(0xc9e2), 0x56);
        // EE 02BE
        gbc.setState(0xc95c, 0x96f8, 0x8a80, 0xb4e9, 0x809a, 0xaf99, 0x0, 0x0);
        gbc.writeMem(0xc95c, { 0xee, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x96f8);
        EXPECT(gbc.pc(), 0xc95e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc95c), 0xee);
        EXPECT(gbc.readMem(0xc95d), 0xd4);
        // EE 02BF
        gbc.setState(0x297f, 0xda22, 0xecd0, 0xd035, 0x77af, 0xfa50, 0x1, 0x0);
        gbc.writeMem(0x297f, { 0xee, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xda22);
        EXPECT(gbc.pc(), 0x2981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02C0
        gbc.setState(0x63bb, 0x2965, 0xda80, 0x6e4e, 0xe5a7, 0x64f7, 0x0, 0x1);
        gbc.writeMem(0x63bb, { 0xee, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x2965);
        EXPECT(gbc.pc(), 0x63bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02C1
        gbc.setState(0x3ed9, 0x8978, 0xcd80, 0xbb33, 0xeaf3, 0x21e9, 0x0, 0x0);
        gbc.writeMem(0x3ed9, { 0xee, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x8978);
        EXPECT(gbc.pc(), 0x3edb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02C2
        gbc.setState(0xc5e0, 0x6279, 0x2290, 0xefe5, 0x3908, 0xc849, 0x0, 0x0);
        gbc.writeMem(0xc5e0, { 0xee, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6279);
        EXPECT(gbc.pc(), 0xc5e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5e0), 0xee);
        EXPECT(gbc.readMem(0xc5e1), 0x87);
        // EE 02C3
        gbc.setState(0x1c88, 0x7224, 0x9030, 0x4610, 0x9069, 0x9289, 0x0, 0x1);
        gbc.writeMem(0x1c88, { 0xee, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7224);
        EXPECT(gbc.pc(), 0x1c8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02C4
        gbc.setState(0xa68, 0xfc22, 0x8260, 0xa548, 0xe64b, 0xa2c0, 0x1, 0x0);
        gbc.writeMem(0xa68, { 0xee, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xfc22);
        EXPECT(gbc.pc(), 0xa6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02C5
        gbc.setState(0xd4a2, 0x72da, 0x9ef0, 0x2b76, 0x10e6, 0x4ea5, 0x1, 0x1);
        gbc.writeMem(0xd4a2, { 0xee, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x72da);
        EXPECT(gbc.pc(), 0xd4a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4a2), 0xee);
        EXPECT(gbc.readMem(0xd4a3), 0x5c);
        // EE 02C6
        gbc.setState(0x7b6, 0x4e4, 0x8cf0, 0x25f, 0x5fe0, 0xc7e5, 0x0, 0x1);
        gbc.writeMem(0x7b6, { 0xee, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4e4);
        EXPECT(gbc.pc(), 0x7b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02C7
        gbc.setState(0x6393, 0xa094, 0xe6d0, 0x8e3b, 0x8f97, 0xae10, 0x0, 0x1);
        gbc.writeMem(0x6393, { 0xee, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa094);
        EXPECT(gbc.pc(), 0x6395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02C8
        gbc.setState(0x4bd3, 0xb914, 0x53a0, 0xaa5c, 0x4550, 0x5942, 0x0, 0x0);
        gbc.writeMem(0x4bd3, { 0xee, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb914);
        EXPECT(gbc.pc(), 0x4bd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02C9
        gbc.setState(0x2b1e, 0xccf7, 0xa950, 0xb39e, 0x327f, 0xdb31, 0x1, 0x1);
        gbc.writeMem(0x2b1e, { 0xee, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xccf7);
        EXPECT(gbc.pc(), 0x2b20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02CA
        gbc.setState(0x213e, 0x8f71, 0x6b20, 0x1159, 0x328c, 0xf072, 0x0, 0x1);
        gbc.writeMem(0x213e, { 0xee, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8f71);
        EXPECT(gbc.pc(), 0x2140);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02CB
        gbc.setState(0x5ece, 0xf067, 0x8f90, 0x44f0, 0x6bf3, 0x5a00, 0x1, 0x1);
        gbc.writeMem(0x5ece, { 0xee, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf067);
        EXPECT(gbc.pc(), 0x5ed0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02CC
        gbc.setState(0xc62e, 0xd2bc, 0x30c0, 0x8bf1, 0xe274, 0x640c, 0x0, 0x0);
        gbc.writeMem(0xc62e, { 0xee, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xd2bc);
        EXPECT(gbc.pc(), 0xc630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc62e), 0xee);
        EXPECT(gbc.readMem(0xc62f), 0x1e);
        // EE 02CD
        gbc.setState(0x3235, 0xb05c, 0x2a10, 0x534f, 0x5cae, 0x49a8, 0x0, 0x0);
        gbc.writeMem(0x3235, { 0xee, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb05c);
        EXPECT(gbc.pc(), 0x3237);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02CE
        gbc.setState(0x5b7e, 0x392b, 0x2b30, 0x2721, 0x7796, 0x16c, 0x1, 0x1);
        gbc.writeMem(0x5b7e, { 0xee, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x392b);
        EXPECT(gbc.pc(), 0x5b80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02CF
        gbc.setState(0x2a53, 0xc539, 0x51d0, 0x8e5b, 0xf88a, 0x6f3, 0x0, 0x1);
        gbc.writeMem(0x2a53, { 0xee, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc539);
        EXPECT(gbc.pc(), 0x2a55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02D0
        gbc.setState(0x2670, 0x77b6, 0x4ac0, 0x963b, 0xb283, 0xcedb, 0x0, 0x0);
        gbc.writeMem(0x2670, { 0xee, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x77b6);
        EXPECT(gbc.pc(), 0x2672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02D1
        gbc.setState(0x5435, 0x45c2, 0xde10, 0xff63, 0x19d2, 0xf8d, 0x0, 0x1);
        gbc.writeMem(0x5435, { 0xee, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x45c2);
        EXPECT(gbc.pc(), 0x5437);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02D2
        gbc.setState(0x9210, 0xb3bc, 0x7490, 0x65ce, 0x5961, 0x4e3a, 0x0, 0x0);
        gbc.writeMem(0x9210, { 0xee, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb3bc);
        EXPECT(gbc.pc(), 0x9212);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9210), 0xee);
        EXPECT(gbc.readMem(0x9211), 0x6f);
        // EE 02D3
        gbc.setState(0x69cc, 0xcf40, 0x3320, 0x58fb, 0xce78, 0xc046, 0x1, 0x0);
        gbc.writeMem(0x69cc, { 0xee, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xcf40);
        EXPECT(gbc.pc(), 0x69ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02D4
        gbc.setState(0x8045, 0xbc15, 0x84d0, 0xdd4e, 0xd5a6, 0x9de1, 0x0, 0x1);
        gbc.writeMem(0x8045, { 0xee, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xbc15);
        EXPECT(gbc.pc(), 0x8047);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8045), 0xee);
        EXPECT(gbc.readMem(0x8046), 0xfc);
        // EE 02D5
        gbc.setState(0x686b, 0x391a, 0xd950, 0x57, 0xe992, 0xdba2, 0x0, 0x1);
        gbc.writeMem(0x686b, { 0xee, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x391a);
        EXPECT(gbc.pc(), 0x686d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02D6
        gbc.setState(0x6ad4, 0x6076, 0xd290, 0x67b0, 0x9b59, 0x781a, 0x0, 0x0);
        gbc.writeMem(0x6ad4, { 0xee, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6076);
        EXPECT(gbc.pc(), 0x6ad6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02D7
        gbc.setState(0xdb54, 0xe630, 0x4ba0, 0x3485, 0x6d86, 0xe85d, 0x1, 0x0);
        gbc.writeMem(0xdb54, { 0xee, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe630);
        EXPECT(gbc.pc(), 0xdb56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb54), 0xee);
        EXPECT(gbc.readMem(0xdb55), 0xb4);
        // EE 02D8
        gbc.setState(0x74f1, 0xf9a2, 0xea30, 0x38a, 0xf156, 0x2d29, 0x1, 0x0);
        gbc.writeMem(0x74f1, { 0xee, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf9a2);
        EXPECT(gbc.pc(), 0x74f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02D9
        gbc.setState(0xcf5b, 0xbf3e, 0x1700, 0x5e47, 0xf3f, 0xd02c, 0x0, 0x1);
        gbc.writeMem(0xcf5b, { 0xee, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbf3e);
        EXPECT(gbc.pc(), 0xcf5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf5b), 0xee);
        EXPECT(gbc.readMem(0xcf5c), 0xf1);
        // EE 02DA
        gbc.setState(0x1225, 0x7df1, 0xc5c0, 0x4ff, 0xf2d4, 0x817e, 0x1, 0x1);
        gbc.writeMem(0x1225, { 0xee, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7df1);
        EXPECT(gbc.pc(), 0x1227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02DB
        gbc.setState(0xf5e, 0xdd4a, 0x4af0, 0xc81, 0x7de3, 0x5c57, 0x0, 0x0);
        gbc.writeMem(0xf5e, { 0xee, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xdd4a);
        EXPECT(gbc.pc(), 0xf60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02DC
        gbc.setState(0x8f7e, 0xff30, 0x4c30, 0x952d, 0xe94e, 0x177, 0x0, 0x1);
        gbc.writeMem(0x8f7e, { 0xee, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xff30);
        EXPECT(gbc.pc(), 0x8f80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f7e), 0xee);
        EXPECT(gbc.readMem(0x8f7f), 0x11);
        // EE 02DD
        gbc.setState(0x8b62, 0x65b5, 0xaae0, 0x5138, 0xa836, 0x3c08, 0x1, 0x1);
        gbc.writeMem(0x8b62, { 0xee, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x65b5);
        EXPECT(gbc.pc(), 0x8b64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b62), 0xee);
        EXPECT(gbc.readMem(0x8b63), 0xa1);
        // EE 02DE
        gbc.setState(0x79c4, 0x9b30, 0x6dd0, 0xcd26, 0x25a2, 0x238f, 0x1, 0x0);
        gbc.writeMem(0x79c4, { 0xee, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9b30);
        EXPECT(gbc.pc(), 0x79c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02DF
        gbc.setState(0x9f9c, 0x509b, 0x9280, 0xbed3, 0xe2f3, 0xdeb7, 0x1, 0x0);
        gbc.writeMem(0x9f9c, { 0xee, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x509b);
        EXPECT(gbc.pc(), 0x9f9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f9c), 0xee);
        EXPECT(gbc.readMem(0x9f9d), 0x2);
        // EE 02E0
        gbc.setState(0xb7c8, 0xc9db, 0x7470, 0xae42, 0x6f6e, 0x48e2, 0x1, 0x0);
        gbc.writeMem(0xb7c8, { 0xee, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc9db);
        EXPECT(gbc.pc(), 0xb7ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7c8), 0xee);
        EXPECT(gbc.readMem(0xb7c9), 0x74);
        // EE 02E1
        gbc.setState(0x538a, 0x9af0, 0x4150, 0xb4ac, 0x96, 0xbc75, 0x0, 0x0);
        gbc.writeMem(0x538a, { 0xee, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9af0);
        EXPECT(gbc.pc(), 0x538c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02E2
        gbc.setState(0xde11, 0xbc10, 0x4890, 0xf0b, 0xee66, 0x59f3, 0x0, 0x1);
        gbc.writeMem(0xde11, { 0xee, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xbc10);
        EXPECT(gbc.pc(), 0xde13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde11), 0xee);
        EXPECT(gbc.readMem(0xde12), 0x42);
        // EE 02E3
        gbc.setState(0x5e21, 0x310b, 0xe8f0, 0x3b35, 0x51c2, 0xf3a3, 0x1, 0x0);
        gbc.writeMem(0x5e21, { 0xee, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x310b);
        EXPECT(gbc.pc(), 0x5e23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02E4
        gbc.setState(0xd98f, 0xe2fe, 0xe000, 0x9c61, 0x5de9, 0xda7b, 0x0, 0x0);
        gbc.writeMem(0xd98f, { 0xee, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe2fe);
        EXPECT(gbc.pc(), 0xd991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd98f), 0xee);
        EXPECT(gbc.readMem(0xd990), 0x78);
        // EE 02E5
        gbc.setState(0x5019, 0xf765, 0x7a20, 0x1461, 0x852d, 0xd916, 0x1, 0x1);
        gbc.writeMem(0x5019, { 0xee, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf765);
        EXPECT(gbc.pc(), 0x501b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02E6
        gbc.setState(0xec34, 0xc6d5, 0xf620, 0x7147, 0xb4ec, 0xab7e, 0x0, 0x1);
        gbc.writeMem(0xec34, { 0xee, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc6d5);
        EXPECT(gbc.pc(), 0xec36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec34), 0xee);
        EXPECT(gbc.readMem(0xec35), 0xd4);
        // EE 02E7
        gbc.setState(0x42f8, 0x16d7, 0x4560, 0xae9d, 0x6bc7, 0x1b55, 0x0, 0x0);
        gbc.writeMem(0x42f8, { 0xee, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x16d7);
        EXPECT(gbc.pc(), 0x42fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02E8
        gbc.setState(0x9e8c, 0x80f3, 0x9b0, 0x248a, 0x71, 0xfc7d, 0x1, 0x1);
        gbc.writeMem(0x9e8c, { 0xee, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x80f3);
        EXPECT(gbc.pc(), 0x9e8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e8c), 0xee);
        EXPECT(gbc.readMem(0x9e8d), 0xcf);
        // EE 02E9
        gbc.setState(0xa794, 0xd4ac, 0x62d0, 0xff2, 0x2a97, 0x55a7, 0x1, 0x1);
        gbc.writeMem(0xa794, { 0xee, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd4ac);
        EXPECT(gbc.pc(), 0xa796);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa794), 0xee);
        EXPECT(gbc.readMem(0xa795), 0xed);
        // EE 02EA
        gbc.setState(0x399a, 0x97df, 0x8350, 0x937d, 0x89a, 0x25e7, 0x0, 0x1);
        gbc.writeMem(0x399a, { 0xee, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x97df);
        EXPECT(gbc.pc(), 0x399c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02EB
        gbc.setState(0x956b, 0xdc70, 0x92c0, 0x1c2d, 0xc515, 0xadab, 0x0, 0x1);
        gbc.writeMem(0x956b, { 0xee, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xdc70);
        EXPECT(gbc.pc(), 0x956d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x956b), 0xee);
        EXPECT(gbc.readMem(0x956c), 0xc1);
        // EE 02ED
        gbc.setState(0x2f7e, 0xde28, 0xc800, 0x6054, 0xd2bc, 0xb4fa, 0x1, 0x0);
        gbc.writeMem(0x2f7e, { 0xee, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xde28);
        EXPECT(gbc.pc(), 0x2f80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02EE
        gbc.setState(0x5ed1, 0x315e, 0xcaf0, 0xff96, 0xc4b0, 0x6913, 0x0, 0x1);
        gbc.writeMem(0x5ed1, { 0xee, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x315e);
        EXPECT(gbc.pc(), 0x5ed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02EF
        gbc.setState(0xff9, 0xc5a3, 0xf960, 0xda2b, 0x5525, 0x6215, 0x0, 0x0);
        gbc.writeMem(0xff9, { 0xee, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc5a3);
        EXPECT(gbc.pc(), 0xffb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02F0
        gbc.setState(0xcfdc, 0xe761, 0x9830, 0xb85, 0x4961, 0xf393, 0x0, 0x0);
        gbc.writeMem(0xcfdc, { 0xee, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe761);
        EXPECT(gbc.pc(), 0xcfde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfdc), 0xee);
        EXPECT(gbc.readMem(0xcfdd), 0xde);
        // EE 02F1
        gbc.setState(0x3375, 0x979b, 0x9790, 0xd80b, 0x33a1, 0xb2c5, 0x0, 0x1);
        gbc.writeMem(0x3375, { 0xee, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x979b);
        EXPECT(gbc.pc(), 0x3377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02F2
        gbc.setState(0xd516, 0x8850, 0x35c0, 0x2c27, 0xfd0f, 0x39d8, 0x1, 0x0);
        gbc.writeMem(0xd516, { 0xee, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8850);
        EXPECT(gbc.pc(), 0xd518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd516), 0xee);
        EXPECT(gbc.readMem(0xd517), 0xc3);
        // EE 02F3
        gbc.setState(0x53d, 0xbe28, 0x67c0, 0x5193, 0xa876, 0xbcfd, 0x0, 0x1);
        gbc.writeMem(0x53d, { 0xee, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xbe28);
        EXPECT(gbc.pc(), 0x53f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02F4
        gbc.setState(0x89d6, 0x560d, 0xb170, 0x354d, 0x3866, 0xe466, 0x0, 0x1);
        gbc.writeMem(0x89d6, { 0xee, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x560d);
        EXPECT(gbc.pc(), 0x89d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89d6), 0xee);
        EXPECT(gbc.readMem(0x89d7), 0x73);
        // EE 02F5
        gbc.setState(0x8701, 0x5437, 0x9b80, 0x8e5e, 0xc030, 0x4f9e, 0x0, 0x1);
        gbc.writeMem(0x8701, { 0xee, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5437);
        EXPECT(gbc.pc(), 0x8703);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8701), 0xee);
        EXPECT(gbc.readMem(0x8702), 0x77);
        // EE 02F6
        gbc.setState(0xb655, 0xe2b1, 0x4850, 0x459c, 0x53e3, 0x8435, 0x0, 0x0);
        gbc.writeMem(0xb655, { 0xee, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xe2b1);
        EXPECT(gbc.pc(), 0xb657);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb655), 0xee);
        EXPECT(gbc.readMem(0xb656), 0x7c);
        // EE 02F7
        gbc.setState(0xc2d4, 0x9dea, 0xbc80, 0xeeea, 0x57aa, 0x4439, 0x0, 0x0);
        gbc.writeMem(0xc2d4, { 0xee, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9dea);
        EXPECT(gbc.pc(), 0xc2d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2d4), 0xee);
        EXPECT(gbc.readMem(0xc2d5), 0x9d);
        // EE 02F8
        gbc.setState(0x2e26, 0x9e18, 0xb760, 0xab12, 0x5e4c, 0x1fd4, 0x1, 0x1);
        gbc.writeMem(0x2e26, { 0xee, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9e18);
        EXPECT(gbc.pc(), 0x2e28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02F9
        gbc.setState(0xdb74, 0x3a47, 0x9790, 0x3a84, 0x18e4, 0x8820, 0x1, 0x1);
        gbc.writeMem(0xdb74, { 0xee, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3a47);
        EXPECT(gbc.pc(), 0xdb76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb74), 0xee);
        EXPECT(gbc.readMem(0xdb75), 0xf5);
        // EE 02FA
        gbc.setState(0x7bc7, 0x3305, 0xc5a0, 0x31ef, 0x292f, 0xedb2, 0x0, 0x0);
        gbc.writeMem(0x7bc7, { 0xee, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3305);
        EXPECT(gbc.pc(), 0x7bc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02FB
        gbc.setState(0x6361, 0x9545, 0x7500, 0xef38, 0xb9e3, 0x6bd3, 0x1, 0x0);
        gbc.writeMem(0x6361, { 0xee, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9545);
        EXPECT(gbc.pc(), 0x6363);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02FD
        gbc.setState(0x2806, 0xa183, 0x8080, 0x66e3, 0xdcf7, 0xdf74, 0x0, 0x1);
        gbc.writeMem(0x2806, { 0xee, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa183);
        EXPECT(gbc.pc(), 0x2808);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 02FE
        gbc.setState(0x8c8d, 0x7542, 0x1170, 0x22fb, 0xa742, 0xd7d3, 0x1, 0x1);
        gbc.writeMem(0x8c8d, { 0xee, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7542);
        EXPECT(gbc.pc(), 0x8c8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c8d), 0xee);
        EXPECT(gbc.readMem(0x8c8e), 0x3d);
        // EE 02FF
        gbc.setState(0x6890, 0x6b40, 0x8c20, 0xf537, 0x195d, 0x630b, 0x1, 0x0);
        gbc.writeMem(0x6890, { 0xee, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6b40);
        EXPECT(gbc.pc(), 0x6892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0300
        gbc.setState(0xaae, 0x7d32, 0x4de0, 0x668b, 0x17ef, 0xd8c9, 0x0, 0x1);
        gbc.writeMem(0xaae, { 0xee, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7d32);
        EXPECT(gbc.pc(), 0xab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0301
        gbc.setState(0xc06b, 0x4d05, 0xbf90, 0x9e68, 0xdd5f, 0x44b6, 0x1, 0x0);
        gbc.writeMem(0xc06b, { 0xee, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4d05);
        EXPECT(gbc.pc(), 0xc06d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc06b), 0xee);
        EXPECT(gbc.readMem(0xc06c), 0x10);
        // EE 0302
        gbc.setState(0x9dcb, 0x410d, 0xd5b0, 0x2bd0, 0x7f36, 0xfc3f, 0x0, 0x0);
        gbc.writeMem(0x9dcb, { 0xee, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x410d);
        EXPECT(gbc.pc(), 0x9dcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dcb), 0xee);
        EXPECT(gbc.readMem(0x9dcc), 0x34);
        // EE 0303
        gbc.setState(0xb72e, 0xf406, 0x92d0, 0x4a41, 0x6c2a, 0xc675, 0x1, 0x0);
        gbc.writeMem(0xb72e, { 0xee, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf406);
        EXPECT(gbc.pc(), 0xb730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb72e), 0xee);
        EXPECT(gbc.readMem(0xb72f), 0xba);
        // EE 0304
        gbc.setState(0xbacb, 0x9200, 0x9960, 0x8b4c, 0x4992, 0x6c0b, 0x1, 0x1);
        gbc.writeMem(0xbacb, { 0xee, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9200);
        EXPECT(gbc.pc(), 0xbacd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbacb), 0xee);
        EXPECT(gbc.readMem(0xbacc), 0x77);
        // EE 0305
        gbc.setState(0xd8d0, 0x5138, 0x3970, 0xf4d5, 0xb727, 0xb8e4, 0x0, 0x0);
        gbc.writeMem(0xd8d0, { 0xee, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5138);
        EXPECT(gbc.pc(), 0xd8d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8d0), 0xee);
        EXPECT(gbc.readMem(0xd8d1), 0x4d);
        // EE 0306
        gbc.setState(0xade8, 0xa6a5, 0xd4f0, 0x12e3, 0x2961, 0xfb28, 0x0, 0x1);
        gbc.writeMem(0xade8, { 0xee, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa6a5);
        EXPECT(gbc.pc(), 0xadea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xade8), 0xee);
        EXPECT(gbc.readMem(0xade9), 0xaa);
        // EE 0307
        gbc.setState(0xc3b4, 0x4ccb, 0xcdb0, 0xd09d, 0xf016, 0xb5f8, 0x1, 0x1);
        gbc.writeMem(0xc3b4, { 0xee, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4ccb);
        EXPECT(gbc.pc(), 0xc3b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3b4), 0xee);
        EXPECT(gbc.readMem(0xc3b5), 0xe0);
        // EE 0308
        gbc.setState(0x68d6, 0xdd10, 0x3b70, 0xb3b9, 0x2ad, 0x1c2, 0x0, 0x1);
        gbc.writeMem(0x68d6, { 0xee, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xdd10);
        EXPECT(gbc.pc(), 0x68d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0309
        gbc.setState(0x5994, 0x838f, 0x63e0, 0xffdf, 0xd23f, 0x49b9, 0x1, 0x0);
        gbc.writeMem(0x5994, { 0xee, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x838f);
        EXPECT(gbc.pc(), 0x5996);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 030A
        gbc.setState(0x5b39, 0x2de8, 0xbb30, 0xa003, 0x79cc, 0xd505, 0x0, 0x0);
        gbc.writeMem(0x5b39, { 0xee, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2de8);
        EXPECT(gbc.pc(), 0x5b3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 030B
        gbc.setState(0xc5ea, 0x8827, 0x29d0, 0xff49, 0x94d1, 0x808e, 0x1, 0x0);
        gbc.writeMem(0xc5ea, { 0xee, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8827);
        EXPECT(gbc.pc(), 0xc5ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ea), 0xee);
        EXPECT(gbc.readMem(0xc5eb), 0x14);
        // EE 030C
        gbc.setState(0x2560, 0x8371, 0xa8f0, 0x2922, 0xe3bf, 0x7671, 0x0, 0x1);
        gbc.writeMem(0x2560, { 0xee, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x8371);
        EXPECT(gbc.pc(), 0x2562);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 030D
        gbc.setState(0xc0c1, 0x199c, 0xf6c0, 0xd8d1, 0xf3c5, 0x9866, 0x1, 0x0);
        gbc.writeMem(0xc0c1, { 0xee, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x199c);
        EXPECT(gbc.pc(), 0xc0c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0c1), 0xee);
        EXPECT(gbc.readMem(0xc0c2), 0xda);
        // EE 030E
        gbc.setState(0xcdbf, 0x471f, 0x46b0, 0x1419, 0x2413, 0x7449, 0x1, 0x1);
        gbc.writeMem(0xcdbf, { 0xee, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x471f);
        EXPECT(gbc.pc(), 0xcdc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdbf), 0xee);
        EXPECT(gbc.readMem(0xcdc0), 0x7c);
        // EE 0310
        gbc.setState(0x1f5e, 0x4e95, 0x3f0, 0x7c90, 0x28e9, 0xf3f7, 0x0, 0x1);
        gbc.writeMem(0x1f5e, { 0xee, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4e95);
        EXPECT(gbc.pc(), 0x1f60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0311
        gbc.setState(0xeb12, 0x695f, 0xeed0, 0xd453, 0x8cbd, 0x1bb4, 0x0, 0x1);
        gbc.writeMem(0xeb12, { 0xee, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x695f);
        EXPECT(gbc.pc(), 0xeb14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb12), 0xee);
        EXPECT(gbc.readMem(0xeb13), 0x8f);
        // EE 0312
        gbc.setState(0x4a2f, 0x91d3, 0xd1d0, 0xe758, 0xb008, 0xbc15, 0x0, 0x0);
        gbc.writeMem(0x4a2f, { 0xee, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x91d3);
        EXPECT(gbc.pc(), 0x4a31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0313
        gbc.setState(0x516d, 0xfa2e, 0x7870, 0x4d30, 0x61e5, 0xc52a, 0x0, 0x0);
        gbc.writeMem(0x516d, { 0xee, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfa2e);
        EXPECT(gbc.pc(), 0x516f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0314
        gbc.setState(0x85e, 0x50fd, 0x9410, 0x25da, 0xb5c9, 0xeb1a, 0x0, 0x0);
        gbc.writeMem(0x85e, { 0xee, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x50fd);
        EXPECT(gbc.pc(), 0x860);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0315
        gbc.setState(0xe964, 0xf9b6, 0x77b0, 0xe221, 0x7ec4, 0xf57c, 0x1, 0x0);
        gbc.writeMem(0xe964, { 0xee, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf9b6);
        EXPECT(gbc.pc(), 0xe966);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe964), 0xee);
        EXPECT(gbc.readMem(0xe965), 0x30);
        // EE 0316
        gbc.setState(0x3be9, 0x360f, 0x3a60, 0x6bd5, 0x1b7e, 0x1fa1, 0x0, 0x0);
        gbc.writeMem(0x3be9, { 0xee, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x360f);
        EXPECT(gbc.pc(), 0x3beb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0317
        gbc.setState(0x203a, 0x80a4, 0x6a30, 0x3caa, 0xe11f, 0x964d, 0x1, 0x0);
        gbc.writeMem(0x203a, { 0xee, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x80a4);
        EXPECT(gbc.pc(), 0x203c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0318
        gbc.setState(0x8fbd, 0x6a0a, 0xa790, 0x4787, 0x6da7, 0xa747, 0x0, 0x1);
        gbc.writeMem(0x8fbd, { 0xee, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6a0a);
        EXPECT(gbc.pc(), 0x8fbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fbd), 0xee);
        EXPECT(gbc.readMem(0x8fbe), 0x58);
        // EE 0319
        gbc.setState(0x8e70, 0x7617, 0x3240, 0x4cd5, 0x21ee, 0x412c, 0x0, 0x0);
        gbc.writeMem(0x8e70, { 0xee, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7617);
        EXPECT(gbc.pc(), 0x8e72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e70), 0xee);
        EXPECT(gbc.readMem(0x8e71), 0xcd);
        // EE 031A
        gbc.setState(0xbcb0, 0x4c32, 0x6d50, 0xb11, 0x6085, 0x713, 0x0, 0x0);
        gbc.writeMem(0xbcb0, { 0xee, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4c32);
        EXPECT(gbc.pc(), 0xbcb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcb0), 0xee);
        EXPECT(gbc.readMem(0xbcb1), 0xd);
        // EE 031B
        gbc.setState(0x4ab1, 0x7c48, 0x7ed0, 0x6c00, 0x1be5, 0x8414, 0x0, 0x0);
        gbc.writeMem(0x4ab1, { 0xee, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7c48);
        EXPECT(gbc.pc(), 0x4ab3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 031C
        gbc.setState(0x36db, 0x44d8, 0x8500, 0x11c7, 0x26c0, 0x11f2, 0x1, 0x0);
        gbc.writeMem(0x36db, { 0xee, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x44d8);
        EXPECT(gbc.pc(), 0x36dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 031D
        gbc.setState(0xdb0b, 0xf979, 0xd160, 0x49fc, 0x72ba, 0x77c5, 0x1, 0x0);
        gbc.writeMem(0xdb0b, { 0xee, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf979);
        EXPECT(gbc.pc(), 0xdb0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb0b), 0xee);
        EXPECT(gbc.readMem(0xdb0c), 0xb);
        // EE 031E
        gbc.setState(0xe481, 0x3584, 0xa500, 0x4f1e, 0xf796, 0xeb89, 0x1, 0x0);
        gbc.writeMem(0xe481, { 0xee, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3584);
        EXPECT(gbc.pc(), 0xe483);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe481), 0xee);
        EXPECT(gbc.readMem(0xe482), 0x2d);
        // EE 031F
        gbc.setState(0xdd55, 0x4673, 0xaf90, 0xbc26, 0xf43a, 0x7242, 0x1, 0x0);
        gbc.writeMem(0xdd55, { 0xee, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4673);
        EXPECT(gbc.pc(), 0xdd57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd55), 0xee);
        EXPECT(gbc.readMem(0xdd56), 0xf0);
        // EE 0320
        gbc.setState(0x555f, 0xaa7d, 0x3880, 0xa41d, 0xcc03, 0x16e1, 0x1, 0x0);
        gbc.writeMem(0x555f, { 0xee, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xaa7d);
        EXPECT(gbc.pc(), 0x5561);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0321
        gbc.setState(0x72ec, 0x37cd, 0x3f70, 0x262b, 0x53ba, 0x6342, 0x1, 0x1);
        gbc.writeMem(0x72ec, { 0xee, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x37cd);
        EXPECT(gbc.pc(), 0x72ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0322
        gbc.setState(0x2c6c, 0xc96d, 0xdbf0, 0xac75, 0x9d05, 0xcac, 0x0, 0x0);
        gbc.writeMem(0x2c6c, { 0xee, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc96d);
        EXPECT(gbc.pc(), 0x2c6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0323
        gbc.setState(0x9a7b, 0x506f, 0xbfc0, 0x4365, 0x3748, 0x65ae, 0x0, 0x1);
        gbc.writeMem(0x9a7b, { 0xee, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x506f);
        EXPECT(gbc.pc(), 0x9a7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a7b), 0xee);
        EXPECT(gbc.readMem(0x9a7c), 0x92);
        // EE 0324
        gbc.setState(0x965f, 0x1036, 0xd8c0, 0x6c1c, 0xe771, 0x4127, 0x1, 0x1);
        gbc.writeMem(0x965f, { 0xee, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1036);
        EXPECT(gbc.pc(), 0x9661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x965f), 0xee);
        EXPECT(gbc.readMem(0x9660), 0xda);
        // EE 0325
        gbc.setState(0xce72, 0x39a6, 0x170, 0xdf1b, 0xa1b3, 0xb30b, 0x1, 0x1);
        gbc.writeMem(0xce72, { 0xee, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x39a6);
        EXPECT(gbc.pc(), 0xce74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce72), 0xee);
        EXPECT(gbc.readMem(0xce73), 0x89);
        // EE 0326
        gbc.setState(0x4758, 0xb277, 0xcec0, 0xf1db, 0xfda1, 0x2025, 0x1, 0x0);
        gbc.writeMem(0x4758, { 0xee, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb277);
        EXPECT(gbc.pc(), 0x475a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0327
        gbc.setState(0x1166, 0x355, 0x4400, 0x7641, 0x6350, 0x32c7, 0x0, 0x1);
        gbc.writeMem(0x1166, { 0xee, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x355);
        EXPECT(gbc.pc(), 0x1168);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0328
        gbc.setState(0x1efe, 0x8253, 0xdd30, 0x5f44, 0xbe32, 0xba0d, 0x1, 0x1);
        gbc.writeMem(0x1efe, { 0xee, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8253);
        EXPECT(gbc.pc(), 0x1f00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0329
        gbc.setState(0x65ea, 0xfa1c, 0x3ae0, 0xf718, 0xd08d, 0x38bf, 0x1, 0x1);
        gbc.writeMem(0x65ea, { 0xee, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xfa1c);
        EXPECT(gbc.pc(), 0x65ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 032A
        gbc.setState(0x591c, 0xebb9, 0xb620, 0x9c1b, 0x7467, 0x7366, 0x1, 0x0);
        gbc.writeMem(0x591c, { 0xee, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xebb9);
        EXPECT(gbc.pc(), 0x591e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 032B
        gbc.setState(0x2a47, 0x73ce, 0xb840, 0xec74, 0x36c6, 0x3214, 0x0, 0x1);
        gbc.writeMem(0x2a47, { 0xee, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x73ce);
        EXPECT(gbc.pc(), 0x2a49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 032C
        gbc.setState(0x90aa, 0x3330, 0x65f0, 0xd988, 0xb476, 0x1b21, 0x0, 0x1);
        gbc.writeMem(0x90aa, { 0xee, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3330);
        EXPECT(gbc.pc(), 0x90ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90aa), 0xee);
        EXPECT(gbc.readMem(0x90ab), 0x59);
        // EE 032E
        gbc.setState(0xa7b1, 0x7c5d, 0xcf00, 0xb101, 0xca58, 0xb3ce, 0x1, 0x0);
        gbc.writeMem(0xa7b1, { 0xee, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x7c5d);
        EXPECT(gbc.pc(), 0xa7b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7b1), 0xee);
        EXPECT(gbc.readMem(0xa7b2), 0x73);
        // EE 032F
        gbc.setState(0xab33, 0xfd10, 0xee00, 0x4d4b, 0x4d85, 0x66db, 0x1, 0x1);
        gbc.writeMem(0xab33, { 0xee, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xfd10);
        EXPECT(gbc.pc(), 0xab35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab33), 0xee);
        EXPECT(gbc.readMem(0xab34), 0x61);
        // EE 0330
        gbc.setState(0x7343, 0xb208, 0xf220, 0x5889, 0xb369, 0xaf44, 0x0, 0x1);
        gbc.writeMem(0x7343, { 0xee, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb208);
        EXPECT(gbc.pc(), 0x7345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0332
        gbc.setState(0x594c, 0x9d9a, 0xe160, 0xd58d, 0xe536, 0xded8, 0x0, 0x1);
        gbc.writeMem(0x594c, { 0xee, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x9d9a);
        EXPECT(gbc.pc(), 0x594e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0333
        gbc.setState(0x3b63, 0x8a00, 0xace0, 0xd0e1, 0xbc5e, 0x4b73, 0x1, 0x1);
        gbc.writeMem(0x3b63, { 0xee, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8a00);
        EXPECT(gbc.pc(), 0x3b65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0334
        gbc.setState(0x2dd7, 0x3f09, 0x31d0, 0x2849, 0xd26a, 0x6e51, 0x0, 0x1);
        gbc.writeMem(0x2dd7, { 0xee, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3f09);
        EXPECT(gbc.pc(), 0x2dd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0335
        gbc.setState(0x787a, 0xa587, 0xbc60, 0x649d, 0x4092, 0x407, 0x1, 0x1);
        gbc.writeMem(0x787a, { 0xee, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa587);
        EXPECT(gbc.pc(), 0x787c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0336
        gbc.setState(0x1b88, 0xd76d, 0x5b10, 0x3519, 0x863a, 0x2b7a, 0x0, 0x1);
        gbc.writeMem(0x1b88, { 0xee, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd76d);
        EXPECT(gbc.pc(), 0x1b8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0337
        gbc.setState(0x2158, 0x3b84, 0x1390, 0xf191, 0x60aa, 0x51ff, 0x0, 0x1);
        gbc.writeMem(0x2158, { 0xee, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3b84);
        EXPECT(gbc.pc(), 0x215a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0338
        gbc.setState(0x8623, 0x49e2, 0x6390, 0xda69, 0x190, 0x319a, 0x1, 0x1);
        gbc.writeMem(0x8623, { 0xee, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x49e2);
        EXPECT(gbc.pc(), 0x8625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8623), 0xee);
        EXPECT(gbc.readMem(0x8624), 0x5f);
        // EE 0339
        gbc.setState(0xca2, 0x8010, 0x5ec0, 0x9226, 0x334a, 0x5741, 0x1, 0x0);
        gbc.writeMem(0xca2, { 0xee, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8010);
        EXPECT(gbc.pc(), 0xca4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 033A
        gbc.setState(0xb590, 0xc0f6, 0x8670, 0xe1d8, 0x8bc5, 0xf144, 0x0, 0x1);
        gbc.writeMem(0xb590, { 0xee, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc0f6);
        EXPECT(gbc.pc(), 0xb592);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb590), 0xee);
        EXPECT(gbc.readMem(0xb591), 0x16);
        // EE 033B
        gbc.setState(0x7f27, 0x166c, 0x47a0, 0xa074, 0xc705, 0x7bcb, 0x1, 0x1);
        gbc.writeMem(0x7f27, { 0xee, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x166c);
        EXPECT(gbc.pc(), 0x7f29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 033C
        gbc.setState(0xe40e, 0x76ac, 0x6280, 0x215d, 0x4713, 0xd9c8, 0x0, 0x1);
        gbc.writeMem(0xe40e, { 0xee, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x76ac);
        EXPECT(gbc.pc(), 0xe410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe40e), 0xee);
        EXPECT(gbc.readMem(0xe40f), 0x61);
        // EE 033D
        gbc.setState(0xeb00, 0xe1a5, 0xb250, 0xce28, 0xbeee, 0x41c5, 0x1, 0x1);
        gbc.writeMem(0xeb00, { 0xee, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe1a5);
        EXPECT(gbc.pc(), 0xeb02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb00), 0xee);
        EXPECT(gbc.readMem(0xeb01), 0x4f);
        // EE 033E
        gbc.setState(0x5e84, 0x350c, 0x7e50, 0xee0d, 0x8dd1, 0x6bb9, 0x1, 0x0);
        gbc.writeMem(0x5e84, { 0xee, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x350c);
        EXPECT(gbc.pc(), 0x5e86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 033F
        gbc.setState(0x98be, 0x2ade, 0x7af0, 0x44, 0xba7d, 0x5310, 0x1, 0x1);
        gbc.writeMem(0x98be, { 0xee, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2ade);
        EXPECT(gbc.pc(), 0x98c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98be), 0xee);
        EXPECT(gbc.readMem(0x98bf), 0x1c);
        // EE 0340
        gbc.setState(0x6e17, 0x8029, 0x81d0, 0xa473, 0xe7ce, 0xf3c9, 0x0, 0x1);
        gbc.writeMem(0x6e17, { 0xee, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8029);
        EXPECT(gbc.pc(), 0x6e19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0341
        gbc.setState(0x4a73, 0xc946, 0xd960, 0x47ff, 0x7653, 0x2a9a, 0x1, 0x1);
        gbc.writeMem(0x4a73, { 0xee, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc946);
        EXPECT(gbc.pc(), 0x4a75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0343
        gbc.setState(0xc92b, 0x8c70, 0xc50, 0xe1c5, 0x6037, 0x6f0e, 0x0, 0x0);
        gbc.writeMem(0xc92b, { 0xee, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8c70);
        EXPECT(gbc.pc(), 0xc92d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc92b), 0xee);
        EXPECT(gbc.readMem(0xc92c), 0xf);
        // EE 0344
        gbc.setState(0xa3ba, 0x1ac6, 0xc00, 0x632b, 0x2d0, 0x82c5, 0x1, 0x1);
        gbc.writeMem(0xa3ba, { 0xee, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1ac6);
        EXPECT(gbc.pc(), 0xa3bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ba), 0xee);
        EXPECT(gbc.readMem(0xa3bb), 0xbf);
        // EE 0345
        gbc.setState(0x2da3, 0x62df, 0xb020, 0xbde0, 0x1b72, 0x477, 0x0, 0x0);
        gbc.writeMem(0x2da3, { 0xee, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x62df);
        EXPECT(gbc.pc(), 0x2da5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0346
        gbc.setState(0xe8c0, 0xad84, 0x9b70, 0x25e, 0x6478, 0x2868, 0x0, 0x1);
        gbc.writeMem(0xe8c0, { 0xee, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xad84);
        EXPECT(gbc.pc(), 0xe8c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8c0), 0xee);
        EXPECT(gbc.readMem(0xe8c1), 0x82);
        // EE 0347
        gbc.setState(0x102c, 0xc9dc, 0x6ab0, 0xa2c3, 0xb4e4, 0x8350, 0x1, 0x1);
        gbc.writeMem(0x102c, { 0xee, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc9dc);
        EXPECT(gbc.pc(), 0x102e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0348
        gbc.setState(0xee4a, 0xd1c3, 0x1810, 0x1c7a, 0x3f41, 0x8d9b, 0x0, 0x1);
        gbc.writeMem(0xee4a, { 0xee, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd1c3);
        EXPECT(gbc.pc(), 0xee4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee4a), 0xee);
        EXPECT(gbc.readMem(0xee4b), 0xde);
        // EE 0349
        gbc.setState(0xce61, 0xa599, 0xdb10, 0xc6f3, 0xe2e9, 0x6a44, 0x1, 0x1);
        gbc.writeMem(0xce61, { 0xee, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa599);
        EXPECT(gbc.pc(), 0xce63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce61), 0xee);
        EXPECT(gbc.readMem(0xce62), 0xfd);
        // EE 034A
        gbc.setState(0x6415, 0x80ab, 0xff50, 0xa39a, 0x19ac, 0x3c26, 0x1, 0x0);
        gbc.writeMem(0x6415, { 0xee, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x80ab);
        EXPECT(gbc.pc(), 0x6417);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 034B
        gbc.setState(0x443c, 0xc499, 0xcae0, 0x69e4, 0x2571, 0x6568, 0x1, 0x0);
        gbc.writeMem(0x443c, { 0xee, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc499);
        EXPECT(gbc.pc(), 0x443e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 034C
        gbc.setState(0x14ae, 0xd1d, 0x1d00, 0x4cbd, 0xe047, 0x1142, 0x0, 0x1);
        gbc.writeMem(0x14ae, { 0xee, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xd1d);
        EXPECT(gbc.pc(), 0x14b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 034D
        gbc.setState(0xafd3, 0x1bdb, 0x8fb0, 0xfaf1, 0x55c4, 0xfadf, 0x1, 0x0);
        gbc.writeMem(0xafd3, { 0xee, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1bdb);
        EXPECT(gbc.pc(), 0xafd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafd3), 0xee);
        EXPECT(gbc.readMem(0xafd4), 0x78);
        // EE 034E
        gbc.setState(0xee0c, 0x5748, 0x88b0, 0x72c2, 0xdb95, 0x4149, 0x1, 0x0);
        gbc.writeMem(0xee0c, { 0xee, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5748);
        EXPECT(gbc.pc(), 0xee0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee0c), 0xee);
        EXPECT(gbc.readMem(0xee0d), 0xb4);
        // EE 034F
        gbc.setState(0xc94c, 0xa6df, 0x1c80, 0xfc2, 0xd542, 0x6924, 0x0, 0x0);
        gbc.writeMem(0xc94c, { 0xee, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa6df);
        EXPECT(gbc.pc(), 0xc94e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc94c), 0xee);
        EXPECT(gbc.readMem(0xc94d), 0xa8);
        // EE 0350
        gbc.setState(0x2789, 0x32d7, 0xa410, 0x102c, 0xbab9, 0xa466, 0x1, 0x0);
        gbc.writeMem(0x2789, { 0xee, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x32d7);
        EXPECT(gbc.pc(), 0x278b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0351
        gbc.setState(0x9a3e, 0xaad8, 0x15d0, 0xc4c6, 0xb205, 0x5299, 0x0, 0x0);
        gbc.writeMem(0x9a3e, { 0xee, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xaad8);
        EXPECT(gbc.pc(), 0x9a40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a3e), 0xee);
        EXPECT(gbc.readMem(0x9a3f), 0x81);
        // EE 0352
        gbc.setState(0x2c76, 0x3ef, 0xd9c0, 0xac89, 0xb7cd, 0xdeee, 0x0, 0x0);
        gbc.writeMem(0x2c76, { 0xee, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3ef);
        EXPECT(gbc.pc(), 0x2c78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0353
        gbc.setState(0x5bdd, 0xe6a9, 0x68c0, 0x96f6, 0xa0ba, 0x1c7d, 0x0, 0x1);
        gbc.writeMem(0x5bdd, { 0xee, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe6a9);
        EXPECT(gbc.pc(), 0x5bdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0354
        gbc.setState(0xebc9, 0xbd09, 0xf730, 0xe3a0, 0x55d1, 0x2928, 0x0, 0x0);
        gbc.writeMem(0xebc9, { 0xee, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbd09);
        EXPECT(gbc.pc(), 0xebcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebc9), 0xee);
        EXPECT(gbc.readMem(0xebca), 0x34);
        // EE 0355
        gbc.setState(0xe526, 0x4970, 0xbd60, 0x20aa, 0x3bb3, 0x2093, 0x1, 0x1);
        gbc.writeMem(0xe526, { 0xee, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x4970);
        EXPECT(gbc.pc(), 0xe528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe526), 0xee);
        EXPECT(gbc.readMem(0xe527), 0x11);
        // EE 0356
        gbc.setState(0x44e8, 0x87ca, 0x1110, 0x8be0, 0x7cb1, 0xd05b, 0x1, 0x0);
        gbc.writeMem(0x44e8, { 0xee, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x87ca);
        EXPECT(gbc.pc(), 0x44ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0358
        gbc.setState(0xd8c0, 0xd3b3, 0x5e70, 0xe337, 0xfa89, 0x28e3, 0x1, 0x0);
        gbc.writeMem(0xd8c0, { 0xee, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xd3b3);
        EXPECT(gbc.pc(), 0xd8c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8c0), 0xee);
        EXPECT(gbc.readMem(0xd8c1), 0x65);
        // EE 0359
        gbc.setState(0x9fbc, 0x4edf, 0xed60, 0x1f44, 0x6cd, 0xdb02, 0x1, 0x0);
        gbc.writeMem(0x9fbc, { 0xee, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4edf);
        EXPECT(gbc.pc(), 0x9fbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fbc), 0xee);
        EXPECT(gbc.readMem(0x9fbd), 0xc0);
        // EE 035A
        gbc.setState(0x5b11, 0x8446, 0x9920, 0x2779, 0xec98, 0x4271, 0x1, 0x1);
        gbc.writeMem(0x5b11, { 0xee, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x8446);
        EXPECT(gbc.pc(), 0x5b13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 035B
        gbc.setState(0xefa4, 0xdfe0, 0x8bd0, 0x2b5c, 0xf52b, 0xc18c, 0x0, 0x1);
        gbc.writeMem(0xefa4, { 0xee, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xdfe0);
        EXPECT(gbc.pc(), 0xefa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefa4), 0xee);
        EXPECT(gbc.readMem(0xefa5), 0x81);
        // EE 035C
        gbc.setState(0xbd4, 0xc654, 0xc5b0, 0x572, 0x901, 0xd6a5, 0x0, 0x1);
        gbc.writeMem(0xbd4, { 0xee, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc654);
        EXPECT(gbc.pc(), 0xbd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 035D
        gbc.setState(0x92e8, 0xbfb9, 0xada0, 0x9887, 0x1c22, 0xba03, 0x0, 0x1);
        gbc.writeMem(0x92e8, { 0xee, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xbfb9);
        EXPECT(gbc.pc(), 0x92ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e8), 0xee);
        EXPECT(gbc.readMem(0x92e9), 0xd8);
        // EE 035E
        gbc.setState(0x2ff8, 0x389a, 0xa340, 0x75fb, 0x5aa5, 0x3d52, 0x1, 0x1);
        gbc.writeMem(0x2ff8, { 0xee, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x389a);
        EXPECT(gbc.pc(), 0x2ffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0360
        gbc.setState(0xd9d3, 0xb041, 0x3d50, 0xee31, 0xe204, 0x66be, 0x1, 0x1);
        gbc.writeMem(0xd9d3, { 0xee, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb041);
        EXPECT(gbc.pc(), 0xd9d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9d3), 0xee);
        EXPECT(gbc.readMem(0xd9d4), 0xd2);
        // EE 0361
        gbc.setState(0x8b28, 0x3a07, 0xd470, 0x26bc, 0x46fa, 0x3095, 0x0, 0x0);
        gbc.writeMem(0x8b28, { 0xee, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3a07);
        EXPECT(gbc.pc(), 0x8b2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b28), 0xee);
        EXPECT(gbc.readMem(0x8b29), 0xc8);
        // EE 0362
        gbc.setState(0xd0d4, 0x7c81, 0x21c0, 0x5eee, 0x6e7c, 0x1b9c, 0x1, 0x0);
        gbc.writeMem(0xd0d4, { 0xee, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7c81);
        EXPECT(gbc.pc(), 0xd0d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0d4), 0xee);
        EXPECT(gbc.readMem(0xd0d5), 0xf7);
        // EE 0363
        gbc.setState(0x114e, 0x9536, 0xfc40, 0xe896, 0x2ef8, 0x97b, 0x1, 0x1);
        gbc.writeMem(0x114e, { 0xee, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9536);
        EXPECT(gbc.pc(), 0x1150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0364
        gbc.setState(0x92ab, 0xa32, 0xdd60, 0x830a, 0x3a98, 0x80a, 0x1, 0x1);
        gbc.writeMem(0x92ab, { 0xee, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xa32);
        EXPECT(gbc.pc(), 0x92ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ab), 0xee);
        EXPECT(gbc.readMem(0x92ac), 0xc3);
        // EE 0365
        gbc.setState(0x7316, 0x1de1, 0x9e70, 0x6313, 0x7242, 0xba3c, 0x0, 0x0);
        gbc.writeMem(0x7316, { 0xee, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x1de1);
        EXPECT(gbc.pc(), 0x7318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0366
        gbc.setState(0x3c57, 0xe36b, 0xa6a0, 0x481, 0xcb9b, 0xdf43, 0x0, 0x1);
        gbc.writeMem(0x3c57, { 0xee, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe36b);
        EXPECT(gbc.pc(), 0x3c59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0367
        gbc.setState(0x3930, 0x905a, 0x1d50, 0x7191, 0xc2a5, 0xcb7e, 0x0, 0x1);
        gbc.writeMem(0x3930, { 0xee, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x905a);
        EXPECT(gbc.pc(), 0x3932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0368
        gbc.setState(0x2056, 0xec5e, 0xe620, 0xc0a4, 0x3763, 0x8953, 0x1, 0x1);
        gbc.writeMem(0x2056, { 0xee, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xec5e);
        EXPECT(gbc.pc(), 0x2058);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0369
        gbc.setState(0x4039, 0xc1e0, 0x99e0, 0x2f6f, 0x7267, 0x9a05, 0x0, 0x0);
        gbc.writeMem(0x4039, { 0xee, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc1e0);
        EXPECT(gbc.pc(), 0x403b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 036A
        gbc.setState(0x78d3, 0xc9d1, 0x6fb0, 0x947f, 0xb340, 0xbca5, 0x0, 0x1);
        gbc.writeMem(0x78d3, { 0xee, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc9d1);
        EXPECT(gbc.pc(), 0x78d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 036B
        gbc.setState(0xe35a, 0xba18, 0x5070, 0x715d, 0x9500, 0x4e58, 0x0, 0x1);
        gbc.writeMem(0xe35a, { 0xee, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xba18);
        EXPECT(gbc.pc(), 0xe35c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe35a), 0xee);
        EXPECT(gbc.readMem(0xe35b), 0xbf);
        // EE 036C
        gbc.setState(0x613, 0x1605, 0x2960, 0x9a43, 0x387b, 0x386e, 0x0, 0x0);
        gbc.writeMem(0x613, { 0xee, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x1605);
        EXPECT(gbc.pc(), 0x615);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 036D
        gbc.setState(0x441d, 0xf906, 0x440, 0x5842, 0x263a, 0x96d0, 0x1, 0x0);
        gbc.writeMem(0x441d, { 0xee, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf906);
        EXPECT(gbc.pc(), 0x441f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 036E
        gbc.setState(0x83ed, 0x98ab, 0xe790, 0xfe1e, 0x9edb, 0x91e5, 0x1, 0x1);
        gbc.writeMem(0x83ed, { 0xee, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x98ab);
        EXPECT(gbc.pc(), 0x83ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ed), 0xee);
        EXPECT(gbc.readMem(0x83ee), 0xe7);
        // EE 036F
        gbc.setState(0xe55c, 0x967b, 0x3d30, 0xeb68, 0x2c7d, 0xac31, 0x0, 0x1);
        gbc.writeMem(0xe55c, { 0xee, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x967b);
        EXPECT(gbc.pc(), 0xe55e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe55c), 0xee);
        EXPECT(gbc.readMem(0xe55d), 0x84);
        // EE 0370
        gbc.setState(0x85c2, 0xa642, 0x2620, 0xbfc, 0x93ae, 0x22a2, 0x0, 0x1);
        gbc.writeMem(0x85c2, { 0xee, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa642);
        EXPECT(gbc.pc(), 0x85c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c2), 0xee);
        EXPECT(gbc.readMem(0x85c3), 0x6);
        // EE 0371
        gbc.setState(0x8883, 0xd89d, 0x6750, 0x6a4a, 0xb2e0, 0xb759, 0x0, 0x1);
        gbc.writeMem(0x8883, { 0xee, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd89d);
        EXPECT(gbc.pc(), 0x8885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8883), 0xee);
        EXPECT(gbc.readMem(0x8884), 0x57);
        // EE 0372
        gbc.setState(0x8b32, 0x45ca, 0xccc0, 0xbe64, 0xdc11, 0x698a, 0x1, 0x0);
        gbc.writeMem(0x8b32, { 0xee, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x45ca);
        EXPECT(gbc.pc(), 0x8b34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b32), 0xee);
        EXPECT(gbc.readMem(0x8b33), 0xb2);
        // EE 0373
        gbc.setState(0x772f, 0xdd4, 0x8ea0, 0x32ba, 0xf201, 0x74ad, 0x0, 0x0);
        gbc.writeMem(0x772f, { 0xee, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xdd4);
        EXPECT(gbc.pc(), 0x7731);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0374
        gbc.setState(0xdfad, 0xac4b, 0x3660, 0x37b1, 0x2497, 0x5234, 0x0, 0x0);
        gbc.writeMem(0xdfad, { 0xee, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xac4b);
        EXPECT(gbc.pc(), 0xdfaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfad), 0xee);
        EXPECT(gbc.readMem(0xdfae), 0x85);
        // EE 0375
        gbc.setState(0x5c8e, 0x3edb, 0xf970, 0xa0df, 0xc34b, 0xdee3, 0x1, 0x1);
        gbc.writeMem(0x5c8e, { 0xee, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x3edb);
        EXPECT(gbc.pc(), 0x5c90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0376
        gbc.setState(0xa16c, 0xc565, 0x7730, 0x1c37, 0xdb25, 0xb3bb, 0x0, 0x1);
        gbc.writeMem(0xa16c, { 0xee, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc565);
        EXPECT(gbc.pc(), 0xa16e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa16c), 0xee);
        EXPECT(gbc.readMem(0xa16d), 0x2f);
        // EE 0377
        gbc.setState(0xa864, 0x2ee7, 0xa8b0, 0x22cb, 0x9b30, 0x681b, 0x1, 0x1);
        gbc.writeMem(0xa864, { 0xee, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x2ee7);
        EXPECT(gbc.pc(), 0xa866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa864), 0xee);
        EXPECT(gbc.readMem(0xa865), 0x88);
        // EE 0378
        gbc.setState(0x202f, 0x7b24, 0xff00, 0xe287, 0xc0d4, 0xe92e, 0x0, 0x1);
        gbc.writeMem(0x202f, { 0xee, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7b24);
        EXPECT(gbc.pc(), 0x2031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 037A
        gbc.setState(0x7185, 0x6dba, 0x5260, 0x837a, 0x3c51, 0xa3a5, 0x0, 0x1);
        gbc.writeMem(0x7185, { 0xee, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6dba);
        EXPECT(gbc.pc(), 0x7187);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 037B
        gbc.setState(0x59b2, 0x183e, 0x4730, 0x7340, 0xfc9d, 0xa58d, 0x0, 0x1);
        gbc.writeMem(0x59b2, { 0xee, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x183e);
        EXPECT(gbc.pc(), 0x59b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 037C
        gbc.setState(0x3fc2, 0xf956, 0x7650, 0xd2b, 0x8134, 0xe746, 0x0, 0x0);
        gbc.writeMem(0x3fc2, { 0xee, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf956);
        EXPECT(gbc.pc(), 0x3fc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 037D
        gbc.setState(0xe6e6, 0xc985, 0xaaa0, 0xfb71, 0xa4aa, 0x8086, 0x1, 0x0);
        gbc.writeMem(0xe6e6, { 0xee, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc985);
        EXPECT(gbc.pc(), 0xe6e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6e6), 0xee);
        EXPECT(gbc.readMem(0xe6e7), 0xbc);
        // EE 037E
        gbc.setState(0x9866, 0x9c3a, 0x7ce0, 0x6509, 0xb459, 0x547e, 0x1, 0x1);
        gbc.writeMem(0x9866, { 0xee, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9c3a);
        EXPECT(gbc.pc(), 0x9868);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9866), 0xee);
        EXPECT(gbc.readMem(0x9867), 0x69);
        // EE 037F
        gbc.setState(0xebbb, 0x307e, 0x1630, 0xc033, 0x86b9, 0x2cec, 0x1, 0x0);
        gbc.writeMem(0xebbb, { 0xee, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x307e);
        EXPECT(gbc.pc(), 0xebbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebbb), 0xee);
        EXPECT(gbc.readMem(0xebbc), 0x21);
        // EE 0381
        gbc.setState(0x1d84, 0x80b6, 0xb00, 0xbc71, 0xaa3a, 0xd0b8, 0x1, 0x1);
        gbc.writeMem(0x1d84, { 0xee, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x80b6);
        EXPECT(gbc.pc(), 0x1d86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0382
        gbc.setState(0xe85b, 0x7fd2, 0xf860, 0xb11e, 0xe5ca, 0x4778, 0x1, 0x1);
        gbc.writeMem(0xe85b, { 0xee, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7fd2);
        EXPECT(gbc.pc(), 0xe85d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe85b), 0xee);
        EXPECT(gbc.readMem(0xe85c), 0xb4);
        // EE 0383
        gbc.setState(0xeb7c, 0xa713, 0xdfa0, 0xf718, 0x680c, 0x7056, 0x1, 0x0);
        gbc.writeMem(0xeb7c, { 0xee, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa713);
        EXPECT(gbc.pc(), 0xeb7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb7c), 0xee);
        EXPECT(gbc.readMem(0xeb7d), 0xfd);
        // EE 0384
        gbc.setState(0x985, 0xbfda, 0x4ac0, 0x306b, 0x4000, 0x5d92, 0x1, 0x1);
        gbc.writeMem(0x985, { 0xee, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xbfda);
        EXPECT(gbc.pc(), 0x987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0385
        gbc.setState(0x4f6a, 0x17ad, 0x2fd0, 0x8e6f, 0x5269, 0x69dd, 0x0, 0x1);
        gbc.writeMem(0x4f6a, { 0xee, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x17ad);
        EXPECT(gbc.pc(), 0x4f6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0386
        gbc.setState(0x47c5, 0x7964, 0x3cc0, 0xe1c7, 0x327d, 0xd9f3, 0x0, 0x1);
        gbc.writeMem(0x47c5, { 0xee, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7964);
        EXPECT(gbc.pc(), 0x47c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0387
        gbc.setState(0x9dfb, 0xcc27, 0x7d00, 0x12e4, 0x1f0e, 0xb30, 0x1, 0x1);
        gbc.writeMem(0x9dfb, { 0xee, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xcc27);
        EXPECT(gbc.pc(), 0x9dfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dfb), 0xee);
        EXPECT(gbc.readMem(0x9dfc), 0xad);
        // EE 0388
        gbc.setState(0x7c0, 0x4b7d, 0xacc0, 0x54, 0xe19f, 0x9868, 0x0, 0x0);
        gbc.writeMem(0x7c0, { 0xee, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4b7d);
        EXPECT(gbc.pc(), 0x7c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0389
        gbc.setState(0x208c, 0xa705, 0xf5c0, 0x607, 0xc271, 0xa035, 0x0, 0x0);
        gbc.writeMem(0x208c, { 0xee, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa705);
        EXPECT(gbc.pc(), 0x208e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 038A
        gbc.setState(0x5dad, 0xf4c8, 0xd7e0, 0x511f, 0x7cd1, 0x6df9, 0x0, 0x0);
        gbc.writeMem(0x5dad, { 0xee, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf4c8);
        EXPECT(gbc.pc(), 0x5daf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 038B
        gbc.setState(0x399b, 0x9e5d, 0x18b0, 0xa31f, 0xcf50, 0x35c6, 0x0, 0x0);
        gbc.writeMem(0x399b, { 0xee, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9e5d);
        EXPECT(gbc.pc(), 0x399d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 038D
        gbc.setState(0x763c, 0xc319, 0xb9c0, 0x1278, 0x9475, 0xe254, 0x1, 0x1);
        gbc.writeMem(0x763c, { 0xee, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc319);
        EXPECT(gbc.pc(), 0x763e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 038E
        gbc.setState(0x934a, 0x7279, 0xdf90, 0xd981, 0x421f, 0x50e7, 0x0, 0x0);
        gbc.writeMem(0x934a, { 0xee, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7279);
        EXPECT(gbc.pc(), 0x934c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x934a), 0xee);
        EXPECT(gbc.readMem(0x934b), 0x90);
        // EE 038F
        gbc.setState(0x7ab3, 0xe866, 0x5ca0, 0x9d16, 0x75e9, 0x2c1a, 0x0, 0x1);
        gbc.writeMem(0x7ab3, { 0xee, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe866);
        EXPECT(gbc.pc(), 0x7ab5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0390
        gbc.setState(0xea0, 0xa1ce, 0x4ae0, 0xae8a, 0x68bc, 0x83fd, 0x1, 0x1);
        gbc.writeMem(0xea0, { 0xee, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa1ce);
        EXPECT(gbc.pc(), 0xea2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0391
        gbc.setState(0x29a6, 0x3962, 0xede0, 0xbd53, 0x3108, 0x9b9f, 0x1, 0x0);
        gbc.writeMem(0x29a6, { 0xee, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3962);
        EXPECT(gbc.pc(), 0x29a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0392
        gbc.setState(0xc12b, 0x23f4, 0x7900, 0xb943, 0x456c, 0x1906, 0x1, 0x0);
        gbc.writeMem(0xc12b, { 0xee, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x23f4);
        EXPECT(gbc.pc(), 0xc12d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc12b), 0xee);
        EXPECT(gbc.readMem(0xc12c), 0xda);
        // EE 0393
        gbc.setState(0x2f4, 0x378c, 0x2680, 0x7160, 0x9f7f, 0x937d, 0x1, 0x0);
        gbc.writeMem(0x2f4, { 0xee, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x378c);
        EXPECT(gbc.pc(), 0x2f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0394
        gbc.setState(0xac52, 0xf018, 0xed10, 0xe18d, 0x284d, 0xe4bb, 0x0, 0x1);
        gbc.writeMem(0xac52, { 0xee, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf018);
        EXPECT(gbc.pc(), 0xac54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac52), 0xee);
        EXPECT(gbc.readMem(0xac53), 0xf4);
        // EE 0395
        gbc.setState(0x2a02, 0x6821, 0xf660, 0x45d7, 0x25be, 0x4ed, 0x0, 0x0);
        gbc.writeMem(0x2a02, { 0xee, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6821);
        EXPECT(gbc.pc(), 0x2a04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0396
        gbc.setState(0x7dab, 0x9add, 0x7cc0, 0x336f, 0x4007, 0x2938, 0x0, 0x1);
        gbc.writeMem(0x7dab, { 0xee, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9add);
        EXPECT(gbc.pc(), 0x7dad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0397
        gbc.setState(0x8707, 0xa0f, 0xfdf0, 0x3320, 0x2400, 0xfab1, 0x0, 0x0);
        gbc.writeMem(0x8707, { 0xee, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa0f);
        EXPECT(gbc.pc(), 0x8709);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8707), 0xee);
        EXPECT(gbc.readMem(0x8708), 0x6b);
        // EE 0398
        gbc.setState(0x78a, 0xc739, 0x10c0, 0x57be, 0x293b, 0x9f6, 0x1, 0x1);
        gbc.writeMem(0x78a, { 0xee, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc739);
        EXPECT(gbc.pc(), 0x78c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 0399
        gbc.setState(0x955b, 0x4e23, 0x440, 0x1100, 0x895b, 0x9fee, 0x1, 0x0);
        gbc.writeMem(0x955b, { 0xee, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4e23);
        EXPECT(gbc.pc(), 0x955d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x955b), 0xee);
        EXPECT(gbc.readMem(0x955c), 0xfe);
        // EE 039A
        gbc.setState(0xc9ad, 0xa541, 0xa950, 0x8bc5, 0xee10, 0xdad4, 0x1, 0x0);
        gbc.writeMem(0xc9ad, { 0xee, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa541);
        EXPECT(gbc.pc(), 0xc9af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9ad), 0xee);
        EXPECT(gbc.readMem(0xc9ae), 0x4b);
        // EE 039B
        gbc.setState(0x9290, 0x9592, 0xbb10, 0xd2a8, 0x3353, 0x4560, 0x1, 0x0);
        gbc.writeMem(0x9290, { 0xee, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9592);
        EXPECT(gbc.pc(), 0x9292);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9290), 0xee);
        EXPECT(gbc.readMem(0x9291), 0xe8);
        // EE 039C
        gbc.setState(0x705c, 0x7ab9, 0x82d0, 0xc620, 0x6b72, 0x1c06, 0x0, 0x0);
        gbc.writeMem(0x705c, { 0xee, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7ab9);
        EXPECT(gbc.pc(), 0x705e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 039E
        gbc.setState(0x5081, 0xb975, 0x91f0, 0x4bfd, 0xfdc9, 0x2ba1, 0x1, 0x1);
        gbc.writeMem(0x5081, { 0xee, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb975);
        EXPECT(gbc.pc(), 0x5083);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03A0
        gbc.setState(0x5c32, 0xfa98, 0xdcb0, 0x118a, 0x9965, 0x6e2a, 0x1, 0x0);
        gbc.writeMem(0x5c32, { 0xee, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfa98);
        EXPECT(gbc.pc(), 0x5c34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03A1
        gbc.setState(0x9b6, 0x40a7, 0x4460, 0xd441, 0x9319, 0xa6b3, 0x1, 0x0);
        gbc.writeMem(0x9b6, { 0xee, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x40a7);
        EXPECT(gbc.pc(), 0x9b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03A2
        gbc.setState(0x5b6, 0xa04d, 0x4a60, 0x1d6e, 0xa576, 0x688b, 0x1, 0x0);
        gbc.writeMem(0x5b6, { 0xee, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xa04d);
        EXPECT(gbc.pc(), 0x5b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03A3
        gbc.setState(0xeb09, 0xe997, 0x77b0, 0x66f4, 0x74a6, 0x866a, 0x1, 0x1);
        gbc.writeMem(0xeb09, { 0xee, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe997);
        EXPECT(gbc.pc(), 0xeb0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb09), 0xee);
        EXPECT(gbc.readMem(0xeb0a), 0x1);
        // EE 03A4
        gbc.setState(0x2dd6, 0x54a3, 0x9510, 0xad10, 0xcbb3, 0x2fad, 0x1, 0x0);
        gbc.writeMem(0x2dd6, { 0xee, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x54a3);
        EXPECT(gbc.pc(), 0x2dd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03A5
        gbc.setState(0xd7bb, 0xe3e7, 0xbb30, 0x5c41, 0x7453, 0xff09, 0x0, 0x1);
        gbc.writeMem(0xd7bb, { 0xee, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xe3e7);
        EXPECT(gbc.pc(), 0xd7bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7bb), 0xee);
        EXPECT(gbc.readMem(0xd7bc), 0xa8);
        // EE 03A6
        gbc.setState(0xd17b, 0x6efe, 0xcdb0, 0xb184, 0x5719, 0xe9a5, 0x0, 0x1);
        gbc.writeMem(0xd17b, { 0xee, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6efe);
        EXPECT(gbc.pc(), 0xd17d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd17b), 0xee);
        EXPECT(gbc.readMem(0xd17c), 0xed);
        // EE 03A7
        gbc.setState(0x1170, 0xeadb, 0x170, 0x4f05, 0x6765, 0xf07f, 0x1, 0x0);
        gbc.writeMem(0x1170, { 0xee, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xeadb);
        EXPECT(gbc.pc(), 0x1172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03A9
        gbc.setState(0xc304, 0x1fad, 0x10d0, 0xcd49, 0x3e0, 0xa3f9, 0x1, 0x0);
        gbc.writeMem(0xc304, { 0xee, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1fad);
        EXPECT(gbc.pc(), 0xc306);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc304), 0xee);
        EXPECT(gbc.readMem(0xc305), 0x8);
        // EE 03AA
        gbc.setState(0xc85f, 0xee1d, 0x110, 0x4a5c, 0x3192, 0x17cf, 0x0, 0x1);
        gbc.writeMem(0xc85f, { 0xee, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xee1d);
        EXPECT(gbc.pc(), 0xc861);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc85f), 0xee);
        EXPECT(gbc.readMem(0xc860), 0x10);
        // EE 03AB
        gbc.setState(0xac1b, 0xe6ee, 0x4300, 0xca6f, 0x239b, 0x12d2, 0x0, 0x1);
        gbc.writeMem(0xac1b, { 0xee, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xe6ee);
        EXPECT(gbc.pc(), 0xac1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac1b), 0xee);
        EXPECT(gbc.readMem(0xac1c), 0x90);
        // EE 03AC
        gbc.setState(0xe872, 0x2b, 0xbd80, 0x4ac4, 0xa33c, 0x24c5, 0x0, 0x0);
        gbc.writeMem(0xe872, { 0xee, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2b);
        EXPECT(gbc.pc(), 0xe874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe872), 0xee);
        EXPECT(gbc.readMem(0xe873), 0x7c);
        // EE 03AD
        gbc.setState(0x3d16, 0xa537, 0xd410, 0xf8eb, 0xaed6, 0x13d2, 0x0, 0x0);
        gbc.writeMem(0x3d16, { 0xee, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa537);
        EXPECT(gbc.pc(), 0x3d18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03AE
        gbc.setState(0x7790, 0xf583, 0xff00, 0x5649, 0xcb1c, 0xc4bb, 0x0, 0x0);
        gbc.writeMem(0x7790, { 0xee, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf583);
        EXPECT(gbc.pc(), 0x7792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03AF
        gbc.setState(0xc31f, 0x44b7, 0xdf30, 0x176e, 0xa15e, 0x60fb, 0x0, 0x1);
        gbc.writeMem(0xc31f, { 0xee, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x44b7);
        EXPECT(gbc.pc(), 0xc321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc31f), 0xee);
        EXPECT(gbc.readMem(0xc320), 0x8a);
        // EE 03B0
        gbc.setState(0xd724, 0x1f58, 0x2ff0, 0x48ac, 0x8f09, 0x186b, 0x0, 0x1);
        gbc.writeMem(0xd724, { 0xee, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1f58);
        EXPECT(gbc.pc(), 0xd726);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd724), 0xee);
        EXPECT(gbc.readMem(0xd725), 0xb1);
        // EE 03B1
        gbc.setState(0xbb5a, 0x97b9, 0x21b0, 0x12e7, 0x1d32, 0xdc5f, 0x1, 0x0);
        gbc.writeMem(0xbb5a, { 0xee, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x97b9);
        EXPECT(gbc.pc(), 0xbb5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb5a), 0xee);
        EXPECT(gbc.readMem(0xbb5b), 0x30);
        // EE 03B2
        gbc.setState(0xddb8, 0x6f5f, 0x89b0, 0xc7aa, 0x13c6, 0x3887, 0x1, 0x0);
        gbc.writeMem(0xddb8, { 0xee, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6f5f);
        EXPECT(gbc.pc(), 0xddba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddb8), 0xee);
        EXPECT(gbc.readMem(0xddb9), 0xd9);
        // EE 03B3
        gbc.setState(0xd85, 0x46c2, 0x8b70, 0xb996, 0xb7df, 0xab44, 0x0, 0x0);
        gbc.writeMem(0xd85, { 0xee, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x46c2);
        EXPECT(gbc.pc(), 0xd87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03B4
        gbc.setState(0xe1e1, 0xf1b4, 0xca60, 0x2707, 0x2241, 0xf310, 0x0, 0x1);
        gbc.writeMem(0xe1e1, { 0xee, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf1b4);
        EXPECT(gbc.pc(), 0xe1e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1e1), 0xee);
        EXPECT(gbc.readMem(0xe1e2), 0xf3);
        // EE 03B5
        gbc.setState(0xa2fe, 0x438a, 0x1000, 0x97cc, 0xb681, 0xa4af, 0x0, 0x1);
        gbc.writeMem(0xa2fe, { 0xee, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x438a);
        EXPECT(gbc.pc(), 0xa300);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2fe), 0xee);
        EXPECT(gbc.readMem(0xa2ff), 0x76);
        // EE 03B6
        gbc.setState(0x3d44, 0x6b1a, 0x5ae0, 0x9785, 0x50dd, 0xffba, 0x1, 0x0);
        gbc.writeMem(0x3d44, { 0xee, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6b1a);
        EXPECT(gbc.pc(), 0x3d46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03B7
        gbc.setState(0x6b61, 0x4726, 0x6e00, 0x90cf, 0xe967, 0xdb8c, 0x0, 0x1);
        gbc.writeMem(0x6b61, { 0xee, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4726);
        EXPECT(gbc.pc(), 0x6b63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03B9
        gbc.setState(0xa059, 0x7787, 0x9220, 0x427e, 0xeda4, 0xb1a4, 0x0, 0x1);
        gbc.writeMem(0xa059, { 0xee, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7787);
        EXPECT(gbc.pc(), 0xa05b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa059), 0xee);
        EXPECT(gbc.readMem(0xa05a), 0x59);
        // EE 03BA
        gbc.setState(0xdae6, 0xf6b7, 0x8fa0, 0x7994, 0xf705, 0x2082, 0x0, 0x0);
        gbc.writeMem(0xdae6, { 0xee, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xf6b7);
        EXPECT(gbc.pc(), 0xdae8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdae6), 0xee);
        EXPECT(gbc.readMem(0xdae7), 0x78);
        // EE 03BB
        gbc.setState(0xa20a, 0x5ac5, 0xa7a0, 0x63d0, 0x37b7, 0xcd3d, 0x0, 0x0);
        gbc.writeMem(0xa20a, { 0xee, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5ac5);
        EXPECT(gbc.pc(), 0xa20c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa20a), 0xee);
        EXPECT(gbc.readMem(0xa20b), 0x67);
        // EE 03BC
        gbc.setState(0x67d, 0xc10b, 0xab50, 0x15e8, 0x6797, 0x669f, 0x0, 0x1);
        gbc.writeMem(0x67d, { 0xee, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc10b);
        EXPECT(gbc.pc(), 0x67f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03BD
        gbc.setState(0x9147, 0x2c19, 0x1ec0, 0xff8e, 0x6782, 0x9211, 0x1, 0x0);
        gbc.writeMem(0x9147, { 0xee, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2c19);
        EXPECT(gbc.pc(), 0x9149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9147), 0xee);
        EXPECT(gbc.readMem(0x9148), 0x69);
        // EE 03BE
        gbc.setState(0x381f, 0x34a, 0x69d0, 0x1f9c, 0x8d47, 0x1bab, 0x1, 0x0);
        gbc.writeMem(0x381f, { 0xee, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x34a);
        EXPECT(gbc.pc(), 0x3821);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03BF
        gbc.setState(0xe8fa, 0xff22, 0xecb0, 0x2b00, 0xb61d, 0xbc0a, 0x1, 0x0);
        gbc.writeMem(0xe8fa, { 0xee, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xff22);
        EXPECT(gbc.pc(), 0xe8fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8fa), 0xee);
        EXPECT(gbc.readMem(0xe8fb), 0x49);
        // EE 03C0
        gbc.setState(0x3954, 0x6ba9, 0xc250, 0x89cd, 0xae38, 0x4b83, 0x1, 0x1);
        gbc.writeMem(0x3954, { 0xee, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6ba9);
        EXPECT(gbc.pc(), 0x3956);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03C2
        gbc.setState(0x1e14, 0x1655, 0x6340, 0x4566, 0x1fc1, 0xbaad, 0x0, 0x1);
        gbc.writeMem(0x1e14, { 0xee, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1655);
        EXPECT(gbc.pc(), 0x1e16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03C3
        gbc.setState(0x2feb, 0x3c06, 0x8c30, 0xb26a, 0x6e8c, 0x2663, 0x1, 0x1);
        gbc.writeMem(0x2feb, { 0xee, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3c06);
        EXPECT(gbc.pc(), 0x2fed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03C4
        gbc.setState(0x459b, 0x1c8e, 0xe7e0, 0xe3bc, 0x493d, 0xec6b, 0x0, 0x1);
        gbc.writeMem(0x459b, { 0xee, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1c8e);
        EXPECT(gbc.pc(), 0x459d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03C5
        gbc.setState(0x7ab2, 0xac69, 0x7a50, 0x40be, 0x9837, 0xf782, 0x1, 0x0);
        gbc.writeMem(0x7ab2, { 0xee, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xac69);
        EXPECT(gbc.pc(), 0x7ab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03C6
        gbc.setState(0xe321, 0xd1e3, 0x6690, 0xd380, 0x3d48, 0x849, 0x0, 0x1);
        gbc.writeMem(0xe321, { 0xee, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd1e3);
        EXPECT(gbc.pc(), 0xe323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe321), 0xee);
        EXPECT(gbc.readMem(0xe322), 0x4a);
        // EE 03C7
        gbc.setState(0x18c3, 0x90ad, 0x560, 0x9f82, 0xfef0, 0x2483, 0x0, 0x1);
        gbc.writeMem(0x18c3, { 0xee, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x90ad);
        EXPECT(gbc.pc(), 0x18c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03C8
        gbc.setState(0xb834, 0xbee7, 0x9e50, 0xdad5, 0xbe0e, 0x24b9, 0x1, 0x1);
        gbc.writeMem(0xb834, { 0xee, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xbee7);
        EXPECT(gbc.pc(), 0xb836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb834), 0xee);
        EXPECT(gbc.readMem(0xb835), 0xf0);
        // EE 03C9
        gbc.setState(0xcadd, 0xc47, 0xbf40, 0x12e2, 0x3468, 0xd77, 0x0, 0x0);
        gbc.writeMem(0xcadd, { 0xee, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc47);
        EXPECT(gbc.pc(), 0xcadf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcadd), 0xee);
        EXPECT(gbc.readMem(0xcade), 0x26);
        // EE 03CA
        gbc.setState(0x1fdd, 0x4b10, 0x7420, 0x4fb9, 0xf33c, 0x476d, 0x1, 0x0);
        gbc.writeMem(0x1fdd, { 0xee, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x4b10);
        EXPECT(gbc.pc(), 0x1fdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03CC
        gbc.setState(0x1a1f, 0xb2e3, 0x5840, 0xa10b, 0x635b, 0x641e, 0x0, 0x1);
        gbc.writeMem(0x1a1f, { 0xee, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb2e3);
        EXPECT(gbc.pc(), 0x1a21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03CD
        gbc.setState(0x67be, 0x6ed8, 0xe8c0, 0xea70, 0x90c1, 0x7e7a, 0x1, 0x1);
        gbc.writeMem(0x67be, { 0xee, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6ed8);
        EXPECT(gbc.pc(), 0x67c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03CE
        gbc.setState(0xda8b, 0xddb0, 0x9370, 0xff22, 0x696e, 0x3c0f, 0x0, 0x1);
        gbc.writeMem(0xda8b, { 0xee, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xddb0);
        EXPECT(gbc.pc(), 0xda8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda8b), 0xee);
        EXPECT(gbc.readMem(0xda8c), 0x46);
        // EE 03CF
        gbc.setState(0x9142, 0xf768, 0x2ee0, 0xd42a, 0x1f7a, 0xdea7, 0x1, 0x1);
        gbc.writeMem(0x9142, { 0xee, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf768);
        EXPECT(gbc.pc(), 0x9144);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9142), 0xee);
        EXPECT(gbc.readMem(0x9143), 0xeb);
        // EE 03D0
        gbc.setState(0xe4e6, 0x517c, 0x70c0, 0x65de, 0x7908, 0xfb39, 0x1, 0x1);
        gbc.writeMem(0xe4e6, { 0xee, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x517c);
        EXPECT(gbc.pc(), 0xe4e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4e6), 0xee);
        EXPECT(gbc.readMem(0xe4e7), 0x90);
        // EE 03D3
        gbc.setState(0x68a1, 0x1187, 0x98b0, 0x7b53, 0xe8e2, 0x5cc8, 0x1, 0x0);
        gbc.writeMem(0x68a1, { 0xee, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1187);
        EXPECT(gbc.pc(), 0x68a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03D4
        gbc.setState(0x6ae4, 0x62ce, 0x35c0, 0xbcdd, 0xaca, 0xe692, 0x0, 0x1);
        gbc.writeMem(0x6ae4, { 0xee, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x62ce);
        EXPECT(gbc.pc(), 0x6ae6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03D5
        gbc.setState(0xeeec, 0xa0e1, 0x7120, 0x1dd7, 0x4bf6, 0xd5f7, 0x1, 0x0);
        gbc.writeMem(0xeeec, { 0xee, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa0e1);
        EXPECT(gbc.pc(), 0xeeee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeec), 0xee);
        EXPECT(gbc.readMem(0xeeed), 0x7f);
        // EE 03D6
        gbc.setState(0xe745, 0x80ee, 0x3040, 0x817b, 0xc7ca, 0x848b, 0x1, 0x0);
        gbc.writeMem(0xe745, { 0xee, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x80ee);
        EXPECT(gbc.pc(), 0xe747);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe745), 0xee);
        EXPECT(gbc.readMem(0xe746), 0x5d);
        // EE 03D7
        gbc.setState(0xd106, 0xc967, 0x44a0, 0x3553, 0x665c, 0x5025, 0x0, 0x1);
        gbc.writeMem(0xd106, { 0xee, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc967);
        EXPECT(gbc.pc(), 0xd108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd106), 0xee);
        EXPECT(gbc.readMem(0xd107), 0xa4);
        // EE 03D8
        gbc.setState(0x6f67, 0xa3e7, 0x6650, 0xda7c, 0xf108, 0x970c, 0x1, 0x0);
        gbc.writeMem(0x6f67, { 0xee, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa3e7);
        EXPECT(gbc.pc(), 0x6f69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03D9
        gbc.setState(0x2a7b, 0xbcf5, 0xcc20, 0xde52, 0xabd9, 0xcbdf, 0x0, 0x1);
        gbc.writeMem(0x2a7b, { 0xee, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xbcf5);
        EXPECT(gbc.pc(), 0x2a7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03DA
        gbc.setState(0xd03e, 0xdfd9, 0x4410, 0x8a2f, 0xb392, 0x4f42, 0x0, 0x1);
        gbc.writeMem(0xd03e, { 0xee, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xdfd9);
        EXPECT(gbc.pc(), 0xd040);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd03e), 0xee);
        EXPECT(gbc.readMem(0xd03f), 0xb6);
        // EE 03DB
        gbc.setState(0xcdcc, 0xaf19, 0x4cb0, 0x34fc, 0x13e1, 0xdb87, 0x0, 0x1);
        gbc.writeMem(0xcdcc, { 0xee, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xaf19);
        EXPECT(gbc.pc(), 0xcdce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdcc), 0xee);
        EXPECT(gbc.readMem(0xcdcd), 0xc1);
        // EE 03DC
        gbc.setState(0xab1f, 0x4f47, 0xe400, 0x52a5, 0x4eca, 0x4565, 0x1, 0x0);
        gbc.writeMem(0xab1f, { 0xee, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4f47);
        EXPECT(gbc.pc(), 0xab21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab1f), 0xee);
        EXPECT(gbc.readMem(0xab20), 0x6b);
        // EE 03DD
        gbc.setState(0xef7b, 0x88b5, 0x33f0, 0xeafc, 0xa598, 0x3e90, 0x0, 0x1);
        gbc.writeMem(0xef7b, { 0xee, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x88b5);
        EXPECT(gbc.pc(), 0xef7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef7b), 0xee);
        EXPECT(gbc.readMem(0xef7c), 0x98);
        // EE 03DE
        gbc.setState(0x4cd, 0xcde6, 0x1750, 0x4e18, 0xe320, 0x9350, 0x1, 0x0);
        gbc.writeMem(0x4cd, { 0xee, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xcde6);
        EXPECT(gbc.pc(), 0x4cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03DF
        gbc.setState(0x20c8, 0xba5b, 0x4a90, 0xe31d, 0x959f, 0x5403, 0x0, 0x0);
        gbc.writeMem(0x20c8, { 0xee, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xba5b);
        EXPECT(gbc.pc(), 0x20ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03E0
        gbc.setState(0x6868, 0xa81c, 0x84c0, 0x8946, 0x671b, 0x2200, 0x1, 0x0);
        gbc.writeMem(0x6868, { 0xee, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa81c);
        EXPECT(gbc.pc(), 0x686a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03E1
        gbc.setState(0xec38, 0xc537, 0x54c0, 0xb067, 0x8d5e, 0xae94, 0x0, 0x1);
        gbc.writeMem(0xec38, { 0xee, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc537);
        EXPECT(gbc.pc(), 0xec3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec38), 0xee);
        EXPECT(gbc.readMem(0xec39), 0xe0);
        // EE 03E2
        gbc.setState(0xda7b, 0x911f, 0xc950, 0x8675, 0xe1ee, 0x24e3, 0x0, 0x1);
        gbc.writeMem(0xda7b, { 0xee, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x911f);
        EXPECT(gbc.pc(), 0xda7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda7b), 0xee);
        EXPECT(gbc.readMem(0xda7c), 0x2d);
        // EE 03E3
        gbc.setState(0x465d, 0xef50, 0x2840, 0x8c7e, 0x13da, 0x33d6, 0x0, 0x0);
        gbc.writeMem(0x465d, { 0xee, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xef50);
        EXPECT(gbc.pc(), 0x465f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // EE 03E4
        gbc.setState(0x872a, 0xd4ab, 0xef10, 0x74e7, 0x60b2, 0x86f6, 0x1, 0x1);
        gbc.writeMem(0x872a, { 0xee, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd4ab);
        EXPECT(gbc.pc(), 0x872c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x872a), 0xee);
        EXPECT(gbc.readMem(0x872b), 0x79);
        // EE 03E5
        gbc.setState(0xaaa0, 0x8835, 0xa8c0, 0x8f72, 0xc72c, 0x1efd, 0x0, 0x0);
        gbc.writeMem(0xaaa0, { 0xee, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8835);
        EXPECT(gbc.pc(), 0xaaa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaa0), 0xee);
        EXPECT(gbc.readMem(0xaaa1), 0x96);
        // EE 03E6
        gbc.setState(0xa094, 0x1260, 0x7a0, 0x8a67, 0x58d7, 0x930a, 0x1, 0x1);
        gbc.writeMem(0xa094, { 0xee, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x1260);
        EXPECT(gbc.pc(), 0xa096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa094), 0xee);
        EXPECT(gbc.readMem(0xa095), 0x72);
        // EE 03E7
        gbc.setState(0xd86b, 0xe60e, 0xba70, 0x7085, 0x3c23, 0x1ae6, 0x0, 0x1);
        gbc.writeMem(0xd86b, { 0xee, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe60e);
        EXPECT(gbc.pc(), 0xd86d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd86b), 0xee);
        EXPECT(gbc.readMem(0xd86c), 0x63);
    }
}
#endif
