#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_8b)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_8b) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 8B 0000
        gbc.setState(0x7ab4, 0xb3f5, 0xb9a0, 0xc4c9, 0x56a9, 0x244c, 0x1, 0x1);
        gbc.writeMem(0x7ab4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb3f5);
        EXPECT(gbc.pc(), 0x7ab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0001
        gbc.setState(0x3cde, 0xf725, 0x1700, 0x2296, 0xdd6b, 0x500c, 0x1, 0x1);
        gbc.writeMem(0x3cde, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf725);
        EXPECT(gbc.pc(), 0x3ce0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0002
        gbc.setState(0xe65f, 0x9489, 0x4ee0, 0xb637, 0x416d, 0x881f, 0x0, 0x1);
        gbc.writeMem(0xe65f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x9489);
        EXPECT(gbc.pc(), 0xe661);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe65f), 0xcb);
        EXPECT(gbc.readMem(0xe660), 0x8b);
        // CB 8B 0003
        gbc.setState(0x53db, 0x9f01, 0xc7e0, 0x16e2, 0x50db, 0x2fad, 0x1, 0x1);
        gbc.writeMem(0x53db, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9f01);
        EXPECT(gbc.pc(), 0x53dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0004
        gbc.setState(0xa3ab, 0x2cf1, 0x1170, 0xd869, 0xe0c, 0x8e1d, 0x0, 0x1);
        gbc.writeMem(0xa3ab, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2cf1);
        EXPECT(gbc.pc(), 0xa3ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3ab), 0xcb);
        EXPECT(gbc.readMem(0xa3ac), 0x8b);
        // CB 8B 0005
        gbc.setState(0xed90, 0x9279, 0x9170, 0xbe28, 0x5f8e, 0x96f0, 0x0, 0x0);
        gbc.writeMem(0xed90, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9279);
        EXPECT(gbc.pc(), 0xed92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed90), 0xcb);
        EXPECT(gbc.readMem(0xed91), 0x8b);
        // CB 8B 0006
        gbc.setState(0xbc7e, 0x40b6, 0x6a00, 0x8769, 0x3c18, 0xad7e, 0x0, 0x1);
        gbc.writeMem(0xbc7e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x40b6);
        EXPECT(gbc.pc(), 0xbc80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc7e), 0xcb);
        EXPECT(gbc.readMem(0xbc7f), 0x8b);
        // CB 8B 0007
        gbc.setState(0x1146, 0xcc8f, 0xd920, 0x6c77, 0x75b, 0x6207, 0x1, 0x0);
        gbc.writeMem(0x1146, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xcc8f);
        EXPECT(gbc.pc(), 0x1148);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0008
        gbc.setState(0xa17f, 0xf7ab, 0xa920, 0x37e2, 0x7114, 0x76e4, 0x0, 0x1);
        gbc.writeMem(0xa17f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf7ab);
        EXPECT(gbc.pc(), 0xa181);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa17f), 0xcb);
        EXPECT(gbc.readMem(0xa180), 0x8b);
        // CB 8B 0009
        gbc.setState(0xe507, 0x10d6, 0xb110, 0xb7da, 0x7fae, 0x767d, 0x0, 0x1);
        gbc.writeMem(0xe507, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x10d6);
        EXPECT(gbc.pc(), 0xe509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe507), 0xcb);
        EXPECT(gbc.readMem(0xe508), 0x8b);
        // CB 8B 000A
        gbc.setState(0x8259, 0x2a7c, 0xa3e0, 0xb911, 0x3a27, 0x917f, 0x1, 0x0);
        gbc.writeMem(0x8259, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2a7c);
        EXPECT(gbc.pc(), 0x825b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8259), 0xcb);
        EXPECT(gbc.readMem(0x825a), 0x8b);
        // CB 8B 000B
        gbc.setState(0x870e, 0x5b95, 0xc0b0, 0xfccc, 0xf77, 0xb28, 0x1, 0x1);
        gbc.writeMem(0x870e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5b95);
        EXPECT(gbc.pc(), 0x8710);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x870e), 0xcb);
        EXPECT(gbc.readMem(0x870f), 0x8b);
        // CB 8B 000C
        gbc.setState(0xaaf6, 0x5123, 0xc780, 0xff12, 0x21a4, 0x4417, 0x0, 0x0);
        gbc.writeMem(0xaaf6, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5123);
        EXPECT(gbc.pc(), 0xaaf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf6), 0xcb);
        EXPECT(gbc.readMem(0xaaf7), 0x8b);
        // CB 8B 000D
        gbc.setState(0x3d5c, 0xb22f, 0x1610, 0x16b7, 0x6d2, 0x4d69, 0x0, 0x0);
        gbc.writeMem(0x3d5c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb22f);
        EXPECT(gbc.pc(), 0x3d5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 000E
        gbc.setState(0x9642, 0xb69b, 0xbd80, 0xa945, 0x4b20, 0x411e, 0x0, 0x1);
        gbc.writeMem(0x9642, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb69b);
        EXPECT(gbc.pc(), 0x9644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9642), 0xcb);
        EXPECT(gbc.readMem(0x9643), 0x8b);
        // CB 8B 000F
        gbc.setState(0x7d0c, 0xa724, 0x8970, 0x3e1e, 0x9fa7, 0x71a0, 0x0, 0x1);
        gbc.writeMem(0x7d0c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa724);
        EXPECT(gbc.pc(), 0x7d0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0010
        gbc.setState(0xa99b, 0x8298, 0x41e0, 0x6d20, 0x1fc1, 0xd508, 0x0, 0x0);
        gbc.writeMem(0xa99b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8298);
        EXPECT(gbc.pc(), 0xa99d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa99b), 0xcb);
        EXPECT(gbc.readMem(0xa99c), 0x8b);
        // CB 8B 0011
        gbc.setState(0x19a5, 0xec16, 0x1a40, 0x8ed9, 0x627c, 0xf259, 0x1, 0x1);
        gbc.writeMem(0x19a5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xec16);
        EXPECT(gbc.pc(), 0x19a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0012
        gbc.setState(0x62be, 0xe91b, 0x4d70, 0x6d65, 0xf74a, 0x1b75, 0x1, 0x1);
        gbc.writeMem(0x62be, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe91b);
        EXPECT(gbc.pc(), 0x62c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0013
        gbc.setState(0x94a8, 0x7f2a, 0x8200, 0xaded, 0x3ec7, 0x5aec, 0x1, 0x0);
        gbc.writeMem(0x94a8, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7f2a);
        EXPECT(gbc.pc(), 0x94aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94a8), 0xcb);
        EXPECT(gbc.readMem(0x94a9), 0x8b);
        // CB 8B 0015
        gbc.setState(0x782f, 0xb936, 0x8b20, 0xd9a8, 0x29d6, 0xe9e8, 0x1, 0x1);
        gbc.writeMem(0x782f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb936);
        EXPECT(gbc.pc(), 0x7831);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0016
        gbc.setState(0x64f6, 0xcad6, 0xee20, 0x81d2, 0x28c0, 0x5a23, 0x0, 0x1);
        gbc.writeMem(0x64f6, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xcad6);
        EXPECT(gbc.pc(), 0x64f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0017
        gbc.setState(0xa384, 0xa6fc, 0x1fb0, 0xd2a6, 0xb445, 0x24f9, 0x0, 0x1);
        gbc.writeMem(0xa384, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa6fc);
        EXPECT(gbc.pc(), 0xa386);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa384), 0xcb);
        EXPECT(gbc.readMem(0xa385), 0x8b);
        // CB 8B 0018
        gbc.setState(0xc48d, 0xd6e8, 0x1180, 0x9ae1, 0x2b4d, 0x5b0e, 0x1, 0x0);
        gbc.writeMem(0xc48d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd6e8);
        EXPECT(gbc.pc(), 0xc48f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc48d), 0xcb);
        EXPECT(gbc.readMem(0xc48e), 0x8b);
        // CB 8B 001A
        gbc.setState(0x2814, 0x71f7, 0xadd0, 0x29c4, 0x608d, 0x106a, 0x1, 0x0);
        gbc.writeMem(0x2814, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x71f7);
        EXPECT(gbc.pc(), 0x2816);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 001B
        gbc.setState(0xefb3, 0x90c5, 0xaed0, 0x9e19, 0xb864, 0x4a5c, 0x0, 0x1);
        gbc.writeMem(0xefb3, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x90c5);
        EXPECT(gbc.pc(), 0xefb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefb3), 0xcb);
        EXPECT(gbc.readMem(0xefb4), 0x8b);
        // CB 8B 001C
        gbc.setState(0x4b02, 0xf033, 0xaec0, 0x33b3, 0x1886, 0x1c34, 0x1, 0x1);
        gbc.writeMem(0x4b02, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf033);
        EXPECT(gbc.pc(), 0x4b04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 001E
        gbc.setState(0x74c9, 0x313c, 0xb730, 0xd8a1, 0xfd80, 0xfcb2, 0x1, 0x0);
        gbc.writeMem(0x74c9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x313c);
        EXPECT(gbc.pc(), 0x74cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 001F
        gbc.setState(0xcbec, 0x82ae, 0x3150, 0x64e6, 0xf9e4, 0x8d29, 0x1, 0x1);
        gbc.writeMem(0xcbec, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x82ae);
        EXPECT(gbc.pc(), 0xcbee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbec), 0xcb);
        EXPECT(gbc.readMem(0xcbed), 0x8b);
        // CB 8B 0020
        gbc.setState(0xca02, 0x61a, 0xf1c0, 0x6342, 0xddd, 0xa874, 0x1, 0x1);
        gbc.writeMem(0xca02, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x61a);
        EXPECT(gbc.pc(), 0xca04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca02), 0xcb);
        EXPECT(gbc.readMem(0xca03), 0x8b);
        // CB 8B 0021
        gbc.setState(0x8a2c, 0xfb38, 0x4920, 0xd45e, 0xdf5e, 0x7592, 0x1, 0x0);
        gbc.writeMem(0x8a2c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xfb38);
        EXPECT(gbc.pc(), 0x8a2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a2c), 0xcb);
        EXPECT(gbc.readMem(0x8a2d), 0x8b);
        // CB 8B 0022
        gbc.setState(0x3486, 0x42b1, 0xdfe0, 0x5584, 0x86fa, 0xea91, 0x0, 0x0);
        gbc.writeMem(0x3486, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x42b1);
        EXPECT(gbc.pc(), 0x3488);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0023
        gbc.setState(0xdc8d, 0xb60b, 0x7750, 0xfd71, 0x1317, 0x303, 0x1, 0x1);
        gbc.writeMem(0xdc8d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb60b);
        EXPECT(gbc.pc(), 0xdc8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc8d), 0xcb);
        EXPECT(gbc.readMem(0xdc8e), 0x8b);
        // CB 8B 0024
        gbc.setState(0x20ac, 0x57ab, 0xdfa0, 0x152a, 0xf9c, 0x7074, 0x0, 0x0);
        gbc.writeMem(0x20ac, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x57ab);
        EXPECT(gbc.pc(), 0x20ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0025
        gbc.setState(0x71be, 0x2b11, 0xb770, 0x9e87, 0x3442, 0x3ac7, 0x1, 0x0);
        gbc.writeMem(0x71be, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2b11);
        EXPECT(gbc.pc(), 0x71c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0026
        gbc.setState(0x37fa, 0x7bc4, 0xbf60, 0x8000, 0xeab1, 0x9f51, 0x1, 0x1);
        gbc.writeMem(0x37fa, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7bc4);
        EXPECT(gbc.pc(), 0x37fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0027
        gbc.setState(0x51f, 0x8b6f, 0xd580, 0xcb2b, 0x9791, 0xafc4, 0x0, 0x0);
        gbc.writeMem(0x51f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8b6f);
        EXPECT(gbc.pc(), 0x521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0028
        gbc.setState(0x5241, 0x44f8, 0x4850, 0xe894, 0xe895, 0x775, 0x1, 0x0);
        gbc.writeMem(0x5241, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x44f8);
        EXPECT(gbc.pc(), 0x5243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0029
        gbc.setState(0x4766, 0xd358, 0x7d90, 0x1b3c, 0x3a67, 0x75bf, 0x0, 0x1);
        gbc.writeMem(0x4766, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd358);
        EXPECT(gbc.pc(), 0x4768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 002A
        gbc.setState(0xce5f, 0x8945, 0x8730, 0x90a5, 0x2076, 0xcb33, 0x1, 0x0);
        gbc.writeMem(0xce5f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8945);
        EXPECT(gbc.pc(), 0xce61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce5f), 0xcb);
        EXPECT(gbc.readMem(0xce60), 0x8b);
        // CB 8B 002B
        gbc.setState(0x879c, 0x7e58, 0x12f0, 0xb87, 0xcc9c, 0x7b0d, 0x1, 0x1);
        gbc.writeMem(0x879c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7e58);
        EXPECT(gbc.pc(), 0x879e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x879c), 0xcb);
        EXPECT(gbc.readMem(0x879d), 0x8b);
        // CB 8B 002C
        gbc.setState(0x2fa1, 0xe7ff, 0x56e0, 0x2584, 0xc7fd, 0x9543, 0x1, 0x1);
        gbc.writeMem(0x2fa1, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe7ff);
        EXPECT(gbc.pc(), 0x2fa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 002D
        gbc.setState(0xd379, 0x46c6, 0x6490, 0x5460, 0xa567, 0x5a98, 0x0, 0x1);
        gbc.writeMem(0xd379, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x46c6);
        EXPECT(gbc.pc(), 0xd37b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd379), 0xcb);
        EXPECT(gbc.readMem(0xd37a), 0x8b);
        // CB 8B 002F
        gbc.setState(0xe4ac, 0xf459, 0xca50, 0x16a9, 0xc03d, 0xadbd, 0x0, 0x1);
        gbc.writeMem(0xe4ac, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf459);
        EXPECT(gbc.pc(), 0xe4ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4ac), 0xcb);
        EXPECT(gbc.readMem(0xe4ad), 0x8b);
        // CB 8B 0031
        gbc.setState(0x2586, 0xd709, 0x9570, 0xdeec, 0x645f, 0x8e92, 0x0, 0x0);
        gbc.writeMem(0x2586, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd709);
        EXPECT(gbc.pc(), 0x2588);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0032
        gbc.setState(0x14a1, 0xd74f, 0x7440, 0xb2f1, 0x74fd, 0xbfc6, 0x0, 0x0);
        gbc.writeMem(0x14a1, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd74f);
        EXPECT(gbc.pc(), 0x14a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0033
        gbc.setState(0xd438, 0x4f11, 0x3840, 0xf652, 0x53d2, 0x1976, 0x0, 0x0);
        gbc.writeMem(0xd438, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4f11);
        EXPECT(gbc.pc(), 0xd43a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd438), 0xcb);
        EXPECT(gbc.readMem(0xd439), 0x8b);
        // CB 8B 0034
        gbc.setState(0x8247, 0xe96b, 0xdcf0, 0xd04f, 0xccb0, 0x20f6, 0x1, 0x0);
        gbc.writeMem(0x8247, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe96b);
        EXPECT(gbc.pc(), 0x8249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8247), 0xcb);
        EXPECT(gbc.readMem(0x8248), 0x8b);
        // CB 8B 0035
        gbc.setState(0x8853, 0xa92a, 0x8670, 0x3e66, 0x6133, 0xa26a, 0x1, 0x1);
        gbc.writeMem(0x8853, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa92a);
        EXPECT(gbc.pc(), 0x8855);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8853), 0xcb);
        EXPECT(gbc.readMem(0x8854), 0x8b);
        // CB 8B 0036
        gbc.setState(0x4241, 0xbe7d, 0xecc0, 0x3be7, 0xa124, 0x7e9d, 0x1, 0x0);
        gbc.writeMem(0x4241, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xbe7d);
        EXPECT(gbc.pc(), 0x4243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0037
        gbc.setState(0xc9f, 0x2247, 0xe3a0, 0xc367, 0x7a98, 0xd7b9, 0x0, 0x0);
        gbc.writeMem(0xc9f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2247);
        EXPECT(gbc.pc(), 0xca1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0039
        gbc.setState(0xcafb, 0x66aa, 0x16a0, 0xdf4d, 0x306e, 0x291e, 0x0, 0x0);
        gbc.writeMem(0xcafb, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x66aa);
        EXPECT(gbc.pc(), 0xcafd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcafb), 0xcb);
        EXPECT(gbc.readMem(0xcafc), 0x8b);
        // CB 8B 003B
        gbc.setState(0x411e, 0x9819, 0x430, 0xf036, 0x266a, 0xa5c0, 0x1, 0x0);
        gbc.writeMem(0x411e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9819);
        EXPECT(gbc.pc(), 0x4120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 003C
        gbc.setState(0x9cc6, 0x84c4, 0xc1e0, 0xd6df, 0xac7b, 0xa739, 0x1, 0x0);
        gbc.writeMem(0x9cc6, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x84c4);
        EXPECT(gbc.pc(), 0x9cc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cc6), 0xcb);
        EXPECT(gbc.readMem(0x9cc7), 0x8b);
        // CB 8B 003D
        gbc.setState(0x1559, 0x9b55, 0x6440, 0x2560, 0xfea6, 0xab57, 0x1, 0x0);
        gbc.writeMem(0x1559, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9b55);
        EXPECT(gbc.pc(), 0x155b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 003E
        gbc.setState(0xc9dd, 0x9688, 0x81c0, 0xa8ef, 0x89c3, 0x7209, 0x1, 0x0);
        gbc.writeMem(0xc9dd, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x9688);
        EXPECT(gbc.pc(), 0xc9df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9dd), 0xcb);
        EXPECT(gbc.readMem(0xc9de), 0x8b);
        // CB 8B 003F
        gbc.setState(0x9a4f, 0x97e, 0xccf0, 0xf911, 0x8be6, 0xfc39, 0x1, 0x1);
        gbc.writeMem(0x9a4f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x97e);
        EXPECT(gbc.pc(), 0x9a51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a4f), 0xcb);
        EXPECT(gbc.readMem(0x9a50), 0x8b);
        // CB 8B 0041
        gbc.setState(0xb2c4, 0x4839, 0x1220, 0xd7dc, 0xde7d, 0x4d3, 0x0, 0x0);
        gbc.writeMem(0xb2c4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4839);
        EXPECT(gbc.pc(), 0xb2c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2c4), 0xcb);
        EXPECT(gbc.readMem(0xb2c5), 0x8b);
        // CB 8B 0042
        gbc.setState(0x3507, 0x6279, 0x5fd0, 0x1ce2, 0xa0b1, 0x9b1e, 0x0, 0x0);
        gbc.writeMem(0x3507, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6279);
        EXPECT(gbc.pc(), 0x3509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0043
        gbc.setState(0xca64, 0x53c9, 0xeb60, 0xf6c7, 0x49e1, 0x612d, 0x0, 0x1);
        gbc.writeMem(0xca64, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x53c9);
        EXPECT(gbc.pc(), 0xca66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca64), 0xcb);
        EXPECT(gbc.readMem(0xca65), 0x8b);
        // CB 8B 0044
        gbc.setState(0x92df, 0x4b21, 0xbf20, 0xf99f, 0xc76c, 0x7343, 0x1, 0x0);
        gbc.writeMem(0x92df, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x4b21);
        EXPECT(gbc.pc(), 0x92e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92df), 0xcb);
        EXPECT(gbc.readMem(0x92e0), 0x8b);
        // CB 8B 0045
        gbc.setState(0xb371, 0x1db5, 0xae60, 0x3769, 0x90fa, 0x869a, 0x0, 0x0);
        gbc.writeMem(0xb371, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1db5);
        EXPECT(gbc.pc(), 0xb373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb371), 0xcb);
        EXPECT(gbc.readMem(0xb372), 0x8b);
        // CB 8B 0046
        gbc.setState(0x7a22, 0xc094, 0x46d0, 0x1f2a, 0xe29b, 0x1014, 0x1, 0x0);
        gbc.writeMem(0x7a22, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc094);
        EXPECT(gbc.pc(), 0x7a24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0047
        gbc.setState(0x8e7e, 0x9099, 0xad70, 0x39f2, 0x4f91, 0x72b8, 0x1, 0x0);
        gbc.writeMem(0x8e7e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9099);
        EXPECT(gbc.pc(), 0x8e80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e7e), 0xcb);
        EXPECT(gbc.readMem(0x8e7f), 0x8b);
        // CB 8B 0048
        gbc.setState(0xebe2, 0x1465, 0xff30, 0x3445, 0x74dd, 0x7fe4, 0x1, 0x0);
        gbc.writeMem(0xebe2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1465);
        EXPECT(gbc.pc(), 0xebe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebe2), 0xcb);
        EXPECT(gbc.readMem(0xebe3), 0x8b);
        // CB 8B 0049
        gbc.setState(0x3d7, 0x7dc2, 0x8890, 0x977b, 0x49d3, 0xfffd, 0x1, 0x0);
        gbc.writeMem(0x3d7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x7dc2);
        EXPECT(gbc.pc(), 0x3d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 004A
        gbc.setState(0xeef9, 0xe0ef, 0x2f70, 0x987a, 0x8390, 0xc569, 0x1, 0x0);
        gbc.writeMem(0xeef9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe0ef);
        EXPECT(gbc.pc(), 0xeefb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeef9), 0xcb);
        EXPECT(gbc.readMem(0xeefa), 0x8b);
        // CB 8B 004B
        gbc.setState(0xc6a0, 0xccf4, 0x6080, 0x6b7f, 0xe0fb, 0x9ae1, 0x1, 0x0);
        gbc.writeMem(0xc6a0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xccf4);
        EXPECT(gbc.pc(), 0xc6a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6a0), 0xcb);
        EXPECT(gbc.readMem(0xc6a1), 0x8b);
        // CB 8B 004C
        gbc.setState(0xd63f, 0x209, 0x2c90, 0x29bd, 0x3b6e, 0x7d, 0x0, 0x1);
        gbc.writeMem(0xd63f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x209);
        EXPECT(gbc.pc(), 0xd641);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd63f), 0xcb);
        EXPECT(gbc.readMem(0xd640), 0x8b);
        // CB 8B 004D
        gbc.setState(0x2482, 0xbee8, 0x8d70, 0x90ad, 0x2f40, 0x31cb, 0x1, 0x0);
        gbc.writeMem(0x2482, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xbee8);
        EXPECT(gbc.pc(), 0x2484);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 004E
        gbc.setState(0x3929, 0xe404, 0xc900, 0xb757, 0xc0c5, 0xfd7d, 0x0, 0x1);
        gbc.writeMem(0x3929, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe404);
        EXPECT(gbc.pc(), 0x392b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 004F
        gbc.setState(0x413d, 0xbd5b, 0xc810, 0xd8e, 0x7d90, 0x2361, 0x0, 0x1);
        gbc.writeMem(0x413d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xbd5b);
        EXPECT(gbc.pc(), 0x413f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0050
        gbc.setState(0x5621, 0x84ec, 0x7fe0, 0x5927, 0x2347, 0xa7b9, 0x1, 0x1);
        gbc.writeMem(0x5621, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x84ec);
        EXPECT(gbc.pc(), 0x5623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0052
        gbc.setState(0x9547, 0xef30, 0xd060, 0xcf4d, 0xa446, 0x9be9, 0x1, 0x0);
        gbc.writeMem(0x9547, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xef30);
        EXPECT(gbc.pc(), 0x9549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9547), 0xcb);
        EXPECT(gbc.readMem(0x9548), 0x8b);
        // CB 8B 0053
        gbc.setState(0x15f0, 0xa28a, 0x8b50, 0xb7cd, 0xa257, 0xd8a8, 0x1, 0x0);
        gbc.writeMem(0x15f0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa28a);
        EXPECT(gbc.pc(), 0x15f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0054
        gbc.setState(0xfbb, 0xff9d, 0xac40, 0x22e7, 0x1481, 0x707f, 0x1, 0x0);
        gbc.writeMem(0xfbb, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xff9d);
        EXPECT(gbc.pc(), 0xfbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0055
        gbc.setState(0xac8c, 0x8628, 0xb030, 0x77a1, 0x6e6a, 0xc32, 0x0, 0x1);
        gbc.writeMem(0xac8c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x8628);
        EXPECT(gbc.pc(), 0xac8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac8c), 0xcb);
        EXPECT(gbc.readMem(0xac8d), 0x8b);
        // CB 8B 0056
        gbc.setState(0x6016, 0x7d00, 0xcbe0, 0x7eb8, 0x7041, 0xc3b4, 0x0, 0x0);
        gbc.writeMem(0x6016, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7d00);
        EXPECT(gbc.pc(), 0x6018);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0057
        gbc.setState(0x765b, 0x8b3b, 0x2d50, 0x1d31, 0x10a3, 0xabc0, 0x0, 0x0);
        gbc.writeMem(0x765b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8b3b);
        EXPECT(gbc.pc(), 0x765d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0058
        gbc.setState(0xda36, 0xe30f, 0xd680, 0x177e, 0x5583, 0x50df, 0x1, 0x0);
        gbc.writeMem(0xda36, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe30f);
        EXPECT(gbc.pc(), 0xda38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda36), 0xcb);
        EXPECT(gbc.readMem(0xda37), 0x8b);
        // CB 8B 005A
        gbc.setState(0x4e4a, 0x5e5f, 0xa200, 0xa8e8, 0x79ea, 0x3929, 0x1, 0x0);
        gbc.writeMem(0x4e4a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x5e5f);
        EXPECT(gbc.pc(), 0x4e4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 005B
        gbc.setState(0xe181, 0xa9a3, 0x35d0, 0xc3bd, 0xa3ac, 0x1ebb, 0x0, 0x1);
        gbc.writeMem(0xe181, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa9a3);
        EXPECT(gbc.pc(), 0xe183);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe181), 0xcb);
        EXPECT(gbc.readMem(0xe182), 0x8b);
        // CB 8B 005C
        gbc.setState(0x51d2, 0xbbcb, 0x1ab0, 0xf553, 0x927, 0x428a, 0x1, 0x0);
        gbc.writeMem(0x51d2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xbbcb);
        EXPECT(gbc.pc(), 0x51d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 005D
        gbc.setState(0x1d7f, 0xdb99, 0xaf10, 0x5970, 0x67fa, 0xecd7, 0x1, 0x0);
        gbc.writeMem(0x1d7f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xdb99);
        EXPECT(gbc.pc(), 0x1d81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 005E
        gbc.setState(0x4076, 0x3012, 0x8620, 0x7f48, 0xa3fe, 0x62ff, 0x0, 0x0);
        gbc.writeMem(0x4076, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3012);
        EXPECT(gbc.pc(), 0x4078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 005F
        gbc.setState(0xea90, 0xbef1, 0xa960, 0xd74f, 0x9dac, 0x94b9, 0x0, 0x1);
        gbc.writeMem(0xea90, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xbef1);
        EXPECT(gbc.pc(), 0xea92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea90), 0xcb);
        EXPECT(gbc.readMem(0xea91), 0x8b);
        // CB 8B 0060
        gbc.setState(0x72a3, 0xb0a7, 0x7400, 0x979, 0xda21, 0xd7d2, 0x1, 0x0);
        gbc.writeMem(0x72a3, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb0a7);
        EXPECT(gbc.pc(), 0x72a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0061
        gbc.setState(0xddb5, 0xc008, 0x3240, 0x3ef0, 0x9e7b, 0x497f, 0x1, 0x1);
        gbc.writeMem(0xddb5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc008);
        EXPECT(gbc.pc(), 0xddb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddb5), 0xcb);
        EXPECT(gbc.readMem(0xddb6), 0x8b);
        // CB 8B 0062
        gbc.setState(0x162d, 0xfe8e, 0x75c0, 0x1874, 0xe746, 0xcbe6, 0x1, 0x1);
        gbc.writeMem(0x162d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xfe8e);
        EXPECT(gbc.pc(), 0x162f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0063
        gbc.setState(0xa4ec, 0xcb6d, 0x2ce0, 0xe80c, 0x795f, 0xc8ec, 0x1, 0x0);
        gbc.writeMem(0xa4ec, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xcb6d);
        EXPECT(gbc.pc(), 0xa4ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ec), 0xcb);
        EXPECT(gbc.readMem(0xa4ed), 0x8b);
        // CB 8B 0064
        gbc.setState(0x7bae, 0xb13d, 0xc510, 0x7fb7, 0xeb88, 0xcba6, 0x0, 0x0);
        gbc.writeMem(0x7bae, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb13d);
        EXPECT(gbc.pc(), 0x7bb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0065
        gbc.setState(0x8ce4, 0x9dd9, 0xec70, 0x6596, 0xd1c9, 0x849c, 0x1, 0x1);
        gbc.writeMem(0x8ce4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9dd9);
        EXPECT(gbc.pc(), 0x8ce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ce4), 0xcb);
        EXPECT(gbc.readMem(0x8ce5), 0x8b);
        // CB 8B 0066
        gbc.setState(0x6bf, 0x5736, 0xc870, 0xfe73, 0xb847, 0xee3b, 0x0, 0x0);
        gbc.writeMem(0x6bf, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5736);
        EXPECT(gbc.pc(), 0x6c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0067
        gbc.setState(0x8765, 0xdb11, 0x9980, 0x3a04, 0x5e6c, 0x80f3, 0x1, 0x1);
        gbc.writeMem(0x8765, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xdb11);
        EXPECT(gbc.pc(), 0x8767);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8765), 0xcb);
        EXPECT(gbc.readMem(0x8766), 0x8b);
        // CB 8B 0068
        gbc.setState(0x9197, 0x2db, 0xdb20, 0xfbe8, 0x419a, 0xd2c1, 0x0, 0x0);
        gbc.writeMem(0x9197, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2db);
        EXPECT(gbc.pc(), 0x9199);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9197), 0xcb);
        EXPECT(gbc.readMem(0x9198), 0x8b);
        // CB 8B 0069
        gbc.setState(0x61c6, 0x3390, 0x5cd0, 0xa999, 0xe884, 0x1bcf, 0x1, 0x1);
        gbc.writeMem(0x61c6, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3390);
        EXPECT(gbc.pc(), 0x61c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 006A
        gbc.setState(0x1cf7, 0x6019, 0x3af0, 0xed36, 0x8a0f, 0x6c5a, 0x0, 0x0);
        gbc.writeMem(0x1cf7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6019);
        EXPECT(gbc.pc(), 0x1cf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 006B
        gbc.setState(0x1874, 0xa6ec, 0xedb0, 0xc539, 0xad26, 0x1af6, 0x0, 0x0);
        gbc.writeMem(0x1874, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa6ec);
        EXPECT(gbc.pc(), 0x1876);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 006C
        gbc.setState(0xdd7, 0xa0e4, 0x9360, 0x97ba, 0x270c, 0xfc9b, 0x0, 0x1);
        gbc.writeMem(0xdd7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa0e4);
        EXPECT(gbc.pc(), 0xdd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 006D
        gbc.setState(0xd37c, 0x8470, 0x7b20, 0x4207, 0x5232, 0xdd86, 0x0, 0x0);
        gbc.writeMem(0xd37c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8470);
        EXPECT(gbc.pc(), 0xd37e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd37c), 0xcb);
        EXPECT(gbc.readMem(0xd37d), 0x8b);
        // CB 8B 006E
        gbc.setState(0xe370, 0x3c5a, 0xe2e0, 0x8bbe, 0xdcd4, 0x4630, 0x0, 0x0);
        gbc.writeMem(0xe370, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3c5a);
        EXPECT(gbc.pc(), 0xe372);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe370), 0xcb);
        EXPECT(gbc.readMem(0xe371), 0x8b);
        // CB 8B 006F
        gbc.setState(0xa703, 0x4bc5, 0xa930, 0xde71, 0xd234, 0x6a1e, 0x0, 0x0);
        gbc.writeMem(0xa703, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x4bc5);
        EXPECT(gbc.pc(), 0xa705);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa703), 0xcb);
        EXPECT(gbc.readMem(0xa704), 0x8b);
        // CB 8B 0070
        gbc.setState(0x5c27, 0xa8f6, 0x90d0, 0x1cd5, 0x39f0, 0x7813, 0x1, 0x0);
        gbc.writeMem(0x5c27, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xa8f6);
        EXPECT(gbc.pc(), 0x5c29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0071
        gbc.setState(0x4ba2, 0xaf9a, 0x5980, 0x4174, 0x100b, 0xe0fb, 0x1, 0x1);
        gbc.writeMem(0x4ba2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xaf9a);
        EXPECT(gbc.pc(), 0x4ba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0072
        gbc.setState(0x3975, 0x2c73, 0x800, 0xe5c5, 0x3c6b, 0x9a74, 0x1, 0x0);
        gbc.writeMem(0x3975, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2c73);
        EXPECT(gbc.pc(), 0x3977);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0073
        gbc.setState(0x4b3e, 0xe39f, 0x5000, 0x6239, 0x49fd, 0x7cc1, 0x1, 0x0);
        gbc.writeMem(0x4b3e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe39f);
        EXPECT(gbc.pc(), 0x4b40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0074
        gbc.setState(0xcf4e, 0x96e8, 0xb9d0, 0xf6f7, 0xf6eb, 0xb02, 0x0, 0x0);
        gbc.writeMem(0xcf4e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x96e8);
        EXPECT(gbc.pc(), 0xcf50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf4e), 0xcb);
        EXPECT(gbc.readMem(0xcf4f), 0x8b);
        // CB 8B 0075
        gbc.setState(0x25e8, 0x8abe, 0x9a00, 0x33f9, 0xf01, 0xfc04, 0x1, 0x1);
        gbc.writeMem(0x25e8, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x8abe);
        EXPECT(gbc.pc(), 0x25ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0077
        gbc.setState(0x5bd3, 0x2523, 0xb090, 0xf84, 0x730f, 0xa17f, 0x1, 0x0);
        gbc.writeMem(0x5bd3, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2523);
        EXPECT(gbc.pc(), 0x5bd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0078
        gbc.setState(0x130f, 0x28f2, 0xee20, 0x623c, 0xef4a, 0x97b8, 0x1, 0x1);
        gbc.writeMem(0x130f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x28f2);
        EXPECT(gbc.pc(), 0x1311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0079
        gbc.setState(0xeb87, 0x9ad8, 0xc7e0, 0xda78, 0x31fe, 0x1086, 0x0, 0x1);
        gbc.writeMem(0xeb87, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9ad8);
        EXPECT(gbc.pc(), 0xeb89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb87), 0xcb);
        EXPECT(gbc.readMem(0xeb88), 0x8b);
        // CB 8B 007A
        gbc.setState(0xd82d, 0x7c93, 0x2730, 0xf9ef, 0x4127, 0x3be, 0x0, 0x1);
        gbc.writeMem(0xd82d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7c93);
        EXPECT(gbc.pc(), 0xd82f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd82d), 0xcb);
        EXPECT(gbc.readMem(0xd82e), 0x8b);
        // CB 8B 007B
        gbc.setState(0x3e30, 0xf59, 0x6720, 0x7ad8, 0x27ee, 0xa6d1, 0x0, 0x0);
        gbc.writeMem(0x3e30, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf59);
        EXPECT(gbc.pc(), 0x3e32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 007C
        gbc.setState(0xe4e1, 0x9852, 0xca10, 0x6bf5, 0xee8e, 0xc178, 0x0, 0x0);
        gbc.writeMem(0xe4e1, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9852);
        EXPECT(gbc.pc(), 0xe4e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4e1), 0xcb);
        EXPECT(gbc.readMem(0xe4e2), 0x8b);
        // CB 8B 007D
        gbc.setState(0x5a6a, 0x80e3, 0x6bc0, 0x1b44, 0x18d, 0x4df, 0x1, 0x1);
        gbc.writeMem(0x5a6a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x80e3);
        EXPECT(gbc.pc(), 0x5a6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 007E
        gbc.setState(0x8786, 0x4560, 0x9a60, 0x4bfc, 0x66d, 0x253c, 0x1, 0x0);
        gbc.writeMem(0x8786, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4560);
        EXPECT(gbc.pc(), 0x8788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8786), 0xcb);
        EXPECT(gbc.readMem(0x8787), 0x8b);
        // CB 8B 007F
        gbc.setState(0x438a, 0x6aa4, 0xf070, 0x22d7, 0xbb7c, 0x42b2, 0x0, 0x0);
        gbc.writeMem(0x438a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x6aa4);
        EXPECT(gbc.pc(), 0x438c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0080
        gbc.setState(0x7b0f, 0xc76c, 0xa1b0, 0xbe62, 0x294c, 0x2184, 0x0, 0x0);
        gbc.writeMem(0x7b0f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc76c);
        EXPECT(gbc.pc(), 0x7b11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0081
        gbc.setState(0xbbfb, 0x4916, 0x270, 0xf02b, 0xf08c, 0xc015, 0x1, 0x0);
        gbc.writeMem(0xbbfb, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4916);
        EXPECT(gbc.pc(), 0xbbfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbfb), 0xcb);
        EXPECT(gbc.readMem(0xbbfc), 0x8b);
        // CB 8B 0082
        gbc.setState(0xb0fa, 0xe9cb, 0x16c0, 0x1416, 0xaa2b, 0x49db, 0x0, 0x1);
        gbc.writeMem(0xb0fa, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xe9cb);
        EXPECT(gbc.pc(), 0xb0fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0fa), 0xcb);
        EXPECT(gbc.readMem(0xb0fb), 0x8b);
        // CB 8B 0083
        gbc.setState(0xc0a, 0x25c1, 0x3290, 0x64bb, 0xd685, 0x4a8e, 0x0, 0x0);
        gbc.writeMem(0xc0a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x25c1);
        EXPECT(gbc.pc(), 0xc0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0085
        gbc.setState(0x694b, 0x40ef, 0x16d0, 0x9027, 0x78e8, 0xbb79, 0x0, 0x1);
        gbc.writeMem(0x694b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x40ef);
        EXPECT(gbc.pc(), 0x694d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0086
        gbc.setState(0xc1a, 0x2816, 0x5310, 0x46d3, 0x12b6, 0xb143, 0x0, 0x0);
        gbc.writeMem(0xc1a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2816);
        EXPECT(gbc.pc(), 0xc1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0087
        gbc.setState(0xeb0c, 0x5825, 0x3990, 0x3c72, 0x6425, 0xc076, 0x1, 0x0);
        gbc.writeMem(0xeb0c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x5825);
        EXPECT(gbc.pc(), 0xeb0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb0c), 0xcb);
        EXPECT(gbc.readMem(0xeb0d), 0x8b);
        // CB 8B 0088
        gbc.setState(0xa5ac, 0xdd13, 0x79c0, 0xa33c, 0x8fc5, 0xe1b6, 0x1, 0x1);
        gbc.writeMem(0xa5ac, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xdd13);
        EXPECT(gbc.pc(), 0xa5ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ac), 0xcb);
        EXPECT(gbc.readMem(0xa5ad), 0x8b);
        // CB 8B 0089
        gbc.setState(0x220e, 0xf9a3, 0x9200, 0x19bc, 0x7d5c, 0xf6cd, 0x0, 0x0);
        gbc.writeMem(0x220e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf9a3);
        EXPECT(gbc.pc(), 0x2210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 008A
        gbc.setState(0xee5d, 0x392b, 0xc680, 0xc553, 0x7df7, 0x8fdf, 0x0, 0x1);
        gbc.writeMem(0xee5d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x392b);
        EXPECT(gbc.pc(), 0xee5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee5d), 0xcb);
        EXPECT(gbc.readMem(0xee5e), 0x8b);
        // CB 8B 008B
        gbc.setState(0x17fd, 0xa25d, 0x6b00, 0xc018, 0x47ed, 0x4768, 0x1, 0x1);
        gbc.writeMem(0x17fd, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa25d);
        EXPECT(gbc.pc(), 0x17ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 008C
        gbc.setState(0x8e40, 0xf55d, 0x23d0, 0xd1b4, 0x59b5, 0x9984, 0x0, 0x1);
        gbc.writeMem(0x8e40, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf55d);
        EXPECT(gbc.pc(), 0x8e42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e40), 0xcb);
        EXPECT(gbc.readMem(0x8e41), 0x8b);
        // CB 8B 008D
        gbc.setState(0xda5, 0x4381, 0x1740, 0xc8e9, 0xde95, 0x98ac, 0x1, 0x0);
        gbc.writeMem(0xda5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4381);
        EXPECT(gbc.pc(), 0xda7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 008E
        gbc.setState(0x926, 0x23e0, 0x1a60, 0x13ae, 0x2d4f, 0x673c, 0x0, 0x0);
        gbc.writeMem(0x926, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x23e0);
        EXPECT(gbc.pc(), 0x928);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 008F
        gbc.setState(0x61f, 0x10f6, 0xac40, 0x3cd3, 0x33c5, 0xb2b9, 0x1, 0x0);
        gbc.writeMem(0x61f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x10f6);
        EXPECT(gbc.pc(), 0x621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0090
        gbc.setState(0x11c0, 0xeba4, 0x2590, 0xbdc9, 0x89da, 0x6836, 0x1, 0x1);
        gbc.writeMem(0x11c0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xeba4);
        EXPECT(gbc.pc(), 0x11c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0091
        gbc.setState(0xd978, 0xf554, 0x9c10, 0x7ec8, 0xe706, 0x8c50, 0x0, 0x1);
        gbc.writeMem(0xd978, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf554);
        EXPECT(gbc.pc(), 0xd97a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd978), 0xcb);
        EXPECT(gbc.readMem(0xd979), 0x8b);
        // CB 8B 0092
        gbc.setState(0xd80c, 0x8796, 0xbce0, 0xf78a, 0x8bbf, 0x33c9, 0x1, 0x1);
        gbc.writeMem(0xd80c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8796);
        EXPECT(gbc.pc(), 0xd80e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd80c), 0xcb);
        EXPECT(gbc.readMem(0xd80d), 0x8b);
        // CB 8B 0093
        gbc.setState(0x7b1d, 0xb978, 0x1cb0, 0x41d8, 0x9e3f, 0x78ef, 0x1, 0x1);
        gbc.writeMem(0x7b1d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb978);
        EXPECT(gbc.pc(), 0x7b1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0094
        gbc.setState(0x2952, 0x9c7a, 0x7220, 0xd1e2, 0xb7cf, 0x1b7e, 0x1, 0x0);
        gbc.writeMem(0x2952, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9c7a);
        EXPECT(gbc.pc(), 0x2954);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0095
        gbc.setState(0x929b, 0xac38, 0x6a10, 0xc27c, 0x997d, 0xface, 0x0, 0x0);
        gbc.writeMem(0x929b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xac38);
        EXPECT(gbc.pc(), 0x929d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x929b), 0xcb);
        EXPECT(gbc.readMem(0x929c), 0x8b);
        // CB 8B 0096
        gbc.setState(0xae82, 0x8cba, 0xbc00, 0x3843, 0xb40e, 0x2095, 0x0, 0x1);
        gbc.writeMem(0xae82, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8cba);
        EXPECT(gbc.pc(), 0xae84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae82), 0xcb);
        EXPECT(gbc.readMem(0xae83), 0x8b);
        // CB 8B 0097
        gbc.setState(0x8534, 0xc5df, 0x5c50, 0xdf15, 0xce8c, 0x8494, 0x0, 0x0);
        gbc.writeMem(0x8534, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc5df);
        EXPECT(gbc.pc(), 0x8536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8534), 0xcb);
        EXPECT(gbc.readMem(0x8535), 0x8b);
        // CB 8B 0099
        gbc.setState(0xb3c4, 0x5c07, 0x5cd0, 0x106b, 0xcb91, 0x4390, 0x0, 0x0);
        gbc.writeMem(0xb3c4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5c07);
        EXPECT(gbc.pc(), 0xb3c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3c4), 0xcb);
        EXPECT(gbc.readMem(0xb3c5), 0x8b);
        // CB 8B 009A
        gbc.setState(0x1209, 0x704f, 0xfa10, 0x6467, 0x8dab, 0xed58, 0x1, 0x0);
        gbc.writeMem(0x1209, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x704f);
        EXPECT(gbc.pc(), 0x120b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 009B
        gbc.setState(0x8549, 0xcbb9, 0x120, 0xf38c, 0x964f, 0x2edc, 0x0, 0x1);
        gbc.writeMem(0x8549, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xcbb9);
        EXPECT(gbc.pc(), 0x854b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8549), 0xcb);
        EXPECT(gbc.readMem(0x854a), 0x8b);
        // CB 8B 009C
        gbc.setState(0x729e, 0xd4ef, 0xbca0, 0x20c6, 0xe64, 0xa91b, 0x0, 0x1);
        gbc.writeMem(0x729e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xd4ef);
        EXPECT(gbc.pc(), 0x72a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 009D
        gbc.setState(0x2c9, 0xf2a6, 0x8ec0, 0xad94, 0xf74f, 0x28b6, 0x1, 0x1);
        gbc.writeMem(0x2c9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf2a6);
        EXPECT(gbc.pc(), 0x2cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 009E
        gbc.setState(0xd416, 0x96ea, 0xcf90, 0x9a1f, 0x1d85, 0x78b8, 0x0, 0x1);
        gbc.writeMem(0xd416, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x96ea);
        EXPECT(gbc.pc(), 0xd418);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd416), 0xcb);
        EXPECT(gbc.readMem(0xd417), 0x8b);
        // CB 8B 009F
        gbc.setState(0x51e3, 0x87db, 0xe730, 0x7890, 0xedb6, 0xb534, 0x0, 0x1);
        gbc.writeMem(0x51e3, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x87db);
        EXPECT(gbc.pc(), 0x51e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00A0
        gbc.setState(0xccdf, 0xbd64, 0x5ba0, 0x36b6, 0x898e, 0x75a5, 0x1, 0x0);
        gbc.writeMem(0xccdf, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xbd64);
        EXPECT(gbc.pc(), 0xcce1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccdf), 0xcb);
        EXPECT(gbc.readMem(0xcce0), 0x8b);
        // CB 8B 00A1
        gbc.setState(0x580, 0x8718, 0xf960, 0x93d1, 0x8a5b, 0x6a5a, 0x0, 0x0);
        gbc.writeMem(0x580, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8718);
        EXPECT(gbc.pc(), 0x582);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00A2
        gbc.setState(0x2077, 0x50b7, 0x4100, 0xe16, 0xf819, 0xa955, 0x1, 0x1);
        gbc.writeMem(0x2077, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x50b7);
        EXPECT(gbc.pc(), 0x2079);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00A3
        gbc.setState(0x851f, 0x8744, 0xe640, 0x3043, 0x1271, 0x10b1, 0x0, 0x1);
        gbc.writeMem(0x851f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8744);
        EXPECT(gbc.pc(), 0x8521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x851f), 0xcb);
        EXPECT(gbc.readMem(0x8520), 0x8b);
        // CB 8B 00A4
        gbc.setState(0x3073, 0xb066, 0x5b60, 0x2687, 0x974d, 0xa5a2, 0x0, 0x0);
        gbc.writeMem(0x3073, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb066);
        EXPECT(gbc.pc(), 0x3075);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00A5
        gbc.setState(0xccd0, 0xa20, 0x9070, 0x7e75, 0x872b, 0x3351, 0x0, 0x0);
        gbc.writeMem(0xccd0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa20);
        EXPECT(gbc.pc(), 0xccd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd0), 0xcb);
        EXPECT(gbc.readMem(0xccd1), 0x8b);
        // CB 8B 00A6
        gbc.setState(0xa049, 0x85ff, 0x2050, 0xad03, 0x5fc9, 0xdd91, 0x0, 0x0);
        gbc.writeMem(0xa049, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x85ff);
        EXPECT(gbc.pc(), 0xa04b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa049), 0xcb);
        EXPECT(gbc.readMem(0xa04a), 0x8b);
        // CB 8B 00A7
        gbc.setState(0x2399, 0xcf51, 0x45e0, 0xbc7d, 0x98c8, 0xa0a0, 0x1, 0x0);
        gbc.writeMem(0x2399, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xcf51);
        EXPECT(gbc.pc(), 0x239b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00A8
        gbc.setState(0x2f26, 0x3f93, 0x4110, 0xccad, 0xfcdb, 0x1297, 0x0, 0x1);
        gbc.writeMem(0x2f26, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3f93);
        EXPECT(gbc.pc(), 0x2f28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00A9
        gbc.setState(0x886c, 0xf4ab, 0x7b60, 0xdebd, 0x19f0, 0x159c, 0x1, 0x1);
        gbc.writeMem(0x886c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf4ab);
        EXPECT(gbc.pc(), 0x886e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x886c), 0xcb);
        EXPECT(gbc.readMem(0x886d), 0x8b);
        // CB 8B 00AA
        gbc.setState(0x416a, 0x763a, 0xf640, 0x5660, 0x171f, 0xab28, 0x0, 0x0);
        gbc.writeMem(0x416a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x763a);
        EXPECT(gbc.pc(), 0x416c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00AB
        gbc.setState(0xb479, 0xf44c, 0x1ea0, 0xcd2d, 0x32e0, 0xd56f, 0x0, 0x1);
        gbc.writeMem(0xb479, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf44c);
        EXPECT(gbc.pc(), 0xb47b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb479), 0xcb);
        EXPECT(gbc.readMem(0xb47a), 0x8b);
        // CB 8B 00AC
        gbc.setState(0x424d, 0x8b2f, 0x2760, 0x6758, 0x16cd, 0x4fff, 0x0, 0x0);
        gbc.writeMem(0x424d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8b2f);
        EXPECT(gbc.pc(), 0x424f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00AD
        gbc.setState(0x26d8, 0xb085, 0xe7b0, 0x5363, 0x3bbd, 0xdeca, 0x1, 0x1);
        gbc.writeMem(0x26d8, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xb085);
        EXPECT(gbc.pc(), 0x26da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00AE
        gbc.setState(0x46bd, 0x7438, 0x2c00, 0x6e47, 0x13b1, 0x4e07, 0x1, 0x0);
        gbc.writeMem(0x46bd, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7438);
        EXPECT(gbc.pc(), 0x46bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00AF
        gbc.setState(0x5949, 0x7baf, 0x2320, 0x7a46, 0xd465, 0xbe03, 0x0, 0x1);
        gbc.writeMem(0x5949, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7baf);
        EXPECT(gbc.pc(), 0x594b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00B0
        gbc.setState(0x507d, 0x407c, 0xd490, 0x648c, 0x1a59, 0x293c, 0x1, 0x1);
        gbc.writeMem(0x507d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x407c);
        EXPECT(gbc.pc(), 0x507f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00B1
        gbc.setState(0xade9, 0x1ad0, 0x62b0, 0x35bf, 0xf8b9, 0xbb49, 0x1, 0x0);
        gbc.writeMem(0xade9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1ad0);
        EXPECT(gbc.pc(), 0xadeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xade9), 0xcb);
        EXPECT(gbc.readMem(0xadea), 0x8b);
        // CB 8B 00B2
        gbc.setState(0x6dd0, 0xf7bc, 0x7b90, 0xe187, 0x7a96, 0xae4f, 0x1, 0x0);
        gbc.writeMem(0x6dd0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf7bc);
        EXPECT(gbc.pc(), 0x6dd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00B3
        gbc.setState(0xdc1d, 0x81d1, 0x6ff0, 0xca7c, 0xe753, 0x88d8, 0x0, 0x1);
        gbc.writeMem(0xdc1d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x81d1);
        EXPECT(gbc.pc(), 0xdc1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc1d), 0xcb);
        EXPECT(gbc.readMem(0xdc1e), 0x8b);
        // CB 8B 00B4
        gbc.setState(0x6862, 0x34c0, 0x2de0, 0x6dda, 0x8107, 0x747c, 0x1, 0x0);
        gbc.writeMem(0x6862, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x34c0);
        EXPECT(gbc.pc(), 0x6864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00B5
        gbc.setState(0xef10, 0x87d4, 0xd3e0, 0x111e, 0xf70a, 0x8a, 0x1, 0x1);
        gbc.writeMem(0xef10, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x87d4);
        EXPECT(gbc.pc(), 0xef12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef10), 0xcb);
        EXPECT(gbc.readMem(0xef11), 0x8b);
        // CB 8B 00B6
        gbc.setState(0xb331, 0x9589, 0xe520, 0x71b0, 0xb104, 0xbc57, 0x1, 0x0);
        gbc.writeMem(0xb331, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9589);
        EXPECT(gbc.pc(), 0xb333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb331), 0xcb);
        EXPECT(gbc.readMem(0xb332), 0x8b);
        // CB 8B 00B7
        gbc.setState(0xc71e, 0x7a3d, 0x66b0, 0x2e52, 0xdc24, 0x86eb, 0x0, 0x0);
        gbc.writeMem(0xc71e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x7a3d);
        EXPECT(gbc.pc(), 0xc720);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc71e), 0xcb);
        EXPECT(gbc.readMem(0xc71f), 0x8b);
        // CB 8B 00B8
        gbc.setState(0x379f, 0xe0d1, 0x5f80, 0x67b0, 0x6bf9, 0x8c79, 0x1, 0x1);
        gbc.writeMem(0x379f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe0d1);
        EXPECT(gbc.pc(), 0x37a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00B9
        gbc.setState(0x74ed, 0x5e54, 0xacb0, 0xf126, 0x803a, 0x14a0, 0x0, 0x1);
        gbc.writeMem(0x74ed, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5e54);
        EXPECT(gbc.pc(), 0x74ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00BA
        gbc.setState(0xcf0e, 0x5f73, 0xa990, 0x3659, 0xda52, 0xa4a9, 0x0, 0x0);
        gbc.writeMem(0xcf0e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5f73);
        EXPECT(gbc.pc(), 0xcf10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf0e), 0xcb);
        EXPECT(gbc.readMem(0xcf0f), 0x8b);
        // CB 8B 00BB
        gbc.setState(0x57cf, 0x35d, 0xc660, 0xc03c, 0x8cc3, 0x6d3a, 0x1, 0x0);
        gbc.writeMem(0x57cf, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x35d);
        EXPECT(gbc.pc(), 0x57d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00BC
        gbc.setState(0x2581, 0xfa4d, 0x8200, 0x5f6e, 0xfd27, 0x7e16, 0x1, 0x0);
        gbc.writeMem(0x2581, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfa4d);
        EXPECT(gbc.pc(), 0x2583);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00BD
        gbc.setState(0x628b, 0x636c, 0x6500, 0x694b, 0x8e0b, 0xcc4e, 0x1, 0x0);
        gbc.writeMem(0x628b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x636c);
        EXPECT(gbc.pc(), 0x628d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00BE
        gbc.setState(0x66b0, 0xbba6, 0x1840, 0x76aa, 0x4ba3, 0xc6e4, 0x0, 0x0);
        gbc.writeMem(0x66b0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xbba6);
        EXPECT(gbc.pc(), 0x66b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00BF
        gbc.setState(0x1d2e, 0x609b, 0xcff0, 0x425b, 0xe79e, 0xe21c, 0x1, 0x1);
        gbc.writeMem(0x1d2e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x609b);
        EXPECT(gbc.pc(), 0x1d30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00C0
        gbc.setState(0xba27, 0x5d61, 0x10c0, 0xc0db, 0x6e42, 0x6c7, 0x1, 0x0);
        gbc.writeMem(0xba27, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x5d61);
        EXPECT(gbc.pc(), 0xba29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba27), 0xcb);
        EXPECT(gbc.readMem(0xba28), 0x8b);
        // CB 8B 00C1
        gbc.setState(0xe840, 0x2639, 0xe880, 0xce0c, 0x7b9e, 0xf3, 0x0, 0x1);
        gbc.writeMem(0xe840, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2639);
        EXPECT(gbc.pc(), 0xe842);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe840), 0xcb);
        EXPECT(gbc.readMem(0xe841), 0x8b);
        // CB 8B 00C2
        gbc.setState(0x3dc, 0xb8e7, 0x3fd0, 0x2ea0, 0x1c80, 0x9e59, 0x0, 0x1);
        gbc.writeMem(0x3dc, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb8e7);
        EXPECT(gbc.pc(), 0x3de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00C3
        gbc.setState(0x8809, 0x698f, 0x4b30, 0x450c, 0x72e5, 0x585a, 0x0, 0x1);
        gbc.writeMem(0x8809, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x698f);
        EXPECT(gbc.pc(), 0x880b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8809), 0xcb);
        EXPECT(gbc.readMem(0x880a), 0x8b);
        // CB 8B 00C4
        gbc.setState(0x6669, 0xeb7f, 0x8740, 0x3efd, 0x46b8, 0xdd2c, 0x1, 0x1);
        gbc.writeMem(0x6669, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xeb7f);
        EXPECT(gbc.pc(), 0x666b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00C6
        gbc.setState(0x2415, 0x1aee, 0x1c90, 0x9bfe, 0xb298, 0x6127, 0x1, 0x0);
        gbc.writeMem(0x2415, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1aee);
        EXPECT(gbc.pc(), 0x2417);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00C7
        gbc.setState(0x1fb7, 0xcad2, 0x2600, 0x8647, 0x61c1, 0xbdf2, 0x1, 0x0);
        gbc.writeMem(0x1fb7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xcad2);
        EXPECT(gbc.pc(), 0x1fb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00C8
        gbc.setState(0xc537, 0xd8c6, 0x5300, 0x16a5, 0x15d8, 0x628e, 0x1, 0x1);
        gbc.writeMem(0xc537, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd8c6);
        EXPECT(gbc.pc(), 0xc539);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc537), 0xcb);
        EXPECT(gbc.readMem(0xc538), 0x8b);
        // CB 8B 00C9
        gbc.setState(0xaf30, 0x734d, 0xaf60, 0xbad7, 0x4d0b, 0x1ecd, 0x0, 0x1);
        gbc.writeMem(0xaf30, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x734d);
        EXPECT(gbc.pc(), 0xaf32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf30), 0xcb);
        EXPECT(gbc.readMem(0xaf31), 0x8b);
        // CB 8B 00CA
        gbc.setState(0x901, 0x2acc, 0xdb60, 0xa126, 0xd041, 0x44f7, 0x0, 0x1);
        gbc.writeMem(0x901, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x2acc);
        EXPECT(gbc.pc(), 0x903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00CB
        gbc.setState(0x5078, 0xfc6b, 0x5a80, 0x4dc2, 0x99ef, 0xf318, 0x0, 0x0);
        gbc.writeMem(0x5078, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xfc6b);
        EXPECT(gbc.pc(), 0x507a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00CC
        gbc.setState(0xb542, 0x689a, 0xd330, 0x82fe, 0x7c90, 0xb8b5, 0x1, 0x0);
        gbc.writeMem(0xb542, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x689a);
        EXPECT(gbc.pc(), 0xb544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb542), 0xcb);
        EXPECT(gbc.readMem(0xb543), 0x8b);
        // CB 8B 00CD
        gbc.setState(0x6497, 0x475f, 0x8110, 0xce22, 0xde85, 0x910a, 0x0, 0x0);
        gbc.writeMem(0x6497, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x475f);
        EXPECT(gbc.pc(), 0x6499);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00CE
        gbc.setState(0xec24, 0xea79, 0x75f0, 0x22f8, 0xd117, 0x1a37, 0x1, 0x0);
        gbc.writeMem(0xec24, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xea79);
        EXPECT(gbc.pc(), 0xec26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec24), 0xcb);
        EXPECT(gbc.readMem(0xec25), 0x8b);
        // CB 8B 00CF
        gbc.setState(0x8ce2, 0x757, 0x25e0, 0x8973, 0x65b7, 0x9f1d, 0x1, 0x0);
        gbc.writeMem(0x8ce2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x757);
        EXPECT(gbc.pc(), 0x8ce4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ce2), 0xcb);
        EXPECT(gbc.readMem(0x8ce3), 0x8b);
        // CB 8B 00D0
        gbc.setState(0xf1f, 0xc3d3, 0x8f20, 0x6073, 0x57c9, 0x2cc, 0x0, 0x0);
        gbc.writeMem(0xf1f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc3d3);
        EXPECT(gbc.pc(), 0xf21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00D1
        gbc.setState(0xcaf3, 0xe5a8, 0x1690, 0x68f5, 0xfe0b, 0xb2ee, 0x1, 0x1);
        gbc.writeMem(0xcaf3, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe5a8);
        EXPECT(gbc.pc(), 0xcaf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaf3), 0xcb);
        EXPECT(gbc.readMem(0xcaf4), 0x8b);
        // CB 8B 00D2
        gbc.setState(0x68c2, 0x6b9, 0x36d0, 0x6b9f, 0x434f, 0xa918, 0x1, 0x1);
        gbc.writeMem(0x68c2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6b9);
        EXPECT(gbc.pc(), 0x68c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00D3
        gbc.setState(0xcf13, 0xceb6, 0xd1f0, 0x50b2, 0x8754, 0x7691, 0x0, 0x1);
        gbc.writeMem(0xcf13, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xceb6);
        EXPECT(gbc.pc(), 0xcf15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf13), 0xcb);
        EXPECT(gbc.readMem(0xcf14), 0x8b);
        // CB 8B 00D5
        gbc.setState(0x8cbb, 0x54ff, 0x55c0, 0xfc3f, 0x2af5, 0xe851, 0x0, 0x0);
        gbc.writeMem(0x8cbb, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x54ff);
        EXPECT(gbc.pc(), 0x8cbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cbb), 0xcb);
        EXPECT(gbc.readMem(0x8cbc), 0x8b);
        // CB 8B 00D6
        gbc.setState(0x3502, 0xfc2e, 0xf5b0, 0x52de, 0xdcd4, 0x1620, 0x0, 0x1);
        gbc.writeMem(0x3502, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xfc2e);
        EXPECT(gbc.pc(), 0x3504);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00D7
        gbc.setState(0x705b, 0x1cf1, 0x3550, 0x54fc, 0x73cd, 0x4e71, 0x1, 0x1);
        gbc.writeMem(0x705b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x1cf1);
        EXPECT(gbc.pc(), 0x705d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00D8
        gbc.setState(0xdcce, 0xedbb, 0xa8f0, 0x5a18, 0xe03, 0x5ff5, 0x1, 0x0);
        gbc.writeMem(0xdcce, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xedbb);
        EXPECT(gbc.pc(), 0xdcd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcce), 0xcb);
        EXPECT(gbc.readMem(0xdccf), 0x8b);
        // CB 8B 00D9
        gbc.setState(0x6be9, 0x7c8a, 0x3120, 0xcf14, 0x1f2d, 0xb990, 0x1, 0x1);
        gbc.writeMem(0x6be9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7c8a);
        EXPECT(gbc.pc(), 0x6beb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00DA
        gbc.setState(0x9f28, 0x8525, 0x1e00, 0xfae7, 0xd3ad, 0xc16, 0x1, 0x0);
        gbc.writeMem(0x9f28, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8525);
        EXPECT(gbc.pc(), 0x9f2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f28), 0xcb);
        EXPECT(gbc.readMem(0x9f29), 0x8b);
        // CB 8B 00DB
        gbc.setState(0x5b3, 0x870d, 0x9910, 0xce84, 0x864c, 0x9974, 0x0, 0x0);
        gbc.writeMem(0x5b3, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x870d);
        EXPECT(gbc.pc(), 0x5b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00DC
        gbc.setState(0x41d3, 0xb30, 0x7670, 0xeef2, 0xff7d, 0x7bc1, 0x1, 0x1);
        gbc.writeMem(0x41d3, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb30);
        EXPECT(gbc.pc(), 0x41d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00DD
        gbc.setState(0xca2b, 0x480d, 0x5b20, 0x853b, 0xbe07, 0x28c2, 0x1, 0x0);
        gbc.writeMem(0xca2b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x480d);
        EXPECT(gbc.pc(), 0xca2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca2b), 0xcb);
        EXPECT(gbc.readMem(0xca2c), 0x8b);
        // CB 8B 00DE
        gbc.setState(0x4cbd, 0xad2, 0x4ac0, 0xcb6d, 0xea76, 0x190e, 0x1, 0x1);
        gbc.writeMem(0x4cbd, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xad2);
        EXPECT(gbc.pc(), 0x4cbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00DF
        gbc.setState(0x76c6, 0x41fc, 0xf0d0, 0x4045, 0xbe44, 0xa418, 0x1, 0x1);
        gbc.writeMem(0x76c6, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x41fc);
        EXPECT(gbc.pc(), 0x76c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00E0
        gbc.setState(0xc591, 0x92fb, 0x9af0, 0x6a9f, 0xef73, 0x26f3, 0x0, 0x1);
        gbc.writeMem(0xc591, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x92fb);
        EXPECT(gbc.pc(), 0xc593);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc591), 0xcb);
        EXPECT(gbc.readMem(0xc592), 0x8b);
        // CB 8B 00E1
        gbc.setState(0xa20e, 0x972e, 0x5f30, 0xdcc0, 0x56fd, 0x4270, 0x1, 0x0);
        gbc.writeMem(0xa20e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x972e);
        EXPECT(gbc.pc(), 0xa210);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa20e), 0xcb);
        EXPECT(gbc.readMem(0xa20f), 0x8b);
        // CB 8B 00E2
        gbc.setState(0x4b10, 0xec94, 0x5650, 0x10a6, 0x4255, 0xa528, 0x0, 0x1);
        gbc.writeMem(0x4b10, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xec94);
        EXPECT(gbc.pc(), 0x4b12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00E3
        gbc.setState(0x7050, 0xd1f9, 0x6080, 0x154, 0x8a68, 0x72f7, 0x1, 0x0);
        gbc.writeMem(0x7050, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd1f9);
        EXPECT(gbc.pc(), 0x7052);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00E4
        gbc.setState(0x987e, 0x3342, 0x54f0, 0x3d, 0x2828, 0xe682, 0x0, 0x1);
        gbc.writeMem(0x987e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3342);
        EXPECT(gbc.pc(), 0x9880);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x987e), 0xcb);
        EXPECT(gbc.readMem(0x987f), 0x8b);
        // CB 8B 00E5
        gbc.setState(0x7d0d, 0xa95, 0x4ea0, 0x4fbd, 0xc7e7, 0x2910, 0x0, 0x1);
        gbc.writeMem(0x7d0d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa95);
        EXPECT(gbc.pc(), 0x7d0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00E6
        gbc.setState(0x843, 0x8470, 0xa570, 0x3882, 0xe02b, 0x8c8f, 0x1, 0x1);
        gbc.writeMem(0x843, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8470);
        EXPECT(gbc.pc(), 0x845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00E7
        gbc.setState(0x3b72, 0xa1e, 0xada0, 0xf99d, 0xd211, 0x3a52, 0x0, 0x0);
        gbc.writeMem(0x3b72, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa1e);
        EXPECT(gbc.pc(), 0x3b74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00E8
        gbc.setState(0xc6b1, 0xf32b, 0x660, 0x2a36, 0x58bd, 0xbbed, 0x0, 0x1);
        gbc.writeMem(0xc6b1, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf32b);
        EXPECT(gbc.pc(), 0xc6b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6b1), 0xcb);
        EXPECT(gbc.readMem(0xc6b2), 0x8b);
        // CB 8B 00E9
        gbc.setState(0x5263, 0xf9ec, 0x84c0, 0x4840, 0x7692, 0x4089, 0x0, 0x0);
        gbc.writeMem(0x5263, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf9ec);
        EXPECT(gbc.pc(), 0x5265);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00EA
        gbc.setState(0xb9ff, 0xad99, 0xaf60, 0x5d18, 0x529e, 0x35dd, 0x0, 0x1);
        gbc.writeMem(0xb9ff, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xad99);
        EXPECT(gbc.pc(), 0xba01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9ff), 0xcb);
        EXPECT(gbc.readMem(0xba00), 0x8b);
        // CB 8B 00EB
        gbc.setState(0x1c55, 0x88a2, 0xd410, 0x61f, 0x7075, 0x9725, 0x1, 0x0);
        gbc.writeMem(0x1c55, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x88a2);
        EXPECT(gbc.pc(), 0x1c57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00EC
        gbc.setState(0xd226, 0xbbf, 0xfc70, 0xc558, 0xbc18, 0x81dd, 0x1, 0x1);
        gbc.writeMem(0xd226, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xbbf);
        EXPECT(gbc.pc(), 0xd228);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd226), 0xcb);
        EXPECT(gbc.readMem(0xd227), 0x8b);
        // CB 8B 00ED
        gbc.setState(0x516d, 0x7d28, 0x7f0, 0x8d36, 0x5211, 0x69d5, 0x1, 0x0);
        gbc.writeMem(0x516d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7d28);
        EXPECT(gbc.pc(), 0x516f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00EE
        gbc.setState(0x1e0f, 0x7dc3, 0x3e90, 0x4d4e, 0x4f30, 0xcae2, 0x1, 0x0);
        gbc.writeMem(0x1e0f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7dc3);
        EXPECT(gbc.pc(), 0x1e11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00EF
        gbc.setState(0x74a9, 0x3463, 0x14e0, 0xc499, 0x8b7, 0xac60, 0x0, 0x0);
        gbc.writeMem(0x74a9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3463);
        EXPECT(gbc.pc(), 0x74ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00F0
        gbc.setState(0x633f, 0x5f16, 0xb370, 0x7a91, 0x8d65, 0xf3a9, 0x1, 0x1);
        gbc.writeMem(0x633f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5f16);
        EXPECT(gbc.pc(), 0x6341);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00F1
        gbc.setState(0x4df0, 0xfa84, 0x5250, 0xa2d0, 0x3ae9, 0x2b3d, 0x1, 0x0);
        gbc.writeMem(0x4df0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xfa84);
        EXPECT(gbc.pc(), 0x4df2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00F2
        gbc.setState(0x9a39, 0xbed5, 0xba60, 0xc99b, 0x5c61, 0x682f, 0x1, 0x1);
        gbc.writeMem(0x9a39, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xbed5);
        EXPECT(gbc.pc(), 0x9a3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a39), 0xcb);
        EXPECT(gbc.readMem(0x9a3a), 0x8b);
        // CB 8B 00F4
        gbc.setState(0xbb01, 0x870e, 0x5870, 0xfe52, 0xacb5, 0x5dc3, 0x0, 0x1);
        gbc.writeMem(0xbb01, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x870e);
        EXPECT(gbc.pc(), 0xbb03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb01), 0xcb);
        EXPECT(gbc.readMem(0xbb02), 0x8b);
        // CB 8B 00F5
        gbc.setState(0xdcd8, 0x173e, 0x73e0, 0xc35c, 0x15b1, 0x477e, 0x0, 0x0);
        gbc.writeMem(0xdcd8, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x173e);
        EXPECT(gbc.pc(), 0xdcda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcd8), 0xcb);
        EXPECT(gbc.readMem(0xdcd9), 0x8b);
        // CB 8B 00F6
        gbc.setState(0x7ddf, 0x1d97, 0x4a20, 0x5180, 0x5542, 0x73af, 0x1, 0x0);
        gbc.writeMem(0x7ddf, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x1d97);
        EXPECT(gbc.pc(), 0x7de1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 00F8
        gbc.setState(0x9fc5, 0x9457, 0x3720, 0xe643, 0x4b1e, 0x3f8b, 0x1, 0x1);
        gbc.writeMem(0x9fc5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9457);
        EXPECT(gbc.pc(), 0x9fc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fc5), 0xcb);
        EXPECT(gbc.readMem(0x9fc6), 0x8b);
        // CB 8B 00F9
        gbc.setState(0xe2ec, 0xd0d4, 0x24f0, 0x5bcb, 0xbc8a, 0x6d52, 0x0, 0x1);
        gbc.writeMem(0xe2ec, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd0d4);
        EXPECT(gbc.pc(), 0xe2ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2ec), 0xcb);
        EXPECT(gbc.readMem(0xe2ed), 0x8b);
        // CB 8B 00FA
        gbc.setState(0xee05, 0x45c9, 0xeef0, 0x90c3, 0x5dd2, 0x1665, 0x0, 0x1);
        gbc.writeMem(0xee05, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x45c9);
        EXPECT(gbc.pc(), 0xee07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee05), 0xcb);
        EXPECT(gbc.readMem(0xee06), 0x8b);
        // CB 8B 00FB
        gbc.setState(0x28fc, 0x993f, 0x1f0, 0xafa6, 0x59a3, 0x408a, 0x0, 0x0);
        gbc.writeMem(0x28fc, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x993f);
        EXPECT(gbc.pc(), 0x28fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 00FC
        gbc.setState(0xc692, 0x87e, 0xc030, 0x2032, 0x71ec, 0xad1, 0x0, 0x1);
        gbc.writeMem(0xc692, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x87e);
        EXPECT(gbc.pc(), 0xc694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc692), 0xcb);
        EXPECT(gbc.readMem(0xc693), 0x8b);
        // CB 8B 00FD
        gbc.setState(0x1b8b, 0x1a9c, 0xab00, 0xcad, 0x107a, 0x333a, 0x1, 0x1);
        gbc.writeMem(0x1b8b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x1a9c);
        EXPECT(gbc.pc(), 0x1b8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0100
        gbc.setState(0x67c, 0xe13, 0xc750, 0x3bbb, 0x3572, 0x8cc3, 0x0, 0x1);
        gbc.writeMem(0x67c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe13);
        EXPECT(gbc.pc(), 0x67e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0101
        gbc.setState(0xb7ea, 0x20d0, 0x98c0, 0x4cb7, 0xe276, 0x4bbf, 0x1, 0x0);
        gbc.writeMem(0xb7ea, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x20d0);
        EXPECT(gbc.pc(), 0xb7ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ea), 0xcb);
        EXPECT(gbc.readMem(0xb7eb), 0x8b);
        // CB 8B 0102
        gbc.setState(0xa840, 0x1218, 0xf340, 0x71f7, 0x7b57, 0x73a3, 0x0, 0x0);
        gbc.writeMem(0xa840, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1218);
        EXPECT(gbc.pc(), 0xa842);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa840), 0xcb);
        EXPECT(gbc.readMem(0xa841), 0x8b);
        // CB 8B 0103
        gbc.setState(0x52d, 0xace2, 0xf880, 0x9dc0, 0x6bd5, 0xc953, 0x1, 0x0);
        gbc.writeMem(0x52d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xace2);
        EXPECT(gbc.pc(), 0x52f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0104
        gbc.setState(0x3ac7, 0x1a9c, 0xfa40, 0xcfd, 0xaa5a, 0x7a3a, 0x1, 0x1);
        gbc.writeMem(0x3ac7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x1a9c);
        EXPECT(gbc.pc(), 0x3ac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0105
        gbc.setState(0x9762, 0x6f88, 0x3b60, 0xf6d1, 0xa6c7, 0x351f, 0x1, 0x1);
        gbc.writeMem(0x9762, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6f88);
        EXPECT(gbc.pc(), 0x9764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9762), 0xcb);
        EXPECT(gbc.readMem(0x9763), 0x8b);
        // CB 8B 0106
        gbc.setState(0xa81f, 0x48d4, 0xbab0, 0xb5bd, 0x59ed, 0x97f3, 0x0, 0x1);
        gbc.writeMem(0xa81f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x48d4);
        EXPECT(gbc.pc(), 0xa821);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa81f), 0xcb);
        EXPECT(gbc.readMem(0xa820), 0x8b);
        // CB 8B 0107
        gbc.setState(0xe303, 0xc65f, 0x7aa0, 0xebfe, 0xa14c, 0xc4e2, 0x0, 0x1);
        gbc.writeMem(0xe303, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc65f);
        EXPECT(gbc.pc(), 0xe305);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe303), 0xcb);
        EXPECT(gbc.readMem(0xe304), 0x8b);
        // CB 8B 0108
        gbc.setState(0xd1c1, 0xf17a, 0x5600, 0x537b, 0x3ef7, 0x9e59, 0x0, 0x1);
        gbc.writeMem(0xd1c1, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf17a);
        EXPECT(gbc.pc(), 0xd1c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1c1), 0xcb);
        EXPECT(gbc.readMem(0xd1c2), 0x8b);
        // CB 8B 0109
        gbc.setState(0x102f, 0xbd5a, 0xf620, 0xe7f7, 0x758e, 0xd7b, 0x0, 0x1);
        gbc.writeMem(0x102f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xbd5a);
        EXPECT(gbc.pc(), 0x1031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 010A
        gbc.setState(0xea70, 0x168, 0xf7c0, 0xdd, 0xed3e, 0x3ae5, 0x0, 0x0);
        gbc.writeMem(0xea70, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x168);
        EXPECT(gbc.pc(), 0xea72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea70), 0xcb);
        EXPECT(gbc.readMem(0xea71), 0x8b);
        // CB 8B 010B
        gbc.setState(0x58ce, 0x1c03, 0xfac0, 0xea8a, 0x9870, 0xb1d1, 0x0, 0x1);
        gbc.writeMem(0x58ce, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1c03);
        EXPECT(gbc.pc(), 0x58d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 010C
        gbc.setState(0x6d4, 0xb843, 0x900, 0xf300, 0x6248, 0x5ef, 0x0, 0x1);
        gbc.writeMem(0x6d4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb843);
        EXPECT(gbc.pc(), 0x6d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 010D
        gbc.setState(0x8765, 0x5a24, 0xb810, 0x6268, 0x78bc, 0xfbd4, 0x1, 0x1);
        gbc.writeMem(0x8765, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x5a24);
        EXPECT(gbc.pc(), 0x8767);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8765), 0xcb);
        EXPECT(gbc.readMem(0x8766), 0x8b);
        // CB 8B 010F
        gbc.setState(0x48e0, 0xf308, 0x51a0, 0x359c, 0x8b7c, 0x4ca7, 0x1, 0x1);
        gbc.writeMem(0x48e0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf308);
        EXPECT(gbc.pc(), 0x48e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0110
        gbc.setState(0xd384, 0x53ef, 0xe480, 0xe215, 0x195e, 0x12b1, 0x1, 0x0);
        gbc.writeMem(0xd384, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x53ef);
        EXPECT(gbc.pc(), 0xd386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd384), 0xcb);
        EXPECT(gbc.readMem(0xd385), 0x8b);
        // CB 8B 0111
        gbc.setState(0xd6ff, 0xff60, 0x4ed0, 0x1406, 0x496f, 0x7d6, 0x1, 0x1);
        gbc.writeMem(0xd6ff, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xff60);
        EXPECT(gbc.pc(), 0xd701);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6ff), 0xcb);
        EXPECT(gbc.readMem(0xd700), 0x8b);
        // CB 8B 0112
        gbc.setState(0xc1e5, 0x545e, 0xa580, 0x7431, 0x5a21, 0x59aa, 0x0, 0x1);
        gbc.writeMem(0xc1e5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x545e);
        EXPECT(gbc.pc(), 0xc1e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1e5), 0xcb);
        EXPECT(gbc.readMem(0xc1e6), 0x8b);
        // CB 8B 0113
        gbc.setState(0x492d, 0x6c7a, 0xad90, 0xd1f8, 0xd575, 0x44e, 0x1, 0x0);
        gbc.writeMem(0x492d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6c7a);
        EXPECT(gbc.pc(), 0x492f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0114
        gbc.setState(0x7542, 0x4094, 0x1800, 0xe375, 0xd8a4, 0x3bbc, 0x0, 0x0);
        gbc.writeMem(0x7542, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4094);
        EXPECT(gbc.pc(), 0x7544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0115
        gbc.setState(0x3104, 0x424d, 0x1690, 0xc159, 0x84d1, 0x4d7c, 0x0, 0x0);
        gbc.writeMem(0x3104, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x424d);
        EXPECT(gbc.pc(), 0x3106);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0116
        gbc.setState(0x8704, 0x93fb, 0x84a0, 0xf736, 0x8e0f, 0x92d7, 0x1, 0x1);
        gbc.writeMem(0x8704, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x93fb);
        EXPECT(gbc.pc(), 0x8706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8704), 0xcb);
        EXPECT(gbc.readMem(0x8705), 0x8b);
        // CB 8B 0117
        gbc.setState(0x6697, 0x8498, 0x1900, 0x3b97, 0x1f4e, 0x2fb1, 0x0, 0x0);
        gbc.writeMem(0x6697, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8498);
        EXPECT(gbc.pc(), 0x6699);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0118
        gbc.setState(0x82f1, 0x37aa, 0xce00, 0xc88, 0x21ed, 0x3b92, 0x1, 0x0);
        gbc.writeMem(0x82f1, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x37aa);
        EXPECT(gbc.pc(), 0x82f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82f1), 0xcb);
        EXPECT(gbc.readMem(0x82f2), 0x8b);
        // CB 8B 0119
        gbc.setState(0xd1a9, 0xd298, 0x9f90, 0xac5, 0xe54c, 0x79a4, 0x1, 0x0);
        gbc.writeMem(0xd1a9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd298);
        EXPECT(gbc.pc(), 0xd1ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1a9), 0xcb);
        EXPECT(gbc.readMem(0xd1aa), 0x8b);
        // CB 8B 011A
        gbc.setState(0xcb2f, 0xd42e, 0xd4b0, 0x2b67, 0xcd4f, 0x1cf3, 0x0, 0x1);
        gbc.writeMem(0xcb2f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd42e);
        EXPECT(gbc.pc(), 0xcb31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb2f), 0xcb);
        EXPECT(gbc.readMem(0xcb30), 0x8b);
        // CB 8B 011B
        gbc.setState(0x9aaa, 0x59af, 0x3b20, 0x9654, 0xe85d, 0x628e, 0x1, 0x1);
        gbc.writeMem(0x9aaa, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x59af);
        EXPECT(gbc.pc(), 0x9aac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aaa), 0xcb);
        EXPECT(gbc.readMem(0x9aab), 0x8b);
        // CB 8B 011C
        gbc.setState(0x27ed, 0x3382, 0x5e50, 0xf198, 0xb755, 0xcffe, 0x0, 0x0);
        gbc.writeMem(0x27ed, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3382);
        EXPECT(gbc.pc(), 0x27ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 011D
        gbc.setState(0xaefe, 0xcfc3, 0x5990, 0x12e8, 0x95fa, 0xa378, 0x1, 0x1);
        gbc.writeMem(0xaefe, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xcfc3);
        EXPECT(gbc.pc(), 0xaf00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaefe), 0xcb);
        EXPECT(gbc.readMem(0xaeff), 0x8b);
        // CB 8B 011E
        gbc.setState(0x9186, 0x4e37, 0x9100, 0x8b00, 0x5ba4, 0x16b8, 0x1, 0x0);
        gbc.writeMem(0x9186, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4e37);
        EXPECT(gbc.pc(), 0x9188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9186), 0xcb);
        EXPECT(gbc.readMem(0x9187), 0x8b);
        // CB 8B 011F
        gbc.setState(0x2beb, 0xf20, 0x8aa0, 0x9a59, 0xfa6d, 0x15ab, 0x1, 0x1);
        gbc.writeMem(0x2beb, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf20);
        EXPECT(gbc.pc(), 0x2bed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0120
        gbc.setState(0xeb2e, 0x89f8, 0xfb20, 0x8c6e, 0x812, 0xef03, 0x0, 0x0);
        gbc.writeMem(0xeb2e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x89f8);
        EXPECT(gbc.pc(), 0xeb30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb2e), 0xcb);
        EXPECT(gbc.readMem(0xeb2f), 0x8b);
        // CB 8B 0121
        gbc.setState(0x44e0, 0xcfdc, 0xcb50, 0x39f3, 0x93ab, 0x48f, 0x0, 0x0);
        gbc.writeMem(0x44e0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xcfdc);
        EXPECT(gbc.pc(), 0x44e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0122
        gbc.setState(0x4fe7, 0x8933, 0xb470, 0x9035, 0x4205, 0xf235, 0x0, 0x0);
        gbc.writeMem(0x4fe7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8933);
        EXPECT(gbc.pc(), 0x4fe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0123
        gbc.setState(0x79c0, 0x13d8, 0x7870, 0xf652, 0xa254, 0x572, 0x0, 0x1);
        gbc.writeMem(0x79c0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x13d8);
        EXPECT(gbc.pc(), 0x79c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0124
        gbc.setState(0x8f6, 0x3c69, 0x7570, 0x7d2b, 0xec74, 0xb18f, 0x0, 0x1);
        gbc.writeMem(0x8f6, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3c69);
        EXPECT(gbc.pc(), 0x8f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0125
        gbc.setState(0xbfea, 0xff58, 0x6490, 0xc6ef, 0xb712, 0xf4a9, 0x1, 0x1);
        gbc.writeMem(0xbfea, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xff58);
        EXPECT(gbc.pc(), 0xbfec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfea), 0xcb);
        EXPECT(gbc.readMem(0xbfeb), 0x8b);
        // CB 8B 0126
        gbc.setState(0x6ac7, 0x7c5a, 0xbef0, 0xeb62, 0xe07b, 0x2ca7, 0x1, 0x1);
        gbc.writeMem(0x6ac7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7c5a);
        EXPECT(gbc.pc(), 0x6ac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0127
        gbc.setState(0xc232, 0x61d2, 0x2aa0, 0xf419, 0x297a, 0x6e2d, 0x1, 0x0);
        gbc.writeMem(0xc232, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x61d2);
        EXPECT(gbc.pc(), 0xc234);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc232), 0xcb);
        EXPECT(gbc.readMem(0xc233), 0x8b);
        // CB 8B 0128
        gbc.setState(0xfbd, 0xc57d, 0x16f0, 0x44d6, 0xd566, 0xcd0b, 0x1, 0x1);
        gbc.writeMem(0xfbd, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc57d);
        EXPECT(gbc.pc(), 0xfbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 012A
        gbc.setState(0x5b21, 0x19d0, 0x2910, 0x13a4, 0xb734, 0x6a97, 0x1, 0x0);
        gbc.writeMem(0x5b21, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x19d0);
        EXPECT(gbc.pc(), 0x5b23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 012B
        gbc.setState(0x18a7, 0x2963, 0x2bb0, 0x9710, 0xa86a, 0x50aa, 0x0, 0x0);
        gbc.writeMem(0x18a7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2963);
        EXPECT(gbc.pc(), 0x18a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 012C
        gbc.setState(0x3069, 0x8173, 0xbc70, 0x42b9, 0x8822, 0xac73, 0x0, 0x0);
        gbc.writeMem(0x3069, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8173);
        EXPECT(gbc.pc(), 0x306b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 012D
        gbc.setState(0xe2b1, 0xc558, 0x6c70, 0xf9ac, 0xd14d, 0xa9b7, 0x1, 0x0);
        gbc.writeMem(0xe2b1, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc558);
        EXPECT(gbc.pc(), 0xe2b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2b1), 0xcb);
        EXPECT(gbc.readMem(0xe2b2), 0x8b);
        // CB 8B 012E
        gbc.setState(0x5c84, 0x7ab8, 0xf630, 0xb955, 0x41b0, 0x3c4a, 0x0, 0x0);
        gbc.writeMem(0x5c84, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7ab8);
        EXPECT(gbc.pc(), 0x5c86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 012F
        gbc.setState(0x2bfb, 0xe914, 0x2160, 0x27a2, 0xf59f, 0x1511, 0x0, 0x0);
        gbc.writeMem(0x2bfb, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xe914);
        EXPECT(gbc.pc(), 0x2bfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0130
        gbc.setState(0x5823, 0xb77c, 0x9020, 0xb0a7, 0xa98b, 0x519b, 0x0, 0x1);
        gbc.writeMem(0x5823, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb77c);
        EXPECT(gbc.pc(), 0x5825);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0131
        gbc.setState(0xebe5, 0xc1b, 0xade0, 0x6c88, 0xbd6e, 0xace, 0x0, 0x1);
        gbc.writeMem(0xebe5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xc1b);
        EXPECT(gbc.pc(), 0xebe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebe5), 0xcb);
        EXPECT(gbc.readMem(0xebe6), 0x8b);
        // CB 8B 0132
        gbc.setState(0x5fce, 0x267d, 0xefa0, 0x9300, 0x3200, 0x1f9b, 0x1, 0x0);
        gbc.writeMem(0x5fce, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x267d);
        EXPECT(gbc.pc(), 0x5fd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0134
        gbc.setState(0x3f34, 0x356a, 0x4160, 0xe426, 0xcacd, 0x7ec9, 0x1, 0x0);
        gbc.writeMem(0x3f34, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x356a);
        EXPECT(gbc.pc(), 0x3f36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0135
        gbc.setState(0xcc40, 0x23b2, 0xe360, 0xf3c, 0x46d7, 0xfbfc, 0x0, 0x1);
        gbc.writeMem(0xcc40, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x23b2);
        EXPECT(gbc.pc(), 0xcc42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc40), 0xcb);
        EXPECT(gbc.readMem(0xcc41), 0x8b);
        // CB 8B 0136
        gbc.setState(0x82be, 0x424f, 0xaa30, 0xf4d5, 0xc286, 0xc178, 0x0, 0x0);
        gbc.writeMem(0x82be, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x424f);
        EXPECT(gbc.pc(), 0x82c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82be), 0xcb);
        EXPECT(gbc.readMem(0x82bf), 0x8b);
        // CB 8B 0137
        gbc.setState(0xd18e, 0xe60f, 0x7340, 0xe785, 0x494f, 0x8949, 0x1, 0x0);
        gbc.writeMem(0xd18e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe60f);
        EXPECT(gbc.pc(), 0xd190);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd18e), 0xcb);
        EXPECT(gbc.readMem(0xd18f), 0x8b);
        // CB 8B 0138
        gbc.setState(0xe06d, 0xb10, 0xe3c0, 0x49f1, 0x896d, 0xdb, 0x1, 0x1);
        gbc.writeMem(0xe06d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb10);
        EXPECT(gbc.pc(), 0xe06f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe06d), 0xcb);
        EXPECT(gbc.readMem(0xe06e), 0x8b);
        // CB 8B 0139
        gbc.setState(0xedd1, 0xf046, 0xcaa0, 0x6c20, 0x4632, 0x4c45, 0x0, 0x0);
        gbc.writeMem(0xedd1, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf046);
        EXPECT(gbc.pc(), 0xedd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd1), 0xcb);
        EXPECT(gbc.readMem(0xedd2), 0x8b);
        // CB 8B 013B
        gbc.setState(0xcd2b, 0xd7c0, 0x3b60, 0xb570, 0x29a2, 0x4b4, 0x0, 0x1);
        gbc.writeMem(0xcd2b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xd7c0);
        EXPECT(gbc.pc(), 0xcd2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd2b), 0xcb);
        EXPECT(gbc.readMem(0xcd2c), 0x8b);
        // CB 8B 013C
        gbc.setState(0xbeb6, 0x591f, 0x8f30, 0x7ce, 0xabca, 0x44e9, 0x0, 0x1);
        gbc.writeMem(0xbeb6, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x591f);
        EXPECT(gbc.pc(), 0xbeb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeb6), 0xcb);
        EXPECT(gbc.readMem(0xbeb7), 0x8b);
        // CB 8B 013D
        gbc.setState(0x8f3b, 0x3ff, 0x9b20, 0xc409, 0x5958, 0x76b5, 0x0, 0x1);
        gbc.writeMem(0x8f3b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x3ff);
        EXPECT(gbc.pc(), 0x8f3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f3b), 0xcb);
        EXPECT(gbc.readMem(0x8f3c), 0x8b);
        // CB 8B 013E
        gbc.setState(0xc9d3, 0xfdfc, 0x4e60, 0xacdd, 0x21c8, 0x4c49, 0x1, 0x1);
        gbc.writeMem(0xc9d3, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xfdfc);
        EXPECT(gbc.pc(), 0xc9d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9d3), 0xcb);
        EXPECT(gbc.readMem(0xc9d4), 0x8b);
        // CB 8B 013F
        gbc.setState(0x50a5, 0xe5ee, 0x4800, 0x6bbe, 0x708b, 0xbd7e, 0x0, 0x1);
        gbc.writeMem(0x50a5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe5ee);
        EXPECT(gbc.pc(), 0x50a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0141
        gbc.setState(0x9991, 0x56f7, 0x2af0, 0xb801, 0x70ea, 0x366d, 0x1, 0x1);
        gbc.writeMem(0x9991, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x56f7);
        EXPECT(gbc.pc(), 0x9993);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9991), 0xcb);
        EXPECT(gbc.readMem(0x9992), 0x8b);
        // CB 8B 0142
        gbc.setState(0x2cf0, 0x37c6, 0x7d20, 0xa42a, 0xf83a, 0x2ddc, 0x0, 0x1);
        gbc.writeMem(0x2cf0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x37c6);
        EXPECT(gbc.pc(), 0x2cf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0143
        gbc.setState(0x1560, 0x34cb, 0xa1d0, 0xb627, 0x557b, 0x57b7, 0x1, 0x0);
        gbc.writeMem(0x1560, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x34cb);
        EXPECT(gbc.pc(), 0x1562);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0144
        gbc.setState(0x2ca6, 0x48c7, 0x5c20, 0xfa6c, 0x1593, 0x8646, 0x1, 0x0);
        gbc.writeMem(0x2ca6, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x48c7);
        EXPECT(gbc.pc(), 0x2ca8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0145
        gbc.setState(0x6a19, 0xfe86, 0xef90, 0x43c7, 0xa7cf, 0x2dbe, 0x0, 0x1);
        gbc.writeMem(0x6a19, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xfe86);
        EXPECT(gbc.pc(), 0x6a1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0146
        gbc.setState(0x1cbe, 0x893e, 0x2c30, 0x52e, 0x6086, 0x47d8, 0x0, 0x0);
        gbc.writeMem(0x1cbe, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x893e);
        EXPECT(gbc.pc(), 0x1cc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0147
        gbc.setState(0x7865, 0x3e37, 0xbcb0, 0xf71c, 0xa2, 0x779c, 0x0, 0x0);
        gbc.writeMem(0x7865, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3e37);
        EXPECT(gbc.pc(), 0x7867);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0148
        gbc.setState(0x9770, 0x20c4, 0x7a00, 0x6d29, 0xf916, 0x41f6, 0x0, 0x1);
        gbc.writeMem(0x9770, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x20c4);
        EXPECT(gbc.pc(), 0x9772);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9770), 0xcb);
        EXPECT(gbc.readMem(0x9771), 0x8b);
        // CB 8B 0149
        gbc.setState(0xcc23, 0x4556, 0x18c0, 0x3b42, 0x4126, 0xb66d, 0x0, 0x0);
        gbc.writeMem(0xcc23, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x4556);
        EXPECT(gbc.pc(), 0xcc25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc23), 0xcb);
        EXPECT(gbc.readMem(0xcc24), 0x8b);
        // CB 8B 014A
        gbc.setState(0x50e5, 0x69d9, 0x330, 0x958, 0xb41f, 0xb5f2, 0x1, 0x1);
        gbc.writeMem(0x50e5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x69d9);
        EXPECT(gbc.pc(), 0x50e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 014B
        gbc.setState(0xd846, 0x88d1, 0xbe90, 0xbbf8, 0xcea1, 0x3fb0, 0x0, 0x1);
        gbc.writeMem(0xd846, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x88d1);
        EXPECT(gbc.pc(), 0xd848);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd846), 0xcb);
        EXPECT(gbc.readMem(0xd847), 0x8b);
        // CB 8B 014C
        gbc.setState(0x29d5, 0x19ad, 0x3f70, 0x2dff, 0xf3bb, 0x7fb9, 0x1, 0x0);
        gbc.writeMem(0x29d5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x19ad);
        EXPECT(gbc.pc(), 0x29d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 014D
        gbc.setState(0x8ecc, 0x87df, 0xa270, 0x2dbb, 0x95df, 0xfac4, 0x1, 0x1);
        gbc.writeMem(0x8ecc, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x87df);
        EXPECT(gbc.pc(), 0x8ece);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ecc), 0xcb);
        EXPECT(gbc.readMem(0x8ecd), 0x8b);
        // CB 8B 014E
        gbc.setState(0xe094, 0xb8b4, 0x3b0, 0x8343, 0xe78e, 0x4ea7, 0x0, 0x1);
        gbc.writeMem(0xe094, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xb8b4);
        EXPECT(gbc.pc(), 0xe096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe094), 0xcb);
        EXPECT(gbc.readMem(0xe095), 0x8b);
        // CB 8B 014F
        gbc.setState(0xd8a8, 0xa329, 0xc910, 0xa181, 0xe9ab, 0x1fa8, 0x1, 0x1);
        gbc.writeMem(0xd8a8, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa329);
        EXPECT(gbc.pc(), 0xd8aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8a8), 0xcb);
        EXPECT(gbc.readMem(0xd8a9), 0x8b);
        // CB 8B 0150
        gbc.setState(0x4bcc, 0x11ba, 0x11f0, 0x1575, 0xd4ed, 0x7e42, 0x0, 0x1);
        gbc.writeMem(0x4bcc, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x11ba);
        EXPECT(gbc.pc(), 0x4bce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0151
        gbc.setState(0x5143, 0xabd0, 0x2740, 0x10f9, 0x26d9, 0x637b, 0x0, 0x1);
        gbc.writeMem(0x5143, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xabd0);
        EXPECT(gbc.pc(), 0x5145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0152
        gbc.setState(0xed44, 0x44bb, 0x9f0, 0x408a, 0xc14f, 0xa5ae, 0x0, 0x0);
        gbc.writeMem(0xed44, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x44bb);
        EXPECT(gbc.pc(), 0xed46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed44), 0xcb);
        EXPECT(gbc.readMem(0xed45), 0x8b);
        // CB 8B 0153
        gbc.setState(0xdbe9, 0x5dc3, 0x97c0, 0x6e8d, 0x809c, 0xb78f, 0x1, 0x1);
        gbc.writeMem(0xdbe9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5dc3);
        EXPECT(gbc.pc(), 0xdbeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbe9), 0xcb);
        EXPECT(gbc.readMem(0xdbea), 0x8b);
        // CB 8B 0154
        gbc.setState(0x6cab, 0x1df6, 0x6450, 0x5a04, 0xc759, 0x9df0, 0x0, 0x1);
        gbc.writeMem(0x6cab, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1df6);
        EXPECT(gbc.pc(), 0x6cad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0155
        gbc.setState(0x3189, 0xe998, 0xf1a0, 0x53e4, 0x6b47, 0xd44c, 0x1, 0x0);
        gbc.writeMem(0x3189, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe998);
        EXPECT(gbc.pc(), 0x318b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0156
        gbc.setState(0x5b9, 0x2df6, 0x9190, 0xb2ff, 0x6658, 0xd8f3, 0x0, 0x0);
        gbc.writeMem(0x5b9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2df6);
        EXPECT(gbc.pc(), 0x5bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0157
        gbc.setState(0x5296, 0xef8f, 0xf140, 0x1f59, 0x8ecb, 0xa937, 0x1, 0x1);
        gbc.writeMem(0x5296, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xef8f);
        EXPECT(gbc.pc(), 0x5298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0158
        gbc.setState(0xec79, 0xc4b, 0x2820, 0x6d3, 0x6378, 0x6bfd, 0x1, 0x1);
        gbc.writeMem(0xec79, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xc4b);
        EXPECT(gbc.pc(), 0xec7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec79), 0xcb);
        EXPECT(gbc.readMem(0xec7a), 0x8b);
        // CB 8B 0159
        gbc.setState(0x3111, 0x6b81, 0x92b0, 0x94cd, 0xea30, 0xf98f, 0x0, 0x1);
        gbc.writeMem(0x3111, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6b81);
        EXPECT(gbc.pc(), 0x3113);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 015A
        gbc.setState(0xd80e, 0xe11a, 0xeb80, 0xfbe, 0xbe3f, 0x659, 0x1, 0x1);
        gbc.writeMem(0xd80e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe11a);
        EXPECT(gbc.pc(), 0xd810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd80e), 0xcb);
        EXPECT(gbc.readMem(0xd80f), 0x8b);
        // CB 8B 015B
        gbc.setState(0x565, 0xd7d5, 0x2950, 0x40ab, 0x586d, 0x3716, 0x0, 0x0);
        gbc.writeMem(0x565, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd7d5);
        EXPECT(gbc.pc(), 0x567);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 015C
        gbc.setState(0x1031, 0x71f8, 0xb5b0, 0xfc2a, 0x73d6, 0xa0f, 0x0, 0x1);
        gbc.writeMem(0x1031, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x71f8);
        EXPECT(gbc.pc(), 0x1033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 015D
        gbc.setState(0x514, 0x3591, 0xb9b0, 0x2072, 0xa6a, 0xf28, 0x0, 0x1);
        gbc.writeMem(0x514, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3591);
        EXPECT(gbc.pc(), 0x516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 015E
        gbc.setState(0x329d, 0xa287, 0xb450, 0xce2d, 0xfc87, 0xf6e7, 0x0, 0x0);
        gbc.writeMem(0x329d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa287);
        EXPECT(gbc.pc(), 0x329f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 015F
        gbc.setState(0x8b12, 0x2cca, 0xf0f0, 0xfd4, 0x269c, 0xe6b3, 0x0, 0x1);
        gbc.writeMem(0x8b12, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2cca);
        EXPECT(gbc.pc(), 0x8b14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b12), 0xcb);
        EXPECT(gbc.readMem(0x8b13), 0x8b);
        // CB 8B 0160
        gbc.setState(0x27af, 0x482d, 0x9410, 0xe63a, 0xec0, 0x1a4, 0x1, 0x0);
        gbc.writeMem(0x27af, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x482d);
        EXPECT(gbc.pc(), 0x27b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0162
        gbc.setState(0x11da, 0x2f46, 0xd5d0, 0x1da7, 0xe627, 0xd2a2, 0x0, 0x1);
        gbc.writeMem(0x11da, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2f46);
        EXPECT(gbc.pc(), 0x11dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0163
        gbc.setState(0xac32, 0xdf9, 0x6b80, 0x23cc, 0xee4d, 0xad9c, 0x0, 0x1);
        gbc.writeMem(0xac32, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xdf9);
        EXPECT(gbc.pc(), 0xac34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac32), 0xcb);
        EXPECT(gbc.readMem(0xac33), 0x8b);
        // CB 8B 0165
        gbc.setState(0x2eb6, 0xe65a, 0xca90, 0x6f8b, 0x7dc8, 0xb730, 0x1, 0x0);
        gbc.writeMem(0x2eb6, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe65a);
        EXPECT(gbc.pc(), 0x2eb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0166
        gbc.setState(0x9dad, 0x2e8a, 0x2560, 0xb105, 0x6962, 0x2ef0, 0x0, 0x0);
        gbc.writeMem(0x9dad, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2e8a);
        EXPECT(gbc.pc(), 0x9daf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dad), 0xcb);
        EXPECT(gbc.readMem(0x9dae), 0x8b);
        // CB 8B 0167
        gbc.setState(0x4b58, 0x4997, 0x45e0, 0x1246, 0xd5e0, 0x5707, 0x0, 0x1);
        gbc.writeMem(0x4b58, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4997);
        EXPECT(gbc.pc(), 0x4b5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0168
        gbc.setState(0xbff4, 0x273f, 0x5690, 0x28c, 0xa7af, 0x6663, 0x0, 0x0);
        gbc.writeMem(0xbff4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x273f);
        EXPECT(gbc.pc(), 0xbff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbff4), 0xcb);
        EXPECT(gbc.readMem(0xbff5), 0x8b);
        // CB 8B 0169
        gbc.setState(0x850f, 0x413d, 0x99d0, 0x9cbd, 0x7c6d, 0x62ee, 0x0, 0x1);
        gbc.writeMem(0x850f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x413d);
        EXPECT(gbc.pc(), 0x8511);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x850f), 0xcb);
        EXPECT(gbc.readMem(0x8510), 0x8b);
        // CB 8B 016A
        gbc.setState(0x2df9, 0xfa72, 0xf5b0, 0xba9e, 0x4876, 0x2115, 0x1, 0x1);
        gbc.writeMem(0x2df9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfa72);
        EXPECT(gbc.pc(), 0x2dfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 016B
        gbc.setState(0x39a6, 0x4424, 0xd320, 0xb57b, 0xf94b, 0x4288, 0x1, 0x1);
        gbc.writeMem(0x39a6, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4424);
        EXPECT(gbc.pc(), 0x39a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 016C
        gbc.setState(0x8ce9, 0xd6f5, 0x2e00, 0xb863, 0x9666, 0x6bd8, 0x1, 0x1);
        gbc.writeMem(0x8ce9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd6f5);
        EXPECT(gbc.pc(), 0x8ceb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ce9), 0xcb);
        EXPECT(gbc.readMem(0x8cea), 0x8b);
        // CB 8B 016D
        gbc.setState(0x9256, 0x9409, 0xc0, 0x8223, 0xc2d8, 0xcac3, 0x1, 0x1);
        gbc.writeMem(0x9256, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9409);
        EXPECT(gbc.pc(), 0x9258);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9256), 0xcb);
        EXPECT(gbc.readMem(0x9257), 0x8b);
        // CB 8B 016E
        gbc.setState(0xe91a, 0x8cf3, 0x9a10, 0xcd18, 0x957a, 0x5716, 0x1, 0x1);
        gbc.writeMem(0xe91a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8cf3);
        EXPECT(gbc.pc(), 0xe91c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe91a), 0xcb);
        EXPECT(gbc.readMem(0xe91b), 0x8b);
        // CB 8B 016F
        gbc.setState(0xea77, 0x4d54, 0xfb70, 0xb76d, 0xbab7, 0xbee1, 0x1, 0x1);
        gbc.writeMem(0xea77, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4d54);
        EXPECT(gbc.pc(), 0xea79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea77), 0xcb);
        EXPECT(gbc.readMem(0xea78), 0x8b);
        // CB 8B 0170
        gbc.setState(0x4041, 0xb275, 0x9330, 0x6b78, 0x5b3c, 0xaf51, 0x1, 0x1);
        gbc.writeMem(0x4041, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xb275);
        EXPECT(gbc.pc(), 0x4043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0171
        gbc.setState(0xcfe4, 0x557a, 0x33e0, 0x102f, 0x7b39, 0xa8ec, 0x1, 0x1);
        gbc.writeMem(0xcfe4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x557a);
        EXPECT(gbc.pc(), 0xcfe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfe4), 0xcb);
        EXPECT(gbc.readMem(0xcfe5), 0x8b);
        // CB 8B 0172
        gbc.setState(0x8fc5, 0x6f79, 0x1390, 0xf887, 0xcb67, 0xff85, 0x0, 0x0);
        gbc.writeMem(0x8fc5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6f79);
        EXPECT(gbc.pc(), 0x8fc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fc5), 0xcb);
        EXPECT(gbc.readMem(0x8fc6), 0x8b);
        // CB 8B 0173
        gbc.setState(0x1ec1, 0xd8d, 0x1dd0, 0x986c, 0x4524, 0x1ef4, 0x0, 0x0);
        gbc.writeMem(0x1ec1, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd8d);
        EXPECT(gbc.pc(), 0x1ec3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0174
        gbc.setState(0x769e, 0x5004, 0xa7e0, 0x6eaf, 0xa95f, 0xe692, 0x1, 0x0);
        gbc.writeMem(0x769e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5004);
        EXPECT(gbc.pc(), 0x76a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0175
        gbc.setState(0xcbf2, 0x8a1d, 0x8ee0, 0xdfcd, 0xce95, 0x9763, 0x0, 0x1);
        gbc.writeMem(0xcbf2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8a1d);
        EXPECT(gbc.pc(), 0xcbf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbf2), 0xcb);
        EXPECT(gbc.readMem(0xcbf3), 0x8b);
        // CB 8B 0176
        gbc.setState(0x8983, 0x765, 0xd250, 0xde81, 0xe337, 0x6863, 0x1, 0x0);
        gbc.writeMem(0x8983, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x765);
        EXPECT(gbc.pc(), 0x8985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8983), 0xcb);
        EXPECT(gbc.readMem(0x8984), 0x8b);
        // CB 8B 0177
        gbc.setState(0x1db8, 0x3e1c, 0xf310, 0x1513, 0xbcf6, 0x4770, 0x0, 0x1);
        gbc.writeMem(0x1db8, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3e1c);
        EXPECT(gbc.pc(), 0x1dba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0178
        gbc.setState(0x577a, 0xd72f, 0x1580, 0x2484, 0x216e, 0x91a, 0x1, 0x0);
        gbc.writeMem(0x577a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd72f);
        EXPECT(gbc.pc(), 0x577c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0179
        gbc.setState(0xb100, 0x694a, 0x2aa0, 0xb155, 0xc824, 0x322e, 0x1, 0x1);
        gbc.writeMem(0xb100, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x694a);
        EXPECT(gbc.pc(), 0xb102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb100), 0xcb);
        EXPECT(gbc.readMem(0xb101), 0x8b);
        // CB 8B 017A
        gbc.setState(0xb82a, 0xab29, 0xf6c0, 0x6117, 0x80fd, 0x27ed, 0x1, 0x0);
        gbc.writeMem(0xb82a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xab29);
        EXPECT(gbc.pc(), 0xb82c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb82a), 0xcb);
        EXPECT(gbc.readMem(0xb82b), 0x8b);
        // CB 8B 017B
        gbc.setState(0x5771, 0xf7de, 0x500, 0x476d, 0xe935, 0xbafa, 0x0, 0x0);
        gbc.writeMem(0x5771, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf7de);
        EXPECT(gbc.pc(), 0x5773);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 017C
        gbc.setState(0x2868, 0xfed, 0x5ab0, 0xc59, 0x6672, 0xbdc8, 0x1, 0x1);
        gbc.writeMem(0x2868, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xfed);
        EXPECT(gbc.pc(), 0x286a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 017D
        gbc.setState(0x3d23, 0xac56, 0xf5f0, 0xb366, 0xf4c, 0x3a95, 0x1, 0x1);
        gbc.writeMem(0x3d23, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xac56);
        EXPECT(gbc.pc(), 0x3d25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 017E
        gbc.setState(0x1e1d, 0x20c5, 0x7120, 0x987c, 0x560f, 0xf889, 0x0, 0x0);
        gbc.writeMem(0x1e1d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x20c5);
        EXPECT(gbc.pc(), 0x1e1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 017F
        gbc.setState(0x95b8, 0x5798, 0x3cf0, 0xcd7e, 0x692d, 0xf0b4, 0x0, 0x0);
        gbc.writeMem(0x95b8, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5798);
        EXPECT(gbc.pc(), 0x95ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95b8), 0xcb);
        EXPECT(gbc.readMem(0x95b9), 0x8b);
        // CB 8B 0180
        gbc.setState(0xed38, 0x871b, 0xe780, 0x5e13, 0x60a5, 0x64a1, 0x0, 0x1);
        gbc.writeMem(0xed38, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x871b);
        EXPECT(gbc.pc(), 0xed3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed38), 0xcb);
        EXPECT(gbc.readMem(0xed39), 0x8b);
        // CB 8B 0182
        gbc.setState(0xebef, 0x1467, 0xada0, 0xfb94, 0xf405, 0x32bd, 0x0, 0x0);
        gbc.writeMem(0xebef, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1467);
        EXPECT(gbc.pc(), 0xebf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebef), 0xcb);
        EXPECT(gbc.readMem(0xebf0), 0x8b);
        // CB 8B 0183
        gbc.setState(0x1458, 0x3060, 0x5560, 0x211a, 0xcc7a, 0x24b4, 0x1, 0x0);
        gbc.writeMem(0x1458, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x3060);
        EXPECT(gbc.pc(), 0x145a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0184
        gbc.setState(0x5c65, 0xf11, 0x4190, 0x97a8, 0xf6de, 0x1785, 0x0, 0x0);
        gbc.writeMem(0x5c65, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf11);
        EXPECT(gbc.pc(), 0x5c67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0185
        gbc.setState(0x4f99, 0xa753, 0x7a90, 0xcaaa, 0x86b6, 0xab68, 0x0, 0x1);
        gbc.writeMem(0x4f99, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa753);
        EXPECT(gbc.pc(), 0x4f9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0186
        gbc.setState(0xdfdd, 0xb04b, 0xb2d0, 0x1cb6, 0x2729, 0x877, 0x1, 0x0);
        gbc.writeMem(0xdfdd, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb04b);
        EXPECT(gbc.pc(), 0xdfdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfdd), 0xcb);
        EXPECT(gbc.readMem(0xdfde), 0x8b);
        // CB 8B 0187
        gbc.setState(0x50d2, 0xa602, 0x71e0, 0x9012, 0xbc67, 0xaa4e, 0x1, 0x0);
        gbc.writeMem(0x50d2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa602);
        EXPECT(gbc.pc(), 0x50d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0188
        gbc.setState(0x2f4d, 0xeee0, 0x5b00, 0x5c73, 0xf644, 0x80dd, 0x1, 0x1);
        gbc.writeMem(0x2f4d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xeee0);
        EXPECT(gbc.pc(), 0x2f4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0189
        gbc.setState(0xae40, 0xe133, 0xb600, 0x11f4, 0x6917, 0x6c15, 0x0, 0x0);
        gbc.writeMem(0xae40, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xe133);
        EXPECT(gbc.pc(), 0xae42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae40), 0xcb);
        EXPECT(gbc.readMem(0xae41), 0x8b);
        // CB 8B 018A
        gbc.setState(0x6fd1, 0x858b, 0x58d0, 0xa3dc, 0x102, 0x6efe, 0x0, 0x0);
        gbc.writeMem(0x6fd1, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x858b);
        EXPECT(gbc.pc(), 0x6fd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 018B
        gbc.setState(0x6c3c, 0x97d7, 0xd260, 0x8254, 0x3799, 0x66ee, 0x1, 0x1);
        gbc.writeMem(0x6c3c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x97d7);
        EXPECT(gbc.pc(), 0x6c3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 018C
        gbc.setState(0xafc2, 0x9c40, 0x45e0, 0x1088, 0xf5ab, 0x1fc2, 0x0, 0x0);
        gbc.writeMem(0xafc2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9c40);
        EXPECT(gbc.pc(), 0xafc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc2), 0xcb);
        EXPECT(gbc.readMem(0xafc3), 0x8b);
        // CB 8B 018D
        gbc.setState(0xd39d, 0xa282, 0x5800, 0x4139, 0x41a0, 0x6387, 0x0, 0x0);
        gbc.writeMem(0xd39d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa282);
        EXPECT(gbc.pc(), 0xd39f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd39d), 0xcb);
        EXPECT(gbc.readMem(0xd39e), 0x8b);
        // CB 8B 018E
        gbc.setState(0x6816, 0xe, 0xb060, 0xfde3, 0xaa02, 0xd663, 0x1, 0x1);
        gbc.writeMem(0x6816, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe);
        EXPECT(gbc.pc(), 0x6818);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 018F
        gbc.setState(0x7bb5, 0xf3fb, 0x72e0, 0x4029, 0xab2b, 0x988a, 0x1, 0x1);
        gbc.writeMem(0x7bb5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf3fb);
        EXPECT(gbc.pc(), 0x7bb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0190
        gbc.setState(0x9eb0, 0xbb60, 0x6e50, 0x98aa, 0xc64c, 0xf932, 0x1, 0x1);
        gbc.writeMem(0x9eb0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbb60);
        EXPECT(gbc.pc(), 0x9eb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eb0), 0xcb);
        EXPECT(gbc.readMem(0x9eb1), 0x8b);
        // CB 8B 0191
        gbc.setState(0x20e5, 0x46cf, 0xa9e0, 0x8034, 0x281, 0xf57e, 0x0, 0x0);
        gbc.writeMem(0x20e5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x46cf);
        EXPECT(gbc.pc(), 0x20e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0192
        gbc.setState(0x1c77, 0x519f, 0xe350, 0xf696, 0xc420, 0x39d, 0x0, 0x0);
        gbc.writeMem(0x1c77, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x519f);
        EXPECT(gbc.pc(), 0x1c79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0193
        gbc.setState(0x80e5, 0x689b, 0xab40, 0xc7bf, 0x5adf, 0x248, 0x1, 0x1);
        gbc.writeMem(0x80e5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x689b);
        EXPECT(gbc.pc(), 0x80e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80e5), 0xcb);
        EXPECT(gbc.readMem(0x80e6), 0x8b);
        // CB 8B 0194
        gbc.setState(0xe243, 0x5b56, 0x8b0, 0xec25, 0xea0d, 0x9d3a, 0x1, 0x0);
        gbc.writeMem(0xe243, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5b56);
        EXPECT(gbc.pc(), 0xe245);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe243), 0xcb);
        EXPECT(gbc.readMem(0xe244), 0x8b);
        // CB 8B 0195
        gbc.setState(0xb4b2, 0xde06, 0xc570, 0xf6db, 0x2529, 0x5066, 0x1, 0x1);
        gbc.writeMem(0xb4b2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xde06);
        EXPECT(gbc.pc(), 0xb4b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4b2), 0xcb);
        EXPECT(gbc.readMem(0xb4b3), 0x8b);
        // CB 8B 0196
        gbc.setState(0x9d54, 0x3f22, 0xcd90, 0x455a, 0x864b, 0x607b, 0x0, 0x1);
        gbc.writeMem(0x9d54, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3f22);
        EXPECT(gbc.pc(), 0x9d56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d54), 0xcb);
        EXPECT(gbc.readMem(0x9d55), 0x8b);
        // CB 8B 0197
        gbc.setState(0xbd36, 0x6ff3, 0x2050, 0xbd0d, 0xf926, 0x841a, 0x1, 0x1);
        gbc.writeMem(0xbd36, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6ff3);
        EXPECT(gbc.pc(), 0xbd38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd36), 0xcb);
        EXPECT(gbc.readMem(0xbd37), 0x8b);
        // CB 8B 0198
        gbc.setState(0x1c16, 0xb627, 0x2100, 0x94f0, 0x94e4, 0xe5ab, 0x0, 0x1);
        gbc.writeMem(0x1c16, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb627);
        EXPECT(gbc.pc(), 0x1c18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0199
        gbc.setState(0x34e3, 0x5e85, 0x1d20, 0xfc95, 0x5fae, 0x439a, 0x1, 0x1);
        gbc.writeMem(0x34e3, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5e85);
        EXPECT(gbc.pc(), 0x34e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 019B
        gbc.setState(0x3365, 0x1df2, 0xfe50, 0x2ae6, 0x13ce, 0xb6, 0x1, 0x0);
        gbc.writeMem(0x3365, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1df2);
        EXPECT(gbc.pc(), 0x3367);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 019C
        gbc.setState(0x8011, 0x4f03, 0x4a80, 0x4430, 0x68f, 0x1d22, 0x0, 0x1);
        gbc.writeMem(0x8011, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4f03);
        EXPECT(gbc.pc(), 0x8013);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8011), 0xcb);
        EXPECT(gbc.readMem(0x8012), 0x8b);
        // CB 8B 019D
        gbc.setState(0x1b3c, 0xb024, 0x4120, 0xdc1b, 0xf65a, 0xcfea, 0x1, 0x0);
        gbc.writeMem(0x1b3c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb024);
        EXPECT(gbc.pc(), 0x1b3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 019E
        gbc.setState(0xac63, 0x53b9, 0x70, 0xdb37, 0x8890, 0x325c, 0x0, 0x0);
        gbc.writeMem(0xac63, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x53b9);
        EXPECT(gbc.pc(), 0xac65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac63), 0xcb);
        EXPECT(gbc.readMem(0xac64), 0x8b);
        // CB 8B 019F
        gbc.setState(0x9546, 0x3a97, 0xee0, 0x86af, 0x5449, 0x9f7a, 0x1, 0x0);
        gbc.writeMem(0x9546, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3a97);
        EXPECT(gbc.pc(), 0x9548);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9546), 0xcb);
        EXPECT(gbc.readMem(0x9547), 0x8b);
        // CB 8B 01A0
        gbc.setState(0x689c, 0xb80d, 0x3240, 0x9e9f, 0xb8a0, 0x64ec, 0x1, 0x0);
        gbc.writeMem(0x689c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb80d);
        EXPECT(gbc.pc(), 0x689e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01A1
        gbc.setState(0x2c78, 0xdc95, 0x6fa0, 0x27cf, 0x8b10, 0x3f49, 0x1, 0x0);
        gbc.writeMem(0x2c78, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xdc95);
        EXPECT(gbc.pc(), 0x2c7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01A2
        gbc.setState(0x4132, 0x5fe1, 0xafc0, 0xb268, 0xa616, 0x9d12, 0x0, 0x0);
        gbc.writeMem(0x4132, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5fe1);
        EXPECT(gbc.pc(), 0x4134);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01A3
        gbc.setState(0xaf86, 0xd973, 0xb770, 0x5e2b, 0xffab, 0xa0eb, 0x1, 0x0);
        gbc.writeMem(0xaf86, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd973);
        EXPECT(gbc.pc(), 0xaf88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf86), 0xcb);
        EXPECT(gbc.readMem(0xaf87), 0x8b);
        // CB 8B 01A4
        gbc.setState(0x4612, 0x99a2, 0xde60, 0xf807, 0xfb65, 0xaa68, 0x0, 0x1);
        gbc.writeMem(0x4612, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x99a2);
        EXPECT(gbc.pc(), 0x4614);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01A5
        gbc.setState(0x64bb, 0xad75, 0xda20, 0xa2f, 0x4e1a, 0x2c47, 0x1, 0x0);
        gbc.writeMem(0x64bb, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xad75);
        EXPECT(gbc.pc(), 0x64bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01A6
        gbc.setState(0x61ae, 0x5692, 0x7a70, 0xc502, 0x50a9, 0x444f, 0x1, 0x1);
        gbc.writeMem(0x61ae, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x5692);
        EXPECT(gbc.pc(), 0x61b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 01A7
        gbc.setState(0x9ea4, 0xc8f3, 0x9a50, 0x5425, 0xe09d, 0x1686, 0x1, 0x1);
        gbc.writeMem(0x9ea4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc8f3);
        EXPECT(gbc.pc(), 0x9ea6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ea4), 0xcb);
        EXPECT(gbc.readMem(0x9ea5), 0x8b);
        // CB 8B 01A9
        gbc.setState(0x7047, 0x6bdb, 0x3690, 0xf26a, 0x71e8, 0x3fd7, 0x1, 0x1);
        gbc.writeMem(0x7047, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6bdb);
        EXPECT(gbc.pc(), 0x7049);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 01AA
        gbc.setState(0xb226, 0x49a8, 0xf320, 0xf733, 0xb23e, 0xec72, 0x0, 0x0);
        gbc.writeMem(0xb226, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x49a8);
        EXPECT(gbc.pc(), 0xb228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb226), 0xcb);
        EXPECT(gbc.readMem(0xb227), 0x8b);
        // CB 8B 01AB
        gbc.setState(0xe1d9, 0x4b7d, 0x6590, 0xfc98, 0x1ec8, 0x6901, 0x1, 0x0);
        gbc.writeMem(0xe1d9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4b7d);
        EXPECT(gbc.pc(), 0xe1db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1d9), 0xcb);
        EXPECT(gbc.readMem(0xe1da), 0x8b);
        // CB 8B 01AC
        gbc.setState(0x3df, 0x7e1d, 0xd8e0, 0x120a, 0xb7c6, 0x9aca, 0x1, 0x1);
        gbc.writeMem(0x3df, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7e1d);
        EXPECT(gbc.pc(), 0x3e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01AD
        gbc.setState(0x2963, 0x1a14, 0x8760, 0xd5ff, 0xdccf, 0x3d00, 0x0, 0x0);
        gbc.writeMem(0x2963, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x1a14);
        EXPECT(gbc.pc(), 0x2965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01AE
        gbc.setState(0x8fd7, 0x2335, 0x9de0, 0x91b6, 0x296f, 0xbaa, 0x0, 0x1);
        gbc.writeMem(0x8fd7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2335);
        EXPECT(gbc.pc(), 0x8fd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fd7), 0xcb);
        EXPECT(gbc.readMem(0x8fd8), 0x8b);
        // CB 8B 01AF
        gbc.setState(0x4133, 0x73d2, 0x3c10, 0x6203, 0x9874, 0x3893, 0x0, 0x0);
        gbc.writeMem(0x4133, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x73d2);
        EXPECT(gbc.pc(), 0x4135);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 01B0
        gbc.setState(0xec52, 0x28e, 0xc780, 0xa252, 0xc40, 0xf253, 0x0, 0x0);
        gbc.writeMem(0xec52, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x28e);
        EXPECT(gbc.pc(), 0xec54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec52), 0xcb);
        EXPECT(gbc.readMem(0xec53), 0x8b);
        // CB 8B 01B1
        gbc.setState(0x42fb, 0xa8cc, 0x3220, 0x6a73, 0x5a7d, 0x47d6, 0x0, 0x1);
        gbc.writeMem(0x42fb, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa8cc);
        EXPECT(gbc.pc(), 0x42fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01B4
        gbc.setState(0x34b5, 0x82db, 0xfaa0, 0x16ce, 0x95f, 0x6619, 0x1, 0x1);
        gbc.writeMem(0x34b5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x82db);
        EXPECT(gbc.pc(), 0x34b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01B5
        gbc.setState(0xa3f4, 0xa06, 0x9ee0, 0xd8ca, 0xb377, 0x8022, 0x1, 0x1);
        gbc.writeMem(0xa3f4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa06);
        EXPECT(gbc.pc(), 0xa3f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3f4), 0xcb);
        EXPECT(gbc.readMem(0xa3f5), 0x8b);
        // CB 8B 01B6
        gbc.setState(0xd982, 0x2acc, 0xfc90, 0x35fc, 0x45db, 0x8c1c, 0x0, 0x1);
        gbc.writeMem(0xd982, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2acc);
        EXPECT(gbc.pc(), 0xd984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd982), 0xcb);
        EXPECT(gbc.readMem(0xd983), 0x8b);
        // CB 8B 01B7
        gbc.setState(0xb1f9, 0x7787, 0x9280, 0x4bf1, 0x10cd, 0xfa67, 0x1, 0x1);
        gbc.writeMem(0xb1f9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7787);
        EXPECT(gbc.pc(), 0xb1fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1f9), 0xcb);
        EXPECT(gbc.readMem(0xb1fa), 0x8b);
        // CB 8B 01B8
        gbc.setState(0x43c8, 0x50c0, 0x4e30, 0x1f8a, 0xf77b, 0x8e99, 0x0, 0x0);
        gbc.writeMem(0x43c8, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x50c0);
        EXPECT(gbc.pc(), 0x43ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 01B9
        gbc.setState(0xa7d9, 0xabd0, 0x8710, 0x7269, 0xb325, 0x35b2, 0x1, 0x1);
        gbc.writeMem(0xa7d9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xabd0);
        EXPECT(gbc.pc(), 0xa7db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7d9), 0xcb);
        EXPECT(gbc.readMem(0xa7da), 0x8b);
        // CB 8B 01BA
        gbc.setState(0xbc03, 0x7985, 0x1d10, 0x5838, 0xaf6e, 0x2d4e, 0x0, 0x0);
        gbc.writeMem(0xbc03, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7985);
        EXPECT(gbc.pc(), 0xbc05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc03), 0xcb);
        EXPECT(gbc.readMem(0xbc04), 0x8b);
        // CB 8B 01BB
        gbc.setState(0xe746, 0x273d, 0x2b60, 0xa3e3, 0x7ddf, 0x5e05, 0x1, 0x0);
        gbc.writeMem(0xe746, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x273d);
        EXPECT(gbc.pc(), 0xe748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe746), 0xcb);
        EXPECT(gbc.readMem(0xe747), 0x8b);
        // CB 8B 01BC
        gbc.setState(0x7310, 0xb0f3, 0x8780, 0xf908, 0xa5e5, 0x39fa, 0x0, 0x0);
        gbc.writeMem(0x7310, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb0f3);
        EXPECT(gbc.pc(), 0x7312);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01BD
        gbc.setState(0x7408, 0x856, 0xebc0, 0x947, 0x506c, 0x54df, 0x1, 0x0);
        gbc.writeMem(0x7408, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x856);
        EXPECT(gbc.pc(), 0x740a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01C0
        gbc.setState(0x6fca, 0x3deb, 0x9ef0, 0x8c61, 0xb70, 0xcf9e, 0x1, 0x1);
        gbc.writeMem(0x6fca, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3deb);
        EXPECT(gbc.pc(), 0x6fcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 01C1
        gbc.setState(0x4938, 0x70b5, 0x4960, 0x98fd, 0x9999, 0xf78f, 0x0, 0x0);
        gbc.writeMem(0x4938, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x70b5);
        EXPECT(gbc.pc(), 0x493a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01C2
        gbc.setState(0x42bc, 0x76ff, 0xd810, 0x385, 0x1692, 0x3b, 0x0, 0x0);
        gbc.writeMem(0x42bc, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x76ff);
        EXPECT(gbc.pc(), 0x42be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 01C3
        gbc.setState(0x1c58, 0x2175, 0x91b0, 0x913a, 0x3871, 0xd43c, 0x1, 0x1);
        gbc.writeMem(0x1c58, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2175);
        EXPECT(gbc.pc(), 0x1c5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 01C4
        gbc.setState(0x6cda, 0x7182, 0x4320, 0x6d53, 0x1409, 0x66b5, 0x1, 0x0);
        gbc.writeMem(0x6cda, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x7182);
        EXPECT(gbc.pc(), 0x6cdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01C5
        gbc.setState(0xd951, 0x2d30, 0x41d0, 0x784, 0x9505, 0x6103, 0x1, 0x1);
        gbc.writeMem(0xd951, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2d30);
        EXPECT(gbc.pc(), 0xd953);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd951), 0xcb);
        EXPECT(gbc.readMem(0xd952), 0x8b);
        // CB 8B 01C6
        gbc.setState(0xa080, 0x5bff, 0xdd30, 0x48ec, 0x1d59, 0x1ed0, 0x0, 0x0);
        gbc.writeMem(0xa080, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5bff);
        EXPECT(gbc.pc(), 0xa082);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa080), 0xcb);
        EXPECT(gbc.readMem(0xa081), 0x8b);
        // CB 8B 01C7
        gbc.setState(0x95ee, 0x8f9c, 0xfc90, 0x4cde, 0x1226, 0x2674, 0x0, 0x1);
        gbc.writeMem(0x95ee, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8f9c);
        EXPECT(gbc.pc(), 0x95f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ee), 0xcb);
        EXPECT(gbc.readMem(0x95ef), 0x8b);
        // CB 8B 01C8
        gbc.setState(0x4e25, 0xe5d4, 0x3460, 0xe646, 0xe6b1, 0x4aed, 0x1, 0x0);
        gbc.writeMem(0x4e25, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe5d4);
        EXPECT(gbc.pc(), 0x4e27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01C9
        gbc.setState(0x46bc, 0x9495, 0x29c0, 0xc2c3, 0xd3b4, 0xb618, 0x0, 0x0);
        gbc.writeMem(0x46bc, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9495);
        EXPECT(gbc.pc(), 0x46be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01CB
        gbc.setState(0x889, 0xde95, 0xf9c0, 0xac67, 0xdd19, 0x1b4a, 0x1, 0x0);
        gbc.writeMem(0x889, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xde95);
        EXPECT(gbc.pc(), 0x88b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01CC
        gbc.setState(0xb725, 0x3c79, 0x2a60, 0x11a6, 0x4494, 0xfe5d, 0x0, 0x0);
        gbc.writeMem(0xb725, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3c79);
        EXPECT(gbc.pc(), 0xb727);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb725), 0xcb);
        EXPECT(gbc.readMem(0xb726), 0x8b);
        // CB 8B 01CD
        gbc.setState(0x1388, 0x4f3, 0xf170, 0x6b32, 0xc7a3, 0xb8ed, 0x0, 0x0);
        gbc.writeMem(0x1388, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x4f3);
        EXPECT(gbc.pc(), 0x138a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 01CE
        gbc.setState(0x4fc5, 0x48e0, 0x6bc0, 0xf68f, 0x2f7a, 0x4e6d, 0x0, 0x1);
        gbc.writeMem(0x4fc5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x48e0);
        EXPECT(gbc.pc(), 0x4fc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01CF
        gbc.setState(0xade2, 0xc121, 0xb5e0, 0xed78, 0xe6bf, 0xfeb8, 0x0, 0x1);
        gbc.writeMem(0xade2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc121);
        EXPECT(gbc.pc(), 0xade4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xade2), 0xcb);
        EXPECT(gbc.readMem(0xade3), 0x8b);
        // CB 8B 01D0
        gbc.setState(0xbb2c, 0x85cc, 0x2830, 0x3666, 0x6ce9, 0xf39d, 0x0, 0x0);
        gbc.writeMem(0xbb2c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x85cc);
        EXPECT(gbc.pc(), 0xbb2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb2c), 0xcb);
        EXPECT(gbc.readMem(0xbb2d), 0x8b);
        // CB 8B 01D1
        gbc.setState(0x9d4c, 0xf344, 0xef40, 0xe416, 0x738e, 0x646, 0x0, 0x0);
        gbc.writeMem(0x9d4c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf344);
        EXPECT(gbc.pc(), 0x9d4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d4c), 0xcb);
        EXPECT(gbc.readMem(0x9d4d), 0x8b);
        // CB 8B 01D2
        gbc.setState(0x29a8, 0x9766, 0x90d0, 0x8406, 0x154a, 0x8371, 0x1, 0x0);
        gbc.writeMem(0x29a8, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9766);
        EXPECT(gbc.pc(), 0x29aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 01D3
        gbc.setState(0xad09, 0x596, 0x7ea0, 0x18b5, 0x5ce7, 0xa371, 0x1, 0x0);
        gbc.writeMem(0xad09, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x596);
        EXPECT(gbc.pc(), 0xad0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad09), 0xcb);
        EXPECT(gbc.readMem(0xad0a), 0x8b);
        // CB 8B 01D4
        gbc.setState(0xae8e, 0xedb8, 0x5bb0, 0x5cea, 0x9a49, 0x5377, 0x1, 0x1);
        gbc.writeMem(0xae8e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xedb8);
        EXPECT(gbc.pc(), 0xae90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae8e), 0xcb);
        EXPECT(gbc.readMem(0xae8f), 0x8b);
        // CB 8B 01D5
        gbc.setState(0x3940, 0x432d, 0x3440, 0x6c66, 0x6687, 0xfffd, 0x0, 0x0);
        gbc.writeMem(0x3940, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x432d);
        EXPECT(gbc.pc(), 0x3942);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01D6
        gbc.setState(0x2081, 0xcd13, 0xc9a0, 0x7341, 0x7982, 0x18e4, 0x1, 0x0);
        gbc.writeMem(0x2081, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xcd13);
        EXPECT(gbc.pc(), 0x2083);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01D7
        gbc.setState(0x3d14, 0x29a3, 0x41c0, 0x82b9, 0xce78, 0xf3c7, 0x0, 0x0);
        gbc.writeMem(0x3d14, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x29a3);
        EXPECT(gbc.pc(), 0x3d16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01D8
        gbc.setState(0x24f2, 0x79c6, 0x1ad0, 0xb36f, 0x9267, 0x8e40, 0x0, 0x0);
        gbc.writeMem(0x24f2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x79c6);
        EXPECT(gbc.pc(), 0x24f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 01D9
        gbc.setState(0xa4fe, 0xb3ac, 0x1d30, 0x371a, 0x2b24, 0xb777, 0x1, 0x0);
        gbc.writeMem(0xa4fe, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb3ac);
        EXPECT(gbc.pc(), 0xa500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4fe), 0xcb);
        EXPECT(gbc.readMem(0xa4ff), 0x8b);
        // CB 8B 01DA
        gbc.setState(0x8352, 0x5c19, 0x5f40, 0xcb36, 0x95a6, 0x5386, 0x0, 0x0);
        gbc.writeMem(0x8352, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5c19);
        EXPECT(gbc.pc(), 0x8354);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8352), 0xcb);
        EXPECT(gbc.readMem(0x8353), 0x8b);
        // CB 8B 01DB
        gbc.setState(0xc46a, 0x712b, 0x9f0, 0x3aba, 0x1e1f, 0xcdb3, 0x1, 0x0);
        gbc.writeMem(0xc46a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x712b);
        EXPECT(gbc.pc(), 0xc46c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc46a), 0xcb);
        EXPECT(gbc.readMem(0xc46b), 0x8b);
        // CB 8B 01DC
        gbc.setState(0x64b0, 0xd5fb, 0x79a0, 0xa18e, 0x5ea5, 0xda79, 0x1, 0x1);
        gbc.writeMem(0x64b0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd5fb);
        EXPECT(gbc.pc(), 0x64b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01DD
        gbc.setState(0x2f82, 0xe428, 0xcf10, 0xff6f, 0x2322, 0xf9ab, 0x1, 0x0);
        gbc.writeMem(0x2f82, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe428);
        EXPECT(gbc.pc(), 0x2f84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 01DE
        gbc.setState(0x8720, 0x881b, 0x2b20, 0xdade, 0x8090, 0xb429, 0x0, 0x1);
        gbc.writeMem(0x8720, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x881b);
        EXPECT(gbc.pc(), 0x8722);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8720), 0xcb);
        EXPECT(gbc.readMem(0x8721), 0x8b);
        // CB 8B 01DF
        gbc.setState(0xc2bd, 0x2267, 0xb7b0, 0x9568, 0x84a6, 0xd621, 0x0, 0x0);
        gbc.writeMem(0xc2bd, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2267);
        EXPECT(gbc.pc(), 0xc2bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2bd), 0xcb);
        EXPECT(gbc.readMem(0xc2be), 0x8b);
        // CB 8B 01E0
        gbc.setState(0xbbee, 0xcede, 0xc8d0, 0x79f2, 0xa6e9, 0x1352, 0x1, 0x0);
        gbc.writeMem(0xbbee, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xcede);
        EXPECT(gbc.pc(), 0xbbf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbee), 0xcb);
        EXPECT(gbc.readMem(0xbbef), 0x8b);
        // CB 8B 01E1
        gbc.setState(0x18db, 0x772c, 0x4600, 0x2695, 0x33c7, 0xb3f3, 0x1, 0x1);
        gbc.writeMem(0x18db, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x772c);
        EXPECT(gbc.pc(), 0x18dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01E2
        gbc.setState(0x98c0, 0x248c, 0xd2d0, 0x2407, 0xdd15, 0x98b1, 0x0, 0x0);
        gbc.writeMem(0x98c0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x248c);
        EXPECT(gbc.pc(), 0x98c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98c0), 0xcb);
        EXPECT(gbc.readMem(0x98c1), 0x8b);
        // CB 8B 01E3
        gbc.setState(0xac62, 0x489, 0x66e0, 0xedf2, 0xf7d9, 0x9ade, 0x0, 0x0);
        gbc.writeMem(0xac62, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x489);
        EXPECT(gbc.pc(), 0xac64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac62), 0xcb);
        EXPECT(gbc.readMem(0xac63), 0x8b);
        // CB 8B 01E4
        gbc.setState(0x4849, 0x7da4, 0x9030, 0xd0fd, 0xc443, 0x242b, 0x0, 0x1);
        gbc.writeMem(0x4849, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x7da4);
        EXPECT(gbc.pc(), 0x484b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 01E5
        gbc.setState(0x7026, 0x1826, 0x9910, 0x8b9a, 0x51ab, 0xe4be, 0x0, 0x0);
        gbc.writeMem(0x7026, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1826);
        EXPECT(gbc.pc(), 0x7028);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 01E6
        gbc.setState(0xaee2, 0x1856, 0xdea0, 0x5e5b, 0xd4d, 0xc95d, 0x0, 0x1);
        gbc.writeMem(0xaee2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x1856);
        EXPECT(gbc.pc(), 0xaee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee2), 0xcb);
        EXPECT(gbc.readMem(0xaee3), 0x8b);
        // CB 8B 01E7
        gbc.setState(0x7373, 0x5246, 0x1020, 0x3cc3, 0x2280, 0x4ad2, 0x0, 0x1);
        gbc.writeMem(0x7373, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5246);
        EXPECT(gbc.pc(), 0x7375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01E8
        gbc.setState(0x8a7d, 0x99f, 0x4190, 0xb450, 0x694b, 0x4920, 0x1, 0x0);
        gbc.writeMem(0x8a7d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x99f);
        EXPECT(gbc.pc(), 0x8a7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a7d), 0xcb);
        EXPECT(gbc.readMem(0x8a7e), 0x8b);
        // CB 8B 01EA
        gbc.setState(0xc54, 0x5165, 0x3860, 0xd7b7, 0xddac, 0xccc8, 0x1, 0x1);
        gbc.writeMem(0xc54, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5165);
        EXPECT(gbc.pc(), 0xc56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01EB
        gbc.setState(0xd720, 0x5e54, 0x3310, 0x58d3, 0xae77, 0x278d, 0x1, 0x1);
        gbc.writeMem(0xd720, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5e54);
        EXPECT(gbc.pc(), 0xd722);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd720), 0xcb);
        EXPECT(gbc.readMem(0xd721), 0x8b);
        // CB 8B 01EC
        gbc.setState(0x7e62, 0x2e2, 0x3cd0, 0x290d, 0x5cff, 0x2da0, 0x0, 0x1);
        gbc.writeMem(0x7e62, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2e2);
        EXPECT(gbc.pc(), 0x7e64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 01ED
        gbc.setState(0xd7ad, 0x4ccb, 0xc0b0, 0x44e1, 0xb31b, 0x2191, 0x0, 0x1);
        gbc.writeMem(0xd7ad, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4ccb);
        EXPECT(gbc.pc(), 0xd7af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ad), 0xcb);
        EXPECT(gbc.readMem(0xd7ae), 0x8b);
        // CB 8B 01EE
        gbc.setState(0x8abb, 0xdafc, 0x8b00, 0xda3d, 0x436e, 0xf1dc, 0x0, 0x0);
        gbc.writeMem(0x8abb, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xdafc);
        EXPECT(gbc.pc(), 0x8abd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8abb), 0xcb);
        EXPECT(gbc.readMem(0x8abc), 0x8b);
        // CB 8B 01EF
        gbc.setState(0xcf0e, 0x4381, 0x89c0, 0x22c9, 0xad02, 0x5eb9, 0x1, 0x0);
        gbc.writeMem(0xcf0e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x4381);
        EXPECT(gbc.pc(), 0xcf10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf0e), 0xcb);
        EXPECT(gbc.readMem(0xcf0f), 0x8b);
        // CB 8B 01F0
        gbc.setState(0xba7b, 0xc115, 0xec60, 0x83da, 0xd4f9, 0x7154, 0x1, 0x0);
        gbc.writeMem(0xba7b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc115);
        EXPECT(gbc.pc(), 0xba7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba7b), 0xcb);
        EXPECT(gbc.readMem(0xba7c), 0x8b);
        // CB 8B 01F1
        gbc.setState(0xbe0e, 0xbeab, 0x4860, 0xff81, 0xfe20, 0xc65e, 0x0, 0x1);
        gbc.writeMem(0xbe0e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xbeab);
        EXPECT(gbc.pc(), 0xbe10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe0e), 0xcb);
        EXPECT(gbc.readMem(0xbe0f), 0x8b);
        // CB 8B 01F2
        gbc.setState(0xabdc, 0xc0f1, 0x37c0, 0x59f8, 0x63f8, 0x8070, 0x1, 0x0);
        gbc.writeMem(0xabdc, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc0f1);
        EXPECT(gbc.pc(), 0xabde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabdc), 0xcb);
        EXPECT(gbc.readMem(0xabdd), 0x8b);
        // CB 8B 01F3
        gbc.setState(0xe9dc, 0x8b14, 0x8be0, 0x74a0, 0xed29, 0x75d6, 0x0, 0x1);
        gbc.writeMem(0xe9dc, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8b14);
        EXPECT(gbc.pc(), 0xe9de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9dc), 0xcb);
        EXPECT(gbc.readMem(0xe9dd), 0x8b);
        // CB 8B 01F4
        gbc.setState(0x1a65, 0x898, 0xfaa0, 0xae77, 0x7499, 0x89e7, 0x0, 0x0);
        gbc.writeMem(0x1a65, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x898);
        EXPECT(gbc.pc(), 0x1a67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 01F5
        gbc.setState(0x838d, 0xe315, 0x81f0, 0x2df8, 0xc8bd, 0xc687, 0x0, 0x1);
        gbc.writeMem(0x838d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe315);
        EXPECT(gbc.pc(), 0x838f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x838d), 0xcb);
        EXPECT(gbc.readMem(0x838e), 0x8b);
        // CB 8B 01F6
        gbc.setState(0xd88, 0x47a2, 0x76f0, 0xcf5e, 0x6d71, 0x1a3a, 0x0, 0x1);
        gbc.writeMem(0xd88, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x47a2);
        EXPECT(gbc.pc(), 0xd8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 01F7
        gbc.setState(0xba8a, 0xa428, 0xe210, 0x53c3, 0xd508, 0xbb89, 0x0, 0x0);
        gbc.writeMem(0xba8a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa428);
        EXPECT(gbc.pc(), 0xba8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba8a), 0xcb);
        EXPECT(gbc.readMem(0xba8b), 0x8b);
        // CB 8B 01F8
        gbc.setState(0xc345, 0x3fe2, 0x3bb0, 0x2ad, 0x17ec, 0x8e18, 0x1, 0x1);
        gbc.writeMem(0xc345, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3fe2);
        EXPECT(gbc.pc(), 0xc347);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc345), 0xcb);
        EXPECT(gbc.readMem(0xc346), 0x8b);
        // CB 8B 01F9
        gbc.setState(0xd6f0, 0xfdd8, 0xbc30, 0x287e, 0xaa9c, 0x767, 0x0, 0x0);
        gbc.writeMem(0xd6f0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xfdd8);
        EXPECT(gbc.pc(), 0xd6f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6f0), 0xcb);
        EXPECT(gbc.readMem(0xd6f1), 0x8b);
        // CB 8B 01FA
        gbc.setState(0xa6bd, 0x1a27, 0x69a0, 0xfd8f, 0x8bfc, 0x4258, 0x1, 0x1);
        gbc.writeMem(0xa6bd, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1a27);
        EXPECT(gbc.pc(), 0xa6bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6bd), 0xcb);
        EXPECT(gbc.readMem(0xa6be), 0x8b);
        // CB 8B 01FB
        gbc.setState(0xd52, 0x22e3, 0x6d90, 0x8be1, 0x8b5, 0x4338, 0x0, 0x1);
        gbc.writeMem(0xd52, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x22e3);
        EXPECT(gbc.pc(), 0xd54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 01FC
        gbc.setState(0x4cb2, 0xf95e, 0xe7d0, 0xcc6, 0xe72d, 0xc934, 0x1, 0x1);
        gbc.writeMem(0x4cb2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf95e);
        EXPECT(gbc.pc(), 0x4cb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 01FD
        gbc.setState(0xa67b, 0xf583, 0x6910, 0x14fa, 0x5c2, 0xd4cc, 0x1, 0x1);
        gbc.writeMem(0xa67b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf583);
        EXPECT(gbc.pc(), 0xa67d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa67b), 0xcb);
        EXPECT(gbc.readMem(0xa67c), 0x8b);
        // CB 8B 01FE
        gbc.setState(0x9fc1, 0x9b11, 0xf3e0, 0xb1e0, 0x3481, 0x68ec, 0x1, 0x1);
        gbc.writeMem(0x9fc1, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9b11);
        EXPECT(gbc.pc(), 0x9fc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fc1), 0xcb);
        EXPECT(gbc.readMem(0x9fc2), 0x8b);
        // CB 8B 01FF
        gbc.setState(0xcc95, 0x71f0, 0x4dd0, 0x8e52, 0xc726, 0x2b69, 0x0, 0x0);
        gbc.writeMem(0xcc95, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x71f0);
        EXPECT(gbc.pc(), 0xcc97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc95), 0xcb);
        EXPECT(gbc.readMem(0xcc96), 0x8b);
        // CB 8B 0200
        gbc.setState(0x9b69, 0x3420, 0x5310, 0x7fd6, 0xf87d, 0xe74e, 0x1, 0x1);
        gbc.writeMem(0x9b69, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3420);
        EXPECT(gbc.pc(), 0x9b6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b69), 0xcb);
        EXPECT(gbc.readMem(0x9b6a), 0x8b);
        // CB 8B 0201
        gbc.setState(0x65ef, 0xa038, 0x4c50, 0xa0c8, 0x1478, 0xec37, 0x1, 0x0);
        gbc.writeMem(0x65ef, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xa038);
        EXPECT(gbc.pc(), 0x65f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0202
        gbc.setState(0xcc7, 0xb86a, 0xd9c0, 0xa070, 0x218e, 0x1540, 0x0, 0x1);
        gbc.writeMem(0xcc7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb86a);
        EXPECT(gbc.pc(), 0xcc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0203
        gbc.setState(0x10b9, 0xbdbb, 0xc710, 0x71fa, 0x4f52, 0x693e, 0x0, 0x1);
        gbc.writeMem(0x10b9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xbdbb);
        EXPECT(gbc.pc(), 0x10bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0204
        gbc.setState(0x72f6, 0x6e74, 0xa920, 0xf1a5, 0x4e1a, 0x19e, 0x0, 0x0);
        gbc.writeMem(0x72f6, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6e74);
        EXPECT(gbc.pc(), 0x72f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0206
        gbc.setState(0x91f9, 0x5e68, 0xb6f0, 0x8df8, 0x8f01, 0xde4e, 0x0, 0x0);
        gbc.writeMem(0x91f9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5e68);
        EXPECT(gbc.pc(), 0x91fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91f9), 0xcb);
        EXPECT(gbc.readMem(0x91fa), 0x8b);
        // CB 8B 0207
        gbc.setState(0xad9c, 0xd513, 0xf460, 0xd736, 0xd6fb, 0xf24f, 0x0, 0x1);
        gbc.writeMem(0xad9c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd513);
        EXPECT(gbc.pc(), 0xad9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad9c), 0xcb);
        EXPECT(gbc.readMem(0xad9d), 0x8b);
        // CB 8B 0208
        gbc.setState(0xebdc, 0xbe0a, 0x70d0, 0xa502, 0xcf7c, 0x4928, 0x0, 0x1);
        gbc.writeMem(0xebdc, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbe0a);
        EXPECT(gbc.pc(), 0xebde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebdc), 0xcb);
        EXPECT(gbc.readMem(0xebdd), 0x8b);
        // CB 8B 0209
        gbc.setState(0xb4e0, 0x2d1f, 0xed0, 0x9a12, 0x9b61, 0xf372, 0x1, 0x1);
        gbc.writeMem(0xb4e0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2d1f);
        EXPECT(gbc.pc(), 0xb4e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4e0), 0xcb);
        EXPECT(gbc.readMem(0xb4e1), 0x8b);
        // CB 8B 020A
        gbc.setState(0x2269, 0xac51, 0x5460, 0x1ef1, 0x7e4e, 0x6d2b, 0x0, 0x1);
        gbc.writeMem(0x2269, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xac51);
        EXPECT(gbc.pc(), 0x226b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 020B
        gbc.setState(0x45f9, 0x48da, 0x1960, 0x474c, 0x95fa, 0xba20, 0x0, 0x0);
        gbc.writeMem(0x45f9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x48da);
        EXPECT(gbc.pc(), 0x45fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 020C
        gbc.setState(0x246e, 0x7305, 0x4240, 0xd13d, 0xc131, 0xa448, 0x1, 0x1);
        gbc.writeMem(0x246e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7305);
        EXPECT(gbc.pc(), 0x2470);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 020D
        gbc.setState(0x6262, 0x9642, 0xad50, 0xfa54, 0x9bdd, 0x86b, 0x0, 0x1);
        gbc.writeMem(0x6262, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9642);
        EXPECT(gbc.pc(), 0x6264);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 020E
        gbc.setState(0x6c3a, 0xa645, 0x4760, 0xb54e, 0x9a5e, 0x3bae, 0x0, 0x1);
        gbc.writeMem(0x6c3a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa645);
        EXPECT(gbc.pc(), 0x6c3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 020F
        gbc.setState(0x4d5, 0x5664, 0xb150, 0x4f10, 0xd41c, 0xaba, 0x0, 0x1);
        gbc.writeMem(0x4d5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5664);
        EXPECT(gbc.pc(), 0x4d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0210
        gbc.setState(0x9289, 0xd70c, 0xff50, 0xaa94, 0x8d45, 0x2962, 0x1, 0x1);
        gbc.writeMem(0x9289, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd70c);
        EXPECT(gbc.pc(), 0x928b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9289), 0xcb);
        EXPECT(gbc.readMem(0x928a), 0x8b);
        // CB 8B 0211
        gbc.setState(0x8b91, 0xbada, 0x69b0, 0x6288, 0x76c2, 0xabe8, 0x0, 0x1);
        gbc.writeMem(0x8b91, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xbada);
        EXPECT(gbc.pc(), 0x8b93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b91), 0xcb);
        EXPECT(gbc.readMem(0x8b92), 0x8b);
        // CB 8B 0212
        gbc.setState(0x3f01, 0xa593, 0x1b00, 0xd899, 0xc206, 0x729e, 0x0, 0x0);
        gbc.writeMem(0x3f01, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa593);
        EXPECT(gbc.pc(), 0x3f03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0213
        gbc.setState(0x185d, 0x26a8, 0xee30, 0xdb36, 0x938b, 0x80f8, 0x0, 0x1);
        gbc.writeMem(0x185d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x26a8);
        EXPECT(gbc.pc(), 0x185f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0214
        gbc.setState(0x42b0, 0x72d5, 0x8bb0, 0xc86c, 0x5cd3, 0xf706, 0x1, 0x0);
        gbc.writeMem(0x42b0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x72d5);
        EXPECT(gbc.pc(), 0x42b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0215
        gbc.setState(0x19, 0xc820, 0x5260, 0xbbf9, 0xafaf, 0x234c, 0x1, 0x1);
        gbc.writeMem(0x19, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc820);
        EXPECT(gbc.pc(), 0x1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0216
        gbc.setState(0xbad, 0xb2b6, 0xf780, 0xc1cf, 0xb7e8, 0x5135, 0x0, 0x0);
        gbc.writeMem(0xbad, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb2b6);
        EXPECT(gbc.pc(), 0xbaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0217
        gbc.setState(0x48e9, 0x56c, 0x5f00, 0xd546, 0x9c6b, 0xec6c, 0x1, 0x1);
        gbc.writeMem(0x48e9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x56c);
        EXPECT(gbc.pc(), 0x48eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0218
        gbc.setState(0xde24, 0x8ffa, 0xe50, 0x820f, 0x8592, 0xd64a, 0x0, 0x0);
        gbc.writeMem(0xde24, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8ffa);
        EXPECT(gbc.pc(), 0xde26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde24), 0xcb);
        EXPECT(gbc.readMem(0xde25), 0x8b);
        // CB 8B 021A
        gbc.setState(0xc1a8, 0x25a, 0x5670, 0x1a87, 0xa305, 0x213f, 0x1, 0x1);
        gbc.writeMem(0xc1a8, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x25a);
        EXPECT(gbc.pc(), 0xc1aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1a8), 0xcb);
        EXPECT(gbc.readMem(0xc1a9), 0x8b);
        // CB 8B 021B
        gbc.setState(0x4aac, 0x821c, 0x8250, 0x3351, 0xf6cf, 0xedc4, 0x1, 0x0);
        gbc.writeMem(0x4aac, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x821c);
        EXPECT(gbc.pc(), 0x4aae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 021C
        gbc.setState(0x2019, 0xaebf, 0x2000, 0x4ac9, 0xfa6b, 0x9587, 0x1, 0x0);
        gbc.writeMem(0x2019, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xaebf);
        EXPECT(gbc.pc(), 0x201b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 021E
        gbc.setState(0x2018, 0x1189, 0x8100, 0x3ac6, 0xce19, 0x504c, 0x1, 0x1);
        gbc.writeMem(0x2018, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1189);
        EXPECT(gbc.pc(), 0x201a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 021F
        gbc.setState(0x6171, 0x84ee, 0x4b70, 0xe706, 0x7f3e, 0xbf27, 0x1, 0x1);
        gbc.writeMem(0x6171, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x84ee);
        EXPECT(gbc.pc(), 0x6173);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0220
        gbc.setState(0xd3ec, 0x1e87, 0xcfa0, 0x12f1, 0x81b3, 0x6afd, 0x0, 0x1);
        gbc.writeMem(0xd3ec, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1e87);
        EXPECT(gbc.pc(), 0xd3ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3ec), 0xcb);
        EXPECT(gbc.readMem(0xd3ed), 0x8b);
        // CB 8B 0221
        gbc.setState(0x7e36, 0x2ea1, 0x6a50, 0xf5c7, 0x42e4, 0xc73d, 0x0, 0x1);
        gbc.writeMem(0x7e36, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2ea1);
        EXPECT(gbc.pc(), 0x7e38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0222
        gbc.setState(0xe5f4, 0xa5a0, 0x8500, 0xe88, 0xb66a, 0x9653, 0x0, 0x0);
        gbc.writeMem(0xe5f4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xa5a0);
        EXPECT(gbc.pc(), 0xe5f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5f4), 0xcb);
        EXPECT(gbc.readMem(0xe5f5), 0x8b);
        // CB 8B 0224
        gbc.setState(0x754d, 0x8833, 0xcbf0, 0x4924, 0x8a14, 0x8f8b, 0x1, 0x0);
        gbc.writeMem(0x754d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8833);
        EXPECT(gbc.pc(), 0x754f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0225
        gbc.setState(0x89ae, 0x2472, 0x6a40, 0x7171, 0xbb4e, 0xe44b, 0x1, 0x1);
        gbc.writeMem(0x89ae, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2472);
        EXPECT(gbc.pc(), 0x89b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89ae), 0xcb);
        EXPECT(gbc.readMem(0x89af), 0x8b);
        // CB 8B 0226
        gbc.setState(0x64d4, 0x393, 0x9350, 0xc029, 0x43eb, 0x8543, 0x0, 0x1);
        gbc.writeMem(0x64d4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x393);
        EXPECT(gbc.pc(), 0x64d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0227
        gbc.setState(0xb6f5, 0xc7f, 0x2370, 0xc0f0, 0xabf6, 0x8bff, 0x1, 0x1);
        gbc.writeMem(0xb6f5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc7f);
        EXPECT(gbc.pc(), 0xb6f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6f5), 0xcb);
        EXPECT(gbc.readMem(0xb6f6), 0x8b);
        // CB 8B 0228
        gbc.setState(0x95b6, 0x1500, 0x6eb0, 0x2427, 0xfdfd, 0xa3d0, 0x1, 0x1);
        gbc.writeMem(0x95b6, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1500);
        EXPECT(gbc.pc(), 0x95b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95b6), 0xcb);
        EXPECT(gbc.readMem(0x95b7), 0x8b);
        // CB 8B 0229
        gbc.setState(0x894, 0x35f4, 0xaff0, 0xaf93, 0xd439, 0x835d, 0x0, 0x0);
        gbc.writeMem(0x894, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x35f4);
        EXPECT(gbc.pc(), 0x896);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 022A
        gbc.setState(0xb6f0, 0xba8b, 0xd4c0, 0x1417, 0xa0e2, 0x343e, 0x0, 0x1);
        gbc.writeMem(0xb6f0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xba8b);
        EXPECT(gbc.pc(), 0xb6f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6f0), 0xcb);
        EXPECT(gbc.readMem(0xb6f1), 0x8b);
        // CB 8B 022B
        gbc.setState(0x6330, 0xce32, 0x5d00, 0x9c63, 0x3156, 0x8783, 0x0, 0x1);
        gbc.writeMem(0x6330, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xce32);
        EXPECT(gbc.pc(), 0x6332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 022C
        gbc.setState(0x9b7b, 0xf0b1, 0xf0d0, 0xfb90, 0x9162, 0x1898, 0x0, 0x0);
        gbc.writeMem(0x9b7b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xf0b1);
        EXPECT(gbc.pc(), 0x9b7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b7b), 0xcb);
        EXPECT(gbc.readMem(0x9b7c), 0x8b);
        // CB 8B 022D
        gbc.setState(0x231a, 0x1c77, 0xb10, 0x4231, 0x7a5f, 0x72e8, 0x1, 0x1);
        gbc.writeMem(0x231a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1c77);
        EXPECT(gbc.pc(), 0x231c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 022E
        gbc.setState(0xd859, 0x5480, 0x79d0, 0x8c3c, 0x7bb5, 0x1d0d, 0x1, 0x0);
        gbc.writeMem(0xd859, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5480);
        EXPECT(gbc.pc(), 0xd85b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd859), 0xcb);
        EXPECT(gbc.readMem(0xd85a), 0x8b);
        // CB 8B 022F
        gbc.setState(0x5261, 0x9130, 0x83e0, 0x2505, 0xdbd3, 0x45bb, 0x1, 0x0);
        gbc.writeMem(0x5261, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9130);
        EXPECT(gbc.pc(), 0x5263);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0230
        gbc.setState(0xeec6, 0x7bbe, 0x41a0, 0x2131, 0x3a70, 0xdc18, 0x1, 0x0);
        gbc.writeMem(0xeec6, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7bbe);
        EXPECT(gbc.pc(), 0xeec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeec6), 0xcb);
        EXPECT(gbc.readMem(0xeec7), 0x8b);
        // CB 8B 0231
        gbc.setState(0x562e, 0x8732, 0xebc0, 0xb103, 0xb7d8, 0x8834, 0x1, 0x1);
        gbc.writeMem(0x562e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8732);
        EXPECT(gbc.pc(), 0x5630);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0232
        gbc.setState(0x10ba, 0xc825, 0x9440, 0x52da, 0x3d7d, 0x7178, 0x1, 0x1);
        gbc.writeMem(0x10ba, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc825);
        EXPECT(gbc.pc(), 0x10bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0233
        gbc.setState(0xa6a5, 0x7087, 0xd8f0, 0x7cc9, 0x30f6, 0x9cb7, 0x1, 0x1);
        gbc.writeMem(0xa6a5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x7087);
        EXPECT(gbc.pc(), 0xa6a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6a5), 0xcb);
        EXPECT(gbc.readMem(0xa6a6), 0x8b);
        // CB 8B 0234
        gbc.setState(0x5549, 0x2fe6, 0x9b40, 0x6a8c, 0x8446, 0x5e94, 0x1, 0x1);
        gbc.writeMem(0x5549, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2fe6);
        EXPECT(gbc.pc(), 0x554b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0235
        gbc.setState(0x6687, 0x4954, 0x2900, 0xb51c, 0xc302, 0x192a, 0x1, 0x1);
        gbc.writeMem(0x6687, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4954);
        EXPECT(gbc.pc(), 0x6689);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0236
        gbc.setState(0x4a2b, 0x447a, 0xa0b0, 0xc881, 0xc39b, 0x69a6, 0x1, 0x1);
        gbc.writeMem(0x4a2b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x447a);
        EXPECT(gbc.pc(), 0x4a2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0237
        gbc.setState(0xfbe, 0x2c00, 0x77d0, 0x23a0, 0x36e8, 0xe1d3, 0x1, 0x0);
        gbc.writeMem(0xfbe, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2c00);
        EXPECT(gbc.pc(), 0xfc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0238
        gbc.setState(0x8360, 0x4cba, 0x6800, 0x30ea, 0xb639, 0x474d, 0x0, 0x1);
        gbc.writeMem(0x8360, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x4cba);
        EXPECT(gbc.pc(), 0x8362);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8360), 0xcb);
        EXPECT(gbc.readMem(0x8361), 0x8b);
        // CB 8B 0239
        gbc.setState(0xcafc, 0x6082, 0xe320, 0xdbd2, 0xdbca, 0x3d74, 0x0, 0x1);
        gbc.writeMem(0xcafc, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6082);
        EXPECT(gbc.pc(), 0xcafe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcafc), 0xcb);
        EXPECT(gbc.readMem(0xcafd), 0x8b);
        // CB 8B 023A
        gbc.setState(0x80e7, 0x5419, 0xc020, 0xba51, 0x8851, 0xee5c, 0x0, 0x1);
        gbc.writeMem(0x80e7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5419);
        EXPECT(gbc.pc(), 0x80e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80e7), 0xcb);
        EXPECT(gbc.readMem(0x80e8), 0x8b);
        // CB 8B 023B
        gbc.setState(0x293, 0xceba, 0xafe0, 0xd19b, 0x7fb4, 0xa525, 0x0, 0x1);
        gbc.writeMem(0x293, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xceba);
        EXPECT(gbc.pc(), 0x295);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 023C
        gbc.setState(0x540f, 0xe02f, 0x99d0, 0x8d98, 0x34c4, 0x5952, 0x0, 0x1);
        gbc.writeMem(0x540f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe02f);
        EXPECT(gbc.pc(), 0x5411);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 023D
        gbc.setState(0xaf89, 0xc1d, 0xe750, 0x3e5a, 0xb4db, 0x44a4, 0x1, 0x1);
        gbc.writeMem(0xaf89, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xc1d);
        EXPECT(gbc.pc(), 0xaf8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf89), 0xcb);
        EXPECT(gbc.readMem(0xaf8a), 0x8b);
        // CB 8B 023E
        gbc.setState(0x4031, 0xd5d3, 0x2450, 0x148c, 0x54ab, 0x98d1, 0x0, 0x1);
        gbc.writeMem(0x4031, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd5d3);
        EXPECT(gbc.pc(), 0x4033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 023F
        gbc.setState(0x2956, 0x7c2, 0xef60, 0x947c, 0x5f11, 0x526, 0x1, 0x1);
        gbc.writeMem(0x2956, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x7c2);
        EXPECT(gbc.pc(), 0x2958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0241
        gbc.setState(0x73f9, 0x85da, 0x2450, 0xa9eb, 0x976e, 0x848b, 0x1, 0x1);
        gbc.writeMem(0x73f9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x85da);
        EXPECT(gbc.pc(), 0x73fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0242
        gbc.setState(0xe597, 0xe8e, 0x8390, 0x96a3, 0xc83, 0xfce9, 0x0, 0x0);
        gbc.writeMem(0xe597, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe8e);
        EXPECT(gbc.pc(), 0xe599);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe597), 0xcb);
        EXPECT(gbc.readMem(0xe598), 0x8b);
        // CB 8B 0243
        gbc.setState(0x563, 0x477b, 0x40d0, 0x4430, 0xf16, 0xeb45, 0x1, 0x0);
        gbc.writeMem(0x563, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x477b);
        EXPECT(gbc.pc(), 0x565);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0244
        gbc.setState(0x4432, 0xe03b, 0x6d20, 0x86fd, 0x7083, 0x97e6, 0x1, 0x1);
        gbc.writeMem(0x4432, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe03b);
        EXPECT(gbc.pc(), 0x4434);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0245
        gbc.setState(0xbb16, 0x5e87, 0x6ab0, 0x4eeb, 0xf942, 0x5eb9, 0x0, 0x0);
        gbc.writeMem(0xbb16, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5e87);
        EXPECT(gbc.pc(), 0xbb18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb16), 0xcb);
        EXPECT(gbc.readMem(0xbb17), 0x8b);
        // CB 8B 0246
        gbc.setState(0xd98a, 0x9c85, 0x2aa0, 0xcd78, 0x6fbb, 0xb496, 0x0, 0x1);
        gbc.writeMem(0xd98a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9c85);
        EXPECT(gbc.pc(), 0xd98c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd98a), 0xcb);
        EXPECT(gbc.readMem(0xd98b), 0x8b);
        // CB 8B 0247
        gbc.setState(0xc7b4, 0x47bf, 0xbe00, 0xb42, 0x3517, 0x3d94, 0x0, 0x1);
        gbc.writeMem(0xc7b4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x47bf);
        EXPECT(gbc.pc(), 0xc7b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7b4), 0xcb);
        EXPECT(gbc.readMem(0xc7b5), 0x8b);
        // CB 8B 0248
        gbc.setState(0xea6e, 0x77d3, 0x5f20, 0x37c2, 0x3431, 0x3fb4, 0x0, 0x1);
        gbc.writeMem(0xea6e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x77d3);
        EXPECT(gbc.pc(), 0xea70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea6e), 0xcb);
        EXPECT(gbc.readMem(0xea6f), 0x8b);
        // CB 8B 0249
        gbc.setState(0x9d47, 0xe04c, 0x1f0, 0xcbac, 0x4630, 0x65, 0x1, 0x1);
        gbc.writeMem(0x9d47, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe04c);
        EXPECT(gbc.pc(), 0x9d49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d47), 0xcb);
        EXPECT(gbc.readMem(0x9d48), 0x8b);
        // CB 8B 024A
        gbc.setState(0x49ed, 0x32, 0xc7e0, 0xe13b, 0x2bb8, 0x7844, 0x1, 0x0);
        gbc.writeMem(0x49ed, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x32);
        EXPECT(gbc.pc(), 0x49ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 024B
        gbc.setState(0x9b2c, 0x5654, 0x13b0, 0x7fc7, 0x1ed5, 0x8eaf, 0x1, 0x1);
        gbc.writeMem(0x9b2c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x5654);
        EXPECT(gbc.pc(), 0x9b2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b2c), 0xcb);
        EXPECT(gbc.readMem(0x9b2d), 0x8b);
        // CB 8B 024C
        gbc.setState(0x2a72, 0x188c, 0xfc80, 0xb259, 0x1f73, 0x242f, 0x0, 0x1);
        gbc.writeMem(0x2a72, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x188c);
        EXPECT(gbc.pc(), 0x2a74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 024D
        gbc.setState(0x6bfe, 0x74ff, 0x1b60, 0xc2ae, 0xe7a0, 0x9f0c, 0x1, 0x1);
        gbc.writeMem(0x6bfe, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x74ff);
        EXPECT(gbc.pc(), 0x6c00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 024E
        gbc.setState(0x7af7, 0x596d, 0x2ed0, 0xe006, 0x8d72, 0x20c8, 0x1, 0x1);
        gbc.writeMem(0x7af7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x596d);
        EXPECT(gbc.pc(), 0x7af9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 024F
        gbc.setState(0x8c8d, 0xab23, 0xb110, 0x57be, 0xee44, 0xe595, 0x0, 0x1);
        gbc.writeMem(0x8c8d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xab23);
        EXPECT(gbc.pc(), 0x8c8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c8d), 0xcb);
        EXPECT(gbc.readMem(0x8c8e), 0x8b);
        // CB 8B 0250
        gbc.setState(0x3f26, 0x338c, 0xc140, 0x53d4, 0xea3a, 0x4f74, 0x0, 0x1);
        gbc.writeMem(0x3f26, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x338c);
        EXPECT(gbc.pc(), 0x3f28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0251
        gbc.setState(0xb55a, 0xa926, 0x7c60, 0xf0f6, 0xe2f5, 0x1fcf, 0x0, 0x0);
        gbc.writeMem(0xb55a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa926);
        EXPECT(gbc.pc(), 0xb55c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb55a), 0xcb);
        EXPECT(gbc.readMem(0xb55b), 0x8b);
        // CB 8B 0252
        gbc.setState(0xed57, 0x90b0, 0x7420, 0xa5ab, 0x1fa9, 0x9773, 0x0, 0x1);
        gbc.writeMem(0xed57, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x90b0);
        EXPECT(gbc.pc(), 0xed59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed57), 0xcb);
        EXPECT(gbc.readMem(0xed58), 0x8b);
        // CB 8B 0253
        gbc.setState(0x2c38, 0x3c25, 0x5c40, 0xead1, 0x6193, 0x31e0, 0x0, 0x1);
        gbc.writeMem(0x2c38, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3c25);
        EXPECT(gbc.pc(), 0x2c3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0255
        gbc.setState(0xa27c, 0x35ff, 0xb7a0, 0x37fb, 0xe324, 0x47d0, 0x0, 0x1);
        gbc.writeMem(0xa27c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x35ff);
        EXPECT(gbc.pc(), 0xa27e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa27c), 0xcb);
        EXPECT(gbc.readMem(0xa27d), 0x8b);
        // CB 8B 0256
        gbc.setState(0x8ccc, 0xd421, 0x96a0, 0x7d, 0x6ad, 0x86c, 0x1, 0x0);
        gbc.writeMem(0x8ccc, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd421);
        EXPECT(gbc.pc(), 0x8cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ccc), 0xcb);
        EXPECT(gbc.readMem(0x8ccd), 0x8b);
        // CB 8B 0257
        gbc.setState(0xbde4, 0xbe97, 0x2e40, 0x5c1, 0xf97e, 0x3f4a, 0x0, 0x1);
        gbc.writeMem(0xbde4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xbe97);
        EXPECT(gbc.pc(), 0xbde6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbde4), 0xcb);
        EXPECT(gbc.readMem(0xbde5), 0x8b);
        // CB 8B 0258
        gbc.setState(0x3bfd, 0x1ad, 0x9080, 0xb44d, 0x1858, 0x5aab, 0x0, 0x0);
        gbc.writeMem(0x3bfd, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1ad);
        EXPECT(gbc.pc(), 0x3bff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0259
        gbc.setState(0x2dba, 0xfa72, 0xac40, 0x5932, 0x2e3d, 0x6b72, 0x0, 0x0);
        gbc.writeMem(0x2dba, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xfa72);
        EXPECT(gbc.pc(), 0x2dbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 025A
        gbc.setState(0x992d, 0x6ffe, 0xd530, 0xbadb, 0x44c7, 0xe6c3, 0x1, 0x1);
        gbc.writeMem(0x992d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6ffe);
        EXPECT(gbc.pc(), 0x992f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x992d), 0xcb);
        EXPECT(gbc.readMem(0x992e), 0x8b);
        // CB 8B 025B
        gbc.setState(0x398a, 0x97d8, 0xc870, 0xe0ee, 0x5d35, 0x5bd2, 0x0, 0x0);
        gbc.writeMem(0x398a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x97d8);
        EXPECT(gbc.pc(), 0x398c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 025C
        gbc.setState(0x4077, 0xbc99, 0x32b0, 0x76d3, 0xa933, 0xc587, 0x0, 0x0);
        gbc.writeMem(0x4077, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xbc99);
        EXPECT(gbc.pc(), 0x4079);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 025D
        gbc.setState(0xbbab, 0xa77d, 0x9480, 0xed63, 0xde94, 0x7319, 0x0, 0x0);
        gbc.writeMem(0xbbab, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa77d);
        EXPECT(gbc.pc(), 0xbbad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbab), 0xcb);
        EXPECT(gbc.readMem(0xbbac), 0x8b);
        // CB 8B 025E
        gbc.setState(0x751c, 0x6325, 0x3ea0, 0x8238, 0xaa7d, 0xa3cb, 0x0, 0x0);
        gbc.writeMem(0x751c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6325);
        EXPECT(gbc.pc(), 0x751e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 025F
        gbc.setState(0x6e04, 0x4e3, 0x2e30, 0xde8b, 0x7fb, 0xdce, 0x0, 0x0);
        gbc.writeMem(0x6e04, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4e3);
        EXPECT(gbc.pc(), 0x6e06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0260
        gbc.setState(0x238d, 0xa107, 0x1460, 0x1795, 0x60e5, 0xc7bb, 0x0, 0x0);
        gbc.writeMem(0x238d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa107);
        EXPECT(gbc.pc(), 0x238f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0261
        gbc.setState(0x7cf1, 0x1981, 0xd160, 0x5550, 0xd088, 0x4fa6, 0x1, 0x0);
        gbc.writeMem(0x7cf1, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1981);
        EXPECT(gbc.pc(), 0x7cf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0262
        gbc.setState(0x208e, 0xbe8d, 0x270, 0xb85e, 0xa3b2, 0x3a4d, 0x1, 0x1);
        gbc.writeMem(0x208e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xbe8d);
        EXPECT(gbc.pc(), 0x2090);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0263
        gbc.setState(0x59bf, 0xc122, 0x5b70, 0x5715, 0xd36c, 0x6922, 0x1, 0x1);
        gbc.writeMem(0x59bf, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc122);
        EXPECT(gbc.pc(), 0x59c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0264
        gbc.setState(0x3449, 0x7f0a, 0x93d0, 0x4299, 0xbf34, 0x5bc7, 0x1, 0x0);
        gbc.writeMem(0x3449, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7f0a);
        EXPECT(gbc.pc(), 0x344b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0265
        gbc.setState(0x8ee4, 0x5874, 0xee30, 0x88f1, 0xc8d2, 0xd674, 0x1, 0x0);
        gbc.writeMem(0x8ee4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5874);
        EXPECT(gbc.pc(), 0x8ee6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ee4), 0xcb);
        EXPECT(gbc.readMem(0x8ee5), 0x8b);
        // CB 8B 0266
        gbc.setState(0xdb15, 0xa807, 0x9590, 0x8374, 0x227b, 0xef78, 0x0, 0x0);
        gbc.writeMem(0xdb15, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa807);
        EXPECT(gbc.pc(), 0xdb17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb15), 0xcb);
        EXPECT(gbc.readMem(0xdb16), 0x8b);
        // CB 8B 0267
        gbc.setState(0x20e0, 0xeb27, 0xf880, 0xf266, 0xd122, 0xcd20, 0x1, 0x1);
        gbc.writeMem(0x20e0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xeb27);
        EXPECT(gbc.pc(), 0x20e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0268
        gbc.setState(0x9c66, 0x8c02, 0x9840, 0xb64c, 0xacb3, 0xb6f6, 0x1, 0x1);
        gbc.writeMem(0x9c66, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8c02);
        EXPECT(gbc.pc(), 0x9c68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c66), 0xcb);
        EXPECT(gbc.readMem(0x9c67), 0x8b);
        // CB 8B 0269
        gbc.setState(0xcd7c, 0xf660, 0x620, 0xadf2, 0xec72, 0x4a79, 0x1, 0x0);
        gbc.writeMem(0xcd7c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf660);
        EXPECT(gbc.pc(), 0xcd7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd7c), 0xcb);
        EXPECT(gbc.readMem(0xcd7d), 0x8b);
        // CB 8B 026A
        gbc.setState(0x3d59, 0xa50e, 0xa670, 0x5c86, 0x1b31, 0x5576, 0x1, 0x1);
        gbc.writeMem(0x3d59, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa50e);
        EXPECT(gbc.pc(), 0x3d5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 026C
        gbc.setState(0x7589, 0x7d0a, 0x8c0, 0xc1e7, 0x6e54, 0xcfd0, 0x0, 0x0);
        gbc.writeMem(0x7589, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7d0a);
        EXPECT(gbc.pc(), 0x758b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 026D
        gbc.setState(0x4ba1, 0xd480, 0x70f0, 0xef, 0x9407, 0x181a, 0x0, 0x1);
        gbc.writeMem(0x4ba1, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd480);
        EXPECT(gbc.pc(), 0x4ba3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 026E
        gbc.setState(0x3635, 0xde5b, 0xae90, 0xe4cf, 0xa02, 0x1449, 0x1, 0x1);
        gbc.writeMem(0x3635, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xde5b);
        EXPECT(gbc.pc(), 0x3637);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 026F
        gbc.setState(0x1f2f, 0xb7a0, 0x7b10, 0x3a6f, 0x6451, 0xc3cb, 0x1, 0x1);
        gbc.writeMem(0x1f2f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb7a0);
        EXPECT(gbc.pc(), 0x1f31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0270
        gbc.setState(0x99a, 0xc837, 0xf080, 0x4af4, 0xfcdd, 0xc8bd, 0x0, 0x0);
        gbc.writeMem(0x99a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc837);
        EXPECT(gbc.pc(), 0x99c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0271
        gbc.setState(0xcbf6, 0x5e5, 0x8ac0, 0x4f82, 0xc85a, 0xf091, 0x1, 0x1);
        gbc.writeMem(0xcbf6, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x5e5);
        EXPECT(gbc.pc(), 0xcbf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbf6), 0xcb);
        EXPECT(gbc.readMem(0xcbf7), 0x8b);
        // CB 8B 0272
        gbc.setState(0x9523, 0x4223, 0xaf90, 0x138f, 0xa2aa, 0x6ed6, 0x0, 0x1);
        gbc.writeMem(0x9523, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4223);
        EXPECT(gbc.pc(), 0x9525);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9523), 0xcb);
        EXPECT(gbc.readMem(0x9524), 0x8b);
        // CB 8B 0274
        gbc.setState(0x8692, 0x66c1, 0x39a0, 0xf640, 0x5d06, 0x1ee6, 0x0, 0x1);
        gbc.writeMem(0x8692, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x66c1);
        EXPECT(gbc.pc(), 0x8694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8692), 0xcb);
        EXPECT(gbc.readMem(0x8693), 0x8b);
        // CB 8B 0277
        gbc.setState(0x3fa, 0x4ff3, 0xc620, 0x4f58, 0x72e3, 0x89a4, 0x1, 0x0);
        gbc.writeMem(0x3fa, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4ff3);
        EXPECT(gbc.pc(), 0x3fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0278
        gbc.setState(0x75fb, 0xad6, 0xeb0, 0xc87d, 0x982, 0x9ae8, 0x1, 0x1);
        gbc.writeMem(0x75fb, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xad6);
        EXPECT(gbc.pc(), 0x75fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0279
        gbc.setState(0xb413, 0xeac3, 0x7940, 0xd4fd, 0x7ea8, 0xe1e0, 0x0, 0x1);
        gbc.writeMem(0xb413, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xeac3);
        EXPECT(gbc.pc(), 0xb415);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb413), 0xcb);
        EXPECT(gbc.readMem(0xb414), 0x8b);
        // CB 8B 027C
        gbc.setState(0x2667, 0x6f79, 0xe740, 0x271d, 0x3b0e, 0xf7fb, 0x0, 0x0);
        gbc.writeMem(0x2667, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6f79);
        EXPECT(gbc.pc(), 0x2669);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 027D
        gbc.setState(0x1307, 0x518f, 0xab00, 0x427, 0xcfba, 0x9308, 0x1, 0x0);
        gbc.writeMem(0x1307, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x518f);
        EXPECT(gbc.pc(), 0x1309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 027E
        gbc.setState(0x32db, 0x318c, 0x1d40, 0x880, 0x5c75, 0xc5d5, 0x0, 0x0);
        gbc.writeMem(0x32db, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x318c);
        EXPECT(gbc.pc(), 0x32dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 027F
        gbc.setState(0xe9d8, 0x54f1, 0xd670, 0x71bf, 0x3e10, 0xae71, 0x1, 0x1);
        gbc.writeMem(0xe9d8, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x54f1);
        EXPECT(gbc.pc(), 0xe9da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9d8), 0xcb);
        EXPECT(gbc.readMem(0xe9d9), 0x8b);
        // CB 8B 0280
        gbc.setState(0x607a, 0xcaa3, 0x59b0, 0x2383, 0x6b70, 0x56c0, 0x0, 0x1);
        gbc.writeMem(0x607a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xcaa3);
        EXPECT(gbc.pc(), 0x607c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0281
        gbc.setState(0xd2ac, 0xe460, 0xe710, 0xdc7b, 0xe723, 0x2e7c, 0x1, 0x1);
        gbc.writeMem(0xd2ac, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe460);
        EXPECT(gbc.pc(), 0xd2ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2ac), 0xcb);
        EXPECT(gbc.readMem(0xd2ad), 0x8b);
        // CB 8B 0282
        gbc.setState(0x9528, 0x50f3, 0xf450, 0x9c51, 0xcec7, 0xce83, 0x1, 0x0);
        gbc.writeMem(0x9528, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x50f3);
        EXPECT(gbc.pc(), 0x952a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9528), 0xcb);
        EXPECT(gbc.readMem(0x9529), 0x8b);
        // CB 8B 0283
        gbc.setState(0x9890, 0x5fd1, 0x4e40, 0x1670, 0xed5f, 0xdfc4, 0x1, 0x1);
        gbc.writeMem(0x9890, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5fd1);
        EXPECT(gbc.pc(), 0x9892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9890), 0xcb);
        EXPECT(gbc.readMem(0x9891), 0x8b);
        // CB 8B 0284
        gbc.setState(0xcd7, 0xb414, 0xb370, 0xd17f, 0xa984, 0x32ec, 0x1, 0x1);
        gbc.writeMem(0xcd7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb414);
        EXPECT(gbc.pc(), 0xcd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0285
        gbc.setState(0x469a, 0x30d1, 0xe710, 0x883a, 0x1030, 0xe8d0, 0x1, 0x1);
        gbc.writeMem(0x469a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x30d1);
        EXPECT(gbc.pc(), 0x469c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0286
        gbc.setState(0x3cf2, 0xfe06, 0xbe30, 0x526f, 0x1aae, 0x6a82, 0x0, 0x0);
        gbc.writeMem(0x3cf2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xfe06);
        EXPECT(gbc.pc(), 0x3cf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0287
        gbc.setState(0x6549, 0x325f, 0x6a30, 0xc33a, 0xc713, 0xe979, 0x0, 0x1);
        gbc.writeMem(0x6549, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x325f);
        EXPECT(gbc.pc(), 0x654b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0288
        gbc.setState(0x642c, 0xe1ff, 0x58d0, 0x35c7, 0x3890, 0x602e, 0x1, 0x1);
        gbc.writeMem(0x642c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe1ff);
        EXPECT(gbc.pc(), 0x642e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0289
        gbc.setState(0xacf7, 0x69ab, 0x9cd0, 0x9699, 0xa9c2, 0xe6b9, 0x1, 0x1);
        gbc.writeMem(0xacf7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x69ab);
        EXPECT(gbc.pc(), 0xacf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacf7), 0xcb);
        EXPECT(gbc.readMem(0xacf8), 0x8b);
        // CB 8B 028A
        gbc.setState(0x972f, 0x9fdd, 0xec10, 0x6c3c, 0x4dbb, 0x6439, 0x0, 0x1);
        gbc.writeMem(0x972f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9fdd);
        EXPECT(gbc.pc(), 0x9731);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x972f), 0xcb);
        EXPECT(gbc.readMem(0x9730), 0x8b);
        // CB 8B 028B
        gbc.setState(0x76d7, 0x583d, 0xe130, 0x86f5, 0xc7fa, 0x188d, 0x0, 0x1);
        gbc.writeMem(0x76d7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x583d);
        EXPECT(gbc.pc(), 0x76d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 028D
        gbc.setState(0xaabb, 0xf26, 0x3a60, 0x8612, 0xd117, 0x46e2, 0x1, 0x0);
        gbc.writeMem(0xaabb, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf26);
        EXPECT(gbc.pc(), 0xaabd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaabb), 0xcb);
        EXPECT(gbc.readMem(0xaabc), 0x8b);
        // CB 8B 028E
        gbc.setState(0x4f6c, 0xc9a, 0xce50, 0xa3f9, 0xdb42, 0x772b, 0x0, 0x0);
        gbc.writeMem(0x4f6c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xc9a);
        EXPECT(gbc.pc(), 0x4f6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 028F
        gbc.setState(0x4bbb, 0x4019, 0x9e20, 0x5058, 0x983e, 0x9846, 0x0, 0x1);
        gbc.writeMem(0x4bbb, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x4019);
        EXPECT(gbc.pc(), 0x4bbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0290
        gbc.setState(0x4924, 0xfa99, 0x3a70, 0xc3da, 0xb87c, 0xf742, 0x0, 0x0);
        gbc.writeMem(0x4924, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xfa99);
        EXPECT(gbc.pc(), 0x4926);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0291
        gbc.setState(0xdc4c, 0x92d6, 0xf680, 0xb6f6, 0xfc63, 0x8912, 0x1, 0x0);
        gbc.writeMem(0xdc4c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x92d6);
        EXPECT(gbc.pc(), 0xdc4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc4c), 0xcb);
        EXPECT(gbc.readMem(0xdc4d), 0x8b);
        // CB 8B 0293
        gbc.setState(0x7eec, 0x5a, 0xa1f0, 0x726f, 0x4600, 0xa53f, 0x1, 0x0);
        gbc.writeMem(0x7eec, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5a);
        EXPECT(gbc.pc(), 0x7eee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0294
        gbc.setState(0xf04, 0xd104, 0xab0, 0xa156, 0x74ab, 0xa44f, 0x1, 0x0);
        gbc.writeMem(0xf04, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd104);
        EXPECT(gbc.pc(), 0xf06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0295
        gbc.setState(0x92f, 0x3ec4, 0xabb0, 0x8188, 0xce8f, 0xb51a, 0x1, 0x1);
        gbc.writeMem(0x92f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3ec4);
        EXPECT(gbc.pc(), 0x931);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0296
        gbc.setState(0x65e1, 0x6c16, 0x4210, 0xc1a4, 0x2e72, 0x9b95, 0x1, 0x1);
        gbc.writeMem(0x65e1, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6c16);
        EXPECT(gbc.pc(), 0x65e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0297
        gbc.setState(0x2a00, 0x4c66, 0x3fc0, 0x899d, 0xc16b, 0x65c4, 0x1, 0x1);
        gbc.writeMem(0x2a00, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4c66);
        EXPECT(gbc.pc(), 0x2a02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0298
        gbc.setState(0xbe32, 0x3e5a, 0x7880, 0x9ce2, 0x84a, 0x8a2f, 0x0, 0x1);
        gbc.writeMem(0xbe32, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3e5a);
        EXPECT(gbc.pc(), 0xbe34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe32), 0xcb);
        EXPECT(gbc.readMem(0xbe33), 0x8b);
        // CB 8B 0299
        gbc.setState(0x94f7, 0x4415, 0x4330, 0xa588, 0xca65, 0x1cc, 0x1, 0x0);
        gbc.writeMem(0x94f7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4415);
        EXPECT(gbc.pc(), 0x94f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94f7), 0xcb);
        EXPECT(gbc.readMem(0x94f8), 0x8b);
        // CB 8B 029A
        gbc.setState(0xdc78, 0x5e6b, 0x5080, 0xf85a, 0x7a31, 0x6c46, 0x0, 0x1);
        gbc.writeMem(0xdc78, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x5e6b);
        EXPECT(gbc.pc(), 0xdc7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc78), 0xcb);
        EXPECT(gbc.readMem(0xdc79), 0x8b);
        // CB 8B 029B
        gbc.setState(0x3857, 0x86e0, 0xe6c0, 0x8d8d, 0x916e, 0x139f, 0x0, 0x0);
        gbc.writeMem(0x3857, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x86e0);
        EXPECT(gbc.pc(), 0x3859);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 029C
        gbc.setState(0xaf6, 0xe418, 0xb100, 0xf8a4, 0x5eb5, 0x5871, 0x1, 0x0);
        gbc.writeMem(0xaf6, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe418);
        EXPECT(gbc.pc(), 0xaf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 029E
        gbc.setState(0x599b, 0x5ad1, 0x3c0, 0x62ee, 0xa505, 0x4c64, 0x0, 0x0);
        gbc.writeMem(0x599b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5ad1);
        EXPECT(gbc.pc(), 0x599d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 029F
        gbc.setState(0xc122, 0xe938, 0xcad0, 0x1834, 0xa1f5, 0xf600, 0x1, 0x1);
        gbc.writeMem(0xc122, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe938);
        EXPECT(gbc.pc(), 0xc124);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc122), 0xcb);
        EXPECT(gbc.readMem(0xc123), 0x8b);
        // CB 8B 02A0
        gbc.setState(0xc492, 0xba13, 0x460, 0xa781, 0x13ac, 0x263d, 0x0, 0x1);
        gbc.writeMem(0xc492, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xba13);
        EXPECT(gbc.pc(), 0xc494);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc492), 0xcb);
        EXPECT(gbc.readMem(0xc493), 0x8b);
        // CB 8B 02A1
        gbc.setState(0x57bd, 0x200c, 0x43e0, 0xdde4, 0x1333, 0xba9d, 0x1, 0x1);
        gbc.writeMem(0x57bd, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x200c);
        EXPECT(gbc.pc(), 0x57bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 02A2
        gbc.setState(0xbe51, 0x154e, 0x9820, 0x9512, 0xe279, 0xee94, 0x0, 0x1);
        gbc.writeMem(0xbe51, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x154e);
        EXPECT(gbc.pc(), 0xbe53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe51), 0xcb);
        EXPECT(gbc.readMem(0xbe52), 0x8b);
        // CB 8B 02A3
        gbc.setState(0x3abe, 0xa5d3, 0xf7e0, 0x3b3b, 0x7581, 0x467d, 0x0, 0x0);
        gbc.writeMem(0x3abe, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa5d3);
        EXPECT(gbc.pc(), 0x3ac0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 02A4
        gbc.setState(0x1b21, 0x92db, 0x8870, 0x3514, 0x6665, 0x8f5, 0x0, 0x0);
        gbc.writeMem(0x1b21, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x92db);
        EXPECT(gbc.pc(), 0x1b23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02A5
        gbc.setState(0x1c95, 0x69, 0x4fb0, 0xc49, 0xb4e8, 0x4807, 0x1, 0x0);
        gbc.writeMem(0x1c95, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x69);
        EXPECT(gbc.pc(), 0x1c97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02A6
        gbc.setState(0x98db, 0xfdc0, 0x48c0, 0x414c, 0xa07, 0x586e, 0x1, 0x0);
        gbc.writeMem(0x98db, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xfdc0);
        EXPECT(gbc.pc(), 0x98dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98db), 0xcb);
        EXPECT(gbc.readMem(0x98dc), 0x8b);
        // CB 8B 02A7
        gbc.setState(0xb90c, 0xcf5e, 0x2bf0, 0x9799, 0xf1e0, 0xfa8e, 0x1, 0x1);
        gbc.writeMem(0xb90c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xcf5e);
        EXPECT(gbc.pc(), 0xb90e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb90c), 0xcb);
        EXPECT(gbc.readMem(0xb90d), 0x8b);
        // CB 8B 02A8
        gbc.setState(0x9bf0, 0x953c, 0x9780, 0xa4df, 0xd839, 0x3b29, 0x1, 0x1);
        gbc.writeMem(0x9bf0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x953c);
        EXPECT(gbc.pc(), 0x9bf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bf0), 0xcb);
        EXPECT(gbc.readMem(0x9bf1), 0x8b);
        // CB 8B 02A9
        gbc.setState(0x9d14, 0x803c, 0x8be0, 0xccee, 0xfb5c, 0x94b5, 0x0, 0x1);
        gbc.writeMem(0x9d14, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x803c);
        EXPECT(gbc.pc(), 0x9d16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d14), 0xcb);
        EXPECT(gbc.readMem(0x9d15), 0x8b);
        // CB 8B 02AA
        gbc.setState(0x363a, 0xe124, 0xa420, 0xb71c, 0xb741, 0xcf28, 0x0, 0x1);
        gbc.writeMem(0x363a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe124);
        EXPECT(gbc.pc(), 0x363c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 02AC
        gbc.setState(0x7375, 0x8363, 0xc560, 0x948, 0xa4cf, 0x3914, 0x1, 0x0);
        gbc.writeMem(0x7375, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8363);
        EXPECT(gbc.pc(), 0x7377);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 02AE
        gbc.setState(0x5b3b, 0x5675, 0xe610, 0x8772, 0x8641, 0x61c1, 0x0, 0x0);
        gbc.writeMem(0x5b3b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5675);
        EXPECT(gbc.pc(), 0x5b3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02AF
        gbc.setState(0xd0d, 0x1b82, 0x4410, 0x46f0, 0x5746, 0x16ce, 0x0, 0x0);
        gbc.writeMem(0xd0d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1b82);
        EXPECT(gbc.pc(), 0xd0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02B0
        gbc.setState(0x460d, 0x2dc9, 0x8270, 0xbe05, 0xaca2, 0x4ca8, 0x1, 0x0);
        gbc.writeMem(0x460d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2dc9);
        EXPECT(gbc.pc(), 0x460f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02B1
        gbc.setState(0x7e3b, 0xac47, 0x2de0, 0xa9c9, 0x7477, 0x18f, 0x0, 0x0);
        gbc.writeMem(0x7e3b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xac47);
        EXPECT(gbc.pc(), 0x7e3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 02B2
        gbc.setState(0xe33e, 0x554, 0xe8f0, 0x3d14, 0xb60f, 0xb6fe, 0x0, 0x0);
        gbc.writeMem(0xe33e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x554);
        EXPECT(gbc.pc(), 0xe340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe33e), 0xcb);
        EXPECT(gbc.readMem(0xe33f), 0x8b);
        // CB 8B 02B3
        gbc.setState(0x4f78, 0xd173, 0x1150, 0x7e63, 0xeb0f, 0x5388, 0x1, 0x0);
        gbc.writeMem(0x4f78, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd173);
        EXPECT(gbc.pc(), 0x4f7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02B4
        gbc.setState(0xafcc, 0xd0fb, 0xc4c0, 0x9bca, 0x1512, 0x728e, 0x0, 0x0);
        gbc.writeMem(0xafcc, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd0fb);
        EXPECT(gbc.pc(), 0xafce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafcc), 0xcb);
        EXPECT(gbc.readMem(0xafcd), 0x8b);
        // CB 8B 02B5
        gbc.setState(0x3b0, 0xa7c1, 0x8530, 0xdac0, 0x6210, 0x523a, 0x1, 0x0);
        gbc.writeMem(0x3b0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xa7c1);
        EXPECT(gbc.pc(), 0x3b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02B6
        gbc.setState(0x857, 0xe9d4, 0x2810, 0x884a, 0xb582, 0xe116, 0x0, 0x1);
        gbc.writeMem(0x857, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe9d4);
        EXPECT(gbc.pc(), 0x859);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02B7
        gbc.setState(0x366c, 0x475e, 0x5300, 0x6fd0, 0x8291, 0x8595, 0x1, 0x0);
        gbc.writeMem(0x366c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x475e);
        EXPECT(gbc.pc(), 0x366e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 02B8
        gbc.setState(0xa244, 0xbdfe, 0xb5b0, 0xbd00, 0x78e9, 0x517e, 0x1, 0x1);
        gbc.writeMem(0xa244, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xbdfe);
        EXPECT(gbc.pc(), 0xa246);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa244), 0xcb);
        EXPECT(gbc.readMem(0xa245), 0x8b);
        // CB 8B 02B9
        gbc.setState(0x6d73, 0x2f60, 0xc730, 0xa528, 0xdd13, 0x3d8d, 0x0, 0x1);
        gbc.writeMem(0x6d73, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2f60);
        EXPECT(gbc.pc(), 0x6d75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02BA
        gbc.setState(0xd528, 0x902b, 0x44a0, 0x7484, 0x84d7, 0xaef4, 0x1, 0x1);
        gbc.writeMem(0xd528, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x902b);
        EXPECT(gbc.pc(), 0xd52a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd528), 0xcb);
        EXPECT(gbc.readMem(0xd529), 0x8b);
        // CB 8B 02BB
        gbc.setState(0xd3d2, 0x7485, 0x200, 0xdd49, 0x4a6c, 0xddd3, 0x1, 0x0);
        gbc.writeMem(0xd3d2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7485);
        EXPECT(gbc.pc(), 0xd3d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3d2), 0xcb);
        EXPECT(gbc.readMem(0xd3d3), 0x8b);
        // CB 8B 02BC
        gbc.setState(0xc411, 0xd814, 0x3400, 0x78b4, 0x1609, 0x1fb, 0x0, 0x1);
        gbc.writeMem(0xc411, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xd814);
        EXPECT(gbc.pc(), 0xc413);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc411), 0xcb);
        EXPECT(gbc.readMem(0xc412), 0x8b);
        // CB 8B 02BD
        gbc.setState(0x91d8, 0x1390, 0x4620, 0xd962, 0x3b23, 0x65c8, 0x1, 0x1);
        gbc.writeMem(0x91d8, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1390);
        EXPECT(gbc.pc(), 0x91da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91d8), 0xcb);
        EXPECT(gbc.readMem(0x91d9), 0x8b);
        // CB 8B 02BE
        gbc.setState(0x9309, 0xd358, 0xde90, 0xe891, 0x19d, 0xc9c6, 0x0, 0x0);
        gbc.writeMem(0x9309, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd358);
        EXPECT(gbc.pc(), 0x930b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9309), 0xcb);
        EXPECT(gbc.readMem(0x930a), 0x8b);
        // CB 8B 02BF
        gbc.setState(0x99e1, 0xd09a, 0x3340, 0x9db6, 0x8097, 0xbbd1, 0x1, 0x1);
        gbc.writeMem(0x99e1, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd09a);
        EXPECT(gbc.pc(), 0x99e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99e1), 0xcb);
        EXPECT(gbc.readMem(0x99e2), 0x8b);
        // CB 8B 02C0
        gbc.setState(0x9581, 0x822f, 0x6360, 0x1005, 0x235c, 0xe107, 0x0, 0x1);
        gbc.writeMem(0x9581, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x822f);
        EXPECT(gbc.pc(), 0x9583);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9581), 0xcb);
        EXPECT(gbc.readMem(0x9582), 0x8b);
        // CB 8B 02C1
        gbc.setState(0x5d29, 0x3f2, 0xab30, 0x540b, 0xd90a, 0x9361, 0x0, 0x1);
        gbc.writeMem(0x5d29, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3f2);
        EXPECT(gbc.pc(), 0x5d2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02C3
        gbc.setState(0x8ec2, 0x1f05, 0x10, 0xe4af, 0xba54, 0x8437, 0x1, 0x1);
        gbc.writeMem(0x8ec2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1f05);
        EXPECT(gbc.pc(), 0x8ec4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ec2), 0xcb);
        EXPECT(gbc.readMem(0x8ec3), 0x8b);
        // CB 8B 02C4
        gbc.setState(0x74be, 0x35cf, 0x7720, 0x9f70, 0xefc6, 0x7074, 0x0, 0x0);
        gbc.writeMem(0x74be, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x35cf);
        EXPECT(gbc.pc(), 0x74c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 02C5
        gbc.setState(0xc733, 0x6881, 0xe2e0, 0x2f33, 0x209c, 0x91a, 0x1, 0x0);
        gbc.writeMem(0xc733, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6881);
        EXPECT(gbc.pc(), 0xc735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc733), 0xcb);
        EXPECT(gbc.readMem(0xc734), 0x8b);
        // CB 8B 02C6
        gbc.setState(0x8e00, 0x6638, 0x64e0, 0x7d0d, 0x3835, 0x7e61, 0x1, 0x0);
        gbc.writeMem(0x8e00, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6638);
        EXPECT(gbc.pc(), 0x8e02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e00), 0xcb);
        EXPECT(gbc.readMem(0x8e01), 0x8b);
        // CB 8B 02C7
        gbc.setState(0x5ff7, 0xb374, 0x5e90, 0x2aea, 0xc2d, 0x6962, 0x1, 0x1);
        gbc.writeMem(0x5ff7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb374);
        EXPECT(gbc.pc(), 0x5ff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02C8
        gbc.setState(0x24a2, 0x2076, 0x91a0, 0x8cd1, 0x93d3, 0x2c4d, 0x1, 0x1);
        gbc.writeMem(0x24a2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2076);
        EXPECT(gbc.pc(), 0x24a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 02C9
        gbc.setState(0x4a4a, 0xad4, 0x7750, 0x3187, 0x8cea, 0x55d9, 0x0, 0x0);
        gbc.writeMem(0x4a4a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xad4);
        EXPECT(gbc.pc(), 0x4a4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02CA
        gbc.setState(0x11dd, 0x1fb, 0x80d0, 0x3579, 0x720c, 0x7350, 0x0, 0x0);
        gbc.writeMem(0x11dd, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1fb);
        EXPECT(gbc.pc(), 0x11df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02CB
        gbc.setState(0xc901, 0xc1ed, 0xe480, 0xab9c, 0x1b37, 0x9a1b, 0x0, 0x1);
        gbc.writeMem(0xc901, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc1ed);
        EXPECT(gbc.pc(), 0xc903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc901), 0xcb);
        EXPECT(gbc.readMem(0xc902), 0x8b);
        // CB 8B 02CC
        gbc.setState(0x2b11, 0x843, 0x70e0, 0x66b9, 0x8eeb, 0x94f1, 0x1, 0x1);
        gbc.writeMem(0x2b11, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x843);
        EXPECT(gbc.pc(), 0x2b13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 02CD
        gbc.setState(0x2ce2, 0xdaa8, 0xc270, 0x22d5, 0x856f, 0xd90b, 0x0, 0x1);
        gbc.writeMem(0x2ce2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xdaa8);
        EXPECT(gbc.pc(), 0x2ce4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02CE
        gbc.setState(0xdc07, 0xec44, 0x57b0, 0x1225, 0xd284, 0xf9cd, 0x1, 0x1);
        gbc.writeMem(0xdc07, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xec44);
        EXPECT(gbc.pc(), 0xdc09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc07), 0xcb);
        EXPECT(gbc.readMem(0xdc08), 0x8b);
        // CB 8B 02CF
        gbc.setState(0x7194, 0x4e91, 0xf690, 0x1bee, 0x806b, 0x5469, 0x0, 0x0);
        gbc.writeMem(0x7194, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4e91);
        EXPECT(gbc.pc(), 0x7196);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02D0
        gbc.setState(0x3ec, 0xe2c8, 0xdc30, 0xb2c8, 0xde24, 0xa19c, 0x1, 0x1);
        gbc.writeMem(0x3ec, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe2c8);
        EXPECT(gbc.pc(), 0x3ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02D1
        gbc.setState(0x33bd, 0x756f, 0x35b0, 0x5930, 0x3404, 0xa886, 0x1, 0x0);
        gbc.writeMem(0x33bd, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x756f);
        EXPECT(gbc.pc(), 0x33bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02D2
        gbc.setState(0x2f5c, 0xa578, 0x8210, 0x9cc1, 0x60d8, 0x9c58, 0x1, 0x1);
        gbc.writeMem(0x2f5c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa578);
        EXPECT(gbc.pc(), 0x2f5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02D3
        gbc.setState(0xb252, 0x3283, 0xa4f0, 0x8241, 0x9dde, 0xe5f6, 0x0, 0x0);
        gbc.writeMem(0xb252, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3283);
        EXPECT(gbc.pc(), 0xb254);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb252), 0xcb);
        EXPECT(gbc.readMem(0xb253), 0x8b);
        // CB 8B 02D4
        gbc.setState(0x7bbd, 0x57e8, 0xf990, 0xdaed, 0x9c38, 0xd6f7, 0x1, 0x1);
        gbc.writeMem(0x7bbd, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x57e8);
        EXPECT(gbc.pc(), 0x7bbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02D5
        gbc.setState(0xcfb0, 0xe053, 0x7730, 0xb3f8, 0xceb2, 0x108e, 0x0, 0x1);
        gbc.writeMem(0xcfb0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe053);
        EXPECT(gbc.pc(), 0xcfb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfb0), 0xcb);
        EXPECT(gbc.readMem(0xcfb1), 0x8b);
        // CB 8B 02D7
        gbc.setState(0x3807, 0xdac9, 0xe5a0, 0x2536, 0x5d87, 0x437e, 0x0, 0x0);
        gbc.writeMem(0x3807, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xdac9);
        EXPECT(gbc.pc(), 0x3809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 02D9
        gbc.setState(0x5a9a, 0x1601, 0x4c70, 0x791b, 0x15e9, 0x83d, 0x0, 0x0);
        gbc.writeMem(0x5a9a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1601);
        EXPECT(gbc.pc(), 0x5a9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02DA
        gbc.setState(0x401a, 0x685d, 0x20c0, 0x91a3, 0x558d, 0xf1cd, 0x0, 0x1);
        gbc.writeMem(0x401a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x685d);
        EXPECT(gbc.pc(), 0x401c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 02DB
        gbc.setState(0x2316, 0x7e9c, 0x45e0, 0x5cc9, 0xea9b, 0x725e, 0x0, 0x1);
        gbc.writeMem(0x2316, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x7e9c);
        EXPECT(gbc.pc(), 0x2318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 02DC
        gbc.setState(0x9f2b, 0x99b7, 0x2590, 0xc4c2, 0x6c58, 0x5a5e, 0x0, 0x0);
        gbc.writeMem(0x9f2b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x99b7);
        EXPECT(gbc.pc(), 0x9f2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f2b), 0xcb);
        EXPECT(gbc.readMem(0x9f2c), 0x8b);
        // CB 8B 02DD
        gbc.setState(0xc713, 0xb9a7, 0xe9d0, 0x12c5, 0x910e, 0x5367, 0x1, 0x1);
        gbc.writeMem(0xc713, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb9a7);
        EXPECT(gbc.pc(), 0xc715);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc713), 0xcb);
        EXPECT(gbc.readMem(0xc714), 0x8b);
        // CB 8B 02DE
        gbc.setState(0x7231, 0x64a2, 0x8ef0, 0xe283, 0x8f31, 0x1948, 0x0, 0x1);
        gbc.writeMem(0x7231, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x64a2);
        EXPECT(gbc.pc(), 0x7233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02DF
        gbc.setState(0x8c0, 0xdd96, 0xc050, 0x6eb1, 0x29ea, 0x7760, 0x0, 0x0);
        gbc.writeMem(0x8c0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xdd96);
        EXPECT(gbc.pc(), 0x8c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02E0
        gbc.setState(0x7f85, 0x71ea, 0xcc30, 0x321a, 0xb54c, 0x2371, 0x0, 0x1);
        gbc.writeMem(0x7f85, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x71ea);
        EXPECT(gbc.pc(), 0x7f87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02E1
        gbc.setState(0x3a5, 0x2aaa, 0xa30, 0x9621, 0xffa4, 0x550b, 0x0, 0x1);
        gbc.writeMem(0x3a5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2aaa);
        EXPECT(gbc.pc(), 0x3a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02E2
        gbc.setState(0x536a, 0x1051, 0x40b0, 0xe390, 0x4251, 0x4e7c, 0x0, 0x0);
        gbc.writeMem(0x536a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1051);
        EXPECT(gbc.pc(), 0x536c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02E3
        gbc.setState(0x450, 0x1ace, 0x5000, 0x28ae, 0x40b3, 0xc16f, 0x0, 0x1);
        gbc.writeMem(0x450, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1ace);
        EXPECT(gbc.pc(), 0x452);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 02E4
        gbc.setState(0x6c0e, 0x4196, 0x9aa0, 0xbabf, 0x7ef6, 0xf209, 0x0, 0x1);
        gbc.writeMem(0x6c0e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4196);
        EXPECT(gbc.pc(), 0x6c10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 02E5
        gbc.setState(0x3ea1, 0xf93, 0xb9d0, 0x918, 0x1286, 0xa803, 0x0, 0x1);
        gbc.writeMem(0x3ea1, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf93);
        EXPECT(gbc.pc(), 0x3ea3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02E6
        gbc.setState(0xe956, 0xb8d, 0xe0e0, 0xdf74, 0x46d3, 0x2b1f, 0x1, 0x0);
        gbc.writeMem(0xe956, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb8d);
        EXPECT(gbc.pc(), 0xe958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe956), 0xcb);
        EXPECT(gbc.readMem(0xe957), 0x8b);
        // CB 8B 02E7
        gbc.setState(0xd8e4, 0xae42, 0xefa0, 0xf34e, 0x8f9e, 0xe56e, 0x0, 0x1);
        gbc.writeMem(0xd8e4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xae42);
        EXPECT(gbc.pc(), 0xd8e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8e4), 0xcb);
        EXPECT(gbc.readMem(0xd8e5), 0x8b);
        // CB 8B 02E8
        gbc.setState(0x63b8, 0x5ca4, 0xfaa0, 0x4abb, 0xd8de, 0xb067, 0x0, 0x1);
        gbc.writeMem(0x63b8, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5ca4);
        EXPECT(gbc.pc(), 0x63ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 02E9
        gbc.setState(0xb73e, 0x62e0, 0x7500, 0x3a96, 0xbb74, 0x114c, 0x1, 0x0);
        gbc.writeMem(0xb73e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x62e0);
        EXPECT(gbc.pc(), 0xb740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb73e), 0xcb);
        EXPECT(gbc.readMem(0xb73f), 0x8b);
        // CB 8B 02EA
        gbc.setState(0xe592, 0xaee7, 0x89c0, 0xe22, 0x9163, 0x3d35, 0x1, 0x0);
        gbc.writeMem(0xe592, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xaee7);
        EXPECT(gbc.pc(), 0xe594);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe592), 0xcb);
        EXPECT(gbc.readMem(0xe593), 0x8b);
        // CB 8B 02EB
        gbc.setState(0x5208, 0xe990, 0xd010, 0x4b9a, 0x56df, 0x40e7, 0x1, 0x0);
        gbc.writeMem(0x5208, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe990);
        EXPECT(gbc.pc(), 0x520a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02EC
        gbc.setState(0x86fd, 0x1f56, 0xa840, 0xc79e, 0x8f65, 0xeb34, 0x1, 0x0);
        gbc.writeMem(0x86fd, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1f56);
        EXPECT(gbc.pc(), 0x86ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86fd), 0xcb);
        EXPECT(gbc.readMem(0x86fe), 0x8b);
        // CB 8B 02ED
        gbc.setState(0xad13, 0x8d97, 0x23b0, 0x2d88, 0x9a7a, 0x7347, 0x0, 0x1);
        gbc.writeMem(0xad13, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8d97);
        EXPECT(gbc.pc(), 0xad15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad13), 0xcb);
        EXPECT(gbc.readMem(0xad14), 0x8b);
        // CB 8B 02EE
        gbc.setState(0xd0a0, 0x5b19, 0xb0a0, 0x6e63, 0x872a, 0xf3c4, 0x0, 0x0);
        gbc.writeMem(0xd0a0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5b19);
        EXPECT(gbc.pc(), 0xd0a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0a0), 0xcb);
        EXPECT(gbc.readMem(0xd0a1), 0x8b);
        // CB 8B 02EF
        gbc.setState(0x5612, 0xf4f8, 0x5c70, 0x8e8, 0x896a, 0x822c, 0x1, 0x0);
        gbc.writeMem(0x5612, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf4f8);
        EXPECT(gbc.pc(), 0x5614);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02F0
        gbc.setState(0xe4ba, 0x3772, 0x5de0, 0x5f96, 0x492d, 0x96e6, 0x1, 0x1);
        gbc.writeMem(0xe4ba, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3772);
        EXPECT(gbc.pc(), 0xe4bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4ba), 0xcb);
        EXPECT(gbc.readMem(0xe4bb), 0x8b);
        // CB 8B 02F1
        gbc.setState(0x52c7, 0x7eb9, 0x4df0, 0x487a, 0xe18c, 0xdc0d, 0x0, 0x0);
        gbc.writeMem(0x52c7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7eb9);
        EXPECT(gbc.pc(), 0x52c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02F2
        gbc.setState(0x61e8, 0xb2a7, 0xdde0, 0x7d2f, 0xd131, 0xfcfd, 0x1, 0x0);
        gbc.writeMem(0x61e8, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb2a7);
        EXPECT(gbc.pc(), 0x61ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 02F3
        gbc.setState(0xe0b4, 0xefcd, 0x6ab0, 0x3595, 0xb8de, 0x5bc3, 0x1, 0x1);
        gbc.writeMem(0xe0b4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xefcd);
        EXPECT(gbc.pc(), 0xe0b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0b4), 0xcb);
        EXPECT(gbc.readMem(0xe0b5), 0x8b);
        // CB 8B 02F4
        gbc.setState(0xd262, 0xfc0a, 0x9500, 0x6f85, 0xb3a5, 0xa0b8, 0x0, 0x0);
        gbc.writeMem(0xd262, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xfc0a);
        EXPECT(gbc.pc(), 0xd264);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd262), 0xcb);
        EXPECT(gbc.readMem(0xd263), 0x8b);
        // CB 8B 02F5
        gbc.setState(0x26e9, 0x8502, 0x27f0, 0xcf9b, 0xa8fe, 0xe99a, 0x1, 0x1);
        gbc.writeMem(0x26e9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8502);
        EXPECT(gbc.pc(), 0x26eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02F6
        gbc.setState(0x5d62, 0x37cf, 0x7650, 0x1083, 0xbdac, 0xf0e4, 0x1, 0x1);
        gbc.writeMem(0x5d62, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x37cf);
        EXPECT(gbc.pc(), 0x5d64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02F7
        gbc.setState(0xc157, 0x3a70, 0x1e90, 0x3f, 0x4ef8, 0x168e, 0x1, 0x1);
        gbc.writeMem(0xc157, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3a70);
        EXPECT(gbc.pc(), 0xc159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc157), 0xcb);
        EXPECT(gbc.readMem(0xc158), 0x8b);
        // CB 8B 02F8
        gbc.setState(0x95f3, 0xfb43, 0xc780, 0x8fac, 0xa70d, 0xcf9, 0x1, 0x0);
        gbc.writeMem(0x95f3, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xfb43);
        EXPECT(gbc.pc(), 0x95f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95f3), 0xcb);
        EXPECT(gbc.readMem(0x95f4), 0x8b);
        // CB 8B 02F9
        gbc.setState(0xd9bd, 0xc2f, 0x5c60, 0x33ca, 0x791e, 0x474a, 0x1, 0x1);
        gbc.writeMem(0xd9bd, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc2f);
        EXPECT(gbc.pc(), 0xd9bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9bd), 0xcb);
        EXPECT(gbc.readMem(0xd9be), 0x8b);
        // CB 8B 02FA
        gbc.setState(0x5f83, 0xef96, 0xb7c0, 0xecc2, 0x18fa, 0x23d3, 0x0, 0x0);
        gbc.writeMem(0x5f83, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xef96);
        EXPECT(gbc.pc(), 0x5f85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 02FB
        gbc.setState(0xc68d, 0xe500, 0x9790, 0x50db, 0x8a7, 0x1d7a, 0x0, 0x0);
        gbc.writeMem(0xc68d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe500);
        EXPECT(gbc.pc(), 0xc68f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc68d), 0xcb);
        EXPECT(gbc.readMem(0xc68e), 0x8b);
        // CB 8B 02FC
        gbc.setState(0x1aa5, 0xa0e6, 0x97d0, 0xfe6b, 0x687d, 0xb2bd, 0x1, 0x0);
        gbc.writeMem(0x1aa5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa0e6);
        EXPECT(gbc.pc(), 0x1aa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 02FD
        gbc.setState(0xe47b, 0x6e21, 0xa310, 0xd33c, 0x675b, 0xff2a, 0x0, 0x1);
        gbc.writeMem(0xe47b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x6e21);
        EXPECT(gbc.pc(), 0xe47d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe47b), 0xcb);
        EXPECT(gbc.readMem(0xe47c), 0x8b);
        // CB 8B 02FE
        gbc.setState(0x9b02, 0xb2e8, 0x1640, 0x9273, 0x1f05, 0xa0f5, 0x1, 0x1);
        gbc.writeMem(0x9b02, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xb2e8);
        EXPECT(gbc.pc(), 0x9b04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b02), 0xcb);
        EXPECT(gbc.readMem(0x9b03), 0x8b);
        // CB 8B 02FF
        gbc.setState(0xb912, 0x86df, 0xbfe0, 0x2dec, 0x6eaa, 0x167c, 0x1, 0x1);
        gbc.writeMem(0xb912, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x86df);
        EXPECT(gbc.pc(), 0xb914);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb912), 0xcb);
        EXPECT(gbc.readMem(0xb913), 0x8b);
        // CB 8B 0300
        gbc.setState(0x831c, 0x6012, 0x4680, 0xdf90, 0x163d, 0x8f3c, 0x1, 0x0);
        gbc.writeMem(0x831c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6012);
        EXPECT(gbc.pc(), 0x831e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x831c), 0xcb);
        EXPECT(gbc.readMem(0x831d), 0x8b);
        // CB 8B 0301
        gbc.setState(0x6c82, 0x4d1e, 0xe360, 0x6c7e, 0xcd4a, 0x1bc7, 0x0, 0x1);
        gbc.writeMem(0x6c82, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x4d1e);
        EXPECT(gbc.pc(), 0x6c84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0302
        gbc.setState(0xa4d6, 0x79c, 0x7ae0, 0x22b8, 0x8827, 0xcfdb, 0x1, 0x0);
        gbc.writeMem(0xa4d6, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x79c);
        EXPECT(gbc.pc(), 0xa4d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4d6), 0xcb);
        EXPECT(gbc.readMem(0xa4d7), 0x8b);
        // CB 8B 0303
        gbc.setState(0x8e76, 0x258f, 0xbb00, 0xb9a0, 0x2b30, 0xda7c, 0x0, 0x0);
        gbc.writeMem(0x8e76, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x258f);
        EXPECT(gbc.pc(), 0x8e78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e76), 0xcb);
        EXPECT(gbc.readMem(0x8e77), 0x8b);
        // CB 8B 0304
        gbc.setState(0x42d7, 0xae09, 0x78f0, 0x38b7, 0x58d5, 0x81f1, 0x0, 0x1);
        gbc.writeMem(0x42d7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xae09);
        EXPECT(gbc.pc(), 0x42d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0305
        gbc.setState(0x6748, 0x7604, 0x37f0, 0x3e96, 0x500e, 0x9aa4, 0x1, 0x0);
        gbc.writeMem(0x6748, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7604);
        EXPECT(gbc.pc(), 0x674a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0306
        gbc.setState(0xd5b4, 0xa9c8, 0x23e0, 0x55cb, 0xdfbd, 0x2ae6, 0x1, 0x0);
        gbc.writeMem(0xd5b4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa9c8);
        EXPECT(gbc.pc(), 0xd5b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5b4), 0xcb);
        EXPECT(gbc.readMem(0xd5b5), 0x8b);
        // CB 8B 0307
        gbc.setState(0x1294, 0x5b3e, 0x8440, 0x5ec8, 0x97b2, 0xa416, 0x1, 0x1);
        gbc.writeMem(0x1294, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5b3e);
        EXPECT(gbc.pc(), 0x1296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0308
        gbc.setState(0x9dfc, 0x9902, 0xf8a0, 0x9662, 0x4321, 0xe1b3, 0x1, 0x0);
        gbc.writeMem(0x9dfc, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9902);
        EXPECT(gbc.pc(), 0x9dfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dfc), 0xcb);
        EXPECT(gbc.readMem(0x9dfd), 0x8b);
        // CB 8B 0309
        gbc.setState(0xcd1f, 0xa2d5, 0x3660, 0x644b, 0x5ff5, 0x5a7c, 0x0, 0x0);
        gbc.writeMem(0xcd1f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa2d5);
        EXPECT(gbc.pc(), 0xcd21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd1f), 0xcb);
        EXPECT(gbc.readMem(0xcd20), 0x8b);
        // CB 8B 030B
        gbc.setState(0x2a91, 0x7ebb, 0x6750, 0xdff5, 0x968f, 0x416, 0x0, 0x1);
        gbc.writeMem(0x2a91, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7ebb);
        EXPECT(gbc.pc(), 0x2a93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 030C
        gbc.setState(0x41e0, 0x3c5f, 0xa6c0, 0xd619, 0xfe2d, 0xd0b3, 0x0, 0x0);
        gbc.writeMem(0x41e0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x3c5f);
        EXPECT(gbc.pc(), 0x41e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 030D
        gbc.setState(0x8b59, 0xe1ab, 0xc810, 0x20a1, 0x1bc1, 0xaa39, 0x1, 0x1);
        gbc.writeMem(0x8b59, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe1ab);
        EXPECT(gbc.pc(), 0x8b5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b59), 0xcb);
        EXPECT(gbc.readMem(0x8b5a), 0x8b);
        // CB 8B 030E
        gbc.setState(0x6023, 0x723d, 0x3c10, 0x3203, 0xd434, 0x4459, 0x0, 0x1);
        gbc.writeMem(0x6023, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x723d);
        EXPECT(gbc.pc(), 0x6025);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 030F
        gbc.setState(0x1434, 0x539c, 0x98d0, 0x1d26, 0x5989, 0xdf0d, 0x1, 0x0);
        gbc.writeMem(0x1434, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x539c);
        EXPECT(gbc.pc(), 0x1436);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0310
        gbc.setState(0xa68a, 0x398f, 0xf550, 0x8de0, 0x5f48, 0xec3e, 0x1, 0x1);
        gbc.writeMem(0xa68a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x398f);
        EXPECT(gbc.pc(), 0xa68c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa68a), 0xcb);
        EXPECT(gbc.readMem(0xa68b), 0x8b);
        // CB 8B 0311
        gbc.setState(0x38b4, 0x897, 0xd620, 0xdcbc, 0xa917, 0xf5cc, 0x0, 0x1);
        gbc.writeMem(0x38b4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x897);
        EXPECT(gbc.pc(), 0x38b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0312
        gbc.setState(0x1beb, 0xbf20, 0xfc80, 0x9e2e, 0xc062, 0x325f, 0x0, 0x1);
        gbc.writeMem(0x1beb, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xbf20);
        EXPECT(gbc.pc(), 0x1bed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0314
        gbc.setState(0xc41c, 0x37c3, 0xa550, 0xb030, 0x9655, 0x8a03, 0x0, 0x0);
        gbc.writeMem(0xc41c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x37c3);
        EXPECT(gbc.pc(), 0xc41e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc41c), 0xcb);
        EXPECT(gbc.readMem(0xc41d), 0x8b);
        // CB 8B 0315
        gbc.setState(0xb848, 0xe5a0, 0xc950, 0xdb76, 0x6a13, 0x720e, 0x1, 0x0);
        gbc.writeMem(0xb848, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe5a0);
        EXPECT(gbc.pc(), 0xb84a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb848), 0xcb);
        EXPECT(gbc.readMem(0xb849), 0x8b);
        // CB 8B 0316
        gbc.setState(0x9ba7, 0x29a6, 0x32b0, 0xde8e, 0x58f4, 0xd3ef, 0x1, 0x1);
        gbc.writeMem(0x9ba7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x29a6);
        EXPECT(gbc.pc(), 0x9ba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ba7), 0xcb);
        EXPECT(gbc.readMem(0x9ba8), 0x8b);
        // CB 8B 0317
        gbc.setState(0xdf04, 0xbe49, 0x1c40, 0xa05d, 0xa4, 0xd617, 0x1, 0x1);
        gbc.writeMem(0xdf04, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xbe49);
        EXPECT(gbc.pc(), 0xdf06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf04), 0xcb);
        EXPECT(gbc.readMem(0xdf05), 0x8b);
        // CB 8B 0318
        gbc.setState(0x5f80, 0x9082, 0xc500, 0xe7b6, 0x29de, 0x139, 0x1, 0x0);
        gbc.writeMem(0x5f80, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9082);
        EXPECT(gbc.pc(), 0x5f82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0319
        gbc.setState(0x7f8d, 0xf66f, 0x8930, 0x8822, 0x8b4d, 0xf51f, 0x0, 0x0);
        gbc.writeMem(0x7f8d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf66f);
        EXPECT(gbc.pc(), 0x7f8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 031A
        gbc.setState(0x6296, 0x52cb, 0x2cd0, 0xd76, 0xa615, 0x594d, 0x1, 0x0);
        gbc.writeMem(0x6296, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x52cb);
        EXPECT(gbc.pc(), 0x6298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 031B
        gbc.setState(0xcff4, 0x3d28, 0xa3e0, 0x9fb8, 0x932, 0xff1f, 0x0, 0x0);
        gbc.writeMem(0xcff4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3d28);
        EXPECT(gbc.pc(), 0xcff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcff4), 0xcb);
        EXPECT(gbc.readMem(0xcff5), 0x8b);
        // CB 8B 031C
        gbc.setState(0xbfde, 0xb659, 0xbf10, 0x585f, 0x1ae6, 0x4ad0, 0x0, 0x0);
        gbc.writeMem(0xbfde, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xb659);
        EXPECT(gbc.pc(), 0xbfe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfde), 0xcb);
        EXPECT(gbc.readMem(0xbfdf), 0x8b);
        // CB 8B 031D
        gbc.setState(0x6118, 0x6bd0, 0xfbc0, 0x6743, 0x86fe, 0x73c1, 0x0, 0x1);
        gbc.writeMem(0x6118, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6bd0);
        EXPECT(gbc.pc(), 0x611a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 031E
        gbc.setState(0x750c, 0xef1b, 0xee20, 0x9fb4, 0x7221, 0xe1b1, 0x0, 0x1);
        gbc.writeMem(0x750c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xef1b);
        EXPECT(gbc.pc(), 0x750e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 031F
        gbc.setState(0x1a2d, 0x472f, 0xdbc0, 0xba1c, 0x62be, 0x9146, 0x0, 0x1);
        gbc.writeMem(0x1a2d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x472f);
        EXPECT(gbc.pc(), 0x1a2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0320
        gbc.setState(0x4e81, 0x9e47, 0x98b0, 0x5422, 0x6cf3, 0xe4dc, 0x0, 0x0);
        gbc.writeMem(0x4e81, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9e47);
        EXPECT(gbc.pc(), 0x4e83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0321
        gbc.setState(0x4be5, 0xc29d, 0xc8d0, 0xb65e, 0x83b5, 0xa73f, 0x0, 0x1);
        gbc.writeMem(0x4be5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc29d);
        EXPECT(gbc.pc(), 0x4be7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0322
        gbc.setState(0xda97, 0x74ce, 0x35a0, 0x1be9, 0x7818, 0xeca0, 0x1, 0x0);
        gbc.writeMem(0xda97, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x74ce);
        EXPECT(gbc.pc(), 0xda99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda97), 0xcb);
        EXPECT(gbc.readMem(0xda98), 0x8b);
        // CB 8B 0323
        gbc.setState(0x1cf4, 0xc4f8, 0x1330, 0xefad, 0x8a2, 0xa093, 0x0, 0x0);
        gbc.writeMem(0x1cf4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc4f8);
        EXPECT(gbc.pc(), 0x1cf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0324
        gbc.setState(0x5c37, 0x7333, 0xbee0, 0xd3de, 0xdb7a, 0xdcbd, 0x0, 0x0);
        gbc.writeMem(0x5c37, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7333);
        EXPECT(gbc.pc(), 0x5c39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0325
        gbc.setState(0x4b58, 0x2100, 0xb400, 0x9f74, 0x320d, 0xba92, 0x0, 0x1);
        gbc.writeMem(0x4b58, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2100);
        EXPECT(gbc.pc(), 0x4b5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0326
        gbc.setState(0xa63b, 0x7a55, 0xf6f0, 0xd1a2, 0xd0f2, 0x21cd, 0x1, 0x0);
        gbc.writeMem(0xa63b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x7a55);
        EXPECT(gbc.pc(), 0xa63d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa63b), 0xcb);
        EXPECT(gbc.readMem(0xa63c), 0x8b);
        // CB 8B 0327
        gbc.setState(0x847e, 0xdaeb, 0xe600, 0x1206, 0x5996, 0x1d90, 0x0, 0x0);
        gbc.writeMem(0x847e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xdaeb);
        EXPECT(gbc.pc(), 0x8480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x847e), 0xcb);
        EXPECT(gbc.readMem(0x847f), 0x8b);
        // CB 8B 0328
        gbc.setState(0x7dcd, 0xb561, 0x9aa0, 0xa50e, 0xb502, 0xf295, 0x0, 0x0);
        gbc.writeMem(0x7dcd, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb561);
        EXPECT(gbc.pc(), 0x7dcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0329
        gbc.setState(0xb3d7, 0x5cf1, 0x4600, 0xf0ce, 0x5327, 0xcc27, 0x0, 0x0);
        gbc.writeMem(0xb3d7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5cf1);
        EXPECT(gbc.pc(), 0xb3d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3d7), 0xcb);
        EXPECT(gbc.readMem(0xb3d8), 0x8b);
        // CB 8B 032A
        gbc.setState(0xc4d5, 0x9c9d, 0xecf0, 0xcf9b, 0x5855, 0x5a30, 0x1, 0x0);
        gbc.writeMem(0xc4d5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9c9d);
        EXPECT(gbc.pc(), 0xc4d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4d5), 0xcb);
        EXPECT(gbc.readMem(0xc4d6), 0x8b);
        // CB 8B 032B
        gbc.setState(0x41fa, 0x9510, 0xfa70, 0x54b0, 0x857d, 0x5ca6, 0x0, 0x1);
        gbc.writeMem(0x41fa, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9510);
        EXPECT(gbc.pc(), 0x41fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 032C
        gbc.setState(0x30ce, 0xb9c2, 0x3c10, 0xf7d, 0x784c, 0x731f, 0x1, 0x0);
        gbc.writeMem(0x30ce, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb9c2);
        EXPECT(gbc.pc(), 0x30d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 032D
        gbc.setState(0xc518, 0x71d5, 0x10c0, 0xe768, 0xffde, 0xe115, 0x0, 0x1);
        gbc.writeMem(0xc518, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x71d5);
        EXPECT(gbc.pc(), 0xc51a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc518), 0xcb);
        EXPECT(gbc.readMem(0xc519), 0x8b);
        // CB 8B 032E
        gbc.setState(0x8c4e, 0x95b8, 0x5d30, 0xd580, 0xcf27, 0x7bb0, 0x1, 0x1);
        gbc.writeMem(0x8c4e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x95b8);
        EXPECT(gbc.pc(), 0x8c50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c4e), 0xcb);
        EXPECT(gbc.readMem(0x8c4f), 0x8b);
        // CB 8B 032F
        gbc.setState(0xc7d7, 0xea84, 0x3fd0, 0x5d26, 0xe823, 0xcff0, 0x1, 0x0);
        gbc.writeMem(0xc7d7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xea84);
        EXPECT(gbc.pc(), 0xc7d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7d7), 0xcb);
        EXPECT(gbc.readMem(0xc7d8), 0x8b);
        // CB 8B 0330
        gbc.setState(0x5f23, 0x19fc, 0x7c80, 0xbb73, 0xf5fb, 0x37f7, 0x0, 0x0);
        gbc.writeMem(0x5f23, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x19fc);
        EXPECT(gbc.pc(), 0x5f25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0331
        gbc.setState(0x556c, 0xb058, 0x33c0, 0x336e, 0x4410, 0xfdb3, 0x0, 0x0);
        gbc.writeMem(0x556c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb058);
        EXPECT(gbc.pc(), 0x556e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0332
        gbc.setState(0x56b2, 0x4a39, 0xc070, 0xf526, 0xef33, 0x1ace, 0x0, 0x0);
        gbc.writeMem(0x56b2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4a39);
        EXPECT(gbc.pc(), 0x56b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0333
        gbc.setState(0x5f67, 0x9251, 0x9b50, 0xc709, 0x6a4d, 0xafcc, 0x1, 0x0);
        gbc.writeMem(0x5f67, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9251);
        EXPECT(gbc.pc(), 0x5f69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0334
        gbc.setState(0xde58, 0xc7be, 0x9cc0, 0x5877, 0x45ff, 0xb2c1, 0x1, 0x1);
        gbc.writeMem(0xde58, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc7be);
        EXPECT(gbc.pc(), 0xde5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde58), 0xcb);
        EXPECT(gbc.readMem(0xde59), 0x8b);
        // CB 8B 0335
        gbc.setState(0xaf42, 0xbcad, 0x8bc0, 0x37c4, 0x9733, 0x8777, 0x1, 0x1);
        gbc.writeMem(0xaf42, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xbcad);
        EXPECT(gbc.pc(), 0xaf44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf42), 0xcb);
        EXPECT(gbc.readMem(0xaf43), 0x8b);
        // CB 8B 0336
        gbc.setState(0xe1e3, 0xb8b6, 0xb610, 0xe02d, 0x8860, 0x60b8, 0x0, 0x0);
        gbc.writeMem(0xe1e3, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb8b6);
        EXPECT(gbc.pc(), 0xe1e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1e3), 0xcb);
        EXPECT(gbc.readMem(0xe1e4), 0x8b);
        // CB 8B 0337
        gbc.setState(0x93ad, 0x1f79, 0xd990, 0x1486, 0xb2f1, 0x2b7b, 0x1, 0x1);
        gbc.writeMem(0x93ad, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1f79);
        EXPECT(gbc.pc(), 0x93af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ad), 0xcb);
        EXPECT(gbc.readMem(0x93ae), 0x8b);
        // CB 8B 0338
        gbc.setState(0x735e, 0xf5d1, 0x13c0, 0x1bcd, 0xbf70, 0x7a7f, 0x1, 0x1);
        gbc.writeMem(0x735e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf5d1);
        EXPECT(gbc.pc(), 0x7360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0339
        gbc.setState(0x2ca3, 0x186c, 0x1350, 0x8ae, 0xdf93, 0x6640, 0x0, 0x0);
        gbc.writeMem(0x2ca3, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x186c);
        EXPECT(gbc.pc(), 0x2ca5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 033A
        gbc.setState(0x66d4, 0x6fd1, 0xaf00, 0xe616, 0xd34d, 0xc6d6, 0x0, 0x0);
        gbc.writeMem(0x66d4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6fd1);
        EXPECT(gbc.pc(), 0x66d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 033B
        gbc.setState(0x8cc9, 0xac12, 0x5750, 0x6eef, 0xa02, 0xb7ae, 0x0, 0x1);
        gbc.writeMem(0x8cc9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xac12);
        EXPECT(gbc.pc(), 0x8ccb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cc9), 0xcb);
        EXPECT(gbc.readMem(0x8cca), 0x8b);
        // CB 8B 033C
        gbc.setState(0x78a2, 0xc985, 0x4a0, 0xc542, 0x4fa2, 0x684b, 0x1, 0x0);
        gbc.writeMem(0x78a2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc985);
        EXPECT(gbc.pc(), 0x78a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 033D
        gbc.setState(0xa3a8, 0xf535, 0xd8e0, 0x6547, 0x1c0d, 0x6842, 0x1, 0x1);
        gbc.writeMem(0xa3a8, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf535);
        EXPECT(gbc.pc(), 0xa3aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3a8), 0xcb);
        EXPECT(gbc.readMem(0xa3a9), 0x8b);
        // CB 8B 033E
        gbc.setState(0xc304, 0xe97, 0xf260, 0x6817, 0x4439, 0x5455, 0x0, 0x1);
        gbc.writeMem(0xc304, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe97);
        EXPECT(gbc.pc(), 0xc306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc304), 0xcb);
        EXPECT(gbc.readMem(0xc305), 0x8b);
        // CB 8B 033F
        gbc.setState(0x5e24, 0xe34d, 0xcae0, 0x3b26, 0x8aed, 0xbe93, 0x1, 0x1);
        gbc.writeMem(0x5e24, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe34d);
        EXPECT(gbc.pc(), 0x5e26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0340
        gbc.setState(0xb49b, 0x91cf, 0xdcf0, 0x9d89, 0x1bc, 0xac7c, 0x0, 0x0);
        gbc.writeMem(0xb49b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x91cf);
        EXPECT(gbc.pc(), 0xb49d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb49b), 0xcb);
        EXPECT(gbc.readMem(0xb49c), 0x8b);
        // CB 8B 0341
        gbc.setState(0xb9a2, 0xc80d, 0x53e0, 0x21be, 0x4da0, 0x9a35, 0x1, 0x0);
        gbc.writeMem(0xb9a2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc80d);
        EXPECT(gbc.pc(), 0xb9a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9a2), 0xcb);
        EXPECT(gbc.readMem(0xb9a3), 0x8b);
        // CB 8B 0342
        gbc.setState(0xa150, 0x5daf, 0x9e70, 0x8d9, 0x8db9, 0x57df, 0x0, 0x0);
        gbc.writeMem(0xa150, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5daf);
        EXPECT(gbc.pc(), 0xa152);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa150), 0xcb);
        EXPECT(gbc.readMem(0xa151), 0x8b);
        // CB 8B 0343
        gbc.setState(0x4e1d, 0x3114, 0x8690, 0xb0ed, 0xc793, 0xdba6, 0x0, 0x1);
        gbc.writeMem(0x4e1d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3114);
        EXPECT(gbc.pc(), 0x4e1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0345
        gbc.setState(0x88e, 0x9ad6, 0x68d0, 0x3dd3, 0x2716, 0x3381, 0x1, 0x0);
        gbc.writeMem(0x88e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9ad6);
        EXPECT(gbc.pc(), 0x890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0347
        gbc.setState(0xe97a, 0x643b, 0x7f20, 0x939c, 0xc89c, 0x4bf6, 0x1, 0x0);
        gbc.writeMem(0xe97a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x643b);
        EXPECT(gbc.pc(), 0xe97c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe97a), 0xcb);
        EXPECT(gbc.readMem(0xe97b), 0x8b);
        // CB 8B 0348
        gbc.setState(0x544d, 0x53ac, 0xb1f0, 0x2ff4, 0xf7e9, 0xed44, 0x1, 0x1);
        gbc.writeMem(0x544d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x53ac);
        EXPECT(gbc.pc(), 0x544f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0349
        gbc.setState(0x448b, 0x2287, 0x55e0, 0xe7ac, 0x26a0, 0x1f8a, 0x0, 0x1);
        gbc.writeMem(0x448b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2287);
        EXPECT(gbc.pc(), 0x448d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 034A
        gbc.setState(0xd16e, 0xac44, 0x42d0, 0x6fa1, 0x553c, 0x21b0, 0x1, 0x0);
        gbc.writeMem(0xd16e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xac44);
        EXPECT(gbc.pc(), 0xd170);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd16e), 0xcb);
        EXPECT(gbc.readMem(0xd16f), 0x8b);
        // CB 8B 034B
        gbc.setState(0xb753, 0x4a82, 0xc420, 0xb2e0, 0x55b1, 0x7000, 0x1, 0x1);
        gbc.writeMem(0xb753, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4a82);
        EXPECT(gbc.pc(), 0xb755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb753), 0xcb);
        EXPECT(gbc.readMem(0xb754), 0x8b);
        // CB 8B 034C
        gbc.setState(0x6f18, 0xdd9d, 0x9420, 0x26bc, 0x8986, 0x8ff6, 0x0, 0x1);
        gbc.writeMem(0x6f18, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xdd9d);
        EXPECT(gbc.pc(), 0x6f1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 034D
        gbc.setState(0xb353, 0x112e, 0x79c0, 0x7ecc, 0x8de, 0x13b2, 0x1, 0x0);
        gbc.writeMem(0xb353, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x112e);
        EXPECT(gbc.pc(), 0xb355);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb353), 0xcb);
        EXPECT(gbc.readMem(0xb354), 0x8b);
        // CB 8B 034F
        gbc.setState(0x1a68, 0x2190, 0xcc90, 0xc4a3, 0x7f73, 0x60ac, 0x1, 0x1);
        gbc.writeMem(0x1a68, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2190);
        EXPECT(gbc.pc(), 0x1a6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0350
        gbc.setState(0x365b, 0x1fe9, 0xe2a0, 0xdc5, 0x5a1e, 0x14b1, 0x1, 0x1);
        gbc.writeMem(0x365b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1fe9);
        EXPECT(gbc.pc(), 0x365d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0351
        gbc.setState(0xb461, 0x2a01, 0x9aa0, 0x2d8e, 0xcd54, 0xcc57, 0x0, 0x1);
        gbc.writeMem(0xb461, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2a01);
        EXPECT(gbc.pc(), 0xb463);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb461), 0xcb);
        EXPECT(gbc.readMem(0xb462), 0x8b);
        // CB 8B 0352
        gbc.setState(0xb7e5, 0xa3ab, 0xb8b0, 0xb59f, 0x7f15, 0xff92, 0x1, 0x1);
        gbc.writeMem(0xb7e5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xa3ab);
        EXPECT(gbc.pc(), 0xb7e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e5), 0xcb);
        EXPECT(gbc.readMem(0xb7e6), 0x8b);
        // CB 8B 0353
        gbc.setState(0x5b72, 0x867, 0x9d30, 0xa315, 0x76d1, 0x99a5, 0x0, 0x0);
        gbc.writeMem(0x5b72, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x867);
        EXPECT(gbc.pc(), 0x5b74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0354
        gbc.setState(0x3ab3, 0x490b, 0xfe00, 0x518f, 0x9675, 0xfb13, 0x1, 0x1);
        gbc.writeMem(0x3ab3, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x490b);
        EXPECT(gbc.pc(), 0x3ab5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0355
        gbc.setState(0x381d, 0x9ee4, 0x62c0, 0xd5d8, 0x852f, 0x1d2d, 0x0, 0x0);
        gbc.writeMem(0x381d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9ee4);
        EXPECT(gbc.pc(), 0x381f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0356
        gbc.setState(0xbba1, 0xd9ca, 0x2b40, 0xb8f9, 0x1ed7, 0xe5e6, 0x0, 0x0);
        gbc.writeMem(0xbba1, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd9ca);
        EXPECT(gbc.pc(), 0xbba3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbba1), 0xcb);
        EXPECT(gbc.readMem(0xbba2), 0x8b);
        // CB 8B 0357
        gbc.setState(0x6873, 0xd9a3, 0xa160, 0xcbea, 0x191, 0x4d0f, 0x0, 0x1);
        gbc.writeMem(0x6873, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd9a3);
        EXPECT(gbc.pc(), 0x6875);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0358
        gbc.setState(0x90ba, 0xf690, 0xcf70, 0x9540, 0xcca7, 0x638f, 0x0, 0x0);
        gbc.writeMem(0x90ba, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf690);
        EXPECT(gbc.pc(), 0x90bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90ba), 0xcb);
        EXPECT(gbc.readMem(0x90bb), 0x8b);
        // CB 8B 0359
        gbc.setState(0x6871, 0xd26f, 0xe920, 0x2980, 0xe0d6, 0xa79, 0x0, 0x1);
        gbc.writeMem(0x6871, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd26f);
        EXPECT(gbc.pc(), 0x6873);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 035A
        gbc.setState(0x4999, 0x9f5a, 0x4170, 0xf368, 0xb9d4, 0x8267, 0x0, 0x0);
        gbc.writeMem(0x4999, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9f5a);
        EXPECT(gbc.pc(), 0x499b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 035B
        gbc.setState(0xde2c, 0xeda, 0x5c20, 0x2d5a, 0x5282, 0xd082, 0x1, 0x1);
        gbc.writeMem(0xde2c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xeda);
        EXPECT(gbc.pc(), 0xde2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde2c), 0xcb);
        EXPECT(gbc.readMem(0xde2d), 0x8b);
        // CB 8B 035C
        gbc.setState(0x1d0, 0x61df, 0x2ee0, 0x5cd8, 0x8456, 0x74a3, 0x0, 0x1);
        gbc.writeMem(0x1d0, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x61df);
        EXPECT(gbc.pc(), 0x1d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 035D
        gbc.setState(0x92b8, 0x7ad8, 0x9f50, 0xa53e, 0xdf4a, 0x7ed3, 0x0, 0x0);
        gbc.writeMem(0x92b8, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7ad8);
        EXPECT(gbc.pc(), 0x92ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92b8), 0xcb);
        EXPECT(gbc.readMem(0x92b9), 0x8b);
        // CB 8B 035E
        gbc.setState(0x92b1, 0x6482, 0x1e50, 0x69b2, 0xb7c7, 0x2b79, 0x1, 0x0);
        gbc.writeMem(0x92b1, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6482);
        EXPECT(gbc.pc(), 0x92b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92b1), 0xcb);
        EXPECT(gbc.readMem(0x92b2), 0x8b);
        // CB 8B 035F
        gbc.setState(0xa38c, 0x410c, 0x3670, 0x26ed, 0xc57e, 0x3a61, 0x0, 0x0);
        gbc.writeMem(0xa38c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x410c);
        EXPECT(gbc.pc(), 0xa38e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa38c), 0xcb);
        EXPECT(gbc.readMem(0xa38d), 0x8b);
        // CB 8B 0360
        gbc.setState(0x7423, 0xaed6, 0xda70, 0xb22b, 0xdb23, 0x4e0d, 0x1, 0x0);
        gbc.writeMem(0x7423, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xaed6);
        EXPECT(gbc.pc(), 0x7425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0362
        gbc.setState(0xa090, 0xba20, 0x3cd0, 0x5803, 0xdc41, 0x78d6, 0x0, 0x0);
        gbc.writeMem(0xa090, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xba20);
        EXPECT(gbc.pc(), 0xa092);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa090), 0xcb);
        EXPECT(gbc.readMem(0xa091), 0x8b);
        // CB 8B 0363
        gbc.setState(0xe93e, 0xf0af, 0xd430, 0x5273, 0x714d, 0xc5c1, 0x1, 0x0);
        gbc.writeMem(0xe93e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf0af);
        EXPECT(gbc.pc(), 0xe940);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe93e), 0xcb);
        EXPECT(gbc.readMem(0xe93f), 0x8b);
        // CB 8B 0364
        gbc.setState(0xce79, 0xe7d4, 0x4e20, 0x6d4b, 0x26e, 0x2f65, 0x1, 0x1);
        gbc.writeMem(0xce79, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe7d4);
        EXPECT(gbc.pc(), 0xce7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce79), 0xcb);
        EXPECT(gbc.readMem(0xce7a), 0x8b);
        // CB 8B 0365
        gbc.setState(0x4c2f, 0xe2b8, 0xea80, 0x17ec, 0xbb27, 0x4cdf, 0x0, 0x0);
        gbc.writeMem(0x4c2f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe2b8);
        EXPECT(gbc.pc(), 0x4c31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0366
        gbc.setState(0x869d, 0x4478, 0x3380, 0x137b, 0x2ba0, 0x47d0, 0x0, 0x1);
        gbc.writeMem(0x869d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x4478);
        EXPECT(gbc.pc(), 0x869f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x869d), 0xcb);
        EXPECT(gbc.readMem(0x869e), 0x8b);
        // CB 8B 0367
        gbc.setState(0x975f, 0x311, 0x81b0, 0x7840, 0x6218, 0x68a2, 0x1, 0x1);
        gbc.writeMem(0x975f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x311);
        EXPECT(gbc.pc(), 0x9761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x975f), 0xcb);
        EXPECT(gbc.readMem(0x9760), 0x8b);
        // CB 8B 0368
        gbc.setState(0x538a, 0x942c, 0x1a40, 0x24f0, 0x43ed, 0xa99d, 0x1, 0x0);
        gbc.writeMem(0x538a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x942c);
        EXPECT(gbc.pc(), 0x538c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0369
        gbc.setState(0x1972, 0xb72c, 0x2d00, 0x3704, 0x9b5e, 0x9ca0, 0x0, 0x0);
        gbc.writeMem(0x1972, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb72c);
        EXPECT(gbc.pc(), 0x1974);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 036A
        gbc.setState(0xd0d, 0x3122, 0x550, 0xdbcf, 0x2640, 0x352c, 0x1, 0x0);
        gbc.writeMem(0xd0d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3122);
        EXPECT(gbc.pc(), 0xd0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 036B
        gbc.setState(0xea1d, 0x803a, 0xa6f0, 0x40cf, 0xfbd5, 0xb5b2, 0x0, 0x0);
        gbc.writeMem(0xea1d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x803a);
        EXPECT(gbc.pc(), 0xea1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea1d), 0xcb);
        EXPECT(gbc.readMem(0xea1e), 0x8b);
        // CB 8B 036C
        gbc.setState(0x804c, 0x8a10, 0xa860, 0x2c63, 0xbf9a, 0xf162, 0x0, 0x0);
        gbc.writeMem(0x804c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8a10);
        EXPECT(gbc.pc(), 0x804e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x804c), 0xcb);
        EXPECT(gbc.readMem(0x804d), 0x8b);
        // CB 8B 036D
        gbc.setState(0x7f17, 0x47b3, 0x1200, 0x4eda, 0x8718, 0xf1b3, 0x0, 0x0);
        gbc.writeMem(0x7f17, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x47b3);
        EXPECT(gbc.pc(), 0x7f19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 036E
        gbc.setState(0x958f, 0xc53c, 0xa7c0, 0x8e3c, 0x304b, 0x7849, 0x1, 0x0);
        gbc.writeMem(0x958f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc53c);
        EXPECT(gbc.pc(), 0x9591);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x958f), 0xcb);
        EXPECT(gbc.readMem(0x9590), 0x8b);
        // CB 8B 036F
        gbc.setState(0xd418, 0xb0ab, 0xb3f0, 0x9069, 0x2158, 0x77bd, 0x0, 0x1);
        gbc.writeMem(0xd418, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb0ab);
        EXPECT(gbc.pc(), 0xd41a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd418), 0xcb);
        EXPECT(gbc.readMem(0xd419), 0x8b);
        // CB 8B 0370
        gbc.setState(0x8ae8, 0x663f, 0x84d0, 0xf92d, 0x1ac, 0x3a34, 0x0, 0x1);
        gbc.writeMem(0x8ae8, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x663f);
        EXPECT(gbc.pc(), 0x8aea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ae8), 0xcb);
        EXPECT(gbc.readMem(0x8ae9), 0x8b);
        // CB 8B 0371
        gbc.setState(0xc63c, 0xaee9, 0x7b80, 0x66cf, 0x21d0, 0xa8a0, 0x1, 0x0);
        gbc.writeMem(0xc63c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xaee9);
        EXPECT(gbc.pc(), 0xc63e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc63c), 0xcb);
        EXPECT(gbc.readMem(0xc63d), 0x8b);
        // CB 8B 0372
        gbc.setState(0x7b5, 0xed18, 0xf140, 0x7bd2, 0xd888, 0xfc50, 0x0, 0x0);
        gbc.writeMem(0x7b5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xed18);
        EXPECT(gbc.pc(), 0x7b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0373
        gbc.setState(0x3f86, 0x6334, 0xaa90, 0x696f, 0xb04f, 0x3dd, 0x1, 0x1);
        gbc.writeMem(0x3f86, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6334);
        EXPECT(gbc.pc(), 0x3f88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0374
        gbc.setState(0xbb6a, 0x1ac9, 0xdd00, 0x2020, 0xd63, 0xa6bd, 0x1, 0x1);
        gbc.writeMem(0xbb6a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1ac9);
        EXPECT(gbc.pc(), 0xbb6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb6a), 0xcb);
        EXPECT(gbc.readMem(0xbb6b), 0x8b);
        // CB 8B 0375
        gbc.setState(0xac0d, 0x92e5, 0xe6c0, 0x9bfe, 0x9ca8, 0x4487, 0x1, 0x0);
        gbc.writeMem(0xac0d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x92e5);
        EXPECT(gbc.pc(), 0xac0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac0d), 0xcb);
        EXPECT(gbc.readMem(0xac0e), 0x8b);
        // CB 8B 0376
        gbc.setState(0x95b2, 0x64da, 0x40d0, 0x9ab0, 0x962a, 0x737d, 0x0, 0x1);
        gbc.writeMem(0x95b2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x64da);
        EXPECT(gbc.pc(), 0x95b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95b2), 0xcb);
        EXPECT(gbc.readMem(0x95b3), 0x8b);
        // CB 8B 0377
        gbc.setState(0x608f, 0xc665, 0x8260, 0x98c6, 0xe8e0, 0x15de, 0x1, 0x0);
        gbc.writeMem(0x608f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc665);
        EXPECT(gbc.pc(), 0x6091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0378
        gbc.setState(0x54eb, 0xb228, 0x9900, 0x72d8, 0xcc57, 0x2eac, 0x0, 0x0);
        gbc.writeMem(0x54eb, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb228);
        EXPECT(gbc.pc(), 0x54ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0379
        gbc.setState(0x4ce6, 0x412, 0xabd0, 0xa02d, 0x3236, 0x289, 0x0, 0x1);
        gbc.writeMem(0x4ce6, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x412);
        EXPECT(gbc.pc(), 0x4ce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 037A
        gbc.setState(0x2f31, 0x965f, 0x7790, 0xf79b, 0x4021, 0x354a, 0x0, 0x1);
        gbc.writeMem(0x2f31, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x965f);
        EXPECT(gbc.pc(), 0x2f33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 037B
        gbc.setState(0xcac, 0xacb8, 0x4810, 0x21c8, 0xbb17, 0xd240, 0x1, 0x0);
        gbc.writeMem(0xcac, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xacb8);
        EXPECT(gbc.pc(), 0xcae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 037C
        gbc.setState(0xec96, 0x857e, 0x6060, 0x97bd, 0xa52a, 0xd3ad, 0x0, 0x0);
        gbc.writeMem(0xec96, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x857e);
        EXPECT(gbc.pc(), 0xec98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec96), 0xcb);
        EXPECT(gbc.readMem(0xec97), 0x8b);
        // CB 8B 037D
        gbc.setState(0xe4ae, 0x2789, 0x1430, 0x4ef1, 0xd6a5, 0xaa5e, 0x1, 0x0);
        gbc.writeMem(0xe4ae, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2789);
        EXPECT(gbc.pc(), 0xe4b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4ae), 0xcb);
        EXPECT(gbc.readMem(0xe4af), 0x8b);
        // CB 8B 037E
        gbc.setState(0x8597, 0x552e, 0xd000, 0x401e, 0x4417, 0x8eee, 0x1, 0x0);
        gbc.writeMem(0x8597, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x552e);
        EXPECT(gbc.pc(), 0x8599);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8597), 0xcb);
        EXPECT(gbc.readMem(0x8598), 0x8b);
        // CB 8B 037F
        gbc.setState(0xd977, 0xa95e, 0x7720, 0x38f3, 0x6733, 0x7109, 0x0, 0x1);
        gbc.writeMem(0xd977, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa95e);
        EXPECT(gbc.pc(), 0xd979);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd977), 0xcb);
        EXPECT(gbc.readMem(0xd978), 0x8b);
        // CB 8B 0380
        gbc.setState(0xeb67, 0xfd42, 0x2940, 0xf57c, 0x1ba6, 0xc1c1, 0x1, 0x0);
        gbc.writeMem(0xeb67, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xfd42);
        EXPECT(gbc.pc(), 0xeb69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb67), 0xcb);
        EXPECT(gbc.readMem(0xeb68), 0x8b);
        // CB 8B 0381
        gbc.setState(0x4327, 0xf17a, 0x440, 0x98c9, 0x49a4, 0xf338, 0x0, 0x0);
        gbc.writeMem(0x4327, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf17a);
        EXPECT(gbc.pc(), 0x4329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0382
        gbc.setState(0x8d55, 0x32e0, 0xec30, 0x7cd0, 0x6168, 0x3fca, 0x0, 0x0);
        gbc.writeMem(0x8d55, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x32e0);
        EXPECT(gbc.pc(), 0x8d57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d55), 0xcb);
        EXPECT(gbc.readMem(0x8d56), 0x8b);
        // CB 8B 0383
        gbc.setState(0x8602, 0x93b, 0x3a80, 0x104c, 0x56b2, 0x34a7, 0x0, 0x1);
        gbc.writeMem(0x8602, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x93b);
        EXPECT(gbc.pc(), 0x8604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8602), 0xcb);
        EXPECT(gbc.readMem(0x8603), 0x8b);
        // CB 8B 0384
        gbc.setState(0x29a5, 0x58a5, 0xc1f0, 0x8183, 0x55a2, 0x71b3, 0x0, 0x1);
        gbc.writeMem(0x29a5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x58a5);
        EXPECT(gbc.pc(), 0x29a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0385
        gbc.setState(0xdafc, 0xeef8, 0xf540, 0x5a4d, 0x90b4, 0x8c34, 0x1, 0x1);
        gbc.writeMem(0xdafc, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xeef8);
        EXPECT(gbc.pc(), 0xdafe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdafc), 0xcb);
        EXPECT(gbc.readMem(0xdafd), 0x8b);
        // CB 8B 0386
        gbc.setState(0x8388, 0x7216, 0x860, 0xbfd7, 0x997, 0x61ab, 0x1, 0x0);
        gbc.writeMem(0x8388, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7216);
        EXPECT(gbc.pc(), 0x838a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8388), 0xcb);
        EXPECT(gbc.readMem(0x8389), 0x8b);
        // CB 8B 0387
        gbc.setState(0x20b6, 0xc1c7, 0x8e30, 0xb9b2, 0x3b45, 0xdfb9, 0x1, 0x1);
        gbc.writeMem(0x20b6, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc1c7);
        EXPECT(gbc.pc(), 0x20b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0388
        gbc.setState(0x8ae9, 0x11ec, 0x83b0, 0x3d60, 0x55c4, 0xf2de, 0x0, 0x1);
        gbc.writeMem(0x8ae9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x11ec);
        EXPECT(gbc.pc(), 0x8aeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ae9), 0xcb);
        EXPECT(gbc.readMem(0x8aea), 0x8b);
        // CB 8B 0389
        gbc.setState(0xd542, 0x6ba7, 0x93e0, 0xb428, 0x7b8, 0xc4b6, 0x1, 0x0);
        gbc.writeMem(0xd542, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6ba7);
        EXPECT(gbc.pc(), 0xd544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd542), 0xcb);
        EXPECT(gbc.readMem(0xd543), 0x8b);
        // CB 8B 038A
        gbc.setState(0xedf9, 0x456c, 0x6c0, 0xa97b, 0x78ae, 0xc761, 0x1, 0x0);
        gbc.writeMem(0xedf9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x456c);
        EXPECT(gbc.pc(), 0xedfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedf9), 0xcb);
        EXPECT(gbc.readMem(0xedfa), 0x8b);
        // CB 8B 038B
        gbc.setState(0xb7e3, 0x670e, 0x8860, 0xa9ee, 0xfd08, 0xe80a, 0x1, 0x1);
        gbc.writeMem(0xb7e3, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x670e);
        EXPECT(gbc.pc(), 0xb7e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7e3), 0xcb);
        EXPECT(gbc.readMem(0xb7e4), 0x8b);
        // CB 8B 038C
        gbc.setState(0xcaf7, 0xe90, 0xbb20, 0x1eae, 0x6aee, 0x3ffe, 0x1, 0x1);
        gbc.writeMem(0xcaf7, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe90);
        EXPECT(gbc.pc(), 0xcaf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaf7), 0xcb);
        EXPECT(gbc.readMem(0xcaf8), 0x8b);
        // CB 8B 038D
        gbc.setState(0xadd5, 0x4f7e, 0x7200, 0x116c, 0x6e1, 0x4858, 0x0, 0x1);
        gbc.writeMem(0xadd5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4f7e);
        EXPECT(gbc.pc(), 0xadd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadd5), 0xcb);
        EXPECT(gbc.readMem(0xadd6), 0x8b);
        // CB 8B 038E
        gbc.setState(0x22c5, 0xac61, 0x46c0, 0xc7a1, 0x9697, 0x3b8f, 0x0, 0x0);
        gbc.writeMem(0x22c5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xac61);
        EXPECT(gbc.pc(), 0x22c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 038F
        gbc.setState(0xbf18, 0x29a1, 0xf790, 0xc9c7, 0x70c, 0x7d42, 0x1, 0x0);
        gbc.writeMem(0xbf18, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x29a1);
        EXPECT(gbc.pc(), 0xbf1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf18), 0xcb);
        EXPECT(gbc.readMem(0xbf19), 0x8b);
        // CB 8B 0390
        gbc.setState(0x5395, 0x119e, 0xa2b0, 0x9a08, 0xd94b, 0x7061, 0x0, 0x1);
        gbc.writeMem(0x5395, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x119e);
        EXPECT(gbc.pc(), 0x5397);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0391
        gbc.setState(0xdcef, 0x97f, 0x3500, 0xc6e8, 0xa980, 0xe25, 0x0, 0x0);
        gbc.writeMem(0xdcef, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x97f);
        EXPECT(gbc.pc(), 0xdcf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcef), 0xcb);
        EXPECT(gbc.readMem(0xdcf0), 0x8b);
        // CB 8B 0392
        gbc.setState(0x3b8f, 0x3616, 0xea70, 0xcbb2, 0x6ab8, 0x9f1b, 0x1, 0x1);
        gbc.writeMem(0x3b8f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x3616);
        EXPECT(gbc.pc(), 0x3b91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0393
        gbc.setState(0x7507, 0xf8c5, 0xb7e0, 0x2241, 0xd3fe, 0xf0ed, 0x0, 0x0);
        gbc.writeMem(0x7507, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf8c5);
        EXPECT(gbc.pc(), 0x7509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0394
        gbc.setState(0x6550, 0x13de, 0x3df0, 0x2787, 0xfb5d, 0xa23c, 0x0, 0x0);
        gbc.writeMem(0x6550, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x13de);
        EXPECT(gbc.pc(), 0x6552);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 0396
        gbc.setState(0x4a83, 0x343c, 0xe780, 0xbd8a, 0xadf7, 0xa19b, 0x0, 0x0);
        gbc.writeMem(0x4a83, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x343c);
        EXPECT(gbc.pc(), 0x4a85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 0397
        gbc.setState(0x9783, 0x189, 0x6510, 0x74e6, 0xe40b, 0x332e, 0x0, 0x0);
        gbc.writeMem(0x9783, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x189);
        EXPECT(gbc.pc(), 0x9785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9783), 0xcb);
        EXPECT(gbc.readMem(0x9784), 0x8b);
        // CB 8B 0398
        gbc.setState(0xa62f, 0xb59e, 0x5040, 0xf416, 0xf6f1, 0xb69d, 0x0, 0x0);
        gbc.writeMem(0xa62f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb59e);
        EXPECT(gbc.pc(), 0xa631);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa62f), 0xcb);
        EXPECT(gbc.readMem(0xa630), 0x8b);
        // CB 8B 0399
        gbc.setState(0x9bda, 0xd2be, 0x59e0, 0xf981, 0x30c8, 0x52ef, 0x0, 0x0);
        gbc.writeMem(0x9bda, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xd2be);
        EXPECT(gbc.pc(), 0x9bdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bda), 0xcb);
        EXPECT(gbc.readMem(0x9bdb), 0x8b);
        // CB 8B 039A
        gbc.setState(0x9c39, 0xb0b6, 0x570, 0xec25, 0xc33e, 0x36df, 0x1, 0x1);
        gbc.writeMem(0x9c39, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb0b6);
        EXPECT(gbc.pc(), 0x9c3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c39), 0xcb);
        EXPECT(gbc.readMem(0x9c3a), 0x8b);
        // CB 8B 039B
        gbc.setState(0x3d25, 0x8f51, 0xe8d0, 0x666, 0x3572, 0x76c4, 0x1, 0x1);
        gbc.writeMem(0x3d25, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8f51);
        EXPECT(gbc.pc(), 0x3d27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 039C
        gbc.setState(0x29c5, 0x533, 0xa2a0, 0x1b9b, 0xf225, 0x8fa6, 0x0, 0x0);
        gbc.writeMem(0x29c5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x533);
        EXPECT(gbc.pc(), 0x29c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 039D
        gbc.setState(0x38d, 0x2f22, 0x2540, 0x67ff, 0x258b, 0xd2ee, 0x1, 0x1);
        gbc.writeMem(0x38d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2f22);
        EXPECT(gbc.pc(), 0x38f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 039E
        gbc.setState(0xe1f, 0x7fe4, 0xad10, 0x6fb8, 0x2686, 0xd5c7, 0x1, 0x1);
        gbc.writeMem(0xe1f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7fe4);
        EXPECT(gbc.pc(), 0xe21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 039F
        gbc.setState(0x5eb5, 0x53ce, 0x5560, 0x82c0, 0x508e, 0x70d2, 0x1, 0x1);
        gbc.writeMem(0x5eb5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x53ce);
        EXPECT(gbc.pc(), 0x5eb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 03A0
        gbc.setState(0x8da, 0xee15, 0xb1f0, 0x7950, 0xdb84, 0x3d9, 0x1, 0x1);
        gbc.writeMem(0x8da, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xee15);
        EXPECT(gbc.pc(), 0x8dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 03A1
        gbc.setState(0x52b2, 0x52f5, 0x85a0, 0x450, 0xbbd8, 0xf58e, 0x1, 0x1);
        gbc.writeMem(0x52b2, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x52f5);
        EXPECT(gbc.pc(), 0x52b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 03A2
        gbc.setState(0x4eb, 0xde3c, 0x3fb0, 0xde6d, 0x8564, 0x3e71, 0x1, 0x1);
        gbc.writeMem(0x4eb, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xde3c);
        EXPECT(gbc.pc(), 0x4ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 03A3
        gbc.setState(0x3fcd, 0x2a64, 0xa880, 0xd620, 0x42d2, 0xc2a, 0x1, 0x0);
        gbc.writeMem(0x3fcd, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2a64);
        EXPECT(gbc.pc(), 0x3fcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 03A4
        gbc.setState(0xdf75, 0x671c, 0x16d0, 0xc42d, 0xaaee, 0x2942, 0x0, 0x0);
        gbc.writeMem(0xdf75, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x671c);
        EXPECT(gbc.pc(), 0xdf77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf75), 0xcb);
        EXPECT(gbc.readMem(0xdf76), 0x8b);
        // CB 8B 03A5
        gbc.setState(0x7e95, 0x3f98, 0x2b80, 0xfdeb, 0x9117, 0xae35, 0x0, 0x1);
        gbc.writeMem(0x7e95, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3f98);
        EXPECT(gbc.pc(), 0x7e97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 03A6
        gbc.setState(0xdecd, 0xffcd, 0xd2e0, 0xd7c3, 0xdcb, 0x49c, 0x1, 0x1);
        gbc.writeMem(0xdecd, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xffcd);
        EXPECT(gbc.pc(), 0xdecf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdecd), 0xcb);
        EXPECT(gbc.readMem(0xdece), 0x8b);
        // CB 8B 03A7
        gbc.setState(0x5e7a, 0xa630, 0x6260, 0xba0, 0x1ad0, 0xb647, 0x0, 0x1);
        gbc.writeMem(0x5e7a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa630);
        EXPECT(gbc.pc(), 0x5e7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 03A8
        gbc.setState(0xeca9, 0x4e4a, 0x7e70, 0x1437, 0x1eda, 0xc1d9, 0x1, 0x1);
        gbc.writeMem(0xeca9, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4e4a);
        EXPECT(gbc.pc(), 0xecab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeca9), 0xcb);
        EXPECT(gbc.readMem(0xecaa), 0x8b);
        // CB 8B 03A9
        gbc.setState(0xbdca, 0xdbc9, 0xebb0, 0xbbc4, 0x7cbe, 0xcdc2, 0x1, 0x0);
        gbc.writeMem(0xbdca, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xdbc9);
        EXPECT(gbc.pc(), 0xbdcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdca), 0xcb);
        EXPECT(gbc.readMem(0xbdcb), 0x8b);
        // CB 8B 03AA
        gbc.setState(0xbd62, 0xa2f2, 0xc0c0, 0x42f4, 0x94b, 0x4a73, 0x0, 0x1);
        gbc.writeMem(0xbd62, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa2f2);
        EXPECT(gbc.pc(), 0xbd64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd62), 0xcb);
        EXPECT(gbc.readMem(0xbd63), 0x8b);
        // CB 8B 03AB
        gbc.setState(0x3452, 0x987e, 0xc090, 0xf5e8, 0x78fb, 0x1f67, 0x0, 0x0);
        gbc.writeMem(0x3452, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x987e);
        EXPECT(gbc.pc(), 0x3454);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 03AC
        gbc.setState(0x3c1b, 0xc98, 0x4a80, 0xf8c8, 0x2699, 0x87c8, 0x1, 0x0);
        gbc.writeMem(0x3c1b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc98);
        EXPECT(gbc.pc(), 0x3c1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 03AD
        gbc.setState(0xee91, 0x330c, 0x39f0, 0x83f4, 0x4f13, 0x47ca, 0x0, 0x0);
        gbc.writeMem(0xee91, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x330c);
        EXPECT(gbc.pc(), 0xee93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee91), 0xcb);
        EXPECT(gbc.readMem(0xee92), 0x8b);
        // CB 8B 03B0
        gbc.setState(0x290f, 0xf985, 0x4ce0, 0x56b3, 0xa8d0, 0xfe1d, 0x1, 0x0);
        gbc.writeMem(0x290f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf985);
        EXPECT(gbc.pc(), 0x2911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 03B1
        gbc.setState(0x5abe, 0x3f8b, 0x480, 0xab8c, 0x1816, 0xb237, 0x1, 0x0);
        gbc.writeMem(0x5abe, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x3f8b);
        EXPECT(gbc.pc(), 0x5ac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 03B2
        gbc.setState(0xc947, 0x3c0b, 0xbc40, 0xc540, 0xd4a2, 0xb939, 0x0, 0x0);
        gbc.writeMem(0xc947, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3c0b);
        EXPECT(gbc.pc(), 0xc949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc947), 0xcb);
        EXPECT(gbc.readMem(0xc948), 0x8b);
        // CB 8B 03B3
        gbc.setState(0x24af, 0x3d36, 0xc470, 0x1929, 0xace0, 0x2a3d, 0x0, 0x1);
        gbc.writeMem(0x24af, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3d36);
        EXPECT(gbc.pc(), 0x24b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 03B4
        gbc.setState(0xe027, 0x3f5, 0xb0, 0x3127, 0xa7b9, 0x153, 0x1, 0x0);
        gbc.writeMem(0xe027, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3f5);
        EXPECT(gbc.pc(), 0xe029);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe027), 0xcb);
        EXPECT(gbc.readMem(0xe028), 0x8b);
        // CB 8B 03B6
        gbc.setState(0x23ef, 0x461a, 0x5f00, 0xe980, 0xca80, 0xd373, 0x1, 0x0);
        gbc.writeMem(0x23ef, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x461a);
        EXPECT(gbc.pc(), 0x23f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 03B7
        gbc.setState(0x5196, 0x211d, 0x2f20, 0x689a, 0x69ec, 0x7287, 0x0, 0x0);
        gbc.writeMem(0x5196, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x211d);
        EXPECT(gbc.pc(), 0x5198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 03B8
        gbc.setState(0x6c88, 0x4a8e, 0x8f10, 0x538d, 0x1383, 0xa117, 0x1, 0x0);
        gbc.writeMem(0x6c88, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x4a8e);
        EXPECT(gbc.pc(), 0x6c8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 03B9
        gbc.setState(0x99bf, 0xd4ec, 0x2330, 0x8d75, 0xe2ae, 0x2e02, 0x1, 0x0);
        gbc.writeMem(0x99bf, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd4ec);
        EXPECT(gbc.pc(), 0x99c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99bf), 0xcb);
        EXPECT(gbc.readMem(0x99c0), 0x8b);
        // CB 8B 03BB
        gbc.setState(0xbfbe, 0x9de4, 0x4710, 0x4f3b, 0x1f3d, 0xf78, 0x1, 0x0);
        gbc.writeMem(0xbfbe, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9de4);
        EXPECT(gbc.pc(), 0xbfc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfbe), 0xcb);
        EXPECT(gbc.readMem(0xbfbf), 0x8b);
        // CB 8B 03BC
        gbc.setState(0x8d02, 0x2219, 0x3c30, 0x58fc, 0x4bde, 0x7e83, 0x0, 0x0);
        gbc.writeMem(0x8d02, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2219);
        EXPECT(gbc.pc(), 0x8d04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d02), 0xcb);
        EXPECT(gbc.readMem(0x8d03), 0x8b);
        // CB 8B 03BD
        gbc.setState(0xc722, 0xc76f, 0x30d0, 0xb797, 0x34be, 0x938e, 0x0, 0x0);
        gbc.writeMem(0xc722, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc76f);
        EXPECT(gbc.pc(), 0xc724);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc722), 0xcb);
        EXPECT(gbc.readMem(0xc723), 0x8b);
        // CB 8B 03BE
        gbc.setState(0x239b, 0xb6f1, 0xbb0, 0x188e, 0x93db, 0x2054, 0x0, 0x0);
        gbc.writeMem(0x239b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb6f1);
        EXPECT(gbc.pc(), 0x239d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 03BF
        gbc.setState(0xb24f, 0x79ab, 0x8470, 0x3ff4, 0xbc3f, 0x24d8, 0x0, 0x1);
        gbc.writeMem(0xb24f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x79ab);
        EXPECT(gbc.pc(), 0xb251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb24f), 0xcb);
        EXPECT(gbc.readMem(0xb250), 0x8b);
        // CB 8B 03C0
        gbc.setState(0x7636, 0x5140, 0x80d0, 0x2d61, 0x1d66, 0x95a3, 0x1, 0x0);
        gbc.writeMem(0x7636, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x5140);
        EXPECT(gbc.pc(), 0x7638);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 03C1
        gbc.setState(0x962b, 0xa06b, 0xcf70, 0xeabc, 0x92c1, 0xe707, 0x1, 0x0);
        gbc.writeMem(0x962b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa06b);
        EXPECT(gbc.pc(), 0x962d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x962b), 0xcb);
        EXPECT(gbc.readMem(0x962c), 0x8b);
        // CB 8B 03C2
        gbc.setState(0x8fc4, 0x9d87, 0x53e0, 0x2dfa, 0xffb3, 0xfd1c, 0x1, 0x1);
        gbc.writeMem(0x8fc4, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9d87);
        EXPECT(gbc.pc(), 0x8fc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc4), 0xcb);
        EXPECT(gbc.readMem(0x8fc5), 0x8b);
        // CB 8B 03C3
        gbc.setState(0x2b7e, 0xa110, 0x7f20, 0x1bc4, 0xae40, 0xefbe, 0x1, 0x1);
        gbc.writeMem(0x2b7e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xa110);
        EXPECT(gbc.pc(), 0x2b80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 03C4
        gbc.setState(0xc7a, 0x197f, 0xa8f0, 0xe12e, 0x3194, 0x4f0, 0x0, 0x0);
        gbc.writeMem(0xc7a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x197f);
        EXPECT(gbc.pc(), 0xc7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 03C5
        gbc.setState(0x730, 0x4f98, 0xa4f0, 0x9ddc, 0xcb6d, 0x60f1, 0x0, 0x0);
        gbc.writeMem(0x730, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x4f98);
        EXPECT(gbc.pc(), 0x732);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 03C6
        gbc.setState(0x950c, 0xd54e, 0xae60, 0xfe83, 0x6da4, 0x45a4, 0x0, 0x1);
        gbc.writeMem(0x950c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd54e);
        EXPECT(gbc.pc(), 0x950e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x950c), 0xcb);
        EXPECT(gbc.readMem(0x950d), 0x8b);
        // CB 8B 03C7
        gbc.setState(0xac3d, 0x99bd, 0xcbc0, 0xb2fd, 0xbaaf, 0xaec6, 0x0, 0x1);
        gbc.writeMem(0xac3d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x99bd);
        EXPECT(gbc.pc(), 0xac3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac3d), 0xcb);
        EXPECT(gbc.readMem(0xac3e), 0x8b);
        // CB 8B 03C8
        gbc.setState(0x977b, 0xd0c8, 0x5510, 0xbf20, 0x93dd, 0x18b5, 0x0, 0x0);
        gbc.writeMem(0x977b, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd0c8);
        EXPECT(gbc.pc(), 0x977d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x977b), 0xcb);
        EXPECT(gbc.readMem(0x977c), 0x8b);
        // CB 8B 03C9
        gbc.setState(0xa021, 0x13aa, 0x9640, 0xc8e6, 0xfe61, 0x1673, 0x0, 0x1);
        gbc.writeMem(0xa021, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x13aa);
        EXPECT(gbc.pc(), 0xa023);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa021), 0xcb);
        EXPECT(gbc.readMem(0xa022), 0x8b);
        // CB 8B 03CA
        gbc.setState(0xdab6, 0x9ff8, 0x6290, 0x577a, 0xda06, 0x234, 0x0, 0x0);
        gbc.writeMem(0xdab6, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9ff8);
        EXPECT(gbc.pc(), 0xdab8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdab6), 0xcb);
        EXPECT(gbc.readMem(0xdab7), 0x8b);
        // CB 8B 03CB
        gbc.setState(0x33af, 0xa78e, 0xb10, 0x4851, 0x2c17, 0xf773, 0x1, 0x1);
        gbc.writeMem(0x33af, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa78e);
        EXPECT(gbc.pc(), 0x33b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 03CC
        gbc.setState(0x11a8, 0x981d, 0xfb70, 0x2374, 0xc0b4, 0xc425, 0x1, 0x1);
        gbc.writeMem(0x11a8, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x981d);
        EXPECT(gbc.pc(), 0x11aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 03CD
        gbc.setState(0x1946, 0xf1de, 0x9410, 0x5cc6, 0x1ae6, 0x4ef4, 0x0, 0x0);
        gbc.writeMem(0x1946, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf1de);
        EXPECT(gbc.pc(), 0x1948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 03CE
        gbc.setState(0x9ade, 0xe808, 0xce30, 0x2a2c, 0x669c, 0x17c, 0x1, 0x0);
        gbc.writeMem(0x9ade, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe808);
        EXPECT(gbc.pc(), 0x9ae0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ade), 0xcb);
        EXPECT(gbc.readMem(0x9adf), 0x8b);
        // CB 8B 03CF
        gbc.setState(0x2a0e, 0x589a, 0x3c0, 0xb327, 0xaef6, 0xc5a1, 0x1, 0x1);
        gbc.writeMem(0x2a0e, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x589a);
        EXPECT(gbc.pc(), 0x2a10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 03D0
        gbc.setState(0x2d0d, 0x2235, 0x2c50, 0xb5b0, 0xbf63, 0xc516, 0x1, 0x0);
        gbc.writeMem(0x2d0d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2235);
        EXPECT(gbc.pc(), 0x2d0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 03D1
        gbc.setState(0x7d3d, 0xb3ba, 0xc440, 0xea0d, 0xc909, 0x4617, 0x0, 0x0);
        gbc.writeMem(0x7d3d, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb3ba);
        EXPECT(gbc.pc(), 0x7d3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 03D2
        gbc.setState(0x2df8, 0x60b4, 0x8120, 0xef71, 0xb609, 0x5243, 0x1, 0x1);
        gbc.writeMem(0x2df8, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x60b4);
        EXPECT(gbc.pc(), 0x2dfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 03D3
        gbc.setState(0x3508, 0xf43, 0x14e0, 0x457f, 0xcaa8, 0xd6d, 0x0, 0x0);
        gbc.writeMem(0x3508, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf43);
        EXPECT(gbc.pc(), 0x350a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 03D4
        gbc.setState(0xb31a, 0x9820, 0xccd0, 0xeb7e, 0x54b2, 0xbbe3, 0x1, 0x1);
        gbc.writeMem(0xb31a, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x9820);
        EXPECT(gbc.pc(), 0xb31c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb31a), 0xcb);
        EXPECT(gbc.readMem(0xb31b), 0x8b);
        // CB 8B 03D5
        gbc.setState(0x3268, 0xa059, 0x5ca0, 0x3294, 0x2098, 0x60c8, 0x1, 0x0);
        gbc.writeMem(0x3268, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa059);
        EXPECT(gbc.pc(), 0x326a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 03D6
        gbc.setState(0x767c, 0xecb4, 0xe6b0, 0x7ca0, 0xcfe6, 0x16de, 0x1, 0x1);
        gbc.writeMem(0x767c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xecb4);
        EXPECT(gbc.pc(), 0x767e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 03D7
        gbc.setState(0x52ec, 0x527b, 0x6390, 0x6969, 0xd69f, 0x675, 0x1, 0x1);
        gbc.writeMem(0x52ec, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x527b);
        EXPECT(gbc.pc(), 0x52ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 03D8
        gbc.setState(0x2428, 0x509, 0xff10, 0x33eb, 0x39a, 0xbaba, 0x1, 0x1);
        gbc.writeMem(0x2428, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x509);
        EXPECT(gbc.pc(), 0x242a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 03D9
        gbc.setState(0x93cd, 0x4b1b, 0xb3c0, 0x6cae, 0x2135, 0x2f5, 0x1, 0x1);
        gbc.writeMem(0x93cd, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4b1b);
        EXPECT(gbc.pc(), 0x93cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93cd), 0xcb);
        EXPECT(gbc.readMem(0x93ce), 0x8b);
        // CB 8B 03DA
        gbc.setState(0xc93c, 0xaa73, 0xda60, 0x57, 0xd270, 0x7909, 0x1, 0x1);
        gbc.writeMem(0xc93c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xaa73);
        EXPECT(gbc.pc(), 0xc93e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc93c), 0xcb);
        EXPECT(gbc.readMem(0xc93d), 0x8b);
        // CB 8B 03DB
        gbc.setState(0xb61c, 0x56a6, 0xfd0, 0xf0c, 0x8034, 0xb34b, 0x1, 0x1);
        gbc.writeMem(0xb61c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x56a6);
        EXPECT(gbc.pc(), 0xb61e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb61c), 0xcb);
        EXPECT(gbc.readMem(0xb61d), 0x8b);
        // CB 8B 03DC
        gbc.setState(0x37ff, 0x6db2, 0x7c0, 0xb48d, 0xa9fa, 0x14de, 0x0, 0x1);
        gbc.writeMem(0x37ff, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x6db2);
        EXPECT(gbc.pc(), 0x3801);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 03DD
        gbc.setState(0xe18c, 0x710a, 0x20, 0x9ab2, 0xc1f7, 0x10e1, 0x1, 0x1);
        gbc.writeMem(0xe18c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x710a);
        EXPECT(gbc.pc(), 0xe18e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe18c), 0xcb);
        EXPECT(gbc.readMem(0xe18d), 0x8b);
        // CB 8B 03DE
        gbc.setState(0xdb59, 0xb50d, 0xe7f0, 0x963c, 0x4c82, 0x3791, 0x1, 0x1);
        gbc.writeMem(0xdb59, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb50d);
        EXPECT(gbc.pc(), 0xdb5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb59), 0xcb);
        EXPECT(gbc.readMem(0xdb5a), 0x8b);
        // CB 8B 03DF
        gbc.setState(0xb8cb, 0xe0cd, 0x9690, 0x98f2, 0xc8b4, 0x17b9, 0x0, 0x1);
        gbc.writeMem(0xb8cb, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe0cd);
        EXPECT(gbc.pc(), 0xb8cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8cb), 0xcb);
        EXPECT(gbc.readMem(0xb8cc), 0x8b);
        // CB 8B 03E1
        gbc.setState(0x1c37, 0xb64d, 0xc9f0, 0x12a7, 0x4f28, 0x605a, 0x1, 0x1);
        gbc.writeMem(0x1c37, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb64d);
        EXPECT(gbc.pc(), 0x1c39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8B 03E2
        gbc.setState(0xd70c, 0x777a, 0x19c0, 0x1098, 0xd40, 0xfeaa, 0x0, 0x0);
        gbc.writeMem(0xd70c, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x777a);
        EXPECT(gbc.pc(), 0xd70e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd70c), 0xcb);
        EXPECT(gbc.readMem(0xd70d), 0x8b);
        // CB 8B 03E3
        gbc.setState(0x9824, 0x2a73, 0x2460, 0xdf4, 0xdb8, 0x5750, 0x1, 0x1);
        gbc.writeMem(0x9824, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2a73);
        EXPECT(gbc.pc(), 0x9826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9824), 0xcb);
        EXPECT(gbc.readMem(0x9825), 0x8b);
        // CB 8B 03E4
        gbc.setState(0x88e5, 0x89e, 0x35d0, 0x1f49, 0xc593, 0x337b, 0x0, 0x0);
        gbc.writeMem(0x88e5, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x89e);
        EXPECT(gbc.pc(), 0x88e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88e5), 0xcb);
        EXPECT(gbc.readMem(0x88e6), 0x8b);
        // CB 8B 03E5
        gbc.setState(0x5d8f, 0x5b72, 0xab80, 0xce58, 0xc6de, 0x41b7, 0x0, 0x0);
        gbc.writeMem(0x5d8f, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5b72);
        EXPECT(gbc.pc(), 0x5d91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8B 03E7
        gbc.setState(0x4e57, 0xa60c, 0x8d00, 0x8fbc, 0x5760, 0xf30, 0x1, 0x0);
        gbc.writeMem(0x4e57, { 0xcb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa60c);
        EXPECT(gbc.pc(), 0x4e59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
