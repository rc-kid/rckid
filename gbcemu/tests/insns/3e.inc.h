    TEST(gbcemu, opcode_3e) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 3E 0000
        gbc.setState(0x2f94, 0xd50a, 0x96f0, 0xc9d8, 0xb278, 0xecfa, 0x1, 0x1);
        gbc.writeMem(0x2f94, { 0x3e, 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd50a, gbc.sp());
        EXPECT(0x2f96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0001
        gbc.setState(0x7fe6, 0x2e02, 0xba30, 0x37bd, 0x8105, 0x7bb3, 0x1, 0x0);
        gbc.writeMem(0x7fe6, { 0x3e, 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2e02, gbc.sp());
        EXPECT(0x7fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0002
        gbc.setState(0x5593, 0xcb35, 0x1f40, 0xe67, 0xeab2, 0x2efc, 0x1, 0x1);
        gbc.writeMem(0x5593, { 0x3e, 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xcb35, gbc.sp());
        EXPECT(0x5595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0003
        gbc.setState(0x75bb, 0x4ea2, 0xd510, 0x73e8, 0x8efe, 0x7528, 0x1, 0x1);
        gbc.writeMem(0x75bb, { 0x3e, 0x39 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4ea2, gbc.sp());
        EXPECT(0x75bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0004
        gbc.setState(0x7961, 0xc8f7, 0x3070, 0xef2b, 0x6a1e, 0xf7e3, 0x0, 0x0);
        gbc.writeMem(0x7961, { 0x3e, 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc8f7, gbc.sp());
        EXPECT(0x7963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0005
        gbc.setState(0x8777, 0xa84a, 0x5f60, 0x7c2f, 0x2cb5, 0xbf51, 0x0, 0x1);
        gbc.writeMem(0x8777, { 0x3e, 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa84a, gbc.sp());
        EXPECT(0x8779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8777));
        EXPECT(0xa2, gbc.readMem(0x8778));
        // 3E 0006
        gbc.setState(0x2e5a, 0x3362, 0xa3c0, 0xe76, 0xb068, 0xeac3, 0x1, 0x1);
        gbc.writeMem(0x2e5a, { 0x3e, 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3362, gbc.sp());
        EXPECT(0x2e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0007
        gbc.setState(0x2633, 0xe269, 0xa470, 0x6e20, 0x2b67, 0x8bfa, 0x1, 0x0);
        gbc.writeMem(0x2633, { 0x3e, 0xb0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe269, gbc.sp());
        EXPECT(0x2635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0008
        gbc.setState(0x2156, 0xc1a6, 0x5010, 0xa3d6, 0xde95, 0xfa2e, 0x1, 0x1);
        gbc.writeMem(0x2156, { 0x3e, 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc1a6, gbc.sp());
        EXPECT(0x2158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0009
        gbc.setState(0x4019, 0xd927, 0x9ff0, 0xb4de, 0xd641, 0xa22a, 0x1, 0x1);
        gbc.writeMem(0x4019, { 0x3e, 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd927, gbc.sp());
        EXPECT(0x401b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 000A
        gbc.setState(0xcd44, 0xe5e8, 0xa320, 0xb6e8, 0x1acb, 0x429f, 0x0, 0x0);
        gbc.writeMem(0xcd44, { 0x3e, 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe5e8, gbc.sp());
        EXPECT(0xcd46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcd44));
        EXPECT(0x51, gbc.readMem(0xcd45));
        // 3E 000C
        gbc.setState(0xa038, 0x7fb8, 0xf3e0, 0xf6f1, 0xeaaf, 0x92f, 0x1, 0x0);
        gbc.writeMem(0xa038, { 0x3e, 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7fb8, gbc.sp());
        EXPECT(0xa03a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa038));
        EXPECT(0x4e, gbc.readMem(0xa039));
        // 3E 000D
        gbc.setState(0x73e7, 0xa428, 0xd180, 0x179f, 0x2ff3, 0x5549, 0x1, 0x1);
        gbc.writeMem(0x73e7, { 0x3e, 0xf6 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa428, gbc.sp());
        EXPECT(0x73e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 000E
        gbc.setState(0xc4a0, 0xb148, 0x26f0, 0xe94f, 0x746f, 0xca61, 0x1, 0x1);
        gbc.writeMem(0xc4a0, { 0x3e, 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb148, gbc.sp());
        EXPECT(0xc4a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc4a0));
        EXPECT(0xac, gbc.readMem(0xc4a1));
        // 3E 000F
        gbc.setState(0xcb81, 0x23ed, 0xce20, 0xd972, 0xe678, 0x8382, 0x0, 0x0);
        gbc.writeMem(0xcb81, { 0x3e, 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x23ed, gbc.sp());
        EXPECT(0xcb83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcb81));
        EXPECT(0x33, gbc.readMem(0xcb82));
        // 3E 0010
        gbc.setState(0xa5c6, 0x37be, 0x7f70, 0xc70f, 0x5a21, 0xb7a1, 0x0, 0x0);
        gbc.writeMem(0xa5c6, { 0x3e, 0xda });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x37be, gbc.sp());
        EXPECT(0xa5c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa5c6));
        EXPECT(0xda, gbc.readMem(0xa5c7));
        // 3E 0011
        gbc.setState(0xe726, 0x5a85, 0xd3c0, 0x9783, 0x4171, 0xddfe, 0x0, 0x0);
        gbc.writeMem(0xe726, { 0x3e, 0x82 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5a85, gbc.sp());
        EXPECT(0xe728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe726));
        EXPECT(0x82, gbc.readMem(0xe727));
        // 3E 0012
        gbc.setState(0x5692, 0x5929, 0x7700, 0x8dc7, 0x8521, 0x2da, 0x1, 0x1);
        gbc.writeMem(0x5692, { 0x3e, 0x58 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5929, gbc.sp());
        EXPECT(0x5694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0013
        gbc.setState(0xe199, 0x16b9, 0xf5c0, 0x2cb2, 0x3e81, 0xbffb, 0x0, 0x1);
        gbc.writeMem(0xe199, { 0x3e, 0x47 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x16b9, gbc.sp());
        EXPECT(0xe19b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe199));
        EXPECT(0x47, gbc.readMem(0xe19a));
        // 3E 0015
        gbc.setState(0x634a, 0x2d02, 0x7260, 0x7826, 0xda8c, 0x6a49, 0x1, 0x1);
        gbc.writeMem(0x634a, { 0x3e, 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2d02, gbc.sp());
        EXPECT(0x634c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0016
        gbc.setState(0x8a6a, 0x77a1, 0xd170, 0xe00f, 0x5e31, 0xb149, 0x0, 0x0);
        gbc.writeMem(0x8a6a, { 0x3e, 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x77a1, gbc.sp());
        EXPECT(0x8a6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8a6a));
        EXPECT(0x4f, gbc.readMem(0x8a6b));
        // 3E 0018
        gbc.setState(0x3f18, 0x4a20, 0xc2b0, 0xd384, 0xdacb, 0xb9b8, 0x1, 0x1);
        gbc.writeMem(0x3f18, { 0x3e, 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4a20, gbc.sp());
        EXPECT(0x3f1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0019
        gbc.setState(0xee57, 0x5549, 0x4620, 0xf91, 0x8f7b, 0x3522, 0x0, 0x1);
        gbc.writeMem(0xee57, { 0x3e, 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5549, gbc.sp());
        EXPECT(0xee59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xee57));
        EXPECT(0x9c, gbc.readMem(0xee58));
        // 3E 001A
        gbc.setState(0x4baa, 0x16e3, 0x6570, 0xf070, 0x3976, 0x1fd, 0x0, 0x0);
        gbc.writeMem(0x4baa, { 0x3e, 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x16e3, gbc.sp());
        EXPECT(0x4bac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 001C
        gbc.setState(0x56b4, 0x683, 0x290, 0x8109, 0x2ee0, 0x4697, 0x0, 0x1);
        gbc.writeMem(0x56b4, { 0x3e, 0x20 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x683, gbc.sp());
        EXPECT(0x56b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 001D
        gbc.setState(0xbc21, 0x6666, 0xc1e0, 0x8174, 0xc079, 0x23ec, 0x1, 0x0);
        gbc.writeMem(0xbc21, { 0x3e, 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6666, gbc.sp());
        EXPECT(0xbc23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbc21));
        EXPECT(0x8d, gbc.readMem(0xbc22));
        // 3E 001E
        gbc.setState(0x905d, 0xb61e, 0x7ea0, 0xea8c, 0x4f15, 0xde59, 0x1, 0x0);
        gbc.writeMem(0x905d, { 0x3e, 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb61e, gbc.sp());
        EXPECT(0x905f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x905d));
        EXPECT(0xfb, gbc.readMem(0x905e));
        // 3E 001F
        gbc.setState(0x9969, 0x530a, 0xf110, 0xe081, 0x5403, 0xe445, 0x0, 0x0);
        gbc.writeMem(0x9969, { 0x3e, 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x530a, gbc.sp());
        EXPECT(0x996b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9969));
        EXPECT(0xa1, gbc.readMem(0x996a));
        // 3E 0021
        gbc.setState(0x919c, 0xfe80, 0xd800, 0x7801, 0xc6e4, 0xbbc8, 0x1, 0x1);
        gbc.writeMem(0x919c, { 0x3e, 0x16 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfe80, gbc.sp());
        EXPECT(0x919e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x919c));
        EXPECT(0x16, gbc.readMem(0x919d));
        // 3E 0022
        gbc.setState(0xe152, 0x7b1d, 0xbf00, 0xb4fd, 0x56f1, 0x2cd1, 0x0, 0x1);
        gbc.writeMem(0xe152, { 0x3e, 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7b1d, gbc.sp());
        EXPECT(0xe154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe152));
        EXPECT(0x4b, gbc.readMem(0xe153));
        // 3E 0023
        gbc.setState(0xd8a, 0xefe3, 0xac20, 0x5848, 0xa93e, 0x708a, 0x1, 0x1);
        gbc.writeMem(0xd8a, { 0x3e, 0x47 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xefe3, gbc.sp());
        EXPECT(0xd8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0024
        gbc.setState(0xc970, 0xde63, 0x6b50, 0x4e26, 0x94ac, 0xaa10, 0x0, 0x0);
        gbc.writeMem(0xc970, { 0x3e, 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xde63, gbc.sp());
        EXPECT(0xc972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc970));
        EXPECT(0x9e, gbc.readMem(0xc971));
        // 3E 0025
        gbc.setState(0xd4e8, 0xaec3, 0x3ba0, 0xc1f7, 0xca66, 0xc2e7, 0x1, 0x0);
        gbc.writeMem(0xd4e8, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xaec3, gbc.sp());
        EXPECT(0xd4ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd4e8));
        EXPECT(0x8c, gbc.readMem(0xd4e9));
        // 3E 0026
        gbc.setState(0x23bf, 0x4a05, 0xb510, 0x60fa, 0x8d2f, 0x74a8, 0x1, 0x0);
        gbc.writeMem(0x23bf, { 0x3e, 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4a05, gbc.sp());
        EXPECT(0x23c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0027
        gbc.setState(0x5248, 0x84c, 0xfe20, 0x7fa2, 0x4dcb, 0x3b48, 0x0, 0x1);
        gbc.writeMem(0x5248, { 0x3e, 0xfc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x84c, gbc.sp());
        EXPECT(0x524a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0028
        gbc.setState(0x7b92, 0xef3f, 0x6d00, 0x348c, 0x168b, 0x2d2b, 0x1, 0x0);
        gbc.writeMem(0x7b92, { 0x3e, 0xee });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xef3f, gbc.sp());
        EXPECT(0x7b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0029
        gbc.setState(0xa809, 0x2952, 0x1ae0, 0xac18, 0x574e, 0x42c0, 0x0, 0x0);
        gbc.writeMem(0xa809, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2952, gbc.sp());
        EXPECT(0xa80b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa809));
        EXPECT(0x3b, gbc.readMem(0xa80a));
        // 3E 002A
        gbc.setState(0xcefd, 0xab78, 0xa520, 0x4556, 0x5432, 0x2bbb, 0x0, 0x0);
        gbc.writeMem(0xcefd, { 0x3e, 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xab78, gbc.sp());
        EXPECT(0xceff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcefd));
        EXPECT(0x4f, gbc.readMem(0xcefe));
        // 3E 002B
        gbc.setState(0x5e52, 0x95c5, 0x9780, 0xc92a, 0x9b56, 0xa583, 0x0, 0x0);
        gbc.writeMem(0x5e52, { 0x3e, 0x84 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x95c5, gbc.sp());
        EXPECT(0x5e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 002C
        gbc.setState(0x6fa5, 0x3fa8, 0xae60, 0xd8b9, 0xea8f, 0xa797, 0x1, 0x1);
        gbc.writeMem(0x6fa5, { 0x3e, 0x72 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3fa8, gbc.sp());
        EXPECT(0x6fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 002D
        gbc.setState(0x9b4f, 0x7b1a, 0xfe50, 0x1d64, 0xc668, 0x20c8, 0x0, 0x1);
        gbc.writeMem(0x9b4f, { 0x3e, 0x6e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7b1a, gbc.sp());
        EXPECT(0x9b51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9b4f));
        EXPECT(0x6e, gbc.readMem(0x9b50));
        // 3E 002E
        gbc.setState(0xd2, 0xe9a9, 0x9ef0, 0x553d, 0xbf3d, 0x4cca, 0x0, 0x1);
        gbc.writeMem(0xd2, { 0x3e, 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe9a9, gbc.sp());
        EXPECT(0xd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 002F
        gbc.setState(0x3adf, 0xc38e, 0x91c0, 0x8cf9, 0xe52c, 0xbb2d, 0x0, 0x1);
        gbc.writeMem(0x3adf, { 0x3e, 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc38e, gbc.sp());
        EXPECT(0x3ae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0031
        gbc.setState(0x1f99, 0xd903, 0x5110, 0xd5c2, 0x94d5, 0x1113, 0x1, 0x0);
        gbc.writeMem(0x1f99, { 0x3e, 0x47 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd903, gbc.sp());
        EXPECT(0x1f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0032
        gbc.setState(0x51e4, 0x5d7f, 0x390, 0xd7dc, 0x6568, 0x16bf, 0x1, 0x1);
        gbc.writeMem(0x51e4, { 0x3e, 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5d7f, gbc.sp());
        EXPECT(0x51e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0033
        gbc.setState(0xd7a9, 0x6cde, 0xc60, 0x5793, 0x2f3a, 0x5cb3, 0x0, 0x1);
        gbc.writeMem(0xd7a9, { 0x3e, 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6cde, gbc.sp());
        EXPECT(0xd7ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd7a9));
        EXPECT(0x13, gbc.readMem(0xd7aa));
        // 3E 0034
        gbc.setState(0x7e37, 0x328a, 0xfcd0, 0x56be, 0x29b, 0x8b94, 0x0, 0x0);
        gbc.writeMem(0x7e37, { 0x3e, 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x328a, gbc.sp());
        EXPECT(0x7e39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0036
        gbc.setState(0x27cd, 0x7a04, 0x5540, 0x7b46, 0x5614, 0xc04b, 0x0, 0x0);
        gbc.writeMem(0x27cd, { 0x3e, 0x6b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7a04, gbc.sp());
        EXPECT(0x27cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0037
        gbc.setState(0x68f5, 0xa584, 0x210, 0xc762, 0x42f1, 0xd050, 0x0, 0x1);
        gbc.writeMem(0x68f5, { 0x3e, 0x19 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa584, gbc.sp());
        EXPECT(0x68f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0038
        gbc.setState(0xd9dd, 0x8d3c, 0xc3f0, 0xbea2, 0x40f4, 0x1c17, 0x0, 0x0);
        gbc.writeMem(0xd9dd, { 0x3e, 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8d3c, gbc.sp());
        EXPECT(0xd9df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd9dd));
        EXPECT(0x9d, gbc.readMem(0xd9de));
        // 3E 0039
        gbc.setState(0x1b9c, 0xa71e, 0x5aa0, 0x6170, 0xdbe8, 0x1eb1, 0x0, 0x1);
        gbc.writeMem(0x1b9c, { 0x3e, 0xab });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa71e, gbc.sp());
        EXPECT(0x1b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 003A
        gbc.setState(0x70da, 0x2165, 0x6290, 0x8fbf, 0xec9e, 0x1e90, 0x1, 0x1);
        gbc.writeMem(0x70da, { 0x3e, 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2165, gbc.sp());
        EXPECT(0x70dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 003B
        gbc.setState(0xd21c, 0x9155, 0xc90, 0x65ce, 0x3a52, 0x416c, 0x1, 0x0);
        gbc.writeMem(0xd21c, { 0x3e, 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9155, gbc.sp());
        EXPECT(0xd21e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd21c));
        EXPECT(0x30, gbc.readMem(0xd21d));
        // 3E 003D
        gbc.setState(0x29f7, 0x8b27, 0x4c90, 0x63fe, 0x5e5c, 0x38e, 0x1, 0x0);
        gbc.writeMem(0x29f7, { 0x3e, 0x6a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8b27, gbc.sp());
        EXPECT(0x29f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 003E
        gbc.setState(0x931a, 0xf21a, 0x7120, 0xf0b5, 0x5eb, 0x9322, 0x0, 0x1);
        gbc.writeMem(0x931a, { 0x3e, 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf21a, gbc.sp());
        EXPECT(0x931c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x931a));
        EXPECT(0x62, gbc.readMem(0x931b));
        // 3E 003F
        gbc.setState(0x7e98, 0xad0a, 0x6a90, 0x54f7, 0xbcce, 0x22b7, 0x1, 0x0);
        gbc.writeMem(0x7e98, { 0x3e, 0x46 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xad0a, gbc.sp());
        EXPECT(0x7e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0040
        gbc.setState(0xa84e, 0x973c, 0x8dd0, 0xbb77, 0x624d, 0x8f81, 0x0, 0x0);
        gbc.writeMem(0xa84e, { 0x3e, 0x22 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x973c, gbc.sp());
        EXPECT(0xa850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa84e));
        EXPECT(0x22, gbc.readMem(0xa84f));
        // 3E 0041
        gbc.setState(0x6b10, 0xd222, 0xa5f0, 0xa2cf, 0x77e1, 0xce68, 0x0, 0x1);
        gbc.writeMem(0x6b10, { 0x3e, 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd222, gbc.sp());
        EXPECT(0x6b12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0042
        gbc.setState(0xde2c, 0x45f2, 0xe560, 0x5e0b, 0x24ba, 0x880a, 0x1, 0x0);
        gbc.writeMem(0xde2c, { 0x3e, 0xd6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x45f2, gbc.sp());
        EXPECT(0xde2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xde2c));
        EXPECT(0xd6, gbc.readMem(0xde2d));
        // 3E 0043
        gbc.setState(0x6fa1, 0xabfd, 0xd340, 0xd412, 0x952e, 0x2c9f, 0x1, 0x1);
        gbc.writeMem(0x6fa1, { 0x3e, 0xfc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xabfd, gbc.sp());
        EXPECT(0x6fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0044
        gbc.setState(0xb023, 0xa4a0, 0x58c0, 0x4a20, 0x3fe0, 0xc6e2, 0x1, 0x1);
        gbc.writeMem(0xb023, { 0x3e, 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa4a0, gbc.sp());
        EXPECT(0xb025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb023));
        EXPECT(0x6c, gbc.readMem(0xb024));
        // 3E 0045
        gbc.setState(0x1f61, 0x23ac, 0xcd80, 0x3edd, 0x1f6a, 0x7498, 0x1, 0x1);
        gbc.writeMem(0x1f61, { 0x3e, 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x23ac, gbc.sp());
        EXPECT(0x1f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0046
        gbc.setState(0x28f7, 0x1812, 0x89d0, 0x5c81, 0xbafb, 0x62c7, 0x0, 0x0);
        gbc.writeMem(0x28f7, { 0x3e, 0x25 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1812, gbc.sp());
        EXPECT(0x28f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0047
        gbc.setState(0x2382, 0x8ecf, 0xd50, 0xa538, 0xfebb, 0x5b6, 0x0, 0x0);
        gbc.writeMem(0x2382, { 0x3e, 0x5d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8ecf, gbc.sp());
        EXPECT(0x2384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0048
        gbc.setState(0x57ef, 0x64e5, 0xb240, 0x6650, 0x39b2, 0x825b, 0x1, 0x1);
        gbc.writeMem(0x57ef, { 0x3e, 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x64e5, gbc.sp());
        EXPECT(0x57f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0049
        gbc.setState(0xa8fe, 0x38d, 0x8600, 0x5a3b, 0x35b9, 0x4821, 0x0, 0x1);
        gbc.writeMem(0xa8fe, { 0x3e, 0x68 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x38d, gbc.sp());
        EXPECT(0xa900, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa8fe));
        EXPECT(0x68, gbc.readMem(0xa8ff));
        // 3E 004A
        gbc.setState(0x6a58, 0x91ea, 0x5ea0, 0xdf35, 0x98ce, 0xff6f, 0x0, 0x0);
        gbc.writeMem(0x6a58, { 0x3e, 0x6b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x91ea, gbc.sp());
        EXPECT(0x6a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 004B
        gbc.setState(0xb082, 0x5326, 0x2150, 0xfb8e, 0x3dfa, 0xb602, 0x0, 0x0);
        gbc.writeMem(0xb082, { 0x3e, 0xe9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5326, gbc.sp());
        EXPECT(0xb084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb082));
        EXPECT(0xe9, gbc.readMem(0xb083));
        // 3E 004C
        gbc.setState(0xcb15, 0xc0dc, 0xe210, 0xfafa, 0x615d, 0xeae0, 0x1, 0x0);
        gbc.writeMem(0xcb15, { 0x3e, 0x32 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc0dc, gbc.sp());
        EXPECT(0xcb17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcb15));
        EXPECT(0x32, gbc.readMem(0xcb16));
        // 3E 004D
        gbc.setState(0xaa90, 0xaafd, 0x5430, 0x65c2, 0x1387, 0x3890, 0x0, 0x0);
        gbc.writeMem(0xaa90, { 0x3e, 0x61 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xaafd, gbc.sp());
        EXPECT(0xaa92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xaa90));
        EXPECT(0x61, gbc.readMem(0xaa91));
        // 3E 004E
        gbc.setState(0xe66b, 0x279f, 0x5830, 0xbdc1, 0xd055, 0x884e, 0x0, 0x0);
        gbc.writeMem(0xe66b, { 0x3e, 0x5d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x279f, gbc.sp());
        EXPECT(0xe66d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe66b));
        EXPECT(0x5d, gbc.readMem(0xe66c));
        // 3E 004F
        gbc.setState(0x26f2, 0xb212, 0x35d0, 0x91f4, 0x5149, 0xfe9a, 0x1, 0x0);
        gbc.writeMem(0x26f2, { 0x3e, 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb212, gbc.sp());
        EXPECT(0x26f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0050
        gbc.setState(0xcd45, 0x8780, 0xcd00, 0xb731, 0x444b, 0x53b5, 0x0, 0x1);
        gbc.writeMem(0xcd45, { 0x3e, 0x19 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8780, gbc.sp());
        EXPECT(0xcd47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcd45));
        EXPECT(0x19, gbc.readMem(0xcd46));
        // 3E 0051
        gbc.setState(0x45d5, 0x736b, 0xf7e0, 0x4a4e, 0x29f4, 0x9626, 0x0, 0x1);
        gbc.writeMem(0x45d5, { 0x3e, 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x736b, gbc.sp());
        EXPECT(0x45d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0052
        gbc.setState(0xd0fe, 0xac63, 0xf0f0, 0x1945, 0xa95c, 0xb6ab, 0x0, 0x0);
        gbc.writeMem(0xd0fe, { 0x3e, 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xac63, gbc.sp());
        EXPECT(0xd100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd0fe));
        EXPECT(0x9, gbc.readMem(0xd0ff));
        // 3E 0053
        gbc.setState(0x5a4a, 0xc65, 0x41a0, 0x776f, 0x9dae, 0xfb05, 0x0, 0x1);
        gbc.writeMem(0x5a4a, { 0x3e, 0x86 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc65, gbc.sp());
        EXPECT(0x5a4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0054
        gbc.setState(0xb349, 0x86d1, 0x1b90, 0x9d12, 0x8506, 0x6024, 0x0, 0x0);
        gbc.writeMem(0xb349, { 0x3e, 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x86d1, gbc.sp());
        EXPECT(0xb34b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb349));
        EXPECT(0xcc, gbc.readMem(0xb34a));
        // 3E 0056
        gbc.setState(0xc3a6, 0x9656, 0x7e90, 0xd24, 0x59ac, 0x89f1, 0x1, 0x1);
        gbc.writeMem(0xc3a6, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9656, gbc.sp());
        EXPECT(0xc3a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc3a6));
        EXPECT(0x8c, gbc.readMem(0xc3a7));
        // 3E 0057
        gbc.setState(0x77b9, 0xee83, 0x7f20, 0xb741, 0xcf71, 0x318f, 0x1, 0x0);
        gbc.writeMem(0x77b9, { 0x3e, 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xee83, gbc.sp());
        EXPECT(0x77bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0058
        gbc.setState(0x9b04, 0x4431, 0x7080, 0x6888, 0x4569, 0x51d0, 0x1, 0x0);
        gbc.writeMem(0x9b04, { 0x3e, 0x3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4431, gbc.sp());
        EXPECT(0x9b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9b04));
        EXPECT(0x3, gbc.readMem(0x9b05));
        // 3E 0059
        gbc.setState(0xad02, 0xe977, 0xd1e0, 0x3d75, 0xa0c1, 0x5ce1, 0x0, 0x0);
        gbc.writeMem(0xad02, { 0x3e, 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe977, gbc.sp());
        EXPECT(0xad04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xad02));
        EXPECT(0xf2, gbc.readMem(0xad03));
        // 3E 005A
        gbc.setState(0xa11d, 0x58b, 0xdb10, 0xc7cf, 0x36e9, 0xa5dd, 0x1, 0x1);
        gbc.writeMem(0xa11d, { 0x3e, 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x58b, gbc.sp());
        EXPECT(0xa11f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa11d));
        EXPECT(0xa9, gbc.readMem(0xa11e));
        // 3E 005C
        gbc.setState(0x4d71, 0x42d7, 0x9e90, 0xa199, 0x9bdd, 0x46af, 0x0, 0x1);
        gbc.writeMem(0x4d71, { 0x3e, 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x42d7, gbc.sp());
        EXPECT(0x4d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 005D
        gbc.setState(0xa068, 0x4d61, 0xe9e0, 0xa375, 0xe5c2, 0x523b, 0x1, 0x1);
        gbc.writeMem(0xa068, { 0x3e, 0x15 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4d61, gbc.sp());
        EXPECT(0xa06a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa068));
        EXPECT(0x15, gbc.readMem(0xa069));
        // 3E 005E
        gbc.setState(0x950a, 0xc5e2, 0x8740, 0x569a, 0x21dd, 0x5294, 0x1, 0x1);
        gbc.writeMem(0x950a, { 0x3e, 0x61 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc5e2, gbc.sp());
        EXPECT(0x950c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x950a));
        EXPECT(0x61, gbc.readMem(0x950b));
        // 3E 005F
        gbc.setState(0x9247, 0x7cf0, 0x1160, 0x5167, 0x42ec, 0x8020, 0x0, 0x1);
        gbc.writeMem(0x9247, { 0x3e, 0xcd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7cf0, gbc.sp());
        EXPECT(0x9249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9247));
        EXPECT(0xcd, gbc.readMem(0x9248));
        // 3E 0060
        gbc.setState(0xafc5, 0xd64e, 0x950, 0xe8b3, 0xbee2, 0x5efd, 0x1, 0x0);
        gbc.writeMem(0xafc5, { 0x3e, 0x46 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd64e, gbc.sp());
        EXPECT(0xafc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xafc5));
        EXPECT(0x46, gbc.readMem(0xafc6));
        // 3E 0061
        gbc.setState(0xecfc, 0x2e00, 0x48f0, 0xbebe, 0xb84b, 0x6ed2, 0x0, 0x1);
        gbc.writeMem(0xecfc, { 0x3e, 0xd4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2e00, gbc.sp());
        EXPECT(0xecfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xecfc));
        EXPECT(0xd4, gbc.readMem(0xecfd));
        // 3E 0062
        gbc.setState(0x4ef6, 0xba90, 0xc130, 0x9cec, 0xaa34, 0x51cb, 0x0, 0x0);
        gbc.writeMem(0x4ef6, { 0x3e, 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xba90, gbc.sp());
        EXPECT(0x4ef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0063
        gbc.setState(0x4b8e, 0x4a0, 0x5d60, 0xc7cb, 0xa38d, 0xef14, 0x1, 0x1);
        gbc.writeMem(0x4b8e, { 0x3e, 0x39 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4a0, gbc.sp());
        EXPECT(0x4b90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0064
        gbc.setState(0x4e45, 0xd42e, 0x290, 0x9d1b, 0xae3a, 0x8a43, 0x1, 0x1);
        gbc.writeMem(0x4e45, { 0x3e, 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd42e, gbc.sp());
        EXPECT(0x4e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0066
        gbc.setState(0x70da, 0x81f1, 0x2ce0, 0x93aa, 0x7cdc, 0x8e2e, 0x1, 0x0);
        gbc.writeMem(0x70da, { 0x3e, 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x81f1, gbc.sp());
        EXPECT(0x70dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0067
        gbc.setState(0xcb4d, 0xf455, 0xccc0, 0xc5b2, 0xc981, 0x761e, 0x1, 0x1);
        gbc.writeMem(0xcb4d, { 0x3e, 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf455, gbc.sp());
        EXPECT(0xcb4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcb4d));
        EXPECT(0x43, gbc.readMem(0xcb4e));
        // 3E 0068
        gbc.setState(0x18e5, 0xd9b6, 0xe200, 0xe028, 0xe12d, 0x6c5d, 0x1, 0x1);
        gbc.writeMem(0x18e5, { 0x3e, 0xc5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd9b6, gbc.sp());
        EXPECT(0x18e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0069
        gbc.setState(0x5e11, 0x5f55, 0x18f0, 0xca32, 0x392d, 0x2b07, 0x1, 0x1);
        gbc.writeMem(0x5e11, { 0x3e, 0xba });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5f55, gbc.sp());
        EXPECT(0x5e13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 006A
        gbc.setState(0x98c9, 0x9ce8, 0x3000, 0x7ba4, 0xe15f, 0x1ccb, 0x1, 0x1);
        gbc.writeMem(0x98c9, { 0x3e, 0x45 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9ce8, gbc.sp());
        EXPECT(0x98cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x98c9));
        EXPECT(0x45, gbc.readMem(0x98ca));
        // 3E 006B
        gbc.setState(0x39f9, 0x9d94, 0x4680, 0x4897, 0x5a84, 0x6580, 0x1, 0x0);
        gbc.writeMem(0x39f9, { 0x3e, 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9d94, gbc.sp());
        EXPECT(0x39fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 006C
        gbc.setState(0x66a7, 0xf944, 0xe270, 0xb0bc, 0x7212, 0x4d80, 0x1, 0x1);
        gbc.writeMem(0x66a7, { 0x3e, 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf944, gbc.sp());
        EXPECT(0x66a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 006D
        gbc.setState(0x1dec, 0x8736, 0x8e20, 0x8631, 0x203b, 0x10d, 0x1, 0x1);
        gbc.writeMem(0x1dec, { 0x3e, 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8736, gbc.sp());
        EXPECT(0x1dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 006E
        gbc.setState(0xcf4, 0x14f8, 0x9ac0, 0x8be2, 0x156e, 0xc9d4, 0x1, 0x1);
        gbc.writeMem(0xcf4, { 0x3e, 0x97 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x14f8, gbc.sp());
        EXPECT(0xcf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 006F
        gbc.setState(0x2b72, 0x27cd, 0xa9a0, 0x99de, 0x49f6, 0x5ad2, 0x1, 0x1);
        gbc.writeMem(0x2b72, { 0x3e, 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x27cd, gbc.sp());
        EXPECT(0x2b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0070
        gbc.setState(0x82d0, 0x5147, 0xb1f0, 0x8db, 0xe70e, 0x232, 0x1, 0x0);
        gbc.writeMem(0x82d0, { 0x3e, 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5147, gbc.sp());
        EXPECT(0x82d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x82d0));
        EXPECT(0xd0, gbc.readMem(0x82d1));
        // 3E 0071
        gbc.setState(0xdad, 0xb518, 0xebc0, 0xe172, 0x8d34, 0x22b3, 0x1, 0x1);
        gbc.writeMem(0xdad, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb518, gbc.sp());
        EXPECT(0xdaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0072
        gbc.setState(0x4e39, 0xbeb2, 0x8f20, 0x5cfa, 0x1e37, 0xa5ed, 0x0, 0x1);
        gbc.writeMem(0x4e39, { 0x3e, 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbeb2, gbc.sp());
        EXPECT(0x4e3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0074
        gbc.setState(0x523c, 0xfd6, 0xde70, 0xc693, 0xf08, 0xa575, 0x0, 0x1);
        gbc.writeMem(0x523c, { 0x3e, 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfd6, gbc.sp());
        EXPECT(0x523e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0075
        gbc.setState(0x3ea3, 0x3c44, 0x2ae0, 0x1517, 0xa6ee, 0x2ba5, 0x0, 0x0);
        gbc.writeMem(0x3ea3, { 0x3e, 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3c44, gbc.sp());
        EXPECT(0x3ea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0076
        gbc.setState(0x2b39, 0x2250, 0xd280, 0xdd32, 0xfc8e, 0x33b, 0x1, 0x0);
        gbc.writeMem(0x2b39, { 0x3e, 0x7f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2250, gbc.sp());
        EXPECT(0x2b3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0077
        gbc.setState(0x6aae, 0x698f, 0x4710, 0xd341, 0x7fa3, 0x87c3, 0x0, 0x1);
        gbc.writeMem(0x6aae, { 0x3e, 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x698f, gbc.sp());
        EXPECT(0x6ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0078
        gbc.setState(0x9873, 0x174e, 0x30d0, 0xe669, 0x6b60, 0xe194, 0x1, 0x0);
        gbc.writeMem(0x9873, { 0x3e, 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x174e, gbc.sp());
        EXPECT(0x9875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9873));
        EXPECT(0x92, gbc.readMem(0x9874));
        // 3E 0079
        gbc.setState(0xc4d, 0xc67b, 0x3990, 0x7d08, 0x34c3, 0x5d44, 0x1, 0x1);
        gbc.writeMem(0xc4d, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc67b, gbc.sp());
        EXPECT(0xc4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 007A
        gbc.setState(0x2be8, 0x7faf, 0xf890, 0x64d7, 0xd6f1, 0x6e85, 0x1, 0x1);
        gbc.writeMem(0x2be8, { 0x3e, 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7faf, gbc.sp());
        EXPECT(0x2bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 007B
        gbc.setState(0x8f6, 0x781b, 0x3880, 0x7131, 0x7524, 0xf235, 0x0, 0x0);
        gbc.writeMem(0x8f6, { 0x3e, 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x781b, gbc.sp());
        EXPECT(0x8f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 007C
        gbc.setState(0x8c99, 0xf28, 0x3f80, 0x380a, 0xa7b3, 0xe321, 0x0, 0x0);
        gbc.writeMem(0x8c99, { 0x3e, 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf28, gbc.sp());
        EXPECT(0x8c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8c99));
        EXPECT(0xec, gbc.readMem(0x8c9a));
        // 3E 007D
        gbc.setState(0xe94a, 0x45c6, 0xaf40, 0x1cb6, 0xfe1d, 0xc242, 0x0, 0x1);
        gbc.writeMem(0xe94a, { 0x3e, 0x6e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x45c6, gbc.sp());
        EXPECT(0xe94c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe94a));
        EXPECT(0x6e, gbc.readMem(0xe94b));
        // 3E 007E
        gbc.setState(0xa243, 0x59fd, 0x1e00, 0x5471, 0x4a29, 0x8e87, 0x1, 0x0);
        gbc.writeMem(0xa243, { 0x3e, 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x59fd, gbc.sp());
        EXPECT(0xa245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa243));
        EXPECT(0xf9, gbc.readMem(0xa244));
        // 3E 0080
        gbc.setState(0x845, 0x7f73, 0x6c0, 0x289f, 0x130c, 0x9c5c, 0x1, 0x0);
        gbc.writeMem(0x845, { 0x3e, 0x8b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7f73, gbc.sp());
        EXPECT(0x847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0081
        gbc.setState(0x5f8d, 0x3928, 0x2500, 0x5a0b, 0xc4a, 0xa7ad, 0x0, 0x1);
        gbc.writeMem(0x5f8d, { 0x3e, 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3928, gbc.sp());
        EXPECT(0x5f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0082
        gbc.setState(0x89d1, 0x26f6, 0x74d0, 0xb8f2, 0x8708, 0xf161, 0x0, 0x0);
        gbc.writeMem(0x89d1, { 0x3e, 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x26f6, gbc.sp());
        EXPECT(0x89d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x89d1));
        EXPECT(0xac, gbc.readMem(0x89d2));
        // 3E 0083
        gbc.setState(0xdc82, 0xed81, 0x7c0, 0x45e8, 0x64ff, 0x2ca4, 0x1, 0x0);
        gbc.writeMem(0xdc82, { 0x3e, 0xc6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xed81, gbc.sp());
        EXPECT(0xdc84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xdc82));
        EXPECT(0xc6, gbc.readMem(0xdc83));
        // 3E 0084
        gbc.setState(0xc0aa, 0x8fea, 0xa2f0, 0xcd89, 0xfea4, 0xb9d9, 0x1, 0x0);
        gbc.writeMem(0xc0aa, { 0x3e, 0x2e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8fea, gbc.sp());
        EXPECT(0xc0ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc0aa));
        EXPECT(0x2e, gbc.readMem(0xc0ab));
        // 3E 0085
        gbc.setState(0x1813, 0xa86a, 0xb9d0, 0x6a90, 0x377d, 0xbbfc, 0x1, 0x0);
        gbc.writeMem(0x1813, { 0x3e, 0x9b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa86a, gbc.sp());
        EXPECT(0x1815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0086
        gbc.setState(0xd0f2, 0x415f, 0x6fd0, 0x177, 0x5a79, 0x61c1, 0x0, 0x0);
        gbc.writeMem(0xd0f2, { 0x3e, 0x6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x415f, gbc.sp());
        EXPECT(0xd0f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd0f2));
        EXPECT(0x6, gbc.readMem(0xd0f3));
        // 3E 0087
        gbc.setState(0xe2d2, 0x26c, 0x1e90, 0xde21, 0xf803, 0x9363, 0x1, 0x0);
        gbc.writeMem(0xe2d2, { 0x3e, 0xab });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x26c, gbc.sp());
        EXPECT(0xe2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe2d2));
        EXPECT(0xab, gbc.readMem(0xe2d3));
        // 3E 0088
        gbc.setState(0x78f6, 0xbbb8, 0x9af0, 0x864d, 0xd801, 0xdaca, 0x1, 0x0);
        gbc.writeMem(0x78f6, { 0x3e, 0x82 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xbbb8, gbc.sp());
        EXPECT(0x78f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0089
        gbc.setState(0x9a79, 0x69a5, 0x1510, 0x4fae, 0x4102, 0x3338, 0x0, 0x1);
        gbc.writeMem(0x9a79, { 0x3e, 0xae });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x69a5, gbc.sp());
        EXPECT(0x9a7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9a79));
        EXPECT(0xae, gbc.readMem(0x9a7a));
        // 3E 008A
        gbc.setState(0x4b66, 0xa536, 0x8ee0, 0x7ec9, 0x34a9, 0x9346, 0x0, 0x1);
        gbc.writeMem(0x4b66, { 0x3e, 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa536, gbc.sp());
        EXPECT(0x4b68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 008B
        gbc.setState(0xa1ab, 0xb403, 0x2a70, 0x72fa, 0xa8ce, 0x90d, 0x1, 0x0);
        gbc.writeMem(0xa1ab, { 0x3e, 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb403, gbc.sp());
        EXPECT(0xa1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa1ab));
        EXPECT(0x2f, gbc.readMem(0xa1ac));
        // 3E 008C
        gbc.setState(0x3d1a, 0xd6ae, 0xc5f0, 0x6d0b, 0x9970, 0x6dbb, 0x0, 0x1);
        gbc.writeMem(0x3d1a, { 0x3e, 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd6ae, gbc.sp());
        EXPECT(0x3d1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 008D
        gbc.setState(0xb561, 0x8273, 0xb820, 0xa44b, 0xb652, 0x97e4, 0x1, 0x1);
        gbc.writeMem(0xb561, { 0x3e, 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8273, gbc.sp());
        EXPECT(0xb563, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb561));
        EXPECT(0xfa, gbc.readMem(0xb562));
        // 3E 008E
        gbc.setState(0xae3b, 0xff86, 0xbe50, 0xe6db, 0x64a8, 0x48e2, 0x0, 0x1);
        gbc.writeMem(0xae3b, { 0x3e, 0x47 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xff86, gbc.sp());
        EXPECT(0xae3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xae3b));
        EXPECT(0x47, gbc.readMem(0xae3c));
        // 3E 008F
        gbc.setState(0xc36b, 0x2aa7, 0x9040, 0x933, 0xa773, 0xe4b4, 0x0, 0x0);
        gbc.writeMem(0xc36b, { 0x3e, 0xe8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2aa7, gbc.sp());
        EXPECT(0xc36d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc36b));
        EXPECT(0xe8, gbc.readMem(0xc36c));
        // 3E 0090
        gbc.setState(0x83c5, 0xd08, 0x7ac0, 0xf869, 0xd73d, 0xe2c7, 0x1, 0x1);
        gbc.writeMem(0x83c5, { 0x3e, 0x20 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd08, gbc.sp());
        EXPECT(0x83c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x83c5));
        EXPECT(0x20, gbc.readMem(0x83c6));
        // 3E 0091
        gbc.setState(0x2ba7, 0x3c78, 0x21b0, 0x70d5, 0x32cc, 0xfa8e, 0x1, 0x1);
        gbc.writeMem(0x2ba7, { 0x3e, 0xb9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3c78, gbc.sp());
        EXPECT(0x2ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0092
        gbc.setState(0xd05e, 0x95bc, 0x8c00, 0xce30, 0xd994, 0x174b, 0x0, 0x1);
        gbc.writeMem(0xd05e, { 0x3e, 0x84 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x95bc, gbc.sp());
        EXPECT(0xd060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd05e));
        EXPECT(0x84, gbc.readMem(0xd05f));
        // 3E 0093
        gbc.setState(0xab86, 0xf7fc, 0x16d0, 0xd0d3, 0x7cdc, 0x577f, 0x0, 0x1);
        gbc.writeMem(0xab86, { 0x3e, 0xdb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf7fc, gbc.sp());
        EXPECT(0xab88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xab86));
        EXPECT(0xdb, gbc.readMem(0xab87));
        // 3E 0094
        gbc.setState(0x4291, 0x7820, 0xb720, 0x33b8, 0x4985, 0x8fb0, 0x1, 0x0);
        gbc.writeMem(0x4291, { 0x3e, 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7820, gbc.sp());
        EXPECT(0x4293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0095
        gbc.setState(0xcb24, 0x48b1, 0xb6f0, 0x3164, 0x7572, 0x4f0f, 0x1, 0x1);
        gbc.writeMem(0xcb24, { 0x3e, 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x48b1, gbc.sp());
        EXPECT(0xcb26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcb24));
        EXPECT(0x4d, gbc.readMem(0xcb25));
        // 3E 0096
        gbc.setState(0xb217, 0x4d06, 0xdf40, 0x1052, 0xdde0, 0xa54f, 0x0, 0x0);
        gbc.writeMem(0xb217, { 0x3e, 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4d06, gbc.sp());
        EXPECT(0xb219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb217));
        EXPECT(0xd0, gbc.readMem(0xb218));
        // 3E 0097
        gbc.setState(0x7ca, 0x9de5, 0x8e80, 0xded8, 0xf852, 0x87c0, 0x0, 0x1);
        gbc.writeMem(0x7ca, { 0x3e, 0x6d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9de5, gbc.sp());
        EXPECT(0x7cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0098
        gbc.setState(0x58ac, 0x573d, 0x99f0, 0x5a8, 0x7a85, 0xa0fd, 0x0, 0x1);
        gbc.writeMem(0x58ac, { 0x3e, 0x27 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x573d, gbc.sp());
        EXPECT(0x58ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 009A
        gbc.setState(0xb8f6, 0x624e, 0x5be0, 0xd59c, 0xe42e, 0xf30c, 0x0, 0x1);
        gbc.writeMem(0xb8f6, { 0x3e, 0x60 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x624e, gbc.sp());
        EXPECT(0xb8f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb8f6));
        EXPECT(0x60, gbc.readMem(0xb8f7));
        // 3E 009B
        gbc.setState(0xf7f, 0xeb0a, 0x8ad0, 0x3493, 0xb2fc, 0xef8a, 0x0, 0x0);
        gbc.writeMem(0xf7f, { 0x3e, 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xeb0a, gbc.sp());
        EXPECT(0xf81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 009C
        gbc.setState(0x371f, 0x6ed1, 0x6b40, 0xf37d, 0x9faf, 0x8cc0, 0x0, 0x1);
        gbc.writeMem(0x371f, { 0x3e, 0x4c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6ed1, gbc.sp());
        EXPECT(0x3721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 009E
        gbc.setState(0x3621, 0x1934, 0x7310, 0x2e3a, 0xcba1, 0x888e, 0x1, 0x0);
        gbc.writeMem(0x3621, { 0x3e, 0x60 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1934, gbc.sp());
        EXPECT(0x3623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 009F
        gbc.setState(0x11d6, 0x1178, 0x2b20, 0x4145, 0x7797, 0x7931, 0x0, 0x0);
        gbc.writeMem(0x11d6, { 0x3e, 0x93 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1178, gbc.sp());
        EXPECT(0x11d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00A0
        gbc.setState(0x5f8b, 0x9e76, 0xa3c0, 0xc6b2, 0x5625, 0x3715, 0x0, 0x1);
        gbc.writeMem(0x5f8b, { 0x3e, 0x2e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9e76, gbc.sp());
        EXPECT(0x5f8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00A2
        gbc.setState(0xae62, 0xd270, 0x17b0, 0xcac2, 0xd8a2, 0xc0f, 0x0, 0x0);
        gbc.writeMem(0xae62, { 0x3e, 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd270, gbc.sp());
        EXPECT(0xae64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xae62));
        EXPECT(0x96, gbc.readMem(0xae63));
        // 3E 00A3
        gbc.setState(0x6024, 0xad27, 0x3cd0, 0x90a9, 0x5ebe, 0x92e1, 0x0, 0x0);
        gbc.writeMem(0x6024, { 0x3e, 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xad27, gbc.sp());
        EXPECT(0x6026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00A4
        gbc.setState(0x20af, 0xaad9, 0xe990, 0x787, 0xd11c, 0x2b0e, 0x0, 0x0);
        gbc.writeMem(0x20af, { 0x3e, 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xaad9, gbc.sp());
        EXPECT(0x20b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00A5
        gbc.setState(0x6162, 0xa6e3, 0x4140, 0xec1d, 0xec0c, 0x20be, 0x0, 0x0);
        gbc.writeMem(0x6162, { 0x3e, 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa6e3, gbc.sp());
        EXPECT(0x6164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00A6
        gbc.setState(0xca78, 0x22dd, 0xc7b0, 0xbcc5, 0x9b, 0x41f2, 0x1, 0x1);
        gbc.writeMem(0xca78, { 0x3e, 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x22dd, gbc.sp());
        EXPECT(0xca7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xca78));
        EXPECT(0x11, gbc.readMem(0xca79));
        // 3E 00A7
        gbc.setState(0x4a8f, 0xb296, 0xbd50, 0xa468, 0xf64c, 0x6c95, 0x0, 0x1);
        gbc.writeMem(0x4a8f, { 0x3e, 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb296, gbc.sp());
        EXPECT(0x4a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00A8
        gbc.setState(0x139b, 0x1fab, 0x5a20, 0xc1db, 0xf72e, 0x4b41, 0x1, 0x1);
        gbc.writeMem(0x139b, { 0x3e, 0x7d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1fab, gbc.sp());
        EXPECT(0x139d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00A9
        gbc.setState(0x3a1c, 0x818d, 0x7c40, 0x5d55, 0x3a0c, 0x7f6c, 0x1, 0x1);
        gbc.writeMem(0x3a1c, { 0x3e, 0x91 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x818d, gbc.sp());
        EXPECT(0x3a1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00AB
        gbc.setState(0x4ca4, 0xd6a2, 0xf8f0, 0xdf23, 0xc2bb, 0xd00, 0x0, 0x0);
        gbc.writeMem(0x4ca4, { 0x3e, 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd6a2, gbc.sp());
        EXPECT(0x4ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00AC
        gbc.setState(0xd977, 0xac80, 0x5f50, 0xf84b, 0x2a13, 0x3b64, 0x1, 0x0);
        gbc.writeMem(0xd977, { 0x3e, 0x56 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xac80, gbc.sp());
        EXPECT(0xd979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd977));
        EXPECT(0x56, gbc.readMem(0xd978));
        // 3E 00AF
        gbc.setState(0xe944, 0x8a58, 0xf660, 0x2ece, 0x2d8a, 0x6ebf, 0x0, 0x0);
        gbc.writeMem(0xe944, { 0x3e, 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8a58, gbc.sp());
        EXPECT(0xe946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe944));
        EXPECT(0x5e, gbc.readMem(0xe945));
        // 3E 00B0
        gbc.setState(0x4c34, 0xbdb5, 0x4710, 0x7dd0, 0x75e2, 0x864a, 0x0, 0x0);
        gbc.writeMem(0x4c34, { 0x3e, 0xfc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbdb5, gbc.sp());
        EXPECT(0x4c36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00B1
        gbc.setState(0x9f2a, 0xb529, 0x3800, 0xa4c, 0x7815, 0xae10, 0x1, 0x1);
        gbc.writeMem(0x9f2a, { 0x3e, 0xc2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb529, gbc.sp());
        EXPECT(0x9f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9f2a));
        EXPECT(0xc2, gbc.readMem(0x9f2b));
        // 3E 00B2
        gbc.setState(0xb30f, 0x74db, 0x65e0, 0x496a, 0x2aa8, 0x7eba, 0x1, 0x0);
        gbc.writeMem(0xb30f, { 0x3e, 0x19 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x74db, gbc.sp());
        EXPECT(0xb311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb30f));
        EXPECT(0x19, gbc.readMem(0xb310));
        // 3E 00B3
        gbc.setState(0x6aa8, 0x7f34, 0xe9f0, 0xbcac, 0x1b63, 0x7946, 0x1, 0x0);
        gbc.writeMem(0x6aa8, { 0x3e, 0x84 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7f34, gbc.sp());
        EXPECT(0x6aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00B4
        gbc.setState(0x6e69, 0x8c09, 0x8dc0, 0x25a9, 0xeb7b, 0x2df4, 0x0, 0x1);
        gbc.writeMem(0x6e69, { 0x3e, 0xa8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8c09, gbc.sp());
        EXPECT(0x6e6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00B5
        gbc.setState(0xd62f, 0xd109, 0x96d0, 0xd660, 0xeba1, 0xd6a1, 0x0, 0x0);
        gbc.writeMem(0xd62f, { 0x3e, 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd109, gbc.sp());
        EXPECT(0xd631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd62f));
        EXPECT(0xd, gbc.readMem(0xd630));
        // 3E 00B6
        gbc.setState(0xb508, 0xb009, 0x4f40, 0xafa4, 0x10a5, 0xbdba, 0x0, 0x1);
        gbc.writeMem(0xb508, { 0x3e, 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb009, gbc.sp());
        EXPECT(0xb50a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb508));
        EXPECT(0xea, gbc.readMem(0xb509));
        // 3E 00B7
        gbc.setState(0x3b09, 0x6291, 0x7790, 0x8b3c, 0x58ec, 0x6499, 0x0, 0x0);
        gbc.writeMem(0x3b09, { 0x3e, 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6291, gbc.sp());
        EXPECT(0x3b0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00B8
        gbc.setState(0x5ce6, 0x46f5, 0xeb50, 0xec25, 0xd9aa, 0x29eb, 0x0, 0x0);
        gbc.writeMem(0x5ce6, { 0x3e, 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x46f5, gbc.sp());
        EXPECT(0x5ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00B9
        gbc.setState(0x2573, 0xeaa5, 0xa3d0, 0x6b20, 0xfc47, 0x6484, 0x1, 0x1);
        gbc.writeMem(0x2573, { 0x3e, 0xa8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xeaa5, gbc.sp());
        EXPECT(0x2575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00BA
        gbc.setState(0xbc73, 0xd0a1, 0x2290, 0xae65, 0xea60, 0x8a4f, 0x0, 0x1);
        gbc.writeMem(0xbc73, { 0x3e, 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd0a1, gbc.sp());
        EXPECT(0xbc75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbc73));
        EXPECT(0x9d, gbc.readMem(0xbc74));
        // 3E 00BB
        gbc.setState(0x2c08, 0x8fb0, 0xed00, 0x3f4, 0x5a7b, 0x8b03, 0x0, 0x0);
        gbc.writeMem(0x2c08, { 0x3e, 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8fb0, gbc.sp());
        EXPECT(0x2c0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00BC
        gbc.setState(0xce91, 0x5bcd, 0xb990, 0xe5, 0x74e8, 0xfc07, 0x1, 0x1);
        gbc.writeMem(0xce91, { 0x3e, 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5bcd, gbc.sp());
        EXPECT(0xce93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xce91));
        EXPECT(0x2c, gbc.readMem(0xce92));
        // 3E 00BD
        gbc.setState(0xb70e, 0x3466, 0xa4a0, 0x9c82, 0x5679, 0x79a, 0x0, 0x0);
        gbc.writeMem(0xb70e, { 0x3e, 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3466, gbc.sp());
        EXPECT(0xb710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb70e));
        EXPECT(0x8, gbc.readMem(0xb70f));
        // 3E 00BE
        gbc.setState(0x66cd, 0x3d5b, 0x8700, 0x3f9f, 0x9da3, 0xa4f0, 0x0, 0x0);
        gbc.writeMem(0x66cd, { 0x3e, 0xfe });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3d5b, gbc.sp());
        EXPECT(0x66cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00BF
        gbc.setState(0x6f9d, 0x6d57, 0x6970, 0x8a0b, 0xd169, 0xdaf7, 0x0, 0x0);
        gbc.writeMem(0x6f9d, { 0x3e, 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6d57, gbc.sp());
        EXPECT(0x6f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00C0
        gbc.setState(0xa267, 0x976, 0x9370, 0x38a, 0xab58, 0x8ca9, 0x0, 0x0);
        gbc.writeMem(0xa267, { 0x3e, 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x976, gbc.sp());
        EXPECT(0xa269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa267));
        EXPECT(0x8, gbc.readMem(0xa268));
        // 3E 00C1
        gbc.setState(0xc2a0, 0xfcf0, 0xb7c0, 0xa36c, 0xd534, 0xbd90, 0x0, 0x1);
        gbc.writeMem(0xc2a0, { 0x3e, 0xda });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfcf0, gbc.sp());
        EXPECT(0xc2a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc2a0));
        EXPECT(0xda, gbc.readMem(0xc2a1));
        // 3E 00C2
        gbc.setState(0xef4f, 0x7a0f, 0x3420, 0xab28, 0xac3c, 0xf28e, 0x0, 0x0);
        gbc.writeMem(0xef4f, { 0x3e, 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7a0f, gbc.sp());
        EXPECT(0xef51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xef4f));
        EXPECT(0x8f, gbc.readMem(0xef50));
        // 3E 00C3
        gbc.setState(0x9a87, 0xea52, 0x4290, 0x4ed, 0xcb94, 0x99b, 0x1, 0x0);
        gbc.writeMem(0x9a87, { 0x3e, 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xea52, gbc.sp());
        EXPECT(0x9a89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9a87));
        EXPECT(0x55, gbc.readMem(0x9a88));
        // 3E 00C4
        gbc.setState(0x2cc7, 0x67d, 0xd560, 0x7387, 0x8476, 0xf706, 0x0, 0x0);
        gbc.writeMem(0x2cc7, { 0x3e, 0xf5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x67d, gbc.sp());
        EXPECT(0x2cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00C5
        gbc.setState(0x2ce2, 0x11a3, 0x9d30, 0xb313, 0x31bf, 0x595, 0x1, 0x1);
        gbc.writeMem(0x2ce2, { 0x3e, 0xb9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x11a3, gbc.sp());
        EXPECT(0x2ce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00C6
        gbc.setState(0xcdf7, 0xf565, 0xa0d0, 0x4244, 0x9416, 0x1b15, 0x1, 0x0);
        gbc.writeMem(0xcdf7, { 0x3e, 0x2d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf565, gbc.sp());
        EXPECT(0xcdf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcdf7));
        EXPECT(0x2d, gbc.readMem(0xcdf8));
        // 3E 00C8
        gbc.setState(0x42ca, 0xde8a, 0xaae0, 0xcb41, 0x87b2, 0xa53d, 0x0, 0x1);
        gbc.writeMem(0x42ca, { 0x3e, 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xde8a, gbc.sp());
        EXPECT(0x42cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00C9
        gbc.setState(0x308d, 0x1b92, 0x8b40, 0xb3a3, 0xbef5, 0x3fde, 0x1, 0x1);
        gbc.writeMem(0x308d, { 0x3e, 0x3f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1b92, gbc.sp());
        EXPECT(0x308f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00CA
        gbc.setState(0x7baa, 0x33ae, 0x4c70, 0xa79d, 0x5bab, 0xcb84, 0x1, 0x1);
        gbc.writeMem(0x7baa, { 0x3e, 0x1d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x33ae, gbc.sp());
        EXPECT(0x7bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00CB
        gbc.setState(0x15e1, 0xe43f, 0x45d0, 0x94e6, 0xe7f, 0x1531, 0x1, 0x0);
        gbc.writeMem(0x15e1, { 0x3e, 0x58 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe43f, gbc.sp());
        EXPECT(0x15e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00CC
        gbc.setState(0x9a6b, 0xc6bb, 0x8770, 0x90be, 0x63aa, 0x6205, 0x0, 0x1);
        gbc.writeMem(0x9a6b, { 0x3e, 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc6bb, gbc.sp());
        EXPECT(0x9a6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9a6b));
        EXPECT(0x30, gbc.readMem(0x9a6c));
        // 3E 00CD
        gbc.setState(0x2d94, 0xd898, 0x5310, 0x2ad2, 0xb6a6, 0x61d4, 0x1, 0x0);
        gbc.writeMem(0x2d94, { 0x3e, 0x6f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd898, gbc.sp());
        EXPECT(0x2d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00CE
        gbc.setState(0xc774, 0x53fc, 0xe250, 0x34a2, 0xf8e1, 0x453c, 0x0, 0x1);
        gbc.writeMem(0xc774, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x53fc, gbc.sp());
        EXPECT(0xc776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc774));
        EXPECT(0x3b, gbc.readMem(0xc775));
        // 3E 00CF
        gbc.setState(0xe17e, 0x9e67, 0x5930, 0x9e29, 0x26b9, 0x7591, 0x0, 0x1);
        gbc.writeMem(0xe17e, { 0x3e, 0x32 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9e67, gbc.sp());
        EXPECT(0xe180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe17e));
        EXPECT(0x32, gbc.readMem(0xe17f));
        // 3E 00D0
        gbc.setState(0x2c48, 0xc634, 0x4a50, 0xe24e, 0x9509, 0x60b8, 0x0, 0x0);
        gbc.writeMem(0x2c48, { 0x3e, 0x2e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc634, gbc.sp());
        EXPECT(0x2c4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00D1
        gbc.setState(0xc061, 0x9c4, 0xfbb0, 0x8e7c, 0x1479, 0xd164, 0x0, 0x0);
        gbc.writeMem(0xc061, { 0x3e, 0xe6 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9c4, gbc.sp());
        EXPECT(0xc063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc061));
        EXPECT(0xe6, gbc.readMem(0xc062));
        // 3E 00D2
        gbc.setState(0xe008, 0x8722, 0xedb0, 0xeabb, 0x674, 0x6ed3, 0x1, 0x0);
        gbc.writeMem(0xe008, { 0x3e, 0x61 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8722, gbc.sp());
        EXPECT(0xe00a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe008));
        EXPECT(0x61, gbc.readMem(0xe009));
        // 3E 00D3
        gbc.setState(0xce4c, 0xba1c, 0x5640, 0x34c5, 0xb978, 0xa54, 0x0, 0x0);
        gbc.writeMem(0xce4c, { 0x3e, 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xba1c, gbc.sp());
        EXPECT(0xce4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xce4c));
        EXPECT(0xf2, gbc.readMem(0xce4d));
        // 3E 00D4
        gbc.setState(0x2821, 0xeea2, 0xdaf0, 0x316a, 0x939a, 0x612a, 0x0, 0x0);
        gbc.writeMem(0x2821, { 0x3e, 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xeea2, gbc.sp());
        EXPECT(0x2823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00D5
        gbc.setState(0x37e4, 0xf1c3, 0x1f00, 0xa35b, 0xab5, 0x6513, 0x1, 0x0);
        gbc.writeMem(0x37e4, { 0x3e, 0xf4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf1c3, gbc.sp());
        EXPECT(0x37e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00D6
        gbc.setState(0x991b, 0xb58d, 0xa590, 0xf6c9, 0xac2b, 0x5ccf, 0x1, 0x0);
        gbc.writeMem(0x991b, { 0x3e, 0x15 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb58d, gbc.sp());
        EXPECT(0x991d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x991b));
        EXPECT(0x15, gbc.readMem(0x991c));
        // 3E 00D7
        gbc.setState(0x4173, 0x5938, 0x580, 0xe666, 0x2a7, 0xc76f, 0x0, 0x1);
        gbc.writeMem(0x4173, { 0x3e, 0xe8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5938, gbc.sp());
        EXPECT(0x4175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00D8
        gbc.setState(0x80fc, 0x8316, 0xa0, 0xc6a7, 0xe86, 0x4ccb, 0x1, 0x0);
        gbc.writeMem(0x80fc, { 0x3e, 0x7f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8316, gbc.sp());
        EXPECT(0x80fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x80fc));
        EXPECT(0x7f, gbc.readMem(0x80fd));
        // 3E 00D9
        gbc.setState(0x6840, 0xb4a0, 0x58a0, 0x1073, 0xaf45, 0x5027, 0x1, 0x1);
        gbc.writeMem(0x6840, { 0x3e, 0xc6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb4a0, gbc.sp());
        EXPECT(0x6842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00DA
        gbc.setState(0x6365, 0x1db4, 0xd5d0, 0xf1a5, 0x4cc7, 0x895c, 0x0, 0x0);
        gbc.writeMem(0x6365, { 0x3e, 0x75 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1db4, gbc.sp());
        EXPECT(0x6367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00DB
        gbc.setState(0x6058, 0xbeff, 0x3de0, 0xd664, 0x8954, 0x5047, 0x1, 0x1);
        gbc.writeMem(0x6058, { 0x3e, 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbeff, gbc.sp());
        EXPECT(0x605a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00DC
        gbc.setState(0xbf39, 0x59db, 0x4ec0, 0xc4d4, 0x82ff, 0x66dd, 0x1, 0x1);
        gbc.writeMem(0xbf39, { 0x3e, 0x9a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x59db, gbc.sp());
        EXPECT(0xbf3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbf39));
        EXPECT(0x9a, gbc.readMem(0xbf3a));
        // 3E 00DD
        gbc.setState(0xcddb, 0x49ec, 0x4960, 0xf0b4, 0x92a5, 0xbf4, 0x1, 0x1);
        gbc.writeMem(0xcddb, { 0x3e, 0x20 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x49ec, gbc.sp());
        EXPECT(0xcddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcddb));
        EXPECT(0x20, gbc.readMem(0xcddc));
        // 3E 00DE
        gbc.setState(0xd7cd, 0x3173, 0xd290, 0xcb3c, 0x136, 0x1dfe, 0x0, 0x1);
        gbc.writeMem(0xd7cd, { 0x3e, 0x79 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3173, gbc.sp());
        EXPECT(0xd7cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd7cd));
        EXPECT(0x79, gbc.readMem(0xd7ce));
        // 3E 00DF
        gbc.setState(0xc56b, 0x6db8, 0x5290, 0xf9a4, 0x769e, 0xb3c2, 0x0, 0x0);
        gbc.writeMem(0xc56b, { 0x3e, 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6db8, gbc.sp());
        EXPECT(0xc56d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc56b));
        EXPECT(0x33, gbc.readMem(0xc56c));
        // 3E 00E0
        gbc.setState(0xc196, 0x7a52, 0xd2f0, 0xdb07, 0xb542, 0x9b1, 0x0, 0x1);
        gbc.writeMem(0xc196, { 0x3e, 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7a52, gbc.sp());
        EXPECT(0xc198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc196));
        EXPECT(0x4b, gbc.readMem(0xc197));
        // 3E 00E1
        gbc.setState(0x44e2, 0xcacf, 0x21c0, 0xcf78, 0xaf44, 0xdb42, 0x0, 0x0);
        gbc.writeMem(0x44e2, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xcacf, gbc.sp());
        EXPECT(0x44e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00E2
        gbc.setState(0xcae6, 0x6ea8, 0xc520, 0x95d2, 0x5f5f, 0x7650, 0x0, 0x0);
        gbc.writeMem(0xcae6, { 0x3e, 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6ea8, gbc.sp());
        EXPECT(0xcae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcae6));
        EXPECT(0x18, gbc.readMem(0xcae7));
        // 3E 00E3
        gbc.setState(0x1ccf, 0x22ad, 0xf5c0, 0xbd22, 0x1fbb, 0x973b, 0x0, 0x1);
        gbc.writeMem(0x1ccf, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x22ad, gbc.sp());
        EXPECT(0x1cd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00E5
        gbc.setState(0x350a, 0x3e15, 0xd870, 0xf8a1, 0x5379, 0x7ed0, 0x0, 0x1);
        gbc.writeMem(0x350a, { 0x3e, 0xf4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3e15, gbc.sp());
        EXPECT(0x350c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00E6
        gbc.setState(0x4bdb, 0xcb11, 0x5230, 0xfdd1, 0xdc78, 0x217d, 0x1, 0x0);
        gbc.writeMem(0x4bdb, { 0x3e, 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcb11, gbc.sp());
        EXPECT(0x4bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00E7
        gbc.setState(0x3c8b, 0xe26c, 0x3b60, 0xdbf3, 0xc796, 0xa7dc, 0x1, 0x0);
        gbc.writeMem(0x3c8b, { 0x3e, 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe26c, gbc.sp());
        EXPECT(0x3c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00E8
        gbc.setState(0x57b2, 0xd175, 0x6800, 0x2718, 0xb753, 0x3138, 0x1, 0x0);
        gbc.writeMem(0x57b2, { 0x3e, 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd175, gbc.sp());
        EXPECT(0x57b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00E9
        gbc.setState(0x9a7f, 0x3414, 0x2df0, 0x44f4, 0xf814, 0xe7e7, 0x0, 0x0);
        gbc.writeMem(0x9a7f, { 0x3e, 0x5a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3414, gbc.sp());
        EXPECT(0x9a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9a7f));
        EXPECT(0x5a, gbc.readMem(0x9a80));
        // 3E 00EA
        gbc.setState(0x5b94, 0x30ed, 0x1e70, 0x9f7d, 0xe22e, 0x9a3d, 0x0, 0x0);
        gbc.writeMem(0x5b94, { 0x3e, 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x30ed, gbc.sp());
        EXPECT(0x5b96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00EB
        gbc.setState(0x67d3, 0xe76b, 0xe980, 0x1759, 0x13a3, 0x7a11, 0x0, 0x0);
        gbc.writeMem(0x67d3, { 0x3e, 0x32 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe76b, gbc.sp());
        EXPECT(0x67d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00EC
        gbc.setState(0x356d, 0xa5fc, 0xe660, 0x27db, 0xc4f6, 0x265a, 0x0, 0x0);
        gbc.writeMem(0x356d, { 0x3e, 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa5fc, gbc.sp());
        EXPECT(0x356f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00ED
        gbc.setState(0x7c6f, 0x8732, 0x2660, 0xd6a6, 0x167a, 0xc636, 0x0, 0x0);
        gbc.writeMem(0x7c6f, { 0x3e, 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8732, gbc.sp());
        EXPECT(0x7c71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00EE
        gbc.setState(0x3a10, 0x2eae, 0xeec0, 0x8eca, 0x57a5, 0x518a, 0x1, 0x0);
        gbc.writeMem(0x3a10, { 0x3e, 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2eae, gbc.sp());
        EXPECT(0x3a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00EF
        gbc.setState(0xbef0, 0x42d9, 0xf8d0, 0xf07f, 0xa9d6, 0xaee3, 0x1, 0x1);
        gbc.writeMem(0xbef0, { 0x3e, 0x93 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x42d9, gbc.sp());
        EXPECT(0xbef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbef0));
        EXPECT(0x93, gbc.readMem(0xbef1));
        // 3E 00F0
        gbc.setState(0x2482, 0xdf82, 0x60b0, 0x76e9, 0xf95b, 0xb866, 0x0, 0x1);
        gbc.writeMem(0x2482, { 0x3e, 0x25 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdf82, gbc.sp());
        EXPECT(0x2484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00F1
        gbc.setState(0xb42c, 0xf4c0, 0x230, 0x5f25, 0x9bd3, 0x55eb, 0x0, 0x0);
        gbc.writeMem(0xb42c, { 0x3e, 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf4c0, gbc.sp());
        EXPECT(0xb42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb42c));
        EXPECT(0x92, gbc.readMem(0xb42d));
        // 3E 00F3
        gbc.setState(0x9e21, 0xe041, 0x8190, 0x7356, 0x43dc, 0x5687, 0x0, 0x1);
        gbc.writeMem(0x9e21, { 0x3e, 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe041, gbc.sp());
        EXPECT(0x9e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9e21));
        EXPECT(0x96, gbc.readMem(0x9e22));
        // 3E 00F4
        gbc.setState(0x8a00, 0xf9fa, 0x97f0, 0x207f, 0xabd, 0xac6a, 0x1, 0x0);
        gbc.writeMem(0x8a00, { 0x3e, 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf9fa, gbc.sp());
        EXPECT(0x8a02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8a00));
        EXPECT(0x1c, gbc.readMem(0x8a01));
        // 3E 00F5
        gbc.setState(0x1b6f, 0x4599, 0x91f0, 0x7dd0, 0xcd52, 0xe75b, 0x0, 0x0);
        gbc.writeMem(0x1b6f, { 0x3e, 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4599, gbc.sp());
        EXPECT(0x1b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00F6
        gbc.setState(0x181b, 0x15df, 0x1810, 0x345c, 0x8f8a, 0x2035, 0x1, 0x0);
        gbc.writeMem(0x181b, { 0x3e, 0x7f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x15df, gbc.sp());
        EXPECT(0x181d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00F7
        gbc.setState(0x78ff, 0x6105, 0x91c0, 0xada8, 0xfa9c, 0xeace, 0x0, 0x1);
        gbc.writeMem(0x78ff, { 0x3e, 0x56 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6105, gbc.sp());
        EXPECT(0x7901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00F8
        gbc.setState(0xad18, 0xc1b7, 0x7a10, 0x49d0, 0x7d1a, 0x4832, 0x0, 0x0);
        gbc.writeMem(0xad18, { 0x3e, 0x78 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc1b7, gbc.sp());
        EXPECT(0xad1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xad18));
        EXPECT(0x78, gbc.readMem(0xad19));
        // 3E 00F9
        gbc.setState(0x4a3, 0x2a15, 0x53c0, 0xd47e, 0xcd90, 0x25ea, 0x1, 0x0);
        gbc.writeMem(0x4a3, { 0x3e, 0xb3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2a15, gbc.sp());
        EXPECT(0x4a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00FA
        gbc.setState(0x8a70, 0xed51, 0x4070, 0x59b, 0x55d4, 0xb928, 0x0, 0x0);
        gbc.writeMem(0x8a70, { 0x3e, 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xed51, gbc.sp());
        EXPECT(0x8a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8a70));
        EXPECT(0xbb, gbc.readMem(0x8a71));
        // 3E 00FB
        gbc.setState(0xa404, 0x3ab2, 0x8ad0, 0xe8a3, 0xccd8, 0x60ab, 0x1, 0x1);
        gbc.writeMem(0xa404, { 0x3e, 0x56 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3ab2, gbc.sp());
        EXPECT(0xa406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa404));
        EXPECT(0x56, gbc.readMem(0xa405));
        // 3E 00FC
        gbc.setState(0x3254, 0xbd6e, 0xeb30, 0x572a, 0x35da, 0x2a4b, 0x1, 0x1);
        gbc.writeMem(0x3254, { 0x3e, 0xd7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbd6e, gbc.sp());
        EXPECT(0x3256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00FD
        gbc.setState(0x58b6, 0x5d76, 0x6590, 0x2b8d, 0x15bd, 0x3ade, 0x1, 0x1);
        gbc.writeMem(0x58b6, { 0x3e, 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5d76, gbc.sp());
        EXPECT(0x58b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 00FE
        gbc.setState(0x6b0f, 0x26d3, 0xfdc0, 0xfddb, 0x6ba8, 0x8872, 0x0, 0x0);
        gbc.writeMem(0x6b0f, { 0x3e, 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x26d3, gbc.sp());
        EXPECT(0x6b11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 00FF
        gbc.setState(0x4b05, 0xf5c9, 0x6960, 0x4f29, 0x1fab, 0x1229, 0x0, 0x0);
        gbc.writeMem(0x4b05, { 0x3e, 0xca });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf5c9, gbc.sp());
        EXPECT(0x4b07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0100
        gbc.setState(0x9f79, 0x205, 0x52e0, 0x28a1, 0xcc2b, 0xafd8, 0x0, 0x1);
        gbc.writeMem(0x9f79, { 0x3e, 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x205, gbc.sp());
        EXPECT(0x9f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9f79));
        EXPECT(0xcc, gbc.readMem(0x9f7a));
        // 3E 0101
        gbc.setState(0xf35, 0x32b3, 0x7ef0, 0x2ae1, 0x3312, 0x683, 0x0, 0x1);
        gbc.writeMem(0xf35, { 0x3e, 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x32b3, gbc.sp());
        EXPECT(0xf37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0102
        gbc.setState(0xd6a1, 0x626e, 0x6e90, 0x1c86, 0xba90, 0x59fa, 0x0, 0x1);
        gbc.writeMem(0xd6a1, { 0x3e, 0x9b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x626e, gbc.sp());
        EXPECT(0xd6a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd6a1));
        EXPECT(0x9b, gbc.readMem(0xd6a2));
        // 3E 0103
        gbc.setState(0x25d7, 0x8ab5, 0xa810, 0x3c1e, 0xbb6a, 0xb927, 0x0, 0x0);
        gbc.writeMem(0x25d7, { 0x3e, 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8ab5, gbc.sp());
        EXPECT(0x25d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0104
        gbc.setState(0xa7ac, 0xd404, 0x8c0, 0x99f8, 0x7591, 0x6f24, 0x1, 0x1);
        gbc.writeMem(0xa7ac, { 0x3e, 0x60 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd404, gbc.sp());
        EXPECT(0xa7ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa7ac));
        EXPECT(0x60, gbc.readMem(0xa7ad));
        // 3E 0105
        gbc.setState(0x658c, 0xa56e, 0x19f0, 0x7a8, 0x76b8, 0x47d, 0x1, 0x1);
        gbc.writeMem(0x658c, { 0x3e, 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa56e, gbc.sp());
        EXPECT(0x658e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0106
        gbc.setState(0xa55e, 0x8fda, 0xbc0, 0xdc27, 0xb87, 0xbbfb, 0x0, 0x1);
        gbc.writeMem(0xa55e, { 0x3e, 0x32 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8fda, gbc.sp());
        EXPECT(0xa560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa55e));
        EXPECT(0x32, gbc.readMem(0xa55f));
        // 3E 0107
        gbc.setState(0x81c2, 0xd1f3, 0x8570, 0x19a3, 0x55ac, 0xdcc1, 0x1, 0x0);
        gbc.writeMem(0x81c2, { 0x3e, 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd1f3, gbc.sp());
        EXPECT(0x81c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x81c2));
        EXPECT(0x51, gbc.readMem(0x81c3));
        // 3E 0108
        gbc.setState(0x2743, 0x7827, 0x8580, 0xaafa, 0x6611, 0x5db, 0x0, 0x1);
        gbc.writeMem(0x2743, { 0x3e, 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7827, gbc.sp());
        EXPECT(0x2745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0109
        gbc.setState(0x21b3, 0xd7f3, 0x4710, 0x5cd2, 0x5750, 0xf851, 0x1, 0x1);
        gbc.writeMem(0x21b3, { 0x3e, 0x28 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd7f3, gbc.sp());
        EXPECT(0x21b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 010A
        gbc.setState(0x6365, 0x78ec, 0x3a00, 0x10e9, 0xbbb4, 0x6ee4, 0x1, 0x1);
        gbc.writeMem(0x6365, { 0x3e, 0x75 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x78ec, gbc.sp());
        EXPECT(0x6367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 010B
        gbc.setState(0xdc2f, 0x4aa0, 0x2b40, 0x64f, 0xecbf, 0x42bd, 0x0, 0x0);
        gbc.writeMem(0xdc2f, { 0x3e, 0x7d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4aa0, gbc.sp());
        EXPECT(0xdc31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xdc2f));
        EXPECT(0x7d, gbc.readMem(0xdc30));
        // 3E 010C
        gbc.setState(0x4a50, 0xb9d6, 0x5140, 0x2345, 0x4c4b, 0xd0c8, 0x0, 0x1);
        gbc.writeMem(0x4a50, { 0x3e, 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb9d6, gbc.sp());
        EXPECT(0x4a52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 010E
        gbc.setState(0x8f5e, 0x4ad9, 0xce00, 0xb7cb, 0x5e8f, 0x8f81, 0x0, 0x1);
        gbc.writeMem(0x8f5e, { 0x3e, 0x84 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4ad9, gbc.sp());
        EXPECT(0x8f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8f5e));
        EXPECT(0x84, gbc.readMem(0x8f5f));
        // 3E 010F
        gbc.setState(0x4b85, 0x8c8c, 0x7eb0, 0x5b98, 0xb14d, 0x48e1, 0x1, 0x1);
        gbc.writeMem(0x4b85, { 0x3e, 0xe8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8c8c, gbc.sp());
        EXPECT(0x4b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0110
        gbc.setState(0x5db5, 0x1f90, 0x8650, 0x1cdd, 0xcc0b, 0xb077, 0x0, 0x0);
        gbc.writeMem(0x5db5, { 0x3e, 0x1e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1f90, gbc.sp());
        EXPECT(0x5db7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0111
        gbc.setState(0x5e67, 0x2864, 0xff20, 0x8e46, 0xb54c, 0x5cc6, 0x0, 0x0);
        gbc.writeMem(0x5e67, { 0x3e, 0xe7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2864, gbc.sp());
        EXPECT(0x5e69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0112
        gbc.setState(0xccd9, 0x18c0, 0x81f0, 0xa3ef, 0x69a2, 0x2c27, 0x0, 0x0);
        gbc.writeMem(0xccd9, { 0x3e, 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x18c0, gbc.sp());
        EXPECT(0xccdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xccd9));
        EXPECT(0x64, gbc.readMem(0xccda));
        // 3E 0113
        gbc.setState(0x8190, 0x9c7a, 0x4e10, 0xd00d, 0x84c0, 0x9015, 0x1, 0x0);
        gbc.writeMem(0x8190, { 0x3e, 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9c7a, gbc.sp());
        EXPECT(0x8192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8190));
        EXPECT(0x63, gbc.readMem(0x8191));
        // 3E 0114
        gbc.setState(0x73e5, 0xf6d5, 0xe6c0, 0xa79, 0x3385, 0x1f8d, 0x0, 0x0);
        gbc.writeMem(0x73e5, { 0x3e, 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf6d5, gbc.sp());
        EXPECT(0x73e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0115
        gbc.setState(0xa2c6, 0xcd07, 0x8fd0, 0xd4c0, 0x2f4, 0xf49a, 0x1, 0x0);
        gbc.writeMem(0xa2c6, { 0x3e, 0x9f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xcd07, gbc.sp());
        EXPECT(0xa2c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa2c6));
        EXPECT(0x9f, gbc.readMem(0xa2c7));
        // 3E 0116
        gbc.setState(0xb8e5, 0xb8e8, 0xaf10, 0x6826, 0x4793, 0xd73c, 0x1, 0x1);
        gbc.writeMem(0xb8e5, { 0x3e, 0xeb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb8e8, gbc.sp());
        EXPECT(0xb8e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb8e5));
        EXPECT(0xeb, gbc.readMem(0xb8e6));
        // 3E 0117
        gbc.setState(0x6619, 0x3aa1, 0x3420, 0x7dfa, 0x8c48, 0x1245, 0x0, 0x0);
        gbc.writeMem(0x6619, { 0x3e, 0x9f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3aa1, gbc.sp());
        EXPECT(0x661b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0118
        gbc.setState(0x4602, 0xa799, 0x48e0, 0xf6c, 0x605e, 0xa55d, 0x0, 0x0);
        gbc.writeMem(0x4602, { 0x3e, 0x67 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa799, gbc.sp());
        EXPECT(0x4604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0119
        gbc.setState(0x66ef, 0x244d, 0xf430, 0x8996, 0x9c86, 0xe519, 0x0, 0x1);
        gbc.writeMem(0x66ef, { 0x3e, 0x16 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x244d, gbc.sp());
        EXPECT(0x66f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 011A
        gbc.setState(0xdf51, 0x3651, 0xf5b0, 0x1b76, 0x45de, 0x5daa, 0x0, 0x0);
        gbc.writeMem(0xdf51, { 0x3e, 0xba });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3651, gbc.sp());
        EXPECT(0xdf53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xdf51));
        EXPECT(0xba, gbc.readMem(0xdf52));
        // 3E 011B
        gbc.setState(0xe06f, 0xac8f, 0x2e60, 0x11a8, 0x612c, 0xe6b8, 0x1, 0x1);
        gbc.writeMem(0xe06f, { 0x3e, 0x74 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xac8f, gbc.sp());
        EXPECT(0xe071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe06f));
        EXPECT(0x74, gbc.readMem(0xe070));
        // 3E 011C
        gbc.setState(0xa08f, 0xd69d, 0x4990, 0x4192, 0x6a2d, 0xbc36, 0x1, 0x1);
        gbc.writeMem(0xa08f, { 0x3e, 0x6b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd69d, gbc.sp());
        EXPECT(0xa091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa08f));
        EXPECT(0x6b, gbc.readMem(0xa090));
        // 3E 011D
        gbc.setState(0xdeb7, 0x7ec2, 0x200, 0xd5e3, 0x1a8e, 0x3802, 0x1, 0x0);
        gbc.writeMem(0xdeb7, { 0x3e, 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7ec2, gbc.sp());
        EXPECT(0xdeb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xdeb7));
        EXPECT(0x34, gbc.readMem(0xdeb8));
        // 3E 011E
        gbc.setState(0x9a99, 0xff59, 0x40d0, 0x1df8, 0x21fb, 0x96da, 0x1, 0x1);
        gbc.writeMem(0x9a99, { 0x3e, 0xe8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xff59, gbc.sp());
        EXPECT(0x9a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9a99));
        EXPECT(0xe8, gbc.readMem(0x9a9a));
        // 3E 011F
        gbc.setState(0xc7a3, 0x610a, 0xc280, 0xf335, 0x7dfe, 0x9846, 0x1, 0x1);
        gbc.writeMem(0xc7a3, { 0x3e, 0xa5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x610a, gbc.sp());
        EXPECT(0xc7a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc7a3));
        EXPECT(0xa5, gbc.readMem(0xc7a4));
        // 3E 0120
        gbc.setState(0x79e3, 0x799a, 0x4f30, 0x1ba6, 0xbf3, 0xbf0a, 0x1, 0x1);
        gbc.writeMem(0x79e3, { 0x3e, 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x799a, gbc.sp());
        EXPECT(0x79e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0121
        gbc.setState(0x4285, 0x7bba, 0x4520, 0x3a47, 0xa1b8, 0x9e4e, 0x0, 0x1);
        gbc.writeMem(0x4285, { 0x3e, 0xe });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7bba, gbc.sp());
        EXPECT(0x4287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0122
        gbc.setState(0xb93f, 0xc7a1, 0xe920, 0xb7e4, 0x7c73, 0xaf3, 0x0, 0x0);
        gbc.writeMem(0xb93f, { 0x3e, 0xc8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc7a1, gbc.sp());
        EXPECT(0xb941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb93f));
        EXPECT(0xc8, gbc.readMem(0xb940));
        // 3E 0123
        gbc.setState(0x6dd0, 0x1e9f, 0xcb60, 0x4756, 0xce6, 0x28e2, 0x1, 0x1);
        gbc.writeMem(0x6dd0, { 0x3e, 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1e9f, gbc.sp());
        EXPECT(0x6dd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0124
        gbc.setState(0xa383, 0x966d, 0xe1c0, 0x6e8d, 0x164e, 0x866f, 0x1, 0x1);
        gbc.writeMem(0xa383, { 0x3e, 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x966d, gbc.sp());
        EXPECT(0xa385, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa383));
        EXPECT(0x10, gbc.readMem(0xa384));
        // 3E 0125
        gbc.setState(0xedfc, 0xd750, 0x38a0, 0x169a, 0x84e9, 0x3e84, 0x0, 0x0);
        gbc.writeMem(0xedfc, { 0x3e, 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd750, gbc.sp());
        EXPECT(0xedfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xedfc));
        EXPECT(0x33, gbc.readMem(0xedfd));
        // 3E 0126
        gbc.setState(0x2d15, 0x711, 0x9900, 0xa37f, 0xc484, 0x8b6, 0x0, 0x0);
        gbc.writeMem(0x2d15, { 0x3e, 0x70 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x711, gbc.sp());
        EXPECT(0x2d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0127
        gbc.setState(0xd3da, 0x2d36, 0xd3c0, 0x28a7, 0x8fd3, 0x45c4, 0x0, 0x0);
        gbc.writeMem(0xd3da, { 0x3e, 0xd8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2d36, gbc.sp());
        EXPECT(0xd3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd3da));
        EXPECT(0xd8, gbc.readMem(0xd3db));
        // 3E 0128
        gbc.setState(0x9b50, 0x47ff, 0xcf60, 0x5a2d, 0x396e, 0x40c, 0x1, 0x0);
        gbc.writeMem(0x9b50, { 0x3e, 0x72 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x47ff, gbc.sp());
        EXPECT(0x9b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9b50));
        EXPECT(0x72, gbc.readMem(0x9b51));
        // 3E 0129
        gbc.setState(0x31ad, 0x207c, 0xb310, 0x61f2, 0x57fe, 0x6bf7, 0x1, 0x1);
        gbc.writeMem(0x31ad, { 0x3e, 0xe });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x207c, gbc.sp());
        EXPECT(0x31af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 012A
        gbc.setState(0x3cf, 0xf1a8, 0x68c0, 0x1c38, 0x179f, 0x48e5, 0x1, 0x0);
        gbc.writeMem(0x3cf, { 0x3e, 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf1a8, gbc.sp());
        EXPECT(0x3d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 012B
        gbc.setState(0x18b4, 0x49f7, 0x1910, 0xa793, 0xcef8, 0x8335, 0x0, 0x1);
        gbc.writeMem(0x18b4, { 0x3e, 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x49f7, gbc.sp());
        EXPECT(0x18b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 012C
        gbc.setState(0x28c2, 0x5107, 0x2940, 0xe5d2, 0x8307, 0x5d46, 0x1, 0x0);
        gbc.writeMem(0x28c2, { 0x3e, 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5107, gbc.sp());
        EXPECT(0x28c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 012D
        gbc.setState(0x542a, 0xfc8a, 0xc570, 0x1542, 0xce39, 0xc1d4, 0x1, 0x1);
        gbc.writeMem(0x542a, { 0x3e, 0xa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfc8a, gbc.sp());
        EXPECT(0x542c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 012E
        gbc.setState(0xe904, 0xbb41, 0x5310, 0x1d46, 0x2f59, 0xd42e, 0x0, 0x0);
        gbc.writeMem(0xe904, { 0x3e, 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbb41, gbc.sp());
        EXPECT(0xe906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe904));
        EXPECT(0xad, gbc.readMem(0xe905));
        // 3E 012F
        gbc.setState(0x274f, 0xddae, 0x35a0, 0x885f, 0x37b, 0xe163, 0x0, 0x1);
        gbc.writeMem(0x274f, { 0x3e, 0x1b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xddae, gbc.sp());
        EXPECT(0x2751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0130
        gbc.setState(0x4fa4, 0x2e19, 0xb200, 0xfff4, 0xeddd, 0x57b4, 0x1, 0x1);
        gbc.writeMem(0x4fa4, { 0x3e, 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2e19, gbc.sp());
        EXPECT(0x4fa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0131
        gbc.setState(0x9052, 0xf501, 0x20, 0xbaeb, 0x3287, 0x7c87, 0x1, 0x0);
        gbc.writeMem(0x9052, { 0x3e, 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf501, gbc.sp());
        EXPECT(0x9054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9052));
        EXPECT(0xe0, gbc.readMem(0x9053));
        // 3E 0132
        gbc.setState(0x894d, 0x4442, 0xdf30, 0xcfc9, 0xc91b, 0x4301, 0x0, 0x0);
        gbc.writeMem(0x894d, { 0x3e, 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4442, gbc.sp());
        EXPECT(0x894f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x894d));
        EXPECT(0xa0, gbc.readMem(0x894e));
        // 3E 0133
        gbc.setState(0xbb7a, 0x2a76, 0xd240, 0xf238, 0xdbea, 0x8e9f, 0x0, 0x0);
        gbc.writeMem(0xbb7a, { 0x3e, 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2a76, gbc.sp());
        EXPECT(0xbb7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbb7a));
        EXPECT(0xfa, gbc.readMem(0xbb7b));
        // 3E 0134
        gbc.setState(0x3d9a, 0x79cf, 0xb7c0, 0x6e95, 0x4645, 0x556f, 0x1, 0x1);
        gbc.writeMem(0x3d9a, { 0x3e, 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x79cf, gbc.sp());
        EXPECT(0x3d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0135
        gbc.setState(0x4e9e, 0xc4f5, 0x7760, 0xcae0, 0x4c60, 0x8ffb, 0x1, 0x0);
        gbc.writeMem(0x4e9e, { 0x3e, 0xbd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc4f5, gbc.sp());
        EXPECT(0x4ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0136
        gbc.setState(0xd0, 0x5f7c, 0xf8e0, 0xebea, 0xb044, 0x7fdb, 0x1, 0x1);
        gbc.writeMem(0xd0, { 0x3e, 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5f7c, gbc.sp());
        EXPECT(0xd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0137
        gbc.setState(0x57f0, 0x4709, 0x78d0, 0xfefb, 0xb2bf, 0x3cfc, 0x1, 0x0);
        gbc.writeMem(0x57f0, { 0x3e, 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4709, gbc.sp());
        EXPECT(0x57f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0138
        gbc.setState(0x7958, 0x44e4, 0xb110, 0xaa2e, 0x8a93, 0x2d98, 0x0, 0x1);
        gbc.writeMem(0x7958, { 0x3e, 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x44e4, gbc.sp());
        EXPECT(0x795a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0139
        gbc.setState(0x699d, 0x6ff7, 0x9880, 0x1ca3, 0xea50, 0x76cb, 0x0, 0x0);
        gbc.writeMem(0x699d, { 0x3e, 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6ff7, gbc.sp());
        EXPECT(0x699f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 013A
        gbc.setState(0x9bf3, 0x3556, 0x5930, 0x8e65, 0x4296, 0x8c16, 0x1, 0x1);
        gbc.writeMem(0x9bf3, { 0x3e, 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3556, gbc.sp());
        EXPECT(0x9bf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9bf3));
        EXPECT(0x23, gbc.readMem(0x9bf4));
        // 3E 013B
        gbc.setState(0xb447, 0x7d48, 0x7460, 0x5a0, 0x7ea0, 0x6bbc, 0x1, 0x0);
        gbc.writeMem(0xb447, { 0x3e, 0xeb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7d48, gbc.sp());
        EXPECT(0xb449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb447));
        EXPECT(0xeb, gbc.readMem(0xb448));
        // 3E 013C
        gbc.setState(0xa542, 0x85f7, 0xb5d0, 0x63ce, 0x655f, 0x697f, 0x0, 0x1);
        gbc.writeMem(0xa542, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x85f7, gbc.sp());
        EXPECT(0xa544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa542));
        EXPECT(0x8c, gbc.readMem(0xa543));
        // 3E 013D
        gbc.setState(0xd5a7, 0x6300, 0x53f0, 0x635b, 0xb5ed, 0x4023, 0x0, 0x1);
        gbc.writeMem(0xd5a7, { 0x3e, 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6300, gbc.sp());
        EXPECT(0xd5a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd5a7));
        EXPECT(0x30, gbc.readMem(0xd5a8));
        // 3E 013F
        gbc.setState(0x198d, 0x1101, 0xc3c0, 0x5cf, 0x2815, 0x4da3, 0x0, 0x0);
        gbc.writeMem(0x198d, { 0x3e, 0x69 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1101, gbc.sp());
        EXPECT(0x198f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0140
        gbc.setState(0x3e2f, 0x4fb2, 0x4530, 0x2c41, 0x8e2b, 0xcae2, 0x0, 0x1);
        gbc.writeMem(0x3e2f, { 0x3e, 0xe4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4fb2, gbc.sp());
        EXPECT(0x3e31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0141
        gbc.setState(0x3b8b, 0xb95e, 0xc410, 0x1db4, 0x2963, 0x71b8, 0x1, 0x0);
        gbc.writeMem(0x3b8b, { 0x3e, 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb95e, gbc.sp());
        EXPECT(0x3b8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0142
        gbc.setState(0xd60d, 0x9e82, 0x94e0, 0x3ce2, 0x79e3, 0x5100, 0x0, 0x0);
        gbc.writeMem(0xd60d, { 0x3e, 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9e82, gbc.sp());
        EXPECT(0xd60f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd60d));
        EXPECT(0xb2, gbc.readMem(0xd60e));
        // 3E 0143
        gbc.setState(0xb384, 0xe07f, 0x6160, 0xe9bf, 0xb6fb, 0x4cf5, 0x1, 0x0);
        gbc.writeMem(0xb384, { 0x3e, 0xf6 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe07f, gbc.sp());
        EXPECT(0xb386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb384));
        EXPECT(0xf6, gbc.readMem(0xb385));
        // 3E 0144
        gbc.setState(0x3ac9, 0x9526, 0x2e40, 0x66d, 0xdda8, 0xc865, 0x0, 0x0);
        gbc.writeMem(0x3ac9, { 0x3e, 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9526, gbc.sp());
        EXPECT(0x3acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0145
        gbc.setState(0x945e, 0x7928, 0xa7a0, 0x5290, 0xeaa4, 0xb52, 0x0, 0x0);
        gbc.writeMem(0x945e, { 0x3e, 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7928, gbc.sp());
        EXPECT(0x9460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x945e));
        EXPECT(0xb8, gbc.readMem(0x945f));
        // 3E 0146
        gbc.setState(0xd181, 0x6be9, 0xc770, 0xf38f, 0xb910, 0x2434, 0x1, 0x1);
        gbc.writeMem(0xd181, { 0x3e, 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6be9, gbc.sp());
        EXPECT(0xd183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd181));
        EXPECT(0x52, gbc.readMem(0xd182));
        // 3E 0147
        gbc.setState(0xed57, 0x512d, 0x1d0, 0x9c45, 0x2889, 0xcfdd, 0x1, 0x0);
        gbc.writeMem(0xed57, { 0x3e, 0x79 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x512d, gbc.sp());
        EXPECT(0xed59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xed57));
        EXPECT(0x79, gbc.readMem(0xed58));
        // 3E 0148
        gbc.setState(0x79e6, 0xe98, 0x6bc0, 0xece5, 0xf2e6, 0x4383, 0x1, 0x1);
        gbc.writeMem(0x79e6, { 0x3e, 0xf6 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe98, gbc.sp());
        EXPECT(0x79e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0149
        gbc.setState(0x8757, 0x1eaf, 0x66b0, 0xb7a1, 0x93d7, 0x9880, 0x1, 0x1);
        gbc.writeMem(0x8757, { 0x3e, 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1eaf, gbc.sp());
        EXPECT(0x8759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8757));
        EXPECT(0x8, gbc.readMem(0x8758));
        // 3E 014B
        gbc.setState(0x4c33, 0xe275, 0x310, 0x8f8d, 0x82fd, 0x7b3b, 0x0, 0x1);
        gbc.writeMem(0x4c33, { 0x3e, 0x78 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe275, gbc.sp());
        EXPECT(0x4c35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 014C
        gbc.setState(0x6ecd, 0xc73e, 0x3190, 0xf297, 0x60ca, 0x7acc, 0x0, 0x0);
        gbc.writeMem(0x6ecd, { 0x3e, 0x59 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc73e, gbc.sp());
        EXPECT(0x6ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 014D
        gbc.setState(0xe2a8, 0xb5fb, 0xaca0, 0xa8b4, 0x6f03, 0xf8b7, 0x1, 0x1);
        gbc.writeMem(0xe2a8, { 0x3e, 0xe2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb5fb, gbc.sp());
        EXPECT(0xe2aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe2a8));
        EXPECT(0xe2, gbc.readMem(0xe2a9));
        // 3E 014E
        gbc.setState(0xdec0, 0xb159, 0xb680, 0x3f6c, 0x30c, 0x72c9, 0x1, 0x0);
        gbc.writeMem(0xdec0, { 0x3e, 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb159, gbc.sp());
        EXPECT(0xdec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xdec0));
        EXPECT(0xa6, gbc.readMem(0xdec1));
        // 3E 0150
        gbc.setState(0x5893, 0xcaf3, 0xce0, 0x2a4, 0xa327, 0xcb15, 0x1, 0x0);
        gbc.writeMem(0x5893, { 0x3e, 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcaf3, gbc.sp());
        EXPECT(0x5895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0151
        gbc.setState(0x8085, 0x9268, 0x82b0, 0xe78c, 0x5c48, 0x998e, 0x1, 0x0);
        gbc.writeMem(0x8085, { 0x3e, 0xba });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9268, gbc.sp());
        EXPECT(0x8087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8085));
        EXPECT(0xba, gbc.readMem(0x8086));
        // 3E 0152
        gbc.setState(0xeddc, 0x2abe, 0x9660, 0x99d, 0xc91e, 0xe631, 0x0, 0x0);
        gbc.writeMem(0xeddc, { 0x3e, 0x4c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2abe, gbc.sp());
        EXPECT(0xedde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xeddc));
        EXPECT(0x4c, gbc.readMem(0xeddd));
        // 3E 0153
        gbc.setState(0x5cf3, 0x35bc, 0x9b70, 0x1f40, 0x1a80, 0x4ad5, 0x1, 0x0);
        gbc.writeMem(0x5cf3, { 0x3e, 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x35bc, gbc.sp());
        EXPECT(0x5cf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0154
        gbc.setState(0x78e7, 0x77e2, 0x2660, 0x2f12, 0x3ed9, 0x3f20, 0x0, 0x1);
        gbc.writeMem(0x78e7, { 0x3e, 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x77e2, gbc.sp());
        EXPECT(0x78e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0155
        gbc.setState(0x9d3f, 0x9a6b, 0xc540, 0x4f47, 0xea19, 0xa1bf, 0x1, 0x0);
        gbc.writeMem(0x9d3f, { 0x3e, 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9a6b, gbc.sp());
        EXPECT(0x9d41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9d3f));
        EXPECT(0xe1, gbc.readMem(0x9d40));
        // 3E 0156
        gbc.setState(0x3dc0, 0xd329, 0xf2a0, 0x1a80, 0xde02, 0x9085, 0x0, 0x1);
        gbc.writeMem(0x3dc0, { 0x3e, 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd329, gbc.sp());
        EXPECT(0x3dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0157
        gbc.setState(0x7937, 0x82bc, 0xb6b0, 0x413b, 0x2533, 0x9db2, 0x1, 0x0);
        gbc.writeMem(0x7937, { 0x3e, 0x84 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x82bc, gbc.sp());
        EXPECT(0x7939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0158
        gbc.setState(0x3434, 0x5d1b, 0x2590, 0xb3ef, 0xf631, 0x301, 0x1, 0x0);
        gbc.writeMem(0x3434, { 0x3e, 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5d1b, gbc.sp());
        EXPECT(0x3436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0159
        gbc.setState(0x83e6, 0x8524, 0xbb70, 0x8c9b, 0x891d, 0x303f, 0x1, 0x1);
        gbc.writeMem(0x83e6, { 0x3e, 0xbe });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8524, gbc.sp());
        EXPECT(0x83e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x83e6));
        EXPECT(0xbe, gbc.readMem(0x83e7));
        // 3E 015A
        gbc.setState(0xc851, 0xc666, 0xc2a0, 0xdd30, 0xad2d, 0xc680, 0x0, 0x0);
        gbc.writeMem(0xc851, { 0x3e, 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc666, gbc.sp());
        EXPECT(0xc853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc851));
        EXPECT(0x62, gbc.readMem(0xc852));
        // 3E 015B
        gbc.setState(0x1206, 0xc0e8, 0xbd30, 0xcc3c, 0x9b43, 0x93fe, 0x1, 0x0);
        gbc.writeMem(0x1206, { 0x3e, 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc0e8, gbc.sp());
        EXPECT(0x1208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 015C
        gbc.setState(0xe7c7, 0x5e6, 0xdc40, 0xc527, 0xb563, 0xfb84, 0x1, 0x1);
        gbc.writeMem(0xe7c7, { 0x3e, 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5e6, gbc.sp());
        EXPECT(0xe7c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe7c7));
        EXPECT(0x9e, gbc.readMem(0xe7c8));
        // 3E 015E
        gbc.setState(0x53ff, 0xcec6, 0x5540, 0x9258, 0xdc74, 0xcbea, 0x0, 0x0);
        gbc.writeMem(0x53ff, { 0x3e, 0x1b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcec6, gbc.sp());
        EXPECT(0x5401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 015F
        gbc.setState(0x3acb, 0x8b3b, 0x5960, 0xdd24, 0xe285, 0xe512, 0x0, 0x0);
        gbc.writeMem(0x3acb, { 0x3e, 0xe });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8b3b, gbc.sp());
        EXPECT(0x3acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0160
        gbc.setState(0x547f, 0xbc36, 0xb660, 0xff86, 0xdbaf, 0xbc9f, 0x0, 0x0);
        gbc.writeMem(0x547f, { 0x3e, 0x46 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbc36, gbc.sp());
        EXPECT(0x5481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0162
        gbc.setState(0x5a4c, 0x9184, 0x7600, 0xa082, 0x7376, 0xc030, 0x1, 0x1);
        gbc.writeMem(0x5a4c, { 0x3e, 0x8b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9184, gbc.sp());
        EXPECT(0x5a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0163
        gbc.setState(0x6a3c, 0xc993, 0x68c0, 0xbc0f, 0xe117, 0x5aa8, 0x0, 0x1);
        gbc.writeMem(0x6a3c, { 0x3e, 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc993, gbc.sp());
        EXPECT(0x6a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0164
        gbc.setState(0x7ffc, 0xf559, 0x8790, 0x8f9c, 0x5f02, 0x818f, 0x0, 0x1);
        gbc.writeMem(0x7ffc, { 0x3e, 0x74 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf559, gbc.sp());
        EXPECT(0x7ffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0165
        gbc.setState(0xa1d4, 0xd21e, 0x96a0, 0x567c, 0xa25b, 0x3d87, 0x1, 0x1);
        gbc.writeMem(0xa1d4, { 0x3e, 0xcd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd21e, gbc.sp());
        EXPECT(0xa1d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa1d4));
        EXPECT(0xcd, gbc.readMem(0xa1d5));
        // 3E 0166
        gbc.setState(0x68dc, 0x25dd, 0x4a90, 0x328e, 0x45e4, 0xc441, 0x1, 0x1);
        gbc.writeMem(0x68dc, { 0x3e, 0x87 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x25dd, gbc.sp());
        EXPECT(0x68de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0167
        gbc.setState(0x2754, 0x496f, 0xd180, 0x68c2, 0x3c0b, 0x2f2e, 0x0, 0x1);
        gbc.writeMem(0x2754, { 0x3e, 0xe2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x496f, gbc.sp());
        EXPECT(0x2756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0168
        gbc.setState(0xa9f8, 0x86c2, 0x90f0, 0x90be, 0x7ad3, 0xf3ac, 0x1, 0x0);
        gbc.writeMem(0xa9f8, { 0x3e, 0x3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x86c2, gbc.sp());
        EXPECT(0xa9fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa9f8));
        EXPECT(0x3, gbc.readMem(0xa9f9));
        // 3E 0169
        gbc.setState(0x1af3, 0xfb85, 0x2640, 0x577d, 0x2cc9, 0x9c10, 0x1, 0x0);
        gbc.writeMem(0x1af3, { 0x3e, 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfb85, gbc.sp());
        EXPECT(0x1af5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 016A
        gbc.setState(0x1254, 0xca9c, 0xc9b0, 0xb7e6, 0x5bac, 0xf08d, 0x1, 0x0);
        gbc.writeMem(0x1254, { 0x3e, 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xca9c, gbc.sp());
        EXPECT(0x1256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 016B
        gbc.setState(0xda3, 0x1f3b, 0xe2c0, 0x580b, 0x482a, 0xfec2, 0x1, 0x1);
        gbc.writeMem(0xda3, { 0x3e, 0xd2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1f3b, gbc.sp());
        EXPECT(0xda5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 016C
        gbc.setState(0x3f8, 0xda74, 0xfbc0, 0x579d, 0x949d, 0xb32c, 0x0, 0x0);
        gbc.writeMem(0x3f8, { 0x3e, 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xda74, gbc.sp());
        EXPECT(0x3fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 016E
        gbc.setState(0x3e64, 0xfd3c, 0x9fd0, 0x6067, 0x7b45, 0x258a, 0x0, 0x0);
        gbc.writeMem(0x3e64, { 0x3e, 0x3c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfd3c, gbc.sp());
        EXPECT(0x3e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 016F
        gbc.setState(0xd8ef, 0x91df, 0xdaa0, 0xf298, 0x9ac7, 0xdd65, 0x0, 0x1);
        gbc.writeMem(0xd8ef, { 0x3e, 0xcd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x91df, gbc.sp());
        EXPECT(0xd8f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd8ef));
        EXPECT(0xcd, gbc.readMem(0xd8f0));
        // 3E 0171
        gbc.setState(0xd103, 0x9452, 0x6b50, 0x52d6, 0xc67e, 0xc2bd, 0x1, 0x1);
        gbc.writeMem(0xd103, { 0x3e, 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9452, gbc.sp());
        EXPECT(0xd105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd103));
        EXPECT(0x4f, gbc.readMem(0xd104));
        // 3E 0172
        gbc.setState(0x4e4e, 0x2946, 0x3b90, 0xcf54, 0x6663, 0x32f4, 0x1, 0x0);
        gbc.writeMem(0x4e4e, { 0x3e, 0x90 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2946, gbc.sp());
        EXPECT(0x4e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0173
        gbc.setState(0xe7dc, 0x4558, 0x4220, 0xf1b7, 0xd28a, 0x65e9, 0x0, 0x0);
        gbc.writeMem(0xe7dc, { 0x3e, 0x6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4558, gbc.sp());
        EXPECT(0xe7de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe7dc));
        EXPECT(0x6, gbc.readMem(0xe7dd));
        // 3E 0174
        gbc.setState(0xb011, 0x22b7, 0xca10, 0x76a6, 0xd0c8, 0xd619, 0x1, 0x1);
        gbc.writeMem(0xb011, { 0x3e, 0xe9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x22b7, gbc.sp());
        EXPECT(0xb013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb011));
        EXPECT(0xe9, gbc.readMem(0xb012));
        // 3E 0175
        gbc.setState(0x96e1, 0xef70, 0x800, 0x810a, 0x3f49, 0xdb88, 0x1, 0x1);
        gbc.writeMem(0x96e1, { 0x3e, 0x2e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xef70, gbc.sp());
        EXPECT(0x96e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x96e1));
        EXPECT(0x2e, gbc.readMem(0x96e2));
        // 3E 0176
        gbc.setState(0xca0b, 0xf36, 0xbe90, 0x75ec, 0xbdb7, 0x4bb0, 0x1, 0x0);
        gbc.writeMem(0xca0b, { 0x3e, 0xda });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf36, gbc.sp());
        EXPECT(0xca0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xca0b));
        EXPECT(0xda, gbc.readMem(0xca0c));
        // 3E 0177
        gbc.setState(0x5815, 0x8b72, 0xa5c0, 0x1f54, 0x1ba5, 0xa7af, 0x1, 0x0);
        gbc.writeMem(0x5815, { 0x3e, 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8b72, gbc.sp());
        EXPECT(0x5817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0178
        gbc.setState(0x52e7, 0x1a56, 0x3560, 0xfe38, 0x7369, 0x8bbb, 0x1, 0x1);
        gbc.writeMem(0x52e7, { 0x3e, 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1a56, gbc.sp());
        EXPECT(0x52e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0179
        gbc.setState(0x15c7, 0x9efe, 0x6310, 0x38a5, 0x68fa, 0x330b, 0x1, 0x0);
        gbc.writeMem(0x15c7, { 0x3e, 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9efe, gbc.sp());
        EXPECT(0x15c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 017A
        gbc.setState(0x47a2, 0xbb58, 0x6c10, 0x831a, 0x3899, 0xd83d, 0x1, 0x1);
        gbc.writeMem(0x47a2, { 0x3e, 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbb58, gbc.sp());
        EXPECT(0x47a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 017B
        gbc.setState(0x4946, 0x3cb5, 0x44e0, 0x690e, 0x7c3, 0x5a1a, 0x1, 0x1);
        gbc.writeMem(0x4946, { 0x3e, 0x1d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3cb5, gbc.sp());
        EXPECT(0x4948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 017C
        gbc.setState(0x8ac8, 0x5bbf, 0x2c50, 0xb9c8, 0xdadc, 0x7da7, 0x1, 0x0);
        gbc.writeMem(0x8ac8, { 0x3e, 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5bbf, gbc.sp());
        EXPECT(0x8aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8ac8));
        EXPECT(0x8, gbc.readMem(0x8ac9));
        // 3E 017F
        gbc.setState(0x3719, 0xb176, 0x4a0, 0xe60, 0xf599, 0xf876, 0x0, 0x1);
        gbc.writeMem(0x3719, { 0x3e, 0x78 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb176, gbc.sp());
        EXPECT(0x371b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0180
        gbc.setState(0xc9f1, 0x90b6, 0xadf0, 0x3498, 0x33a6, 0x6513, 0x0, 0x0);
        gbc.writeMem(0xc9f1, { 0x3e, 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x90b6, gbc.sp());
        EXPECT(0xc9f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc9f1));
        EXPECT(0x66, gbc.readMem(0xc9f2));
        // 3E 0182
        gbc.setState(0x2fc, 0xf25f, 0xb8e0, 0x118a, 0xcf4d, 0xdcb4, 0x0, 0x1);
        gbc.writeMem(0x2fc, { 0x3e, 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf25f, gbc.sp());
        EXPECT(0x2fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0183
        gbc.setState(0xd794, 0xa293, 0xc670, 0x24b0, 0xe501, 0xb76c, 0x0, 0x1);
        gbc.writeMem(0xd794, { 0x3e, 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa293, gbc.sp());
        EXPECT(0xd796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd794));
        EXPECT(0xa1, gbc.readMem(0xd795));
        // 3E 0184
        gbc.setState(0x4e9e, 0xb839, 0xca70, 0x9a96, 0x8608, 0x8422, 0x1, 0x0);
        gbc.writeMem(0x4e9e, { 0x3e, 0xbd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb839, gbc.sp());
        EXPECT(0x4ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0185
        gbc.setState(0x5ff0, 0x8762, 0xa7b0, 0x2c80, 0xc3dd, 0x6889, 0x1, 0x1);
        gbc.writeMem(0x5ff0, { 0x3e, 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8762, gbc.sp());
        EXPECT(0x5ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0186
        gbc.setState(0xe0a4, 0xc15c, 0x62b0, 0x7353, 0x407f, 0xdbd3, 0x1, 0x1);
        gbc.writeMem(0xe0a4, { 0x3e, 0xda });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc15c, gbc.sp());
        EXPECT(0xe0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe0a4));
        EXPECT(0xda, gbc.readMem(0xe0a5));
        // 3E 0187
        gbc.setState(0x8e9d, 0xf62b, 0xc430, 0x373c, 0xb128, 0x3f79, 0x0, 0x0);
        gbc.writeMem(0x8e9d, { 0x3e, 0x6a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf62b, gbc.sp());
        EXPECT(0x8e9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8e9d));
        EXPECT(0x6a, gbc.readMem(0x8e9e));
        // 3E 0188
        gbc.setState(0xce1a, 0xcf06, 0x9450, 0xe52f, 0x77b1, 0x396b, 0x1, 0x0);
        gbc.writeMem(0xce1a, { 0x3e, 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcf06, gbc.sp());
        EXPECT(0xce1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xce1a));
        EXPECT(0xe1, gbc.readMem(0xce1b));
        // 3E 0189
        gbc.setState(0xdb99, 0xbe08, 0xd3a0, 0xa01a, 0x2702, 0xa9af, 0x0, 0x0);
        gbc.writeMem(0xdb99, { 0x3e, 0x71 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbe08, gbc.sp());
        EXPECT(0xdb9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xdb99));
        EXPECT(0x71, gbc.readMem(0xdb9a));
        // 3E 018A
        gbc.setState(0xca7, 0xbb10, 0x6270, 0x6a, 0xba24, 0xe50c, 0x1, 0x0);
        gbc.writeMem(0xca7, { 0x3e, 0x2d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbb10, gbc.sp());
        EXPECT(0xca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 018C
        gbc.setState(0x948, 0xe896, 0x56a0, 0x5350, 0x9fca, 0xadf6, 0x1, 0x0);
        gbc.writeMem(0x948, { 0x3e, 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe896, gbc.sp());
        EXPECT(0x94a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 018D
        gbc.setState(0x49c2, 0xbdda, 0x3270, 0x21ca, 0xc19f, 0xb64d, 0x0, 0x1);
        gbc.writeMem(0x49c2, { 0x3e, 0xd2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbdda, gbc.sp());
        EXPECT(0x49c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 018E
        gbc.setState(0xd2a1, 0x28af, 0x4650, 0x20dd, 0x4f68, 0x2a63, 0x1, 0x1);
        gbc.writeMem(0xd2a1, { 0x3e, 0xa5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x28af, gbc.sp());
        EXPECT(0xd2a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd2a1));
        EXPECT(0xa5, gbc.readMem(0xd2a2));
        // 3E 018F
        gbc.setState(0xcbe3, 0x9a01, 0x7d30, 0x30b7, 0xa0f8, 0xeb65, 0x0, 0x1);
        gbc.writeMem(0xcbe3, { 0x3e, 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9a01, gbc.sp());
        EXPECT(0xcbe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcbe3));
        EXPECT(0x7a, gbc.readMem(0xcbe4));
        // 3E 0190
        gbc.setState(0xbca4, 0x632f, 0xd980, 0x8112, 0xc939, 0x4dfe, 0x1, 0x1);
        gbc.writeMem(0xbca4, { 0x3e, 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x632f, gbc.sp());
        EXPECT(0xbca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbca4));
        EXPECT(0xc7, gbc.readMem(0xbca5));
        // 3E 0191
        gbc.setState(0xe632, 0x5749, 0x6700, 0x6da0, 0xf49d, 0xd7e7, 0x0, 0x1);
        gbc.writeMem(0xe632, { 0x3e, 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5749, gbc.sp());
        EXPECT(0xe634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe632));
        EXPECT(0xad, gbc.readMem(0xe633));
        // 3E 0192
        gbc.setState(0xbebc, 0x1dc4, 0x60f0, 0x6809, 0xda6, 0xa964, 0x1, 0x0);
        gbc.writeMem(0xbebc, { 0x3e, 0x54 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1dc4, gbc.sp());
        EXPECT(0xbebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbebc));
        EXPECT(0x54, gbc.readMem(0xbebd));
        // 3E 0193
        gbc.setState(0x8cda, 0x27da, 0xb8e0, 0xdce2, 0xfa7e, 0xe2d7, 0x0, 0x0);
        gbc.writeMem(0x8cda, { 0x3e, 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x27da, gbc.sp());
        EXPECT(0x8cdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8cda));
        EXPECT(0x53, gbc.readMem(0x8cdb));
        // 3E 0194
        gbc.setState(0x30f4, 0x7550, 0xc270, 0xd2af, 0x5d38, 0xcb9f, 0x0, 0x1);
        gbc.writeMem(0x30f4, { 0x3e, 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7550, gbc.sp());
        EXPECT(0x30f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0195
        gbc.setState(0x8217, 0x257, 0x6930, 0x171d, 0x73e3, 0x898b, 0x1, 0x1);
        gbc.writeMem(0x8217, { 0x3e, 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x257, gbc.sp());
        EXPECT(0x8219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8217));
        EXPECT(0x49, gbc.readMem(0x8218));
        // 3E 0196
        gbc.setState(0x68f2, 0x7d72, 0x14c0, 0x57d3, 0x84ea, 0x19e5, 0x1, 0x0);
        gbc.writeMem(0x68f2, { 0x3e, 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7d72, gbc.sp());
        EXPECT(0x68f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0197
        gbc.setState(0x8840, 0x9cc3, 0xe5b0, 0x2ac9, 0xbae9, 0xd019, 0x1, 0x1);
        gbc.writeMem(0x8840, { 0x3e, 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9cc3, gbc.sp());
        EXPECT(0x8842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8840));
        EXPECT(0xff, gbc.readMem(0x8841));
        // 3E 0198
        gbc.setState(0xab78, 0x4e14, 0xfa70, 0xc458, 0x7468, 0xdb4c, 0x1, 0x1);
        gbc.writeMem(0xab78, { 0x3e, 0x14 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4e14, gbc.sp());
        EXPECT(0xab7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xab78));
        EXPECT(0x14, gbc.readMem(0xab79));
        // 3E 0199
        gbc.setState(0x8900, 0xc16f, 0x2030, 0xe9a, 0xc074, 0xbd10, 0x0, 0x0);
        gbc.writeMem(0x8900, { 0x3e, 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc16f, gbc.sp());
        EXPECT(0x8902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8900));
        EXPECT(0xd, gbc.readMem(0x8901));
        // 3E 019A
        gbc.setState(0x3a8a, 0x3e72, 0x50c0, 0x3aa6, 0x6db2, 0xfeee, 0x0, 0x0);
        gbc.writeMem(0x3a8a, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3e72, gbc.sp());
        EXPECT(0x3a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 019B
        gbc.setState(0x755b, 0x8d9, 0x97c0, 0x8226, 0xf043, 0xb177, 0x1, 0x0);
        gbc.writeMem(0x755b, { 0x3e, 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8d9, gbc.sp());
        EXPECT(0x755d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 019C
        gbc.setState(0x8e7a, 0xdce7, 0xb7c0, 0x1aa8, 0x3dbf, 0x4c4c, 0x0, 0x1);
        gbc.writeMem(0x8e7a, { 0x3e, 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdce7, gbc.sp());
        EXPECT(0x8e7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8e7a));
        EXPECT(0x94, gbc.readMem(0x8e7b));
        // 3E 019E
        gbc.setState(0xd830, 0x4295, 0xe1d0, 0x91f0, 0xe384, 0xd14b, 0x0, 0x0);
        gbc.writeMem(0xd830, { 0x3e, 0x61 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4295, gbc.sp());
        EXPECT(0xd832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd830));
        EXPECT(0x61, gbc.readMem(0xd831));
        // 3E 019F
        gbc.setState(0x42ff, 0x4a92, 0x35e0, 0xd92e, 0x7ed0, 0x3c29, 0x0, 0x0);
        gbc.writeMem(0x42ff, { 0x3e, 0x1d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4a92, gbc.sp());
        EXPECT(0x4301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01A0
        gbc.setState(0xe295, 0xe98c, 0xdcf0, 0xa2f8, 0x69e1, 0x2dad, 0x0, 0x0);
        gbc.writeMem(0xe295, { 0x3e, 0xd8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe98c, gbc.sp());
        EXPECT(0xe297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe295));
        EXPECT(0xd8, gbc.readMem(0xe296));
        // 3E 01A1
        gbc.setState(0xe03a, 0xdc7a, 0x62c0, 0xe6cf, 0xbd10, 0x3bf1, 0x0, 0x0);
        gbc.writeMem(0xe03a, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdc7a, gbc.sp());
        EXPECT(0xe03c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe03a));
        EXPECT(0x3b, gbc.readMem(0xe03b));
        // 3E 01A2
        gbc.setState(0x63e9, 0x8e72, 0x35d0, 0x1856, 0x619d, 0xbb4, 0x1, 0x1);
        gbc.writeMem(0x63e9, { 0x3e, 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8e72, gbc.sp());
        EXPECT(0x63eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 01A3
        gbc.setState(0x934c, 0xe820, 0x71f0, 0x71e5, 0x6b8e, 0xcb6a, 0x1, 0x1);
        gbc.writeMem(0x934c, { 0x3e, 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe820, gbc.sp());
        EXPECT(0x934e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x934c));
        EXPECT(0x9, gbc.readMem(0x934d));
        // 3E 01A4
        gbc.setState(0x9694, 0xab60, 0x7f60, 0x6239, 0xc687, 0x5314, 0x0, 0x1);
        gbc.writeMem(0x9694, { 0x3e, 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xab60, gbc.sp());
        EXPECT(0x9696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9694));
        EXPECT(0x5e, gbc.readMem(0x9695));
        // 3E 01A5
        gbc.setState(0xe09c, 0xf852, 0x63c0, 0xe6fe, 0xf6f, 0x434b, 0x0, 0x1);
        gbc.writeMem(0xe09c, { 0x3e, 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf852, gbc.sp());
        EXPECT(0xe09e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe09c));
        EXPECT(0xc9, gbc.readMem(0xe09d));
        // 3E 01A6
        gbc.setState(0x5129, 0xaf33, 0x8440, 0x2e04, 0xd5ad, 0x85e3, 0x0, 0x1);
        gbc.writeMem(0x5129, { 0x3e, 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xaf33, gbc.sp());
        EXPECT(0x512b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01A7
        gbc.setState(0x3d07, 0x2704, 0x49e0, 0x2d69, 0x7cf4, 0x6d3c, 0x0, 0x0);
        gbc.writeMem(0x3d07, { 0x3e, 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2704, gbc.sp());
        EXPECT(0x3d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01A9
        gbc.setState(0xb964, 0x6ac2, 0x77e0, 0x483a, 0xcae2, 0xd70e, 0x1, 0x1);
        gbc.writeMem(0xb964, { 0x3e, 0x5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6ac2, gbc.sp());
        EXPECT(0xb966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb964));
        EXPECT(0x5, gbc.readMem(0xb965));
        // 3E 01AA
        gbc.setState(0xcdaa, 0x7a2e, 0x5100, 0x2ac3, 0x4a2c, 0x67a, 0x0, 0x0);
        gbc.writeMem(0xcdaa, { 0x3e, 0x20 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7a2e, gbc.sp());
        EXPECT(0xcdac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcdaa));
        EXPECT(0x20, gbc.readMem(0xcdab));
        // 3E 01AB
        gbc.setState(0xc687, 0x32a6, 0xd9e0, 0x40f7, 0xcc70, 0xc219, 0x0, 0x0);
        gbc.writeMem(0xc687, { 0x3e, 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x32a6, gbc.sp());
        EXPECT(0xc689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc687));
        EXPECT(0x38, gbc.readMem(0xc688));
        // 3E 01AC
        gbc.setState(0x4a0f, 0x6a53, 0xe970, 0x1601, 0x4637, 0x5bb9, 0x1, 0x0);
        gbc.writeMem(0x4a0f, { 0x3e, 0xd4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6a53, gbc.sp());
        EXPECT(0x4a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 01AD
        gbc.setState(0x9d96, 0xa3ea, 0xcfa0, 0x5fdf, 0x5044, 0x67de, 0x1, 0x1);
        gbc.writeMem(0x9d96, { 0x3e, 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa3ea, gbc.sp());
        EXPECT(0x9d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9d96));
        EXPECT(0x41, gbc.readMem(0x9d97));
        // 3E 01AE
        gbc.setState(0x2214, 0x4a29, 0xf2a0, 0x3f0, 0xc39e, 0xffba, 0x1, 0x1);
        gbc.writeMem(0x2214, { 0x3e, 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4a29, gbc.sp());
        EXPECT(0x2216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01AF
        gbc.setState(0x4187, 0x94a2, 0x9270, 0x89e, 0x6d3f, 0x87be, 0x0, 0x0);
        gbc.writeMem(0x4187, { 0x3e, 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x94a2, gbc.sp());
        EXPECT(0x4189, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 01B0
        gbc.setState(0x9be4, 0x1b9c, 0x2ea0, 0xf1b7, 0xfac4, 0x49bc, 0x1, 0x0);
        gbc.writeMem(0x9be4, { 0x3e, 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1b9c, gbc.sp());
        EXPECT(0x9be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9be4));
        EXPECT(0x65, gbc.readMem(0x9be5));
        // 3E 01B1
        gbc.setState(0xb015, 0xc07e, 0x9cc0, 0xa7a6, 0x33d, 0xc105, 0x0, 0x1);
        gbc.writeMem(0xb015, { 0x3e, 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc07e, gbc.sp());
        EXPECT(0xb017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb015));
        EXPECT(0xe0, gbc.readMem(0xb016));
        // 3E 01B2
        gbc.setState(0x7d82, 0x25e9, 0x9cb0, 0xfe5a, 0xbc72, 0x295a, 0x0, 0x1);
        gbc.writeMem(0x7d82, { 0x3e, 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x25e9, gbc.sp());
        EXPECT(0x7d84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 01B3
        gbc.setState(0x18c0, 0x2f87, 0xb990, 0x58b7, 0x35fc, 0xdf96, 0x0, 0x0);
        gbc.writeMem(0x18c0, { 0x3e, 0x1e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2f87, gbc.sp());
        EXPECT(0x18c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 01B4
        gbc.setState(0x4e24, 0xba64, 0xa5b0, 0xa33a, 0x75bf, 0x4639, 0x0, 0x1);
        gbc.writeMem(0x4e24, { 0x3e, 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xba64, gbc.sp());
        EXPECT(0x4e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 01B5
        gbc.setState(0x6b7, 0x86e7, 0x4260, 0xf674, 0xacc7, 0xebb9, 0x1, 0x1);
        gbc.writeMem(0x6b7, { 0x3e, 0x42 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x86e7, gbc.sp());
        EXPECT(0x6b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01B6
        gbc.setState(0xb956, 0x1ed0, 0x24b0, 0x95e, 0x3de5, 0xe493, 0x0, 0x1);
        gbc.writeMem(0xb956, { 0x3e, 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1ed0, gbc.sp());
        EXPECT(0xb958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb956));
        EXPECT(0x96, gbc.readMem(0xb957));
        // 3E 01B7
        gbc.setState(0xac72, 0x5318, 0xdc70, 0x2f23, 0x5896, 0x24ff, 0x1, 0x1);
        gbc.writeMem(0xac72, { 0x3e, 0x3e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5318, gbc.sp());
        EXPECT(0xac74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xac72));
        EXPECT(0x3e, gbc.readMem(0xac73));
        // 3E 01B8
        gbc.setState(0xbb62, 0x7890, 0x9990, 0xe699, 0x9735, 0xad2c, 0x1, 0x1);
        gbc.writeMem(0xbb62, { 0x3e, 0x22 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7890, gbc.sp());
        EXPECT(0xbb64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbb62));
        EXPECT(0x22, gbc.readMem(0xbb63));
        // 3E 01B9
        gbc.setState(0xc488, 0x37e8, 0x7370, 0xc98b, 0xeb4d, 0x72c0, 0x0, 0x1);
        gbc.writeMem(0xc488, { 0x3e, 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x37e8, gbc.sp());
        EXPECT(0xc48a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc488));
        EXPECT(0x24, gbc.readMem(0xc489));
        // 3E 01BA
        gbc.setState(0xaaf5, 0x3d85, 0x9240, 0x8a5, 0x2c40, 0x9527, 0x0, 0x0);
        gbc.writeMem(0xaaf5, { 0x3e, 0x4c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3d85, gbc.sp());
        EXPECT(0xaaf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xaaf5));
        EXPECT(0x4c, gbc.readMem(0xaaf6));
        // 3E 01BB
        gbc.setState(0xd3f6, 0x25ef, 0xd110, 0x3f7d, 0x3025, 0x26f7, 0x0, 0x1);
        gbc.writeMem(0xd3f6, { 0x3e, 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x25ef, gbc.sp());
        EXPECT(0xd3f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd3f6));
        EXPECT(0x4b, gbc.readMem(0xd3f7));
        // 3E 01BC
        gbc.setState(0x4f16, 0xf8e0, 0x6b40, 0x5f71, 0xf3e1, 0x1766, 0x0, 0x1);
        gbc.writeMem(0x4f16, { 0x3e, 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf8e0, gbc.sp());
        EXPECT(0x4f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01BD
        gbc.setState(0x602d, 0x4f5f, 0x61a0, 0xf4a8, 0x5023, 0xf52f, 0x0, 0x1);
        gbc.writeMem(0x602d, { 0x3e, 0xba });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4f5f, gbc.sp());
        EXPECT(0x602f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01BE
        gbc.setState(0x73a6, 0x1889, 0xa00, 0xdbd, 0xfad3, 0x182c, 0x1, 0x1);
        gbc.writeMem(0x73a6, { 0x3e, 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1889, gbc.sp());
        EXPECT(0x73a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01BF
        gbc.setState(0x187e, 0xd19f, 0x8860, 0xf145, 0x141c, 0x39d0, 0x0, 0x0);
        gbc.writeMem(0x187e, { 0x3e, 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd19f, gbc.sp());
        EXPECT(0x1880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01C0
        gbc.setState(0xb42, 0x22c9, 0x2aa0, 0xc8c4, 0x8c1b, 0x178b, 0x1, 0x0);
        gbc.writeMem(0xb42, { 0x3e, 0x6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x22c9, gbc.sp());
        EXPECT(0xb44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01C1
        gbc.setState(0x452a, 0xfb3c, 0x820, 0x8692, 0xf5b, 0x6a14, 0x1, 0x1);
        gbc.writeMem(0x452a, { 0x3e, 0x5d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfb3c, gbc.sp());
        EXPECT(0x452c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01C2
        gbc.setState(0xe275, 0x3f41, 0xe860, 0x55f6, 0x1f63, 0x60f3, 0x1, 0x0);
        gbc.writeMem(0xe275, { 0x3e, 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3f41, gbc.sp());
        EXPECT(0xe277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe275));
        EXPECT(0x1a, gbc.readMem(0xe276));
        // 3E 01C3
        gbc.setState(0xcb48, 0xb3dc, 0x6390, 0xe44e, 0xdcad, 0x9ecb, 0x0, 0x0);
        gbc.writeMem(0xcb48, { 0x3e, 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb3dc, gbc.sp());
        EXPECT(0xcb4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcb48));
        EXPECT(0x53, gbc.readMem(0xcb49));
        // 3E 01C4
        gbc.setState(0x4e18, 0x1fe6, 0x40d0, 0x78b4, 0x250d, 0xa1e9, 0x0, 0x1);
        gbc.writeMem(0x4e18, { 0x3e, 0x7f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1fe6, gbc.sp());
        EXPECT(0x4e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 01C5
        gbc.setState(0x4937, 0x8427, 0xc360, 0x43d0, 0x103f, 0xc1bc, 0x1, 0x1);
        gbc.writeMem(0x4937, { 0x3e, 0x75 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8427, gbc.sp());
        EXPECT(0x4939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01C7
        gbc.setState(0x41ba, 0x365f, 0x74a0, 0x705, 0x1893, 0x278a, 0x1, 0x1);
        gbc.writeMem(0x41ba, { 0x3e, 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x365f, gbc.sp());
        EXPECT(0x41bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01C8
        gbc.setState(0x8eb8, 0xb1f1, 0x3f70, 0x81, 0x6230, 0xacd1, 0x1, 0x0);
        gbc.writeMem(0x8eb8, { 0x3e, 0xe9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb1f1, gbc.sp());
        EXPECT(0x8eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8eb8));
        EXPECT(0xe9, gbc.readMem(0x8eb9));
        // 3E 01C9
        gbc.setState(0xe60c, 0xef1, 0x88d0, 0x3e96, 0x1a79, 0x6ab8, 0x1, 0x1);
        gbc.writeMem(0xe60c, { 0x3e, 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xef1, gbc.sp());
        EXPECT(0xe60e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe60c));
        EXPECT(0x5e, gbc.readMem(0xe60d));
        // 3E 01CA
        gbc.setState(0xd465, 0x32d2, 0x4680, 0x3a75, 0x3933, 0x7c6a, 0x0, 0x1);
        gbc.writeMem(0xd465, { 0x3e, 0x58 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x32d2, gbc.sp());
        EXPECT(0xd467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd465));
        EXPECT(0x58, gbc.readMem(0xd466));
        // 3E 01CB
        gbc.setState(0x66b0, 0x30fb, 0x58f0, 0x970, 0xf42f, 0xdb49, 0x1, 0x0);
        gbc.writeMem(0x66b0, { 0x3e, 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x30fb, gbc.sp());
        EXPECT(0x66b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 01CC
        gbc.setState(0x7d8a, 0x943b, 0xabe0, 0x666, 0x20f, 0xc2f4, 0x0, 0x1);
        gbc.writeMem(0x7d8a, { 0x3e, 0x3a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x943b, gbc.sp());
        EXPECT(0x7d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01CD
        gbc.setState(0x7118, 0x93de, 0x3ba0, 0x1cb7, 0x3639, 0x450, 0x0, 0x0);
        gbc.writeMem(0x7118, { 0x3e, 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x93de, gbc.sp());
        EXPECT(0x711a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01CE
        gbc.setState(0x7288, 0xad0d, 0x8e70, 0x1ff5, 0xc126, 0x794a, 0x1, 0x0);
        gbc.writeMem(0x7288, { 0x3e, 0x75 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xad0d, gbc.sp());
        EXPECT(0x728a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 01CF
        gbc.setState(0x76aa, 0xa2c0, 0xc210, 0x28b4, 0x690d, 0x821d, 0x0, 0x1);
        gbc.writeMem(0x76aa, { 0x3e, 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa2c0, gbc.sp());
        EXPECT(0x76ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 01D0
        gbc.setState(0xbe74, 0x79cf, 0xa810, 0xeb1a, 0xfdd9, 0x4dd3, 0x1, 0x0);
        gbc.writeMem(0xbe74, { 0x3e, 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x79cf, gbc.sp());
        EXPECT(0xbe76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbe74));
        EXPECT(0xfb, gbc.readMem(0xbe75));
        // 3E 01D1
        gbc.setState(0x5f98, 0xd65f, 0xb740, 0x3e39, 0xb3d2, 0x7b13, 0x1, 0x0);
        gbc.writeMem(0x5f98, { 0x3e, 0xbd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd65f, gbc.sp());
        EXPECT(0x5f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01D2
        gbc.setState(0x8857, 0x6684, 0xc910, 0xaa45, 0xa111, 0xe47c, 0x0, 0x0);
        gbc.writeMem(0x8857, { 0x3e, 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6684, gbc.sp());
        EXPECT(0x8859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8857));
        EXPECT(0xb6, gbc.readMem(0x8858));
        // 3E 01D3
        gbc.setState(0x3139, 0x2958, 0x5cf0, 0xcfc8, 0x1eb5, 0x4fb6, 0x1, 0x1);
        gbc.writeMem(0x3139, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2958, gbc.sp());
        EXPECT(0x313b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 01D4
        gbc.setState(0xd3f3, 0xfb6a, 0x4bd0, 0xa3ff, 0x733, 0x4ca4, 0x0, 0x1);
        gbc.writeMem(0xd3f3, { 0x3e, 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xfb6a, gbc.sp());
        EXPECT(0xd3f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd3f3));
        EXPECT(0x18, gbc.readMem(0xd3f4));
        // 3E 01D5
        gbc.setState(0xc465, 0x439d, 0x1440, 0xf5a3, 0xe3b, 0x5f73, 0x0, 0x0);
        gbc.writeMem(0xc465, { 0x3e, 0x1e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x439d, gbc.sp());
        EXPECT(0xc467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc465));
        EXPECT(0x1e, gbc.readMem(0xc466));
        // 3E 01D6
        gbc.setState(0xbc3c, 0x31e7, 0xdf10, 0x84d1, 0x51c6, 0xfab5, 0x1, 0x0);
        gbc.writeMem(0xbc3c, { 0x3e, 0x9b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x31e7, gbc.sp());
        EXPECT(0xbc3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbc3c));
        EXPECT(0x9b, gbc.readMem(0xbc3d));
        // 3E 01D7
        gbc.setState(0xc4f4, 0xd4c8, 0x4450, 0xe3a0, 0x7232, 0x8a86, 0x0, 0x1);
        gbc.writeMem(0xc4f4, { 0x3e, 0x6e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd4c8, gbc.sp());
        EXPECT(0xc4f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc4f4));
        EXPECT(0x6e, gbc.readMem(0xc4f5));
        // 3E 01D8
        gbc.setState(0xeff8, 0x5af0, 0xc480, 0xf380, 0x5659, 0x44a9, 0x0, 0x1);
        gbc.writeMem(0xeff8, { 0x3e, 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5af0, gbc.sp());
        EXPECT(0xeffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xeff8));
        EXPECT(0xf8, gbc.readMem(0xeff9));
        // 3E 01D9
        gbc.setState(0xb927, 0x41ba, 0x1240, 0xe4a2, 0x4add, 0x2d15, 0x1, 0x0);
        gbc.writeMem(0xb927, { 0x3e, 0x56 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x41ba, gbc.sp());
        EXPECT(0xb929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb927));
        EXPECT(0x56, gbc.readMem(0xb928));
        // 3E 01DA
        gbc.setState(0xed46, 0x165f, 0xef30, 0x5922, 0x309d, 0x6d14, 0x0, 0x1);
        gbc.writeMem(0xed46, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x165f, gbc.sp());
        EXPECT(0xed48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xed46));
        EXPECT(0x8c, gbc.readMem(0xed47));
        // 3E 01DB
        gbc.setState(0x8e11, 0x7424, 0x5c00, 0xb025, 0xfb34, 0x19d0, 0x1, 0x1);
        gbc.writeMem(0x8e11, { 0x3e, 0x42 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7424, gbc.sp());
        EXPECT(0x8e13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8e11));
        EXPECT(0x42, gbc.readMem(0x8e12));
        // 3E 01DC
        gbc.setState(0xcc9c, 0x1830, 0xdf0, 0xa93a, 0xdebf, 0x9a93, 0x0, 0x0);
        gbc.writeMem(0xcc9c, { 0x3e, 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1830, gbc.sp());
        EXPECT(0xcc9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcc9c));
        EXPECT(0x50, gbc.readMem(0xcc9d));
        // 3E 01DD
        gbc.setState(0xd8c, 0x85be, 0x7950, 0x8cf6, 0xfa24, 0xb2df, 0x1, 0x0);
        gbc.writeMem(0xd8c, { 0x3e, 0x7f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x85be, gbc.sp());
        EXPECT(0xd8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 01DE
        gbc.setState(0x6957, 0x74c9, 0x9bd0, 0xbe12, 0x2ca8, 0x284d, 0x0, 0x0);
        gbc.writeMem(0x6957, { 0x3e, 0xcd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x74c9, gbc.sp());
        EXPECT(0x6959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 01DF
        gbc.setState(0xb164, 0x351, 0x2ab0, 0xac9, 0x6bf6, 0x6f43, 0x1, 0x0);
        gbc.writeMem(0xb164, { 0x3e, 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x351, gbc.sp());
        EXPECT(0xb166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb164));
        EXPECT(0x38, gbc.readMem(0xb165));
        // 3E 01E0
        gbc.setState(0x53df, 0xb9da, 0x91a0, 0x1567, 0xf5a2, 0x3298, 0x0, 0x0);
        gbc.writeMem(0x53df, { 0x3e, 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb9da, gbc.sp());
        EXPECT(0x53e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01E1
        gbc.setState(0xbe75, 0xa9be, 0x4420, 0xe50e, 0x3e82, 0x949b, 0x0, 0x0);
        gbc.writeMem(0xbe75, { 0x3e, 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa9be, gbc.sp());
        EXPECT(0xbe77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbe75));
        EXPECT(0x4d, gbc.readMem(0xbe76));
        // 3E 01E2
        gbc.setState(0x7eff, 0xa77a, 0xd00, 0xd243, 0xcb28, 0x63e8, 0x1, 0x1);
        gbc.writeMem(0x7eff, { 0x3e, 0x2e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa77a, gbc.sp());
        EXPECT(0x7f01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01E3
        gbc.setState(0x3262, 0x19cf, 0x7ba0, 0xb3cc, 0x8a35, 0xa71e, 0x0, 0x0);
        gbc.writeMem(0x3262, { 0x3e, 0x54 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x19cf, gbc.sp());
        EXPECT(0x3264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01E4
        gbc.setState(0x114f, 0x5cc7, 0x14a0, 0xfe0e, 0xe993, 0xbffc, 0x0, 0x0);
        gbc.writeMem(0x114f, { 0x3e, 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5cc7, gbc.sp());
        EXPECT(0x1151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01E5
        gbc.setState(0x303d, 0x1d6a, 0xc30, 0x424c, 0x40cd, 0x7fb4, 0x0, 0x1);
        gbc.writeMem(0x303d, { 0x3e, 0x59 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1d6a, gbc.sp());
        EXPECT(0x303f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 01E6
        gbc.setState(0x66e0, 0xfdfc, 0xd3b0, 0x5d9, 0xbca8, 0xfd28, 0x1, 0x0);
        gbc.writeMem(0x66e0, { 0x3e, 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xfdfc, gbc.sp());
        EXPECT(0x66e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 01E7
        gbc.setState(0x4d6c, 0x3c0a, 0xcc0, 0xf35a, 0xefe2, 0x118e, 0x1, 0x0);
        gbc.writeMem(0x4d6c, { 0x3e, 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3c0a, gbc.sp());
        EXPECT(0x4d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01E8
        gbc.setState(0x4927, 0xf806, 0xed90, 0x348c, 0x1af2, 0xd363, 0x1, 0x0);
        gbc.writeMem(0x4927, { 0x3e, 0x3e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf806, gbc.sp());
        EXPECT(0x4929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 01E9
        gbc.setState(0xe408, 0x186, 0x6090, 0xf356, 0x1581, 0xc19b, 0x1, 0x0);
        gbc.writeMem(0xe408, { 0x3e, 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x186, gbc.sp());
        EXPECT(0xe40a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe408));
        EXPECT(0x7a, gbc.readMem(0xe409));
        // 3E 01EA
        gbc.setState(0xde81, 0xe955, 0xa8f0, 0x4e2b, 0x7a9e, 0x9234, 0x0, 0x1);
        gbc.writeMem(0xde81, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe955, gbc.sp());
        EXPECT(0xde83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xde81));
        EXPECT(0x3b, gbc.readMem(0xde82));
        // 3E 01EB
        gbc.setState(0xcf6, 0x2411, 0x5f50, 0x2942, 0x6e0a, 0x3037, 0x0, 0x1);
        gbc.writeMem(0xcf6, { 0x3e, 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2411, gbc.sp());
        EXPECT(0xcf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 01EC
        gbc.setState(0xa1de, 0x6141, 0xe340, 0xc9b2, 0x8576, 0x5628, 0x0, 0x1);
        gbc.writeMem(0xa1de, { 0x3e, 0x7d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6141, gbc.sp());
        EXPECT(0xa1e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa1de));
        EXPECT(0x7d, gbc.readMem(0xa1df));
        // 3E 01ED
        gbc.setState(0x8a74, 0xf6ac, 0x26e0, 0x3d84, 0xd464, 0x7b12, 0x1, 0x0);
        gbc.writeMem(0x8a74, { 0x3e, 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf6ac, gbc.sp());
        EXPECT(0x8a76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8a74));
        EXPECT(0x98, gbc.readMem(0x8a75));
        // 3E 01EE
        gbc.setState(0x7f80, 0xb1e, 0xc310, 0xbbd8, 0x9d5, 0x2e88, 0x1, 0x0);
        gbc.writeMem(0x7f80, { 0x3e, 0xaf });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb1e, gbc.sp());
        EXPECT(0x7f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 01EF
        gbc.setState(0x1ce1, 0xc4de, 0x4ac0, 0x733f, 0x8a2f, 0x1874, 0x0, 0x1);
        gbc.writeMem(0x1ce1, { 0x3e, 0xf6 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc4de, gbc.sp());
        EXPECT(0x1ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01F0
        gbc.setState(0xeb2c, 0xaa0c, 0xcb0, 0x7a7e, 0x310, 0xf32, 0x1, 0x0);
        gbc.writeMem(0xeb2c, { 0x3e, 0x99 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xaa0c, gbc.sp());
        EXPECT(0xeb2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xeb2c));
        EXPECT(0x99, gbc.readMem(0xeb2d));
        // 3E 01F1
        gbc.setState(0xb1e1, 0x91e8, 0xe900, 0xdf0e, 0x40b4, 0xdd94, 0x1, 0x0);
        gbc.writeMem(0xb1e1, { 0x3e, 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x91e8, gbc.sp());
        EXPECT(0xb1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb1e1));
        EXPECT(0xcc, gbc.readMem(0xb1e2));
        // 3E 01F2
        gbc.setState(0xa88f, 0x563b, 0x7930, 0xa0b5, 0xd25, 0xf815, 0x1, 0x1);
        gbc.writeMem(0xa88f, { 0x3e, 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x563b, gbc.sp());
        EXPECT(0xa891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa88f));
        EXPECT(0x1c, gbc.readMem(0xa890));
        // 3E 01F3
        gbc.setState(0xb4fc, 0x3bf4, 0x8500, 0xb40b, 0x1b5, 0x5a37, 0x0, 0x1);
        gbc.writeMem(0xb4fc, { 0x3e, 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3bf4, gbc.sp());
        EXPECT(0xb4fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb4fc));
        EXPECT(0x8e, gbc.readMem(0xb4fd));
        // 3E 01F4
        gbc.setState(0xbe12, 0xbc20, 0x95d0, 0xfcf8, 0x5a55, 0xd459, 0x1, 0x1);
        gbc.writeMem(0xbe12, { 0x3e, 0x3a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbc20, gbc.sp());
        EXPECT(0xbe14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbe12));
        EXPECT(0x3a, gbc.readMem(0xbe13));
        // 3E 01F5
        gbc.setState(0xcb77, 0xf525, 0xa140, 0x335f, 0xa90d, 0x34ca, 0x0, 0x0);
        gbc.writeMem(0xcb77, { 0x3e, 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf525, gbc.sp());
        EXPECT(0xcb79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcb77));
        EXPECT(0xc, gbc.readMem(0xcb78));
        // 3E 01F6
        gbc.setState(0x3b68, 0xa0a1, 0x29f0, 0x72f7, 0x4031, 0x1c4a, 0x1, 0x0);
        gbc.writeMem(0x3b68, { 0x3e, 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa0a1, gbc.sp());
        EXPECT(0x3b6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 01F8
        gbc.setState(0x3472, 0x1b21, 0x30a0, 0xe2cd, 0x578e, 0x1530, 0x0, 0x1);
        gbc.writeMem(0x3472, { 0x3e, 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1b21, gbc.sp());
        EXPECT(0x3474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01F9
        gbc.setState(0x87c2, 0xd649, 0x3ac0, 0xf294, 0x1c10, 0x3aab, 0x0, 0x0);
        gbc.writeMem(0x87c2, { 0x3e, 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd649, gbc.sp());
        EXPECT(0x87c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x87c2));
        EXPECT(0x9c, gbc.readMem(0x87c3));
        // 3E 01FA
        gbc.setState(0x56bf, 0x7cd9, 0x2ed0, 0x17fd, 0xd04, 0xf3b6, 0x0, 0x0);
        gbc.writeMem(0x56bf, { 0x3e, 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7cd9, gbc.sp());
        EXPECT(0x56c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 01FB
        gbc.setState(0x405b, 0x4019, 0xc220, 0x733c, 0xde30, 0x4349, 0x1, 0x0);
        gbc.writeMem(0x405b, { 0x3e, 0xf6 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4019, gbc.sp());
        EXPECT(0x405d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 01FC
        gbc.setState(0x9ca9, 0x8dad, 0xc9d0, 0x5328, 0x4226, 0x3659, 0x1, 0x1);
        gbc.writeMem(0x9ca9, { 0x3e, 0xe2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8dad, gbc.sp());
        EXPECT(0x9cab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9ca9));
        EXPECT(0xe2, gbc.readMem(0x9caa));
        // 3E 01FE
        gbc.setState(0xd8c3, 0x3e0a, 0x9eb0, 0x7dc1, 0x4219, 0xe28b, 0x0, 0x1);
        gbc.writeMem(0xd8c3, { 0x3e, 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3e0a, gbc.sp());
        EXPECT(0xd8c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd8c3));
        EXPECT(0xf, gbc.readMem(0xd8c4));
        // 3E 01FF
        gbc.setState(0xed2, 0x74d6, 0x8cb0, 0xffa6, 0x3243, 0x8cc6, 0x0, 0x1);
        gbc.writeMem(0xed2, { 0x3e, 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x74d6, gbc.sp());
        EXPECT(0xed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0200
        gbc.setState(0xd067, 0xd02a, 0x20c0, 0x4092, 0xdcd8, 0xf06f, 0x1, 0x1);
        gbc.writeMem(0xd067, { 0x3e, 0xdc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd02a, gbc.sp());
        EXPECT(0xd069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd067));
        EXPECT(0xdc, gbc.readMem(0xd068));
        // 3E 0201
        gbc.setState(0x503f, 0xd865, 0x26c0, 0x85f2, 0xffec, 0x1d78, 0x0, 0x1);
        gbc.writeMem(0x503f, { 0x3e, 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd865, gbc.sp());
        EXPECT(0x5041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0202
        gbc.setState(0xa691, 0x8683, 0xf920, 0xf4de, 0x29a2, 0x3440, 0x1, 0x0);
        gbc.writeMem(0xa691, { 0x3e, 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8683, gbc.sp());
        EXPECT(0xa693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa691));
        EXPECT(0x2b, gbc.readMem(0xa692));
        // 3E 0203
        gbc.setState(0xbea7, 0x762b, 0xf2b0, 0x6a8e, 0xe58d, 0xd029, 0x0, 0x0);
        gbc.writeMem(0xbea7, { 0x3e, 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x762b, gbc.sp());
        EXPECT(0xbea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbea7));
        EXPECT(0xd0, gbc.readMem(0xbea8));
        // 3E 0205
        gbc.setState(0x3974, 0x69a8, 0x9850, 0xafd2, 0x452d, 0xbedf, 0x1, 0x1);
        gbc.writeMem(0x3974, { 0x3e, 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x69a8, gbc.sp());
        EXPECT(0x3976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0206
        gbc.setState(0xaf28, 0xdb41, 0x2630, 0x4ecd, 0x67cf, 0x40c5, 0x1, 0x0);
        gbc.writeMem(0xaf28, { 0x3e, 0xe4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdb41, gbc.sp());
        EXPECT(0xaf2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xaf28));
        EXPECT(0xe4, gbc.readMem(0xaf29));
        // 3E 0207
        gbc.setState(0xa598, 0xc90e, 0xdee0, 0x5db7, 0xf5d2, 0x646a, 0x0, 0x1);
        gbc.writeMem(0xa598, { 0x3e, 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc90e, gbc.sp());
        EXPECT(0xa59a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa598));
        EXPECT(0x2c, gbc.readMem(0xa599));
        // 3E 0208
        gbc.setState(0x915, 0x3198, 0xae40, 0x625e, 0x38dc, 0x78b2, 0x1, 0x0);
        gbc.writeMem(0x915, { 0x3e, 0x26 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3198, gbc.sp());
        EXPECT(0x917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0209
        gbc.setState(0x37ec, 0x555, 0x54c0, 0x3a88, 0xea9f, 0x171f, 0x1, 0x0);
        gbc.writeMem(0x37ec, { 0x3e, 0xaf });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x555, gbc.sp());
        EXPECT(0x37ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 020A
        gbc.setState(0xa9bb, 0x5f2b, 0xd590, 0xebeb, 0x1d93, 0x2cb, 0x0, 0x0);
        gbc.writeMem(0xa9bb, { 0x3e, 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5f2b, gbc.sp());
        EXPECT(0xa9bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa9bb));
        EXPECT(0xf9, gbc.readMem(0xa9bc));
        // 3E 020B
        gbc.setState(0xd1a7, 0x5097, 0xe010, 0xfe70, 0x4f6, 0x3c69, 0x0, 0x1);
        gbc.writeMem(0xd1a7, { 0x3e, 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5097, gbc.sp());
        EXPECT(0xd1a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd1a7));
        EXPECT(0x50, gbc.readMem(0xd1a8));
        // 3E 020C
        gbc.setState(0x4dc1, 0xabcc, 0x3da0, 0x87, 0x859c, 0x3e58, 0x0, 0x0);
        gbc.writeMem(0x4dc1, { 0x3e, 0x20 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xabcc, gbc.sp());
        EXPECT(0x4dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 020E
        gbc.setState(0x6df2, 0xbcc2, 0x9120, 0xe55f, 0x1b72, 0xc403, 0x0, 0x1);
        gbc.writeMem(0x6df2, { 0x3e, 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbcc2, gbc.sp());
        EXPECT(0x6df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 020F
        gbc.setState(0x7158, 0x9f03, 0xa3c0, 0xf9e3, 0xab57, 0x67b3, 0x1, 0x1);
        gbc.writeMem(0x7158, { 0x3e, 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9f03, gbc.sp());
        EXPECT(0x715a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0210
        gbc.setState(0x7497, 0x15a8, 0xe000, 0xddae, 0x8ce8, 0x220d, 0x1, 0x1);
        gbc.writeMem(0x7497, { 0x3e, 0xdd });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x15a8, gbc.sp());
        EXPECT(0x7499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0212
        gbc.setState(0x6a71, 0xd6be, 0xd8e0, 0x4166, 0xda66, 0x9bad, 0x0, 0x0);
        gbc.writeMem(0x6a71, { 0x3e, 0xa8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd6be, gbc.sp());
        EXPECT(0x6a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0213
        gbc.setState(0x266e, 0xd24d, 0xbf00, 0xdc, 0x769a, 0x8cf7, 0x0, 0x1);
        gbc.writeMem(0x266e, { 0x3e, 0x6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd24d, gbc.sp());
        EXPECT(0x2670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0214
        gbc.setState(0xccb6, 0x9acb, 0x6270, 0x23a2, 0x5559, 0x4c07, 0x1, 0x0);
        gbc.writeMem(0xccb6, { 0x3e, 0xd8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9acb, gbc.sp());
        EXPECT(0xccb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xccb6));
        EXPECT(0xd8, gbc.readMem(0xccb7));
        // 3E 0215
        gbc.setState(0x3057, 0xecb4, 0x3c90, 0x66d7, 0xd683, 0x31c3, 0x0, 0x0);
        gbc.writeMem(0x3057, { 0x3e, 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xecb4, gbc.sp());
        EXPECT(0x3059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0216
        gbc.setState(0x42a8, 0xf982, 0xf190, 0x3537, 0x255c, 0x900c, 0x0, 0x0);
        gbc.writeMem(0x42a8, { 0x3e, 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf982, gbc.sp());
        EXPECT(0x42aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0217
        gbc.setState(0x528d, 0xeb59, 0x7f20, 0x7d, 0x7a62, 0x974e, 0x1, 0x1);
        gbc.writeMem(0x528d, { 0x3e, 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xeb59, gbc.sp());
        EXPECT(0x528f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0218
        gbc.setState(0x4aab, 0x93e, 0x7290, 0xf5ea, 0xa9b, 0x2e14, 0x1, 0x0);
        gbc.writeMem(0x4aab, { 0x3e, 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x93e, gbc.sp());
        EXPECT(0x4aad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0219
        gbc.setState(0xb05e, 0x29f5, 0x3730, 0x88bd, 0x4cb, 0x6c08, 0x1, 0x0);
        gbc.writeMem(0xb05e, { 0x3e, 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x29f5, gbc.sp());
        EXPECT(0xb060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb05e));
        EXPECT(0xfa, gbc.readMem(0xb05f));
        // 3E 021A
        gbc.setState(0x5bfd, 0x3e9b, 0x43c0, 0x618d, 0x17fa, 0x7a25, 0x0, 0x1);
        gbc.writeMem(0x5bfd, { 0x3e, 0x69 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3e9b, gbc.sp());
        EXPECT(0x5bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 021B
        gbc.setState(0x70e9, 0xb59e, 0x7ad0, 0xc5b, 0x1218, 0xcca1, 0x1, 0x0);
        gbc.writeMem(0x70e9, { 0x3e, 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb59e, gbc.sp());
        EXPECT(0x70eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 021C
        gbc.setState(0x1a2e, 0x8eec, 0xc360, 0xd76a, 0xdaf5, 0xb577, 0x1, 0x0);
        gbc.writeMem(0x1a2e, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8eec, gbc.sp());
        EXPECT(0x1a30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 021D
        gbc.setState(0x13f4, 0x6014, 0xf200, 0x69e9, 0x8312, 0xa283, 0x1, 0x0);
        gbc.writeMem(0x13f4, { 0x3e, 0x36 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6014, gbc.sp());
        EXPECT(0x13f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 021E
        gbc.setState(0x6cc2, 0xc12f, 0xa0c0, 0xd97e, 0xcc1c, 0x6d26, 0x0, 0x1);
        gbc.writeMem(0x6cc2, { 0x3e, 0x5d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc12f, gbc.sp());
        EXPECT(0x6cc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 021F
        gbc.setState(0x3731, 0x177b, 0xefd0, 0x371b, 0xf1a2, 0x9d4c, 0x1, 0x1);
        gbc.writeMem(0x3731, { 0x3e, 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x177b, gbc.sp());
        EXPECT(0x3733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0220
        gbc.setState(0x3d75, 0x42aa, 0xd9a0, 0x1adb, 0xe3fa, 0xbf2b, 0x1, 0x1);
        gbc.writeMem(0x3d75, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x42aa, gbc.sp());
        EXPECT(0x3d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0221
        gbc.setState(0x3780, 0x3091, 0x18d0, 0xae31, 0xe237, 0x30d0, 0x1, 0x1);
        gbc.writeMem(0x3780, { 0x3e, 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3091, gbc.sp());
        EXPECT(0x3782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0222
        gbc.setState(0x1c74, 0x22f2, 0xc0b0, 0x892d, 0x88e, 0x976d, 0x0, 0x0);
        gbc.writeMem(0x1c74, { 0x3e, 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x22f2, gbc.sp());
        EXPECT(0x1c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0223
        gbc.setState(0x5a2e, 0xc043, 0x4ec0, 0x14f5, 0xce95, 0x719, 0x0, 0x1);
        gbc.writeMem(0x5a2e, { 0x3e, 0x4c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc043, gbc.sp());
        EXPECT(0x5a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0224
        gbc.setState(0xede0, 0x5586, 0x7ca0, 0x2b9e, 0x203f, 0x6841, 0x0, 0x0);
        gbc.writeMem(0xede0, { 0x3e, 0xe6 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5586, gbc.sp());
        EXPECT(0xede2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xede0));
        EXPECT(0xe6, gbc.readMem(0xede1));
        // 3E 0225
        gbc.setState(0x2eaf, 0x79fa, 0xed10, 0xc14f, 0x762e, 0xee01, 0x1, 0x0);
        gbc.writeMem(0x2eaf, { 0x3e, 0xbe });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x79fa, gbc.sp());
        EXPECT(0x2eb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0226
        gbc.setState(0x6006, 0x77a2, 0x5cd0, 0x7ccc, 0x919e, 0xc43c, 0x0, 0x1);
        gbc.writeMem(0x6006, { 0x3e, 0xa5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x77a2, gbc.sp());
        EXPECT(0x6008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0227
        gbc.setState(0x6910, 0xee91, 0xd5f0, 0x39e0, 0xe8ac, 0x3016, 0x1, 0x1);
        gbc.writeMem(0x6910, { 0x3e, 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xee91, gbc.sp());
        EXPECT(0x6912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0228
        gbc.setState(0x7092, 0xffcf, 0x3b50, 0x2c01, 0x2fa4, 0xa1d7, 0x0, 0x0);
        gbc.writeMem(0x7092, { 0x3e, 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xffcf, gbc.sp());
        EXPECT(0x7094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0229
        gbc.setState(0x7382, 0x851a, 0xa150, 0xa342, 0x49a, 0x22fa, 0x1, 0x1);
        gbc.writeMem(0x7382, { 0x3e, 0xc6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x851a, gbc.sp());
        EXPECT(0x7384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 022A
        gbc.setState(0x443a, 0x50f0, 0x6810, 0xcf94, 0xd88e, 0x82dd, 0x0, 0x0);
        gbc.writeMem(0x443a, { 0x3e, 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x50f0, gbc.sp());
        EXPECT(0x443c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 022B
        gbc.setState(0x5fb1, 0x38e5, 0x5e00, 0x6255, 0x6a48, 0xcc70, 0x1, 0x0);
        gbc.writeMem(0x5fb1, { 0x3e, 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x38e5, gbc.sp());
        EXPECT(0x5fb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 022C
        gbc.setState(0x3acb, 0xa3b6, 0x46e0, 0xbaf6, 0x977e, 0x68f, 0x1, 0x1);
        gbc.writeMem(0x3acb, { 0x3e, 0xe });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa3b6, gbc.sp());
        EXPECT(0x3acd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 022D
        gbc.setState(0x6e1b, 0xc03d, 0xe390, 0x2d0f, 0xbe27, 0x4bb0, 0x1, 0x0);
        gbc.writeMem(0x6e1b, { 0x3e, 0x26 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc03d, gbc.sp());
        EXPECT(0x6e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 022E
        gbc.setState(0xa718, 0xaa6c, 0xfd60, 0x5759, 0xc3ad, 0xf447, 0x0, 0x1);
        gbc.writeMem(0xa718, { 0x3e, 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xaa6c, gbc.sp());
        EXPECT(0xa71a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa718));
        EXPECT(0xb2, gbc.readMem(0xa719));
        // 3E 022F
        gbc.setState(0x97b3, 0x6024, 0x3f20, 0xa308, 0x2eb3, 0x9656, 0x0, 0x0);
        gbc.writeMem(0x97b3, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6024, gbc.sp());
        EXPECT(0x97b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x97b3));
        EXPECT(0x3b, gbc.readMem(0x97b4));
        // 3E 0230
        gbc.setState(0x7fe8, 0x33d6, 0x28d0, 0xdc3d, 0x5830, 0x7ed0, 0x0, 0x0);
        gbc.writeMem(0x7fe8, { 0x3e, 0xef });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x33d6, gbc.sp());
        EXPECT(0x7fea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0231
        gbc.setState(0xe3f7, 0x91bd, 0xdbf0, 0x498b, 0x4234, 0x3b08, 0x1, 0x0);
        gbc.writeMem(0xe3f7, { 0x3e, 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x91bd, gbc.sp());
        EXPECT(0xe3f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe3f7));
        EXPECT(0x4, gbc.readMem(0xe3f8));
        // 3E 0232
        gbc.setState(0x39a8, 0xc5fd, 0xe110, 0x14e3, 0x36b, 0xa5d8, 0x0, 0x0);
        gbc.writeMem(0x39a8, { 0x3e, 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc5fd, gbc.sp());
        EXPECT(0x39aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0233
        gbc.setState(0x4ac, 0x302f, 0xc850, 0x4fe4, 0xacbe, 0x5483, 0x0, 0x0);
        gbc.writeMem(0x4ac, { 0x3e, 0x86 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x302f, gbc.sp());
        EXPECT(0x4ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0234
        gbc.setState(0x19ba, 0xb113, 0xc740, 0xc39e, 0x6bc8, 0x4c6, 0x1, 0x0);
        gbc.writeMem(0x19ba, { 0x3e, 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb113, gbc.sp());
        EXPECT(0x19bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0235
        gbc.setState(0xab6c, 0x70a2, 0x7750, 0xc767, 0x406d, 0x689e, 0x1, 0x0);
        gbc.writeMem(0xab6c, { 0x3e, 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x70a2, gbc.sp());
        EXPECT(0xab6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xab6c));
        EXPECT(0xea, gbc.readMem(0xab6d));
        // 3E 0236
        gbc.setState(0x1f3b, 0xdaed, 0x4080, 0x2c15, 0xbf23, 0x3fb1, 0x1, 0x0);
        gbc.writeMem(0x1f3b, { 0x3e, 0x5a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdaed, gbc.sp());
        EXPECT(0x1f3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0237
        gbc.setState(0x71ed, 0xb72b, 0xc7b0, 0xea25, 0x29fa, 0x9c75, 0x0, 0x0);
        gbc.writeMem(0x71ed, { 0x3e, 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb72b, gbc.sp());
        EXPECT(0x71ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0238
        gbc.setState(0xd4be, 0x2165, 0x0, 0xc237, 0xc850, 0x6ebf, 0x1, 0x1);
        gbc.writeMem(0xd4be, { 0x3e, 0xd1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2165, gbc.sp());
        EXPECT(0xd4c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd4be));
        EXPECT(0xd1, gbc.readMem(0xd4bf));
        // 3E 0239
        gbc.setState(0x1c1e, 0xda92, 0xc490, 0x87eb, 0xabc6, 0xcf09, 0x0, 0x0);
        gbc.writeMem(0x1c1e, { 0x3e, 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xda92, gbc.sp());
        EXPECT(0x1c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 023A
        gbc.setState(0x7a21, 0xf933, 0xe2d0, 0x3ea, 0x44ff, 0xf07b, 0x1, 0x1);
        gbc.writeMem(0x7a21, { 0x3e, 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf933, gbc.sp());
        EXPECT(0x7a23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 023B
        gbc.setState(0xd0d7, 0x5279, 0x96e0, 0xbd87, 0xd0d1, 0x6264, 0x1, 0x0);
        gbc.writeMem(0xd0d7, { 0x3e, 0xd3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5279, gbc.sp());
        EXPECT(0xd0d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd0d7));
        EXPECT(0xd3, gbc.readMem(0xd0d8));
        // 3E 023C
        gbc.setState(0x8494, 0x8fb5, 0x3c00, 0x1780, 0xf0b3, 0x9e55, 0x0, 0x1);
        gbc.writeMem(0x8494, { 0x3e, 0x83 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8fb5, gbc.sp());
        EXPECT(0x8496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8494));
        EXPECT(0x83, gbc.readMem(0x8495));
        // 3E 023D
        gbc.setState(0x3e50, 0x484c, 0xfa00, 0xbd8a, 0xc427, 0x1bac, 0x1, 0x1);
        gbc.writeMem(0x3e50, { 0x3e, 0xf7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x484c, gbc.sp());
        EXPECT(0x3e52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 023E
        gbc.setState(0xc7c7, 0x42c7, 0x1300, 0x8437, 0xfebf, 0xfc60, 0x0, 0x0);
        gbc.writeMem(0xc7c7, { 0x3e, 0x2e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x42c7, gbc.sp());
        EXPECT(0xc7c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc7c7));
        EXPECT(0x2e, gbc.readMem(0xc7c8));
        // 3E 023F
        gbc.setState(0xca47, 0x7517, 0x10e0, 0xe8e0, 0x940b, 0x6350, 0x0, 0x0);
        gbc.writeMem(0xca47, { 0x3e, 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7517, gbc.sp());
        EXPECT(0xca49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xca47));
        EXPECT(0xa9, gbc.readMem(0xca48));
        // 3E 0240
        gbc.setState(0xcc43, 0x3307, 0x7230, 0xad6, 0xc0cb, 0xf805, 0x1, 0x1);
        gbc.writeMem(0xcc43, { 0x3e, 0xe6 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3307, gbc.sp());
        EXPECT(0xcc45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcc43));
        EXPECT(0xe6, gbc.readMem(0xcc44));
        // 3E 0241
        gbc.setState(0x1086, 0x5d45, 0x17e0, 0xd323, 0x1182, 0xb8c9, 0x0, 0x0);
        gbc.writeMem(0x1086, { 0x3e, 0xa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5d45, gbc.sp());
        EXPECT(0x1088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0242
        gbc.setState(0xd998, 0xb667, 0x6a10, 0x8c68, 0xacb, 0x1db2, 0x0, 0x1);
        gbc.writeMem(0xd998, { 0x3e, 0xfc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb667, gbc.sp());
        EXPECT(0xd99a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd998));
        EXPECT(0xfc, gbc.readMem(0xd999));
        // 3E 0243
        gbc.setState(0xd39c, 0x2fd1, 0x3d50, 0xc076, 0x9517, 0x5d69, 0x0, 0x0);
        gbc.writeMem(0xd39c, { 0x3e, 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2fd1, gbc.sp());
        EXPECT(0xd39e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd39c));
        EXPECT(0x4b, gbc.readMem(0xd39d));
        // 3E 0244
        gbc.setState(0xa696, 0xae7f, 0x9700, 0xaf01, 0xaadc, 0x6672, 0x1, 0x1);
        gbc.writeMem(0xa696, { 0x3e, 0x5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xae7f, gbc.sp());
        EXPECT(0xa698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa696));
        EXPECT(0x5, gbc.readMem(0xa697));
        // 3E 0245
        gbc.setState(0x92d5, 0x7149, 0xe940, 0xfd66, 0x6356, 0x7e7c, 0x1, 0x1);
        gbc.writeMem(0x92d5, { 0x3e, 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7149, gbc.sp());
        EXPECT(0x92d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x92d5));
        EXPECT(0xbc, gbc.readMem(0x92d6));
        // 3E 0246
        gbc.setState(0x46a, 0xf6f7, 0x4710, 0x7df3, 0x15aa, 0x2878, 0x0, 0x1);
        gbc.writeMem(0x46a, { 0x3e, 0x2e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf6f7, gbc.sp());
        EXPECT(0x46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0247
        gbc.setState(0x87c7, 0xafcc, 0x88c0, 0x5868, 0xb648, 0xf52e, 0x0, 0x1);
        gbc.writeMem(0x87c7, { 0x3e, 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xafcc, gbc.sp());
        EXPECT(0x87c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x87c7));
        EXPECT(0xff, gbc.readMem(0x87c8));
        // 3E 0248
        gbc.setState(0xe8d8, 0x9311, 0xda80, 0xb2b1, 0x9951, 0x1a54, 0x1, 0x0);
        gbc.writeMem(0xe8d8, { 0x3e, 0x74 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9311, gbc.sp());
        EXPECT(0xe8da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe8d8));
        EXPECT(0x74, gbc.readMem(0xe8d9));
        // 3E 0249
        gbc.setState(0xc130, 0x8bb6, 0x8b30, 0xf299, 0x2891, 0x9d12, 0x1, 0x0);
        gbc.writeMem(0xc130, { 0x3e, 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8bb6, gbc.sp());
        EXPECT(0xc132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc130));
        EXPECT(0x57, gbc.readMem(0xc131));
        // 3E 024A
        gbc.setState(0x8e09, 0xf552, 0xf980, 0x443, 0xbb7, 0xc260, 0x0, 0x0);
        gbc.writeMem(0x8e09, { 0x3e, 0x7c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf552, gbc.sp());
        EXPECT(0x8e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8e09));
        EXPECT(0x7c, gbc.readMem(0x8e0a));
        // 3E 024B
        gbc.setState(0x7e17, 0x8ecf, 0x5af0, 0x15ff, 0xed00, 0xf70e, 0x0, 0x1);
        gbc.writeMem(0x7e17, { 0x3e, 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8ecf, gbc.sp());
        EXPECT(0x7e19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 024C
        gbc.setState(0xc32e, 0x62c8, 0xf430, 0x11c5, 0x1d32, 0xac6d, 0x1, 0x0);
        gbc.writeMem(0xc32e, { 0x3e, 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x62c8, gbc.sp());
        EXPECT(0xc330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc32e));
        EXPECT(0x57, gbc.readMem(0xc32f));
        // 3E 024D
        gbc.setState(0xec7b, 0x9f21, 0x5080, 0xcd25, 0x961b, 0xb88e, 0x0, 0x0);
        gbc.writeMem(0xec7b, { 0x3e, 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9f21, gbc.sp());
        EXPECT(0xec7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xec7b));
        EXPECT(0xc0, gbc.readMem(0xec7c));
        // 3E 024E
        gbc.setState(0x8d09, 0x3372, 0x8de0, 0x1cdf, 0x4145, 0xd5cc, 0x1, 0x0);
        gbc.writeMem(0x8d09, { 0x3e, 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3372, gbc.sp());
        EXPECT(0x8d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8d09));
        EXPECT(0xc1, gbc.readMem(0x8d0a));
        // 3E 024F
        gbc.setState(0x7c3c, 0x5809, 0xe790, 0xf347, 0xba2b, 0x6a45, 0x1, 0x1);
        gbc.writeMem(0x7c3c, { 0x3e, 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5809, gbc.sp());
        EXPECT(0x7c3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0250
        gbc.setState(0xd92c, 0xeadc, 0x96d0, 0x8c66, 0x9575, 0xb082, 0x0, 0x1);
        gbc.writeMem(0xd92c, { 0x3e, 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xeadc, gbc.sp());
        EXPECT(0xd92e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd92c));
        EXPECT(0x21, gbc.readMem(0xd92d));
        // 3E 0251
        gbc.setState(0xd7bd, 0xc847, 0x40a0, 0xedb8, 0x5793, 0xebd, 0x0, 0x0);
        gbc.writeMem(0xd7bd, { 0x3e, 0xba });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc847, gbc.sp());
        EXPECT(0xd7bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd7bd));
        EXPECT(0xba, gbc.readMem(0xd7be));
        // 3E 0252
        gbc.setState(0x7ce7, 0x2382, 0x9330, 0x93e7, 0xf3b0, 0x2fb3, 0x1, 0x0);
        gbc.writeMem(0x7ce7, { 0x3e, 0x5d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2382, gbc.sp());
        EXPECT(0x7ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0254
        gbc.setState(0x8316, 0xb387, 0x29d0, 0x10e2, 0x5d04, 0x18b0, 0x0, 0x1);
        gbc.writeMem(0x8316, { 0x3e, 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb387, gbc.sp());
        EXPECT(0x8318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8316));
        EXPECT(0xf8, gbc.readMem(0x8317));
        // 3E 0255
        gbc.setState(0xd8d1, 0x634e, 0x98c0, 0x8b0a, 0x2d12, 0x3275, 0x0, 0x0);
        gbc.writeMem(0xd8d1, { 0x3e, 0xe3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x634e, gbc.sp());
        EXPECT(0xd8d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd8d1));
        EXPECT(0xe3, gbc.readMem(0xd8d2));
        // 3E 0256
        gbc.setState(0x9982, 0x91ba, 0x440, 0xc8ad, 0xf011, 0x4cc8, 0x0, 0x1);
        gbc.writeMem(0x9982, { 0x3e, 0xf5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x91ba, gbc.sp());
        EXPECT(0x9984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9982));
        EXPECT(0xf5, gbc.readMem(0x9983));
        // 3E 0257
        gbc.setState(0x9e8d, 0x2d20, 0xc7a0, 0xcefe, 0x6d32, 0xf4e6, 0x0, 0x0);
        gbc.writeMem(0x9e8d, { 0x3e, 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2d20, gbc.sp());
        EXPECT(0x9e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9e8d));
        EXPECT(0xed, gbc.readMem(0x9e8e));
        // 3E 0258
        gbc.setState(0x1e44, 0xfc37, 0x7240, 0x8448, 0xe1e4, 0xa463, 0x1, 0x0);
        gbc.writeMem(0x1e44, { 0x3e, 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfc37, gbc.sp());
        EXPECT(0x1e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0259
        gbc.setState(0xbfdf, 0xe119, 0x7630, 0xeb5f, 0xbe, 0x179b, 0x1, 0x1);
        gbc.writeMem(0xbfdf, { 0x3e, 0xee });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe119, gbc.sp());
        EXPECT(0xbfe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbfdf));
        EXPECT(0xee, gbc.readMem(0xbfe0));
        // 3E 025A
        gbc.setState(0x4fd2, 0x4399, 0xe880, 0x82c2, 0xe53d, 0x22da, 0x1, 0x0);
        gbc.writeMem(0x4fd2, { 0x3e, 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4399, gbc.sp());
        EXPECT(0x4fd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 025B
        gbc.setState(0xb100, 0xbb5a, 0x9c60, 0xe4d7, 0xb8fd, 0x58fc, 0x1, 0x0);
        gbc.writeMem(0xb100, { 0x3e, 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbb5a, gbc.sp());
        EXPECT(0xb102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb100));
        EXPECT(0x18, gbc.readMem(0xb101));
        // 3E 025C
        gbc.setState(0xd4ee, 0xc152, 0xdcc0, 0xbaf0, 0xe017, 0xa0bd, 0x0, 0x0);
        gbc.writeMem(0xd4ee, { 0x3e, 0xd7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc152, gbc.sp());
        EXPECT(0xd4f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd4ee));
        EXPECT(0xd7, gbc.readMem(0xd4ef));
        // 3E 025D
        gbc.setState(0xc190, 0xf191, 0x57a0, 0x51f2, 0xcfbc, 0xc943, 0x0, 0x0);
        gbc.writeMem(0xc190, { 0x3e, 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf191, gbc.sp());
        EXPECT(0xc192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc190));
        EXPECT(0x40, gbc.readMem(0xc191));
        // 3E 025E
        gbc.setState(0x11d9, 0xb61c, 0x8bf0, 0x7b28, 0x87ed, 0x7deb, 0x1, 0x0);
        gbc.writeMem(0x11d9, { 0x3e, 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb61c, gbc.sp());
        EXPECT(0x11db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 025F
        gbc.setState(0xa2bd, 0xb7cd, 0x2b50, 0xcbdc, 0x86f5, 0xcef3, 0x0, 0x0);
        gbc.writeMem(0xa2bd, { 0x3e, 0x27 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb7cd, gbc.sp());
        EXPECT(0xa2bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa2bd));
        EXPECT(0x27, gbc.readMem(0xa2be));
        // 3E 0260
        gbc.setState(0x85b5, 0x9cc6, 0xb40, 0x9535, 0x44ad, 0xc2bf, 0x0, 0x1);
        gbc.writeMem(0x85b5, { 0x3e, 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9cc6, gbc.sp());
        EXPECT(0x85b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x85b5));
        EXPECT(0x64, gbc.readMem(0x85b6));
        // 3E 0261
        gbc.setState(0x6d0d, 0x8b3, 0xa50, 0xc92e, 0x7181, 0x86a6, 0x0, 0x1);
        gbc.writeMem(0x6d0d, { 0x3e, 0x56 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8b3, gbc.sp());
        EXPECT(0x6d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0262
        gbc.setState(0x7ac0, 0xdbce, 0xeeb0, 0x2c74, 0x17d2, 0x33e6, 0x0, 0x0);
        gbc.writeMem(0x7ac0, { 0x3e, 0x48 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xdbce, gbc.sp());
        EXPECT(0x7ac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0263
        gbc.setState(0x7c4f, 0x316b, 0x1660, 0xb1c2, 0x9540, 0x62be, 0x0, 0x0);
        gbc.writeMem(0x7c4f, { 0x3e, 0x32 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x316b, gbc.sp());
        EXPECT(0x7c51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0264
        gbc.setState(0xe8ae, 0x66b3, 0x9d90, 0x22c8, 0x600, 0x69c9, 0x0, 0x1);
        gbc.writeMem(0xe8ae, { 0x3e, 0x15 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x66b3, gbc.sp());
        EXPECT(0xe8b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe8ae));
        EXPECT(0x15, gbc.readMem(0xe8af));
        // 3E 0265
        gbc.setState(0xa9fd, 0xf50a, 0x4f60, 0xaaf1, 0xf8c3, 0x1a56, 0x0, 0x0);
        gbc.writeMem(0xa9fd, { 0x3e, 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf50a, gbc.sp());
        EXPECT(0xa9ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa9fd));
        EXPECT(0x77, gbc.readMem(0xa9fe));
        // 3E 0266
        gbc.setState(0x2f09, 0xd6d7, 0x82d0, 0x2e7c, 0xc026, 0xac0, 0x1, 0x1);
        gbc.writeMem(0x2f09, { 0x3e, 0x36 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd6d7, gbc.sp());
        EXPECT(0x2f0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0267
        gbc.setState(0xc901, 0x7237, 0xc4f0, 0x44e8, 0x7908, 0x764a, 0x0, 0x1);
        gbc.writeMem(0xc901, { 0x3e, 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7237, gbc.sp());
        EXPECT(0xc903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc901));
        EXPECT(0x1c, gbc.readMem(0xc902));
        // 3E 0268
        gbc.setState(0x6354, 0x736b, 0xc690, 0x862c, 0xb11f, 0x5b1c, 0x0, 0x1);
        gbc.writeMem(0x6354, { 0x3e, 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x736b, gbc.sp());
        EXPECT(0x6356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0269
        gbc.setState(0x435f, 0xf810, 0x7250, 0x1596, 0xd266, 0x286e, 0x1, 0x1);
        gbc.writeMem(0x435f, { 0x3e, 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf810, gbc.sp());
        EXPECT(0x4361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 026A
        gbc.setState(0x20c3, 0xab9f, 0x2780, 0x6688, 0xa58d, 0xb4b8, 0x0, 0x0);
        gbc.writeMem(0x20c3, { 0x3e, 0x16 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xab9f, gbc.sp());
        EXPECT(0x20c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 026B
        gbc.setState(0x8a66, 0x40c1, 0x5290, 0x3bdb, 0xd7f2, 0xbc3d, 0x1, 0x0);
        gbc.writeMem(0x8a66, { 0x3e, 0x36 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x40c1, gbc.sp());
        EXPECT(0x8a68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8a66));
        EXPECT(0x36, gbc.readMem(0x8a67));
        // 3E 026C
        gbc.setState(0x9bfa, 0xbef, 0x5770, 0x403a, 0xa9b5, 0xde08, 0x0, 0x0);
        gbc.writeMem(0x9bfa, { 0x3e, 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbef, gbc.sp());
        EXPECT(0x9bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9bfa));
        EXPECT(0x4, gbc.readMem(0x9bfb));
        // 3E 026D
        gbc.setState(0x44c4, 0xd3ca, 0x6cd0, 0xc482, 0xfdc4, 0xc171, 0x0, 0x0);
        gbc.writeMem(0x44c4, { 0x3e, 0xe4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd3ca, gbc.sp());
        EXPECT(0x44c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 026E
        gbc.setState(0x462e, 0xed6f, 0x8230, 0xadf7, 0x99fd, 0x1f0a, 0x1, 0x1);
        gbc.writeMem(0x462e, { 0x3e, 0x90 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xed6f, gbc.sp());
        EXPECT(0x4630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 026F
        gbc.setState(0x2b6e, 0x127, 0xc690, 0x7c58, 0xbeb6, 0x858a, 0x1, 0x0);
        gbc.writeMem(0x2b6e, { 0x3e, 0x3f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x127, gbc.sp());
        EXPECT(0x2b70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0270
        gbc.setState(0xc3de, 0xeb04, 0x7a70, 0xc0f4, 0x445a, 0xe911, 0x1, 0x1);
        gbc.writeMem(0xc3de, { 0x3e, 0x27 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xeb04, gbc.sp());
        EXPECT(0xc3e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc3de));
        EXPECT(0x27, gbc.readMem(0xc3df));
        // 3E 0272
        gbc.setState(0x569e, 0x9523, 0x9cb0, 0x6943, 0x32ac, 0x593b, 0x0, 0x1);
        gbc.writeMem(0x569e, { 0x3e, 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9523, gbc.sp());
        EXPECT(0x56a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0273
        gbc.setState(0x2464, 0x760d, 0x24e0, 0xffad, 0xbe0a, 0x46, 0x0, 0x1);
        gbc.writeMem(0x2464, { 0x3e, 0xc2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x760d, gbc.sp());
        EXPECT(0x2466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0274
        gbc.setState(0x53dc, 0x5501, 0xfdc0, 0xf84b, 0x4ab1, 0xaf10, 0x1, 0x1);
        gbc.writeMem(0x53dc, { 0x3e, 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5501, gbc.sp());
        EXPECT(0x53de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0276
        gbc.setState(0x40fa, 0x619e, 0xd1a0, 0x12ec, 0xbac9, 0xb383, 0x0, 0x1);
        gbc.writeMem(0x40fa, { 0x3e, 0xd4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x619e, gbc.sp());
        EXPECT(0x40fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0278
        gbc.setState(0x221d, 0xcc2a, 0x1900, 0x30cf, 0x9f83, 0x29bb, 0x0, 0x1);
        gbc.writeMem(0x221d, { 0x3e, 0xf7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcc2a, gbc.sp());
        EXPECT(0x221f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0279
        gbc.setState(0x1ba3, 0x1405, 0xbad0, 0x32e1, 0xceb8, 0x4170, 0x0, 0x0);
        gbc.writeMem(0x1ba3, { 0x3e, 0x75 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1405, gbc.sp());
        EXPECT(0x1ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 027A
        gbc.setState(0x9f8c, 0xc02d, 0xba60, 0x9308, 0x18a2, 0xf818, 0x0, 0x0);
        gbc.writeMem(0x9f8c, { 0x3e, 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc02d, gbc.sp());
        EXPECT(0x9f8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9f8c));
        EXPECT(0x62, gbc.readMem(0x9f8d));
        // 3E 027B
        gbc.setState(0xc907, 0x2db0, 0x7480, 0x2e5, 0xbde6, 0xbb9e, 0x0, 0x1);
        gbc.writeMem(0xc907, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2db0, gbc.sp());
        EXPECT(0xc909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc907));
        EXPECT(0x3b, gbc.readMem(0xc908));
        // 3E 027C
        gbc.setState(0x1e3e, 0xa697, 0x2380, 0x4d6e, 0xb9fc, 0xab69, 0x1, 0x1);
        gbc.writeMem(0x1e3e, { 0x3e, 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa697, gbc.sp());
        EXPECT(0x1e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 027D
        gbc.setState(0x685e, 0xfec1, 0x1a20, 0xb262, 0x9048, 0x3ca1, 0x1, 0x1);
        gbc.writeMem(0x685e, { 0x3e, 0x22 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfec1, gbc.sp());
        EXPECT(0x6860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 027F
        gbc.setState(0x37dd, 0x6dde, 0x5d10, 0x94d2, 0x1ae9, 0x1116, 0x0, 0x1);
        gbc.writeMem(0x37dd, { 0x3e, 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6dde, gbc.sp());
        EXPECT(0x37df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0280
        gbc.setState(0xd453, 0x64be, 0x8400, 0x1e6c, 0x5e68, 0xc08a, 0x0, 0x0);
        gbc.writeMem(0xd453, { 0x3e, 0x42 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x64be, gbc.sp());
        EXPECT(0xd455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd453));
        EXPECT(0x42, gbc.readMem(0xd454));
        // 3E 0282
        gbc.setState(0x4db3, 0xf208, 0xdd10, 0x66e1, 0xdf8f, 0xbf23, 0x0, 0x0);
        gbc.writeMem(0x4db3, { 0x3e, 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf208, gbc.sp());
        EXPECT(0x4db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0283
        gbc.setState(0xcdad, 0x6e77, 0x8390, 0x23a4, 0xe689, 0x9204, 0x0, 0x1);
        gbc.writeMem(0xcdad, { 0x3e, 0xe6 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6e77, gbc.sp());
        EXPECT(0xcdaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcdad));
        EXPECT(0xe6, gbc.readMem(0xcdae));
        // 3E 0284
        gbc.setState(0x6717, 0x6345, 0xe000, 0x31a7, 0xe441, 0x19cc, 0x0, 0x0);
        gbc.writeMem(0x6717, { 0x3e, 0xf0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6345, gbc.sp());
        EXPECT(0x6719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0285
        gbc.setState(0x6f05, 0x4317, 0x4630, 0x649b, 0xc8c1, 0xf02a, 0x1, 0x1);
        gbc.writeMem(0x6f05, { 0x3e, 0xbd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4317, gbc.sp());
        EXPECT(0x6f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0286
        gbc.setState(0x33eb, 0xfe4a, 0x9130, 0x37c7, 0xf6e9, 0x4b0f, 0x0, 0x1);
        gbc.writeMem(0x33eb, { 0x3e, 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfe4a, gbc.sp());
        EXPECT(0x33ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0287
        gbc.setState(0xca1f, 0xe15b, 0xfb30, 0x1e0d, 0x1873, 0xc49c, 0x1, 0x0);
        gbc.writeMem(0xca1f, { 0x3e, 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe15b, gbc.sp());
        EXPECT(0xca21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xca1f));
        EXPECT(0x65, gbc.readMem(0xca20));
        // 3E 0288
        gbc.setState(0xb7ad, 0xebef, 0x32a0, 0x253e, 0x6f7d, 0x4fbe, 0x1, 0x0);
        gbc.writeMem(0xb7ad, { 0x3e, 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xebef, gbc.sp());
        EXPECT(0xb7af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb7ad));
        EXPECT(0x37, gbc.readMem(0xb7ae));
        // 3E 0289
        gbc.setState(0xaba4, 0xbf34, 0x5d50, 0xbf02, 0x2064, 0x1b4b, 0x0, 0x0);
        gbc.writeMem(0xaba4, { 0x3e, 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbf34, gbc.sp());
        EXPECT(0xaba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xaba4));
        EXPECT(0x5f, gbc.readMem(0xaba5));
        // 3E 028A
        gbc.setState(0x7cd5, 0x91cd, 0x7890, 0x1e95, 0x1997, 0x3c5d, 0x0, 0x1);
        gbc.writeMem(0x7cd5, { 0x3e, 0xe });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x91cd, gbc.sp());
        EXPECT(0x7cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 028B
        gbc.setState(0xd4db, 0x26e2, 0xd5f0, 0x1c98, 0x49bf, 0x9b92, 0x0, 0x1);
        gbc.writeMem(0xd4db, { 0x3e, 0xce });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x26e2, gbc.sp());
        EXPECT(0xd4dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd4db));
        EXPECT(0xce, gbc.readMem(0xd4dc));
        // 3E 028C
        gbc.setState(0x73ff, 0x4edd, 0xdef0, 0xa5a6, 0xfd3f, 0x3e11, 0x0, 0x1);
        gbc.writeMem(0x73ff, { 0x3e, 0xe4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4edd, gbc.sp());
        EXPECT(0x7401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 028D
        gbc.setState(0x38ff, 0xb60d, 0xe2e0, 0x504, 0x68f4, 0x1eac, 0x0, 0x0);
        gbc.writeMem(0x38ff, { 0x3e, 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb60d, gbc.sp());
        EXPECT(0x3901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 028F
        gbc.setState(0x4e53, 0x8d49, 0xac10, 0xf48b, 0xa2b6, 0xda3a, 0x0, 0x1);
        gbc.writeMem(0x4e53, { 0x3e, 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8d49, gbc.sp());
        EXPECT(0x4e55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0290
        gbc.setState(0xddef, 0x4aaa, 0xb0, 0xc55a, 0x24c0, 0x73cb, 0x1, 0x0);
        gbc.writeMem(0xddef, { 0x3e, 0xba });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4aaa, gbc.sp());
        EXPECT(0xddf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xddef));
        EXPECT(0xba, gbc.readMem(0xddf0));
        // 3E 0291
        gbc.setState(0x433, 0xe23e, 0xd290, 0x459f, 0xfec9, 0xc3ea, 0x1, 0x0);
        gbc.writeMem(0x433, { 0x3e, 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe23e, gbc.sp());
        EXPECT(0x435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0292
        gbc.setState(0x1a39, 0x8ce3, 0x20b0, 0xe403, 0x3281, 0x9a30, 0x1, 0x0);
        gbc.writeMem(0x1a39, { 0x3e, 0xc6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8ce3, gbc.sp());
        EXPECT(0x1a3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0293
        gbc.setState(0x8cc8, 0x5f5, 0xc4b0, 0x583, 0x9514, 0xd1a2, 0x1, 0x0);
        gbc.writeMem(0x8cc8, { 0x3e, 0x7b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5f5, gbc.sp());
        EXPECT(0x8cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8cc8));
        EXPECT(0x7b, gbc.readMem(0x8cc9));
        // 3E 0294
        gbc.setState(0xe665, 0x1048, 0x9070, 0x4dae, 0x3a04, 0x14f0, 0x1, 0x0);
        gbc.writeMem(0xe665, { 0x3e, 0xe7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1048, gbc.sp());
        EXPECT(0xe667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe665));
        EXPECT(0xe7, gbc.readMem(0xe666));
        // 3E 0295
        gbc.setState(0xec1b, 0xcc77, 0xc110, 0x3e0f, 0xa672, 0x15ef, 0x0, 0x0);
        gbc.writeMem(0xec1b, { 0x3e, 0xef });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xcc77, gbc.sp());
        EXPECT(0xec1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xec1b));
        EXPECT(0xef, gbc.readMem(0xec1c));
        // 3E 0297
        gbc.setState(0xbfb6, 0x75a1, 0x9b40, 0x551c, 0x303e, 0xfaa9, 0x0, 0x1);
        gbc.writeMem(0xbfb6, { 0x3e, 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x75a1, gbc.sp());
        EXPECT(0xbfb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbfb6));
        EXPECT(0xf8, gbc.readMem(0xbfb7));
        // 3E 0298
        gbc.setState(0x6218, 0x7526, 0xa0, 0x54de, 0xe5db, 0x4c21, 0x1, 0x0);
        gbc.writeMem(0x6218, { 0x3e, 0xd7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7526, gbc.sp());
        EXPECT(0x621a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0299
        gbc.setState(0xbf09, 0x8b53, 0x31d0, 0x99f7, 0x7a16, 0x152f, 0x1, 0x0);
        gbc.writeMem(0xbf09, { 0x3e, 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8b53, gbc.sp());
        EXPECT(0xbf0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbf09));
        EXPECT(0xa4, gbc.readMem(0xbf0a));
        // 3E 029A
        gbc.setState(0xbe1, 0xdbca, 0x1000, 0x345b, 0xa271, 0x2a64, 0x1, 0x1);
        gbc.writeMem(0xbe1, { 0x3e, 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xdbca, gbc.sp());
        EXPECT(0xbe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 029B
        gbc.setState(0x4668, 0xdfd6, 0xe810, 0xe62, 0xab12, 0x28f2, 0x0, 0x1);
        gbc.writeMem(0x4668, { 0x3e, 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xdfd6, gbc.sp());
        EXPECT(0x466a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 029C
        gbc.setState(0xed, 0xb11d, 0x3540, 0x1e96, 0xe1b4, 0x861a, 0x1, 0x0);
        gbc.writeMem(0xed, { 0x3e, 0x87 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb11d, gbc.sp());
        EXPECT(0xef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 029D
        gbc.setState(0x93c7, 0xf307, 0xcf50, 0x519b, 0x97ba, 0xcfb4, 0x1, 0x1);
        gbc.writeMem(0x93c7, { 0x3e, 0xef });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf307, gbc.sp());
        EXPECT(0x93c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x93c7));
        EXPECT(0xef, gbc.readMem(0x93c8));
        // 3E 029E
        gbc.setState(0x16a6, 0xe270, 0xfe70, 0x6699, 0x9c78, 0xd1f6, 0x0, 0x1);
        gbc.writeMem(0x16a6, { 0x3e, 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe270, gbc.sp());
        EXPECT(0x16a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 029F
        gbc.setState(0x9df1, 0xc269, 0x8ef0, 0x19fd, 0x6d50, 0x17d, 0x1, 0x0);
        gbc.writeMem(0x9df1, { 0x3e, 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc269, gbc.sp());
        EXPECT(0x9df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9df1));
        EXPECT(0x8a, gbc.readMem(0x9df2));
        // 3E 02A0
        gbc.setState(0xe569, 0x65ae, 0xe8f0, 0x531f, 0x100b, 0xc35f, 0x1, 0x0);
        gbc.writeMem(0xe569, { 0x3e, 0x72 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x65ae, gbc.sp());
        EXPECT(0xe56b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe569));
        EXPECT(0x72, gbc.readMem(0xe56a));
        // 3E 02A1
        gbc.setState(0x7fa1, 0x312d, 0x6950, 0x733b, 0x928d, 0x8511, 0x1, 0x1);
        gbc.writeMem(0x7fa1, { 0x3e, 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x312d, gbc.sp());
        EXPECT(0x7fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02A2
        gbc.setState(0x3e3b, 0x4532, 0xce00, 0xeccf, 0x1e7f, 0x49bf, 0x1, 0x0);
        gbc.writeMem(0x3e3b, { 0x3e, 0xd3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4532, gbc.sp());
        EXPECT(0x3e3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02A3
        gbc.setState(0xce6c, 0xb833, 0xe900, 0x8989, 0x8e81, 0x5d88, 0x0, 0x1);
        gbc.writeMem(0xce6c, { 0x3e, 0x7f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb833, gbc.sp());
        EXPECT(0xce6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xce6c));
        EXPECT(0x7f, gbc.readMem(0xce6d));
        // 3E 02A4
        gbc.setState(0xb2ab, 0x727, 0x2970, 0xc2ef, 0x55c6, 0x37ae, 0x1, 0x0);
        gbc.writeMem(0xb2ab, { 0x3e, 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x727, gbc.sp());
        EXPECT(0xb2ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb2ab));
        EXPECT(0x96, gbc.readMem(0xb2ac));
        // 3E 02A5
        gbc.setState(0xda7c, 0xd2ad, 0x77b0, 0xe76b, 0x75f2, 0xbfb4, 0x1, 0x0);
        gbc.writeMem(0xda7c, { 0x3e, 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd2ad, gbc.sp());
        EXPECT(0xda7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xda7c));
        EXPECT(0xf2, gbc.readMem(0xda7d));
        // 3E 02A6
        gbc.setState(0x7012, 0x745a, 0xe060, 0xc4c2, 0x3468, 0x6405, 0x0, 0x1);
        gbc.writeMem(0x7012, { 0x3e, 0xc6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x745a, gbc.sp());
        EXPECT(0x7014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02A7
        gbc.setState(0x601c, 0x1931, 0xa940, 0x5844, 0xbf7b, 0xa754, 0x0, 0x1);
        gbc.writeMem(0x601c, { 0x3e, 0x5a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1931, gbc.sp());
        EXPECT(0x601e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02A9
        gbc.setState(0x6890, 0x28df, 0x16d0, 0x28aa, 0x6eb5, 0x3801, 0x0, 0x1);
        gbc.writeMem(0x6890, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x28df, gbc.sp());
        EXPECT(0x6892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02AA
        gbc.setState(0x92be, 0xe545, 0x2840, 0x73a7, 0x34d8, 0x2120, 0x0, 0x1);
        gbc.writeMem(0x92be, { 0x3e, 0xd6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe545, gbc.sp());
        EXPECT(0x92c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x92be));
        EXPECT(0xd6, gbc.readMem(0x92bf));
        // 3E 02AB
        gbc.setState(0x6674, 0x517e, 0x3350, 0x1461, 0x81c6, 0xf5de, 0x0, 0x0);
        gbc.writeMem(0x6674, { 0x3e, 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x517e, gbc.sp());
        EXPECT(0x6676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02AC
        gbc.setState(0xc382, 0xf8b0, 0xa660, 0x6926, 0xdfaf, 0xc930, 0x0, 0x1);
        gbc.writeMem(0xc382, { 0x3e, 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf8b0, gbc.sp());
        EXPECT(0xc384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc382));
        EXPECT(0x4, gbc.readMem(0xc383));
        // 3E 02AE
        gbc.setState(0x1cb5, 0x31ad, 0xd760, 0x9bfc, 0x8748, 0x1518, 0x0, 0x1);
        gbc.writeMem(0x1cb5, { 0x3e, 0xa5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x31ad, gbc.sp());
        EXPECT(0x1cb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02AF
        gbc.setState(0x2106, 0x9b39, 0x59c0, 0x7b6e, 0x65ba, 0x364, 0x0, 0x0);
        gbc.writeMem(0x2106, { 0x3e, 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9b39, gbc.sp());
        EXPECT(0x2108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02B0
        gbc.setState(0x48bd, 0xcc54, 0x9630, 0x8d44, 0x3650, 0x5034, 0x1, 0x1);
        gbc.writeMem(0x48bd, { 0x3e, 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xcc54, gbc.sp());
        EXPECT(0x48bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02B1
        gbc.setState(0x243e, 0x8493, 0x7ae0, 0x14fc, 0xffbb, 0x286e, 0x1, 0x1);
        gbc.writeMem(0x243e, { 0x3e, 0xa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8493, gbc.sp());
        EXPECT(0x2440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02B3
        gbc.setState(0x831e, 0x5fa8, 0xcc20, 0x2a6f, 0x14fe, 0x13c2, 0x0, 0x0);
        gbc.writeMem(0x831e, { 0x3e, 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5fa8, gbc.sp());
        EXPECT(0x8320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x831e));
        EXPECT(0xf2, gbc.readMem(0x831f));
        // 3E 02B4
        gbc.setState(0x200f, 0x29aa, 0x24d0, 0x23ca, 0xc368, 0x3c75, 0x1, 0x0);
        gbc.writeMem(0x200f, { 0x3e, 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x29aa, gbc.sp());
        EXPECT(0x2011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02B5
        gbc.setState(0xead9, 0x6492, 0x6b20, 0x7d3f, 0x29be, 0xeffa, 0x1, 0x0);
        gbc.writeMem(0xead9, { 0x3e, 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6492, gbc.sp());
        EXPECT(0xeadb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xead9));
        EXPECT(0xd, gbc.readMem(0xeada));
        // 3E 02B6
        gbc.setState(0x9da5, 0xa924, 0x6f80, 0x4169, 0x49be, 0x3fc4, 0x1, 0x1);
        gbc.writeMem(0x9da5, { 0x3e, 0x3a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa924, gbc.sp());
        EXPECT(0x9da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9da5));
        EXPECT(0x3a, gbc.readMem(0x9da6));
        // 3E 02B7
        gbc.setState(0xbf6, 0x107b, 0x6080, 0xe83b, 0x9e53, 0x4f71, 0x0, 0x1);
        gbc.writeMem(0xbf6, { 0x3e, 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x107b, gbc.sp());
        EXPECT(0xbf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02B8
        gbc.setState(0xb6c9, 0x156b, 0xeb50, 0x92f5, 0xadb8, 0x7ab4, 0x1, 0x0);
        gbc.writeMem(0xb6c9, { 0x3e, 0x1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x156b, gbc.sp());
        EXPECT(0xb6cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb6c9));
        EXPECT(0x1, gbc.readMem(0xb6ca));
        // 3E 02B9
        gbc.setState(0xace4, 0x8bcf, 0xa40, 0x5e47, 0xcb9c, 0xc7f9, 0x0, 0x0);
        gbc.writeMem(0xace4, { 0x3e, 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8bcf, gbc.sp());
        EXPECT(0xace6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xace4));
        EXPECT(0x50, gbc.readMem(0xace5));
        // 3E 02BA
        gbc.setState(0xb480, 0x1419, 0x31e0, 0xebae, 0x7b23, 0x8960, 0x1, 0x1);
        gbc.writeMem(0xb480, { 0x3e, 0x3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1419, gbc.sp());
        EXPECT(0xb482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb480));
        EXPECT(0x3, gbc.readMem(0xb481));
        // 3E 02BB
        gbc.setState(0xe797, 0xc5c2, 0x5300, 0x7bdb, 0xc632, 0xb4ea, 0x1, 0x1);
        gbc.writeMem(0xe797, { 0x3e, 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc5c2, gbc.sp());
        EXPECT(0xe799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe797));
        EXPECT(0x23, gbc.readMem(0xe798));
        // 3E 02BC
        gbc.setState(0x3d43, 0xf929, 0x580, 0x1dfa, 0x7ef, 0x17ad, 0x0, 0x0);
        gbc.writeMem(0x3d43, { 0x3e, 0x6d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf929, gbc.sp());
        EXPECT(0x3d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02BD
        gbc.setState(0xe65, 0x6fa2, 0xa00, 0x3cf5, 0x432b, 0xbca, 0x1, 0x1);
        gbc.writeMem(0xe65, { 0x3e, 0xce });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6fa2, gbc.sp());
        EXPECT(0xe67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02BE
        gbc.setState(0xc912, 0x8374, 0x4e90, 0xf1fb, 0xa27a, 0xbcef, 0x0, 0x0);
        gbc.writeMem(0xc912, { 0x3e, 0xc8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8374, gbc.sp());
        EXPECT(0xc914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc912));
        EXPECT(0xc8, gbc.readMem(0xc913));
        // 3E 02BF
        gbc.setState(0x5036, 0x108, 0xd210, 0x395b, 0xf0ad, 0x3e81, 0x0, 0x1);
        gbc.writeMem(0x5036, { 0x3e, 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x108, gbc.sp());
        EXPECT(0x5038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02C0
        gbc.setState(0x110a, 0x7345, 0xc4b0, 0x37a4, 0xb677, 0x1b9d, 0x0, 0x1);
        gbc.writeMem(0x110a, { 0x3e, 0x1b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7345, gbc.sp());
        EXPECT(0x110c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02C1
        gbc.setState(0x76b1, 0x9c24, 0x4940, 0xf938, 0x9963, 0xfd7b, 0x1, 0x0);
        gbc.writeMem(0x76b1, { 0x3e, 0xe6 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9c24, gbc.sp());
        EXPECT(0x76b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02C2
        gbc.setState(0x82b7, 0x232e, 0x98d0, 0xadbb, 0x1495, 0xc763, 0x1, 0x1);
        gbc.writeMem(0x82b7, { 0x3e, 0x29 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x232e, gbc.sp());
        EXPECT(0x82b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x82b7));
        EXPECT(0x29, gbc.readMem(0x82b8));
        // 3E 02C3
        gbc.setState(0x6ccd, 0x99a6, 0x8580, 0x56a6, 0x9fb8, 0x4c5d, 0x1, 0x0);
        gbc.writeMem(0x6ccd, { 0x3e, 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x99a6, gbc.sp());
        EXPECT(0x6ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02C4
        gbc.setState(0x1b6f, 0x439a, 0xe380, 0xab37, 0x3f02, 0x10d5, 0x1, 0x1);
        gbc.writeMem(0x1b6f, { 0x3e, 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x439a, gbc.sp());
        EXPECT(0x1b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02C5
        gbc.setState(0x3bf, 0x30bb, 0x3300, 0x1b24, 0x40d6, 0x5d9c, 0x0, 0x0);
        gbc.writeMem(0x3bf, { 0x3e, 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x30bb, gbc.sp());
        EXPECT(0x3c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02C6
        gbc.setState(0xaf68, 0xb772, 0xd570, 0x6487, 0x2d28, 0x61a5, 0x0, 0x1);
        gbc.writeMem(0xaf68, { 0x3e, 0x4c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb772, gbc.sp());
        EXPECT(0xaf6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xaf68));
        EXPECT(0x4c, gbc.readMem(0xaf69));
        // 3E 02C7
        gbc.setState(0x59a9, 0x1b06, 0xf520, 0x720f, 0xef80, 0xdc67, 0x0, 0x0);
        gbc.writeMem(0x59a9, { 0x3e, 0x45 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1b06, gbc.sp());
        EXPECT(0x59ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02C8
        gbc.setState(0xd614, 0x12c4, 0x6030, 0x940b, 0x5f12, 0xfb49, 0x1, 0x0);
        gbc.writeMem(0xd614, { 0x3e, 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x12c4, gbc.sp());
        EXPECT(0xd616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd614));
        EXPECT(0x6c, gbc.readMem(0xd615));
        // 3E 02C9
        gbc.setState(0x392e, 0x45b0, 0xd0d0, 0xda81, 0xe7c5, 0xf72b, 0x1, 0x1);
        gbc.writeMem(0x392e, { 0x3e, 0x71 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x45b0, gbc.sp());
        EXPECT(0x3930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02CB
        gbc.setState(0xc4f9, 0xf9c5, 0xeda0, 0xa1ca, 0xeda6, 0x89b4, 0x1, 0x1);
        gbc.writeMem(0xc4f9, { 0x3e, 0xf6 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf9c5, gbc.sp());
        EXPECT(0xc4fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc4f9));
        EXPECT(0xf6, gbc.readMem(0xc4fa));
        // 3E 02CC
        gbc.setState(0xe8ff, 0x87bf, 0xc410, 0xab1d, 0xad1f, 0x4a7a, 0x1, 0x1);
        gbc.writeMem(0xe8ff, { 0x3e, 0x29 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x87bf, gbc.sp());
        EXPECT(0xe901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe8ff));
        EXPECT(0x29, gbc.readMem(0xe900));
        // 3E 02CD
        gbc.setState(0x3af7, 0x5531, 0xde0, 0x77ee, 0x5cd4, 0xc294, 0x0, 0x1);
        gbc.writeMem(0x3af7, { 0x3e, 0x3a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5531, gbc.sp());
        EXPECT(0x3af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02CE
        gbc.setState(0x5c4f, 0x3a49, 0xe380, 0xe027, 0xeef1, 0x6589, 0x0, 0x1);
        gbc.writeMem(0x5c4f, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3a49, gbc.sp());
        EXPECT(0x5c51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02CF
        gbc.setState(0x421d, 0x35d5, 0x5d10, 0x9d29, 0xbf69, 0x5581, 0x0, 0x0);
        gbc.writeMem(0x421d, { 0x3e, 0xae });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x35d5, gbc.sp());
        EXPECT(0x421f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02D0
        gbc.setState(0x4bf1, 0xd49c, 0x9590, 0x8447, 0x454b, 0xdf04, 0x1, 0x0);
        gbc.writeMem(0x4bf1, { 0x3e, 0xe6 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd49c, gbc.sp());
        EXPECT(0x4bf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02D1
        gbc.setState(0x25e5, 0x8f90, 0xc7a0, 0x1c8d, 0x7012, 0xdbec, 0x1, 0x1);
        gbc.writeMem(0x25e5, { 0x3e, 0x14 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8f90, gbc.sp());
        EXPECT(0x25e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02D2
        gbc.setState(0x4f41, 0x646, 0xd4d0, 0x87fa, 0xc5e1, 0x59b6, 0x0, 0x0);
        gbc.writeMem(0x4f41, { 0x3e, 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x646, gbc.sp());
        EXPECT(0x4f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02D3
        gbc.setState(0x85ec, 0x36d7, 0x2dc0, 0xb1b6, 0x40f8, 0x6057, 0x1, 0x0);
        gbc.writeMem(0x85ec, { 0x3e, 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x36d7, gbc.sp());
        EXPECT(0x85ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x85ec));
        EXPECT(0x4d, gbc.readMem(0x85ed));
        // 3E 02D4
        gbc.setState(0x4374, 0x419b, 0x6300, 0x57a4, 0xa0f4, 0x1ec6, 0x1, 0x1);
        gbc.writeMem(0x4374, { 0x3e, 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x419b, gbc.sp());
        EXPECT(0x4376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02D5
        gbc.setState(0xc8f3, 0x21ab, 0xd340, 0xc545, 0x7abf, 0x7856, 0x0, 0x0);
        gbc.writeMem(0xc8f3, { 0x3e, 0xeb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x21ab, gbc.sp());
        EXPECT(0xc8f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc8f3));
        EXPECT(0xeb, gbc.readMem(0xc8f4));
        // 3E 02D6
        gbc.setState(0xcd20, 0x699d, 0xffc0, 0x1590, 0x5650, 0x30b, 0x0, 0x1);
        gbc.writeMem(0xcd20, { 0x3e, 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x699d, gbc.sp());
        EXPECT(0xcd22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcd20));
        EXPECT(0xb6, gbc.readMem(0xcd21));
        // 3E 02D7
        gbc.setState(0x3066, 0xa2d6, 0x9470, 0x8fd4, 0xecd3, 0xe00d, 0x0, 0x1);
        gbc.writeMem(0x3066, { 0x3e, 0x93 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa2d6, gbc.sp());
        EXPECT(0x3068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02D8
        gbc.setState(0x80d0, 0x1d89, 0x8c30, 0xc752, 0x6b6f, 0x1c11, 0x0, 0x1);
        gbc.writeMem(0x80d0, { 0x3e, 0xe2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1d89, gbc.sp());
        EXPECT(0x80d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x80d0));
        EXPECT(0xe2, gbc.readMem(0x80d1));
        // 3E 02D9
        gbc.setState(0xd13f, 0xcc07, 0x1440, 0x2f8c, 0x757d, 0xbcfc, 0x1, 0x0);
        gbc.writeMem(0xd13f, { 0x3e, 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xcc07, gbc.sp());
        EXPECT(0xd141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd13f));
        EXPECT(0xb1, gbc.readMem(0xd140));
        // 3E 02DA
        gbc.setState(0x4e4d, 0xc6e8, 0xc320, 0x9164, 0xf4bf, 0x556a, 0x0, 0x1);
        gbc.writeMem(0x4e4d, { 0x3e, 0xaa });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc6e8, gbc.sp());
        EXPECT(0x4e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02DB
        gbc.setState(0xb346, 0xeab1, 0x56c0, 0xddec, 0x3024, 0xe364, 0x1, 0x1);
        gbc.writeMem(0xb346, { 0x3e, 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xeab1, gbc.sp());
        EXPECT(0xb348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb346));
        EXPECT(0x2f, gbc.readMem(0xb347));
        // 3E 02DC
        gbc.setState(0xc1cb, 0x564f, 0xa640, 0x2ba1, 0xe775, 0x5635, 0x0, 0x0);
        gbc.writeMem(0xc1cb, { 0x3e, 0xa8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x564f, gbc.sp());
        EXPECT(0xc1cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc1cb));
        EXPECT(0xa8, gbc.readMem(0xc1cc));
        // 3E 02DD
        gbc.setState(0x1f52, 0xb8a0, 0xfb0, 0x5ee1, 0xb237, 0xfb8a, 0x1, 0x0);
        gbc.writeMem(0x1f52, { 0x3e, 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb8a0, gbc.sp());
        EXPECT(0x1f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02DE
        gbc.setState(0xc56b, 0xfd45, 0xf3f0, 0x3144, 0xa246, 0x436e, 0x1, 0x0);
        gbc.writeMem(0xc56b, { 0x3e, 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfd45, gbc.sp());
        EXPECT(0xc56d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc56b));
        EXPECT(0x33, gbc.readMem(0xc56c));
        // 3E 02DF
        gbc.setState(0x640c, 0xeb42, 0x110, 0x1fe2, 0x10a9, 0x3532, 0x0, 0x1);
        gbc.writeMem(0x640c, { 0x3e, 0x5b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xeb42, gbc.sp());
        EXPECT(0x640e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02E0
        gbc.setState(0x31e4, 0x1c43, 0x8670, 0x81cb, 0xf286, 0x56e7, 0x0, 0x0);
        gbc.writeMem(0x31e4, { 0x3e, 0xce });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1c43, gbc.sp());
        EXPECT(0x31e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02E1
        gbc.setState(0x28a7, 0x9525, 0xd870, 0xa7, 0xfb75, 0xb984, 0x0, 0x0);
        gbc.writeMem(0x28a7, { 0x3e, 0xd6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9525, gbc.sp());
        EXPECT(0x28a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02E2
        gbc.setState(0x93b4, 0x4cc3, 0x9e10, 0xee01, 0x743f, 0xb348, 0x0, 0x1);
        gbc.writeMem(0x93b4, { 0x3e, 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4cc3, gbc.sp());
        EXPECT(0x93b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x93b4));
        EXPECT(0x2f, gbc.readMem(0x93b5));
        // 3E 02E3
        gbc.setState(0x35be, 0x5464, 0xf400, 0xbaa2, 0x854, 0x61aa, 0x1, 0x1);
        gbc.writeMem(0x35be, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5464, gbc.sp());
        EXPECT(0x35c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02E4
        gbc.setState(0xe4cf, 0x8485, 0x8680, 0xd00, 0x26b1, 0xd706, 0x1, 0x0);
        gbc.writeMem(0xe4cf, { 0x3e, 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8485, gbc.sp());
        EXPECT(0xe4d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe4cf));
        EXPECT(0xb6, gbc.readMem(0xe4d0));
        // 3E 02E5
        gbc.setState(0xbf1, 0x78d8, 0xbfc0, 0x67b7, 0x94b8, 0x795d, 0x1, 0x1);
        gbc.writeMem(0xbf1, { 0x3e, 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x78d8, gbc.sp());
        EXPECT(0xbf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02E6
        gbc.setState(0x48f7, 0x5966, 0x1650, 0xbe3, 0x1da, 0x2914, 0x0, 0x0);
        gbc.writeMem(0x48f7, { 0x3e, 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5966, gbc.sp());
        EXPECT(0x48f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02E8
        gbc.setState(0xed91, 0xa451, 0x450, 0xb4e6, 0x7223, 0x7be8, 0x0, 0x1);
        gbc.writeMem(0xed91, { 0x3e, 0xbe });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa451, gbc.sp());
        EXPECT(0xed93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xed91));
        EXPECT(0xbe, gbc.readMem(0xed92));
        // 3E 02EA
        gbc.setState(0x6e71, 0x1c45, 0x38f0, 0xd750, 0xd729, 0xb19e, 0x0, 0x0);
        gbc.writeMem(0x6e71, { 0x3e, 0xab });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1c45, gbc.sp());
        EXPECT(0x6e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02EB
        gbc.setState(0xd7f5, 0x479, 0xe120, 0x8ee5, 0x3dfc, 0xcc1b, 0x0, 0x0);
        gbc.writeMem(0xd7f5, { 0x3e, 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x479, gbc.sp());
        EXPECT(0xd7f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd7f5));
        EXPECT(0x4, gbc.readMem(0xd7f6));
        // 3E 02EC
        gbc.setState(0x736d, 0xfc13, 0x2e60, 0xb766, 0x9442, 0x3528, 0x0, 0x0);
        gbc.writeMem(0x736d, { 0x3e, 0x5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xfc13, gbc.sp());
        EXPECT(0x736f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02ED
        gbc.setState(0x9e40, 0x945f, 0xfa20, 0x1f8d, 0x6f66, 0x570c, 0x0, 0x0);
        gbc.writeMem(0x9e40, { 0x3e, 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x945f, gbc.sp());
        EXPECT(0x9e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9e40));
        EXPECT(0xc9, gbc.readMem(0x9e41));
        // 3E 02EE
        gbc.setState(0xbb8b, 0x65e7, 0x380, 0xe64b, 0x1093, 0xa32e, 0x1, 0x1);
        gbc.writeMem(0xbb8b, { 0x3e, 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x65e7, gbc.sp());
        EXPECT(0xbb8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbb8b));
        EXPECT(0x38, gbc.readMem(0xbb8c));
        // 3E 02EF
        gbc.setState(0x6ec4, 0x7ad4, 0xfa0, 0x97fa, 0xabf6, 0xab8b, 0x1, 0x1);
        gbc.writeMem(0x6ec4, { 0x3e, 0x6f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7ad4, gbc.sp());
        EXPECT(0x6ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02F0
        gbc.setState(0x3d12, 0xaffc, 0x8160, 0x7c07, 0x7664, 0x6635, 0x1, 0x1);
        gbc.writeMem(0x3d12, { 0x3e, 0x6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xaffc, gbc.sp());
        EXPECT(0x3d14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02F1
        gbc.setState(0xe54f, 0xb446, 0x5280, 0x4ac8, 0xdde4, 0x934d, 0x1, 0x0);
        gbc.writeMem(0xe54f, { 0x3e, 0x79 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb446, gbc.sp());
        EXPECT(0xe551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe54f));
        EXPECT(0x79, gbc.readMem(0xe550));
        // 3E 02F2
        gbc.setState(0xad85, 0xb377, 0x32c0, 0x942, 0x4350, 0x406a, 0x1, 0x1);
        gbc.writeMem(0xad85, { 0x3e, 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb377, gbc.sp());
        EXPECT(0xad87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xad85));
        EXPECT(0xb7, gbc.readMem(0xad86));
        // 3E 02F3
        gbc.setState(0xe0bf, 0xd56a, 0x61d0, 0x7b16, 0xb6c8, 0xa7a6, 0x0, 0x0);
        gbc.writeMem(0xe0bf, { 0x3e, 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd56a, gbc.sp());
        EXPECT(0xe0c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe0bf));
        EXPECT(0x44, gbc.readMem(0xe0c0));
        // 3E 02F5
        gbc.setState(0xcf6a, 0xd048, 0x2fa0, 0x8f20, 0x4ada, 0x8e57, 0x1, 0x0);
        gbc.writeMem(0xcf6a, { 0x3e, 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd048, gbc.sp());
        EXPECT(0xcf6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcf6a));
        EXPECT(0xfa, gbc.readMem(0xcf6b));
        // 3E 02F8
        gbc.setState(0xe3c4, 0x761c, 0x68a0, 0x6a5b, 0x1143, 0xb343, 0x0, 0x0);
        gbc.writeMem(0xe3c4, { 0x3e, 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x761c, gbc.sp());
        EXPECT(0xe3c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe3c4));
        EXPECT(0xc9, gbc.readMem(0xe3c5));
        // 3E 02F9
        gbc.setState(0x43a0, 0x1c32, 0x5bb0, 0x8156, 0xfb25, 0x7190, 0x0, 0x0);
        gbc.writeMem(0x43a0, { 0x3e, 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1c32, gbc.sp());
        EXPECT(0x43a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02FA
        gbc.setState(0x81df, 0x8bbf, 0x8780, 0x6edd, 0x1d91, 0x34d6, 0x1, 0x1);
        gbc.writeMem(0x81df, { 0x3e, 0xe3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8bbf, gbc.sp());
        EXPECT(0x81e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x81df));
        EXPECT(0xe3, gbc.readMem(0x81e0));
        // 3E 02FB
        gbc.setState(0x49a2, 0x4259, 0xb7d0, 0x2012, 0x58d1, 0xe7d6, 0x1, 0x1);
        gbc.writeMem(0x49a2, { 0x3e, 0x1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4259, gbc.sp());
        EXPECT(0x49a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02FC
        gbc.setState(0x1473, 0xa0ff, 0xefc0, 0x1ecc, 0x65f2, 0x1141, 0x0, 0x0);
        gbc.writeMem(0x1473, { 0x3e, 0xe3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa0ff, gbc.sp());
        EXPECT(0x1475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 02FD
        gbc.setState(0x4f6, 0x584d, 0xe410, 0x44ae, 0x5121, 0x3564, 0x1, 0x0);
        gbc.writeMem(0x4f6, { 0x3e, 0x56 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x584d, gbc.sp());
        EXPECT(0x4f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02FE
        gbc.setState(0x1fb6, 0x8977, 0x6e10, 0x33b, 0x3ba2, 0xff10, 0x1, 0x1);
        gbc.writeMem(0x1fb6, { 0x3e, 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8977, gbc.sp());
        EXPECT(0x1fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 02FF
        gbc.setState(0xaf30, 0x89dd, 0x71a0, 0x9d68, 0xd13c, 0x7059, 0x0, 0x0);
        gbc.writeMem(0xaf30, { 0x3e, 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x89dd, gbc.sp());
        EXPECT(0xaf32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xaf30));
        EXPECT(0x7a, gbc.readMem(0xaf31));
        // 3E 0300
        gbc.setState(0x592c, 0x764a, 0x4810, 0xecfa, 0xafa7, 0x81fb, 0x1, 0x1);
        gbc.writeMem(0x592c, { 0x3e, 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x764a, gbc.sp());
        EXPECT(0x592e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0301
        gbc.setState(0x4067, 0x2c11, 0x1e40, 0x557e, 0x1bd0, 0xffcc, 0x0, 0x0);
        gbc.writeMem(0x4067, { 0x3e, 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2c11, gbc.sp());
        EXPECT(0x4069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0302
        gbc.setState(0xe6c8, 0x823c, 0x46a0, 0x9cc0, 0x8698, 0x433f, 0x0, 0x0);
        gbc.writeMem(0xe6c8, { 0x3e, 0x5b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x823c, gbc.sp());
        EXPECT(0xe6ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe6c8));
        EXPECT(0x5b, gbc.readMem(0xe6c9));
        // 3E 0303
        gbc.setState(0x7687, 0x61ed, 0xf230, 0xf1ea, 0xbcc3, 0x8e27, 0x0, 0x1);
        gbc.writeMem(0x7687, { 0x3e, 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x61ed, gbc.sp());
        EXPECT(0x7689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0304
        gbc.setState(0x9946, 0xc678, 0x49e0, 0xfb7, 0x20b9, 0x2358, 0x0, 0x0);
        gbc.writeMem(0x9946, { 0x3e, 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc678, gbc.sp());
        EXPECT(0x9948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9946));
        EXPECT(0xb8, gbc.readMem(0x9947));
        // 3E 0305
        gbc.setState(0x749d, 0xe14b, 0x4ee0, 0xf328, 0x7836, 0x6e5a, 0x1, 0x1);
        gbc.writeMem(0x749d, { 0x3e, 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe14b, gbc.sp());
        EXPECT(0x749f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0306
        gbc.setState(0x291e, 0xd647, 0xccf0, 0x91ce, 0x494e, 0x6bd1, 0x1, 0x1);
        gbc.writeMem(0x291e, { 0x3e, 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd647, gbc.sp());
        EXPECT(0x2920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0307
        gbc.setState(0x120f, 0x1237, 0xb040, 0x124, 0xe557, 0x8b8e, 0x0, 0x0);
        gbc.writeMem(0x120f, { 0x3e, 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1237, gbc.sp());
        EXPECT(0x1211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0308
        gbc.setState(0xd23c, 0x7eff, 0xed20, 0x1300, 0x162c, 0xc03f, 0x0, 0x1);
        gbc.writeMem(0xd23c, { 0x3e, 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7eff, gbc.sp());
        EXPECT(0xd23e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd23c));
        EXPECT(0x4, gbc.readMem(0xd23d));
        // 3E 0309
        gbc.setState(0xcae1, 0x2469, 0xe8a0, 0xd0d4, 0x5f49, 0x731f, 0x0, 0x0);
        gbc.writeMem(0xcae1, { 0x3e, 0xcf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2469, gbc.sp());
        EXPECT(0xcae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcae1));
        EXPECT(0xcf, gbc.readMem(0xcae2));
        // 3E 030A
        gbc.setState(0x8fdf, 0x4fa9, 0x1d30, 0x6169, 0x6290, 0x2e63, 0x1, 0x0);
        gbc.writeMem(0x8fdf, { 0x3e, 0x6f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4fa9, gbc.sp());
        EXPECT(0x8fe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8fdf));
        EXPECT(0x6f, gbc.readMem(0x8fe0));
        // 3E 030B
        gbc.setState(0xb69, 0x5e38, 0xfd40, 0xb091, 0xbe2a, 0xf898, 0x0, 0x0);
        gbc.writeMem(0xb69, { 0x3e, 0xeb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5e38, gbc.sp());
        EXPECT(0xb6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 030C
        gbc.setState(0x7588, 0x174d, 0x4830, 0xe663, 0x2d7, 0xf2b6, 0x0, 0x1);
        gbc.writeMem(0x7588, { 0x3e, 0x68 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x174d, gbc.sp());
        EXPECT(0x758a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 030D
        gbc.setState(0xd295, 0x8ca5, 0x51a0, 0xad73, 0x46cb, 0xad60, 0x0, 0x0);
        gbc.writeMem(0xd295, { 0x3e, 0x31 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8ca5, gbc.sp());
        EXPECT(0xd297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd295));
        EXPECT(0x31, gbc.readMem(0xd296));
        // 3E 030E
        gbc.setState(0x5fd1, 0x83b, 0xa550, 0x24bb, 0x3566, 0xee85, 0x0, 0x0);
        gbc.writeMem(0x5fd1, { 0x3e, 0x45 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x83b, gbc.sp());
        EXPECT(0x5fd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 030F
        gbc.setState(0x53e2, 0xe04a, 0xc700, 0xd633, 0x451d, 0x7c1e, 0x1, 0x0);
        gbc.writeMem(0x53e2, { 0x3e, 0xa8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe04a, gbc.sp());
        EXPECT(0x53e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0310
        gbc.setState(0x144a, 0x7b5b, 0x3dd0, 0xf747, 0x1199, 0xc876, 0x0, 0x1);
        gbc.writeMem(0x144a, { 0x3e, 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7b5b, gbc.sp());
        EXPECT(0x144c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0311
        gbc.setState(0xccd8, 0x3fcd, 0x5500, 0x5ff6, 0x138f, 0xfb14, 0x0, 0x0);
        gbc.writeMem(0xccd8, { 0x3e, 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3fcd, gbc.sp());
        EXPECT(0xccda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xccd8));
        EXPECT(0x4e, gbc.readMem(0xccd9));
        // 3E 0312
        gbc.setState(0xa198, 0xade6, 0xd260, 0x106c, 0xf133, 0x332b, 0x1, 0x0);
        gbc.writeMem(0xa198, { 0x3e, 0x7f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xade6, gbc.sp());
        EXPECT(0xa19a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa198));
        EXPECT(0x7f, gbc.readMem(0xa199));
        // 3E 0314
        gbc.setState(0x77ee, 0xc0b2, 0x8ba0, 0x13e8, 0x93c7, 0x9f88, 0x0, 0x1);
        gbc.writeMem(0x77ee, { 0x3e, 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc0b2, gbc.sp());
        EXPECT(0x77f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0315
        gbc.setState(0x97f1, 0xdd1b, 0x6ee0, 0x1fa1, 0x5561, 0xde88, 0x0, 0x0);
        gbc.writeMem(0x97f1, { 0x3e, 0xc6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdd1b, gbc.sp());
        EXPECT(0x97f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x97f1));
        EXPECT(0xc6, gbc.readMem(0x97f2));
        // 3E 0316
        gbc.setState(0x60bb, 0x646f, 0xd610, 0x117b, 0x19f5, 0xeb07, 0x0, 0x1);
        gbc.writeMem(0x60bb, { 0x3e, 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x646f, gbc.sp());
        EXPECT(0x60bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0317
        gbc.setState(0x5628, 0x34c0, 0x52f0, 0x5c6d, 0x9d4c, 0x40af, 0x1, 0x1);
        gbc.writeMem(0x5628, { 0x3e, 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x34c0, gbc.sp());
        EXPECT(0x562a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0318
        gbc.setState(0x83d0, 0xb5a8, 0x7c10, 0x4209, 0x6d9, 0x4c95, 0x0, 0x0);
        gbc.writeMem(0x83d0, { 0x3e, 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb5a8, gbc.sp());
        EXPECT(0x83d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x83d0));
        EXPECT(0x13, gbc.readMem(0x83d1));
        // 3E 0319
        gbc.setState(0x4717, 0xa6ec, 0x4a10, 0x15f6, 0x9b3e, 0xeaae, 0x0, 0x1);
        gbc.writeMem(0x4717, { 0x3e, 0x32 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa6ec, gbc.sp());
        EXPECT(0x4719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 031B
        gbc.setState(0x7177, 0x3cb, 0xd320, 0x400, 0x68e5, 0x3bd5, 0x1, 0x1);
        gbc.writeMem(0x7177, { 0x3e, 0x7b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3cb, gbc.sp());
        EXPECT(0x7179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 031C
        gbc.setState(0x9a62, 0x5424, 0x4d20, 0xe6ed, 0xaf93, 0xaaee, 0x1, 0x0);
        gbc.writeMem(0x9a62, { 0x3e, 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5424, gbc.sp());
        EXPECT(0x9a64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9a62));
        EXPECT(0x8f, gbc.readMem(0x9a63));
        // 3E 031D
        gbc.setState(0x358b, 0xa163, 0x2190, 0x886d, 0x5a90, 0x1288, 0x1, 0x0);
        gbc.writeMem(0x358b, { 0x3e, 0xf7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa163, gbc.sp());
        EXPECT(0x358d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 031E
        gbc.setState(0xd741, 0xe56, 0xeb0, 0x43cb, 0x619a, 0x5f6d, 0x0, 0x0);
        gbc.writeMem(0xd741, { 0x3e, 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe56, gbc.sp());
        EXPECT(0xd743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd741));
        EXPECT(0x9d, gbc.readMem(0xd742));
        // 3E 031F
        gbc.setState(0x5e24, 0x54cd, 0x46d0, 0xbeda, 0xdfea, 0xb513, 0x1, 0x1);
        gbc.writeMem(0x5e24, { 0x3e, 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x54cd, gbc.sp());
        EXPECT(0x5e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0320
        gbc.setState(0x945c, 0xd386, 0x39d0, 0x746, 0x3789, 0x8abf, 0x0, 0x0);
        gbc.writeMem(0x945c, { 0x3e, 0xe2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd386, gbc.sp());
        EXPECT(0x945e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x945c));
        EXPECT(0xe2, gbc.readMem(0x945d));
        // 3E 0321
        gbc.setState(0xed2a, 0x761, 0xa000, 0x562e, 0x4516, 0xc22e, 0x1, 0x1);
        gbc.writeMem(0xed2a, { 0x3e, 0x3a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x761, gbc.sp());
        EXPECT(0xed2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xed2a));
        EXPECT(0x3a, gbc.readMem(0xed2b));
        // 3E 0322
        gbc.setState(0xe3a9, 0x850d, 0x2ce0, 0x992f, 0xd8a4, 0x7f86, 0x0, 0x0);
        gbc.writeMem(0xe3a9, { 0x3e, 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x850d, gbc.sp());
        EXPECT(0xe3ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe3a9));
        EXPECT(0x38, gbc.readMem(0xe3aa));
        // 3E 0323
        gbc.setState(0x52cf, 0xeec3, 0xc3a0, 0xf0bc, 0x548b, 0x9677, 0x0, 0x1);
        gbc.writeMem(0x52cf, { 0x3e, 0x81 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xeec3, gbc.sp());
        EXPECT(0x52d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0324
        gbc.setState(0x2b30, 0x4e57, 0xddd0, 0xd706, 0xe16b, 0xb32f, 0x0, 0x0);
        gbc.writeMem(0x2b30, { 0x3e, 0x81 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4e57, gbc.sp());
        EXPECT(0x2b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0325
        gbc.setState(0x6066, 0xfacd, 0xb630, 0x7a70, 0x89a6, 0x5512, 0x1, 0x1);
        gbc.writeMem(0x6066, { 0x3e, 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xfacd, gbc.sp());
        EXPECT(0x6068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0326
        gbc.setState(0x9a1a, 0xa818, 0xbe70, 0x39ac, 0x5a7b, 0x2b16, 0x1, 0x0);
        gbc.writeMem(0x9a1a, { 0x3e, 0xfd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa818, gbc.sp());
        EXPECT(0x9a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9a1a));
        EXPECT(0xfd, gbc.readMem(0x9a1b));
        // 3E 0328
        gbc.setState(0x9510, 0x7388, 0xa790, 0xc8cf, 0x5588, 0x5c17, 0x1, 0x1);
        gbc.writeMem(0x9510, { 0x3e, 0x14 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7388, gbc.sp());
        EXPECT(0x9512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9510));
        EXPECT(0x14, gbc.readMem(0x9511));
        // 3E 0329
        gbc.setState(0x8c83, 0xc7b5, 0xff20, 0x3fa0, 0xbaeb, 0x3a0e, 0x1, 0x0);
        gbc.writeMem(0x8c83, { 0x3e, 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc7b5, gbc.sp());
        EXPECT(0x8c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8c83));
        EXPECT(0xc3, gbc.readMem(0x8c84));
        // 3E 032A
        gbc.setState(0x4580, 0xb7b6, 0x5b00, 0x67d3, 0x9c40, 0xda77, 0x1, 0x1);
        gbc.writeMem(0x4580, { 0x3e, 0x5b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb7b6, gbc.sp());
        EXPECT(0x4582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 032B
        gbc.setState(0x2488, 0x1d32, 0x7e30, 0xba08, 0xb00b, 0x2988, 0x1, 0x1);
        gbc.writeMem(0x2488, { 0x3e, 0xa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1d32, gbc.sp());
        EXPECT(0x248a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 032C
        gbc.setState(0x95af, 0xd8ce, 0x7de0, 0x53e0, 0x8b79, 0xe63a, 0x0, 0x0);
        gbc.writeMem(0x95af, { 0x3e, 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd8ce, gbc.sp());
        EXPECT(0x95b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x95af));
        EXPECT(0x9c, gbc.readMem(0x95b0));
        // 3E 032D
        gbc.setState(0x8f19, 0xf30b, 0xd410, 0xb5d, 0x4cff, 0x2e65, 0x0, 0x1);
        gbc.writeMem(0x8f19, { 0x3e, 0x1b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf30b, gbc.sp());
        EXPECT(0x8f1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8f19));
        EXPECT(0x1b, gbc.readMem(0x8f1a));
        // 3E 032E
        gbc.setState(0x5f82, 0x1cf6, 0x1850, 0xafbc, 0x2fdb, 0x4f80, 0x1, 0x0);
        gbc.writeMem(0x5f82, { 0x3e, 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1cf6, gbc.sp());
        EXPECT(0x5f84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 032F
        gbc.setState(0x6414, 0xf437, 0x6390, 0x2861, 0x5132, 0xc73, 0x0, 0x1);
        gbc.writeMem(0x6414, { 0x3e, 0xcf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf437, gbc.sp());
        EXPECT(0x6416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0330
        gbc.setState(0x4f34, 0x1d8, 0xb3e0, 0xc54e, 0x1b1e, 0xe429, 0x1, 0x0);
        gbc.writeMem(0x4f34, { 0x3e, 0x5c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1d8, gbc.sp());
        EXPECT(0x4f36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0331
        gbc.setState(0x3dd6, 0x4371, 0x10a0, 0xd6e2, 0x2335, 0x5f6b, 0x0, 0x0);
        gbc.writeMem(0x3dd6, { 0x3e, 0xd5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4371, gbc.sp());
        EXPECT(0x3dd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0332
        gbc.setState(0xa48a, 0x5fbe, 0x2b20, 0x27b2, 0xa0af, 0x46dc, 0x0, 0x1);
        gbc.writeMem(0xa48a, { 0x3e, 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5fbe, gbc.sp());
        EXPECT(0xa48c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa48a));
        EXPECT(0xc3, gbc.readMem(0xa48b));
        // 3E 0333
        gbc.setState(0xd1b1, 0xa09a, 0xaba0, 0x2229, 0xcf9f, 0xfd65, 0x1, 0x0);
        gbc.writeMem(0xd1b1, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa09a, gbc.sp());
        EXPECT(0xd1b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd1b1));
        EXPECT(0x3b, gbc.readMem(0xd1b2));
        // 3E 0334
        gbc.setState(0x2527, 0x54c4, 0x62b0, 0xa7f, 0xa500, 0xe829, 0x0, 0x0);
        gbc.writeMem(0x2527, { 0x3e, 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x54c4, gbc.sp());
        EXPECT(0x2529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0335
        gbc.setState(0x92be, 0xbf43, 0xde90, 0xceda, 0x764e, 0xfadb, 0x1, 0x1);
        gbc.writeMem(0x92be, { 0x3e, 0xd6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbf43, gbc.sp());
        EXPECT(0x92c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x92be));
        EXPECT(0xd6, gbc.readMem(0x92bf));
        // 3E 0337
        gbc.setState(0xd94, 0x7251, 0xf610, 0x94e4, 0xefcf, 0x99e7, 0x1, 0x1);
        gbc.writeMem(0xd94, { 0x3e, 0xe3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7251, gbc.sp());
        EXPECT(0xd96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0338
        gbc.setState(0x537, 0xa0e4, 0x840, 0x3d04, 0x7ab7, 0x3a82, 0x0, 0x0);
        gbc.writeMem(0x537, { 0x3e, 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa0e4, gbc.sp());
        EXPECT(0x539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0339
        gbc.setState(0xd096, 0x598c, 0xcd30, 0xfb8, 0xd871, 0x380a, 0x0, 0x0);
        gbc.writeMem(0xd096, { 0x3e, 0xd2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x598c, gbc.sp());
        EXPECT(0xd098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd096));
        EXPECT(0xd2, gbc.readMem(0xd097));
        // 3E 033A
        gbc.setState(0x5f5c, 0x3f47, 0x43e0, 0x5ddd, 0x6a0c, 0xd625, 0x0, 0x0);
        gbc.writeMem(0x5f5c, { 0x3e, 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3f47, gbc.sp());
        EXPECT(0x5f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 033B
        gbc.setState(0x4e6a, 0x7df9, 0x37a0, 0x14b4, 0x6ed6, 0x521e, 0x1, 0x0);
        gbc.writeMem(0x4e6a, { 0x3e, 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7df9, gbc.sp());
        EXPECT(0x4e6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 033C
        gbc.setState(0x5677, 0x832, 0xce30, 0xb9f, 0x526e, 0x508d, 0x0, 0x1);
        gbc.writeMem(0x5677, { 0x3e, 0x78 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x832, gbc.sp());
        EXPECT(0x5679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 033D
        gbc.setState(0x2eec, 0x4f65, 0x2c00, 0xfaae, 0x420e, 0x5ff, 0x0, 0x1);
        gbc.writeMem(0x2eec, { 0x3e, 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4f65, gbc.sp());
        EXPECT(0x2eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 033E
        gbc.setState(0xb83b, 0x709e, 0x6bf0, 0x940e, 0x6730, 0x72e9, 0x0, 0x0);
        gbc.writeMem(0xb83b, { 0x3e, 0xdb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x709e, gbc.sp());
        EXPECT(0xb83d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb83b));
        EXPECT(0xdb, gbc.readMem(0xb83c));
        // 3E 033F
        gbc.setState(0xe7ef, 0xd3a1, 0x3b30, 0x55c5, 0xe781, 0x8d0b, 0x0, 0x1);
        gbc.writeMem(0xe7ef, { 0x3e, 0x12 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd3a1, gbc.sp());
        EXPECT(0xe7f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe7ef));
        EXPECT(0x12, gbc.readMem(0xe7f0));
        // 3E 0340
        gbc.setState(0x2ad5, 0x323, 0xe8f0, 0x615f, 0xbfc, 0xf624, 0x0, 0x1);
        gbc.writeMem(0x2ad5, { 0x3e, 0xbd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x323, gbc.sp());
        EXPECT(0x2ad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0341
        gbc.setState(0xcf4a, 0xce6a, 0x3dc0, 0xc6a1, 0x8c73, 0x9cd3, 0x0, 0x0);
        gbc.writeMem(0xcf4a, { 0x3e, 0xd8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xce6a, gbc.sp());
        EXPECT(0xcf4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcf4a));
        EXPECT(0xd8, gbc.readMem(0xcf4b));
        // 3E 0342
        gbc.setState(0xd3d, 0xfffc, 0x8930, 0xdc70, 0x16bb, 0x3665, 0x1, 0x0);
        gbc.writeMem(0xd3d, { 0x3e, 0x59 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfffc, gbc.sp());
        EXPECT(0xd3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0343
        gbc.setState(0x92f, 0x1d95, 0xdf80, 0xdb40, 0x86c3, 0xa64e, 0x1, 0x1);
        gbc.writeMem(0x92f, { 0x3e, 0x54 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1d95, gbc.sp());
        EXPECT(0x931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0344
        gbc.setState(0x9c11, 0x2efb, 0xc440, 0xc804, 0xe773, 0xb81, 0x0, 0x1);
        gbc.writeMem(0x9c11, { 0x3e, 0x20 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2efb, gbc.sp());
        EXPECT(0x9c13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9c11));
        EXPECT(0x20, gbc.readMem(0x9c12));
        // 3E 0345
        gbc.setState(0x7b6c, 0x7ee2, 0x6dd0, 0xbb1f, 0xa824, 0x2351, 0x0, 0x1);
        gbc.writeMem(0x7b6c, { 0x3e, 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7ee2, gbc.sp());
        EXPECT(0x7b6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0346
        gbc.setState(0x5f48, 0x6dff, 0xfdb0, 0xe9bf, 0x3336, 0x564f, 0x0, 0x0);
        gbc.writeMem(0x5f48, { 0x3e, 0x1e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6dff, gbc.sp());
        EXPECT(0x5f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0347
        gbc.setState(0xeb66, 0x52ba, 0x2580, 0x3464, 0x6779, 0xdd5d, 0x0, 0x1);
        gbc.writeMem(0xeb66, { 0x3e, 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x52ba, gbc.sp());
        EXPECT(0xeb68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xeb66));
        EXPECT(0x96, gbc.readMem(0xeb67));
        // 3E 0348
        gbc.setState(0x96f4, 0xa72a, 0xc7d0, 0x99b1, 0xb6de, 0xb52b, 0x1, 0x1);
        gbc.writeMem(0x96f4, { 0x3e, 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa72a, gbc.sp());
        EXPECT(0x96f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x96f4));
        EXPECT(0xa4, gbc.readMem(0x96f5));
        // 3E 034A
        gbc.setState(0x6b0b, 0x11d4, 0xabf0, 0x6468, 0xecef, 0x3f9c, 0x1, 0x0);
        gbc.writeMem(0x6b0b, { 0x3e, 0xca });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x11d4, gbc.sp());
        EXPECT(0x6b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 034B
        gbc.setState(0xc90b, 0x4a9e, 0x2670, 0xfd3f, 0x68f2, 0xa2f, 0x1, 0x0);
        gbc.writeMem(0xc90b, { 0x3e, 0xef });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4a9e, gbc.sp());
        EXPECT(0xc90d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc90b));
        EXPECT(0xef, gbc.readMem(0xc90c));
        // 3E 034C
        gbc.setState(0x4836, 0xc9dc, 0xffe0, 0x95e, 0x1505, 0x2602, 0x0, 0x0);
        gbc.writeMem(0x4836, { 0x3e, 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc9dc, gbc.sp());
        EXPECT(0x4838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 034D
        gbc.setState(0x4c37, 0xde7d, 0x2820, 0xc541, 0x2b2, 0x4219, 0x0, 0x1);
        gbc.writeMem(0x4c37, { 0x3e, 0x6e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xde7d, gbc.sp());
        EXPECT(0x4c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 034E
        gbc.setState(0x90ff, 0x9b91, 0xc6b0, 0xbfcc, 0xf87f, 0x796, 0x1, 0x0);
        gbc.writeMem(0x90ff, { 0x3e, 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9b91, gbc.sp());
        EXPECT(0x9101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x90ff));
        EXPECT(0x21, gbc.readMem(0x9100));
        // 3E 034F
        gbc.setState(0x3159, 0xfc4d, 0x8220, 0x7de2, 0x52b0, 0xc2c6, 0x0, 0x1);
        gbc.writeMem(0x3159, { 0x3e, 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfc4d, gbc.sp());
        EXPECT(0x315b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0350
        gbc.setState(0x7070, 0x4441, 0x9980, 0x38bf, 0x3cba, 0xb5e5, 0x0, 0x0);
        gbc.writeMem(0x7070, { 0x3e, 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4441, gbc.sp());
        EXPECT(0x7072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0351
        gbc.setState(0x8230, 0xdeda, 0x6af0, 0x3f03, 0xd277, 0xdcf, 0x1, 0x1);
        gbc.writeMem(0x8230, { 0x3e, 0x5a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xdeda, gbc.sp());
        EXPECT(0x8232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8230));
        EXPECT(0x5a, gbc.readMem(0x8231));
        // 3E 0352
        gbc.setState(0x8394, 0x8d79, 0x5d20, 0xb26b, 0x84cc, 0xb5a5, 0x1, 0x0);
        gbc.writeMem(0x8394, { 0x3e, 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8d79, gbc.sp());
        EXPECT(0x8396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8394));
        EXPECT(0x4e, gbc.readMem(0x8395));
        // 3E 0354
        gbc.setState(0xa663, 0xb7b0, 0x6230, 0x29a3, 0xcc15, 0x3c8d, 0x1, 0x1);
        gbc.writeMem(0xa663, { 0x3e, 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb7b0, gbc.sp());
        EXPECT(0xa665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa663));
        EXPECT(0xc3, gbc.readMem(0xa664));
        // 3E 0355
        gbc.setState(0xebe7, 0x8979, 0x1750, 0x54b5, 0xf095, 0x881c, 0x1, 0x1);
        gbc.writeMem(0xebe7, { 0x3e, 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8979, gbc.sp());
        EXPECT(0xebe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xebe7));
        EXPECT(0x49, gbc.readMem(0xebe8));
        // 3E 0358
        gbc.setState(0x79b2, 0x2f00, 0x4ef0, 0x3f69, 0xf369, 0x392d, 0x0, 0x0);
        gbc.writeMem(0x79b2, { 0x3e, 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2f00, gbc.sp());
        EXPECT(0x79b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0359
        gbc.setState(0x14e2, 0xc2bc, 0x5830, 0x1848, 0xbfbd, 0x7b15, 0x1, 0x1);
        gbc.writeMem(0x14e2, { 0x3e, 0xf7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc2bc, gbc.sp());
        EXPECT(0x14e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 035A
        gbc.setState(0x61f8, 0xc623, 0x2fc0, 0x14e7, 0x892c, 0x91b4, 0x0, 0x0);
        gbc.writeMem(0x61f8, { 0x3e, 0x6d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc623, gbc.sp());
        EXPECT(0x61fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 035B
        gbc.setState(0x819a, 0x5051, 0xb2a0, 0xb886, 0xf843, 0xcd1a, 0x0, 0x0);
        gbc.writeMem(0x819a, { 0x3e, 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5051, gbc.sp());
        EXPECT(0x819c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x819a));
        EXPECT(0x2f, gbc.readMem(0x819b));
        // 3E 035D
        gbc.setState(0x8d4d, 0x7c07, 0xa980, 0x6555, 0xda6d, 0x7cb1, 0x1, 0x0);
        gbc.writeMem(0x8d4d, { 0x3e, 0xe4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7c07, gbc.sp());
        EXPECT(0x8d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8d4d));
        EXPECT(0xe4, gbc.readMem(0x8d4e));
        // 3E 035F
        gbc.setState(0x3f33, 0xa01d, 0x12a0, 0xebc, 0x7252, 0xf1c8, 0x0, 0x1);
        gbc.writeMem(0x3f33, { 0x3e, 0x60 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa01d, gbc.sp());
        EXPECT(0x3f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0360
        gbc.setState(0xef59, 0xc446, 0x9530, 0x90e, 0xe916, 0x243a, 0x0, 0x1);
        gbc.writeMem(0xef59, { 0x3e, 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc446, gbc.sp());
        EXPECT(0xef5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xef59));
        EXPECT(0x13, gbc.readMem(0xef5a));
        // 3E 0361
        gbc.setState(0xd991, 0x641a, 0x11a0, 0x2e97, 0x711c, 0x85f0, 0x1, 0x1);
        gbc.writeMem(0xd991, { 0x3e, 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x641a, gbc.sp());
        EXPECT(0xd993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd991));
        EXPECT(0x62, gbc.readMem(0xd992));
        // 3E 0362
        gbc.setState(0x7333, 0xb39e, 0xfa50, 0x3d7a, 0x6b3d, 0xff0d, 0x0, 0x0);
        gbc.writeMem(0x7333, { 0x3e, 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb39e, gbc.sp());
        EXPECT(0x7335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0364
        gbc.setState(0xd511, 0xfd2a, 0x34e0, 0xc4bb, 0xfb82, 0xa7a8, 0x1, 0x0);
        gbc.writeMem(0xd511, { 0x3e, 0x4c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xfd2a, gbc.sp());
        EXPECT(0xd513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd511));
        EXPECT(0x4c, gbc.readMem(0xd512));
        // 3E 0365
        gbc.setState(0x4fa4, 0x7a65, 0x6c40, 0xff42, 0x7491, 0xc793, 0x1, 0x1);
        gbc.writeMem(0x4fa4, { 0x3e, 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7a65, gbc.sp());
        EXPECT(0x4fa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0366
        gbc.setState(0x4969, 0x78af, 0x51f0, 0xa3d4, 0xd7ee, 0x6c0a, 0x1, 0x1);
        gbc.writeMem(0x4969, { 0x3e, 0x5d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x78af, gbc.sp());
        EXPECT(0x496b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0367
        gbc.setState(0x199d, 0x7015, 0xd20, 0x99b5, 0x6e2c, 0xd6b4, 0x0, 0x0);
        gbc.writeMem(0x199d, { 0x3e, 0x60 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7015, gbc.sp());
        EXPECT(0x199f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0368
        gbc.setState(0x8f9a, 0x6072, 0x61d0, 0x50c1, 0xe46f, 0x1534, 0x1, 0x0);
        gbc.writeMem(0x8f9a, { 0x3e, 0x31 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6072, gbc.sp());
        EXPECT(0x8f9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8f9a));
        EXPECT(0x31, gbc.readMem(0x8f9b));
        // 3E 0369
        gbc.setState(0xcf1f, 0x3b00, 0x2120, 0xa042, 0x7af9, 0x1aa6, 0x0, 0x1);
        gbc.writeMem(0xcf1f, { 0x3e, 0xc2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3b00, gbc.sp());
        EXPECT(0xcf21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcf1f));
        EXPECT(0xc2, gbc.readMem(0xcf20));
        // 3E 036A
        gbc.setState(0x15c6, 0xdbf8, 0xc120, 0xfba3, 0xec79, 0x2b6f, 0x0, 0x1);
        gbc.writeMem(0x15c6, { 0x3e, 0xae });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xdbf8, gbc.sp());
        EXPECT(0x15c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 036B
        gbc.setState(0xd80, 0x70ed, 0xcde0, 0xa7a, 0x5603, 0xf1d5, 0x1, 0x0);
        gbc.writeMem(0xd80, { 0x3e, 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x70ed, gbc.sp());
        EXPECT(0xd82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 036C
        gbc.setState(0x67c7, 0x1d5a, 0x7f90, 0x7d1f, 0x28ff, 0x8e22, 0x0, 0x0);
        gbc.writeMem(0x67c7, { 0x3e, 0x1e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1d5a, gbc.sp());
        EXPECT(0x67c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 036D
        gbc.setState(0xb9, 0x8ae6, 0xe6a0, 0x9bfd, 0x5e43, 0x371d, 0x0, 0x1);
        gbc.writeMem(0xb9, { 0x3e, 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8ae6, gbc.sp());
        EXPECT(0xbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 036E
        gbc.setState(0x4b0a, 0xf7d1, 0x1e70, 0xced0, 0xc293, 0xf4ad, 0x1, 0x0);
        gbc.writeMem(0x4b0a, { 0x3e, 0x9f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf7d1, gbc.sp());
        EXPECT(0x4b0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 036F
        gbc.setState(0xb27a, 0x3f1d, 0x2950, 0x65c4, 0x8bf9, 0x3d56, 0x1, 0x0);
        gbc.writeMem(0xb27a, { 0x3e, 0x1b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3f1d, gbc.sp());
        EXPECT(0xb27c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb27a));
        EXPECT(0x1b, gbc.readMem(0xb27b));
        // 3E 0370
        gbc.setState(0x9712, 0x8ea9, 0xb400, 0x71cd, 0xf10c, 0x38ce, 0x0, 0x1);
        gbc.writeMem(0x9712, { 0x3e, 0xf0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8ea9, gbc.sp());
        EXPECT(0x9714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9712));
        EXPECT(0xf0, gbc.readMem(0x9713));
        // 3E 0371
        gbc.setState(0xcff9, 0x806f, 0xa240, 0x76cd, 0x1df7, 0x6426, 0x1, 0x1);
        gbc.writeMem(0xcff9, { 0x3e, 0xfc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x806f, gbc.sp());
        EXPECT(0xcffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcff9));
        EXPECT(0xfc, gbc.readMem(0xcffa));
        // 3E 0372
        gbc.setState(0x8d63, 0xbed7, 0x9020, 0x49d9, 0xa293, 0x1357, 0x0, 0x0);
        gbc.writeMem(0x8d63, { 0x3e, 0x3e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbed7, gbc.sp());
        EXPECT(0x8d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8d63));
        EXPECT(0x3e, gbc.readMem(0x8d64));
        // 3E 0373
        gbc.setState(0x5f8, 0xed66, 0x1d40, 0xf4b9, 0xf094, 0x7de3, 0x1, 0x1);
        gbc.writeMem(0x5f8, { 0x3e, 0xc6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xed66, gbc.sp());
        EXPECT(0x5fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0374
        gbc.setState(0x82d6, 0x227c, 0x8c80, 0x2b89, 0xb1ac, 0x3b26, 0x0, 0x1);
        gbc.writeMem(0x82d6, { 0x3e, 0x1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x227c, gbc.sp());
        EXPECT(0x82d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x82d6));
        EXPECT(0x1, gbc.readMem(0x82d7));
        // 3E 0375
        gbc.setState(0x179b, 0x63d, 0xbfe0, 0x75e4, 0x51be, 0x9df9, 0x1, 0x1);
        gbc.writeMem(0x179b, { 0x3e, 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x63d, gbc.sp());
        EXPECT(0x179d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0376
        gbc.setState(0xa303, 0xcffd, 0xe8c0, 0xfd8c, 0xae0d, 0x426f, 0x1, 0x1);
        gbc.writeMem(0xa303, { 0x3e, 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcffd, gbc.sp());
        EXPECT(0xa305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa303));
        EXPECT(0x95, gbc.readMem(0xa304));
        // 3E 0377
        gbc.setState(0x8548, 0x53b6, 0x3440, 0x37c1, 0x9433, 0xccbc, 0x0, 0x0);
        gbc.writeMem(0x8548, { 0x3e, 0xa8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x53b6, gbc.sp());
        EXPECT(0x854a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8548));
        EXPECT(0xa8, gbc.readMem(0x8549));
        // 3E 0378
        gbc.setState(0xa6fc, 0x1e00, 0xe3e0, 0xd992, 0x51a9, 0xac81, 0x1, 0x0);
        gbc.writeMem(0xa6fc, { 0x3e, 0x75 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1e00, gbc.sp());
        EXPECT(0xa6fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa6fc));
        EXPECT(0x75, gbc.readMem(0xa6fd));
        // 3E 0379
        gbc.setState(0x5df7, 0x43fc, 0xb6f0, 0x132d, 0x5543, 0x58a2, 0x0, 0x0);
        gbc.writeMem(0x5df7, { 0x3e, 0x2d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x43fc, gbc.sp());
        EXPECT(0x5df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 037A
        gbc.setState(0x151, 0xad56, 0xa7d0, 0xa67c, 0xe0ea, 0x972a, 0x0, 0x1);
        gbc.writeMem(0x151, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xad56, gbc.sp());
        EXPECT(0x153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 037B
        gbc.setState(0x90fe, 0x8f59, 0x7790, 0x18f5, 0x2c42, 0xb7e1, 0x1, 0x0);
        gbc.writeMem(0x90fe, { 0x3e, 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8f59, gbc.sp());
        EXPECT(0x9100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x90fe));
        EXPECT(0x66, gbc.readMem(0x90ff));
        // 3E 037C
        gbc.setState(0x5428, 0xeb8f, 0xe0, 0x64b9, 0xe329, 0xb3e1, 0x0, 0x1);
        gbc.writeMem(0x5428, { 0x3e, 0xe2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xeb8f, gbc.sp());
        EXPECT(0x542a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 037F
        gbc.setState(0xd1ed, 0x7733, 0xfec0, 0x33d8, 0xa216, 0x870c, 0x1, 0x0);
        gbc.writeMem(0xd1ed, { 0x3e, 0x58 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7733, gbc.sp());
        EXPECT(0xd1ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd1ed));
        EXPECT(0x58, gbc.readMem(0xd1ee));
        // 3E 0380
        gbc.setState(0x208b, 0x946a, 0x20a0, 0x7fcd, 0xabe2, 0xeb1d, 0x0, 0x1);
        gbc.writeMem(0x208b, { 0x3e, 0x84 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x946a, gbc.sp());
        EXPECT(0x208d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0382
        gbc.setState(0x818e, 0x2917, 0x85a0, 0x88e5, 0x25d8, 0x4699, 0x1, 0x1);
        gbc.writeMem(0x818e, { 0x3e, 0xe7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2917, gbc.sp());
        EXPECT(0x8190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x818e));
        EXPECT(0xe7, gbc.readMem(0x818f));
        // 3E 0383
        gbc.setState(0x6cd0, 0x2741, 0x1950, 0xf1b3, 0x6ee, 0xe0c, 0x1, 0x0);
        gbc.writeMem(0x6cd0, { 0x3e, 0x2d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2741, gbc.sp());
        EXPECT(0x6cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0384
        gbc.setState(0x9158, 0xdc54, 0xa460, 0xbaf0, 0x3f55, 0x23ca, 0x0, 0x0);
        gbc.writeMem(0x9158, { 0x3e, 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdc54, gbc.sp());
        EXPECT(0x915a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9158));
        EXPECT(0x37, gbc.readMem(0x9159));
        // 3E 0385
        gbc.setState(0x5406, 0xbf78, 0x9a00, 0xd823, 0xc141, 0xf44a, 0x0, 0x0);
        gbc.writeMem(0x5406, { 0x3e, 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbf78, gbc.sp());
        EXPECT(0x5408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0386
        gbc.setState(0x9490, 0xcf4a, 0x5e60, 0x83b2, 0x9604, 0x7eb, 0x1, 0x1);
        gbc.writeMem(0x9490, { 0x3e, 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcf4a, gbc.sp());
        EXPECT(0x9492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9490));
        EXPECT(0x53, gbc.readMem(0x9491));
        // 3E 0387
        gbc.setState(0x3006, 0x7de, 0x4470, 0xb2a6, 0xd01d, 0xc506, 0x1, 0x0);
        gbc.writeMem(0x3006, { 0x3e, 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7de, gbc.sp());
        EXPECT(0x3008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0388
        gbc.setState(0x7918, 0x10fd, 0x9fb0, 0xf6c1, 0x50ef, 0x8c28, 0x1, 0x0);
        gbc.writeMem(0x7918, { 0x3e, 0xdc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x10fd, gbc.sp());
        EXPECT(0x791a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 0389
        gbc.setState(0x636e, 0x579b, 0xdf90, 0xc39e, 0x22d3, 0xf226, 0x0, 0x1);
        gbc.writeMem(0x636e, { 0x3e, 0x6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x579b, gbc.sp());
        EXPECT(0x6370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 038A
        gbc.setState(0xb5f, 0x9b2, 0xb980, 0xb654, 0x7978, 0x4415, 0x0, 0x0);
        gbc.writeMem(0xb5f, { 0x3e, 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9b2, gbc.sp());
        EXPECT(0xb61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 038B
        gbc.setState(0xd443, 0x4765, 0x4210, 0xd6ce, 0xbaa5, 0xf24d, 0x0, 0x1);
        gbc.writeMem(0xd443, { 0x3e, 0xf4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4765, gbc.sp());
        EXPECT(0xd445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd443));
        EXPECT(0xf4, gbc.readMem(0xd444));
        // 3E 038C
        gbc.setState(0x31b8, 0x7343, 0x5d40, 0x1306, 0x6465, 0x7510, 0x0, 0x1);
        gbc.writeMem(0x31b8, { 0x3e, 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7343, gbc.sp());
        EXPECT(0x31ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 038D
        gbc.setState(0xd3fd, 0x6d61, 0x2c60, 0x9f3b, 0x6db7, 0x3ff, 0x1, 0x1);
        gbc.writeMem(0xd3fd, { 0x3e, 0xd3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6d61, gbc.sp());
        EXPECT(0xd3ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd3fd));
        EXPECT(0xd3, gbc.readMem(0xd3fe));
        // 3E 038E
        gbc.setState(0x224e, 0xa8e6, 0xf000, 0x5c7f, 0x1b67, 0x68f, 0x0, 0x1);
        gbc.writeMem(0x224e, { 0x3e, 0x78 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa8e6, gbc.sp());
        EXPECT(0x2250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 038F
        gbc.setState(0xd956, 0x953c, 0xf490, 0xe73, 0xd47b, 0x3842, 0x0, 0x1);
        gbc.writeMem(0xd956, { 0x3e, 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x953c, gbc.sp());
        EXPECT(0xd958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd956));
        EXPECT(0xd9, gbc.readMem(0xd957));
        // 3E 0390
        gbc.setState(0x83e3, 0x6d25, 0xbc80, 0x2f79, 0xdde5, 0x7c7a, 0x0, 0x1);
        gbc.writeMem(0x83e3, { 0x3e, 0x22 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6d25, gbc.sp());
        EXPECT(0x83e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x83e3));
        EXPECT(0x22, gbc.readMem(0x83e4));
        // 3E 0391
        gbc.setState(0x9008, 0x9fa0, 0x79d0, 0x7e9, 0x38e6, 0x4d78, 0x0, 0x1);
        gbc.writeMem(0x9008, { 0x3e, 0x5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9fa0, gbc.sp());
        EXPECT(0x900a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9008));
        EXPECT(0x5, gbc.readMem(0x9009));
        // 3E 0392
        gbc.setState(0xd83a, 0xc74, 0x6d0, 0xe1dd, 0x6462, 0xef3, 0x0, 0x0);
        gbc.writeMem(0xd83a, { 0x3e, 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc74, gbc.sp());
        EXPECT(0xd83c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd83a));
        EXPECT(0xa6, gbc.readMem(0xd83b));
        // 3E 0393
        gbc.setState(0x5ad2, 0xe6d8, 0x8c40, 0x7c07, 0x542, 0xd92f, 0x0, 0x0);
        gbc.writeMem(0x5ad2, { 0x3e, 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe6d8, gbc.sp());
        EXPECT(0x5ad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0394
        gbc.setState(0x2614, 0xf4e8, 0x51e0, 0x3c63, 0x8ecd, 0xc45f, 0x1, 0x0);
        gbc.writeMem(0x2614, { 0x3e, 0x5b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf4e8, gbc.sp());
        EXPECT(0x2616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0395
        gbc.setState(0x8b22, 0xa172, 0x6da0, 0xdd16, 0x331d, 0x7ef1, 0x1, 0x1);
        gbc.writeMem(0x8b22, { 0x3e, 0xfe });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa172, gbc.sp());
        EXPECT(0x8b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8b22));
        EXPECT(0xfe, gbc.readMem(0x8b23));
        // 3E 0396
        gbc.setState(0x369a, 0x18f9, 0xa20, 0xb606, 0x95d0, 0x523c, 0x1, 0x1);
        gbc.writeMem(0x369a, { 0x3e, 0xcd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x18f9, gbc.sp());
        EXPECT(0x369c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 0397
        gbc.setState(0x856c, 0x8c8b, 0x66f0, 0xa0e4, 0xf3f7, 0xbc89, 0x1, 0x1);
        gbc.writeMem(0x856c, { 0x3e, 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8c8b, gbc.sp());
        EXPECT(0x856e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x856c));
        EXPECT(0xb2, gbc.readMem(0x856d));
        // 3E 0398
        gbc.setState(0xac03, 0xdb68, 0x9cd0, 0x1a04, 0xf244, 0x402f, 0x1, 0x1);
        gbc.writeMem(0xac03, { 0x3e, 0xd1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xdb68, gbc.sp());
        EXPECT(0xac05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xac03));
        EXPECT(0xd1, gbc.readMem(0xac04));
        // 3E 0399
        gbc.setState(0x8f07, 0xb695, 0x750, 0x275b, 0x3e75, 0x31d6, 0x1, 0x0);
        gbc.writeMem(0x8f07, { 0x3e, 0x82 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb695, gbc.sp());
        EXPECT(0x8f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8f07));
        EXPECT(0x82, gbc.readMem(0x8f08));
        // 3E 039A
        gbc.setState(0x7fad, 0xcf03, 0x3080, 0xef52, 0x85d8, 0xd7aa, 0x0, 0x0);
        gbc.writeMem(0x7fad, { 0x3e, 0x3e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xcf03, gbc.sp());
        EXPECT(0x7faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 039B
        gbc.setState(0x14fe, 0x7c52, 0x5d70, 0x43fe, 0x903e, 0xd99, 0x0, 0x1);
        gbc.writeMem(0x14fe, { 0x3e, 0x6f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7c52, gbc.sp());
        EXPECT(0x1500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 039C
        gbc.setState(0xc11d, 0x51a0, 0x5240, 0x474c, 0x8eef, 0x374e, 0x1, 0x0);
        gbc.writeMem(0xc11d, { 0x3e, 0x6d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x51a0, gbc.sp());
        EXPECT(0xc11f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc11d));
        EXPECT(0x6d, gbc.readMem(0xc11e));
        // 3E 039D
        gbc.setState(0x9de6, 0x2866, 0xe190, 0xcc00, 0x9513, 0xc0ba, 0x0, 0x0);
        gbc.writeMem(0x9de6, { 0x3e, 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2866, gbc.sp());
        EXPECT(0x9de8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9de6));
        EXPECT(0x41, gbc.readMem(0x9de7));
        // 3E 039E
        gbc.setState(0x1237, 0xa96e, 0x4990, 0x2ae6, 0x6655, 0x7ca5, 0x1, 0x1);
        gbc.writeMem(0x1237, { 0x3e, 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa96e, gbc.sp());
        EXPECT(0x1239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 039F
        gbc.setState(0xd1f9, 0xc25c, 0xbca0, 0x3109, 0xe709, 0x11e8, 0x0, 0x1);
        gbc.writeMem(0xd1f9, { 0x3e, 0xb4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc25c, gbc.sp());
        EXPECT(0xd1fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd1f9));
        EXPECT(0xb4, gbc.readMem(0xd1fa));
        // 3E 03A0
        gbc.setState(0x9c9b, 0xbc79, 0xad0, 0xbb8b, 0x81eb, 0xc225, 0x0, 0x0);
        gbc.writeMem(0x9c9b, { 0x3e, 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xbc79, gbc.sp());
        EXPECT(0x9c9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9c9b));
        EXPECT(0x4f, gbc.readMem(0x9c9c));
        // 3E 03A1
        gbc.setState(0x7c4b, 0xee1e, 0x3a40, 0x5754, 0x8ac9, 0x4ac, 0x0, 0x0);
        gbc.writeMem(0x7c4b, { 0x3e, 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xee1e, gbc.sp());
        EXPECT(0x7c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 03A2
        gbc.setState(0xbb9d, 0x4633, 0xdd70, 0xd271, 0xa18a, 0xceef, 0x1, 0x0);
        gbc.writeMem(0xbb9d, { 0x3e, 0xb9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4633, gbc.sp());
        EXPECT(0xbb9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbb9d));
        EXPECT(0xb9, gbc.readMem(0xbb9e));
        // 3E 03A3
        gbc.setState(0x3cdb, 0x70d8, 0x6ef0, 0x3263, 0x9334, 0x506b, 0x1, 0x0);
        gbc.writeMem(0x3cdb, { 0x3e, 0x36 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x70d8, gbc.sp());
        EXPECT(0x3cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 03A4
        gbc.setState(0xb3a6, 0xa538, 0x5190, 0xada0, 0x4c42, 0xace7, 0x1, 0x0);
        gbc.writeMem(0xb3a6, { 0x3e, 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa538, gbc.sp());
        EXPECT(0xb3a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb3a6));
        EXPECT(0x38, gbc.readMem(0xb3a7));
        // 3E 03A5
        gbc.setState(0x6224, 0x2280, 0xabf0, 0x6e22, 0x3f5a, 0x8e7a, 0x0, 0x0);
        gbc.writeMem(0x6224, { 0x3e, 0xcf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2280, gbc.sp());
        EXPECT(0x6226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 03A6
        gbc.setState(0xac97, 0x5d38, 0xf850, 0xaba1, 0x4d81, 0x647c, 0x1, 0x0);
        gbc.writeMem(0xac97, { 0x3e, 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5d38, gbc.sp());
        EXPECT(0xac99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xac97));
        EXPECT(0xb2, gbc.readMem(0xac98));
        // 3E 03A7
        gbc.setState(0x185f, 0x2016, 0xa9d0, 0x513d, 0xfb0c, 0xe8d4, 0x1, 0x1);
        gbc.writeMem(0x185f, { 0x3e, 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2016, gbc.sp());
        EXPECT(0x1861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 03AA
        gbc.setState(0xd331, 0x3926, 0x7b90, 0x8ae6, 0x786f, 0xdce5, 0x1, 0x1);
        gbc.writeMem(0xd331, { 0x3e, 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3926, gbc.sp());
        EXPECT(0xd333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd331));
        EXPECT(0x41, gbc.readMem(0xd332));
        // 3E 03AB
        gbc.setState(0x60b1, 0xde95, 0xb370, 0x7e19, 0x9e48, 0x9ae0, 0x1, 0x0);
        gbc.writeMem(0x60b1, { 0x3e, 0xa5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xde95, gbc.sp());
        EXPECT(0x60b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 03AC
        gbc.setState(0x26ff, 0xa48f, 0x9910, 0xeb4f, 0x7f35, 0xf9d3, 0x0, 0x1);
        gbc.writeMem(0x26ff, { 0x3e, 0x25 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa48f, gbc.sp());
        EXPECT(0x2701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 03AD
        gbc.setState(0xd59a, 0x48fa, 0xfe00, 0x68f9, 0x7079, 0x916b, 0x1, 0x1);
        gbc.writeMem(0xd59a, { 0x3e, 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x48fa, gbc.sp());
        EXPECT(0xd59c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd59a));
        EXPECT(0x2, gbc.readMem(0xd59b));
        // 3E 03AE
        gbc.setState(0xd1cf, 0x8352, 0x1910, 0xec37, 0xb63, 0x9f0e, 0x1, 0x0);
        gbc.writeMem(0xd1cf, { 0x3e, 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8352, gbc.sp());
        EXPECT(0xd1d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd1cf));
        EXPECT(0x3d, gbc.readMem(0xd1d0));
        // 3E 03AF
        gbc.setState(0x4e9c, 0x5ee0, 0x3000, 0x56a, 0x3bc4, 0x4006, 0x1, 0x0);
        gbc.writeMem(0x4e9c, { 0x3e, 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5ee0, gbc.sp());
        EXPECT(0x4e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 03B0
        gbc.setState(0x34a0, 0x31d1, 0xaeb0, 0xdb68, 0xb2f9, 0xb18f, 0x1, 0x0);
        gbc.writeMem(0x34a0, { 0x3e, 0xd4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x31d1, gbc.sp());
        EXPECT(0x34a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 03B1
        gbc.setState(0xc139, 0xb8e3, 0xfc00, 0x4fe9, 0x2840, 0x9197, 0x1, 0x1);
        gbc.writeMem(0xc139, { 0x3e, 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb8e3, gbc.sp());
        EXPECT(0xc13b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc139));
        EXPECT(0xbf, gbc.readMem(0xc13a));
        // 3E 03B2
        gbc.setState(0x2e08, 0xffa6, 0x80f0, 0x7d15, 0x96f7, 0xae53, 0x1, 0x0);
        gbc.writeMem(0x2e08, { 0x3e, 0x3e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xffa6, gbc.sp());
        EXPECT(0x2e0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 03B3
        gbc.setState(0x5a52, 0xfb59, 0x7830, 0x14a7, 0x705, 0x7f60, 0x1, 0x0);
        gbc.writeMem(0x5a52, { 0x3e, 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfb59, gbc.sp());
        EXPECT(0x5a54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 03B4
        gbc.setState(0x4675, 0x212c, 0x7e10, 0x4105, 0xcc3d, 0x7980, 0x0, 0x1);
        gbc.writeMem(0x4675, { 0x3e, 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x212c, gbc.sp());
        EXPECT(0x4677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 03B5
        gbc.setState(0xdfd6, 0x545b, 0x3570, 0x23c, 0xff23, 0x6f0f, 0x0, 0x0);
        gbc.writeMem(0xdfd6, { 0x3e, 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x545b, gbc.sp());
        EXPECT(0xdfd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xdfd6));
        EXPECT(0xb8, gbc.readMem(0xdfd7));
        // 3E 03B6
        gbc.setState(0xb7b, 0x2a72, 0x2770, 0x441a, 0xb825, 0xb931, 0x0, 0x0);
        gbc.writeMem(0xb7b, { 0x3e, 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2a72, gbc.sp());
        EXPECT(0xb7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 03B7
        gbc.setState(0x5c34, 0xc04d, 0xdb00, 0xe4fd, 0x2208, 0x4ebe, 0x0, 0x0);
        gbc.writeMem(0x5c34, { 0x3e, 0x82 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc04d, gbc.sp());
        EXPECT(0x5c36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 03B8
        gbc.setState(0xabd9, 0x8c12, 0xf4d0, 0x921f, 0xf8c0, 0x6465, 0x1, 0x0);
        gbc.writeMem(0xabd9, { 0x3e, 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8c12, gbc.sp());
        EXPECT(0xabdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xabd9));
        EXPECT(0x4b, gbc.readMem(0xabda));
        // 3E 03B9
        gbc.setState(0x20f9, 0x258f, 0xf640, 0x313e, 0xf3f6, 0x8899, 0x1, 0x0);
        gbc.writeMem(0x20f9, { 0x3e, 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x258f, gbc.sp());
        EXPECT(0x20fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 03BA
        gbc.setState(0x8584, 0x8d5f, 0xd000, 0xcfa, 0x1a1b, 0x8424, 0x0, 0x0);
        gbc.writeMem(0x8584, { 0x3e, 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8d5f, gbc.sp());
        EXPECT(0x8586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8584));
        EXPECT(0x10, gbc.readMem(0x8585));
        // 3E 03BB
        gbc.setState(0x8c43, 0x7c1a, 0xf930, 0x10f7, 0xb04b, 0xbf05, 0x1, 0x1);
        gbc.writeMem(0x8c43, { 0x3e, 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7c1a, gbc.sp());
        EXPECT(0x8c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8c43));
        EXPECT(0x4b, gbc.readMem(0x8c44));
        // 3E 03BC
        gbc.setState(0xda09, 0x5126, 0x9470, 0x6c3f, 0x8659, 0xff5d, 0x1, 0x1);
        gbc.writeMem(0xda09, { 0x3e, 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5126, gbc.sp());
        EXPECT(0xda0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xda09));
        EXPECT(0xbb, gbc.readMem(0xda0a));
        // 3E 03BD
        gbc.setState(0x61eb, 0x90f4, 0x6d30, 0x8e77, 0xfd30, 0x62bd, 0x1, 0x1);
        gbc.writeMem(0x61eb, { 0x3e, 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x90f4, gbc.sp());
        EXPECT(0x61ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 03BE
        gbc.setState(0xd5dd, 0x8315, 0x51e0, 0x3726, 0x676f, 0x34f4, 0x0, 0x0);
        gbc.writeMem(0xd5dd, { 0x3e, 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8315, gbc.sp());
        EXPECT(0xd5df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd5dd));
        EXPECT(0xde, gbc.readMem(0xd5de));
        // 3E 03BF
        gbc.setState(0x1637, 0x2cdf, 0xc5a0, 0xdf9b, 0xaf7, 0xa938, 0x0, 0x0);
        gbc.writeMem(0x1637, { 0x3e, 0xcd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2cdf, gbc.sp());
        EXPECT(0x1639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 03C0
        gbc.setState(0x64ec, 0x7442, 0x26b0, 0x74fe, 0x9ff6, 0xb052, 0x1, 0x0);
        gbc.writeMem(0x64ec, { 0x3e, 0x25 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7442, gbc.sp());
        EXPECT(0x64ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 03C1
        gbc.setState(0xd939, 0x8e81, 0x1860, 0xaea5, 0x2112, 0x467, 0x0, 0x1);
        gbc.writeMem(0xd939, { 0x3e, 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8e81, gbc.sp());
        EXPECT(0xd93b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd939));
        EXPECT(0x65, gbc.readMem(0xd93a));
        // 3E 03C2
        gbc.setState(0x28e9, 0x90ac, 0x6f40, 0x8cd9, 0xe7a, 0x1d3, 0x1, 0x0);
        gbc.writeMem(0x28e9, { 0x3e, 0x3a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x90ac, gbc.sp());
        EXPECT(0x28eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 03C3
        gbc.setState(0x4019, 0xf1fc, 0xa3c0, 0xd1f2, 0x197a, 0x5a3, 0x0, 0x0);
        gbc.writeMem(0x4019, { 0x3e, 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf1fc, gbc.sp());
        EXPECT(0x401b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 03C4
        gbc.setState(0xb14e, 0x94eb, 0xaf70, 0xec34, 0xd1da, 0x3705, 0x0, 0x1);
        gbc.writeMem(0xb14e, { 0x3e, 0xd6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x94eb, gbc.sp());
        EXPECT(0xb150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb14e));
        EXPECT(0xd6, gbc.readMem(0xb14f));
        // 3E 03C5
        gbc.setState(0x93d3, 0xb2b4, 0x340, 0xa58b, 0x8afb, 0x9050, 0x0, 0x1);
        gbc.writeMem(0x93d3, { 0x3e, 0x54 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb2b4, gbc.sp());
        EXPECT(0x93d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x93d3));
        EXPECT(0x54, gbc.readMem(0x93d4));
        // 3E 03C6
        gbc.setState(0x2241, 0xf786, 0x9000, 0xec57, 0xfad0, 0xa740, 0x1, 0x0);
        gbc.writeMem(0x2241, { 0x3e, 0xbe });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf786, gbc.sp());
        EXPECT(0x2243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 03C7
        gbc.setState(0x1a5c, 0x5e69, 0xf360, 0xeff0, 0x4f5b, 0xd4ad, 0x1, 0x1);
        gbc.writeMem(0x1a5c, { 0x3e, 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5e69, gbc.sp());
        EXPECT(0x1a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 03C8
        gbc.setState(0x3d94, 0x6add, 0xec0, 0x73e, 0xac8, 0x2293, 0x1, 0x0);
        gbc.writeMem(0x3d94, { 0x3e, 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6add, gbc.sp());
        EXPECT(0x3d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 03C9
        gbc.setState(0xe10e, 0xf7d2, 0xb7f0, 0x3a43, 0x6b5e, 0x33cc, 0x1, 0x1);
        gbc.writeMem(0xe10e, { 0x3e, 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf7d2, gbc.sp());
        EXPECT(0xe110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe10e));
        EXPECT(0x1a, gbc.readMem(0xe10f));
        // 3E 03CA
        gbc.setState(0x4cc9, 0x980, 0xacd0, 0xd9d7, 0xee8e, 0x40a7, 0x0, 0x0);
        gbc.writeMem(0x4cc9, { 0x3e, 0x29 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x980, gbc.sp());
        EXPECT(0x4ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 03CB
        gbc.setState(0xeb1d, 0xce41, 0x4950, 0xccbc, 0x6489, 0xc13, 0x0, 0x0);
        gbc.writeMem(0xeb1d, { 0x3e, 0x17 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xce41, gbc.sp());
        EXPECT(0xeb1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xeb1d));
        EXPECT(0x17, gbc.readMem(0xeb1e));
        // 3E 03CC
        gbc.setState(0x130b, 0x8344, 0x58b0, 0xe9cc, 0x3646, 0x801b, 0x1, 0x0);
        gbc.writeMem(0x130b, { 0x3e, 0x5b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8344, gbc.sp());
        EXPECT(0x130d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 03CD
        gbc.setState(0x11ca, 0x1c81, 0x4140, 0x1328, 0xcd51, 0x2a08, 0x1, 0x0);
        gbc.writeMem(0x11ca, { 0x3e, 0xa3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1c81, gbc.sp());
        EXPECT(0x11cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 03CE
        gbc.setState(0xdccf, 0xdf8e, 0xbc90, 0x9cfc, 0x4aff, 0xa45c, 0x0, 0x1);
        gbc.writeMem(0xdccf, { 0x3e, 0xe });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdf8e, gbc.sp());
        EXPECT(0xdcd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xdccf));
        EXPECT(0xe, gbc.readMem(0xdcd0));
        // 3E 03CF
        gbc.setState(0xd2dc, 0x2a77, 0x1f10, 0xd3ba, 0xe316, 0x3a81, 0x0, 0x0);
        gbc.writeMem(0xd2dc, { 0x3e, 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2a77, gbc.sp());
        EXPECT(0xd2de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd2dc));
        EXPECT(0x73, gbc.readMem(0xd2dd));
        // 3E 03D0
        gbc.setState(0xb2d8, 0x8ea, 0x6060, 0xfa44, 0xe9ae, 0xbbf0, 0x0, 0x1);
        gbc.writeMem(0xb2d8, { 0x3e, 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8ea, gbc.sp());
        EXPECT(0xb2da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb2d8));
        EXPECT(0x92, gbc.readMem(0xb2d9));
        // 3E 03D2
        gbc.setState(0xad6e, 0x14d7, 0x930, 0x57a5, 0xf1a6, 0xc6d1, 0x1, 0x0);
        gbc.writeMem(0xad6e, { 0x3e, 0x27 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x14d7, gbc.sp());
        EXPECT(0xad70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xad6e));
        EXPECT(0x27, gbc.readMem(0xad6f));
        // 3E 03D3
        gbc.setState(0x1ca0, 0xd949, 0xbfd0, 0xe749, 0xd4c1, 0x39fa, 0x0, 0x1);
        gbc.writeMem(0x1ca0, { 0x3e, 0x68 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd949, gbc.sp());
        EXPECT(0x1ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 03D4
        gbc.setState(0x4753, 0x785b, 0x6570, 0x9c5b, 0xde7, 0x6318, 0x1, 0x0);
        gbc.writeMem(0x4753, { 0x3e, 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x785b, gbc.sp());
        EXPECT(0x4755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 03D5
        gbc.setState(0xcf41, 0xf2ae, 0x67f0, 0xc279, 0x5f5b, 0xde8, 0x0, 0x1);
        gbc.writeMem(0xcf41, { 0x3e, 0x6f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf2ae, gbc.sp());
        EXPECT(0xcf43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcf41));
        EXPECT(0x6f, gbc.readMem(0xcf42));
        // 3E 03D6
        gbc.setState(0x9576, 0x3cc8, 0x2f70, 0x544f, 0xd5d1, 0x8386, 0x0, 0x1);
        gbc.writeMem(0x9576, { 0x3e, 0xca });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3cc8, gbc.sp());
        EXPECT(0x9578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9576));
        EXPECT(0xca, gbc.readMem(0x9577));
        // 3E 03D7
        gbc.setState(0x715f, 0xf6dd, 0xe520, 0xcc72, 0x6953, 0x2bc1, 0x0, 0x1);
        gbc.writeMem(0x715f, { 0x3e, 0x7c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf6dd, gbc.sp());
        EXPECT(0x7161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 03D8
        gbc.setState(0x6eb5, 0x4868, 0xe00, 0x1188, 0x4f04, 0x4cbf, 0x0, 0x0);
        gbc.writeMem(0x6eb5, { 0x3e, 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4868, gbc.sp());
        EXPECT(0x6eb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 03D9
        gbc.setState(0x920a, 0x9d46, 0x3fa0, 0x6f7c, 0xd5e2, 0x9dd4, 0x1, 0x1);
        gbc.writeMem(0x920a, { 0x3e, 0xb4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9d46, gbc.sp());
        EXPECT(0x920c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x920a));
        EXPECT(0xb4, gbc.readMem(0x920b));
        // 3E 03DA
        gbc.setState(0x43ce, 0x6be2, 0x28c0, 0xf9bd, 0x6e87, 0x9c0d, 0x0, 0x0);
        gbc.writeMem(0x43ce, { 0x3e, 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6be2, gbc.sp());
        EXPECT(0x43d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 03DB
        gbc.setState(0x319a, 0x7dbc, 0x6da0, 0xb445, 0xa421, 0xd2da, 0x0, 0x1);
        gbc.writeMem(0x319a, { 0x3e, 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7dbc, gbc.sp());
        EXPECT(0x319c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 03DC
        gbc.setState(0xc648, 0x40af, 0xb3a0, 0xbabd, 0x585c, 0x1dc2, 0x0, 0x1);
        gbc.writeMem(0xc648, { 0x3e, 0xc6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x40af, gbc.sp());
        EXPECT(0xc64a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc648));
        EXPECT(0xc6, gbc.readMem(0xc649));
        // 3E 03DD
        gbc.setState(0x72f7, 0xc4e8, 0xe410, 0x2d38, 0xf377, 0xff8a, 0x0, 0x0);
        gbc.writeMem(0x72f7, { 0x3e, 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc4e8, gbc.sp());
        EXPECT(0x72f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 03DE
        gbc.setState(0x302b, 0xb5e0, 0xdac0, 0x6934, 0x42c5, 0x2e98, 0x1, 0x1);
        gbc.writeMem(0x302b, { 0x3e, 0x75 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb5e0, gbc.sp());
        EXPECT(0x302d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 03DF
        gbc.setState(0x4e2e, 0xc977, 0x2110, 0x67c6, 0x3ba8, 0x63d8, 0x1, 0x1);
        gbc.writeMem(0x4e2e, { 0x3e, 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc977, gbc.sp());
        EXPECT(0x4e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 03E0
        gbc.setState(0x2eb0, 0x5863, 0xb540, 0x88ab, 0x46d9, 0xe12b, 0x0, 0x1);
        gbc.writeMem(0x2eb0, { 0x3e, 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5863, gbc.sp());
        EXPECT(0x2eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3E 03E1
        gbc.setState(0x8399, 0x5c82, 0x6410, 0xe29b, 0xfa0e, 0xc98d, 0x1, 0x1);
        gbc.writeMem(0x8399, { 0x3e, 0xa5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5c82, gbc.sp());
        EXPECT(0x839b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8399));
        EXPECT(0xa5, gbc.readMem(0x839a));
        // 3E 03E2
        gbc.setState(0x3f4e, 0xf162, 0xc6f0, 0x3dff, 0x740f, 0xa06, 0x1, 0x1);
        gbc.writeMem(0x3f4e, { 0x3e, 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf162, gbc.sp());
        EXPECT(0x3f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 03E3
        gbc.setState(0xd2dd, 0xa779, 0x2290, 0x2036, 0x10b3, 0x8288, 0x0, 0x0);
        gbc.writeMem(0xd2dd, { 0x3e, 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa779, gbc.sp());
        EXPECT(0xd2df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd2dd));
        EXPECT(0xf3, gbc.readMem(0xd2de));
        // 3E 03E4
        gbc.setState(0x5ed7, 0xba7d, 0x49b0, 0xccf5, 0x56c8, 0xc86b, 0x1, 0x1);
        gbc.writeMem(0x5ed7, { 0x3e, 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xba7d, gbc.sp());
        EXPECT(0x5ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3E 03E6
        gbc.setState(0x8b77, 0x8151, 0x2e60, 0xfa87, 0x22ba, 0x33a3, 0x1, 0x0);
        gbc.writeMem(0x8b77, { 0x3e, 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8151, gbc.sp());
        EXPECT(0x8b79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8b77));
        EXPECT(0x57, gbc.readMem(0x8b78));
        // 3E 03E7
        gbc.setState(0xb44, 0x92de, 0xf7c0, 0xa345, 0x20fe, 0xd4b8, 0x0, 0x1);
        gbc.writeMem(0xb44, { 0x3e, 0x7e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x92de, gbc.sp());
        EXPECT(0xb46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
