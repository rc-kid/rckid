    TEST(gbcemu, opcode_3e) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 3E 0000
        gbc.setState(0x2f94, 0xd50a, 0x96f0, 0xc9d8, 0xb278, 0xecfa, 0x1, 0x1);
        gbc.writeMem(0x2f94, { 0x3e, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd50a);
        EXPECT(gbc.pc(), 0x2f96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0001
        gbc.setState(0x7fe6, 0x2e02, 0xba30, 0x37bd, 0x8105, 0x7bb3, 0x1, 0x0);
        gbc.writeMem(0x7fe6, { 0x3e, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2e02);
        EXPECT(gbc.pc(), 0x7fe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0002
        gbc.setState(0x5593, 0xcb35, 0x1f40, 0xe67, 0xeab2, 0x2efc, 0x1, 0x1);
        gbc.writeMem(0x5593, { 0x3e, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xcb35);
        EXPECT(gbc.pc(), 0x5595);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0003
        gbc.setState(0x75bb, 0x4ea2, 0xd510, 0x73e8, 0x8efe, 0x7528, 0x1, 0x1);
        gbc.writeMem(0x75bb, { 0x3e, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4ea2);
        EXPECT(gbc.pc(), 0x75bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0004
        gbc.setState(0x7961, 0xc8f7, 0x3070, 0xef2b, 0x6a1e, 0xf7e3, 0x0, 0x0);
        gbc.writeMem(0x7961, { 0x3e, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc8f7);
        EXPECT(gbc.pc(), 0x7963);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0005
        gbc.setState(0x8777, 0xa84a, 0x5f60, 0x7c2f, 0x2cb5, 0xbf51, 0x0, 0x1);
        gbc.writeMem(0x8777, { 0x3e, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa84a);
        EXPECT(gbc.pc(), 0x8779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8777), 0x3e);
        EXPECT(gbc.readMem(0x8778), 0xa2);
        // 3E 0006
        gbc.setState(0x2e5a, 0x3362, 0xa3c0, 0xe76, 0xb068, 0xeac3, 0x1, 0x1);
        gbc.writeMem(0x2e5a, { 0x3e, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3362);
        EXPECT(gbc.pc(), 0x2e5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0007
        gbc.setState(0x2633, 0xe269, 0xa470, 0x6e20, 0x2b67, 0x8bfa, 0x1, 0x0);
        gbc.writeMem(0x2633, { 0x3e, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe269);
        EXPECT(gbc.pc(), 0x2635);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0008
        gbc.setState(0x2156, 0xc1a6, 0x5010, 0xa3d6, 0xde95, 0xfa2e, 0x1, 0x1);
        gbc.writeMem(0x2156, { 0x3e, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc1a6);
        EXPECT(gbc.pc(), 0x2158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0009
        gbc.setState(0x4019, 0xd927, 0x9ff0, 0xb4de, 0xd641, 0xa22a, 0x1, 0x1);
        gbc.writeMem(0x4019, { 0x3e, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd927);
        EXPECT(gbc.pc(), 0x401b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 000A
        gbc.setState(0xcd44, 0xe5e8, 0xa320, 0xb6e8, 0x1acb, 0x429f, 0x0, 0x0);
        gbc.writeMem(0xcd44, { 0x3e, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe5e8);
        EXPECT(gbc.pc(), 0xcd46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd44), 0x3e);
        EXPECT(gbc.readMem(0xcd45), 0x51);
        // 3E 000C
        gbc.setState(0xa038, 0x7fb8, 0xf3e0, 0xf6f1, 0xeaaf, 0x92f, 0x1, 0x0);
        gbc.writeMem(0xa038, { 0x3e, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7fb8);
        EXPECT(gbc.pc(), 0xa03a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa038), 0x3e);
        EXPECT(gbc.readMem(0xa039), 0x4e);
        // 3E 000D
        gbc.setState(0x73e7, 0xa428, 0xd180, 0x179f, 0x2ff3, 0x5549, 0x1, 0x1);
        gbc.writeMem(0x73e7, { 0x3e, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa428);
        EXPECT(gbc.pc(), 0x73e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 000E
        gbc.setState(0xc4a0, 0xb148, 0x26f0, 0xe94f, 0x746f, 0xca61, 0x1, 0x1);
        gbc.writeMem(0xc4a0, { 0x3e, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb148);
        EXPECT(gbc.pc(), 0xc4a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4a0), 0x3e);
        EXPECT(gbc.readMem(0xc4a1), 0xac);
        // 3E 000F
        gbc.setState(0xcb81, 0x23ed, 0xce20, 0xd972, 0xe678, 0x8382, 0x0, 0x0);
        gbc.writeMem(0xcb81, { 0x3e, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x23ed);
        EXPECT(gbc.pc(), 0xcb83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb81), 0x3e);
        EXPECT(gbc.readMem(0xcb82), 0x33);
        // 3E 0010
        gbc.setState(0xa5c6, 0x37be, 0x7f70, 0xc70f, 0x5a21, 0xb7a1, 0x0, 0x0);
        gbc.writeMem(0xa5c6, { 0x3e, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x37be);
        EXPECT(gbc.pc(), 0xa5c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5c6), 0x3e);
        EXPECT(gbc.readMem(0xa5c7), 0xda);
        // 3E 0011
        gbc.setState(0xe726, 0x5a85, 0xd3c0, 0x9783, 0x4171, 0xddfe, 0x0, 0x0);
        gbc.writeMem(0xe726, { 0x3e, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x5a85);
        EXPECT(gbc.pc(), 0xe728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe726), 0x3e);
        EXPECT(gbc.readMem(0xe727), 0x82);
        // 3E 0012
        gbc.setState(0x5692, 0x5929, 0x7700, 0x8dc7, 0x8521, 0x2da, 0x1, 0x1);
        gbc.writeMem(0x5692, { 0x3e, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5929);
        EXPECT(gbc.pc(), 0x5694);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0013
        gbc.setState(0xe199, 0x16b9, 0xf5c0, 0x2cb2, 0x3e81, 0xbffb, 0x0, 0x1);
        gbc.writeMem(0xe199, { 0x3e, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x16b9);
        EXPECT(gbc.pc(), 0xe19b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe199), 0x3e);
        EXPECT(gbc.readMem(0xe19a), 0x47);
        // 3E 0015
        gbc.setState(0x634a, 0x2d02, 0x7260, 0x7826, 0xda8c, 0x6a49, 0x1, 0x1);
        gbc.writeMem(0x634a, { 0x3e, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2d02);
        EXPECT(gbc.pc(), 0x634c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0016
        gbc.setState(0x8a6a, 0x77a1, 0xd170, 0xe00f, 0x5e31, 0xb149, 0x0, 0x0);
        gbc.writeMem(0x8a6a, { 0x3e, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x77a1);
        EXPECT(gbc.pc(), 0x8a6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a6a), 0x3e);
        EXPECT(gbc.readMem(0x8a6b), 0x4f);
        // 3E 0018
        gbc.setState(0x3f18, 0x4a20, 0xc2b0, 0xd384, 0xdacb, 0xb9b8, 0x1, 0x1);
        gbc.writeMem(0x3f18, { 0x3e, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4a20);
        EXPECT(gbc.pc(), 0x3f1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0019
        gbc.setState(0xee57, 0x5549, 0x4620, 0xf91, 0x8f7b, 0x3522, 0x0, 0x1);
        gbc.writeMem(0xee57, { 0x3e, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5549);
        EXPECT(gbc.pc(), 0xee59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee57), 0x3e);
        EXPECT(gbc.readMem(0xee58), 0x9c);
        // 3E 001A
        gbc.setState(0x4baa, 0x16e3, 0x6570, 0xf070, 0x3976, 0x1fd, 0x0, 0x0);
        gbc.writeMem(0x4baa, { 0x3e, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x16e3);
        EXPECT(gbc.pc(), 0x4bac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 001C
        gbc.setState(0x56b4, 0x683, 0x290, 0x8109, 0x2ee0, 0x4697, 0x0, 0x1);
        gbc.writeMem(0x56b4, { 0x3e, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x683);
        EXPECT(gbc.pc(), 0x56b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 001D
        gbc.setState(0xbc21, 0x6666, 0xc1e0, 0x8174, 0xc079, 0x23ec, 0x1, 0x0);
        gbc.writeMem(0xbc21, { 0x3e, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6666);
        EXPECT(gbc.pc(), 0xbc23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc21), 0x3e);
        EXPECT(gbc.readMem(0xbc22), 0x8d);
        // 3E 001E
        gbc.setState(0x905d, 0xb61e, 0x7ea0, 0xea8c, 0x4f15, 0xde59, 0x1, 0x0);
        gbc.writeMem(0x905d, { 0x3e, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb61e);
        EXPECT(gbc.pc(), 0x905f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x905d), 0x3e);
        EXPECT(gbc.readMem(0x905e), 0xfb);
        // 3E 001F
        gbc.setState(0x9969, 0x530a, 0xf110, 0xe081, 0x5403, 0xe445, 0x0, 0x0);
        gbc.writeMem(0x9969, { 0x3e, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x530a);
        EXPECT(gbc.pc(), 0x996b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9969), 0x3e);
        EXPECT(gbc.readMem(0x996a), 0xa1);
        // 3E 0021
        gbc.setState(0x919c, 0xfe80, 0xd800, 0x7801, 0xc6e4, 0xbbc8, 0x1, 0x1);
        gbc.writeMem(0x919c, { 0x3e, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xfe80);
        EXPECT(gbc.pc(), 0x919e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x919c), 0x3e);
        EXPECT(gbc.readMem(0x919d), 0x16);
        // 3E 0022
        gbc.setState(0xe152, 0x7b1d, 0xbf00, 0xb4fd, 0x56f1, 0x2cd1, 0x0, 0x1);
        gbc.writeMem(0xe152, { 0x3e, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7b1d);
        EXPECT(gbc.pc(), 0xe154);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe152), 0x3e);
        EXPECT(gbc.readMem(0xe153), 0x4b);
        // 3E 0023
        gbc.setState(0xd8a, 0xefe3, 0xac20, 0x5848, 0xa93e, 0x708a, 0x1, 0x1);
        gbc.writeMem(0xd8a, { 0x3e, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xefe3);
        EXPECT(gbc.pc(), 0xd8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0024
        gbc.setState(0xc970, 0xde63, 0x6b50, 0x4e26, 0x94ac, 0xaa10, 0x0, 0x0);
        gbc.writeMem(0xc970, { 0x3e, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xde63);
        EXPECT(gbc.pc(), 0xc972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc970), 0x3e);
        EXPECT(gbc.readMem(0xc971), 0x9e);
        // 3E 0025
        gbc.setState(0xd4e8, 0xaec3, 0x3ba0, 0xc1f7, 0xca66, 0xc2e7, 0x1, 0x0);
        gbc.writeMem(0xd4e8, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xaec3);
        EXPECT(gbc.pc(), 0xd4ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4e8), 0x3e);
        EXPECT(gbc.readMem(0xd4e9), 0x8c);
        // 3E 0026
        gbc.setState(0x23bf, 0x4a05, 0xb510, 0x60fa, 0x8d2f, 0x74a8, 0x1, 0x0);
        gbc.writeMem(0x23bf, { 0x3e, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4a05);
        EXPECT(gbc.pc(), 0x23c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0027
        gbc.setState(0x5248, 0x84c, 0xfe20, 0x7fa2, 0x4dcb, 0x3b48, 0x0, 0x1);
        gbc.writeMem(0x5248, { 0x3e, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x84c);
        EXPECT(gbc.pc(), 0x524a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0028
        gbc.setState(0x7b92, 0xef3f, 0x6d00, 0x348c, 0x168b, 0x2d2b, 0x1, 0x0);
        gbc.writeMem(0x7b92, { 0x3e, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xef3f);
        EXPECT(gbc.pc(), 0x7b94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0029
        gbc.setState(0xa809, 0x2952, 0x1ae0, 0xac18, 0x574e, 0x42c0, 0x0, 0x0);
        gbc.writeMem(0xa809, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x2952);
        EXPECT(gbc.pc(), 0xa80b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa809), 0x3e);
        EXPECT(gbc.readMem(0xa80a), 0x3b);
        // 3E 002A
        gbc.setState(0xcefd, 0xab78, 0xa520, 0x4556, 0x5432, 0x2bbb, 0x0, 0x0);
        gbc.writeMem(0xcefd, { 0x3e, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xab78);
        EXPECT(gbc.pc(), 0xceff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcefd), 0x3e);
        EXPECT(gbc.readMem(0xcefe), 0x4f);
        // 3E 002B
        gbc.setState(0x5e52, 0x95c5, 0x9780, 0xc92a, 0x9b56, 0xa583, 0x0, 0x0);
        gbc.writeMem(0x5e52, { 0x3e, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x95c5);
        EXPECT(gbc.pc(), 0x5e54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 002C
        gbc.setState(0x6fa5, 0x3fa8, 0xae60, 0xd8b9, 0xea8f, 0xa797, 0x1, 0x1);
        gbc.writeMem(0x6fa5, { 0x3e, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3fa8);
        EXPECT(gbc.pc(), 0x6fa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 002D
        gbc.setState(0x9b4f, 0x7b1a, 0xfe50, 0x1d64, 0xc668, 0x20c8, 0x0, 0x1);
        gbc.writeMem(0x9b4f, { 0x3e, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7b1a);
        EXPECT(gbc.pc(), 0x9b51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b4f), 0x3e);
        EXPECT(gbc.readMem(0x9b50), 0x6e);
        // 3E 002E
        gbc.setState(0xd2, 0xe9a9, 0x9ef0, 0x553d, 0xbf3d, 0x4cca, 0x0, 0x1);
        gbc.writeMem(0xd2, { 0x3e, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe9a9);
        EXPECT(gbc.pc(), 0xd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 002F
        gbc.setState(0x3adf, 0xc38e, 0x91c0, 0x8cf9, 0xe52c, 0xbb2d, 0x0, 0x1);
        gbc.writeMem(0x3adf, { 0x3e, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc38e);
        EXPECT(gbc.pc(), 0x3ae1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0031
        gbc.setState(0x1f99, 0xd903, 0x5110, 0xd5c2, 0x94d5, 0x1113, 0x1, 0x0);
        gbc.writeMem(0x1f99, { 0x3e, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd903);
        EXPECT(gbc.pc(), 0x1f9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0032
        gbc.setState(0x51e4, 0x5d7f, 0x390, 0xd7dc, 0x6568, 0x16bf, 0x1, 0x1);
        gbc.writeMem(0x51e4, { 0x3e, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5d7f);
        EXPECT(gbc.pc(), 0x51e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0033
        gbc.setState(0xd7a9, 0x6cde, 0xc60, 0x5793, 0x2f3a, 0x5cb3, 0x0, 0x1);
        gbc.writeMem(0xd7a9, { 0x3e, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6cde);
        EXPECT(gbc.pc(), 0xd7ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7a9), 0x3e);
        EXPECT(gbc.readMem(0xd7aa), 0x13);
        // 3E 0034
        gbc.setState(0x7e37, 0x328a, 0xfcd0, 0x56be, 0x29b, 0x8b94, 0x0, 0x0);
        gbc.writeMem(0x7e37, { 0x3e, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x328a);
        EXPECT(gbc.pc(), 0x7e39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0036
        gbc.setState(0x27cd, 0x7a04, 0x5540, 0x7b46, 0x5614, 0xc04b, 0x0, 0x0);
        gbc.writeMem(0x27cd, { 0x3e, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7a04);
        EXPECT(gbc.pc(), 0x27cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0037
        gbc.setState(0x68f5, 0xa584, 0x210, 0xc762, 0x42f1, 0xd050, 0x0, 0x1);
        gbc.writeMem(0x68f5, { 0x3e, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa584);
        EXPECT(gbc.pc(), 0x68f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0038
        gbc.setState(0xd9dd, 0x8d3c, 0xc3f0, 0xbea2, 0x40f4, 0x1c17, 0x0, 0x0);
        gbc.writeMem(0xd9dd, { 0x3e, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x8d3c);
        EXPECT(gbc.pc(), 0xd9df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9dd), 0x3e);
        EXPECT(gbc.readMem(0xd9de), 0x9d);
        // 3E 0039
        gbc.setState(0x1b9c, 0xa71e, 0x5aa0, 0x6170, 0xdbe8, 0x1eb1, 0x0, 0x1);
        gbc.writeMem(0x1b9c, { 0x3e, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa71e);
        EXPECT(gbc.pc(), 0x1b9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 003A
        gbc.setState(0x70da, 0x2165, 0x6290, 0x8fbf, 0xec9e, 0x1e90, 0x1, 0x1);
        gbc.writeMem(0x70da, { 0x3e, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2165);
        EXPECT(gbc.pc(), 0x70dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 003B
        gbc.setState(0xd21c, 0x9155, 0xc90, 0x65ce, 0x3a52, 0x416c, 0x1, 0x0);
        gbc.writeMem(0xd21c, { 0x3e, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9155);
        EXPECT(gbc.pc(), 0xd21e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd21c), 0x3e);
        EXPECT(gbc.readMem(0xd21d), 0x30);
        // 3E 003D
        gbc.setState(0x29f7, 0x8b27, 0x4c90, 0x63fe, 0x5e5c, 0x38e, 0x1, 0x0);
        gbc.writeMem(0x29f7, { 0x3e, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8b27);
        EXPECT(gbc.pc(), 0x29f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 003E
        gbc.setState(0x931a, 0xf21a, 0x7120, 0xf0b5, 0x5eb, 0x9322, 0x0, 0x1);
        gbc.writeMem(0x931a, { 0x3e, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf21a);
        EXPECT(gbc.pc(), 0x931c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x931a), 0x3e);
        EXPECT(gbc.readMem(0x931b), 0x62);
        // 3E 003F
        gbc.setState(0x7e98, 0xad0a, 0x6a90, 0x54f7, 0xbcce, 0x22b7, 0x1, 0x0);
        gbc.writeMem(0x7e98, { 0x3e, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xad0a);
        EXPECT(gbc.pc(), 0x7e9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0040
        gbc.setState(0xa84e, 0x973c, 0x8dd0, 0xbb77, 0x624d, 0x8f81, 0x0, 0x0);
        gbc.writeMem(0xa84e, { 0x3e, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x973c);
        EXPECT(gbc.pc(), 0xa850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa84e), 0x3e);
        EXPECT(gbc.readMem(0xa84f), 0x22);
        // 3E 0041
        gbc.setState(0x6b10, 0xd222, 0xa5f0, 0xa2cf, 0x77e1, 0xce68, 0x0, 0x1);
        gbc.writeMem(0x6b10, { 0x3e, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd222);
        EXPECT(gbc.pc(), 0x6b12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0042
        gbc.setState(0xde2c, 0x45f2, 0xe560, 0x5e0b, 0x24ba, 0x880a, 0x1, 0x0);
        gbc.writeMem(0xde2c, { 0x3e, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x45f2);
        EXPECT(gbc.pc(), 0xde2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde2c), 0x3e);
        EXPECT(gbc.readMem(0xde2d), 0xd6);
        // 3E 0043
        gbc.setState(0x6fa1, 0xabfd, 0xd340, 0xd412, 0x952e, 0x2c9f, 0x1, 0x1);
        gbc.writeMem(0x6fa1, { 0x3e, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xabfd);
        EXPECT(gbc.pc(), 0x6fa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0044
        gbc.setState(0xb023, 0xa4a0, 0x58c0, 0x4a20, 0x3fe0, 0xc6e2, 0x1, 0x1);
        gbc.writeMem(0xb023, { 0x3e, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa4a0);
        EXPECT(gbc.pc(), 0xb025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb023), 0x3e);
        EXPECT(gbc.readMem(0xb024), 0x6c);
        // 3E 0045
        gbc.setState(0x1f61, 0x23ac, 0xcd80, 0x3edd, 0x1f6a, 0x7498, 0x1, 0x1);
        gbc.writeMem(0x1f61, { 0x3e, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x23ac);
        EXPECT(gbc.pc(), 0x1f63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0046
        gbc.setState(0x28f7, 0x1812, 0x89d0, 0x5c81, 0xbafb, 0x62c7, 0x0, 0x0);
        gbc.writeMem(0x28f7, { 0x3e, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x1812);
        EXPECT(gbc.pc(), 0x28f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0047
        gbc.setState(0x2382, 0x8ecf, 0xd50, 0xa538, 0xfebb, 0x5b6, 0x0, 0x0);
        gbc.writeMem(0x2382, { 0x3e, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x8ecf);
        EXPECT(gbc.pc(), 0x2384);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0048
        gbc.setState(0x57ef, 0x64e5, 0xb240, 0x6650, 0x39b2, 0x825b, 0x1, 0x1);
        gbc.writeMem(0x57ef, { 0x3e, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x64e5);
        EXPECT(gbc.pc(), 0x57f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0049
        gbc.setState(0xa8fe, 0x38d, 0x8600, 0x5a3b, 0x35b9, 0x4821, 0x0, 0x1);
        gbc.writeMem(0xa8fe, { 0x3e, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x38d);
        EXPECT(gbc.pc(), 0xa900);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8fe), 0x3e);
        EXPECT(gbc.readMem(0xa8ff), 0x68);
        // 3E 004A
        gbc.setState(0x6a58, 0x91ea, 0x5ea0, 0xdf35, 0x98ce, 0xff6f, 0x0, 0x0);
        gbc.writeMem(0x6a58, { 0x3e, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x91ea);
        EXPECT(gbc.pc(), 0x6a5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 004B
        gbc.setState(0xb082, 0x5326, 0x2150, 0xfb8e, 0x3dfa, 0xb602, 0x0, 0x0);
        gbc.writeMem(0xb082, { 0x3e, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5326);
        EXPECT(gbc.pc(), 0xb084);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb082), 0x3e);
        EXPECT(gbc.readMem(0xb083), 0xe9);
        // 3E 004C
        gbc.setState(0xcb15, 0xc0dc, 0xe210, 0xfafa, 0x615d, 0xeae0, 0x1, 0x0);
        gbc.writeMem(0xcb15, { 0x3e, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc0dc);
        EXPECT(gbc.pc(), 0xcb17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb15), 0x3e);
        EXPECT(gbc.readMem(0xcb16), 0x32);
        // 3E 004D
        gbc.setState(0xaa90, 0xaafd, 0x5430, 0x65c2, 0x1387, 0x3890, 0x0, 0x0);
        gbc.writeMem(0xaa90, { 0x3e, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xaafd);
        EXPECT(gbc.pc(), 0xaa92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa90), 0x3e);
        EXPECT(gbc.readMem(0xaa91), 0x61);
        // 3E 004E
        gbc.setState(0xe66b, 0x279f, 0x5830, 0xbdc1, 0xd055, 0x884e, 0x0, 0x0);
        gbc.writeMem(0xe66b, { 0x3e, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x279f);
        EXPECT(gbc.pc(), 0xe66d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe66b), 0x3e);
        EXPECT(gbc.readMem(0xe66c), 0x5d);
        // 3E 004F
        gbc.setState(0x26f2, 0xb212, 0x35d0, 0x91f4, 0x5149, 0xfe9a, 0x1, 0x0);
        gbc.writeMem(0x26f2, { 0x3e, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb212);
        EXPECT(gbc.pc(), 0x26f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0050
        gbc.setState(0xcd45, 0x8780, 0xcd00, 0xb731, 0x444b, 0x53b5, 0x0, 0x1);
        gbc.writeMem(0xcd45, { 0x3e, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8780);
        EXPECT(gbc.pc(), 0xcd47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd45), 0x3e);
        EXPECT(gbc.readMem(0xcd46), 0x19);
        // 3E 0051
        gbc.setState(0x45d5, 0x736b, 0xf7e0, 0x4a4e, 0x29f4, 0x9626, 0x0, 0x1);
        gbc.writeMem(0x45d5, { 0x3e, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x736b);
        EXPECT(gbc.pc(), 0x45d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0052
        gbc.setState(0xd0fe, 0xac63, 0xf0f0, 0x1945, 0xa95c, 0xb6ab, 0x0, 0x0);
        gbc.writeMem(0xd0fe, { 0x3e, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xac63);
        EXPECT(gbc.pc(), 0xd100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0fe), 0x3e);
        EXPECT(gbc.readMem(0xd0ff), 0x9);
        // 3E 0053
        gbc.setState(0x5a4a, 0xc65, 0x41a0, 0x776f, 0x9dae, 0xfb05, 0x0, 0x1);
        gbc.writeMem(0x5a4a, { 0x3e, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc65);
        EXPECT(gbc.pc(), 0x5a4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0054
        gbc.setState(0xb349, 0x86d1, 0x1b90, 0x9d12, 0x8506, 0x6024, 0x0, 0x0);
        gbc.writeMem(0xb349, { 0x3e, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x86d1);
        EXPECT(gbc.pc(), 0xb34b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb349), 0x3e);
        EXPECT(gbc.readMem(0xb34a), 0xcc);
        // 3E 0056
        gbc.setState(0xc3a6, 0x9656, 0x7e90, 0xd24, 0x59ac, 0x89f1, 0x1, 0x1);
        gbc.writeMem(0xc3a6, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9656);
        EXPECT(gbc.pc(), 0xc3a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3a6), 0x3e);
        EXPECT(gbc.readMem(0xc3a7), 0x8c);
        // 3E 0057
        gbc.setState(0x77b9, 0xee83, 0x7f20, 0xb741, 0xcf71, 0x318f, 0x1, 0x0);
        gbc.writeMem(0x77b9, { 0x3e, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xee83);
        EXPECT(gbc.pc(), 0x77bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0058
        gbc.setState(0x9b04, 0x4431, 0x7080, 0x6888, 0x4569, 0x51d0, 0x1, 0x0);
        gbc.writeMem(0x9b04, { 0x3e, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x4431);
        EXPECT(gbc.pc(), 0x9b06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b04), 0x3e);
        EXPECT(gbc.readMem(0x9b05), 0x3);
        // 3E 0059
        gbc.setState(0xad02, 0xe977, 0xd1e0, 0x3d75, 0xa0c1, 0x5ce1, 0x0, 0x0);
        gbc.writeMem(0xad02, { 0x3e, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe977);
        EXPECT(gbc.pc(), 0xad04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad02), 0x3e);
        EXPECT(gbc.readMem(0xad03), 0xf2);
        // 3E 005A
        gbc.setState(0xa11d, 0x58b, 0xdb10, 0xc7cf, 0x36e9, 0xa5dd, 0x1, 0x1);
        gbc.writeMem(0xa11d, { 0x3e, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x58b);
        EXPECT(gbc.pc(), 0xa11f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa11d), 0x3e);
        EXPECT(gbc.readMem(0xa11e), 0xa9);
        // 3E 005C
        gbc.setState(0x4d71, 0x42d7, 0x9e90, 0xa199, 0x9bdd, 0x46af, 0x0, 0x1);
        gbc.writeMem(0x4d71, { 0x3e, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x42d7);
        EXPECT(gbc.pc(), 0x4d73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 005D
        gbc.setState(0xa068, 0x4d61, 0xe9e0, 0xa375, 0xe5c2, 0x523b, 0x1, 0x1);
        gbc.writeMem(0xa068, { 0x3e, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4d61);
        EXPECT(gbc.pc(), 0xa06a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa068), 0x3e);
        EXPECT(gbc.readMem(0xa069), 0x15);
        // 3E 005E
        gbc.setState(0x950a, 0xc5e2, 0x8740, 0x569a, 0x21dd, 0x5294, 0x1, 0x1);
        gbc.writeMem(0x950a, { 0x3e, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc5e2);
        EXPECT(gbc.pc(), 0x950c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x950a), 0x3e);
        EXPECT(gbc.readMem(0x950b), 0x61);
        // 3E 005F
        gbc.setState(0x9247, 0x7cf0, 0x1160, 0x5167, 0x42ec, 0x8020, 0x0, 0x1);
        gbc.writeMem(0x9247, { 0x3e, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7cf0);
        EXPECT(gbc.pc(), 0x9249);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9247), 0x3e);
        EXPECT(gbc.readMem(0x9248), 0xcd);
        // 3E 0060
        gbc.setState(0xafc5, 0xd64e, 0x950, 0xe8b3, 0xbee2, 0x5efd, 0x1, 0x0);
        gbc.writeMem(0xafc5, { 0x3e, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd64e);
        EXPECT(gbc.pc(), 0xafc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafc5), 0x3e);
        EXPECT(gbc.readMem(0xafc6), 0x46);
        // 3E 0061
        gbc.setState(0xecfc, 0x2e00, 0x48f0, 0xbebe, 0xb84b, 0x6ed2, 0x0, 0x1);
        gbc.writeMem(0xecfc, { 0x3e, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2e00);
        EXPECT(gbc.pc(), 0xecfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecfc), 0x3e);
        EXPECT(gbc.readMem(0xecfd), 0xd4);
        // 3E 0062
        gbc.setState(0x4ef6, 0xba90, 0xc130, 0x9cec, 0xaa34, 0x51cb, 0x0, 0x0);
        gbc.writeMem(0x4ef6, { 0x3e, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xba90);
        EXPECT(gbc.pc(), 0x4ef8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0063
        gbc.setState(0x4b8e, 0x4a0, 0x5d60, 0xc7cb, 0xa38d, 0xef14, 0x1, 0x1);
        gbc.writeMem(0x4b8e, { 0x3e, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4a0);
        EXPECT(gbc.pc(), 0x4b90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0064
        gbc.setState(0x4e45, 0xd42e, 0x290, 0x9d1b, 0xae3a, 0x8a43, 0x1, 0x1);
        gbc.writeMem(0x4e45, { 0x3e, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd42e);
        EXPECT(gbc.pc(), 0x4e47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0066
        gbc.setState(0x70da, 0x81f1, 0x2ce0, 0x93aa, 0x7cdc, 0x8e2e, 0x1, 0x0);
        gbc.writeMem(0x70da, { 0x3e, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x81f1);
        EXPECT(gbc.pc(), 0x70dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0067
        gbc.setState(0xcb4d, 0xf455, 0xccc0, 0xc5b2, 0xc981, 0x761e, 0x1, 0x1);
        gbc.writeMem(0xcb4d, { 0x3e, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf455);
        EXPECT(gbc.pc(), 0xcb4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb4d), 0x3e);
        EXPECT(gbc.readMem(0xcb4e), 0x43);
        // 3E 0068
        gbc.setState(0x18e5, 0xd9b6, 0xe200, 0xe028, 0xe12d, 0x6c5d, 0x1, 0x1);
        gbc.writeMem(0x18e5, { 0x3e, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd9b6);
        EXPECT(gbc.pc(), 0x18e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0069
        gbc.setState(0x5e11, 0x5f55, 0x18f0, 0xca32, 0x392d, 0x2b07, 0x1, 0x1);
        gbc.writeMem(0x5e11, { 0x3e, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5f55);
        EXPECT(gbc.pc(), 0x5e13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 006A
        gbc.setState(0x98c9, 0x9ce8, 0x3000, 0x7ba4, 0xe15f, 0x1ccb, 0x1, 0x1);
        gbc.writeMem(0x98c9, { 0x3e, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9ce8);
        EXPECT(gbc.pc(), 0x98cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c9), 0x3e);
        EXPECT(gbc.readMem(0x98ca), 0x45);
        // 3E 006B
        gbc.setState(0x39f9, 0x9d94, 0x4680, 0x4897, 0x5a84, 0x6580, 0x1, 0x0);
        gbc.writeMem(0x39f9, { 0x3e, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9d94);
        EXPECT(gbc.pc(), 0x39fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 006C
        gbc.setState(0x66a7, 0xf944, 0xe270, 0xb0bc, 0x7212, 0x4d80, 0x1, 0x1);
        gbc.writeMem(0x66a7, { 0x3e, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf944);
        EXPECT(gbc.pc(), 0x66a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 006D
        gbc.setState(0x1dec, 0x8736, 0x8e20, 0x8631, 0x203b, 0x10d, 0x1, 0x1);
        gbc.writeMem(0x1dec, { 0x3e, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8736);
        EXPECT(gbc.pc(), 0x1dee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 006E
        gbc.setState(0xcf4, 0x14f8, 0x9ac0, 0x8be2, 0x156e, 0xc9d4, 0x1, 0x1);
        gbc.writeMem(0xcf4, { 0x3e, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x14f8);
        EXPECT(gbc.pc(), 0xcf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 006F
        gbc.setState(0x2b72, 0x27cd, 0xa9a0, 0x99de, 0x49f6, 0x5ad2, 0x1, 0x1);
        gbc.writeMem(0x2b72, { 0x3e, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x27cd);
        EXPECT(gbc.pc(), 0x2b74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0070
        gbc.setState(0x82d0, 0x5147, 0xb1f0, 0x8db, 0xe70e, 0x232, 0x1, 0x0);
        gbc.writeMem(0x82d0, { 0x3e, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5147);
        EXPECT(gbc.pc(), 0x82d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82d0), 0x3e);
        EXPECT(gbc.readMem(0x82d1), 0xd0);
        // 3E 0071
        gbc.setState(0xdad, 0xb518, 0xebc0, 0xe172, 0x8d34, 0x22b3, 0x1, 0x1);
        gbc.writeMem(0xdad, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb518);
        EXPECT(gbc.pc(), 0xdaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0072
        gbc.setState(0x4e39, 0xbeb2, 0x8f20, 0x5cfa, 0x1e37, 0xa5ed, 0x0, 0x1);
        gbc.writeMem(0x4e39, { 0x3e, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xbeb2);
        EXPECT(gbc.pc(), 0x4e3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0074
        gbc.setState(0x523c, 0xfd6, 0xde70, 0xc693, 0xf08, 0xa575, 0x0, 0x1);
        gbc.writeMem(0x523c, { 0x3e, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xfd6);
        EXPECT(gbc.pc(), 0x523e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0075
        gbc.setState(0x3ea3, 0x3c44, 0x2ae0, 0x1517, 0xa6ee, 0x2ba5, 0x0, 0x0);
        gbc.writeMem(0x3ea3, { 0x3e, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3c44);
        EXPECT(gbc.pc(), 0x3ea5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0076
        gbc.setState(0x2b39, 0x2250, 0xd280, 0xdd32, 0xfc8e, 0x33b, 0x1, 0x0);
        gbc.writeMem(0x2b39, { 0x3e, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2250);
        EXPECT(gbc.pc(), 0x2b3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0077
        gbc.setState(0x6aae, 0x698f, 0x4710, 0xd341, 0x7fa3, 0x87c3, 0x0, 0x1);
        gbc.writeMem(0x6aae, { 0x3e, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x698f);
        EXPECT(gbc.pc(), 0x6ab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0078
        gbc.setState(0x9873, 0x174e, 0x30d0, 0xe669, 0x6b60, 0xe194, 0x1, 0x0);
        gbc.writeMem(0x9873, { 0x3e, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x174e);
        EXPECT(gbc.pc(), 0x9875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9873), 0x3e);
        EXPECT(gbc.readMem(0x9874), 0x92);
        // 3E 0079
        gbc.setState(0xc4d, 0xc67b, 0x3990, 0x7d08, 0x34c3, 0x5d44, 0x1, 0x1);
        gbc.writeMem(0xc4d, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc67b);
        EXPECT(gbc.pc(), 0xc4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 007A
        gbc.setState(0x2be8, 0x7faf, 0xf890, 0x64d7, 0xd6f1, 0x6e85, 0x1, 0x1);
        gbc.writeMem(0x2be8, { 0x3e, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x7faf);
        EXPECT(gbc.pc(), 0x2bea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 007B
        gbc.setState(0x8f6, 0x781b, 0x3880, 0x7131, 0x7524, 0xf235, 0x0, 0x0);
        gbc.writeMem(0x8f6, { 0x3e, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x781b);
        EXPECT(gbc.pc(), 0x8f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 007C
        gbc.setState(0x8c99, 0xf28, 0x3f80, 0x380a, 0xa7b3, 0xe321, 0x0, 0x0);
        gbc.writeMem(0x8c99, { 0x3e, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf28);
        EXPECT(gbc.pc(), 0x8c9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c99), 0x3e);
        EXPECT(gbc.readMem(0x8c9a), 0xec);
        // 3E 007D
        gbc.setState(0xe94a, 0x45c6, 0xaf40, 0x1cb6, 0xfe1d, 0xc242, 0x0, 0x1);
        gbc.writeMem(0xe94a, { 0x3e, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x45c6);
        EXPECT(gbc.pc(), 0xe94c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe94a), 0x3e);
        EXPECT(gbc.readMem(0xe94b), 0x6e);
        // 3E 007E
        gbc.setState(0xa243, 0x59fd, 0x1e00, 0x5471, 0x4a29, 0x8e87, 0x1, 0x0);
        gbc.writeMem(0xa243, { 0x3e, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x59fd);
        EXPECT(gbc.pc(), 0xa245);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa243), 0x3e);
        EXPECT(gbc.readMem(0xa244), 0xf9);
        // 3E 0080
        gbc.setState(0x845, 0x7f73, 0x6c0, 0x289f, 0x130c, 0x9c5c, 0x1, 0x0);
        gbc.writeMem(0x845, { 0x3e, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7f73);
        EXPECT(gbc.pc(), 0x847);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0081
        gbc.setState(0x5f8d, 0x3928, 0x2500, 0x5a0b, 0xc4a, 0xa7ad, 0x0, 0x1);
        gbc.writeMem(0x5f8d, { 0x3e, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3928);
        EXPECT(gbc.pc(), 0x5f8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0082
        gbc.setState(0x89d1, 0x26f6, 0x74d0, 0xb8f2, 0x8708, 0xf161, 0x0, 0x0);
        gbc.writeMem(0x89d1, { 0x3e, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x26f6);
        EXPECT(gbc.pc(), 0x89d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89d1), 0x3e);
        EXPECT(gbc.readMem(0x89d2), 0xac);
        // 3E 0083
        gbc.setState(0xdc82, 0xed81, 0x7c0, 0x45e8, 0x64ff, 0x2ca4, 0x1, 0x0);
        gbc.writeMem(0xdc82, { 0x3e, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xed81);
        EXPECT(gbc.pc(), 0xdc84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc82), 0x3e);
        EXPECT(gbc.readMem(0xdc83), 0xc6);
        // 3E 0084
        gbc.setState(0xc0aa, 0x8fea, 0xa2f0, 0xcd89, 0xfea4, 0xb9d9, 0x1, 0x0);
        gbc.writeMem(0xc0aa, { 0x3e, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8fea);
        EXPECT(gbc.pc(), 0xc0ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0aa), 0x3e);
        EXPECT(gbc.readMem(0xc0ab), 0x2e);
        // 3E 0085
        gbc.setState(0x1813, 0xa86a, 0xb9d0, 0x6a90, 0x377d, 0xbbfc, 0x1, 0x0);
        gbc.writeMem(0x1813, { 0x3e, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xa86a);
        EXPECT(gbc.pc(), 0x1815);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0086
        gbc.setState(0xd0f2, 0x415f, 0x6fd0, 0x177, 0x5a79, 0x61c1, 0x0, 0x0);
        gbc.writeMem(0xd0f2, { 0x3e, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x415f);
        EXPECT(gbc.pc(), 0xd0f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0f2), 0x3e);
        EXPECT(gbc.readMem(0xd0f3), 0x6);
        // 3E 0087
        gbc.setState(0xe2d2, 0x26c, 0x1e90, 0xde21, 0xf803, 0x9363, 0x1, 0x0);
        gbc.writeMem(0xe2d2, { 0x3e, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x26c);
        EXPECT(gbc.pc(), 0xe2d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2d2), 0x3e);
        EXPECT(gbc.readMem(0xe2d3), 0xab);
        // 3E 0088
        gbc.setState(0x78f6, 0xbbb8, 0x9af0, 0x864d, 0xd801, 0xdaca, 0x1, 0x0);
        gbc.writeMem(0x78f6, { 0x3e, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xbbb8);
        EXPECT(gbc.pc(), 0x78f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0089
        gbc.setState(0x9a79, 0x69a5, 0x1510, 0x4fae, 0x4102, 0x3338, 0x0, 0x1);
        gbc.writeMem(0x9a79, { 0x3e, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x69a5);
        EXPECT(gbc.pc(), 0x9a7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a79), 0x3e);
        EXPECT(gbc.readMem(0x9a7a), 0xae);
        // 3E 008A
        gbc.setState(0x4b66, 0xa536, 0x8ee0, 0x7ec9, 0x34a9, 0x9346, 0x0, 0x1);
        gbc.writeMem(0x4b66, { 0x3e, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa536);
        EXPECT(gbc.pc(), 0x4b68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 008B
        gbc.setState(0xa1ab, 0xb403, 0x2a70, 0x72fa, 0xa8ce, 0x90d, 0x1, 0x0);
        gbc.writeMem(0xa1ab, { 0x3e, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb403);
        EXPECT(gbc.pc(), 0xa1ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ab), 0x3e);
        EXPECT(gbc.readMem(0xa1ac), 0x2f);
        // 3E 008C
        gbc.setState(0x3d1a, 0xd6ae, 0xc5f0, 0x6d0b, 0x9970, 0x6dbb, 0x0, 0x1);
        gbc.writeMem(0x3d1a, { 0x3e, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd6ae);
        EXPECT(gbc.pc(), 0x3d1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 008D
        gbc.setState(0xb561, 0x8273, 0xb820, 0xa44b, 0xb652, 0x97e4, 0x1, 0x1);
        gbc.writeMem(0xb561, { 0x3e, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8273);
        EXPECT(gbc.pc(), 0xb563);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb561), 0x3e);
        EXPECT(gbc.readMem(0xb562), 0xfa);
        // 3E 008E
        gbc.setState(0xae3b, 0xff86, 0xbe50, 0xe6db, 0x64a8, 0x48e2, 0x0, 0x1);
        gbc.writeMem(0xae3b, { 0x3e, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xff86);
        EXPECT(gbc.pc(), 0xae3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae3b), 0x3e);
        EXPECT(gbc.readMem(0xae3c), 0x47);
        // 3E 008F
        gbc.setState(0xc36b, 0x2aa7, 0x9040, 0x933, 0xa773, 0xe4b4, 0x0, 0x0);
        gbc.writeMem(0xc36b, { 0x3e, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2aa7);
        EXPECT(gbc.pc(), 0xc36d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc36b), 0x3e);
        EXPECT(gbc.readMem(0xc36c), 0xe8);
        // 3E 0090
        gbc.setState(0x83c5, 0xd08, 0x7ac0, 0xf869, 0xd73d, 0xe2c7, 0x1, 0x1);
        gbc.writeMem(0x83c5, { 0x3e, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd08);
        EXPECT(gbc.pc(), 0x83c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83c5), 0x3e);
        EXPECT(gbc.readMem(0x83c6), 0x20);
        // 3E 0091
        gbc.setState(0x2ba7, 0x3c78, 0x21b0, 0x70d5, 0x32cc, 0xfa8e, 0x1, 0x1);
        gbc.writeMem(0x2ba7, { 0x3e, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3c78);
        EXPECT(gbc.pc(), 0x2ba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0092
        gbc.setState(0xd05e, 0x95bc, 0x8c00, 0xce30, 0xd994, 0x174b, 0x0, 0x1);
        gbc.writeMem(0xd05e, { 0x3e, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x95bc);
        EXPECT(gbc.pc(), 0xd060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd05e), 0x3e);
        EXPECT(gbc.readMem(0xd05f), 0x84);
        // 3E 0093
        gbc.setState(0xab86, 0xf7fc, 0x16d0, 0xd0d3, 0x7cdc, 0x577f, 0x0, 0x1);
        gbc.writeMem(0xab86, { 0x3e, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf7fc);
        EXPECT(gbc.pc(), 0xab88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab86), 0x3e);
        EXPECT(gbc.readMem(0xab87), 0xdb);
        // 3E 0094
        gbc.setState(0x4291, 0x7820, 0xb720, 0x33b8, 0x4985, 0x8fb0, 0x1, 0x0);
        gbc.writeMem(0x4291, { 0x3e, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7820);
        EXPECT(gbc.pc(), 0x4293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0095
        gbc.setState(0xcb24, 0x48b1, 0xb6f0, 0x3164, 0x7572, 0x4f0f, 0x1, 0x1);
        gbc.writeMem(0xcb24, { 0x3e, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x48b1);
        EXPECT(gbc.pc(), 0xcb26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb24), 0x3e);
        EXPECT(gbc.readMem(0xcb25), 0x4d);
        // 3E 0096
        gbc.setState(0xb217, 0x4d06, 0xdf40, 0x1052, 0xdde0, 0xa54f, 0x0, 0x0);
        gbc.writeMem(0xb217, { 0x3e, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4d06);
        EXPECT(gbc.pc(), 0xb219);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb217), 0x3e);
        EXPECT(gbc.readMem(0xb218), 0xd0);
        // 3E 0097
        gbc.setState(0x7ca, 0x9de5, 0x8e80, 0xded8, 0xf852, 0x87c0, 0x0, 0x1);
        gbc.writeMem(0x7ca, { 0x3e, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9de5);
        EXPECT(gbc.pc(), 0x7cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0098
        gbc.setState(0x58ac, 0x573d, 0x99f0, 0x5a8, 0x7a85, 0xa0fd, 0x0, 0x1);
        gbc.writeMem(0x58ac, { 0x3e, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x573d);
        EXPECT(gbc.pc(), 0x58ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 009A
        gbc.setState(0xb8f6, 0x624e, 0x5be0, 0xd59c, 0xe42e, 0xf30c, 0x0, 0x1);
        gbc.writeMem(0xb8f6, { 0x3e, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x624e);
        EXPECT(gbc.pc(), 0xb8f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8f6), 0x3e);
        EXPECT(gbc.readMem(0xb8f7), 0x60);
        // 3E 009B
        gbc.setState(0xf7f, 0xeb0a, 0x8ad0, 0x3493, 0xb2fc, 0xef8a, 0x0, 0x0);
        gbc.writeMem(0xf7f, { 0x3e, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xeb0a);
        EXPECT(gbc.pc(), 0xf81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 009C
        gbc.setState(0x371f, 0x6ed1, 0x6b40, 0xf37d, 0x9faf, 0x8cc0, 0x0, 0x1);
        gbc.writeMem(0x371f, { 0x3e, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6ed1);
        EXPECT(gbc.pc(), 0x3721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 009E
        gbc.setState(0x3621, 0x1934, 0x7310, 0x2e3a, 0xcba1, 0x888e, 0x1, 0x0);
        gbc.writeMem(0x3621, { 0x3e, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1934);
        EXPECT(gbc.pc(), 0x3623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 009F
        gbc.setState(0x11d6, 0x1178, 0x2b20, 0x4145, 0x7797, 0x7931, 0x0, 0x0);
        gbc.writeMem(0x11d6, { 0x3e, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x1178);
        EXPECT(gbc.pc(), 0x11d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 00A0
        gbc.setState(0x5f8b, 0x9e76, 0xa3c0, 0xc6b2, 0x5625, 0x3715, 0x0, 0x1);
        gbc.writeMem(0x5f8b, { 0x3e, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9e76);
        EXPECT(gbc.pc(), 0x5f8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 00A2
        gbc.setState(0xae62, 0xd270, 0x17b0, 0xcac2, 0xd8a2, 0xc0f, 0x0, 0x0);
        gbc.writeMem(0xae62, { 0x3e, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd270);
        EXPECT(gbc.pc(), 0xae64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae62), 0x3e);
        EXPECT(gbc.readMem(0xae63), 0x96);
        // 3E 00A3
        gbc.setState(0x6024, 0xad27, 0x3cd0, 0x90a9, 0x5ebe, 0x92e1, 0x0, 0x0);
        gbc.writeMem(0x6024, { 0x3e, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xad27);
        EXPECT(gbc.pc(), 0x6026);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 00A4
        gbc.setState(0x20af, 0xaad9, 0xe990, 0x787, 0xd11c, 0x2b0e, 0x0, 0x0);
        gbc.writeMem(0x20af, { 0x3e, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xaad9);
        EXPECT(gbc.pc(), 0x20b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 00A5
        gbc.setState(0x6162, 0xa6e3, 0x4140, 0xec1d, 0xec0c, 0x20be, 0x0, 0x0);
        gbc.writeMem(0x6162, { 0x3e, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xa6e3);
        EXPECT(gbc.pc(), 0x6164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 00A6
        gbc.setState(0xca78, 0x22dd, 0xc7b0, 0xbcc5, 0x9b, 0x41f2, 0x1, 0x1);
        gbc.writeMem(0xca78, { 0x3e, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x22dd);
        EXPECT(gbc.pc(), 0xca7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca78), 0x3e);
        EXPECT(gbc.readMem(0xca79), 0x11);
        // 3E 00A7
        gbc.setState(0x4a8f, 0xb296, 0xbd50, 0xa468, 0xf64c, 0x6c95, 0x0, 0x1);
        gbc.writeMem(0x4a8f, { 0x3e, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb296);
        EXPECT(gbc.pc(), 0x4a91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 00A8
        gbc.setState(0x139b, 0x1fab, 0x5a20, 0xc1db, 0xf72e, 0x4b41, 0x1, 0x1);
        gbc.writeMem(0x139b, { 0x3e, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1fab);
        EXPECT(gbc.pc(), 0x139d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 00A9
        gbc.setState(0x3a1c, 0x818d, 0x7c40, 0x5d55, 0x3a0c, 0x7f6c, 0x1, 0x1);
        gbc.writeMem(0x3a1c, { 0x3e, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x818d);
        EXPECT(gbc.pc(), 0x3a1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 00AB
        gbc.setState(0x4ca4, 0xd6a2, 0xf8f0, 0xdf23, 0xc2bb, 0xd00, 0x0, 0x0);
        gbc.writeMem(0x4ca4, { 0x3e, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd6a2);
        EXPECT(gbc.pc(), 0x4ca6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 00AC
        gbc.setState(0xd977, 0xac80, 0x5f50, 0xf84b, 0x2a13, 0x3b64, 0x1, 0x0);
        gbc.writeMem(0xd977, { 0x3e, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xac80);
        EXPECT(gbc.pc(), 0xd979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd977), 0x3e);
        EXPECT(gbc.readMem(0xd978), 0x56);
        // 3E 00AF
        gbc.setState(0xe944, 0x8a58, 0xf660, 0x2ece, 0x2d8a, 0x6ebf, 0x0, 0x0);
        gbc.writeMem(0xe944, { 0x3e, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8a58);
        EXPECT(gbc.pc(), 0xe946);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe944), 0x3e);
        EXPECT(gbc.readMem(0xe945), 0x5e);
        // 3E 00B0
        gbc.setState(0x4c34, 0xbdb5, 0x4710, 0x7dd0, 0x75e2, 0x864a, 0x0, 0x0);
        gbc.writeMem(0x4c34, { 0x3e, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xbdb5);
        EXPECT(gbc.pc(), 0x4c36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 00B1
        gbc.setState(0x9f2a, 0xb529, 0x3800, 0xa4c, 0x7815, 0xae10, 0x1, 0x1);
        gbc.writeMem(0x9f2a, { 0x3e, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb529);
        EXPECT(gbc.pc(), 0x9f2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f2a), 0x3e);
        EXPECT(gbc.readMem(0x9f2b), 0xc2);
        // 3E 00B2
        gbc.setState(0xb30f, 0x74db, 0x65e0, 0x496a, 0x2aa8, 0x7eba, 0x1, 0x0);
        gbc.writeMem(0xb30f, { 0x3e, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x74db);
        EXPECT(gbc.pc(), 0xb311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb30f), 0x3e);
        EXPECT(gbc.readMem(0xb310), 0x19);
        // 3E 00B3
        gbc.setState(0x6aa8, 0x7f34, 0xe9f0, 0xbcac, 0x1b63, 0x7946, 0x1, 0x0);
        gbc.writeMem(0x6aa8, { 0x3e, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7f34);
        EXPECT(gbc.pc(), 0x6aaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 00B4
        gbc.setState(0x6e69, 0x8c09, 0x8dc0, 0x25a9, 0xeb7b, 0x2df4, 0x0, 0x1);
        gbc.writeMem(0x6e69, { 0x3e, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8c09);
        EXPECT(gbc.pc(), 0x6e6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 00B5
        gbc.setState(0xd62f, 0xd109, 0x96d0, 0xd660, 0xeba1, 0xd6a1, 0x0, 0x0);
        gbc.writeMem(0xd62f, { 0x3e, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd109);
        EXPECT(gbc.pc(), 0xd631);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd62f), 0x3e);
        EXPECT(gbc.readMem(0xd630), 0xd);
        // 3E 00B6
        gbc.setState(0xb508, 0xb009, 0x4f40, 0xafa4, 0x10a5, 0xbdba, 0x0, 0x1);
        gbc.writeMem(0xb508, { 0x3e, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb009);
        EXPECT(gbc.pc(), 0xb50a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb508), 0x3e);
        EXPECT(gbc.readMem(0xb509), 0xea);
        // 3E 00B7
        gbc.setState(0x3b09, 0x6291, 0x7790, 0x8b3c, 0x58ec, 0x6499, 0x0, 0x0);
        gbc.writeMem(0x3b09, { 0x3e, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x6291);
        EXPECT(gbc.pc(), 0x3b0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 00B8
        gbc.setState(0x5ce6, 0x46f5, 0xeb50, 0xec25, 0xd9aa, 0x29eb, 0x0, 0x0);
        gbc.writeMem(0x5ce6, { 0x3e, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x46f5);
        EXPECT(gbc.pc(), 0x5ce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 00B9
        gbc.setState(0x2573, 0xeaa5, 0xa3d0, 0x6b20, 0xfc47, 0x6484, 0x1, 0x1);
        gbc.writeMem(0x2573, { 0x3e, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xeaa5);
        EXPECT(gbc.pc(), 0x2575);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 00BA
        gbc.setState(0xbc73, 0xd0a1, 0x2290, 0xae65, 0xea60, 0x8a4f, 0x0, 0x1);
        gbc.writeMem(0xbc73, { 0x3e, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd0a1);
        EXPECT(gbc.pc(), 0xbc75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc73), 0x3e);
        EXPECT(gbc.readMem(0xbc74), 0x9d);
        // 3E 00BB
        gbc.setState(0x2c08, 0x8fb0, 0xed00, 0x3f4, 0x5a7b, 0x8b03, 0x0, 0x0);
        gbc.writeMem(0x2c08, { 0x3e, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8fb0);
        EXPECT(gbc.pc(), 0x2c0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 00BC
        gbc.setState(0xce91, 0x5bcd, 0xb990, 0xe5, 0x74e8, 0xfc07, 0x1, 0x1);
        gbc.writeMem(0xce91, { 0x3e, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5bcd);
        EXPECT(gbc.pc(), 0xce93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce91), 0x3e);
        EXPECT(gbc.readMem(0xce92), 0x2c);
        // 3E 00BD
        gbc.setState(0xb70e, 0x3466, 0xa4a0, 0x9c82, 0x5679, 0x79a, 0x0, 0x0);
        gbc.writeMem(0xb70e, { 0x3e, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x3466);
        EXPECT(gbc.pc(), 0xb710);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb70e), 0x3e);
        EXPECT(gbc.readMem(0xb70f), 0x8);
        // 3E 00BE
        gbc.setState(0x66cd, 0x3d5b, 0x8700, 0x3f9f, 0x9da3, 0xa4f0, 0x0, 0x0);
        gbc.writeMem(0x66cd, { 0x3e, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3d5b);
        EXPECT(gbc.pc(), 0x66cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 00BF
        gbc.setState(0x6f9d, 0x6d57, 0x6970, 0x8a0b, 0xd169, 0xdaf7, 0x0, 0x0);
        gbc.writeMem(0x6f9d, { 0x3e, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6d57);
        EXPECT(gbc.pc(), 0x6f9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 00C0
        gbc.setState(0xa267, 0x976, 0x9370, 0x38a, 0xab58, 0x8ca9, 0x0, 0x0);
        gbc.writeMem(0xa267, { 0x3e, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x976);
        EXPECT(gbc.pc(), 0xa269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa267), 0x3e);
        EXPECT(gbc.readMem(0xa268), 0x8);
        // 3E 00C1
        gbc.setState(0xc2a0, 0xfcf0, 0xb7c0, 0xa36c, 0xd534, 0xbd90, 0x0, 0x1);
        gbc.writeMem(0xc2a0, { 0x3e, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xfcf0);
        EXPECT(gbc.pc(), 0xc2a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2a0), 0x3e);
        EXPECT(gbc.readMem(0xc2a1), 0xda);
        // 3E 00C2
        gbc.setState(0xef4f, 0x7a0f, 0x3420, 0xab28, 0xac3c, 0xf28e, 0x0, 0x0);
        gbc.writeMem(0xef4f, { 0x3e, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7a0f);
        EXPECT(gbc.pc(), 0xef51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef4f), 0x3e);
        EXPECT(gbc.readMem(0xef50), 0x8f);
        // 3E 00C3
        gbc.setState(0x9a87, 0xea52, 0x4290, 0x4ed, 0xcb94, 0x99b, 0x1, 0x0);
        gbc.writeMem(0x9a87, { 0x3e, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xea52);
        EXPECT(gbc.pc(), 0x9a89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a87), 0x3e);
        EXPECT(gbc.readMem(0x9a88), 0x55);
        // 3E 00C4
        gbc.setState(0x2cc7, 0x67d, 0xd560, 0x7387, 0x8476, 0xf706, 0x0, 0x0);
        gbc.writeMem(0x2cc7, { 0x3e, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x67d);
        EXPECT(gbc.pc(), 0x2cc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 00C5
        gbc.setState(0x2ce2, 0x11a3, 0x9d30, 0xb313, 0x31bf, 0x595, 0x1, 0x1);
        gbc.writeMem(0x2ce2, { 0x3e, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x11a3);
        EXPECT(gbc.pc(), 0x2ce4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 00C6
        gbc.setState(0xcdf7, 0xf565, 0xa0d0, 0x4244, 0x9416, 0x1b15, 0x1, 0x0);
        gbc.writeMem(0xcdf7, { 0x3e, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xf565);
        EXPECT(gbc.pc(), 0xcdf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdf7), 0x3e);
        EXPECT(gbc.readMem(0xcdf8), 0x2d);
        // 3E 00C8
        gbc.setState(0x42ca, 0xde8a, 0xaae0, 0xcb41, 0x87b2, 0xa53d, 0x0, 0x1);
        gbc.writeMem(0x42ca, { 0x3e, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xde8a);
        EXPECT(gbc.pc(), 0x42cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 00C9
        gbc.setState(0x308d, 0x1b92, 0x8b40, 0xb3a3, 0xbef5, 0x3fde, 0x1, 0x1);
        gbc.writeMem(0x308d, { 0x3e, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1b92);
        EXPECT(gbc.pc(), 0x308f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 00CA
        gbc.setState(0x7baa, 0x33ae, 0x4c70, 0xa79d, 0x5bab, 0xcb84, 0x1, 0x1);
        gbc.writeMem(0x7baa, { 0x3e, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x33ae);
        EXPECT(gbc.pc(), 0x7bac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 00CB
        gbc.setState(0x15e1, 0xe43f, 0x45d0, 0x94e6, 0xe7f, 0x1531, 0x1, 0x0);
        gbc.writeMem(0x15e1, { 0x3e, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe43f);
        EXPECT(gbc.pc(), 0x15e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 00CC
        gbc.setState(0x9a6b, 0xc6bb, 0x8770, 0x90be, 0x63aa, 0x6205, 0x0, 0x1);
        gbc.writeMem(0x9a6b, { 0x3e, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc6bb);
        EXPECT(gbc.pc(), 0x9a6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a6b), 0x3e);
        EXPECT(gbc.readMem(0x9a6c), 0x30);
        // 3E 00CD
        gbc.setState(0x2d94, 0xd898, 0x5310, 0x2ad2, 0xb6a6, 0x61d4, 0x1, 0x0);
        gbc.writeMem(0x2d94, { 0x3e, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd898);
        EXPECT(gbc.pc(), 0x2d96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 00CE
        gbc.setState(0xc774, 0x53fc, 0xe250, 0x34a2, 0xf8e1, 0x453c, 0x0, 0x1);
        gbc.writeMem(0xc774, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x53fc);
        EXPECT(gbc.pc(), 0xc776);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc774), 0x3e);
        EXPECT(gbc.readMem(0xc775), 0x3b);
        // 3E 00CF
        gbc.setState(0xe17e, 0x9e67, 0x5930, 0x9e29, 0x26b9, 0x7591, 0x0, 0x1);
        gbc.writeMem(0xe17e, { 0x3e, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9e67);
        EXPECT(gbc.pc(), 0xe180);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe17e), 0x3e);
        EXPECT(gbc.readMem(0xe17f), 0x32);
        // 3E 00D0
        gbc.setState(0x2c48, 0xc634, 0x4a50, 0xe24e, 0x9509, 0x60b8, 0x0, 0x0);
        gbc.writeMem(0x2c48, { 0x3e, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc634);
        EXPECT(gbc.pc(), 0x2c4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 00D1
        gbc.setState(0xc061, 0x9c4, 0xfbb0, 0x8e7c, 0x1479, 0xd164, 0x0, 0x0);
        gbc.writeMem(0xc061, { 0x3e, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9c4);
        EXPECT(gbc.pc(), 0xc063);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc061), 0x3e);
        EXPECT(gbc.readMem(0xc062), 0xe6);
        // 3E 00D2
        gbc.setState(0xe008, 0x8722, 0xedb0, 0xeabb, 0x674, 0x6ed3, 0x1, 0x0);
        gbc.writeMem(0xe008, { 0x3e, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x8722);
        EXPECT(gbc.pc(), 0xe00a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe008), 0x3e);
        EXPECT(gbc.readMem(0xe009), 0x61);
        // 3E 00D3
        gbc.setState(0xce4c, 0xba1c, 0x5640, 0x34c5, 0xb978, 0xa54, 0x0, 0x0);
        gbc.writeMem(0xce4c, { 0x3e, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xba1c);
        EXPECT(gbc.pc(), 0xce4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce4c), 0x3e);
        EXPECT(gbc.readMem(0xce4d), 0xf2);
        // 3E 00D4
        gbc.setState(0x2821, 0xeea2, 0xdaf0, 0x316a, 0x939a, 0x612a, 0x0, 0x0);
        gbc.writeMem(0x2821, { 0x3e, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xeea2);
        EXPECT(gbc.pc(), 0x2823);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 00D5
        gbc.setState(0x37e4, 0xf1c3, 0x1f00, 0xa35b, 0xab5, 0x6513, 0x1, 0x0);
        gbc.writeMem(0x37e4, { 0x3e, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf1c3);
        EXPECT(gbc.pc(), 0x37e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 00D6
        gbc.setState(0x991b, 0xb58d, 0xa590, 0xf6c9, 0xac2b, 0x5ccf, 0x1, 0x0);
        gbc.writeMem(0x991b, { 0x3e, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb58d);
        EXPECT(gbc.pc(), 0x991d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x991b), 0x3e);
        EXPECT(gbc.readMem(0x991c), 0x15);
        // 3E 00D7
        gbc.setState(0x4173, 0x5938, 0x580, 0xe666, 0x2a7, 0xc76f, 0x0, 0x1);
        gbc.writeMem(0x4173, { 0x3e, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5938);
        EXPECT(gbc.pc(), 0x4175);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 00D8
        gbc.setState(0x80fc, 0x8316, 0xa0, 0xc6a7, 0xe86, 0x4ccb, 0x1, 0x0);
        gbc.writeMem(0x80fc, { 0x3e, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8316);
        EXPECT(gbc.pc(), 0x80fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80fc), 0x3e);
        EXPECT(gbc.readMem(0x80fd), 0x7f);
        // 3E 00D9
        gbc.setState(0x6840, 0xb4a0, 0x58a0, 0x1073, 0xaf45, 0x5027, 0x1, 0x1);
        gbc.writeMem(0x6840, { 0x3e, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb4a0);
        EXPECT(gbc.pc(), 0x6842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 00DA
        gbc.setState(0x6365, 0x1db4, 0xd5d0, 0xf1a5, 0x4cc7, 0x895c, 0x0, 0x0);
        gbc.writeMem(0x6365, { 0x3e, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1db4);
        EXPECT(gbc.pc(), 0x6367);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 00DB
        gbc.setState(0x6058, 0xbeff, 0x3de0, 0xd664, 0x8954, 0x5047, 0x1, 0x1);
        gbc.writeMem(0x6058, { 0x3e, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xbeff);
        EXPECT(gbc.pc(), 0x605a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 00DC
        gbc.setState(0xbf39, 0x59db, 0x4ec0, 0xc4d4, 0x82ff, 0x66dd, 0x1, 0x1);
        gbc.writeMem(0xbf39, { 0x3e, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x59db);
        EXPECT(gbc.pc(), 0xbf3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf39), 0x3e);
        EXPECT(gbc.readMem(0xbf3a), 0x9a);
        // 3E 00DD
        gbc.setState(0xcddb, 0x49ec, 0x4960, 0xf0b4, 0x92a5, 0xbf4, 0x1, 0x1);
        gbc.writeMem(0xcddb, { 0x3e, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x49ec);
        EXPECT(gbc.pc(), 0xcddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcddb), 0x3e);
        EXPECT(gbc.readMem(0xcddc), 0x20);
        // 3E 00DE
        gbc.setState(0xd7cd, 0x3173, 0xd290, 0xcb3c, 0x136, 0x1dfe, 0x0, 0x1);
        gbc.writeMem(0xd7cd, { 0x3e, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3173);
        EXPECT(gbc.pc(), 0xd7cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7cd), 0x3e);
        EXPECT(gbc.readMem(0xd7ce), 0x79);
        // 3E 00DF
        gbc.setState(0xc56b, 0x6db8, 0x5290, 0xf9a4, 0x769e, 0xb3c2, 0x0, 0x0);
        gbc.writeMem(0xc56b, { 0x3e, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6db8);
        EXPECT(gbc.pc(), 0xc56d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc56b), 0x3e);
        EXPECT(gbc.readMem(0xc56c), 0x33);
        // 3E 00E0
        gbc.setState(0xc196, 0x7a52, 0xd2f0, 0xdb07, 0xb542, 0x9b1, 0x0, 0x1);
        gbc.writeMem(0xc196, { 0x3e, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7a52);
        EXPECT(gbc.pc(), 0xc198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc196), 0x3e);
        EXPECT(gbc.readMem(0xc197), 0x4b);
        // 3E 00E1
        gbc.setState(0x44e2, 0xcacf, 0x21c0, 0xcf78, 0xaf44, 0xdb42, 0x0, 0x0);
        gbc.writeMem(0x44e2, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xcacf);
        EXPECT(gbc.pc(), 0x44e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 00E2
        gbc.setState(0xcae6, 0x6ea8, 0xc520, 0x95d2, 0x5f5f, 0x7650, 0x0, 0x0);
        gbc.writeMem(0xcae6, { 0x3e, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6ea8);
        EXPECT(gbc.pc(), 0xcae8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcae6), 0x3e);
        EXPECT(gbc.readMem(0xcae7), 0x18);
        // 3E 00E3
        gbc.setState(0x1ccf, 0x22ad, 0xf5c0, 0xbd22, 0x1fbb, 0x973b, 0x0, 0x1);
        gbc.writeMem(0x1ccf, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x22ad);
        EXPECT(gbc.pc(), 0x1cd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 00E5
        gbc.setState(0x350a, 0x3e15, 0xd870, 0xf8a1, 0x5379, 0x7ed0, 0x0, 0x1);
        gbc.writeMem(0x350a, { 0x3e, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3e15);
        EXPECT(gbc.pc(), 0x350c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 00E6
        gbc.setState(0x4bdb, 0xcb11, 0x5230, 0xfdd1, 0xdc78, 0x217d, 0x1, 0x0);
        gbc.writeMem(0x4bdb, { 0x3e, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xcb11);
        EXPECT(gbc.pc(), 0x4bdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 00E7
        gbc.setState(0x3c8b, 0xe26c, 0x3b60, 0xdbf3, 0xc796, 0xa7dc, 0x1, 0x0);
        gbc.writeMem(0x3c8b, { 0x3e, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe26c);
        EXPECT(gbc.pc(), 0x3c8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 00E8
        gbc.setState(0x57b2, 0xd175, 0x6800, 0x2718, 0xb753, 0x3138, 0x1, 0x0);
        gbc.writeMem(0x57b2, { 0x3e, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xd175);
        EXPECT(gbc.pc(), 0x57b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 00E9
        gbc.setState(0x9a7f, 0x3414, 0x2df0, 0x44f4, 0xf814, 0xe7e7, 0x0, 0x0);
        gbc.writeMem(0x9a7f, { 0x3e, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3414);
        EXPECT(gbc.pc(), 0x9a81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a7f), 0x3e);
        EXPECT(gbc.readMem(0x9a80), 0x5a);
        // 3E 00EA
        gbc.setState(0x5b94, 0x30ed, 0x1e70, 0x9f7d, 0xe22e, 0x9a3d, 0x0, 0x0);
        gbc.writeMem(0x5b94, { 0x3e, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x30ed);
        EXPECT(gbc.pc(), 0x5b96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 00EB
        gbc.setState(0x67d3, 0xe76b, 0xe980, 0x1759, 0x13a3, 0x7a11, 0x0, 0x0);
        gbc.writeMem(0x67d3, { 0x3e, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xe76b);
        EXPECT(gbc.pc(), 0x67d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 00EC
        gbc.setState(0x356d, 0xa5fc, 0xe660, 0x27db, 0xc4f6, 0x265a, 0x0, 0x0);
        gbc.writeMem(0x356d, { 0x3e, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa5fc);
        EXPECT(gbc.pc(), 0x356f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 00ED
        gbc.setState(0x7c6f, 0x8732, 0x2660, 0xd6a6, 0x167a, 0xc636, 0x0, 0x0);
        gbc.writeMem(0x7c6f, { 0x3e, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x8732);
        EXPECT(gbc.pc(), 0x7c71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 00EE
        gbc.setState(0x3a10, 0x2eae, 0xeec0, 0x8eca, 0x57a5, 0x518a, 0x1, 0x0);
        gbc.writeMem(0x3a10, { 0x3e, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2eae);
        EXPECT(gbc.pc(), 0x3a12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 00EF
        gbc.setState(0xbef0, 0x42d9, 0xf8d0, 0xf07f, 0xa9d6, 0xaee3, 0x1, 0x1);
        gbc.writeMem(0xbef0, { 0x3e, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x42d9);
        EXPECT(gbc.pc(), 0xbef2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbef0), 0x3e);
        EXPECT(gbc.readMem(0xbef1), 0x93);
        // 3E 00F0
        gbc.setState(0x2482, 0xdf82, 0x60b0, 0x76e9, 0xf95b, 0xb866, 0x0, 0x1);
        gbc.writeMem(0x2482, { 0x3e, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xdf82);
        EXPECT(gbc.pc(), 0x2484);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 00F1
        gbc.setState(0xb42c, 0xf4c0, 0x230, 0x5f25, 0x9bd3, 0x55eb, 0x0, 0x0);
        gbc.writeMem(0xb42c, { 0x3e, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xf4c0);
        EXPECT(gbc.pc(), 0xb42e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb42c), 0x3e);
        EXPECT(gbc.readMem(0xb42d), 0x92);
        // 3E 00F3
        gbc.setState(0x9e21, 0xe041, 0x8190, 0x7356, 0x43dc, 0x5687, 0x0, 0x1);
        gbc.writeMem(0x9e21, { 0x3e, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe041);
        EXPECT(gbc.pc(), 0x9e23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e21), 0x3e);
        EXPECT(gbc.readMem(0x9e22), 0x96);
        // 3E 00F4
        gbc.setState(0x8a00, 0xf9fa, 0x97f0, 0x207f, 0xabd, 0xac6a, 0x1, 0x0);
        gbc.writeMem(0x8a00, { 0x3e, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xf9fa);
        EXPECT(gbc.pc(), 0x8a02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a00), 0x3e);
        EXPECT(gbc.readMem(0x8a01), 0x1c);
        // 3E 00F5
        gbc.setState(0x1b6f, 0x4599, 0x91f0, 0x7dd0, 0xcd52, 0xe75b, 0x0, 0x0);
        gbc.writeMem(0x1b6f, { 0x3e, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4599);
        EXPECT(gbc.pc(), 0x1b71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 00F6
        gbc.setState(0x181b, 0x15df, 0x1810, 0x345c, 0x8f8a, 0x2035, 0x1, 0x0);
        gbc.writeMem(0x181b, { 0x3e, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x15df);
        EXPECT(gbc.pc(), 0x181d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 00F7
        gbc.setState(0x78ff, 0x6105, 0x91c0, 0xada8, 0xfa9c, 0xeace, 0x0, 0x1);
        gbc.writeMem(0x78ff, { 0x3e, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6105);
        EXPECT(gbc.pc(), 0x7901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 00F8
        gbc.setState(0xad18, 0xc1b7, 0x7a10, 0x49d0, 0x7d1a, 0x4832, 0x0, 0x0);
        gbc.writeMem(0xad18, { 0x3e, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc1b7);
        EXPECT(gbc.pc(), 0xad1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad18), 0x3e);
        EXPECT(gbc.readMem(0xad19), 0x78);
        // 3E 00F9
        gbc.setState(0x4a3, 0x2a15, 0x53c0, 0xd47e, 0xcd90, 0x25ea, 0x1, 0x0);
        gbc.writeMem(0x4a3, { 0x3e, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x2a15);
        EXPECT(gbc.pc(), 0x4a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 00FA
        gbc.setState(0x8a70, 0xed51, 0x4070, 0x59b, 0x55d4, 0xb928, 0x0, 0x0);
        gbc.writeMem(0x8a70, { 0x3e, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xed51);
        EXPECT(gbc.pc(), 0x8a72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a70), 0x3e);
        EXPECT(gbc.readMem(0x8a71), 0xbb);
        // 3E 00FB
        gbc.setState(0xa404, 0x3ab2, 0x8ad0, 0xe8a3, 0xccd8, 0x60ab, 0x1, 0x1);
        gbc.writeMem(0xa404, { 0x3e, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3ab2);
        EXPECT(gbc.pc(), 0xa406);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa404), 0x3e);
        EXPECT(gbc.readMem(0xa405), 0x56);
        // 3E 00FC
        gbc.setState(0x3254, 0xbd6e, 0xeb30, 0x572a, 0x35da, 0x2a4b, 0x1, 0x1);
        gbc.writeMem(0x3254, { 0x3e, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xbd6e);
        EXPECT(gbc.pc(), 0x3256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 00FD
        gbc.setState(0x58b6, 0x5d76, 0x6590, 0x2b8d, 0x15bd, 0x3ade, 0x1, 0x1);
        gbc.writeMem(0x58b6, { 0x3e, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x5d76);
        EXPECT(gbc.pc(), 0x58b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 00FE
        gbc.setState(0x6b0f, 0x26d3, 0xfdc0, 0xfddb, 0x6ba8, 0x8872, 0x0, 0x0);
        gbc.writeMem(0x6b0f, { 0x3e, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x26d3);
        EXPECT(gbc.pc(), 0x6b11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 00FF
        gbc.setState(0x4b05, 0xf5c9, 0x6960, 0x4f29, 0x1fab, 0x1229, 0x0, 0x0);
        gbc.writeMem(0x4b05, { 0x3e, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf5c9);
        EXPECT(gbc.pc(), 0x4b07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0100
        gbc.setState(0x9f79, 0x205, 0x52e0, 0x28a1, 0xcc2b, 0xafd8, 0x0, 0x1);
        gbc.writeMem(0x9f79, { 0x3e, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x205);
        EXPECT(gbc.pc(), 0x9f7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f79), 0x3e);
        EXPECT(gbc.readMem(0x9f7a), 0xcc);
        // 3E 0101
        gbc.setState(0xf35, 0x32b3, 0x7ef0, 0x2ae1, 0x3312, 0x683, 0x0, 0x1);
        gbc.writeMem(0xf35, { 0x3e, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x32b3);
        EXPECT(gbc.pc(), 0xf37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0102
        gbc.setState(0xd6a1, 0x626e, 0x6e90, 0x1c86, 0xba90, 0x59fa, 0x0, 0x1);
        gbc.writeMem(0xd6a1, { 0x3e, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x626e);
        EXPECT(gbc.pc(), 0xd6a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6a1), 0x3e);
        EXPECT(gbc.readMem(0xd6a2), 0x9b);
        // 3E 0103
        gbc.setState(0x25d7, 0x8ab5, 0xa810, 0x3c1e, 0xbb6a, 0xb927, 0x0, 0x0);
        gbc.writeMem(0x25d7, { 0x3e, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8ab5);
        EXPECT(gbc.pc(), 0x25d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0104
        gbc.setState(0xa7ac, 0xd404, 0x8c0, 0x99f8, 0x7591, 0x6f24, 0x1, 0x1);
        gbc.writeMem(0xa7ac, { 0x3e, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd404);
        EXPECT(gbc.pc(), 0xa7ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ac), 0x3e);
        EXPECT(gbc.readMem(0xa7ad), 0x60);
        // 3E 0105
        gbc.setState(0x658c, 0xa56e, 0x19f0, 0x7a8, 0x76b8, 0x47d, 0x1, 0x1);
        gbc.writeMem(0x658c, { 0x3e, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa56e);
        EXPECT(gbc.pc(), 0x658e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0106
        gbc.setState(0xa55e, 0x8fda, 0xbc0, 0xdc27, 0xb87, 0xbbfb, 0x0, 0x1);
        gbc.writeMem(0xa55e, { 0x3e, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x8fda);
        EXPECT(gbc.pc(), 0xa560);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa55e), 0x3e);
        EXPECT(gbc.readMem(0xa55f), 0x32);
        // 3E 0107
        gbc.setState(0x81c2, 0xd1f3, 0x8570, 0x19a3, 0x55ac, 0xdcc1, 0x1, 0x0);
        gbc.writeMem(0x81c2, { 0x3e, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xd1f3);
        EXPECT(gbc.pc(), 0x81c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c2), 0x3e);
        EXPECT(gbc.readMem(0x81c3), 0x51);
        // 3E 0108
        gbc.setState(0x2743, 0x7827, 0x8580, 0xaafa, 0x6611, 0x5db, 0x0, 0x1);
        gbc.writeMem(0x2743, { 0x3e, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7827);
        EXPECT(gbc.pc(), 0x2745);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0109
        gbc.setState(0x21b3, 0xd7f3, 0x4710, 0x5cd2, 0x5750, 0xf851, 0x1, 0x1);
        gbc.writeMem(0x21b3, { 0x3e, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd7f3);
        EXPECT(gbc.pc(), 0x21b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 010A
        gbc.setState(0x6365, 0x78ec, 0x3a00, 0x10e9, 0xbbb4, 0x6ee4, 0x1, 0x1);
        gbc.writeMem(0x6365, { 0x3e, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x78ec);
        EXPECT(gbc.pc(), 0x6367);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 010B
        gbc.setState(0xdc2f, 0x4aa0, 0x2b40, 0x64f, 0xecbf, 0x42bd, 0x0, 0x0);
        gbc.writeMem(0xdc2f, { 0x3e, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x4aa0);
        EXPECT(gbc.pc(), 0xdc31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc2f), 0x3e);
        EXPECT(gbc.readMem(0xdc30), 0x7d);
        // 3E 010C
        gbc.setState(0x4a50, 0xb9d6, 0x5140, 0x2345, 0x4c4b, 0xd0c8, 0x0, 0x1);
        gbc.writeMem(0x4a50, { 0x3e, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb9d6);
        EXPECT(gbc.pc(), 0x4a52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 010E
        gbc.setState(0x8f5e, 0x4ad9, 0xce00, 0xb7cb, 0x5e8f, 0x8f81, 0x0, 0x1);
        gbc.writeMem(0x8f5e, { 0x3e, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4ad9);
        EXPECT(gbc.pc(), 0x8f60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f5e), 0x3e);
        EXPECT(gbc.readMem(0x8f5f), 0x84);
        // 3E 010F
        gbc.setState(0x4b85, 0x8c8c, 0x7eb0, 0x5b98, 0xb14d, 0x48e1, 0x1, 0x1);
        gbc.writeMem(0x4b85, { 0x3e, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x8c8c);
        EXPECT(gbc.pc(), 0x4b87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0110
        gbc.setState(0x5db5, 0x1f90, 0x8650, 0x1cdd, 0xcc0b, 0xb077, 0x0, 0x0);
        gbc.writeMem(0x5db5, { 0x3e, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1f90);
        EXPECT(gbc.pc(), 0x5db7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0111
        gbc.setState(0x5e67, 0x2864, 0xff20, 0x8e46, 0xb54c, 0x5cc6, 0x0, 0x0);
        gbc.writeMem(0x5e67, { 0x3e, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x2864);
        EXPECT(gbc.pc(), 0x5e69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0112
        gbc.setState(0xccd9, 0x18c0, 0x81f0, 0xa3ef, 0x69a2, 0x2c27, 0x0, 0x0);
        gbc.writeMem(0xccd9, { 0x3e, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x18c0);
        EXPECT(gbc.pc(), 0xccdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd9), 0x3e);
        EXPECT(gbc.readMem(0xccda), 0x64);
        // 3E 0113
        gbc.setState(0x8190, 0x9c7a, 0x4e10, 0xd00d, 0x84c0, 0x9015, 0x1, 0x0);
        gbc.writeMem(0x8190, { 0x3e, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9c7a);
        EXPECT(gbc.pc(), 0x8192);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8190), 0x3e);
        EXPECT(gbc.readMem(0x8191), 0x63);
        // 3E 0114
        gbc.setState(0x73e5, 0xf6d5, 0xe6c0, 0xa79, 0x3385, 0x1f8d, 0x0, 0x0);
        gbc.writeMem(0x73e5, { 0x3e, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf6d5);
        EXPECT(gbc.pc(), 0x73e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0115
        gbc.setState(0xa2c6, 0xcd07, 0x8fd0, 0xd4c0, 0x2f4, 0xf49a, 0x1, 0x0);
        gbc.writeMem(0xa2c6, { 0x3e, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xcd07);
        EXPECT(gbc.pc(), 0xa2c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2c6), 0x3e);
        EXPECT(gbc.readMem(0xa2c7), 0x9f);
        // 3E 0116
        gbc.setState(0xb8e5, 0xb8e8, 0xaf10, 0x6826, 0x4793, 0xd73c, 0x1, 0x1);
        gbc.writeMem(0xb8e5, { 0x3e, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb8e8);
        EXPECT(gbc.pc(), 0xb8e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8e5), 0x3e);
        EXPECT(gbc.readMem(0xb8e6), 0xeb);
        // 3E 0117
        gbc.setState(0x6619, 0x3aa1, 0x3420, 0x7dfa, 0x8c48, 0x1245, 0x0, 0x0);
        gbc.writeMem(0x6619, { 0x3e, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3aa1);
        EXPECT(gbc.pc(), 0x661b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0118
        gbc.setState(0x4602, 0xa799, 0x48e0, 0xf6c, 0x605e, 0xa55d, 0x0, 0x0);
        gbc.writeMem(0x4602, { 0x3e, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa799);
        EXPECT(gbc.pc(), 0x4604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0119
        gbc.setState(0x66ef, 0x244d, 0xf430, 0x8996, 0x9c86, 0xe519, 0x0, 0x1);
        gbc.writeMem(0x66ef, { 0x3e, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x244d);
        EXPECT(gbc.pc(), 0x66f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 011A
        gbc.setState(0xdf51, 0x3651, 0xf5b0, 0x1b76, 0x45de, 0x5daa, 0x0, 0x0);
        gbc.writeMem(0xdf51, { 0x3e, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3651);
        EXPECT(gbc.pc(), 0xdf53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf51), 0x3e);
        EXPECT(gbc.readMem(0xdf52), 0xba);
        // 3E 011B
        gbc.setState(0xe06f, 0xac8f, 0x2e60, 0x11a8, 0x612c, 0xe6b8, 0x1, 0x1);
        gbc.writeMem(0xe06f, { 0x3e, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xac8f);
        EXPECT(gbc.pc(), 0xe071);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe06f), 0x3e);
        EXPECT(gbc.readMem(0xe070), 0x74);
        // 3E 011C
        gbc.setState(0xa08f, 0xd69d, 0x4990, 0x4192, 0x6a2d, 0xbc36, 0x1, 0x1);
        gbc.writeMem(0xa08f, { 0x3e, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd69d);
        EXPECT(gbc.pc(), 0xa091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa08f), 0x3e);
        EXPECT(gbc.readMem(0xa090), 0x6b);
        // 3E 011D
        gbc.setState(0xdeb7, 0x7ec2, 0x200, 0xd5e3, 0x1a8e, 0x3802, 0x1, 0x0);
        gbc.writeMem(0xdeb7, { 0x3e, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7ec2);
        EXPECT(gbc.pc(), 0xdeb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeb7), 0x3e);
        EXPECT(gbc.readMem(0xdeb8), 0x34);
        // 3E 011E
        gbc.setState(0x9a99, 0xff59, 0x40d0, 0x1df8, 0x21fb, 0x96da, 0x1, 0x1);
        gbc.writeMem(0x9a99, { 0x3e, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xff59);
        EXPECT(gbc.pc(), 0x9a9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a99), 0x3e);
        EXPECT(gbc.readMem(0x9a9a), 0xe8);
        // 3E 011F
        gbc.setState(0xc7a3, 0x610a, 0xc280, 0xf335, 0x7dfe, 0x9846, 0x1, 0x1);
        gbc.writeMem(0xc7a3, { 0x3e, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x610a);
        EXPECT(gbc.pc(), 0xc7a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7a3), 0x3e);
        EXPECT(gbc.readMem(0xc7a4), 0xa5);
        // 3E 0120
        gbc.setState(0x79e3, 0x799a, 0x4f30, 0x1ba6, 0xbf3, 0xbf0a, 0x1, 0x1);
        gbc.writeMem(0x79e3, { 0x3e, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x799a);
        EXPECT(gbc.pc(), 0x79e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0121
        gbc.setState(0x4285, 0x7bba, 0x4520, 0x3a47, 0xa1b8, 0x9e4e, 0x0, 0x1);
        gbc.writeMem(0x4285, { 0x3e, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7bba);
        EXPECT(gbc.pc(), 0x4287);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0122
        gbc.setState(0xb93f, 0xc7a1, 0xe920, 0xb7e4, 0x7c73, 0xaf3, 0x0, 0x0);
        gbc.writeMem(0xb93f, { 0x3e, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc7a1);
        EXPECT(gbc.pc(), 0xb941);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb93f), 0x3e);
        EXPECT(gbc.readMem(0xb940), 0xc8);
        // 3E 0123
        gbc.setState(0x6dd0, 0x1e9f, 0xcb60, 0x4756, 0xce6, 0x28e2, 0x1, 0x1);
        gbc.writeMem(0x6dd0, { 0x3e, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1e9f);
        EXPECT(gbc.pc(), 0x6dd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0124
        gbc.setState(0xa383, 0x966d, 0xe1c0, 0x6e8d, 0x164e, 0x866f, 0x1, 0x1);
        gbc.writeMem(0xa383, { 0x3e, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x966d);
        EXPECT(gbc.pc(), 0xa385);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa383), 0x3e);
        EXPECT(gbc.readMem(0xa384), 0x10);
        // 3E 0125
        gbc.setState(0xedfc, 0xd750, 0x38a0, 0x169a, 0x84e9, 0x3e84, 0x0, 0x0);
        gbc.writeMem(0xedfc, { 0x3e, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd750);
        EXPECT(gbc.pc(), 0xedfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedfc), 0x3e);
        EXPECT(gbc.readMem(0xedfd), 0x33);
        // 3E 0126
        gbc.setState(0x2d15, 0x711, 0x9900, 0xa37f, 0xc484, 0x8b6, 0x0, 0x0);
        gbc.writeMem(0x2d15, { 0x3e, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x711);
        EXPECT(gbc.pc(), 0x2d17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0127
        gbc.setState(0xd3da, 0x2d36, 0xd3c0, 0x28a7, 0x8fd3, 0x45c4, 0x0, 0x0);
        gbc.writeMem(0xd3da, { 0x3e, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2d36);
        EXPECT(gbc.pc(), 0xd3dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3da), 0x3e);
        EXPECT(gbc.readMem(0xd3db), 0xd8);
        // 3E 0128
        gbc.setState(0x9b50, 0x47ff, 0xcf60, 0x5a2d, 0x396e, 0x40c, 0x1, 0x0);
        gbc.writeMem(0x9b50, { 0x3e, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x47ff);
        EXPECT(gbc.pc(), 0x9b52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b50), 0x3e);
        EXPECT(gbc.readMem(0x9b51), 0x72);
        // 3E 0129
        gbc.setState(0x31ad, 0x207c, 0xb310, 0x61f2, 0x57fe, 0x6bf7, 0x1, 0x1);
        gbc.writeMem(0x31ad, { 0x3e, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x207c);
        EXPECT(gbc.pc(), 0x31af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 012A
        gbc.setState(0x3cf, 0xf1a8, 0x68c0, 0x1c38, 0x179f, 0x48e5, 0x1, 0x0);
        gbc.writeMem(0x3cf, { 0x3e, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf1a8);
        EXPECT(gbc.pc(), 0x3d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 012B
        gbc.setState(0x18b4, 0x49f7, 0x1910, 0xa793, 0xcef8, 0x8335, 0x0, 0x1);
        gbc.writeMem(0x18b4, { 0x3e, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x49f7);
        EXPECT(gbc.pc(), 0x18b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 012C
        gbc.setState(0x28c2, 0x5107, 0x2940, 0xe5d2, 0x8307, 0x5d46, 0x1, 0x0);
        gbc.writeMem(0x28c2, { 0x3e, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x5107);
        EXPECT(gbc.pc(), 0x28c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 012D
        gbc.setState(0x542a, 0xfc8a, 0xc570, 0x1542, 0xce39, 0xc1d4, 0x1, 0x1);
        gbc.writeMem(0x542a, { 0x3e, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfc8a);
        EXPECT(gbc.pc(), 0x542c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 012E
        gbc.setState(0xe904, 0xbb41, 0x5310, 0x1d46, 0x2f59, 0xd42e, 0x0, 0x0);
        gbc.writeMem(0xe904, { 0x3e, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xbb41);
        EXPECT(gbc.pc(), 0xe906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe904), 0x3e);
        EXPECT(gbc.readMem(0xe905), 0xad);
        // 3E 012F
        gbc.setState(0x274f, 0xddae, 0x35a0, 0x885f, 0x37b, 0xe163, 0x0, 0x1);
        gbc.writeMem(0x274f, { 0x3e, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xddae);
        EXPECT(gbc.pc(), 0x2751);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0130
        gbc.setState(0x4fa4, 0x2e19, 0xb200, 0xfff4, 0xeddd, 0x57b4, 0x1, 0x1);
        gbc.writeMem(0x4fa4, { 0x3e, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2e19);
        EXPECT(gbc.pc(), 0x4fa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0131
        gbc.setState(0x9052, 0xf501, 0x20, 0xbaeb, 0x3287, 0x7c87, 0x1, 0x0);
        gbc.writeMem(0x9052, { 0x3e, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf501);
        EXPECT(gbc.pc(), 0x9054);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9052), 0x3e);
        EXPECT(gbc.readMem(0x9053), 0xe0);
        // 3E 0132
        gbc.setState(0x894d, 0x4442, 0xdf30, 0xcfc9, 0xc91b, 0x4301, 0x0, 0x0);
        gbc.writeMem(0x894d, { 0x3e, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4442);
        EXPECT(gbc.pc(), 0x894f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x894d), 0x3e);
        EXPECT(gbc.readMem(0x894e), 0xa0);
        // 3E 0133
        gbc.setState(0xbb7a, 0x2a76, 0xd240, 0xf238, 0xdbea, 0x8e9f, 0x0, 0x0);
        gbc.writeMem(0xbb7a, { 0x3e, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x2a76);
        EXPECT(gbc.pc(), 0xbb7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb7a), 0x3e);
        EXPECT(gbc.readMem(0xbb7b), 0xfa);
        // 3E 0134
        gbc.setState(0x3d9a, 0x79cf, 0xb7c0, 0x6e95, 0x4645, 0x556f, 0x1, 0x1);
        gbc.writeMem(0x3d9a, { 0x3e, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x79cf);
        EXPECT(gbc.pc(), 0x3d9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0135
        gbc.setState(0x4e9e, 0xc4f5, 0x7760, 0xcae0, 0x4c60, 0x8ffb, 0x1, 0x0);
        gbc.writeMem(0x4e9e, { 0x3e, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc4f5);
        EXPECT(gbc.pc(), 0x4ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0136
        gbc.setState(0xd0, 0x5f7c, 0xf8e0, 0xebea, 0xb044, 0x7fdb, 0x1, 0x1);
        gbc.writeMem(0xd0, { 0x3e, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5f7c);
        EXPECT(gbc.pc(), 0xd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0137
        gbc.setState(0x57f0, 0x4709, 0x78d0, 0xfefb, 0xb2bf, 0x3cfc, 0x1, 0x0);
        gbc.writeMem(0x57f0, { 0x3e, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4709);
        EXPECT(gbc.pc(), 0x57f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0138
        gbc.setState(0x7958, 0x44e4, 0xb110, 0xaa2e, 0x8a93, 0x2d98, 0x0, 0x1);
        gbc.writeMem(0x7958, { 0x3e, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x44e4);
        EXPECT(gbc.pc(), 0x795a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0139
        gbc.setState(0x699d, 0x6ff7, 0x9880, 0x1ca3, 0xea50, 0x76cb, 0x0, 0x0);
        gbc.writeMem(0x699d, { 0x3e, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6ff7);
        EXPECT(gbc.pc(), 0x699f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 013A
        gbc.setState(0x9bf3, 0x3556, 0x5930, 0x8e65, 0x4296, 0x8c16, 0x1, 0x1);
        gbc.writeMem(0x9bf3, { 0x3e, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3556);
        EXPECT(gbc.pc(), 0x9bf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bf3), 0x3e);
        EXPECT(gbc.readMem(0x9bf4), 0x23);
        // 3E 013B
        gbc.setState(0xb447, 0x7d48, 0x7460, 0x5a0, 0x7ea0, 0x6bbc, 0x1, 0x0);
        gbc.writeMem(0xb447, { 0x3e, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7d48);
        EXPECT(gbc.pc(), 0xb449);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb447), 0x3e);
        EXPECT(gbc.readMem(0xb448), 0xeb);
        // 3E 013C
        gbc.setState(0xa542, 0x85f7, 0xb5d0, 0x63ce, 0x655f, 0x697f, 0x0, 0x1);
        gbc.writeMem(0xa542, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x85f7);
        EXPECT(gbc.pc(), 0xa544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa542), 0x3e);
        EXPECT(gbc.readMem(0xa543), 0x8c);
        // 3E 013D
        gbc.setState(0xd5a7, 0x6300, 0x53f0, 0x635b, 0xb5ed, 0x4023, 0x0, 0x1);
        gbc.writeMem(0xd5a7, { 0x3e, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6300);
        EXPECT(gbc.pc(), 0xd5a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5a7), 0x3e);
        EXPECT(gbc.readMem(0xd5a8), 0x30);
        // 3E 013F
        gbc.setState(0x198d, 0x1101, 0xc3c0, 0x5cf, 0x2815, 0x4da3, 0x0, 0x0);
        gbc.writeMem(0x198d, { 0x3e, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1101);
        EXPECT(gbc.pc(), 0x198f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0140
        gbc.setState(0x3e2f, 0x4fb2, 0x4530, 0x2c41, 0x8e2b, 0xcae2, 0x0, 0x1);
        gbc.writeMem(0x3e2f, { 0x3e, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4fb2);
        EXPECT(gbc.pc(), 0x3e31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0141
        gbc.setState(0x3b8b, 0xb95e, 0xc410, 0x1db4, 0x2963, 0x71b8, 0x1, 0x0);
        gbc.writeMem(0x3b8b, { 0x3e, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb95e);
        EXPECT(gbc.pc(), 0x3b8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0142
        gbc.setState(0xd60d, 0x9e82, 0x94e0, 0x3ce2, 0x79e3, 0x5100, 0x0, 0x0);
        gbc.writeMem(0xd60d, { 0x3e, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9e82);
        EXPECT(gbc.pc(), 0xd60f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd60d), 0x3e);
        EXPECT(gbc.readMem(0xd60e), 0xb2);
        // 3E 0143
        gbc.setState(0xb384, 0xe07f, 0x6160, 0xe9bf, 0xb6fb, 0x4cf5, 0x1, 0x0);
        gbc.writeMem(0xb384, { 0x3e, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe07f);
        EXPECT(gbc.pc(), 0xb386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb384), 0x3e);
        EXPECT(gbc.readMem(0xb385), 0xf6);
        // 3E 0144
        gbc.setState(0x3ac9, 0x9526, 0x2e40, 0x66d, 0xdda8, 0xc865, 0x0, 0x0);
        gbc.writeMem(0x3ac9, { 0x3e, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9526);
        EXPECT(gbc.pc(), 0x3acb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0145
        gbc.setState(0x945e, 0x7928, 0xa7a0, 0x5290, 0xeaa4, 0xb52, 0x0, 0x0);
        gbc.writeMem(0x945e, { 0x3e, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7928);
        EXPECT(gbc.pc(), 0x9460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x945e), 0x3e);
        EXPECT(gbc.readMem(0x945f), 0xb8);
        // 3E 0146
        gbc.setState(0xd181, 0x6be9, 0xc770, 0xf38f, 0xb910, 0x2434, 0x1, 0x1);
        gbc.writeMem(0xd181, { 0x3e, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6be9);
        EXPECT(gbc.pc(), 0xd183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd181), 0x3e);
        EXPECT(gbc.readMem(0xd182), 0x52);
        // 3E 0147
        gbc.setState(0xed57, 0x512d, 0x1d0, 0x9c45, 0x2889, 0xcfdd, 0x1, 0x0);
        gbc.writeMem(0xed57, { 0x3e, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x512d);
        EXPECT(gbc.pc(), 0xed59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed57), 0x3e);
        EXPECT(gbc.readMem(0xed58), 0x79);
        // 3E 0148
        gbc.setState(0x79e6, 0xe98, 0x6bc0, 0xece5, 0xf2e6, 0x4383, 0x1, 0x1);
        gbc.writeMem(0x79e6, { 0x3e, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe98);
        EXPECT(gbc.pc(), 0x79e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0149
        gbc.setState(0x8757, 0x1eaf, 0x66b0, 0xb7a1, 0x93d7, 0x9880, 0x1, 0x1);
        gbc.writeMem(0x8757, { 0x3e, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1eaf);
        EXPECT(gbc.pc(), 0x8759);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8757), 0x3e);
        EXPECT(gbc.readMem(0x8758), 0x8);
        // 3E 014B
        gbc.setState(0x4c33, 0xe275, 0x310, 0x8f8d, 0x82fd, 0x7b3b, 0x0, 0x1);
        gbc.writeMem(0x4c33, { 0x3e, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe275);
        EXPECT(gbc.pc(), 0x4c35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 014C
        gbc.setState(0x6ecd, 0xc73e, 0x3190, 0xf297, 0x60ca, 0x7acc, 0x0, 0x0);
        gbc.writeMem(0x6ecd, { 0x3e, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc73e);
        EXPECT(gbc.pc(), 0x6ecf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 014D
        gbc.setState(0xe2a8, 0xb5fb, 0xaca0, 0xa8b4, 0x6f03, 0xf8b7, 0x1, 0x1);
        gbc.writeMem(0xe2a8, { 0x3e, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xb5fb);
        EXPECT(gbc.pc(), 0xe2aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2a8), 0x3e);
        EXPECT(gbc.readMem(0xe2a9), 0xe2);
        // 3E 014E
        gbc.setState(0xdec0, 0xb159, 0xb680, 0x3f6c, 0x30c, 0x72c9, 0x1, 0x0);
        gbc.writeMem(0xdec0, { 0x3e, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb159);
        EXPECT(gbc.pc(), 0xdec2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdec0), 0x3e);
        EXPECT(gbc.readMem(0xdec1), 0xa6);
        // 3E 0150
        gbc.setState(0x5893, 0xcaf3, 0xce0, 0x2a4, 0xa327, 0xcb15, 0x1, 0x0);
        gbc.writeMem(0x5893, { 0x3e, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xcaf3);
        EXPECT(gbc.pc(), 0x5895);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0151
        gbc.setState(0x8085, 0x9268, 0x82b0, 0xe78c, 0x5c48, 0x998e, 0x1, 0x0);
        gbc.writeMem(0x8085, { 0x3e, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9268);
        EXPECT(gbc.pc(), 0x8087);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8085), 0x3e);
        EXPECT(gbc.readMem(0x8086), 0xba);
        // 3E 0152
        gbc.setState(0xeddc, 0x2abe, 0x9660, 0x99d, 0xc91e, 0xe631, 0x0, 0x0);
        gbc.writeMem(0xeddc, { 0x3e, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2abe);
        EXPECT(gbc.pc(), 0xedde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeddc), 0x3e);
        EXPECT(gbc.readMem(0xeddd), 0x4c);
        // 3E 0153
        gbc.setState(0x5cf3, 0x35bc, 0x9b70, 0x1f40, 0x1a80, 0x4ad5, 0x1, 0x0);
        gbc.writeMem(0x5cf3, { 0x3e, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x35bc);
        EXPECT(gbc.pc(), 0x5cf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0154
        gbc.setState(0x78e7, 0x77e2, 0x2660, 0x2f12, 0x3ed9, 0x3f20, 0x0, 0x1);
        gbc.writeMem(0x78e7, { 0x3e, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x77e2);
        EXPECT(gbc.pc(), 0x78e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0155
        gbc.setState(0x9d3f, 0x9a6b, 0xc540, 0x4f47, 0xea19, 0xa1bf, 0x1, 0x0);
        gbc.writeMem(0x9d3f, { 0x3e, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9a6b);
        EXPECT(gbc.pc(), 0x9d41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d3f), 0x3e);
        EXPECT(gbc.readMem(0x9d40), 0xe1);
        // 3E 0156
        gbc.setState(0x3dc0, 0xd329, 0xf2a0, 0x1a80, 0xde02, 0x9085, 0x0, 0x1);
        gbc.writeMem(0x3dc0, { 0x3e, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd329);
        EXPECT(gbc.pc(), 0x3dc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0157
        gbc.setState(0x7937, 0x82bc, 0xb6b0, 0x413b, 0x2533, 0x9db2, 0x1, 0x0);
        gbc.writeMem(0x7937, { 0x3e, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x82bc);
        EXPECT(gbc.pc(), 0x7939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0158
        gbc.setState(0x3434, 0x5d1b, 0x2590, 0xb3ef, 0xf631, 0x301, 0x1, 0x0);
        gbc.writeMem(0x3434, { 0x3e, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5d1b);
        EXPECT(gbc.pc(), 0x3436);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0159
        gbc.setState(0x83e6, 0x8524, 0xbb70, 0x8c9b, 0x891d, 0x303f, 0x1, 0x1);
        gbc.writeMem(0x83e6, { 0x3e, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8524);
        EXPECT(gbc.pc(), 0x83e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83e6), 0x3e);
        EXPECT(gbc.readMem(0x83e7), 0xbe);
        // 3E 015A
        gbc.setState(0xc851, 0xc666, 0xc2a0, 0xdd30, 0xad2d, 0xc680, 0x0, 0x0);
        gbc.writeMem(0xc851, { 0x3e, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc666);
        EXPECT(gbc.pc(), 0xc853);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc851), 0x3e);
        EXPECT(gbc.readMem(0xc852), 0x62);
        // 3E 015B
        gbc.setState(0x1206, 0xc0e8, 0xbd30, 0xcc3c, 0x9b43, 0x93fe, 0x1, 0x0);
        gbc.writeMem(0x1206, { 0x3e, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc0e8);
        EXPECT(gbc.pc(), 0x1208);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 015C
        gbc.setState(0xe7c7, 0x5e6, 0xdc40, 0xc527, 0xb563, 0xfb84, 0x1, 0x1);
        gbc.writeMem(0xe7c7, { 0x3e, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x5e6);
        EXPECT(gbc.pc(), 0xe7c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7c7), 0x3e);
        EXPECT(gbc.readMem(0xe7c8), 0x9e);
        // 3E 015E
        gbc.setState(0x53ff, 0xcec6, 0x5540, 0x9258, 0xdc74, 0xcbea, 0x0, 0x0);
        gbc.writeMem(0x53ff, { 0x3e, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xcec6);
        EXPECT(gbc.pc(), 0x5401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 015F
        gbc.setState(0x3acb, 0x8b3b, 0x5960, 0xdd24, 0xe285, 0xe512, 0x0, 0x0);
        gbc.writeMem(0x3acb, { 0x3e, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8b3b);
        EXPECT(gbc.pc(), 0x3acd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0160
        gbc.setState(0x547f, 0xbc36, 0xb660, 0xff86, 0xdbaf, 0xbc9f, 0x0, 0x0);
        gbc.writeMem(0x547f, { 0x3e, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xbc36);
        EXPECT(gbc.pc(), 0x5481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0162
        gbc.setState(0x5a4c, 0x9184, 0x7600, 0xa082, 0x7376, 0xc030, 0x1, 0x1);
        gbc.writeMem(0x5a4c, { 0x3e, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9184);
        EXPECT(gbc.pc(), 0x5a4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0163
        gbc.setState(0x6a3c, 0xc993, 0x68c0, 0xbc0f, 0xe117, 0x5aa8, 0x0, 0x1);
        gbc.writeMem(0x6a3c, { 0x3e, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc993);
        EXPECT(gbc.pc(), 0x6a3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0164
        gbc.setState(0x7ffc, 0xf559, 0x8790, 0x8f9c, 0x5f02, 0x818f, 0x0, 0x1);
        gbc.writeMem(0x7ffc, { 0x3e, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf559);
        EXPECT(gbc.pc(), 0x7ffe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0165
        gbc.setState(0xa1d4, 0xd21e, 0x96a0, 0x567c, 0xa25b, 0x3d87, 0x1, 0x1);
        gbc.writeMem(0xa1d4, { 0x3e, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd21e);
        EXPECT(gbc.pc(), 0xa1d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1d4), 0x3e);
        EXPECT(gbc.readMem(0xa1d5), 0xcd);
        // 3E 0166
        gbc.setState(0x68dc, 0x25dd, 0x4a90, 0x328e, 0x45e4, 0xc441, 0x1, 0x1);
        gbc.writeMem(0x68dc, { 0x3e, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x25dd);
        EXPECT(gbc.pc(), 0x68de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0167
        gbc.setState(0x2754, 0x496f, 0xd180, 0x68c2, 0x3c0b, 0x2f2e, 0x0, 0x1);
        gbc.writeMem(0x2754, { 0x3e, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x496f);
        EXPECT(gbc.pc(), 0x2756);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0168
        gbc.setState(0xa9f8, 0x86c2, 0x90f0, 0x90be, 0x7ad3, 0xf3ac, 0x1, 0x0);
        gbc.writeMem(0xa9f8, { 0x3e, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x86c2);
        EXPECT(gbc.pc(), 0xa9fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9f8), 0x3e);
        EXPECT(gbc.readMem(0xa9f9), 0x3);
        // 3E 0169
        gbc.setState(0x1af3, 0xfb85, 0x2640, 0x577d, 0x2cc9, 0x9c10, 0x1, 0x0);
        gbc.writeMem(0x1af3, { 0x3e, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xfb85);
        EXPECT(gbc.pc(), 0x1af5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 016A
        gbc.setState(0x1254, 0xca9c, 0xc9b0, 0xb7e6, 0x5bac, 0xf08d, 0x1, 0x0);
        gbc.writeMem(0x1254, { 0x3e, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xca9c);
        EXPECT(gbc.pc(), 0x1256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 016B
        gbc.setState(0xda3, 0x1f3b, 0xe2c0, 0x580b, 0x482a, 0xfec2, 0x1, 0x1);
        gbc.writeMem(0xda3, { 0x3e, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1f3b);
        EXPECT(gbc.pc(), 0xda5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 016C
        gbc.setState(0x3f8, 0xda74, 0xfbc0, 0x579d, 0x949d, 0xb32c, 0x0, 0x0);
        gbc.writeMem(0x3f8, { 0x3e, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xda74);
        EXPECT(gbc.pc(), 0x3fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 016E
        gbc.setState(0x3e64, 0xfd3c, 0x9fd0, 0x6067, 0x7b45, 0x258a, 0x0, 0x0);
        gbc.writeMem(0x3e64, { 0x3e, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xfd3c);
        EXPECT(gbc.pc(), 0x3e66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 016F
        gbc.setState(0xd8ef, 0x91df, 0xdaa0, 0xf298, 0x9ac7, 0xdd65, 0x0, 0x1);
        gbc.writeMem(0xd8ef, { 0x3e, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x91df);
        EXPECT(gbc.pc(), 0xd8f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8ef), 0x3e);
        EXPECT(gbc.readMem(0xd8f0), 0xcd);
        // 3E 0171
        gbc.setState(0xd103, 0x9452, 0x6b50, 0x52d6, 0xc67e, 0xc2bd, 0x1, 0x1);
        gbc.writeMem(0xd103, { 0x3e, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9452);
        EXPECT(gbc.pc(), 0xd105);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd103), 0x3e);
        EXPECT(gbc.readMem(0xd104), 0x4f);
        // 3E 0172
        gbc.setState(0x4e4e, 0x2946, 0x3b90, 0xcf54, 0x6663, 0x32f4, 0x1, 0x0);
        gbc.writeMem(0x4e4e, { 0x3e, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2946);
        EXPECT(gbc.pc(), 0x4e50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0173
        gbc.setState(0xe7dc, 0x4558, 0x4220, 0xf1b7, 0xd28a, 0x65e9, 0x0, 0x0);
        gbc.writeMem(0xe7dc, { 0x3e, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4558);
        EXPECT(gbc.pc(), 0xe7de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7dc), 0x3e);
        EXPECT(gbc.readMem(0xe7dd), 0x6);
        // 3E 0174
        gbc.setState(0xb011, 0x22b7, 0xca10, 0x76a6, 0xd0c8, 0xd619, 0x1, 0x1);
        gbc.writeMem(0xb011, { 0x3e, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x22b7);
        EXPECT(gbc.pc(), 0xb013);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb011), 0x3e);
        EXPECT(gbc.readMem(0xb012), 0xe9);
        // 3E 0175
        gbc.setState(0x96e1, 0xef70, 0x800, 0x810a, 0x3f49, 0xdb88, 0x1, 0x1);
        gbc.writeMem(0x96e1, { 0x3e, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xef70);
        EXPECT(gbc.pc(), 0x96e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96e1), 0x3e);
        EXPECT(gbc.readMem(0x96e2), 0x2e);
        // 3E 0176
        gbc.setState(0xca0b, 0xf36, 0xbe90, 0x75ec, 0xbdb7, 0x4bb0, 0x1, 0x0);
        gbc.writeMem(0xca0b, { 0x3e, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf36);
        EXPECT(gbc.pc(), 0xca0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca0b), 0x3e);
        EXPECT(gbc.readMem(0xca0c), 0xda);
        // 3E 0177
        gbc.setState(0x5815, 0x8b72, 0xa5c0, 0x1f54, 0x1ba5, 0xa7af, 0x1, 0x0);
        gbc.writeMem(0x5815, { 0x3e, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8b72);
        EXPECT(gbc.pc(), 0x5817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0178
        gbc.setState(0x52e7, 0x1a56, 0x3560, 0xfe38, 0x7369, 0x8bbb, 0x1, 0x1);
        gbc.writeMem(0x52e7, { 0x3e, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1a56);
        EXPECT(gbc.pc(), 0x52e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0179
        gbc.setState(0x15c7, 0x9efe, 0x6310, 0x38a5, 0x68fa, 0x330b, 0x1, 0x0);
        gbc.writeMem(0x15c7, { 0x3e, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9efe);
        EXPECT(gbc.pc(), 0x15c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 017A
        gbc.setState(0x47a2, 0xbb58, 0x6c10, 0x831a, 0x3899, 0xd83d, 0x1, 0x1);
        gbc.writeMem(0x47a2, { 0x3e, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xbb58);
        EXPECT(gbc.pc(), 0x47a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 017B
        gbc.setState(0x4946, 0x3cb5, 0x44e0, 0x690e, 0x7c3, 0x5a1a, 0x1, 0x1);
        gbc.writeMem(0x4946, { 0x3e, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3cb5);
        EXPECT(gbc.pc(), 0x4948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 017C
        gbc.setState(0x8ac8, 0x5bbf, 0x2c50, 0xb9c8, 0xdadc, 0x7da7, 0x1, 0x0);
        gbc.writeMem(0x8ac8, { 0x3e, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x5bbf);
        EXPECT(gbc.pc(), 0x8aca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ac8), 0x3e);
        EXPECT(gbc.readMem(0x8ac9), 0x8);
        // 3E 017F
        gbc.setState(0x3719, 0xb176, 0x4a0, 0xe60, 0xf599, 0xf876, 0x0, 0x1);
        gbc.writeMem(0x3719, { 0x3e, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xb176);
        EXPECT(gbc.pc(), 0x371b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0180
        gbc.setState(0xc9f1, 0x90b6, 0xadf0, 0x3498, 0x33a6, 0x6513, 0x0, 0x0);
        gbc.writeMem(0xc9f1, { 0x3e, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x90b6);
        EXPECT(gbc.pc(), 0xc9f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9f1), 0x3e);
        EXPECT(gbc.readMem(0xc9f2), 0x66);
        // 3E 0182
        gbc.setState(0x2fc, 0xf25f, 0xb8e0, 0x118a, 0xcf4d, 0xdcb4, 0x0, 0x1);
        gbc.writeMem(0x2fc, { 0x3e, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf25f);
        EXPECT(gbc.pc(), 0x2fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0183
        gbc.setState(0xd794, 0xa293, 0xc670, 0x24b0, 0xe501, 0xb76c, 0x0, 0x1);
        gbc.writeMem(0xd794, { 0x3e, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa293);
        EXPECT(gbc.pc(), 0xd796);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd794), 0x3e);
        EXPECT(gbc.readMem(0xd795), 0xa1);
        // 3E 0184
        gbc.setState(0x4e9e, 0xb839, 0xca70, 0x9a96, 0x8608, 0x8422, 0x1, 0x0);
        gbc.writeMem(0x4e9e, { 0x3e, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xb839);
        EXPECT(gbc.pc(), 0x4ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0185
        gbc.setState(0x5ff0, 0x8762, 0xa7b0, 0x2c80, 0xc3dd, 0x6889, 0x1, 0x1);
        gbc.writeMem(0x5ff0, { 0x3e, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8762);
        EXPECT(gbc.pc(), 0x5ff2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0186
        gbc.setState(0xe0a4, 0xc15c, 0x62b0, 0x7353, 0x407f, 0xdbd3, 0x1, 0x1);
        gbc.writeMem(0xe0a4, { 0x3e, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xc15c);
        EXPECT(gbc.pc(), 0xe0a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0a4), 0x3e);
        EXPECT(gbc.readMem(0xe0a5), 0xda);
        // 3E 0187
        gbc.setState(0x8e9d, 0xf62b, 0xc430, 0x373c, 0xb128, 0x3f79, 0x0, 0x0);
        gbc.writeMem(0x8e9d, { 0x3e, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf62b);
        EXPECT(gbc.pc(), 0x8e9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e9d), 0x3e);
        EXPECT(gbc.readMem(0x8e9e), 0x6a);
        // 3E 0188
        gbc.setState(0xce1a, 0xcf06, 0x9450, 0xe52f, 0x77b1, 0x396b, 0x1, 0x0);
        gbc.writeMem(0xce1a, { 0x3e, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xcf06);
        EXPECT(gbc.pc(), 0xce1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce1a), 0x3e);
        EXPECT(gbc.readMem(0xce1b), 0xe1);
        // 3E 0189
        gbc.setState(0xdb99, 0xbe08, 0xd3a0, 0xa01a, 0x2702, 0xa9af, 0x0, 0x0);
        gbc.writeMem(0xdb99, { 0x3e, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xbe08);
        EXPECT(gbc.pc(), 0xdb9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb99), 0x3e);
        EXPECT(gbc.readMem(0xdb9a), 0x71);
        // 3E 018A
        gbc.setState(0xca7, 0xbb10, 0x6270, 0x6a, 0xba24, 0xe50c, 0x1, 0x0);
        gbc.writeMem(0xca7, { 0x3e, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xbb10);
        EXPECT(gbc.pc(), 0xca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 018C
        gbc.setState(0x948, 0xe896, 0x56a0, 0x5350, 0x9fca, 0xadf6, 0x1, 0x0);
        gbc.writeMem(0x948, { 0x3e, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe896);
        EXPECT(gbc.pc(), 0x94a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 018D
        gbc.setState(0x49c2, 0xbdda, 0x3270, 0x21ca, 0xc19f, 0xb64d, 0x0, 0x1);
        gbc.writeMem(0x49c2, { 0x3e, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xbdda);
        EXPECT(gbc.pc(), 0x49c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 018E
        gbc.setState(0xd2a1, 0x28af, 0x4650, 0x20dd, 0x4f68, 0x2a63, 0x1, 0x1);
        gbc.writeMem(0xd2a1, { 0x3e, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x28af);
        EXPECT(gbc.pc(), 0xd2a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2a1), 0x3e);
        EXPECT(gbc.readMem(0xd2a2), 0xa5);
        // 3E 018F
        gbc.setState(0xcbe3, 0x9a01, 0x7d30, 0x30b7, 0xa0f8, 0xeb65, 0x0, 0x1);
        gbc.writeMem(0xcbe3, { 0x3e, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9a01);
        EXPECT(gbc.pc(), 0xcbe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbe3), 0x3e);
        EXPECT(gbc.readMem(0xcbe4), 0x7a);
        // 3E 0190
        gbc.setState(0xbca4, 0x632f, 0xd980, 0x8112, 0xc939, 0x4dfe, 0x1, 0x1);
        gbc.writeMem(0xbca4, { 0x3e, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x632f);
        EXPECT(gbc.pc(), 0xbca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbca4), 0x3e);
        EXPECT(gbc.readMem(0xbca5), 0xc7);
        // 3E 0191
        gbc.setState(0xe632, 0x5749, 0x6700, 0x6da0, 0xf49d, 0xd7e7, 0x0, 0x1);
        gbc.writeMem(0xe632, { 0x3e, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5749);
        EXPECT(gbc.pc(), 0xe634);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe632), 0x3e);
        EXPECT(gbc.readMem(0xe633), 0xad);
        // 3E 0192
        gbc.setState(0xbebc, 0x1dc4, 0x60f0, 0x6809, 0xda6, 0xa964, 0x1, 0x0);
        gbc.writeMem(0xbebc, { 0x3e, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x1dc4);
        EXPECT(gbc.pc(), 0xbebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbebc), 0x3e);
        EXPECT(gbc.readMem(0xbebd), 0x54);
        // 3E 0193
        gbc.setState(0x8cda, 0x27da, 0xb8e0, 0xdce2, 0xfa7e, 0xe2d7, 0x0, 0x0);
        gbc.writeMem(0x8cda, { 0x3e, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x27da);
        EXPECT(gbc.pc(), 0x8cdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cda), 0x3e);
        EXPECT(gbc.readMem(0x8cdb), 0x53);
        // 3E 0194
        gbc.setState(0x30f4, 0x7550, 0xc270, 0xd2af, 0x5d38, 0xcb9f, 0x0, 0x1);
        gbc.writeMem(0x30f4, { 0x3e, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7550);
        EXPECT(gbc.pc(), 0x30f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0195
        gbc.setState(0x8217, 0x257, 0x6930, 0x171d, 0x73e3, 0x898b, 0x1, 0x1);
        gbc.writeMem(0x8217, { 0x3e, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x257);
        EXPECT(gbc.pc(), 0x8219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8217), 0x3e);
        EXPECT(gbc.readMem(0x8218), 0x49);
        // 3E 0196
        gbc.setState(0x68f2, 0x7d72, 0x14c0, 0x57d3, 0x84ea, 0x19e5, 0x1, 0x0);
        gbc.writeMem(0x68f2, { 0x3e, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7d72);
        EXPECT(gbc.pc(), 0x68f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0197
        gbc.setState(0x8840, 0x9cc3, 0xe5b0, 0x2ac9, 0xbae9, 0xd019, 0x1, 0x1);
        gbc.writeMem(0x8840, { 0x3e, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9cc3);
        EXPECT(gbc.pc(), 0x8842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8840), 0x3e);
        EXPECT(gbc.readMem(0x8841), 0xff);
        // 3E 0198
        gbc.setState(0xab78, 0x4e14, 0xfa70, 0xc458, 0x7468, 0xdb4c, 0x1, 0x1);
        gbc.writeMem(0xab78, { 0x3e, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4e14);
        EXPECT(gbc.pc(), 0xab7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab78), 0x3e);
        EXPECT(gbc.readMem(0xab79), 0x14);
        // 3E 0199
        gbc.setState(0x8900, 0xc16f, 0x2030, 0xe9a, 0xc074, 0xbd10, 0x0, 0x0);
        gbc.writeMem(0x8900, { 0x3e, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc16f);
        EXPECT(gbc.pc(), 0x8902);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8900), 0x3e);
        EXPECT(gbc.readMem(0x8901), 0xd);
        // 3E 019A
        gbc.setState(0x3a8a, 0x3e72, 0x50c0, 0x3aa6, 0x6db2, 0xfeee, 0x0, 0x0);
        gbc.writeMem(0x3a8a, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3e72);
        EXPECT(gbc.pc(), 0x3a8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 019B
        gbc.setState(0x755b, 0x8d9, 0x97c0, 0x8226, 0xf043, 0xb177, 0x1, 0x0);
        gbc.writeMem(0x755b, { 0x3e, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x8d9);
        EXPECT(gbc.pc(), 0x755d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 019C
        gbc.setState(0x8e7a, 0xdce7, 0xb7c0, 0x1aa8, 0x3dbf, 0x4c4c, 0x0, 0x1);
        gbc.writeMem(0x8e7a, { 0x3e, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xdce7);
        EXPECT(gbc.pc(), 0x8e7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e7a), 0x3e);
        EXPECT(gbc.readMem(0x8e7b), 0x94);
        // 3E 019E
        gbc.setState(0xd830, 0x4295, 0xe1d0, 0x91f0, 0xe384, 0xd14b, 0x0, 0x0);
        gbc.writeMem(0xd830, { 0x3e, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4295);
        EXPECT(gbc.pc(), 0xd832);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd830), 0x3e);
        EXPECT(gbc.readMem(0xd831), 0x61);
        // 3E 019F
        gbc.setState(0x42ff, 0x4a92, 0x35e0, 0xd92e, 0x7ed0, 0x3c29, 0x0, 0x0);
        gbc.writeMem(0x42ff, { 0x3e, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4a92);
        EXPECT(gbc.pc(), 0x4301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 01A0
        gbc.setState(0xe295, 0xe98c, 0xdcf0, 0xa2f8, 0x69e1, 0x2dad, 0x0, 0x0);
        gbc.writeMem(0xe295, { 0x3e, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe98c);
        EXPECT(gbc.pc(), 0xe297);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe295), 0x3e);
        EXPECT(gbc.readMem(0xe296), 0xd8);
        // 3E 01A1
        gbc.setState(0xe03a, 0xdc7a, 0x62c0, 0xe6cf, 0xbd10, 0x3bf1, 0x0, 0x0);
        gbc.writeMem(0xe03a, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xdc7a);
        EXPECT(gbc.pc(), 0xe03c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe03a), 0x3e);
        EXPECT(gbc.readMem(0xe03b), 0x3b);
        // 3E 01A2
        gbc.setState(0x63e9, 0x8e72, 0x35d0, 0x1856, 0x619d, 0xbb4, 0x1, 0x1);
        gbc.writeMem(0x63e9, { 0x3e, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8e72);
        EXPECT(gbc.pc(), 0x63eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 01A3
        gbc.setState(0x934c, 0xe820, 0x71f0, 0x71e5, 0x6b8e, 0xcb6a, 0x1, 0x1);
        gbc.writeMem(0x934c, { 0x3e, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe820);
        EXPECT(gbc.pc(), 0x934e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x934c), 0x3e);
        EXPECT(gbc.readMem(0x934d), 0x9);
        // 3E 01A4
        gbc.setState(0x9694, 0xab60, 0x7f60, 0x6239, 0xc687, 0x5314, 0x0, 0x1);
        gbc.writeMem(0x9694, { 0x3e, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xab60);
        EXPECT(gbc.pc(), 0x9696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9694), 0x3e);
        EXPECT(gbc.readMem(0x9695), 0x5e);
        // 3E 01A5
        gbc.setState(0xe09c, 0xf852, 0x63c0, 0xe6fe, 0xf6f, 0x434b, 0x0, 0x1);
        gbc.writeMem(0xe09c, { 0x3e, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf852);
        EXPECT(gbc.pc(), 0xe09e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe09c), 0x3e);
        EXPECT(gbc.readMem(0xe09d), 0xc9);
        // 3E 01A6
        gbc.setState(0x5129, 0xaf33, 0x8440, 0x2e04, 0xd5ad, 0x85e3, 0x0, 0x1);
        gbc.writeMem(0x5129, { 0x3e, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xaf33);
        EXPECT(gbc.pc(), 0x512b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 01A7
        gbc.setState(0x3d07, 0x2704, 0x49e0, 0x2d69, 0x7cf4, 0x6d3c, 0x0, 0x0);
        gbc.writeMem(0x3d07, { 0x3e, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2704);
        EXPECT(gbc.pc(), 0x3d09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 01A9
        gbc.setState(0xb964, 0x6ac2, 0x77e0, 0x483a, 0xcae2, 0xd70e, 0x1, 0x1);
        gbc.writeMem(0xb964, { 0x3e, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6ac2);
        EXPECT(gbc.pc(), 0xb966);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb964), 0x3e);
        EXPECT(gbc.readMem(0xb965), 0x5);
        // 3E 01AA
        gbc.setState(0xcdaa, 0x7a2e, 0x5100, 0x2ac3, 0x4a2c, 0x67a, 0x0, 0x0);
        gbc.writeMem(0xcdaa, { 0x3e, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7a2e);
        EXPECT(gbc.pc(), 0xcdac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdaa), 0x3e);
        EXPECT(gbc.readMem(0xcdab), 0x20);
        // 3E 01AB
        gbc.setState(0xc687, 0x32a6, 0xd9e0, 0x40f7, 0xcc70, 0xc219, 0x0, 0x0);
        gbc.writeMem(0xc687, { 0x3e, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x32a6);
        EXPECT(gbc.pc(), 0xc689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc687), 0x3e);
        EXPECT(gbc.readMem(0xc688), 0x38);
        // 3E 01AC
        gbc.setState(0x4a0f, 0x6a53, 0xe970, 0x1601, 0x4637, 0x5bb9, 0x1, 0x0);
        gbc.writeMem(0x4a0f, { 0x3e, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6a53);
        EXPECT(gbc.pc(), 0x4a11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 01AD
        gbc.setState(0x9d96, 0xa3ea, 0xcfa0, 0x5fdf, 0x5044, 0x67de, 0x1, 0x1);
        gbc.writeMem(0x9d96, { 0x3e, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa3ea);
        EXPECT(gbc.pc(), 0x9d98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d96), 0x3e);
        EXPECT(gbc.readMem(0x9d97), 0x41);
        // 3E 01AE
        gbc.setState(0x2214, 0x4a29, 0xf2a0, 0x3f0, 0xc39e, 0xffba, 0x1, 0x1);
        gbc.writeMem(0x2214, { 0x3e, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x4a29);
        EXPECT(gbc.pc(), 0x2216);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 01AF
        gbc.setState(0x4187, 0x94a2, 0x9270, 0x89e, 0x6d3f, 0x87be, 0x0, 0x0);
        gbc.writeMem(0x4187, { 0x3e, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x94a2);
        EXPECT(gbc.pc(), 0x4189);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 01B0
        gbc.setState(0x9be4, 0x1b9c, 0x2ea0, 0xf1b7, 0xfac4, 0x49bc, 0x1, 0x0);
        gbc.writeMem(0x9be4, { 0x3e, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1b9c);
        EXPECT(gbc.pc(), 0x9be6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9be4), 0x3e);
        EXPECT(gbc.readMem(0x9be5), 0x65);
        // 3E 01B1
        gbc.setState(0xb015, 0xc07e, 0x9cc0, 0xa7a6, 0x33d, 0xc105, 0x0, 0x1);
        gbc.writeMem(0xb015, { 0x3e, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc07e);
        EXPECT(gbc.pc(), 0xb017);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb015), 0x3e);
        EXPECT(gbc.readMem(0xb016), 0xe0);
        // 3E 01B2
        gbc.setState(0x7d82, 0x25e9, 0x9cb0, 0xfe5a, 0xbc72, 0x295a, 0x0, 0x1);
        gbc.writeMem(0x7d82, { 0x3e, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x25e9);
        EXPECT(gbc.pc(), 0x7d84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 01B3
        gbc.setState(0x18c0, 0x2f87, 0xb990, 0x58b7, 0x35fc, 0xdf96, 0x0, 0x0);
        gbc.writeMem(0x18c0, { 0x3e, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2f87);
        EXPECT(gbc.pc(), 0x18c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 01B4
        gbc.setState(0x4e24, 0xba64, 0xa5b0, 0xa33a, 0x75bf, 0x4639, 0x0, 0x1);
        gbc.writeMem(0x4e24, { 0x3e, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xba64);
        EXPECT(gbc.pc(), 0x4e26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 01B5
        gbc.setState(0x6b7, 0x86e7, 0x4260, 0xf674, 0xacc7, 0xebb9, 0x1, 0x1);
        gbc.writeMem(0x6b7, { 0x3e, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x86e7);
        EXPECT(gbc.pc(), 0x6b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 01B6
        gbc.setState(0xb956, 0x1ed0, 0x24b0, 0x95e, 0x3de5, 0xe493, 0x0, 0x1);
        gbc.writeMem(0xb956, { 0x3e, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1ed0);
        EXPECT(gbc.pc(), 0xb958);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb956), 0x3e);
        EXPECT(gbc.readMem(0xb957), 0x96);
        // 3E 01B7
        gbc.setState(0xac72, 0x5318, 0xdc70, 0x2f23, 0x5896, 0x24ff, 0x1, 0x1);
        gbc.writeMem(0xac72, { 0x3e, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5318);
        EXPECT(gbc.pc(), 0xac74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac72), 0x3e);
        EXPECT(gbc.readMem(0xac73), 0x3e);
        // 3E 01B8
        gbc.setState(0xbb62, 0x7890, 0x9990, 0xe699, 0x9735, 0xad2c, 0x1, 0x1);
        gbc.writeMem(0xbb62, { 0x3e, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7890);
        EXPECT(gbc.pc(), 0xbb64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb62), 0x3e);
        EXPECT(gbc.readMem(0xbb63), 0x22);
        // 3E 01B9
        gbc.setState(0xc488, 0x37e8, 0x7370, 0xc98b, 0xeb4d, 0x72c0, 0x0, 0x1);
        gbc.writeMem(0xc488, { 0x3e, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x37e8);
        EXPECT(gbc.pc(), 0xc48a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc488), 0x3e);
        EXPECT(gbc.readMem(0xc489), 0x24);
        // 3E 01BA
        gbc.setState(0xaaf5, 0x3d85, 0x9240, 0x8a5, 0x2c40, 0x9527, 0x0, 0x0);
        gbc.writeMem(0xaaf5, { 0x3e, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3d85);
        EXPECT(gbc.pc(), 0xaaf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf5), 0x3e);
        EXPECT(gbc.readMem(0xaaf6), 0x4c);
        // 3E 01BB
        gbc.setState(0xd3f6, 0x25ef, 0xd110, 0x3f7d, 0x3025, 0x26f7, 0x0, 0x1);
        gbc.writeMem(0xd3f6, { 0x3e, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x25ef);
        EXPECT(gbc.pc(), 0xd3f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3f6), 0x3e);
        EXPECT(gbc.readMem(0xd3f7), 0x4b);
        // 3E 01BC
        gbc.setState(0x4f16, 0xf8e0, 0x6b40, 0x5f71, 0xf3e1, 0x1766, 0x0, 0x1);
        gbc.writeMem(0x4f16, { 0x3e, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf8e0);
        EXPECT(gbc.pc(), 0x4f18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 01BD
        gbc.setState(0x602d, 0x4f5f, 0x61a0, 0xf4a8, 0x5023, 0xf52f, 0x0, 0x1);
        gbc.writeMem(0x602d, { 0x3e, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4f5f);
        EXPECT(gbc.pc(), 0x602f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 01BE
        gbc.setState(0x73a6, 0x1889, 0xa00, 0xdbd, 0xfad3, 0x182c, 0x1, 0x1);
        gbc.writeMem(0x73a6, { 0x3e, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x1889);
        EXPECT(gbc.pc(), 0x73a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 01BF
        gbc.setState(0x187e, 0xd19f, 0x8860, 0xf145, 0x141c, 0x39d0, 0x0, 0x0);
        gbc.writeMem(0x187e, { 0x3e, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd19f);
        EXPECT(gbc.pc(), 0x1880);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 01C0
        gbc.setState(0xb42, 0x22c9, 0x2aa0, 0xc8c4, 0x8c1b, 0x178b, 0x1, 0x0);
        gbc.writeMem(0xb42, { 0x3e, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x22c9);
        EXPECT(gbc.pc(), 0xb44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 01C1
        gbc.setState(0x452a, 0xfb3c, 0x820, 0x8692, 0xf5b, 0x6a14, 0x1, 0x1);
        gbc.writeMem(0x452a, { 0x3e, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xfb3c);
        EXPECT(gbc.pc(), 0x452c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 01C2
        gbc.setState(0xe275, 0x3f41, 0xe860, 0x55f6, 0x1f63, 0x60f3, 0x1, 0x0);
        gbc.writeMem(0xe275, { 0x3e, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3f41);
        EXPECT(gbc.pc(), 0xe277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe275), 0x3e);
        EXPECT(gbc.readMem(0xe276), 0x1a);
        // 3E 01C3
        gbc.setState(0xcb48, 0xb3dc, 0x6390, 0xe44e, 0xdcad, 0x9ecb, 0x0, 0x0);
        gbc.writeMem(0xcb48, { 0x3e, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb3dc);
        EXPECT(gbc.pc(), 0xcb4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb48), 0x3e);
        EXPECT(gbc.readMem(0xcb49), 0x53);
        // 3E 01C4
        gbc.setState(0x4e18, 0x1fe6, 0x40d0, 0x78b4, 0x250d, 0xa1e9, 0x0, 0x1);
        gbc.writeMem(0x4e18, { 0x3e, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1fe6);
        EXPECT(gbc.pc(), 0x4e1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 01C5
        gbc.setState(0x4937, 0x8427, 0xc360, 0x43d0, 0x103f, 0xc1bc, 0x1, 0x1);
        gbc.writeMem(0x4937, { 0x3e, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8427);
        EXPECT(gbc.pc(), 0x4939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 01C7
        gbc.setState(0x41ba, 0x365f, 0x74a0, 0x705, 0x1893, 0x278a, 0x1, 0x1);
        gbc.writeMem(0x41ba, { 0x3e, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x365f);
        EXPECT(gbc.pc(), 0x41bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 01C8
        gbc.setState(0x8eb8, 0xb1f1, 0x3f70, 0x81, 0x6230, 0xacd1, 0x1, 0x0);
        gbc.writeMem(0x8eb8, { 0x3e, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb1f1);
        EXPECT(gbc.pc(), 0x8eba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eb8), 0x3e);
        EXPECT(gbc.readMem(0x8eb9), 0xe9);
        // 3E 01C9
        gbc.setState(0xe60c, 0xef1, 0x88d0, 0x3e96, 0x1a79, 0x6ab8, 0x1, 0x1);
        gbc.writeMem(0xe60c, { 0x3e, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xef1);
        EXPECT(gbc.pc(), 0xe60e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe60c), 0x3e);
        EXPECT(gbc.readMem(0xe60d), 0x5e);
        // 3E 01CA
        gbc.setState(0xd465, 0x32d2, 0x4680, 0x3a75, 0x3933, 0x7c6a, 0x0, 0x1);
        gbc.writeMem(0xd465, { 0x3e, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x32d2);
        EXPECT(gbc.pc(), 0xd467);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd465), 0x3e);
        EXPECT(gbc.readMem(0xd466), 0x58);
        // 3E 01CB
        gbc.setState(0x66b0, 0x30fb, 0x58f0, 0x970, 0xf42f, 0xdb49, 0x1, 0x0);
        gbc.writeMem(0x66b0, { 0x3e, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x30fb);
        EXPECT(gbc.pc(), 0x66b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 01CC
        gbc.setState(0x7d8a, 0x943b, 0xabe0, 0x666, 0x20f, 0xc2f4, 0x0, 0x1);
        gbc.writeMem(0x7d8a, { 0x3e, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x943b);
        EXPECT(gbc.pc(), 0x7d8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 01CD
        gbc.setState(0x7118, 0x93de, 0x3ba0, 0x1cb7, 0x3639, 0x450, 0x0, 0x0);
        gbc.writeMem(0x7118, { 0x3e, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x93de);
        EXPECT(gbc.pc(), 0x711a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 01CE
        gbc.setState(0x7288, 0xad0d, 0x8e70, 0x1ff5, 0xc126, 0x794a, 0x1, 0x0);
        gbc.writeMem(0x7288, { 0x3e, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xad0d);
        EXPECT(gbc.pc(), 0x728a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 01CF
        gbc.setState(0x76aa, 0xa2c0, 0xc210, 0x28b4, 0x690d, 0x821d, 0x0, 0x1);
        gbc.writeMem(0x76aa, { 0x3e, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xa2c0);
        EXPECT(gbc.pc(), 0x76ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 01D0
        gbc.setState(0xbe74, 0x79cf, 0xa810, 0xeb1a, 0xfdd9, 0x4dd3, 0x1, 0x0);
        gbc.writeMem(0xbe74, { 0x3e, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x79cf);
        EXPECT(gbc.pc(), 0xbe76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe74), 0x3e);
        EXPECT(gbc.readMem(0xbe75), 0xfb);
        // 3E 01D1
        gbc.setState(0x5f98, 0xd65f, 0xb740, 0x3e39, 0xb3d2, 0x7b13, 0x1, 0x0);
        gbc.writeMem(0x5f98, { 0x3e, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd65f);
        EXPECT(gbc.pc(), 0x5f9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 01D2
        gbc.setState(0x8857, 0x6684, 0xc910, 0xaa45, 0xa111, 0xe47c, 0x0, 0x0);
        gbc.writeMem(0x8857, { 0x3e, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x6684);
        EXPECT(gbc.pc(), 0x8859);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8857), 0x3e);
        EXPECT(gbc.readMem(0x8858), 0xb6);
        // 3E 01D3
        gbc.setState(0x3139, 0x2958, 0x5cf0, 0xcfc8, 0x1eb5, 0x4fb6, 0x1, 0x1);
        gbc.writeMem(0x3139, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2958);
        EXPECT(gbc.pc(), 0x313b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 01D4
        gbc.setState(0xd3f3, 0xfb6a, 0x4bd0, 0xa3ff, 0x733, 0x4ca4, 0x0, 0x1);
        gbc.writeMem(0xd3f3, { 0x3e, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xfb6a);
        EXPECT(gbc.pc(), 0xd3f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3f3), 0x3e);
        EXPECT(gbc.readMem(0xd3f4), 0x18);
        // 3E 01D5
        gbc.setState(0xc465, 0x439d, 0x1440, 0xf5a3, 0xe3b, 0x5f73, 0x0, 0x0);
        gbc.writeMem(0xc465, { 0x3e, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x439d);
        EXPECT(gbc.pc(), 0xc467);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc465), 0x3e);
        EXPECT(gbc.readMem(0xc466), 0x1e);
        // 3E 01D6
        gbc.setState(0xbc3c, 0x31e7, 0xdf10, 0x84d1, 0x51c6, 0xfab5, 0x1, 0x0);
        gbc.writeMem(0xbc3c, { 0x3e, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x31e7);
        EXPECT(gbc.pc(), 0xbc3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc3c), 0x3e);
        EXPECT(gbc.readMem(0xbc3d), 0x9b);
        // 3E 01D7
        gbc.setState(0xc4f4, 0xd4c8, 0x4450, 0xe3a0, 0x7232, 0x8a86, 0x0, 0x1);
        gbc.writeMem(0xc4f4, { 0x3e, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd4c8);
        EXPECT(gbc.pc(), 0xc4f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4f4), 0x3e);
        EXPECT(gbc.readMem(0xc4f5), 0x6e);
        // 3E 01D8
        gbc.setState(0xeff8, 0x5af0, 0xc480, 0xf380, 0x5659, 0x44a9, 0x0, 0x1);
        gbc.writeMem(0xeff8, { 0x3e, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5af0);
        EXPECT(gbc.pc(), 0xeffa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeff8), 0x3e);
        EXPECT(gbc.readMem(0xeff9), 0xf8);
        // 3E 01D9
        gbc.setState(0xb927, 0x41ba, 0x1240, 0xe4a2, 0x4add, 0x2d15, 0x1, 0x0);
        gbc.writeMem(0xb927, { 0x3e, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x41ba);
        EXPECT(gbc.pc(), 0xb929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb927), 0x3e);
        EXPECT(gbc.readMem(0xb928), 0x56);
        // 3E 01DA
        gbc.setState(0xed46, 0x165f, 0xef30, 0x5922, 0x309d, 0x6d14, 0x0, 0x1);
        gbc.writeMem(0xed46, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x165f);
        EXPECT(gbc.pc(), 0xed48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed46), 0x3e);
        EXPECT(gbc.readMem(0xed47), 0x8c);
        // 3E 01DB
        gbc.setState(0x8e11, 0x7424, 0x5c00, 0xb025, 0xfb34, 0x19d0, 0x1, 0x1);
        gbc.writeMem(0x8e11, { 0x3e, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7424);
        EXPECT(gbc.pc(), 0x8e13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e11), 0x3e);
        EXPECT(gbc.readMem(0x8e12), 0x42);
        // 3E 01DC
        gbc.setState(0xcc9c, 0x1830, 0xdf0, 0xa93a, 0xdebf, 0x9a93, 0x0, 0x0);
        gbc.writeMem(0xcc9c, { 0x3e, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1830);
        EXPECT(gbc.pc(), 0xcc9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc9c), 0x3e);
        EXPECT(gbc.readMem(0xcc9d), 0x50);
        // 3E 01DD
        gbc.setState(0xd8c, 0x85be, 0x7950, 0x8cf6, 0xfa24, 0xb2df, 0x1, 0x0);
        gbc.writeMem(0xd8c, { 0x3e, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x85be);
        EXPECT(gbc.pc(), 0xd8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 01DE
        gbc.setState(0x6957, 0x74c9, 0x9bd0, 0xbe12, 0x2ca8, 0x284d, 0x0, 0x0);
        gbc.writeMem(0x6957, { 0x3e, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x74c9);
        EXPECT(gbc.pc(), 0x6959);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 01DF
        gbc.setState(0xb164, 0x351, 0x2ab0, 0xac9, 0x6bf6, 0x6f43, 0x1, 0x0);
        gbc.writeMem(0xb164, { 0x3e, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x351);
        EXPECT(gbc.pc(), 0xb166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb164), 0x3e);
        EXPECT(gbc.readMem(0xb165), 0x38);
        // 3E 01E0
        gbc.setState(0x53df, 0xb9da, 0x91a0, 0x1567, 0xf5a2, 0x3298, 0x0, 0x0);
        gbc.writeMem(0x53df, { 0x3e, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb9da);
        EXPECT(gbc.pc(), 0x53e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 01E1
        gbc.setState(0xbe75, 0xa9be, 0x4420, 0xe50e, 0x3e82, 0x949b, 0x0, 0x0);
        gbc.writeMem(0xbe75, { 0x3e, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa9be);
        EXPECT(gbc.pc(), 0xbe77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe75), 0x3e);
        EXPECT(gbc.readMem(0xbe76), 0x4d);
        // 3E 01E2
        gbc.setState(0x7eff, 0xa77a, 0xd00, 0xd243, 0xcb28, 0x63e8, 0x1, 0x1);
        gbc.writeMem(0x7eff, { 0x3e, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa77a);
        EXPECT(gbc.pc(), 0x7f01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 01E3
        gbc.setState(0x3262, 0x19cf, 0x7ba0, 0xb3cc, 0x8a35, 0xa71e, 0x0, 0x0);
        gbc.writeMem(0x3262, { 0x3e, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x19cf);
        EXPECT(gbc.pc(), 0x3264);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 01E4
        gbc.setState(0x114f, 0x5cc7, 0x14a0, 0xfe0e, 0xe993, 0xbffc, 0x0, 0x0);
        gbc.writeMem(0x114f, { 0x3e, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x5cc7);
        EXPECT(gbc.pc(), 0x1151);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 01E5
        gbc.setState(0x303d, 0x1d6a, 0xc30, 0x424c, 0x40cd, 0x7fb4, 0x0, 0x1);
        gbc.writeMem(0x303d, { 0x3e, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1d6a);
        EXPECT(gbc.pc(), 0x303f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 01E6
        gbc.setState(0x66e0, 0xfdfc, 0xd3b0, 0x5d9, 0xbca8, 0xfd28, 0x1, 0x0);
        gbc.writeMem(0x66e0, { 0x3e, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xfdfc);
        EXPECT(gbc.pc(), 0x66e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 01E7
        gbc.setState(0x4d6c, 0x3c0a, 0xcc0, 0xf35a, 0xefe2, 0x118e, 0x1, 0x0);
        gbc.writeMem(0x4d6c, { 0x3e, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3c0a);
        EXPECT(gbc.pc(), 0x4d6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 01E8
        gbc.setState(0x4927, 0xf806, 0xed90, 0x348c, 0x1af2, 0xd363, 0x1, 0x0);
        gbc.writeMem(0x4927, { 0x3e, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xf806);
        EXPECT(gbc.pc(), 0x4929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 01E9
        gbc.setState(0xe408, 0x186, 0x6090, 0xf356, 0x1581, 0xc19b, 0x1, 0x0);
        gbc.writeMem(0xe408, { 0x3e, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x186);
        EXPECT(gbc.pc(), 0xe40a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe408), 0x3e);
        EXPECT(gbc.readMem(0xe409), 0x7a);
        // 3E 01EA
        gbc.setState(0xde81, 0xe955, 0xa8f0, 0x4e2b, 0x7a9e, 0x9234, 0x0, 0x1);
        gbc.writeMem(0xde81, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe955);
        EXPECT(gbc.pc(), 0xde83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde81), 0x3e);
        EXPECT(gbc.readMem(0xde82), 0x3b);
        // 3E 01EB
        gbc.setState(0xcf6, 0x2411, 0x5f50, 0x2942, 0x6e0a, 0x3037, 0x0, 0x1);
        gbc.writeMem(0xcf6, { 0x3e, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2411);
        EXPECT(gbc.pc(), 0xcf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 01EC
        gbc.setState(0xa1de, 0x6141, 0xe340, 0xc9b2, 0x8576, 0x5628, 0x0, 0x1);
        gbc.writeMem(0xa1de, { 0x3e, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6141);
        EXPECT(gbc.pc(), 0xa1e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1de), 0x3e);
        EXPECT(gbc.readMem(0xa1df), 0x7d);
        // 3E 01ED
        gbc.setState(0x8a74, 0xf6ac, 0x26e0, 0x3d84, 0xd464, 0x7b12, 0x1, 0x0);
        gbc.writeMem(0x8a74, { 0x3e, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xf6ac);
        EXPECT(gbc.pc(), 0x8a76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a74), 0x3e);
        EXPECT(gbc.readMem(0x8a75), 0x98);
        // 3E 01EE
        gbc.setState(0x7f80, 0xb1e, 0xc310, 0xbbd8, 0x9d5, 0x2e88, 0x1, 0x0);
        gbc.writeMem(0x7f80, { 0x3e, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb1e);
        EXPECT(gbc.pc(), 0x7f82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 01EF
        gbc.setState(0x1ce1, 0xc4de, 0x4ac0, 0x733f, 0x8a2f, 0x1874, 0x0, 0x1);
        gbc.writeMem(0x1ce1, { 0x3e, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc4de);
        EXPECT(gbc.pc(), 0x1ce3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 01F0
        gbc.setState(0xeb2c, 0xaa0c, 0xcb0, 0x7a7e, 0x310, 0xf32, 0x1, 0x0);
        gbc.writeMem(0xeb2c, { 0x3e, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xaa0c);
        EXPECT(gbc.pc(), 0xeb2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb2c), 0x3e);
        EXPECT(gbc.readMem(0xeb2d), 0x99);
        // 3E 01F1
        gbc.setState(0xb1e1, 0x91e8, 0xe900, 0xdf0e, 0x40b4, 0xdd94, 0x1, 0x0);
        gbc.writeMem(0xb1e1, { 0x3e, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x91e8);
        EXPECT(gbc.pc(), 0xb1e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1e1), 0x3e);
        EXPECT(gbc.readMem(0xb1e2), 0xcc);
        // 3E 01F2
        gbc.setState(0xa88f, 0x563b, 0x7930, 0xa0b5, 0xd25, 0xf815, 0x1, 0x1);
        gbc.writeMem(0xa88f, { 0x3e, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x563b);
        EXPECT(gbc.pc(), 0xa891);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa88f), 0x3e);
        EXPECT(gbc.readMem(0xa890), 0x1c);
        // 3E 01F3
        gbc.setState(0xb4fc, 0x3bf4, 0x8500, 0xb40b, 0x1b5, 0x5a37, 0x0, 0x1);
        gbc.writeMem(0xb4fc, { 0x3e, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x3bf4);
        EXPECT(gbc.pc(), 0xb4fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4fc), 0x3e);
        EXPECT(gbc.readMem(0xb4fd), 0x8e);
        // 3E 01F4
        gbc.setState(0xbe12, 0xbc20, 0x95d0, 0xfcf8, 0x5a55, 0xd459, 0x1, 0x1);
        gbc.writeMem(0xbe12, { 0x3e, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xbc20);
        EXPECT(gbc.pc(), 0xbe14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe12), 0x3e);
        EXPECT(gbc.readMem(0xbe13), 0x3a);
        // 3E 01F5
        gbc.setState(0xcb77, 0xf525, 0xa140, 0x335f, 0xa90d, 0x34ca, 0x0, 0x0);
        gbc.writeMem(0xcb77, { 0x3e, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xf525);
        EXPECT(gbc.pc(), 0xcb79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb77), 0x3e);
        EXPECT(gbc.readMem(0xcb78), 0xc);
        // 3E 01F6
        gbc.setState(0x3b68, 0xa0a1, 0x29f0, 0x72f7, 0x4031, 0x1c4a, 0x1, 0x0);
        gbc.writeMem(0x3b68, { 0x3e, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa0a1);
        EXPECT(gbc.pc(), 0x3b6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 01F8
        gbc.setState(0x3472, 0x1b21, 0x30a0, 0xe2cd, 0x578e, 0x1530, 0x0, 0x1);
        gbc.writeMem(0x3472, { 0x3e, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1b21);
        EXPECT(gbc.pc(), 0x3474);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 01F9
        gbc.setState(0x87c2, 0xd649, 0x3ac0, 0xf294, 0x1c10, 0x3aab, 0x0, 0x0);
        gbc.writeMem(0x87c2, { 0x3e, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd649);
        EXPECT(gbc.pc(), 0x87c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87c2), 0x3e);
        EXPECT(gbc.readMem(0x87c3), 0x9c);
        // 3E 01FA
        gbc.setState(0x56bf, 0x7cd9, 0x2ed0, 0x17fd, 0xd04, 0xf3b6, 0x0, 0x0);
        gbc.writeMem(0x56bf, { 0x3e, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7cd9);
        EXPECT(gbc.pc(), 0x56c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 01FB
        gbc.setState(0x405b, 0x4019, 0xc220, 0x733c, 0xde30, 0x4349, 0x1, 0x0);
        gbc.writeMem(0x405b, { 0x3e, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4019);
        EXPECT(gbc.pc(), 0x405d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 01FC
        gbc.setState(0x9ca9, 0x8dad, 0xc9d0, 0x5328, 0x4226, 0x3659, 0x1, 0x1);
        gbc.writeMem(0x9ca9, { 0x3e, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8dad);
        EXPECT(gbc.pc(), 0x9cab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ca9), 0x3e);
        EXPECT(gbc.readMem(0x9caa), 0xe2);
        // 3E 01FE
        gbc.setState(0xd8c3, 0x3e0a, 0x9eb0, 0x7dc1, 0x4219, 0xe28b, 0x0, 0x1);
        gbc.writeMem(0xd8c3, { 0x3e, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3e0a);
        EXPECT(gbc.pc(), 0xd8c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8c3), 0x3e);
        EXPECT(gbc.readMem(0xd8c4), 0xf);
        // 3E 01FF
        gbc.setState(0xed2, 0x74d6, 0x8cb0, 0xffa6, 0x3243, 0x8cc6, 0x0, 0x1);
        gbc.writeMem(0xed2, { 0x3e, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x74d6);
        EXPECT(gbc.pc(), 0xed4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0200
        gbc.setState(0xd067, 0xd02a, 0x20c0, 0x4092, 0xdcd8, 0xf06f, 0x1, 0x1);
        gbc.writeMem(0xd067, { 0x3e, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd02a);
        EXPECT(gbc.pc(), 0xd069);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd067), 0x3e);
        EXPECT(gbc.readMem(0xd068), 0xdc);
        // 3E 0201
        gbc.setState(0x503f, 0xd865, 0x26c0, 0x85f2, 0xffec, 0x1d78, 0x0, 0x1);
        gbc.writeMem(0x503f, { 0x3e, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd865);
        EXPECT(gbc.pc(), 0x5041);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0202
        gbc.setState(0xa691, 0x8683, 0xf920, 0xf4de, 0x29a2, 0x3440, 0x1, 0x0);
        gbc.writeMem(0xa691, { 0x3e, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8683);
        EXPECT(gbc.pc(), 0xa693);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa691), 0x3e);
        EXPECT(gbc.readMem(0xa692), 0x2b);
        // 3E 0203
        gbc.setState(0xbea7, 0x762b, 0xf2b0, 0x6a8e, 0xe58d, 0xd029, 0x0, 0x0);
        gbc.writeMem(0xbea7, { 0x3e, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x762b);
        EXPECT(gbc.pc(), 0xbea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbea7), 0x3e);
        EXPECT(gbc.readMem(0xbea8), 0xd0);
        // 3E 0205
        gbc.setState(0x3974, 0x69a8, 0x9850, 0xafd2, 0x452d, 0xbedf, 0x1, 0x1);
        gbc.writeMem(0x3974, { 0x3e, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x69a8);
        EXPECT(gbc.pc(), 0x3976);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0206
        gbc.setState(0xaf28, 0xdb41, 0x2630, 0x4ecd, 0x67cf, 0x40c5, 0x1, 0x0);
        gbc.writeMem(0xaf28, { 0x3e, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xdb41);
        EXPECT(gbc.pc(), 0xaf2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf28), 0x3e);
        EXPECT(gbc.readMem(0xaf29), 0xe4);
        // 3E 0207
        gbc.setState(0xa598, 0xc90e, 0xdee0, 0x5db7, 0xf5d2, 0x646a, 0x0, 0x1);
        gbc.writeMem(0xa598, { 0x3e, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc90e);
        EXPECT(gbc.pc(), 0xa59a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa598), 0x3e);
        EXPECT(gbc.readMem(0xa599), 0x2c);
        // 3E 0208
        gbc.setState(0x915, 0x3198, 0xae40, 0x625e, 0x38dc, 0x78b2, 0x1, 0x0);
        gbc.writeMem(0x915, { 0x3e, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3198);
        EXPECT(gbc.pc(), 0x917);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0209
        gbc.setState(0x37ec, 0x555, 0x54c0, 0x3a88, 0xea9f, 0x171f, 0x1, 0x0);
        gbc.writeMem(0x37ec, { 0x3e, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x555);
        EXPECT(gbc.pc(), 0x37ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 020A
        gbc.setState(0xa9bb, 0x5f2b, 0xd590, 0xebeb, 0x1d93, 0x2cb, 0x0, 0x0);
        gbc.writeMem(0xa9bb, { 0x3e, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5f2b);
        EXPECT(gbc.pc(), 0xa9bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9bb), 0x3e);
        EXPECT(gbc.readMem(0xa9bc), 0xf9);
        // 3E 020B
        gbc.setState(0xd1a7, 0x5097, 0xe010, 0xfe70, 0x4f6, 0x3c69, 0x0, 0x1);
        gbc.writeMem(0xd1a7, { 0x3e, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5097);
        EXPECT(gbc.pc(), 0xd1a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1a7), 0x3e);
        EXPECT(gbc.readMem(0xd1a8), 0x50);
        // 3E 020C
        gbc.setState(0x4dc1, 0xabcc, 0x3da0, 0x87, 0x859c, 0x3e58, 0x0, 0x0);
        gbc.writeMem(0x4dc1, { 0x3e, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xabcc);
        EXPECT(gbc.pc(), 0x4dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 020E
        gbc.setState(0x6df2, 0xbcc2, 0x9120, 0xe55f, 0x1b72, 0xc403, 0x0, 0x1);
        gbc.writeMem(0x6df2, { 0x3e, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xbcc2);
        EXPECT(gbc.pc(), 0x6df4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 020F
        gbc.setState(0x7158, 0x9f03, 0xa3c0, 0xf9e3, 0xab57, 0x67b3, 0x1, 0x1);
        gbc.writeMem(0x7158, { 0x3e, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9f03);
        EXPECT(gbc.pc(), 0x715a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0210
        gbc.setState(0x7497, 0x15a8, 0xe000, 0xddae, 0x8ce8, 0x220d, 0x1, 0x1);
        gbc.writeMem(0x7497, { 0x3e, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x15a8);
        EXPECT(gbc.pc(), 0x7499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0212
        gbc.setState(0x6a71, 0xd6be, 0xd8e0, 0x4166, 0xda66, 0x9bad, 0x0, 0x0);
        gbc.writeMem(0x6a71, { 0x3e, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd6be);
        EXPECT(gbc.pc(), 0x6a73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0213
        gbc.setState(0x266e, 0xd24d, 0xbf00, 0xdc, 0x769a, 0x8cf7, 0x0, 0x1);
        gbc.writeMem(0x266e, { 0x3e, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd24d);
        EXPECT(gbc.pc(), 0x2670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0214
        gbc.setState(0xccb6, 0x9acb, 0x6270, 0x23a2, 0x5559, 0x4c07, 0x1, 0x0);
        gbc.writeMem(0xccb6, { 0x3e, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9acb);
        EXPECT(gbc.pc(), 0xccb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccb6), 0x3e);
        EXPECT(gbc.readMem(0xccb7), 0xd8);
        // 3E 0215
        gbc.setState(0x3057, 0xecb4, 0x3c90, 0x66d7, 0xd683, 0x31c3, 0x0, 0x0);
        gbc.writeMem(0x3057, { 0x3e, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xecb4);
        EXPECT(gbc.pc(), 0x3059);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0216
        gbc.setState(0x42a8, 0xf982, 0xf190, 0x3537, 0x255c, 0x900c, 0x0, 0x0);
        gbc.writeMem(0x42a8, { 0x3e, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf982);
        EXPECT(gbc.pc(), 0x42aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0217
        gbc.setState(0x528d, 0xeb59, 0x7f20, 0x7d, 0x7a62, 0x974e, 0x1, 0x1);
        gbc.writeMem(0x528d, { 0x3e, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xeb59);
        EXPECT(gbc.pc(), 0x528f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0218
        gbc.setState(0x4aab, 0x93e, 0x7290, 0xf5ea, 0xa9b, 0x2e14, 0x1, 0x0);
        gbc.writeMem(0x4aab, { 0x3e, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x93e);
        EXPECT(gbc.pc(), 0x4aad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0219
        gbc.setState(0xb05e, 0x29f5, 0x3730, 0x88bd, 0x4cb, 0x6c08, 0x1, 0x0);
        gbc.writeMem(0xb05e, { 0x3e, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x29f5);
        EXPECT(gbc.pc(), 0xb060);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb05e), 0x3e);
        EXPECT(gbc.readMem(0xb05f), 0xfa);
        // 3E 021A
        gbc.setState(0x5bfd, 0x3e9b, 0x43c0, 0x618d, 0x17fa, 0x7a25, 0x0, 0x1);
        gbc.writeMem(0x5bfd, { 0x3e, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3e9b);
        EXPECT(gbc.pc(), 0x5bff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 021B
        gbc.setState(0x70e9, 0xb59e, 0x7ad0, 0xc5b, 0x1218, 0xcca1, 0x1, 0x0);
        gbc.writeMem(0x70e9, { 0x3e, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb59e);
        EXPECT(gbc.pc(), 0x70eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 021C
        gbc.setState(0x1a2e, 0x8eec, 0xc360, 0xd76a, 0xdaf5, 0xb577, 0x1, 0x0);
        gbc.writeMem(0x1a2e, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x8eec);
        EXPECT(gbc.pc(), 0x1a30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 021D
        gbc.setState(0x13f4, 0x6014, 0xf200, 0x69e9, 0x8312, 0xa283, 0x1, 0x0);
        gbc.writeMem(0x13f4, { 0x3e, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6014);
        EXPECT(gbc.pc(), 0x13f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 021E
        gbc.setState(0x6cc2, 0xc12f, 0xa0c0, 0xd97e, 0xcc1c, 0x6d26, 0x0, 0x1);
        gbc.writeMem(0x6cc2, { 0x3e, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc12f);
        EXPECT(gbc.pc(), 0x6cc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 021F
        gbc.setState(0x3731, 0x177b, 0xefd0, 0x371b, 0xf1a2, 0x9d4c, 0x1, 0x1);
        gbc.writeMem(0x3731, { 0x3e, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x177b);
        EXPECT(gbc.pc(), 0x3733);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0220
        gbc.setState(0x3d75, 0x42aa, 0xd9a0, 0x1adb, 0xe3fa, 0xbf2b, 0x1, 0x1);
        gbc.writeMem(0x3d75, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x42aa);
        EXPECT(gbc.pc(), 0x3d77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0221
        gbc.setState(0x3780, 0x3091, 0x18d0, 0xae31, 0xe237, 0x30d0, 0x1, 0x1);
        gbc.writeMem(0x3780, { 0x3e, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3091);
        EXPECT(gbc.pc(), 0x3782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0222
        gbc.setState(0x1c74, 0x22f2, 0xc0b0, 0x892d, 0x88e, 0x976d, 0x0, 0x0);
        gbc.writeMem(0x1c74, { 0x3e, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x22f2);
        EXPECT(gbc.pc(), 0x1c76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0223
        gbc.setState(0x5a2e, 0xc043, 0x4ec0, 0x14f5, 0xce95, 0x719, 0x0, 0x1);
        gbc.writeMem(0x5a2e, { 0x3e, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc043);
        EXPECT(gbc.pc(), 0x5a30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0224
        gbc.setState(0xede0, 0x5586, 0x7ca0, 0x2b9e, 0x203f, 0x6841, 0x0, 0x0);
        gbc.writeMem(0xede0, { 0x3e, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x5586);
        EXPECT(gbc.pc(), 0xede2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xede0), 0x3e);
        EXPECT(gbc.readMem(0xede1), 0xe6);
        // 3E 0225
        gbc.setState(0x2eaf, 0x79fa, 0xed10, 0xc14f, 0x762e, 0xee01, 0x1, 0x0);
        gbc.writeMem(0x2eaf, { 0x3e, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x79fa);
        EXPECT(gbc.pc(), 0x2eb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0226
        gbc.setState(0x6006, 0x77a2, 0x5cd0, 0x7ccc, 0x919e, 0xc43c, 0x0, 0x1);
        gbc.writeMem(0x6006, { 0x3e, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x77a2);
        EXPECT(gbc.pc(), 0x6008);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0227
        gbc.setState(0x6910, 0xee91, 0xd5f0, 0x39e0, 0xe8ac, 0x3016, 0x1, 0x1);
        gbc.writeMem(0x6910, { 0x3e, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xee91);
        EXPECT(gbc.pc(), 0x6912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0228
        gbc.setState(0x7092, 0xffcf, 0x3b50, 0x2c01, 0x2fa4, 0xa1d7, 0x0, 0x0);
        gbc.writeMem(0x7092, { 0x3e, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xffcf);
        EXPECT(gbc.pc(), 0x7094);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0229
        gbc.setState(0x7382, 0x851a, 0xa150, 0xa342, 0x49a, 0x22fa, 0x1, 0x1);
        gbc.writeMem(0x7382, { 0x3e, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x851a);
        EXPECT(gbc.pc(), 0x7384);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 022A
        gbc.setState(0x443a, 0x50f0, 0x6810, 0xcf94, 0xd88e, 0x82dd, 0x0, 0x0);
        gbc.writeMem(0x443a, { 0x3e, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x50f0);
        EXPECT(gbc.pc(), 0x443c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 022B
        gbc.setState(0x5fb1, 0x38e5, 0x5e00, 0x6255, 0x6a48, 0xcc70, 0x1, 0x0);
        gbc.writeMem(0x5fb1, { 0x3e, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x38e5);
        EXPECT(gbc.pc(), 0x5fb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 022C
        gbc.setState(0x3acb, 0xa3b6, 0x46e0, 0xbaf6, 0x977e, 0x68f, 0x1, 0x1);
        gbc.writeMem(0x3acb, { 0x3e, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa3b6);
        EXPECT(gbc.pc(), 0x3acd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 022D
        gbc.setState(0x6e1b, 0xc03d, 0xe390, 0x2d0f, 0xbe27, 0x4bb0, 0x1, 0x0);
        gbc.writeMem(0x6e1b, { 0x3e, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc03d);
        EXPECT(gbc.pc(), 0x6e1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 022E
        gbc.setState(0xa718, 0xaa6c, 0xfd60, 0x5759, 0xc3ad, 0xf447, 0x0, 0x1);
        gbc.writeMem(0xa718, { 0x3e, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xaa6c);
        EXPECT(gbc.pc(), 0xa71a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa718), 0x3e);
        EXPECT(gbc.readMem(0xa719), 0xb2);
        // 3E 022F
        gbc.setState(0x97b3, 0x6024, 0x3f20, 0xa308, 0x2eb3, 0x9656, 0x0, 0x0);
        gbc.writeMem(0x97b3, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6024);
        EXPECT(gbc.pc(), 0x97b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97b3), 0x3e);
        EXPECT(gbc.readMem(0x97b4), 0x3b);
        // 3E 0230
        gbc.setState(0x7fe8, 0x33d6, 0x28d0, 0xdc3d, 0x5830, 0x7ed0, 0x0, 0x0);
        gbc.writeMem(0x7fe8, { 0x3e, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x33d6);
        EXPECT(gbc.pc(), 0x7fea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0231
        gbc.setState(0xe3f7, 0x91bd, 0xdbf0, 0x498b, 0x4234, 0x3b08, 0x1, 0x0);
        gbc.writeMem(0xe3f7, { 0x3e, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x91bd);
        EXPECT(gbc.pc(), 0xe3f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3f7), 0x3e);
        EXPECT(gbc.readMem(0xe3f8), 0x4);
        // 3E 0232
        gbc.setState(0x39a8, 0xc5fd, 0xe110, 0x14e3, 0x36b, 0xa5d8, 0x0, 0x0);
        gbc.writeMem(0x39a8, { 0x3e, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc5fd);
        EXPECT(gbc.pc(), 0x39aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0233
        gbc.setState(0x4ac, 0x302f, 0xc850, 0x4fe4, 0xacbe, 0x5483, 0x0, 0x0);
        gbc.writeMem(0x4ac, { 0x3e, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x302f);
        EXPECT(gbc.pc(), 0x4ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0234
        gbc.setState(0x19ba, 0xb113, 0xc740, 0xc39e, 0x6bc8, 0x4c6, 0x1, 0x0);
        gbc.writeMem(0x19ba, { 0x3e, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb113);
        EXPECT(gbc.pc(), 0x19bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0235
        gbc.setState(0xab6c, 0x70a2, 0x7750, 0xc767, 0x406d, 0x689e, 0x1, 0x0);
        gbc.writeMem(0xab6c, { 0x3e, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x70a2);
        EXPECT(gbc.pc(), 0xab6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab6c), 0x3e);
        EXPECT(gbc.readMem(0xab6d), 0xea);
        // 3E 0236
        gbc.setState(0x1f3b, 0xdaed, 0x4080, 0x2c15, 0xbf23, 0x3fb1, 0x1, 0x0);
        gbc.writeMem(0x1f3b, { 0x3e, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xdaed);
        EXPECT(gbc.pc(), 0x1f3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0237
        gbc.setState(0x71ed, 0xb72b, 0xc7b0, 0xea25, 0x29fa, 0x9c75, 0x0, 0x0);
        gbc.writeMem(0x71ed, { 0x3e, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb72b);
        EXPECT(gbc.pc(), 0x71ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0238
        gbc.setState(0xd4be, 0x2165, 0x0, 0xc237, 0xc850, 0x6ebf, 0x1, 0x1);
        gbc.writeMem(0xd4be, { 0x3e, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2165);
        EXPECT(gbc.pc(), 0xd4c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4be), 0x3e);
        EXPECT(gbc.readMem(0xd4bf), 0xd1);
        // 3E 0239
        gbc.setState(0x1c1e, 0xda92, 0xc490, 0x87eb, 0xabc6, 0xcf09, 0x0, 0x0);
        gbc.writeMem(0x1c1e, { 0x3e, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xda92);
        EXPECT(gbc.pc(), 0x1c20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 023A
        gbc.setState(0x7a21, 0xf933, 0xe2d0, 0x3ea, 0x44ff, 0xf07b, 0x1, 0x1);
        gbc.writeMem(0x7a21, { 0x3e, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf933);
        EXPECT(gbc.pc(), 0x7a23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 023B
        gbc.setState(0xd0d7, 0x5279, 0x96e0, 0xbd87, 0xd0d1, 0x6264, 0x1, 0x0);
        gbc.writeMem(0xd0d7, { 0x3e, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5279);
        EXPECT(gbc.pc(), 0xd0d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0d7), 0x3e);
        EXPECT(gbc.readMem(0xd0d8), 0xd3);
        // 3E 023C
        gbc.setState(0x8494, 0x8fb5, 0x3c00, 0x1780, 0xf0b3, 0x9e55, 0x0, 0x1);
        gbc.writeMem(0x8494, { 0x3e, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8fb5);
        EXPECT(gbc.pc(), 0x8496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8494), 0x3e);
        EXPECT(gbc.readMem(0x8495), 0x83);
        // 3E 023D
        gbc.setState(0x3e50, 0x484c, 0xfa00, 0xbd8a, 0xc427, 0x1bac, 0x1, 0x1);
        gbc.writeMem(0x3e50, { 0x3e, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x484c);
        EXPECT(gbc.pc(), 0x3e52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 023E
        gbc.setState(0xc7c7, 0x42c7, 0x1300, 0x8437, 0xfebf, 0xfc60, 0x0, 0x0);
        gbc.writeMem(0xc7c7, { 0x3e, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x42c7);
        EXPECT(gbc.pc(), 0xc7c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7c7), 0x3e);
        EXPECT(gbc.readMem(0xc7c8), 0x2e);
        // 3E 023F
        gbc.setState(0xca47, 0x7517, 0x10e0, 0xe8e0, 0x940b, 0x6350, 0x0, 0x0);
        gbc.writeMem(0xca47, { 0x3e, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7517);
        EXPECT(gbc.pc(), 0xca49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca47), 0x3e);
        EXPECT(gbc.readMem(0xca48), 0xa9);
        // 3E 0240
        gbc.setState(0xcc43, 0x3307, 0x7230, 0xad6, 0xc0cb, 0xf805, 0x1, 0x1);
        gbc.writeMem(0xcc43, { 0x3e, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3307);
        EXPECT(gbc.pc(), 0xcc45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc43), 0x3e);
        EXPECT(gbc.readMem(0xcc44), 0xe6);
        // 3E 0241
        gbc.setState(0x1086, 0x5d45, 0x17e0, 0xd323, 0x1182, 0xb8c9, 0x0, 0x0);
        gbc.writeMem(0x1086, { 0x3e, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5d45);
        EXPECT(gbc.pc(), 0x1088);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0242
        gbc.setState(0xd998, 0xb667, 0x6a10, 0x8c68, 0xacb, 0x1db2, 0x0, 0x1);
        gbc.writeMem(0xd998, { 0x3e, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb667);
        EXPECT(gbc.pc(), 0xd99a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd998), 0x3e);
        EXPECT(gbc.readMem(0xd999), 0xfc);
        // 3E 0243
        gbc.setState(0xd39c, 0x2fd1, 0x3d50, 0xc076, 0x9517, 0x5d69, 0x0, 0x0);
        gbc.writeMem(0xd39c, { 0x3e, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2fd1);
        EXPECT(gbc.pc(), 0xd39e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd39c), 0x3e);
        EXPECT(gbc.readMem(0xd39d), 0x4b);
        // 3E 0244
        gbc.setState(0xa696, 0xae7f, 0x9700, 0xaf01, 0xaadc, 0x6672, 0x1, 0x1);
        gbc.writeMem(0xa696, { 0x3e, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xae7f);
        EXPECT(gbc.pc(), 0xa698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa696), 0x3e);
        EXPECT(gbc.readMem(0xa697), 0x5);
        // 3E 0245
        gbc.setState(0x92d5, 0x7149, 0xe940, 0xfd66, 0x6356, 0x7e7c, 0x1, 0x1);
        gbc.writeMem(0x92d5, { 0x3e, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7149);
        EXPECT(gbc.pc(), 0x92d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92d5), 0x3e);
        EXPECT(gbc.readMem(0x92d6), 0xbc);
        // 3E 0246
        gbc.setState(0x46a, 0xf6f7, 0x4710, 0x7df3, 0x15aa, 0x2878, 0x0, 0x1);
        gbc.writeMem(0x46a, { 0x3e, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf6f7);
        EXPECT(gbc.pc(), 0x46c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0247
        gbc.setState(0x87c7, 0xafcc, 0x88c0, 0x5868, 0xb648, 0xf52e, 0x0, 0x1);
        gbc.writeMem(0x87c7, { 0x3e, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xafcc);
        EXPECT(gbc.pc(), 0x87c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87c7), 0x3e);
        EXPECT(gbc.readMem(0x87c8), 0xff);
        // 3E 0248
        gbc.setState(0xe8d8, 0x9311, 0xda80, 0xb2b1, 0x9951, 0x1a54, 0x1, 0x0);
        gbc.writeMem(0xe8d8, { 0x3e, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9311);
        EXPECT(gbc.pc(), 0xe8da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8d8), 0x3e);
        EXPECT(gbc.readMem(0xe8d9), 0x74);
        // 3E 0249
        gbc.setState(0xc130, 0x8bb6, 0x8b30, 0xf299, 0x2891, 0x9d12, 0x1, 0x0);
        gbc.writeMem(0xc130, { 0x3e, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8bb6);
        EXPECT(gbc.pc(), 0xc132);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc130), 0x3e);
        EXPECT(gbc.readMem(0xc131), 0x57);
        // 3E 024A
        gbc.setState(0x8e09, 0xf552, 0xf980, 0x443, 0xbb7, 0xc260, 0x0, 0x0);
        gbc.writeMem(0x8e09, { 0x3e, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf552);
        EXPECT(gbc.pc(), 0x8e0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e09), 0x3e);
        EXPECT(gbc.readMem(0x8e0a), 0x7c);
        // 3E 024B
        gbc.setState(0x7e17, 0x8ecf, 0x5af0, 0x15ff, 0xed00, 0xf70e, 0x0, 0x1);
        gbc.writeMem(0x7e17, { 0x3e, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8ecf);
        EXPECT(gbc.pc(), 0x7e19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 024C
        gbc.setState(0xc32e, 0x62c8, 0xf430, 0x11c5, 0x1d32, 0xac6d, 0x1, 0x0);
        gbc.writeMem(0xc32e, { 0x3e, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x62c8);
        EXPECT(gbc.pc(), 0xc330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc32e), 0x3e);
        EXPECT(gbc.readMem(0xc32f), 0x57);
        // 3E 024D
        gbc.setState(0xec7b, 0x9f21, 0x5080, 0xcd25, 0x961b, 0xb88e, 0x0, 0x0);
        gbc.writeMem(0xec7b, { 0x3e, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9f21);
        EXPECT(gbc.pc(), 0xec7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec7b), 0x3e);
        EXPECT(gbc.readMem(0xec7c), 0xc0);
        // 3E 024E
        gbc.setState(0x8d09, 0x3372, 0x8de0, 0x1cdf, 0x4145, 0xd5cc, 0x1, 0x0);
        gbc.writeMem(0x8d09, { 0x3e, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x3372);
        EXPECT(gbc.pc(), 0x8d0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d09), 0x3e);
        EXPECT(gbc.readMem(0x8d0a), 0xc1);
        // 3E 024F
        gbc.setState(0x7c3c, 0x5809, 0xe790, 0xf347, 0xba2b, 0x6a45, 0x1, 0x1);
        gbc.writeMem(0x7c3c, { 0x3e, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x5809);
        EXPECT(gbc.pc(), 0x7c3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0250
        gbc.setState(0xd92c, 0xeadc, 0x96d0, 0x8c66, 0x9575, 0xb082, 0x0, 0x1);
        gbc.writeMem(0xd92c, { 0x3e, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xeadc);
        EXPECT(gbc.pc(), 0xd92e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd92c), 0x3e);
        EXPECT(gbc.readMem(0xd92d), 0x21);
        // 3E 0251
        gbc.setState(0xd7bd, 0xc847, 0x40a0, 0xedb8, 0x5793, 0xebd, 0x0, 0x0);
        gbc.writeMem(0xd7bd, { 0x3e, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc847);
        EXPECT(gbc.pc(), 0xd7bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7bd), 0x3e);
        EXPECT(gbc.readMem(0xd7be), 0xba);
        // 3E 0252
        gbc.setState(0x7ce7, 0x2382, 0x9330, 0x93e7, 0xf3b0, 0x2fb3, 0x1, 0x0);
        gbc.writeMem(0x7ce7, { 0x3e, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2382);
        EXPECT(gbc.pc(), 0x7ce9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0254
        gbc.setState(0x8316, 0xb387, 0x29d0, 0x10e2, 0x5d04, 0x18b0, 0x0, 0x1);
        gbc.writeMem(0x8316, { 0x3e, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb387);
        EXPECT(gbc.pc(), 0x8318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8316), 0x3e);
        EXPECT(gbc.readMem(0x8317), 0xf8);
        // 3E 0255
        gbc.setState(0xd8d1, 0x634e, 0x98c0, 0x8b0a, 0x2d12, 0x3275, 0x0, 0x0);
        gbc.writeMem(0xd8d1, { 0x3e, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x634e);
        EXPECT(gbc.pc(), 0xd8d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8d1), 0x3e);
        EXPECT(gbc.readMem(0xd8d2), 0xe3);
        // 3E 0256
        gbc.setState(0x9982, 0x91ba, 0x440, 0xc8ad, 0xf011, 0x4cc8, 0x0, 0x1);
        gbc.writeMem(0x9982, { 0x3e, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x91ba);
        EXPECT(gbc.pc(), 0x9984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9982), 0x3e);
        EXPECT(gbc.readMem(0x9983), 0xf5);
        // 3E 0257
        gbc.setState(0x9e8d, 0x2d20, 0xc7a0, 0xcefe, 0x6d32, 0xf4e6, 0x0, 0x0);
        gbc.writeMem(0x9e8d, { 0x3e, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2d20);
        EXPECT(gbc.pc(), 0x9e8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e8d), 0x3e);
        EXPECT(gbc.readMem(0x9e8e), 0xed);
        // 3E 0258
        gbc.setState(0x1e44, 0xfc37, 0x7240, 0x8448, 0xe1e4, 0xa463, 0x1, 0x0);
        gbc.writeMem(0x1e44, { 0x3e, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xfc37);
        EXPECT(gbc.pc(), 0x1e46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0259
        gbc.setState(0xbfdf, 0xe119, 0x7630, 0xeb5f, 0xbe, 0x179b, 0x1, 0x1);
        gbc.writeMem(0xbfdf, { 0x3e, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xe119);
        EXPECT(gbc.pc(), 0xbfe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfdf), 0x3e);
        EXPECT(gbc.readMem(0xbfe0), 0xee);
        // 3E 025A
        gbc.setState(0x4fd2, 0x4399, 0xe880, 0x82c2, 0xe53d, 0x22da, 0x1, 0x0);
        gbc.writeMem(0x4fd2, { 0x3e, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x4399);
        EXPECT(gbc.pc(), 0x4fd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 025B
        gbc.setState(0xb100, 0xbb5a, 0x9c60, 0xe4d7, 0xb8fd, 0x58fc, 0x1, 0x0);
        gbc.writeMem(0xb100, { 0x3e, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xbb5a);
        EXPECT(gbc.pc(), 0xb102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb100), 0x3e);
        EXPECT(gbc.readMem(0xb101), 0x18);
        // 3E 025C
        gbc.setState(0xd4ee, 0xc152, 0xdcc0, 0xbaf0, 0xe017, 0xa0bd, 0x0, 0x0);
        gbc.writeMem(0xd4ee, { 0x3e, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc152);
        EXPECT(gbc.pc(), 0xd4f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4ee), 0x3e);
        EXPECT(gbc.readMem(0xd4ef), 0xd7);
        // 3E 025D
        gbc.setState(0xc190, 0xf191, 0x57a0, 0x51f2, 0xcfbc, 0xc943, 0x0, 0x0);
        gbc.writeMem(0xc190, { 0x3e, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf191);
        EXPECT(gbc.pc(), 0xc192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc190), 0x3e);
        EXPECT(gbc.readMem(0xc191), 0x40);
        // 3E 025E
        gbc.setState(0x11d9, 0xb61c, 0x8bf0, 0x7b28, 0x87ed, 0x7deb, 0x1, 0x0);
        gbc.writeMem(0x11d9, { 0x3e, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb61c);
        EXPECT(gbc.pc(), 0x11db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 025F
        gbc.setState(0xa2bd, 0xb7cd, 0x2b50, 0xcbdc, 0x86f5, 0xcef3, 0x0, 0x0);
        gbc.writeMem(0xa2bd, { 0x3e, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb7cd);
        EXPECT(gbc.pc(), 0xa2bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2bd), 0x3e);
        EXPECT(gbc.readMem(0xa2be), 0x27);
        // 3E 0260
        gbc.setState(0x85b5, 0x9cc6, 0xb40, 0x9535, 0x44ad, 0xc2bf, 0x0, 0x1);
        gbc.writeMem(0x85b5, { 0x3e, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9cc6);
        EXPECT(gbc.pc(), 0x85b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85b5), 0x3e);
        EXPECT(gbc.readMem(0x85b6), 0x64);
        // 3E 0261
        gbc.setState(0x6d0d, 0x8b3, 0xa50, 0xc92e, 0x7181, 0x86a6, 0x0, 0x1);
        gbc.writeMem(0x6d0d, { 0x3e, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8b3);
        EXPECT(gbc.pc(), 0x6d0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0262
        gbc.setState(0x7ac0, 0xdbce, 0xeeb0, 0x2c74, 0x17d2, 0x33e6, 0x0, 0x0);
        gbc.writeMem(0x7ac0, { 0x3e, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xdbce);
        EXPECT(gbc.pc(), 0x7ac2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0263
        gbc.setState(0x7c4f, 0x316b, 0x1660, 0xb1c2, 0x9540, 0x62be, 0x0, 0x0);
        gbc.writeMem(0x7c4f, { 0x3e, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x316b);
        EXPECT(gbc.pc(), 0x7c51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0264
        gbc.setState(0xe8ae, 0x66b3, 0x9d90, 0x22c8, 0x600, 0x69c9, 0x0, 0x1);
        gbc.writeMem(0xe8ae, { 0x3e, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x66b3);
        EXPECT(gbc.pc(), 0xe8b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8ae), 0x3e);
        EXPECT(gbc.readMem(0xe8af), 0x15);
        // 3E 0265
        gbc.setState(0xa9fd, 0xf50a, 0x4f60, 0xaaf1, 0xf8c3, 0x1a56, 0x0, 0x0);
        gbc.writeMem(0xa9fd, { 0x3e, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xf50a);
        EXPECT(gbc.pc(), 0xa9ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9fd), 0x3e);
        EXPECT(gbc.readMem(0xa9fe), 0x77);
        // 3E 0266
        gbc.setState(0x2f09, 0xd6d7, 0x82d0, 0x2e7c, 0xc026, 0xac0, 0x1, 0x1);
        gbc.writeMem(0x2f09, { 0x3e, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd6d7);
        EXPECT(gbc.pc(), 0x2f0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0267
        gbc.setState(0xc901, 0x7237, 0xc4f0, 0x44e8, 0x7908, 0x764a, 0x0, 0x1);
        gbc.writeMem(0xc901, { 0x3e, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7237);
        EXPECT(gbc.pc(), 0xc903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc901), 0x3e);
        EXPECT(gbc.readMem(0xc902), 0x1c);
        // 3E 0268
        gbc.setState(0x6354, 0x736b, 0xc690, 0x862c, 0xb11f, 0x5b1c, 0x0, 0x1);
        gbc.writeMem(0x6354, { 0x3e, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x736b);
        EXPECT(gbc.pc(), 0x6356);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0269
        gbc.setState(0x435f, 0xf810, 0x7250, 0x1596, 0xd266, 0x286e, 0x1, 0x1);
        gbc.writeMem(0x435f, { 0x3e, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xf810);
        EXPECT(gbc.pc(), 0x4361);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 026A
        gbc.setState(0x20c3, 0xab9f, 0x2780, 0x6688, 0xa58d, 0xb4b8, 0x0, 0x0);
        gbc.writeMem(0x20c3, { 0x3e, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xab9f);
        EXPECT(gbc.pc(), 0x20c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 026B
        gbc.setState(0x8a66, 0x40c1, 0x5290, 0x3bdb, 0xd7f2, 0xbc3d, 0x1, 0x0);
        gbc.writeMem(0x8a66, { 0x3e, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x40c1);
        EXPECT(gbc.pc(), 0x8a68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a66), 0x3e);
        EXPECT(gbc.readMem(0x8a67), 0x36);
        // 3E 026C
        gbc.setState(0x9bfa, 0xbef, 0x5770, 0x403a, 0xa9b5, 0xde08, 0x0, 0x0);
        gbc.writeMem(0x9bfa, { 0x3e, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xbef);
        EXPECT(gbc.pc(), 0x9bfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bfa), 0x3e);
        EXPECT(gbc.readMem(0x9bfb), 0x4);
        // 3E 026D
        gbc.setState(0x44c4, 0xd3ca, 0x6cd0, 0xc482, 0xfdc4, 0xc171, 0x0, 0x0);
        gbc.writeMem(0x44c4, { 0x3e, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd3ca);
        EXPECT(gbc.pc(), 0x44c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 026E
        gbc.setState(0x462e, 0xed6f, 0x8230, 0xadf7, 0x99fd, 0x1f0a, 0x1, 0x1);
        gbc.writeMem(0x462e, { 0x3e, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xed6f);
        EXPECT(gbc.pc(), 0x4630);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 026F
        gbc.setState(0x2b6e, 0x127, 0xc690, 0x7c58, 0xbeb6, 0x858a, 0x1, 0x0);
        gbc.writeMem(0x2b6e, { 0x3e, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x127);
        EXPECT(gbc.pc(), 0x2b70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0270
        gbc.setState(0xc3de, 0xeb04, 0x7a70, 0xc0f4, 0x445a, 0xe911, 0x1, 0x1);
        gbc.writeMem(0xc3de, { 0x3e, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xeb04);
        EXPECT(gbc.pc(), 0xc3e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3de), 0x3e);
        EXPECT(gbc.readMem(0xc3df), 0x27);
        // 3E 0272
        gbc.setState(0x569e, 0x9523, 0x9cb0, 0x6943, 0x32ac, 0x593b, 0x0, 0x1);
        gbc.writeMem(0x569e, { 0x3e, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x9523);
        EXPECT(gbc.pc(), 0x56a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0273
        gbc.setState(0x2464, 0x760d, 0x24e0, 0xffad, 0xbe0a, 0x46, 0x0, 0x1);
        gbc.writeMem(0x2464, { 0x3e, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x760d);
        EXPECT(gbc.pc(), 0x2466);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0274
        gbc.setState(0x53dc, 0x5501, 0xfdc0, 0xf84b, 0x4ab1, 0xaf10, 0x1, 0x1);
        gbc.writeMem(0x53dc, { 0x3e, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5501);
        EXPECT(gbc.pc(), 0x53de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0276
        gbc.setState(0x40fa, 0x619e, 0xd1a0, 0x12ec, 0xbac9, 0xb383, 0x0, 0x1);
        gbc.writeMem(0x40fa, { 0x3e, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x619e);
        EXPECT(gbc.pc(), 0x40fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0278
        gbc.setState(0x221d, 0xcc2a, 0x1900, 0x30cf, 0x9f83, 0x29bb, 0x0, 0x1);
        gbc.writeMem(0x221d, { 0x3e, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xcc2a);
        EXPECT(gbc.pc(), 0x221f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0279
        gbc.setState(0x1ba3, 0x1405, 0xbad0, 0x32e1, 0xceb8, 0x4170, 0x0, 0x0);
        gbc.writeMem(0x1ba3, { 0x3e, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x1405);
        EXPECT(gbc.pc(), 0x1ba5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 027A
        gbc.setState(0x9f8c, 0xc02d, 0xba60, 0x9308, 0x18a2, 0xf818, 0x0, 0x0);
        gbc.writeMem(0x9f8c, { 0x3e, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc02d);
        EXPECT(gbc.pc(), 0x9f8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f8c), 0x3e);
        EXPECT(gbc.readMem(0x9f8d), 0x62);
        // 3E 027B
        gbc.setState(0xc907, 0x2db0, 0x7480, 0x2e5, 0xbde6, 0xbb9e, 0x0, 0x1);
        gbc.writeMem(0xc907, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2db0);
        EXPECT(gbc.pc(), 0xc909);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc907), 0x3e);
        EXPECT(gbc.readMem(0xc908), 0x3b);
        // 3E 027C
        gbc.setState(0x1e3e, 0xa697, 0x2380, 0x4d6e, 0xb9fc, 0xab69, 0x1, 0x1);
        gbc.writeMem(0x1e3e, { 0x3e, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa697);
        EXPECT(gbc.pc(), 0x1e40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 027D
        gbc.setState(0x685e, 0xfec1, 0x1a20, 0xb262, 0x9048, 0x3ca1, 0x1, 0x1);
        gbc.writeMem(0x685e, { 0x3e, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xfec1);
        EXPECT(gbc.pc(), 0x6860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 027F
        gbc.setState(0x37dd, 0x6dde, 0x5d10, 0x94d2, 0x1ae9, 0x1116, 0x0, 0x1);
        gbc.writeMem(0x37dd, { 0x3e, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x6dde);
        EXPECT(gbc.pc(), 0x37df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0280
        gbc.setState(0xd453, 0x64be, 0x8400, 0x1e6c, 0x5e68, 0xc08a, 0x0, 0x0);
        gbc.writeMem(0xd453, { 0x3e, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x64be);
        EXPECT(gbc.pc(), 0xd455);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd453), 0x3e);
        EXPECT(gbc.readMem(0xd454), 0x42);
        // 3E 0282
        gbc.setState(0x4db3, 0xf208, 0xdd10, 0x66e1, 0xdf8f, 0xbf23, 0x0, 0x0);
        gbc.writeMem(0x4db3, { 0x3e, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf208);
        EXPECT(gbc.pc(), 0x4db5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0283
        gbc.setState(0xcdad, 0x6e77, 0x8390, 0x23a4, 0xe689, 0x9204, 0x0, 0x1);
        gbc.writeMem(0xcdad, { 0x3e, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6e77);
        EXPECT(gbc.pc(), 0xcdaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdad), 0x3e);
        EXPECT(gbc.readMem(0xcdae), 0xe6);
        // 3E 0284
        gbc.setState(0x6717, 0x6345, 0xe000, 0x31a7, 0xe441, 0x19cc, 0x0, 0x0);
        gbc.writeMem(0x6717, { 0x3e, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6345);
        EXPECT(gbc.pc(), 0x6719);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0285
        gbc.setState(0x6f05, 0x4317, 0x4630, 0x649b, 0xc8c1, 0xf02a, 0x1, 0x1);
        gbc.writeMem(0x6f05, { 0x3e, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4317);
        EXPECT(gbc.pc(), 0x6f07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0286
        gbc.setState(0x33eb, 0xfe4a, 0x9130, 0x37c7, 0xf6e9, 0x4b0f, 0x0, 0x1);
        gbc.writeMem(0x33eb, { 0x3e, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xfe4a);
        EXPECT(gbc.pc(), 0x33ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0287
        gbc.setState(0xca1f, 0xe15b, 0xfb30, 0x1e0d, 0x1873, 0xc49c, 0x1, 0x0);
        gbc.writeMem(0xca1f, { 0x3e, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe15b);
        EXPECT(gbc.pc(), 0xca21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca1f), 0x3e);
        EXPECT(gbc.readMem(0xca20), 0x65);
        // 3E 0288
        gbc.setState(0xb7ad, 0xebef, 0x32a0, 0x253e, 0x6f7d, 0x4fbe, 0x1, 0x0);
        gbc.writeMem(0xb7ad, { 0x3e, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xebef);
        EXPECT(gbc.pc(), 0xb7af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ad), 0x3e);
        EXPECT(gbc.readMem(0xb7ae), 0x37);
        // 3E 0289
        gbc.setState(0xaba4, 0xbf34, 0x5d50, 0xbf02, 0x2064, 0x1b4b, 0x0, 0x0);
        gbc.writeMem(0xaba4, { 0x3e, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xbf34);
        EXPECT(gbc.pc(), 0xaba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaba4), 0x3e);
        EXPECT(gbc.readMem(0xaba5), 0x5f);
        // 3E 028A
        gbc.setState(0x7cd5, 0x91cd, 0x7890, 0x1e95, 0x1997, 0x3c5d, 0x0, 0x1);
        gbc.writeMem(0x7cd5, { 0x3e, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x91cd);
        EXPECT(gbc.pc(), 0x7cd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 028B
        gbc.setState(0xd4db, 0x26e2, 0xd5f0, 0x1c98, 0x49bf, 0x9b92, 0x0, 0x1);
        gbc.writeMem(0xd4db, { 0x3e, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x26e2);
        EXPECT(gbc.pc(), 0xd4dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4db), 0x3e);
        EXPECT(gbc.readMem(0xd4dc), 0xce);
        // 3E 028C
        gbc.setState(0x73ff, 0x4edd, 0xdef0, 0xa5a6, 0xfd3f, 0x3e11, 0x0, 0x1);
        gbc.writeMem(0x73ff, { 0x3e, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4edd);
        EXPECT(gbc.pc(), 0x7401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 028D
        gbc.setState(0x38ff, 0xb60d, 0xe2e0, 0x504, 0x68f4, 0x1eac, 0x0, 0x0);
        gbc.writeMem(0x38ff, { 0x3e, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb60d);
        EXPECT(gbc.pc(), 0x3901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 028F
        gbc.setState(0x4e53, 0x8d49, 0xac10, 0xf48b, 0xa2b6, 0xda3a, 0x0, 0x1);
        gbc.writeMem(0x4e53, { 0x3e, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8d49);
        EXPECT(gbc.pc(), 0x4e55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0290
        gbc.setState(0xddef, 0x4aaa, 0xb0, 0xc55a, 0x24c0, 0x73cb, 0x1, 0x0);
        gbc.writeMem(0xddef, { 0x3e, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x4aaa);
        EXPECT(gbc.pc(), 0xddf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddef), 0x3e);
        EXPECT(gbc.readMem(0xddf0), 0xba);
        // 3E 0291
        gbc.setState(0x433, 0xe23e, 0xd290, 0x459f, 0xfec9, 0xc3ea, 0x1, 0x0);
        gbc.writeMem(0x433, { 0x3e, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xe23e);
        EXPECT(gbc.pc(), 0x435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0292
        gbc.setState(0x1a39, 0x8ce3, 0x20b0, 0xe403, 0x3281, 0x9a30, 0x1, 0x0);
        gbc.writeMem(0x1a39, { 0x3e, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8ce3);
        EXPECT(gbc.pc(), 0x1a3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0293
        gbc.setState(0x8cc8, 0x5f5, 0xc4b0, 0x583, 0x9514, 0xd1a2, 0x1, 0x0);
        gbc.writeMem(0x8cc8, { 0x3e, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5f5);
        EXPECT(gbc.pc(), 0x8cca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cc8), 0x3e);
        EXPECT(gbc.readMem(0x8cc9), 0x7b);
        // 3E 0294
        gbc.setState(0xe665, 0x1048, 0x9070, 0x4dae, 0x3a04, 0x14f0, 0x1, 0x0);
        gbc.writeMem(0xe665, { 0x3e, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1048);
        EXPECT(gbc.pc(), 0xe667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe665), 0x3e);
        EXPECT(gbc.readMem(0xe666), 0xe7);
        // 3E 0295
        gbc.setState(0xec1b, 0xcc77, 0xc110, 0x3e0f, 0xa672, 0x15ef, 0x0, 0x0);
        gbc.writeMem(0xec1b, { 0x3e, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xcc77);
        EXPECT(gbc.pc(), 0xec1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec1b), 0x3e);
        EXPECT(gbc.readMem(0xec1c), 0xef);
        // 3E 0297
        gbc.setState(0xbfb6, 0x75a1, 0x9b40, 0x551c, 0x303e, 0xfaa9, 0x0, 0x1);
        gbc.writeMem(0xbfb6, { 0x3e, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x75a1);
        EXPECT(gbc.pc(), 0xbfb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb6), 0x3e);
        EXPECT(gbc.readMem(0xbfb7), 0xf8);
        // 3E 0298
        gbc.setState(0x6218, 0x7526, 0xa0, 0x54de, 0xe5db, 0x4c21, 0x1, 0x0);
        gbc.writeMem(0x6218, { 0x3e, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7526);
        EXPECT(gbc.pc(), 0x621a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0299
        gbc.setState(0xbf09, 0x8b53, 0x31d0, 0x99f7, 0x7a16, 0x152f, 0x1, 0x0);
        gbc.writeMem(0xbf09, { 0x3e, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8b53);
        EXPECT(gbc.pc(), 0xbf0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf09), 0x3e);
        EXPECT(gbc.readMem(0xbf0a), 0xa4);
        // 3E 029A
        gbc.setState(0xbe1, 0xdbca, 0x1000, 0x345b, 0xa271, 0x2a64, 0x1, 0x1);
        gbc.writeMem(0xbe1, { 0x3e, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xdbca);
        EXPECT(gbc.pc(), 0xbe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 029B
        gbc.setState(0x4668, 0xdfd6, 0xe810, 0xe62, 0xab12, 0x28f2, 0x0, 0x1);
        gbc.writeMem(0x4668, { 0x3e, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xdfd6);
        EXPECT(gbc.pc(), 0x466a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 029C
        gbc.setState(0xed, 0xb11d, 0x3540, 0x1e96, 0xe1b4, 0x861a, 0x1, 0x0);
        gbc.writeMem(0xed, { 0x3e, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb11d);
        EXPECT(gbc.pc(), 0xef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 029D
        gbc.setState(0x93c7, 0xf307, 0xcf50, 0x519b, 0x97ba, 0xcfb4, 0x1, 0x1);
        gbc.writeMem(0x93c7, { 0x3e, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf307);
        EXPECT(gbc.pc(), 0x93c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93c7), 0x3e);
        EXPECT(gbc.readMem(0x93c8), 0xef);
        // 3E 029E
        gbc.setState(0x16a6, 0xe270, 0xfe70, 0x6699, 0x9c78, 0xd1f6, 0x0, 0x1);
        gbc.writeMem(0x16a6, { 0x3e, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe270);
        EXPECT(gbc.pc(), 0x16a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 029F
        gbc.setState(0x9df1, 0xc269, 0x8ef0, 0x19fd, 0x6d50, 0x17d, 0x1, 0x0);
        gbc.writeMem(0x9df1, { 0x3e, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc269);
        EXPECT(gbc.pc(), 0x9df3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9df1), 0x3e);
        EXPECT(gbc.readMem(0x9df2), 0x8a);
        // 3E 02A0
        gbc.setState(0xe569, 0x65ae, 0xe8f0, 0x531f, 0x100b, 0xc35f, 0x1, 0x0);
        gbc.writeMem(0xe569, { 0x3e, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x65ae);
        EXPECT(gbc.pc(), 0xe56b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe569), 0x3e);
        EXPECT(gbc.readMem(0xe56a), 0x72);
        // 3E 02A1
        gbc.setState(0x7fa1, 0x312d, 0x6950, 0x733b, 0x928d, 0x8511, 0x1, 0x1);
        gbc.writeMem(0x7fa1, { 0x3e, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x312d);
        EXPECT(gbc.pc(), 0x7fa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 02A2
        gbc.setState(0x3e3b, 0x4532, 0xce00, 0xeccf, 0x1e7f, 0x49bf, 0x1, 0x0);
        gbc.writeMem(0x3e3b, { 0x3e, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4532);
        EXPECT(gbc.pc(), 0x3e3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 02A3
        gbc.setState(0xce6c, 0xb833, 0xe900, 0x8989, 0x8e81, 0x5d88, 0x0, 0x1);
        gbc.writeMem(0xce6c, { 0x3e, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb833);
        EXPECT(gbc.pc(), 0xce6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce6c), 0x3e);
        EXPECT(gbc.readMem(0xce6d), 0x7f);
        // 3E 02A4
        gbc.setState(0xb2ab, 0x727, 0x2970, 0xc2ef, 0x55c6, 0x37ae, 0x1, 0x0);
        gbc.writeMem(0xb2ab, { 0x3e, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x727);
        EXPECT(gbc.pc(), 0xb2ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ab), 0x3e);
        EXPECT(gbc.readMem(0xb2ac), 0x96);
        // 3E 02A5
        gbc.setState(0xda7c, 0xd2ad, 0x77b0, 0xe76b, 0x75f2, 0xbfb4, 0x1, 0x0);
        gbc.writeMem(0xda7c, { 0x3e, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xd2ad);
        EXPECT(gbc.pc(), 0xda7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda7c), 0x3e);
        EXPECT(gbc.readMem(0xda7d), 0xf2);
        // 3E 02A6
        gbc.setState(0x7012, 0x745a, 0xe060, 0xc4c2, 0x3468, 0x6405, 0x0, 0x1);
        gbc.writeMem(0x7012, { 0x3e, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x745a);
        EXPECT(gbc.pc(), 0x7014);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 02A7
        gbc.setState(0x601c, 0x1931, 0xa940, 0x5844, 0xbf7b, 0xa754, 0x0, 0x1);
        gbc.writeMem(0x601c, { 0x3e, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x1931);
        EXPECT(gbc.pc(), 0x601e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 02A9
        gbc.setState(0x6890, 0x28df, 0x16d0, 0x28aa, 0x6eb5, 0x3801, 0x0, 0x1);
        gbc.writeMem(0x6890, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x28df);
        EXPECT(gbc.pc(), 0x6892);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 02AA
        gbc.setState(0x92be, 0xe545, 0x2840, 0x73a7, 0x34d8, 0x2120, 0x0, 0x1);
        gbc.writeMem(0x92be, { 0x3e, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xe545);
        EXPECT(gbc.pc(), 0x92c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92be), 0x3e);
        EXPECT(gbc.readMem(0x92bf), 0xd6);
        // 3E 02AB
        gbc.setState(0x6674, 0x517e, 0x3350, 0x1461, 0x81c6, 0xf5de, 0x0, 0x0);
        gbc.writeMem(0x6674, { 0x3e, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x517e);
        EXPECT(gbc.pc(), 0x6676);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 02AC
        gbc.setState(0xc382, 0xf8b0, 0xa660, 0x6926, 0xdfaf, 0xc930, 0x0, 0x1);
        gbc.writeMem(0xc382, { 0x3e, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf8b0);
        EXPECT(gbc.pc(), 0xc384);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc382), 0x3e);
        EXPECT(gbc.readMem(0xc383), 0x4);
        // 3E 02AE
        gbc.setState(0x1cb5, 0x31ad, 0xd760, 0x9bfc, 0x8748, 0x1518, 0x0, 0x1);
        gbc.writeMem(0x1cb5, { 0x3e, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x31ad);
        EXPECT(gbc.pc(), 0x1cb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 02AF
        gbc.setState(0x2106, 0x9b39, 0x59c0, 0x7b6e, 0x65ba, 0x364, 0x0, 0x0);
        gbc.writeMem(0x2106, { 0x3e, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9b39);
        EXPECT(gbc.pc(), 0x2108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 02B0
        gbc.setState(0x48bd, 0xcc54, 0x9630, 0x8d44, 0x3650, 0x5034, 0x1, 0x1);
        gbc.writeMem(0x48bd, { 0x3e, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xcc54);
        EXPECT(gbc.pc(), 0x48bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 02B1
        gbc.setState(0x243e, 0x8493, 0x7ae0, 0x14fc, 0xffbb, 0x286e, 0x1, 0x1);
        gbc.writeMem(0x243e, { 0x3e, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8493);
        EXPECT(gbc.pc(), 0x2440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 02B3
        gbc.setState(0x831e, 0x5fa8, 0xcc20, 0x2a6f, 0x14fe, 0x13c2, 0x0, 0x0);
        gbc.writeMem(0x831e, { 0x3e, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5fa8);
        EXPECT(gbc.pc(), 0x8320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x831e), 0x3e);
        EXPECT(gbc.readMem(0x831f), 0xf2);
        // 3E 02B4
        gbc.setState(0x200f, 0x29aa, 0x24d0, 0x23ca, 0xc368, 0x3c75, 0x1, 0x0);
        gbc.writeMem(0x200f, { 0x3e, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x29aa);
        EXPECT(gbc.pc(), 0x2011);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 02B5
        gbc.setState(0xead9, 0x6492, 0x6b20, 0x7d3f, 0x29be, 0xeffa, 0x1, 0x0);
        gbc.writeMem(0xead9, { 0x3e, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6492);
        EXPECT(gbc.pc(), 0xeadb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xead9), 0x3e);
        EXPECT(gbc.readMem(0xeada), 0xd);
        // 3E 02B6
        gbc.setState(0x9da5, 0xa924, 0x6f80, 0x4169, 0x49be, 0x3fc4, 0x1, 0x1);
        gbc.writeMem(0x9da5, { 0x3e, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xa924);
        EXPECT(gbc.pc(), 0x9da7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9da5), 0x3e);
        EXPECT(gbc.readMem(0x9da6), 0x3a);
        // 3E 02B7
        gbc.setState(0xbf6, 0x107b, 0x6080, 0xe83b, 0x9e53, 0x4f71, 0x0, 0x1);
        gbc.writeMem(0xbf6, { 0x3e, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x107b);
        EXPECT(gbc.pc(), 0xbf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 02B8
        gbc.setState(0xb6c9, 0x156b, 0xeb50, 0x92f5, 0xadb8, 0x7ab4, 0x1, 0x0);
        gbc.writeMem(0xb6c9, { 0x3e, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x156b);
        EXPECT(gbc.pc(), 0xb6cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6c9), 0x3e);
        EXPECT(gbc.readMem(0xb6ca), 0x1);
        // 3E 02B9
        gbc.setState(0xace4, 0x8bcf, 0xa40, 0x5e47, 0xcb9c, 0xc7f9, 0x0, 0x0);
        gbc.writeMem(0xace4, { 0x3e, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8bcf);
        EXPECT(gbc.pc(), 0xace6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xace4), 0x3e);
        EXPECT(gbc.readMem(0xace5), 0x50);
        // 3E 02BA
        gbc.setState(0xb480, 0x1419, 0x31e0, 0xebae, 0x7b23, 0x8960, 0x1, 0x1);
        gbc.writeMem(0xb480, { 0x3e, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1419);
        EXPECT(gbc.pc(), 0xb482);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb480), 0x3e);
        EXPECT(gbc.readMem(0xb481), 0x3);
        // 3E 02BB
        gbc.setState(0xe797, 0xc5c2, 0x5300, 0x7bdb, 0xc632, 0xb4ea, 0x1, 0x1);
        gbc.writeMem(0xe797, { 0x3e, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xc5c2);
        EXPECT(gbc.pc(), 0xe799);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe797), 0x3e);
        EXPECT(gbc.readMem(0xe798), 0x23);
        // 3E 02BC
        gbc.setState(0x3d43, 0xf929, 0x580, 0x1dfa, 0x7ef, 0x17ad, 0x0, 0x0);
        gbc.writeMem(0x3d43, { 0x3e, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf929);
        EXPECT(gbc.pc(), 0x3d45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 02BD
        gbc.setState(0xe65, 0x6fa2, 0xa00, 0x3cf5, 0x432b, 0xbca, 0x1, 0x1);
        gbc.writeMem(0xe65, { 0x3e, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6fa2);
        EXPECT(gbc.pc(), 0xe67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 02BE
        gbc.setState(0xc912, 0x8374, 0x4e90, 0xf1fb, 0xa27a, 0xbcef, 0x0, 0x0);
        gbc.writeMem(0xc912, { 0x3e, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8374);
        EXPECT(gbc.pc(), 0xc914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc912), 0x3e);
        EXPECT(gbc.readMem(0xc913), 0xc8);
        // 3E 02BF
        gbc.setState(0x5036, 0x108, 0xd210, 0x395b, 0xf0ad, 0x3e81, 0x0, 0x1);
        gbc.writeMem(0x5036, { 0x3e, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x108);
        EXPECT(gbc.pc(), 0x5038);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 02C0
        gbc.setState(0x110a, 0x7345, 0xc4b0, 0x37a4, 0xb677, 0x1b9d, 0x0, 0x1);
        gbc.writeMem(0x110a, { 0x3e, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7345);
        EXPECT(gbc.pc(), 0x110c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 02C1
        gbc.setState(0x76b1, 0x9c24, 0x4940, 0xf938, 0x9963, 0xfd7b, 0x1, 0x0);
        gbc.writeMem(0x76b1, { 0x3e, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9c24);
        EXPECT(gbc.pc(), 0x76b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 02C2
        gbc.setState(0x82b7, 0x232e, 0x98d0, 0xadbb, 0x1495, 0xc763, 0x1, 0x1);
        gbc.writeMem(0x82b7, { 0x3e, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x232e);
        EXPECT(gbc.pc(), 0x82b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82b7), 0x3e);
        EXPECT(gbc.readMem(0x82b8), 0x29);
        // 3E 02C3
        gbc.setState(0x6ccd, 0x99a6, 0x8580, 0x56a6, 0x9fb8, 0x4c5d, 0x1, 0x0);
        gbc.writeMem(0x6ccd, { 0x3e, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x99a6);
        EXPECT(gbc.pc(), 0x6ccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 02C4
        gbc.setState(0x1b6f, 0x439a, 0xe380, 0xab37, 0x3f02, 0x10d5, 0x1, 0x1);
        gbc.writeMem(0x1b6f, { 0x3e, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x439a);
        EXPECT(gbc.pc(), 0x1b71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 02C5
        gbc.setState(0x3bf, 0x30bb, 0x3300, 0x1b24, 0x40d6, 0x5d9c, 0x0, 0x0);
        gbc.writeMem(0x3bf, { 0x3e, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x30bb);
        EXPECT(gbc.pc(), 0x3c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 02C6
        gbc.setState(0xaf68, 0xb772, 0xd570, 0x6487, 0x2d28, 0x61a5, 0x0, 0x1);
        gbc.writeMem(0xaf68, { 0x3e, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xb772);
        EXPECT(gbc.pc(), 0xaf6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf68), 0x3e);
        EXPECT(gbc.readMem(0xaf69), 0x4c);
        // 3E 02C7
        gbc.setState(0x59a9, 0x1b06, 0xf520, 0x720f, 0xef80, 0xdc67, 0x0, 0x0);
        gbc.writeMem(0x59a9, { 0x3e, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x1b06);
        EXPECT(gbc.pc(), 0x59ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 02C8
        gbc.setState(0xd614, 0x12c4, 0x6030, 0x940b, 0x5f12, 0xfb49, 0x1, 0x0);
        gbc.writeMem(0xd614, { 0x3e, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x12c4);
        EXPECT(gbc.pc(), 0xd616);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd614), 0x3e);
        EXPECT(gbc.readMem(0xd615), 0x6c);
        // 3E 02C9
        gbc.setState(0x392e, 0x45b0, 0xd0d0, 0xda81, 0xe7c5, 0xf72b, 0x1, 0x1);
        gbc.writeMem(0x392e, { 0x3e, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x45b0);
        EXPECT(gbc.pc(), 0x3930);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 02CB
        gbc.setState(0xc4f9, 0xf9c5, 0xeda0, 0xa1ca, 0xeda6, 0x89b4, 0x1, 0x1);
        gbc.writeMem(0xc4f9, { 0x3e, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf9c5);
        EXPECT(gbc.pc(), 0xc4fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4f9), 0x3e);
        EXPECT(gbc.readMem(0xc4fa), 0xf6);
        // 3E 02CC
        gbc.setState(0xe8ff, 0x87bf, 0xc410, 0xab1d, 0xad1f, 0x4a7a, 0x1, 0x1);
        gbc.writeMem(0xe8ff, { 0x3e, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x87bf);
        EXPECT(gbc.pc(), 0xe901);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8ff), 0x3e);
        EXPECT(gbc.readMem(0xe900), 0x29);
        // 3E 02CD
        gbc.setState(0x3af7, 0x5531, 0xde0, 0x77ee, 0x5cd4, 0xc294, 0x0, 0x1);
        gbc.writeMem(0x3af7, { 0x3e, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5531);
        EXPECT(gbc.pc(), 0x3af9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 02CE
        gbc.setState(0x5c4f, 0x3a49, 0xe380, 0xe027, 0xeef1, 0x6589, 0x0, 0x1);
        gbc.writeMem(0x5c4f, { 0x3e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3a49);
        EXPECT(gbc.pc(), 0x5c51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 02CF
        gbc.setState(0x421d, 0x35d5, 0x5d10, 0x9d29, 0xbf69, 0x5581, 0x0, 0x0);
        gbc.writeMem(0x421d, { 0x3e, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x35d5);
        EXPECT(gbc.pc(), 0x421f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 02D0
        gbc.setState(0x4bf1, 0xd49c, 0x9590, 0x8447, 0x454b, 0xdf04, 0x1, 0x0);
        gbc.writeMem(0x4bf1, { 0x3e, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd49c);
        EXPECT(gbc.pc(), 0x4bf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 02D1
        gbc.setState(0x25e5, 0x8f90, 0xc7a0, 0x1c8d, 0x7012, 0xdbec, 0x1, 0x1);
        gbc.writeMem(0x25e5, { 0x3e, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8f90);
        EXPECT(gbc.pc(), 0x25e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 02D2
        gbc.setState(0x4f41, 0x646, 0xd4d0, 0x87fa, 0xc5e1, 0x59b6, 0x0, 0x0);
        gbc.writeMem(0x4f41, { 0x3e, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x646);
        EXPECT(gbc.pc(), 0x4f43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 02D3
        gbc.setState(0x85ec, 0x36d7, 0x2dc0, 0xb1b6, 0x40f8, 0x6057, 0x1, 0x0);
        gbc.writeMem(0x85ec, { 0x3e, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x36d7);
        EXPECT(gbc.pc(), 0x85ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85ec), 0x3e);
        EXPECT(gbc.readMem(0x85ed), 0x4d);
        // 3E 02D4
        gbc.setState(0x4374, 0x419b, 0x6300, 0x57a4, 0xa0f4, 0x1ec6, 0x1, 0x1);
        gbc.writeMem(0x4374, { 0x3e, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x419b);
        EXPECT(gbc.pc(), 0x4376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 02D5
        gbc.setState(0xc8f3, 0x21ab, 0xd340, 0xc545, 0x7abf, 0x7856, 0x0, 0x0);
        gbc.writeMem(0xc8f3, { 0x3e, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x21ab);
        EXPECT(gbc.pc(), 0xc8f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8f3), 0x3e);
        EXPECT(gbc.readMem(0xc8f4), 0xeb);
        // 3E 02D6
        gbc.setState(0xcd20, 0x699d, 0xffc0, 0x1590, 0x5650, 0x30b, 0x0, 0x1);
        gbc.writeMem(0xcd20, { 0x3e, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x699d);
        EXPECT(gbc.pc(), 0xcd22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd20), 0x3e);
        EXPECT(gbc.readMem(0xcd21), 0xb6);
        // 3E 02D7
        gbc.setState(0x3066, 0xa2d6, 0x9470, 0x8fd4, 0xecd3, 0xe00d, 0x0, 0x1);
        gbc.writeMem(0x3066, { 0x3e, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa2d6);
        EXPECT(gbc.pc(), 0x3068);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 02D8
        gbc.setState(0x80d0, 0x1d89, 0x8c30, 0xc752, 0x6b6f, 0x1c11, 0x0, 0x1);
        gbc.writeMem(0x80d0, { 0x3e, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1d89);
        EXPECT(gbc.pc(), 0x80d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80d0), 0x3e);
        EXPECT(gbc.readMem(0x80d1), 0xe2);
        // 3E 02D9
        gbc.setState(0xd13f, 0xcc07, 0x1440, 0x2f8c, 0x757d, 0xbcfc, 0x1, 0x0);
        gbc.writeMem(0xd13f, { 0x3e, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xcc07);
        EXPECT(gbc.pc(), 0xd141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd13f), 0x3e);
        EXPECT(gbc.readMem(0xd140), 0xb1);
        // 3E 02DA
        gbc.setState(0x4e4d, 0xc6e8, 0xc320, 0x9164, 0xf4bf, 0x556a, 0x0, 0x1);
        gbc.writeMem(0x4e4d, { 0x3e, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc6e8);
        EXPECT(gbc.pc(), 0x4e4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 02DB
        gbc.setState(0xb346, 0xeab1, 0x56c0, 0xddec, 0x3024, 0xe364, 0x1, 0x1);
        gbc.writeMem(0xb346, { 0x3e, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xeab1);
        EXPECT(gbc.pc(), 0xb348);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb346), 0x3e);
        EXPECT(gbc.readMem(0xb347), 0x2f);
        // 3E 02DC
        gbc.setState(0xc1cb, 0x564f, 0xa640, 0x2ba1, 0xe775, 0x5635, 0x0, 0x0);
        gbc.writeMem(0xc1cb, { 0x3e, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x564f);
        EXPECT(gbc.pc(), 0xc1cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1cb), 0x3e);
        EXPECT(gbc.readMem(0xc1cc), 0xa8);
        // 3E 02DD
        gbc.setState(0x1f52, 0xb8a0, 0xfb0, 0x5ee1, 0xb237, 0xfb8a, 0x1, 0x0);
        gbc.writeMem(0x1f52, { 0x3e, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb8a0);
        EXPECT(gbc.pc(), 0x1f54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 02DE
        gbc.setState(0xc56b, 0xfd45, 0xf3f0, 0x3144, 0xa246, 0x436e, 0x1, 0x0);
        gbc.writeMem(0xc56b, { 0x3e, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xfd45);
        EXPECT(gbc.pc(), 0xc56d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc56b), 0x3e);
        EXPECT(gbc.readMem(0xc56c), 0x33);
        // 3E 02DF
        gbc.setState(0x640c, 0xeb42, 0x110, 0x1fe2, 0x10a9, 0x3532, 0x0, 0x1);
        gbc.writeMem(0x640c, { 0x3e, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xeb42);
        EXPECT(gbc.pc(), 0x640e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 02E0
        gbc.setState(0x31e4, 0x1c43, 0x8670, 0x81cb, 0xf286, 0x56e7, 0x0, 0x0);
        gbc.writeMem(0x31e4, { 0x3e, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1c43);
        EXPECT(gbc.pc(), 0x31e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 02E1
        gbc.setState(0x28a7, 0x9525, 0xd870, 0xa7, 0xfb75, 0xb984, 0x0, 0x0);
        gbc.writeMem(0x28a7, { 0x3e, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x9525);
        EXPECT(gbc.pc(), 0x28a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 02E2
        gbc.setState(0x93b4, 0x4cc3, 0x9e10, 0xee01, 0x743f, 0xb348, 0x0, 0x1);
        gbc.writeMem(0x93b4, { 0x3e, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4cc3);
        EXPECT(gbc.pc(), 0x93b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93b4), 0x3e);
        EXPECT(gbc.readMem(0x93b5), 0x2f);
        // 3E 02E3
        gbc.setState(0x35be, 0x5464, 0xf400, 0xbaa2, 0x854, 0x61aa, 0x1, 0x1);
        gbc.writeMem(0x35be, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5464);
        EXPECT(gbc.pc(), 0x35c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 02E4
        gbc.setState(0xe4cf, 0x8485, 0x8680, 0xd00, 0x26b1, 0xd706, 0x1, 0x0);
        gbc.writeMem(0xe4cf, { 0x3e, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x8485);
        EXPECT(gbc.pc(), 0xe4d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4cf), 0x3e);
        EXPECT(gbc.readMem(0xe4d0), 0xb6);
        // 3E 02E5
        gbc.setState(0xbf1, 0x78d8, 0xbfc0, 0x67b7, 0x94b8, 0x795d, 0x1, 0x1);
        gbc.writeMem(0xbf1, { 0x3e, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x78d8);
        EXPECT(gbc.pc(), 0xbf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 02E6
        gbc.setState(0x48f7, 0x5966, 0x1650, 0xbe3, 0x1da, 0x2914, 0x0, 0x0);
        gbc.writeMem(0x48f7, { 0x3e, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5966);
        EXPECT(gbc.pc(), 0x48f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 02E8
        gbc.setState(0xed91, 0xa451, 0x450, 0xb4e6, 0x7223, 0x7be8, 0x0, 0x1);
        gbc.writeMem(0xed91, { 0x3e, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa451);
        EXPECT(gbc.pc(), 0xed93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed91), 0x3e);
        EXPECT(gbc.readMem(0xed92), 0xbe);
        // 3E 02EA
        gbc.setState(0x6e71, 0x1c45, 0x38f0, 0xd750, 0xd729, 0xb19e, 0x0, 0x0);
        gbc.writeMem(0x6e71, { 0x3e, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1c45);
        EXPECT(gbc.pc(), 0x6e73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 02EB
        gbc.setState(0xd7f5, 0x479, 0xe120, 0x8ee5, 0x3dfc, 0xcc1b, 0x0, 0x0);
        gbc.writeMem(0xd7f5, { 0x3e, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x479);
        EXPECT(gbc.pc(), 0xd7f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7f5), 0x3e);
        EXPECT(gbc.readMem(0xd7f6), 0x4);
        // 3E 02EC
        gbc.setState(0x736d, 0xfc13, 0x2e60, 0xb766, 0x9442, 0x3528, 0x0, 0x0);
        gbc.writeMem(0x736d, { 0x3e, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xfc13);
        EXPECT(gbc.pc(), 0x736f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 02ED
        gbc.setState(0x9e40, 0x945f, 0xfa20, 0x1f8d, 0x6f66, 0x570c, 0x0, 0x0);
        gbc.writeMem(0x9e40, { 0x3e, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x945f);
        EXPECT(gbc.pc(), 0x9e42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e40), 0x3e);
        EXPECT(gbc.readMem(0x9e41), 0xc9);
        // 3E 02EE
        gbc.setState(0xbb8b, 0x65e7, 0x380, 0xe64b, 0x1093, 0xa32e, 0x1, 0x1);
        gbc.writeMem(0xbb8b, { 0x3e, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x65e7);
        EXPECT(gbc.pc(), 0xbb8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb8b), 0x3e);
        EXPECT(gbc.readMem(0xbb8c), 0x38);
        // 3E 02EF
        gbc.setState(0x6ec4, 0x7ad4, 0xfa0, 0x97fa, 0xabf6, 0xab8b, 0x1, 0x1);
        gbc.writeMem(0x6ec4, { 0x3e, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7ad4);
        EXPECT(gbc.pc(), 0x6ec6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 02F0
        gbc.setState(0x3d12, 0xaffc, 0x8160, 0x7c07, 0x7664, 0x6635, 0x1, 0x1);
        gbc.writeMem(0x3d12, { 0x3e, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xaffc);
        EXPECT(gbc.pc(), 0x3d14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 02F1
        gbc.setState(0xe54f, 0xb446, 0x5280, 0x4ac8, 0xdde4, 0x934d, 0x1, 0x0);
        gbc.writeMem(0xe54f, { 0x3e, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb446);
        EXPECT(gbc.pc(), 0xe551);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe54f), 0x3e);
        EXPECT(gbc.readMem(0xe550), 0x79);
        // 3E 02F2
        gbc.setState(0xad85, 0xb377, 0x32c0, 0x942, 0x4350, 0x406a, 0x1, 0x1);
        gbc.writeMem(0xad85, { 0x3e, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb377);
        EXPECT(gbc.pc(), 0xad87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad85), 0x3e);
        EXPECT(gbc.readMem(0xad86), 0xb7);
        // 3E 02F3
        gbc.setState(0xe0bf, 0xd56a, 0x61d0, 0x7b16, 0xb6c8, 0xa7a6, 0x0, 0x0);
        gbc.writeMem(0xe0bf, { 0x3e, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xd56a);
        EXPECT(gbc.pc(), 0xe0c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0bf), 0x3e);
        EXPECT(gbc.readMem(0xe0c0), 0x44);
        // 3E 02F5
        gbc.setState(0xcf6a, 0xd048, 0x2fa0, 0x8f20, 0x4ada, 0x8e57, 0x1, 0x0);
        gbc.writeMem(0xcf6a, { 0x3e, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd048);
        EXPECT(gbc.pc(), 0xcf6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf6a), 0x3e);
        EXPECT(gbc.readMem(0xcf6b), 0xfa);
        // 3E 02F8
        gbc.setState(0xe3c4, 0x761c, 0x68a0, 0x6a5b, 0x1143, 0xb343, 0x0, 0x0);
        gbc.writeMem(0xe3c4, { 0x3e, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x761c);
        EXPECT(gbc.pc(), 0xe3c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3c4), 0x3e);
        EXPECT(gbc.readMem(0xe3c5), 0xc9);
        // 3E 02F9
        gbc.setState(0x43a0, 0x1c32, 0x5bb0, 0x8156, 0xfb25, 0x7190, 0x0, 0x0);
        gbc.writeMem(0x43a0, { 0x3e, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1c32);
        EXPECT(gbc.pc(), 0x43a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 02FA
        gbc.setState(0x81df, 0x8bbf, 0x8780, 0x6edd, 0x1d91, 0x34d6, 0x1, 0x1);
        gbc.writeMem(0x81df, { 0x3e, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8bbf);
        EXPECT(gbc.pc(), 0x81e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81df), 0x3e);
        EXPECT(gbc.readMem(0x81e0), 0xe3);
        // 3E 02FB
        gbc.setState(0x49a2, 0x4259, 0xb7d0, 0x2012, 0x58d1, 0xe7d6, 0x1, 0x1);
        gbc.writeMem(0x49a2, { 0x3e, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4259);
        EXPECT(gbc.pc(), 0x49a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 02FC
        gbc.setState(0x1473, 0xa0ff, 0xefc0, 0x1ecc, 0x65f2, 0x1141, 0x0, 0x0);
        gbc.writeMem(0x1473, { 0x3e, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa0ff);
        EXPECT(gbc.pc(), 0x1475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 02FD
        gbc.setState(0x4f6, 0x584d, 0xe410, 0x44ae, 0x5121, 0x3564, 0x1, 0x0);
        gbc.writeMem(0x4f6, { 0x3e, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x584d);
        EXPECT(gbc.pc(), 0x4f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 02FE
        gbc.setState(0x1fb6, 0x8977, 0x6e10, 0x33b, 0x3ba2, 0xff10, 0x1, 0x1);
        gbc.writeMem(0x1fb6, { 0x3e, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8977);
        EXPECT(gbc.pc(), 0x1fb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 02FF
        gbc.setState(0xaf30, 0x89dd, 0x71a0, 0x9d68, 0xd13c, 0x7059, 0x0, 0x0);
        gbc.writeMem(0xaf30, { 0x3e, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x89dd);
        EXPECT(gbc.pc(), 0xaf32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf30), 0x3e);
        EXPECT(gbc.readMem(0xaf31), 0x7a);
        // 3E 0300
        gbc.setState(0x592c, 0x764a, 0x4810, 0xecfa, 0xafa7, 0x81fb, 0x1, 0x1);
        gbc.writeMem(0x592c, { 0x3e, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x764a);
        EXPECT(gbc.pc(), 0x592e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0301
        gbc.setState(0x4067, 0x2c11, 0x1e40, 0x557e, 0x1bd0, 0xffcc, 0x0, 0x0);
        gbc.writeMem(0x4067, { 0x3e, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2c11);
        EXPECT(gbc.pc(), 0x4069);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0302
        gbc.setState(0xe6c8, 0x823c, 0x46a0, 0x9cc0, 0x8698, 0x433f, 0x0, 0x0);
        gbc.writeMem(0xe6c8, { 0x3e, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x823c);
        EXPECT(gbc.pc(), 0xe6ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6c8), 0x3e);
        EXPECT(gbc.readMem(0xe6c9), 0x5b);
        // 3E 0303
        gbc.setState(0x7687, 0x61ed, 0xf230, 0xf1ea, 0xbcc3, 0x8e27, 0x0, 0x1);
        gbc.writeMem(0x7687, { 0x3e, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x61ed);
        EXPECT(gbc.pc(), 0x7689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0304
        gbc.setState(0x9946, 0xc678, 0x49e0, 0xfb7, 0x20b9, 0x2358, 0x0, 0x0);
        gbc.writeMem(0x9946, { 0x3e, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc678);
        EXPECT(gbc.pc(), 0x9948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9946), 0x3e);
        EXPECT(gbc.readMem(0x9947), 0xb8);
        // 3E 0305
        gbc.setState(0x749d, 0xe14b, 0x4ee0, 0xf328, 0x7836, 0x6e5a, 0x1, 0x1);
        gbc.writeMem(0x749d, { 0x3e, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe14b);
        EXPECT(gbc.pc(), 0x749f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0306
        gbc.setState(0x291e, 0xd647, 0xccf0, 0x91ce, 0x494e, 0x6bd1, 0x1, 0x1);
        gbc.writeMem(0x291e, { 0x3e, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd647);
        EXPECT(gbc.pc(), 0x2920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0307
        gbc.setState(0x120f, 0x1237, 0xb040, 0x124, 0xe557, 0x8b8e, 0x0, 0x0);
        gbc.writeMem(0x120f, { 0x3e, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1237);
        EXPECT(gbc.pc(), 0x1211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0308
        gbc.setState(0xd23c, 0x7eff, 0xed20, 0x1300, 0x162c, 0xc03f, 0x0, 0x1);
        gbc.writeMem(0xd23c, { 0x3e, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7eff);
        EXPECT(gbc.pc(), 0xd23e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd23c), 0x3e);
        EXPECT(gbc.readMem(0xd23d), 0x4);
        // 3E 0309
        gbc.setState(0xcae1, 0x2469, 0xe8a0, 0xd0d4, 0x5f49, 0x731f, 0x0, 0x0);
        gbc.writeMem(0xcae1, { 0x3e, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x2469);
        EXPECT(gbc.pc(), 0xcae3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcae1), 0x3e);
        EXPECT(gbc.readMem(0xcae2), 0xcf);
        // 3E 030A
        gbc.setState(0x8fdf, 0x4fa9, 0x1d30, 0x6169, 0x6290, 0x2e63, 0x1, 0x0);
        gbc.writeMem(0x8fdf, { 0x3e, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4fa9);
        EXPECT(gbc.pc(), 0x8fe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fdf), 0x3e);
        EXPECT(gbc.readMem(0x8fe0), 0x6f);
        // 3E 030B
        gbc.setState(0xb69, 0x5e38, 0xfd40, 0xb091, 0xbe2a, 0xf898, 0x0, 0x0);
        gbc.writeMem(0xb69, { 0x3e, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5e38);
        EXPECT(gbc.pc(), 0xb6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 030C
        gbc.setState(0x7588, 0x174d, 0x4830, 0xe663, 0x2d7, 0xf2b6, 0x0, 0x1);
        gbc.writeMem(0x7588, { 0x3e, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x174d);
        EXPECT(gbc.pc(), 0x758a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 030D
        gbc.setState(0xd295, 0x8ca5, 0x51a0, 0xad73, 0x46cb, 0xad60, 0x0, 0x0);
        gbc.writeMem(0xd295, { 0x3e, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8ca5);
        EXPECT(gbc.pc(), 0xd297);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd295), 0x3e);
        EXPECT(gbc.readMem(0xd296), 0x31);
        // 3E 030E
        gbc.setState(0x5fd1, 0x83b, 0xa550, 0x24bb, 0x3566, 0xee85, 0x0, 0x0);
        gbc.writeMem(0x5fd1, { 0x3e, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x83b);
        EXPECT(gbc.pc(), 0x5fd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 030F
        gbc.setState(0x53e2, 0xe04a, 0xc700, 0xd633, 0x451d, 0x7c1e, 0x1, 0x0);
        gbc.writeMem(0x53e2, { 0x3e, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe04a);
        EXPECT(gbc.pc(), 0x53e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0310
        gbc.setState(0x144a, 0x7b5b, 0x3dd0, 0xf747, 0x1199, 0xc876, 0x0, 0x1);
        gbc.writeMem(0x144a, { 0x3e, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7b5b);
        EXPECT(gbc.pc(), 0x144c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0311
        gbc.setState(0xccd8, 0x3fcd, 0x5500, 0x5ff6, 0x138f, 0xfb14, 0x0, 0x0);
        gbc.writeMem(0xccd8, { 0x3e, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3fcd);
        EXPECT(gbc.pc(), 0xccda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd8), 0x3e);
        EXPECT(gbc.readMem(0xccd9), 0x4e);
        // 3E 0312
        gbc.setState(0xa198, 0xade6, 0xd260, 0x106c, 0xf133, 0x332b, 0x1, 0x0);
        gbc.writeMem(0xa198, { 0x3e, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xade6);
        EXPECT(gbc.pc(), 0xa19a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa198), 0x3e);
        EXPECT(gbc.readMem(0xa199), 0x7f);
        // 3E 0314
        gbc.setState(0x77ee, 0xc0b2, 0x8ba0, 0x13e8, 0x93c7, 0x9f88, 0x0, 0x1);
        gbc.writeMem(0x77ee, { 0x3e, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc0b2);
        EXPECT(gbc.pc(), 0x77f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0315
        gbc.setState(0x97f1, 0xdd1b, 0x6ee0, 0x1fa1, 0x5561, 0xde88, 0x0, 0x0);
        gbc.writeMem(0x97f1, { 0x3e, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xdd1b);
        EXPECT(gbc.pc(), 0x97f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97f1), 0x3e);
        EXPECT(gbc.readMem(0x97f2), 0xc6);
        // 3E 0316
        gbc.setState(0x60bb, 0x646f, 0xd610, 0x117b, 0x19f5, 0xeb07, 0x0, 0x1);
        gbc.writeMem(0x60bb, { 0x3e, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x646f);
        EXPECT(gbc.pc(), 0x60bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0317
        gbc.setState(0x5628, 0x34c0, 0x52f0, 0x5c6d, 0x9d4c, 0x40af, 0x1, 0x1);
        gbc.writeMem(0x5628, { 0x3e, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x34c0);
        EXPECT(gbc.pc(), 0x562a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0318
        gbc.setState(0x83d0, 0xb5a8, 0x7c10, 0x4209, 0x6d9, 0x4c95, 0x0, 0x0);
        gbc.writeMem(0x83d0, { 0x3e, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb5a8);
        EXPECT(gbc.pc(), 0x83d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83d0), 0x3e);
        EXPECT(gbc.readMem(0x83d1), 0x13);
        // 3E 0319
        gbc.setState(0x4717, 0xa6ec, 0x4a10, 0x15f6, 0x9b3e, 0xeaae, 0x0, 0x1);
        gbc.writeMem(0x4717, { 0x3e, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa6ec);
        EXPECT(gbc.pc(), 0x4719);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 031B
        gbc.setState(0x7177, 0x3cb, 0xd320, 0x400, 0x68e5, 0x3bd5, 0x1, 0x1);
        gbc.writeMem(0x7177, { 0x3e, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x3cb);
        EXPECT(gbc.pc(), 0x7179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 031C
        gbc.setState(0x9a62, 0x5424, 0x4d20, 0xe6ed, 0xaf93, 0xaaee, 0x1, 0x0);
        gbc.writeMem(0x9a62, { 0x3e, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5424);
        EXPECT(gbc.pc(), 0x9a64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a62), 0x3e);
        EXPECT(gbc.readMem(0x9a63), 0x8f);
        // 3E 031D
        gbc.setState(0x358b, 0xa163, 0x2190, 0x886d, 0x5a90, 0x1288, 0x1, 0x0);
        gbc.writeMem(0x358b, { 0x3e, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa163);
        EXPECT(gbc.pc(), 0x358d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 031E
        gbc.setState(0xd741, 0xe56, 0xeb0, 0x43cb, 0x619a, 0x5f6d, 0x0, 0x0);
        gbc.writeMem(0xd741, { 0x3e, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe56);
        EXPECT(gbc.pc(), 0xd743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd741), 0x3e);
        EXPECT(gbc.readMem(0xd742), 0x9d);
        // 3E 031F
        gbc.setState(0x5e24, 0x54cd, 0x46d0, 0xbeda, 0xdfea, 0xb513, 0x1, 0x1);
        gbc.writeMem(0x5e24, { 0x3e, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x54cd);
        EXPECT(gbc.pc(), 0x5e26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0320
        gbc.setState(0x945c, 0xd386, 0x39d0, 0x746, 0x3789, 0x8abf, 0x0, 0x0);
        gbc.writeMem(0x945c, { 0x3e, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd386);
        EXPECT(gbc.pc(), 0x945e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x945c), 0x3e);
        EXPECT(gbc.readMem(0x945d), 0xe2);
        // 3E 0321
        gbc.setState(0xed2a, 0x761, 0xa000, 0x562e, 0x4516, 0xc22e, 0x1, 0x1);
        gbc.writeMem(0xed2a, { 0x3e, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x761);
        EXPECT(gbc.pc(), 0xed2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed2a), 0x3e);
        EXPECT(gbc.readMem(0xed2b), 0x3a);
        // 3E 0322
        gbc.setState(0xe3a9, 0x850d, 0x2ce0, 0x992f, 0xd8a4, 0x7f86, 0x0, 0x0);
        gbc.writeMem(0xe3a9, { 0x3e, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x850d);
        EXPECT(gbc.pc(), 0xe3ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3a9), 0x3e);
        EXPECT(gbc.readMem(0xe3aa), 0x38);
        // 3E 0323
        gbc.setState(0x52cf, 0xeec3, 0xc3a0, 0xf0bc, 0x548b, 0x9677, 0x0, 0x1);
        gbc.writeMem(0x52cf, { 0x3e, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xeec3);
        EXPECT(gbc.pc(), 0x52d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0324
        gbc.setState(0x2b30, 0x4e57, 0xddd0, 0xd706, 0xe16b, 0xb32f, 0x0, 0x0);
        gbc.writeMem(0x2b30, { 0x3e, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4e57);
        EXPECT(gbc.pc(), 0x2b32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0325
        gbc.setState(0x6066, 0xfacd, 0xb630, 0x7a70, 0x89a6, 0x5512, 0x1, 0x1);
        gbc.writeMem(0x6066, { 0x3e, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xfacd);
        EXPECT(gbc.pc(), 0x6068);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0326
        gbc.setState(0x9a1a, 0xa818, 0xbe70, 0x39ac, 0x5a7b, 0x2b16, 0x1, 0x0);
        gbc.writeMem(0x9a1a, { 0x3e, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa818);
        EXPECT(gbc.pc(), 0x9a1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a1a), 0x3e);
        EXPECT(gbc.readMem(0x9a1b), 0xfd);
        // 3E 0328
        gbc.setState(0x9510, 0x7388, 0xa790, 0xc8cf, 0x5588, 0x5c17, 0x1, 0x1);
        gbc.writeMem(0x9510, { 0x3e, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7388);
        EXPECT(gbc.pc(), 0x9512);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9510), 0x3e);
        EXPECT(gbc.readMem(0x9511), 0x14);
        // 3E 0329
        gbc.setState(0x8c83, 0xc7b5, 0xff20, 0x3fa0, 0xbaeb, 0x3a0e, 0x1, 0x0);
        gbc.writeMem(0x8c83, { 0x3e, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc7b5);
        EXPECT(gbc.pc(), 0x8c85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c83), 0x3e);
        EXPECT(gbc.readMem(0x8c84), 0xc3);
        // 3E 032A
        gbc.setState(0x4580, 0xb7b6, 0x5b00, 0x67d3, 0x9c40, 0xda77, 0x1, 0x1);
        gbc.writeMem(0x4580, { 0x3e, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb7b6);
        EXPECT(gbc.pc(), 0x4582);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 032B
        gbc.setState(0x2488, 0x1d32, 0x7e30, 0xba08, 0xb00b, 0x2988, 0x1, 0x1);
        gbc.writeMem(0x2488, { 0x3e, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x1d32);
        EXPECT(gbc.pc(), 0x248a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 032C
        gbc.setState(0x95af, 0xd8ce, 0x7de0, 0x53e0, 0x8b79, 0xe63a, 0x0, 0x0);
        gbc.writeMem(0x95af, { 0x3e, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd8ce);
        EXPECT(gbc.pc(), 0x95b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95af), 0x3e);
        EXPECT(gbc.readMem(0x95b0), 0x9c);
        // 3E 032D
        gbc.setState(0x8f19, 0xf30b, 0xd410, 0xb5d, 0x4cff, 0x2e65, 0x0, 0x1);
        gbc.writeMem(0x8f19, { 0x3e, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xf30b);
        EXPECT(gbc.pc(), 0x8f1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f19), 0x3e);
        EXPECT(gbc.readMem(0x8f1a), 0x1b);
        // 3E 032E
        gbc.setState(0x5f82, 0x1cf6, 0x1850, 0xafbc, 0x2fdb, 0x4f80, 0x1, 0x0);
        gbc.writeMem(0x5f82, { 0x3e, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1cf6);
        EXPECT(gbc.pc(), 0x5f84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 032F
        gbc.setState(0x6414, 0xf437, 0x6390, 0x2861, 0x5132, 0xc73, 0x0, 0x1);
        gbc.writeMem(0x6414, { 0x3e, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf437);
        EXPECT(gbc.pc(), 0x6416);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0330
        gbc.setState(0x4f34, 0x1d8, 0xb3e0, 0xc54e, 0x1b1e, 0xe429, 0x1, 0x0);
        gbc.writeMem(0x4f34, { 0x3e, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1d8);
        EXPECT(gbc.pc(), 0x4f36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0331
        gbc.setState(0x3dd6, 0x4371, 0x10a0, 0xd6e2, 0x2335, 0x5f6b, 0x0, 0x0);
        gbc.writeMem(0x3dd6, { 0x3e, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4371);
        EXPECT(gbc.pc(), 0x3dd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0332
        gbc.setState(0xa48a, 0x5fbe, 0x2b20, 0x27b2, 0xa0af, 0x46dc, 0x0, 0x1);
        gbc.writeMem(0xa48a, { 0x3e, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5fbe);
        EXPECT(gbc.pc(), 0xa48c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa48a), 0x3e);
        EXPECT(gbc.readMem(0xa48b), 0xc3);
        // 3E 0333
        gbc.setState(0xd1b1, 0xa09a, 0xaba0, 0x2229, 0xcf9f, 0xfd65, 0x1, 0x0);
        gbc.writeMem(0xd1b1, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa09a);
        EXPECT(gbc.pc(), 0xd1b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1b1), 0x3e);
        EXPECT(gbc.readMem(0xd1b2), 0x3b);
        // 3E 0334
        gbc.setState(0x2527, 0x54c4, 0x62b0, 0xa7f, 0xa500, 0xe829, 0x0, 0x0);
        gbc.writeMem(0x2527, { 0x3e, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x54c4);
        EXPECT(gbc.pc(), 0x2529);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0335
        gbc.setState(0x92be, 0xbf43, 0xde90, 0xceda, 0x764e, 0xfadb, 0x1, 0x1);
        gbc.writeMem(0x92be, { 0x3e, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xbf43);
        EXPECT(gbc.pc(), 0x92c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92be), 0x3e);
        EXPECT(gbc.readMem(0x92bf), 0xd6);
        // 3E 0337
        gbc.setState(0xd94, 0x7251, 0xf610, 0x94e4, 0xefcf, 0x99e7, 0x1, 0x1);
        gbc.writeMem(0xd94, { 0x3e, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7251);
        EXPECT(gbc.pc(), 0xd96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0338
        gbc.setState(0x537, 0xa0e4, 0x840, 0x3d04, 0x7ab7, 0x3a82, 0x0, 0x0);
        gbc.writeMem(0x537, { 0x3e, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa0e4);
        EXPECT(gbc.pc(), 0x539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0339
        gbc.setState(0xd096, 0x598c, 0xcd30, 0xfb8, 0xd871, 0x380a, 0x0, 0x0);
        gbc.writeMem(0xd096, { 0x3e, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x598c);
        EXPECT(gbc.pc(), 0xd098);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd096), 0x3e);
        EXPECT(gbc.readMem(0xd097), 0xd2);
        // 3E 033A
        gbc.setState(0x5f5c, 0x3f47, 0x43e0, 0x5ddd, 0x6a0c, 0xd625, 0x0, 0x0);
        gbc.writeMem(0x5f5c, { 0x3e, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3f47);
        EXPECT(gbc.pc(), 0x5f5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 033B
        gbc.setState(0x4e6a, 0x7df9, 0x37a0, 0x14b4, 0x6ed6, 0x521e, 0x1, 0x0);
        gbc.writeMem(0x4e6a, { 0x3e, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x7df9);
        EXPECT(gbc.pc(), 0x4e6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 033C
        gbc.setState(0x5677, 0x832, 0xce30, 0xb9f, 0x526e, 0x508d, 0x0, 0x1);
        gbc.writeMem(0x5677, { 0x3e, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x832);
        EXPECT(gbc.pc(), 0x5679);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 033D
        gbc.setState(0x2eec, 0x4f65, 0x2c00, 0xfaae, 0x420e, 0x5ff, 0x0, 0x1);
        gbc.writeMem(0x2eec, { 0x3e, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4f65);
        EXPECT(gbc.pc(), 0x2eee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 033E
        gbc.setState(0xb83b, 0x709e, 0x6bf0, 0x940e, 0x6730, 0x72e9, 0x0, 0x0);
        gbc.writeMem(0xb83b, { 0x3e, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x709e);
        EXPECT(gbc.pc(), 0xb83d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb83b), 0x3e);
        EXPECT(gbc.readMem(0xb83c), 0xdb);
        // 3E 033F
        gbc.setState(0xe7ef, 0xd3a1, 0x3b30, 0x55c5, 0xe781, 0x8d0b, 0x0, 0x1);
        gbc.writeMem(0xe7ef, { 0x3e, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd3a1);
        EXPECT(gbc.pc(), 0xe7f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7ef), 0x3e);
        EXPECT(gbc.readMem(0xe7f0), 0x12);
        // 3E 0340
        gbc.setState(0x2ad5, 0x323, 0xe8f0, 0x615f, 0xbfc, 0xf624, 0x0, 0x1);
        gbc.writeMem(0x2ad5, { 0x3e, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x323);
        EXPECT(gbc.pc(), 0x2ad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0341
        gbc.setState(0xcf4a, 0xce6a, 0x3dc0, 0xc6a1, 0x8c73, 0x9cd3, 0x0, 0x0);
        gbc.writeMem(0xcf4a, { 0x3e, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xce6a);
        EXPECT(gbc.pc(), 0xcf4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf4a), 0x3e);
        EXPECT(gbc.readMem(0xcf4b), 0xd8);
        // 3E 0342
        gbc.setState(0xd3d, 0xfffc, 0x8930, 0xdc70, 0x16bb, 0x3665, 0x1, 0x0);
        gbc.writeMem(0xd3d, { 0x3e, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xfffc);
        EXPECT(gbc.pc(), 0xd3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0343
        gbc.setState(0x92f, 0x1d95, 0xdf80, 0xdb40, 0x86c3, 0xa64e, 0x1, 0x1);
        gbc.writeMem(0x92f, { 0x3e, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1d95);
        EXPECT(gbc.pc(), 0x931);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0344
        gbc.setState(0x9c11, 0x2efb, 0xc440, 0xc804, 0xe773, 0xb81, 0x0, 0x1);
        gbc.writeMem(0x9c11, { 0x3e, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2efb);
        EXPECT(gbc.pc(), 0x9c13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c11), 0x3e);
        EXPECT(gbc.readMem(0x9c12), 0x20);
        // 3E 0345
        gbc.setState(0x7b6c, 0x7ee2, 0x6dd0, 0xbb1f, 0xa824, 0x2351, 0x0, 0x1);
        gbc.writeMem(0x7b6c, { 0x3e, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7ee2);
        EXPECT(gbc.pc(), 0x7b6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0346
        gbc.setState(0x5f48, 0x6dff, 0xfdb0, 0xe9bf, 0x3336, 0x564f, 0x0, 0x0);
        gbc.writeMem(0x5f48, { 0x3e, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6dff);
        EXPECT(gbc.pc(), 0x5f4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0347
        gbc.setState(0xeb66, 0x52ba, 0x2580, 0x3464, 0x6779, 0xdd5d, 0x0, 0x1);
        gbc.writeMem(0xeb66, { 0x3e, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x52ba);
        EXPECT(gbc.pc(), 0xeb68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb66), 0x3e);
        EXPECT(gbc.readMem(0xeb67), 0x96);
        // 3E 0348
        gbc.setState(0x96f4, 0xa72a, 0xc7d0, 0x99b1, 0xb6de, 0xb52b, 0x1, 0x1);
        gbc.writeMem(0x96f4, { 0x3e, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xa72a);
        EXPECT(gbc.pc(), 0x96f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96f4), 0x3e);
        EXPECT(gbc.readMem(0x96f5), 0xa4);
        // 3E 034A
        gbc.setState(0x6b0b, 0x11d4, 0xabf0, 0x6468, 0xecef, 0x3f9c, 0x1, 0x0);
        gbc.writeMem(0x6b0b, { 0x3e, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x11d4);
        EXPECT(gbc.pc(), 0x6b0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 034B
        gbc.setState(0xc90b, 0x4a9e, 0x2670, 0xfd3f, 0x68f2, 0xa2f, 0x1, 0x0);
        gbc.writeMem(0xc90b, { 0x3e, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4a9e);
        EXPECT(gbc.pc(), 0xc90d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc90b), 0x3e);
        EXPECT(gbc.readMem(0xc90c), 0xef);
        // 3E 034C
        gbc.setState(0x4836, 0xc9dc, 0xffe0, 0x95e, 0x1505, 0x2602, 0x0, 0x0);
        gbc.writeMem(0x4836, { 0x3e, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc9dc);
        EXPECT(gbc.pc(), 0x4838);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 034D
        gbc.setState(0x4c37, 0xde7d, 0x2820, 0xc541, 0x2b2, 0x4219, 0x0, 0x1);
        gbc.writeMem(0x4c37, { 0x3e, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xde7d);
        EXPECT(gbc.pc(), 0x4c39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 034E
        gbc.setState(0x90ff, 0x9b91, 0xc6b0, 0xbfcc, 0xf87f, 0x796, 0x1, 0x0);
        gbc.writeMem(0x90ff, { 0x3e, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9b91);
        EXPECT(gbc.pc(), 0x9101);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90ff), 0x3e);
        EXPECT(gbc.readMem(0x9100), 0x21);
        // 3E 034F
        gbc.setState(0x3159, 0xfc4d, 0x8220, 0x7de2, 0x52b0, 0xc2c6, 0x0, 0x1);
        gbc.writeMem(0x3159, { 0x3e, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xfc4d);
        EXPECT(gbc.pc(), 0x315b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0350
        gbc.setState(0x7070, 0x4441, 0x9980, 0x38bf, 0x3cba, 0xb5e5, 0x0, 0x0);
        gbc.writeMem(0x7070, { 0x3e, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4441);
        EXPECT(gbc.pc(), 0x7072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0351
        gbc.setState(0x8230, 0xdeda, 0x6af0, 0x3f03, 0xd277, 0xdcf, 0x1, 0x1);
        gbc.writeMem(0x8230, { 0x3e, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xdeda);
        EXPECT(gbc.pc(), 0x8232);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8230), 0x3e);
        EXPECT(gbc.readMem(0x8231), 0x5a);
        // 3E 0352
        gbc.setState(0x8394, 0x8d79, 0x5d20, 0xb26b, 0x84cc, 0xb5a5, 0x1, 0x0);
        gbc.writeMem(0x8394, { 0x3e, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8d79);
        EXPECT(gbc.pc(), 0x8396);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8394), 0x3e);
        EXPECT(gbc.readMem(0x8395), 0x4e);
        // 3E 0354
        gbc.setState(0xa663, 0xb7b0, 0x6230, 0x29a3, 0xcc15, 0x3c8d, 0x1, 0x1);
        gbc.writeMem(0xa663, { 0x3e, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xb7b0);
        EXPECT(gbc.pc(), 0xa665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa663), 0x3e);
        EXPECT(gbc.readMem(0xa664), 0xc3);
        // 3E 0355
        gbc.setState(0xebe7, 0x8979, 0x1750, 0x54b5, 0xf095, 0x881c, 0x1, 0x1);
        gbc.writeMem(0xebe7, { 0x3e, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8979);
        EXPECT(gbc.pc(), 0xebe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebe7), 0x3e);
        EXPECT(gbc.readMem(0xebe8), 0x49);
        // 3E 0358
        gbc.setState(0x79b2, 0x2f00, 0x4ef0, 0x3f69, 0xf369, 0x392d, 0x0, 0x0);
        gbc.writeMem(0x79b2, { 0x3e, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2f00);
        EXPECT(gbc.pc(), 0x79b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0359
        gbc.setState(0x14e2, 0xc2bc, 0x5830, 0x1848, 0xbfbd, 0x7b15, 0x1, 0x1);
        gbc.writeMem(0x14e2, { 0x3e, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc2bc);
        EXPECT(gbc.pc(), 0x14e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 035A
        gbc.setState(0x61f8, 0xc623, 0x2fc0, 0x14e7, 0x892c, 0x91b4, 0x0, 0x0);
        gbc.writeMem(0x61f8, { 0x3e, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc623);
        EXPECT(gbc.pc(), 0x61fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 035B
        gbc.setState(0x819a, 0x5051, 0xb2a0, 0xb886, 0xf843, 0xcd1a, 0x0, 0x0);
        gbc.writeMem(0x819a, { 0x3e, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5051);
        EXPECT(gbc.pc(), 0x819c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x819a), 0x3e);
        EXPECT(gbc.readMem(0x819b), 0x2f);
        // 3E 035D
        gbc.setState(0x8d4d, 0x7c07, 0xa980, 0x6555, 0xda6d, 0x7cb1, 0x1, 0x0);
        gbc.writeMem(0x8d4d, { 0x3e, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7c07);
        EXPECT(gbc.pc(), 0x8d4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d4d), 0x3e);
        EXPECT(gbc.readMem(0x8d4e), 0xe4);
        // 3E 035F
        gbc.setState(0x3f33, 0xa01d, 0x12a0, 0xebc, 0x7252, 0xf1c8, 0x0, 0x1);
        gbc.writeMem(0x3f33, { 0x3e, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa01d);
        EXPECT(gbc.pc(), 0x3f35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0360
        gbc.setState(0xef59, 0xc446, 0x9530, 0x90e, 0xe916, 0x243a, 0x0, 0x1);
        gbc.writeMem(0xef59, { 0x3e, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc446);
        EXPECT(gbc.pc(), 0xef5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef59), 0x3e);
        EXPECT(gbc.readMem(0xef5a), 0x13);
        // 3E 0361
        gbc.setState(0xd991, 0x641a, 0x11a0, 0x2e97, 0x711c, 0x85f0, 0x1, 0x1);
        gbc.writeMem(0xd991, { 0x3e, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x641a);
        EXPECT(gbc.pc(), 0xd993);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd991), 0x3e);
        EXPECT(gbc.readMem(0xd992), 0x62);
        // 3E 0362
        gbc.setState(0x7333, 0xb39e, 0xfa50, 0x3d7a, 0x6b3d, 0xff0d, 0x0, 0x0);
        gbc.writeMem(0x7333, { 0x3e, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb39e);
        EXPECT(gbc.pc(), 0x7335);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0364
        gbc.setState(0xd511, 0xfd2a, 0x34e0, 0xc4bb, 0xfb82, 0xa7a8, 0x1, 0x0);
        gbc.writeMem(0xd511, { 0x3e, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xfd2a);
        EXPECT(gbc.pc(), 0xd513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd511), 0x3e);
        EXPECT(gbc.readMem(0xd512), 0x4c);
        // 3E 0365
        gbc.setState(0x4fa4, 0x7a65, 0x6c40, 0xff42, 0x7491, 0xc793, 0x1, 0x1);
        gbc.writeMem(0x4fa4, { 0x3e, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7a65);
        EXPECT(gbc.pc(), 0x4fa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0366
        gbc.setState(0x4969, 0x78af, 0x51f0, 0xa3d4, 0xd7ee, 0x6c0a, 0x1, 0x1);
        gbc.writeMem(0x4969, { 0x3e, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x78af);
        EXPECT(gbc.pc(), 0x496b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0367
        gbc.setState(0x199d, 0x7015, 0xd20, 0x99b5, 0x6e2c, 0xd6b4, 0x0, 0x0);
        gbc.writeMem(0x199d, { 0x3e, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7015);
        EXPECT(gbc.pc(), 0x199f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0368
        gbc.setState(0x8f9a, 0x6072, 0x61d0, 0x50c1, 0xe46f, 0x1534, 0x1, 0x0);
        gbc.writeMem(0x8f9a, { 0x3e, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6072);
        EXPECT(gbc.pc(), 0x8f9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f9a), 0x3e);
        EXPECT(gbc.readMem(0x8f9b), 0x31);
        // 3E 0369
        gbc.setState(0xcf1f, 0x3b00, 0x2120, 0xa042, 0x7af9, 0x1aa6, 0x0, 0x1);
        gbc.writeMem(0xcf1f, { 0x3e, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3b00);
        EXPECT(gbc.pc(), 0xcf21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf1f), 0x3e);
        EXPECT(gbc.readMem(0xcf20), 0xc2);
        // 3E 036A
        gbc.setState(0x15c6, 0xdbf8, 0xc120, 0xfba3, 0xec79, 0x2b6f, 0x0, 0x1);
        gbc.writeMem(0x15c6, { 0x3e, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xdbf8);
        EXPECT(gbc.pc(), 0x15c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 036B
        gbc.setState(0xd80, 0x70ed, 0xcde0, 0xa7a, 0x5603, 0xf1d5, 0x1, 0x0);
        gbc.writeMem(0xd80, { 0x3e, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x70ed);
        EXPECT(gbc.pc(), 0xd82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 036C
        gbc.setState(0x67c7, 0x1d5a, 0x7f90, 0x7d1f, 0x28ff, 0x8e22, 0x0, 0x0);
        gbc.writeMem(0x67c7, { 0x3e, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1d5a);
        EXPECT(gbc.pc(), 0x67c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 036D
        gbc.setState(0xb9, 0x8ae6, 0xe6a0, 0x9bfd, 0x5e43, 0x371d, 0x0, 0x1);
        gbc.writeMem(0xb9, { 0x3e, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8ae6);
        EXPECT(gbc.pc(), 0xbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 036E
        gbc.setState(0x4b0a, 0xf7d1, 0x1e70, 0xced0, 0xc293, 0xf4ad, 0x1, 0x0);
        gbc.writeMem(0x4b0a, { 0x3e, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf7d1);
        EXPECT(gbc.pc(), 0x4b0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 036F
        gbc.setState(0xb27a, 0x3f1d, 0x2950, 0x65c4, 0x8bf9, 0x3d56, 0x1, 0x0);
        gbc.writeMem(0xb27a, { 0x3e, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x3f1d);
        EXPECT(gbc.pc(), 0xb27c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb27a), 0x3e);
        EXPECT(gbc.readMem(0xb27b), 0x1b);
        // 3E 0370
        gbc.setState(0x9712, 0x8ea9, 0xb400, 0x71cd, 0xf10c, 0x38ce, 0x0, 0x1);
        gbc.writeMem(0x9712, { 0x3e, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8ea9);
        EXPECT(gbc.pc(), 0x9714);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9712), 0x3e);
        EXPECT(gbc.readMem(0x9713), 0xf0);
        // 3E 0371
        gbc.setState(0xcff9, 0x806f, 0xa240, 0x76cd, 0x1df7, 0x6426, 0x1, 0x1);
        gbc.writeMem(0xcff9, { 0x3e, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x806f);
        EXPECT(gbc.pc(), 0xcffb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcff9), 0x3e);
        EXPECT(gbc.readMem(0xcffa), 0xfc);
        // 3E 0372
        gbc.setState(0x8d63, 0xbed7, 0x9020, 0x49d9, 0xa293, 0x1357, 0x0, 0x0);
        gbc.writeMem(0x8d63, { 0x3e, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xbed7);
        EXPECT(gbc.pc(), 0x8d65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d63), 0x3e);
        EXPECT(gbc.readMem(0x8d64), 0x3e);
        // 3E 0373
        gbc.setState(0x5f8, 0xed66, 0x1d40, 0xf4b9, 0xf094, 0x7de3, 0x1, 0x1);
        gbc.writeMem(0x5f8, { 0x3e, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xed66);
        EXPECT(gbc.pc(), 0x5fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0374
        gbc.setState(0x82d6, 0x227c, 0x8c80, 0x2b89, 0xb1ac, 0x3b26, 0x0, 0x1);
        gbc.writeMem(0x82d6, { 0x3e, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x227c);
        EXPECT(gbc.pc(), 0x82d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82d6), 0x3e);
        EXPECT(gbc.readMem(0x82d7), 0x1);
        // 3E 0375
        gbc.setState(0x179b, 0x63d, 0xbfe0, 0x75e4, 0x51be, 0x9df9, 0x1, 0x1);
        gbc.writeMem(0x179b, { 0x3e, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x63d);
        EXPECT(gbc.pc(), 0x179d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0376
        gbc.setState(0xa303, 0xcffd, 0xe8c0, 0xfd8c, 0xae0d, 0x426f, 0x1, 0x1);
        gbc.writeMem(0xa303, { 0x3e, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xcffd);
        EXPECT(gbc.pc(), 0xa305);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa303), 0x3e);
        EXPECT(gbc.readMem(0xa304), 0x95);
        // 3E 0377
        gbc.setState(0x8548, 0x53b6, 0x3440, 0x37c1, 0x9433, 0xccbc, 0x0, 0x0);
        gbc.writeMem(0x8548, { 0x3e, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x53b6);
        EXPECT(gbc.pc(), 0x854a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8548), 0x3e);
        EXPECT(gbc.readMem(0x8549), 0xa8);
        // 3E 0378
        gbc.setState(0xa6fc, 0x1e00, 0xe3e0, 0xd992, 0x51a9, 0xac81, 0x1, 0x0);
        gbc.writeMem(0xa6fc, { 0x3e, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1e00);
        EXPECT(gbc.pc(), 0xa6fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6fc), 0x3e);
        EXPECT(gbc.readMem(0xa6fd), 0x75);
        // 3E 0379
        gbc.setState(0x5df7, 0x43fc, 0xb6f0, 0x132d, 0x5543, 0x58a2, 0x0, 0x0);
        gbc.writeMem(0x5df7, { 0x3e, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x43fc);
        EXPECT(gbc.pc(), 0x5df9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 037A
        gbc.setState(0x151, 0xad56, 0xa7d0, 0xa67c, 0xe0ea, 0x972a, 0x0, 0x1);
        gbc.writeMem(0x151, { 0x3e, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xad56);
        EXPECT(gbc.pc(), 0x153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 037B
        gbc.setState(0x90fe, 0x8f59, 0x7790, 0x18f5, 0x2c42, 0xb7e1, 0x1, 0x0);
        gbc.writeMem(0x90fe, { 0x3e, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x8f59);
        EXPECT(gbc.pc(), 0x9100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90fe), 0x3e);
        EXPECT(gbc.readMem(0x90ff), 0x66);
        // 3E 037C
        gbc.setState(0x5428, 0xeb8f, 0xe0, 0x64b9, 0xe329, 0xb3e1, 0x0, 0x1);
        gbc.writeMem(0x5428, { 0x3e, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xeb8f);
        EXPECT(gbc.pc(), 0x542a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 037F
        gbc.setState(0xd1ed, 0x7733, 0xfec0, 0x33d8, 0xa216, 0x870c, 0x1, 0x0);
        gbc.writeMem(0xd1ed, { 0x3e, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7733);
        EXPECT(gbc.pc(), 0xd1ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ed), 0x3e);
        EXPECT(gbc.readMem(0xd1ee), 0x58);
        // 3E 0380
        gbc.setState(0x208b, 0x946a, 0x20a0, 0x7fcd, 0xabe2, 0xeb1d, 0x0, 0x1);
        gbc.writeMem(0x208b, { 0x3e, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x946a);
        EXPECT(gbc.pc(), 0x208d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0382
        gbc.setState(0x818e, 0x2917, 0x85a0, 0x88e5, 0x25d8, 0x4699, 0x1, 0x1);
        gbc.writeMem(0x818e, { 0x3e, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2917);
        EXPECT(gbc.pc(), 0x8190);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x818e), 0x3e);
        EXPECT(gbc.readMem(0x818f), 0xe7);
        // 3E 0383
        gbc.setState(0x6cd0, 0x2741, 0x1950, 0xf1b3, 0x6ee, 0xe0c, 0x1, 0x0);
        gbc.writeMem(0x6cd0, { 0x3e, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2741);
        EXPECT(gbc.pc(), 0x6cd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 0384
        gbc.setState(0x9158, 0xdc54, 0xa460, 0xbaf0, 0x3f55, 0x23ca, 0x0, 0x0);
        gbc.writeMem(0x9158, { 0x3e, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xdc54);
        EXPECT(gbc.pc(), 0x915a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9158), 0x3e);
        EXPECT(gbc.readMem(0x9159), 0x37);
        // 3E 0385
        gbc.setState(0x5406, 0xbf78, 0x9a00, 0xd823, 0xc141, 0xf44a, 0x0, 0x0);
        gbc.writeMem(0x5406, { 0x3e, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xbf78);
        EXPECT(gbc.pc(), 0x5408);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0386
        gbc.setState(0x9490, 0xcf4a, 0x5e60, 0x83b2, 0x9604, 0x7eb, 0x1, 0x1);
        gbc.writeMem(0x9490, { 0x3e, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xcf4a);
        EXPECT(gbc.pc(), 0x9492);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9490), 0x3e);
        EXPECT(gbc.readMem(0x9491), 0x53);
        // 3E 0387
        gbc.setState(0x3006, 0x7de, 0x4470, 0xb2a6, 0xd01d, 0xc506, 0x1, 0x0);
        gbc.writeMem(0x3006, { 0x3e, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7de);
        EXPECT(gbc.pc(), 0x3008);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0388
        gbc.setState(0x7918, 0x10fd, 0x9fb0, 0xf6c1, 0x50ef, 0x8c28, 0x1, 0x0);
        gbc.writeMem(0x7918, { 0x3e, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x10fd);
        EXPECT(gbc.pc(), 0x791a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 0389
        gbc.setState(0x636e, 0x579b, 0xdf90, 0xc39e, 0x22d3, 0xf226, 0x0, 0x1);
        gbc.writeMem(0x636e, { 0x3e, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x579b);
        EXPECT(gbc.pc(), 0x6370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 038A
        gbc.setState(0xb5f, 0x9b2, 0xb980, 0xb654, 0x7978, 0x4415, 0x0, 0x0);
        gbc.writeMem(0xb5f, { 0x3e, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9b2);
        EXPECT(gbc.pc(), 0xb61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 038B
        gbc.setState(0xd443, 0x4765, 0x4210, 0xd6ce, 0xbaa5, 0xf24d, 0x0, 0x1);
        gbc.writeMem(0xd443, { 0x3e, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x4765);
        EXPECT(gbc.pc(), 0xd445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd443), 0x3e);
        EXPECT(gbc.readMem(0xd444), 0xf4);
        // 3E 038C
        gbc.setState(0x31b8, 0x7343, 0x5d40, 0x1306, 0x6465, 0x7510, 0x0, 0x1);
        gbc.writeMem(0x31b8, { 0x3e, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7343);
        EXPECT(gbc.pc(), 0x31ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 038D
        gbc.setState(0xd3fd, 0x6d61, 0x2c60, 0x9f3b, 0x6db7, 0x3ff, 0x1, 0x1);
        gbc.writeMem(0xd3fd, { 0x3e, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6d61);
        EXPECT(gbc.pc(), 0xd3ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3fd), 0x3e);
        EXPECT(gbc.readMem(0xd3fe), 0xd3);
        // 3E 038E
        gbc.setState(0x224e, 0xa8e6, 0xf000, 0x5c7f, 0x1b67, 0x68f, 0x0, 0x1);
        gbc.writeMem(0x224e, { 0x3e, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa8e6);
        EXPECT(gbc.pc(), 0x2250);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 038F
        gbc.setState(0xd956, 0x953c, 0xf490, 0xe73, 0xd47b, 0x3842, 0x0, 0x1);
        gbc.writeMem(0xd956, { 0x3e, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x953c);
        EXPECT(gbc.pc(), 0xd958);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd956), 0x3e);
        EXPECT(gbc.readMem(0xd957), 0xd9);
        // 3E 0390
        gbc.setState(0x83e3, 0x6d25, 0xbc80, 0x2f79, 0xdde5, 0x7c7a, 0x0, 0x1);
        gbc.writeMem(0x83e3, { 0x3e, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6d25);
        EXPECT(gbc.pc(), 0x83e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e3), 0x3e);
        EXPECT(gbc.readMem(0x83e4), 0x22);
        // 3E 0391
        gbc.setState(0x9008, 0x9fa0, 0x79d0, 0x7e9, 0x38e6, 0x4d78, 0x0, 0x1);
        gbc.writeMem(0x9008, { 0x3e, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9fa0);
        EXPECT(gbc.pc(), 0x900a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9008), 0x3e);
        EXPECT(gbc.readMem(0x9009), 0x5);
        // 3E 0392
        gbc.setState(0xd83a, 0xc74, 0x6d0, 0xe1dd, 0x6462, 0xef3, 0x0, 0x0);
        gbc.writeMem(0xd83a, { 0x3e, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc74);
        EXPECT(gbc.pc(), 0xd83c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd83a), 0x3e);
        EXPECT(gbc.readMem(0xd83b), 0xa6);
        // 3E 0393
        gbc.setState(0x5ad2, 0xe6d8, 0x8c40, 0x7c07, 0x542, 0xd92f, 0x0, 0x0);
        gbc.writeMem(0x5ad2, { 0x3e, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe6d8);
        EXPECT(gbc.pc(), 0x5ad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 0394
        gbc.setState(0x2614, 0xf4e8, 0x51e0, 0x3c63, 0x8ecd, 0xc45f, 0x1, 0x0);
        gbc.writeMem(0x2614, { 0x3e, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf4e8);
        EXPECT(gbc.pc(), 0x2616);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0395
        gbc.setState(0x8b22, 0xa172, 0x6da0, 0xdd16, 0x331d, 0x7ef1, 0x1, 0x1);
        gbc.writeMem(0x8b22, { 0x3e, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa172);
        EXPECT(gbc.pc(), 0x8b24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b22), 0x3e);
        EXPECT(gbc.readMem(0x8b23), 0xfe);
        // 3E 0396
        gbc.setState(0x369a, 0x18f9, 0xa20, 0xb606, 0x95d0, 0x523c, 0x1, 0x1);
        gbc.writeMem(0x369a, { 0x3e, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x18f9);
        EXPECT(gbc.pc(), 0x369c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 0397
        gbc.setState(0x856c, 0x8c8b, 0x66f0, 0xa0e4, 0xf3f7, 0xbc89, 0x1, 0x1);
        gbc.writeMem(0x856c, { 0x3e, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8c8b);
        EXPECT(gbc.pc(), 0x856e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x856c), 0x3e);
        EXPECT(gbc.readMem(0x856d), 0xb2);
        // 3E 0398
        gbc.setState(0xac03, 0xdb68, 0x9cd0, 0x1a04, 0xf244, 0x402f, 0x1, 0x1);
        gbc.writeMem(0xac03, { 0x3e, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xdb68);
        EXPECT(gbc.pc(), 0xac05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac03), 0x3e);
        EXPECT(gbc.readMem(0xac04), 0xd1);
        // 3E 0399
        gbc.setState(0x8f07, 0xb695, 0x750, 0x275b, 0x3e75, 0x31d6, 0x1, 0x0);
        gbc.writeMem(0x8f07, { 0x3e, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb695);
        EXPECT(gbc.pc(), 0x8f09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f07), 0x3e);
        EXPECT(gbc.readMem(0x8f08), 0x82);
        // 3E 039A
        gbc.setState(0x7fad, 0xcf03, 0x3080, 0xef52, 0x85d8, 0xd7aa, 0x0, 0x0);
        gbc.writeMem(0x7fad, { 0x3e, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xcf03);
        EXPECT(gbc.pc(), 0x7faf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 039B
        gbc.setState(0x14fe, 0x7c52, 0x5d70, 0x43fe, 0x903e, 0xd99, 0x0, 0x1);
        gbc.writeMem(0x14fe, { 0x3e, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x7c52);
        EXPECT(gbc.pc(), 0x1500);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 039C
        gbc.setState(0xc11d, 0x51a0, 0x5240, 0x474c, 0x8eef, 0x374e, 0x1, 0x0);
        gbc.writeMem(0xc11d, { 0x3e, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x51a0);
        EXPECT(gbc.pc(), 0xc11f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc11d), 0x3e);
        EXPECT(gbc.readMem(0xc11e), 0x6d);
        // 3E 039D
        gbc.setState(0x9de6, 0x2866, 0xe190, 0xcc00, 0x9513, 0xc0ba, 0x0, 0x0);
        gbc.writeMem(0x9de6, { 0x3e, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x2866);
        EXPECT(gbc.pc(), 0x9de8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9de6), 0x3e);
        EXPECT(gbc.readMem(0x9de7), 0x41);
        // 3E 039E
        gbc.setState(0x1237, 0xa96e, 0x4990, 0x2ae6, 0x6655, 0x7ca5, 0x1, 0x1);
        gbc.writeMem(0x1237, { 0x3e, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xa96e);
        EXPECT(gbc.pc(), 0x1239);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 039F
        gbc.setState(0xd1f9, 0xc25c, 0xbca0, 0x3109, 0xe709, 0x11e8, 0x0, 0x1);
        gbc.writeMem(0xd1f9, { 0x3e, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc25c);
        EXPECT(gbc.pc(), 0xd1fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1f9), 0x3e);
        EXPECT(gbc.readMem(0xd1fa), 0xb4);
        // 3E 03A0
        gbc.setState(0x9c9b, 0xbc79, 0xad0, 0xbb8b, 0x81eb, 0xc225, 0x0, 0x0);
        gbc.writeMem(0x9c9b, { 0x3e, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xbc79);
        EXPECT(gbc.pc(), 0x9c9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c9b), 0x3e);
        EXPECT(gbc.readMem(0x9c9c), 0x4f);
        // 3E 03A1
        gbc.setState(0x7c4b, 0xee1e, 0x3a40, 0x5754, 0x8ac9, 0x4ac, 0x0, 0x0);
        gbc.writeMem(0x7c4b, { 0x3e, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xee1e);
        EXPECT(gbc.pc(), 0x7c4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 03A2
        gbc.setState(0xbb9d, 0x4633, 0xdd70, 0xd271, 0xa18a, 0xceef, 0x1, 0x0);
        gbc.writeMem(0xbb9d, { 0x3e, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x4633);
        EXPECT(gbc.pc(), 0xbb9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb9d), 0x3e);
        EXPECT(gbc.readMem(0xbb9e), 0xb9);
        // 3E 03A3
        gbc.setState(0x3cdb, 0x70d8, 0x6ef0, 0x3263, 0x9334, 0x506b, 0x1, 0x0);
        gbc.writeMem(0x3cdb, { 0x3e, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x70d8);
        EXPECT(gbc.pc(), 0x3cdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 03A4
        gbc.setState(0xb3a6, 0xa538, 0x5190, 0xada0, 0x4c42, 0xace7, 0x1, 0x0);
        gbc.writeMem(0xb3a6, { 0x3e, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa538);
        EXPECT(gbc.pc(), 0xb3a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3a6), 0x3e);
        EXPECT(gbc.readMem(0xb3a7), 0x38);
        // 3E 03A5
        gbc.setState(0x6224, 0x2280, 0xabf0, 0x6e22, 0x3f5a, 0x8e7a, 0x0, 0x0);
        gbc.writeMem(0x6224, { 0x3e, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2280);
        EXPECT(gbc.pc(), 0x6226);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 03A6
        gbc.setState(0xac97, 0x5d38, 0xf850, 0xaba1, 0x4d81, 0x647c, 0x1, 0x0);
        gbc.writeMem(0xac97, { 0x3e, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5d38);
        EXPECT(gbc.pc(), 0xac99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac97), 0x3e);
        EXPECT(gbc.readMem(0xac98), 0xb2);
        // 3E 03A7
        gbc.setState(0x185f, 0x2016, 0xa9d0, 0x513d, 0xfb0c, 0xe8d4, 0x1, 0x1);
        gbc.writeMem(0x185f, { 0x3e, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2016);
        EXPECT(gbc.pc(), 0x1861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 03AA
        gbc.setState(0xd331, 0x3926, 0x7b90, 0x8ae6, 0x786f, 0xdce5, 0x1, 0x1);
        gbc.writeMem(0xd331, { 0x3e, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3926);
        EXPECT(gbc.pc(), 0xd333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd331), 0x3e);
        EXPECT(gbc.readMem(0xd332), 0x41);
        // 3E 03AB
        gbc.setState(0x60b1, 0xde95, 0xb370, 0x7e19, 0x9e48, 0x9ae0, 0x1, 0x0);
        gbc.writeMem(0x60b1, { 0x3e, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xde95);
        EXPECT(gbc.pc(), 0x60b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 03AC
        gbc.setState(0x26ff, 0xa48f, 0x9910, 0xeb4f, 0x7f35, 0xf9d3, 0x0, 0x1);
        gbc.writeMem(0x26ff, { 0x3e, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xa48f);
        EXPECT(gbc.pc(), 0x2701);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 03AD
        gbc.setState(0xd59a, 0x48fa, 0xfe00, 0x68f9, 0x7079, 0x916b, 0x1, 0x1);
        gbc.writeMem(0xd59a, { 0x3e, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x48fa);
        EXPECT(gbc.pc(), 0xd59c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd59a), 0x3e);
        EXPECT(gbc.readMem(0xd59b), 0x2);
        // 3E 03AE
        gbc.setState(0xd1cf, 0x8352, 0x1910, 0xec37, 0xb63, 0x9f0e, 0x1, 0x0);
        gbc.writeMem(0xd1cf, { 0x3e, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8352);
        EXPECT(gbc.pc(), 0xd1d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1cf), 0x3e);
        EXPECT(gbc.readMem(0xd1d0), 0x3d);
        // 3E 03AF
        gbc.setState(0x4e9c, 0x5ee0, 0x3000, 0x56a, 0x3bc4, 0x4006, 0x1, 0x0);
        gbc.writeMem(0x4e9c, { 0x3e, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5ee0);
        EXPECT(gbc.pc(), 0x4e9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 03B0
        gbc.setState(0x34a0, 0x31d1, 0xaeb0, 0xdb68, 0xb2f9, 0xb18f, 0x1, 0x0);
        gbc.writeMem(0x34a0, { 0x3e, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x31d1);
        EXPECT(gbc.pc(), 0x34a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 03B1
        gbc.setState(0xc139, 0xb8e3, 0xfc00, 0x4fe9, 0x2840, 0x9197, 0x1, 0x1);
        gbc.writeMem(0xc139, { 0x3e, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb8e3);
        EXPECT(gbc.pc(), 0xc13b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc139), 0x3e);
        EXPECT(gbc.readMem(0xc13a), 0xbf);
        // 3E 03B2
        gbc.setState(0x2e08, 0xffa6, 0x80f0, 0x7d15, 0x96f7, 0xae53, 0x1, 0x0);
        gbc.writeMem(0x2e08, { 0x3e, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xffa6);
        EXPECT(gbc.pc(), 0x2e0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 03B3
        gbc.setState(0x5a52, 0xfb59, 0x7830, 0x14a7, 0x705, 0x7f60, 0x1, 0x0);
        gbc.writeMem(0x5a52, { 0x3e, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xfb59);
        EXPECT(gbc.pc(), 0x5a54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 03B4
        gbc.setState(0x4675, 0x212c, 0x7e10, 0x4105, 0xcc3d, 0x7980, 0x0, 0x1);
        gbc.writeMem(0x4675, { 0x3e, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x212c);
        EXPECT(gbc.pc(), 0x4677);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 03B5
        gbc.setState(0xdfd6, 0x545b, 0x3570, 0x23c, 0xff23, 0x6f0f, 0x0, 0x0);
        gbc.writeMem(0xdfd6, { 0x3e, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x545b);
        EXPECT(gbc.pc(), 0xdfd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfd6), 0x3e);
        EXPECT(gbc.readMem(0xdfd7), 0xb8);
        // 3E 03B6
        gbc.setState(0xb7b, 0x2a72, 0x2770, 0x441a, 0xb825, 0xb931, 0x0, 0x0);
        gbc.writeMem(0xb7b, { 0x3e, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2a72);
        EXPECT(gbc.pc(), 0xb7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 03B7
        gbc.setState(0x5c34, 0xc04d, 0xdb00, 0xe4fd, 0x2208, 0x4ebe, 0x0, 0x0);
        gbc.writeMem(0x5c34, { 0x3e, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc04d);
        EXPECT(gbc.pc(), 0x5c36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 03B8
        gbc.setState(0xabd9, 0x8c12, 0xf4d0, 0x921f, 0xf8c0, 0x6465, 0x1, 0x0);
        gbc.writeMem(0xabd9, { 0x3e, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8c12);
        EXPECT(gbc.pc(), 0xabdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabd9), 0x3e);
        EXPECT(gbc.readMem(0xabda), 0x4b);
        // 3E 03B9
        gbc.setState(0x20f9, 0x258f, 0xf640, 0x313e, 0xf3f6, 0x8899, 0x1, 0x0);
        gbc.writeMem(0x20f9, { 0x3e, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x258f);
        EXPECT(gbc.pc(), 0x20fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 03BA
        gbc.setState(0x8584, 0x8d5f, 0xd000, 0xcfa, 0x1a1b, 0x8424, 0x0, 0x0);
        gbc.writeMem(0x8584, { 0x3e, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8d5f);
        EXPECT(gbc.pc(), 0x8586);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8584), 0x3e);
        EXPECT(gbc.readMem(0x8585), 0x10);
        // 3E 03BB
        gbc.setState(0x8c43, 0x7c1a, 0xf930, 0x10f7, 0xb04b, 0xbf05, 0x1, 0x1);
        gbc.writeMem(0x8c43, { 0x3e, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7c1a);
        EXPECT(gbc.pc(), 0x8c45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c43), 0x3e);
        EXPECT(gbc.readMem(0x8c44), 0x4b);
        // 3E 03BC
        gbc.setState(0xda09, 0x5126, 0x9470, 0x6c3f, 0x8659, 0xff5d, 0x1, 0x1);
        gbc.writeMem(0xda09, { 0x3e, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5126);
        EXPECT(gbc.pc(), 0xda0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda09), 0x3e);
        EXPECT(gbc.readMem(0xda0a), 0xbb);
        // 3E 03BD
        gbc.setState(0x61eb, 0x90f4, 0x6d30, 0x8e77, 0xfd30, 0x62bd, 0x1, 0x1);
        gbc.writeMem(0x61eb, { 0x3e, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x90f4);
        EXPECT(gbc.pc(), 0x61ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 03BE
        gbc.setState(0xd5dd, 0x8315, 0x51e0, 0x3726, 0x676f, 0x34f4, 0x0, 0x0);
        gbc.writeMem(0xd5dd, { 0x3e, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8315);
        EXPECT(gbc.pc(), 0xd5df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5dd), 0x3e);
        EXPECT(gbc.readMem(0xd5de), 0xde);
        // 3E 03BF
        gbc.setState(0x1637, 0x2cdf, 0xc5a0, 0xdf9b, 0xaf7, 0xa938, 0x0, 0x0);
        gbc.writeMem(0x1637, { 0x3e, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2cdf);
        EXPECT(gbc.pc(), 0x1639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 03C0
        gbc.setState(0x64ec, 0x7442, 0x26b0, 0x74fe, 0x9ff6, 0xb052, 0x1, 0x0);
        gbc.writeMem(0x64ec, { 0x3e, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7442);
        EXPECT(gbc.pc(), 0x64ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 03C1
        gbc.setState(0xd939, 0x8e81, 0x1860, 0xaea5, 0x2112, 0x467, 0x0, 0x1);
        gbc.writeMem(0xd939, { 0x3e, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x8e81);
        EXPECT(gbc.pc(), 0xd93b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd939), 0x3e);
        EXPECT(gbc.readMem(0xd93a), 0x65);
        // 3E 03C2
        gbc.setState(0x28e9, 0x90ac, 0x6f40, 0x8cd9, 0xe7a, 0x1d3, 0x1, 0x0);
        gbc.writeMem(0x28e9, { 0x3e, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x90ac);
        EXPECT(gbc.pc(), 0x28eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 03C3
        gbc.setState(0x4019, 0xf1fc, 0xa3c0, 0xd1f2, 0x197a, 0x5a3, 0x0, 0x0);
        gbc.writeMem(0x4019, { 0x3e, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xf1fc);
        EXPECT(gbc.pc(), 0x401b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 03C4
        gbc.setState(0xb14e, 0x94eb, 0xaf70, 0xec34, 0xd1da, 0x3705, 0x0, 0x1);
        gbc.writeMem(0xb14e, { 0x3e, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x94eb);
        EXPECT(gbc.pc(), 0xb150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb14e), 0x3e);
        EXPECT(gbc.readMem(0xb14f), 0xd6);
        // 3E 03C5
        gbc.setState(0x93d3, 0xb2b4, 0x340, 0xa58b, 0x8afb, 0x9050, 0x0, 0x1);
        gbc.writeMem(0x93d3, { 0x3e, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb2b4);
        EXPECT(gbc.pc(), 0x93d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93d3), 0x3e);
        EXPECT(gbc.readMem(0x93d4), 0x54);
        // 3E 03C6
        gbc.setState(0x2241, 0xf786, 0x9000, 0xec57, 0xfad0, 0xa740, 0x1, 0x0);
        gbc.writeMem(0x2241, { 0x3e, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf786);
        EXPECT(gbc.pc(), 0x2243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 03C7
        gbc.setState(0x1a5c, 0x5e69, 0xf360, 0xeff0, 0x4f5b, 0xd4ad, 0x1, 0x1);
        gbc.writeMem(0x1a5c, { 0x3e, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5e69);
        EXPECT(gbc.pc(), 0x1a5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 03C8
        gbc.setState(0x3d94, 0x6add, 0xec0, 0x73e, 0xac8, 0x2293, 0x1, 0x0);
        gbc.writeMem(0x3d94, { 0x3e, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x6add);
        EXPECT(gbc.pc(), 0x3d96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 03C9
        gbc.setState(0xe10e, 0xf7d2, 0xb7f0, 0x3a43, 0x6b5e, 0x33cc, 0x1, 0x1);
        gbc.writeMem(0xe10e, { 0x3e, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf7d2);
        EXPECT(gbc.pc(), 0xe110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe10e), 0x3e);
        EXPECT(gbc.readMem(0xe10f), 0x1a);
        // 3E 03CA
        gbc.setState(0x4cc9, 0x980, 0xacd0, 0xd9d7, 0xee8e, 0x40a7, 0x0, 0x0);
        gbc.writeMem(0x4cc9, { 0x3e, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x980);
        EXPECT(gbc.pc(), 0x4ccb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 03CB
        gbc.setState(0xeb1d, 0xce41, 0x4950, 0xccbc, 0x6489, 0xc13, 0x0, 0x0);
        gbc.writeMem(0xeb1d, { 0x3e, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xce41);
        EXPECT(gbc.pc(), 0xeb1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb1d), 0x3e);
        EXPECT(gbc.readMem(0xeb1e), 0x17);
        // 3E 03CC
        gbc.setState(0x130b, 0x8344, 0x58b0, 0xe9cc, 0x3646, 0x801b, 0x1, 0x0);
        gbc.writeMem(0x130b, { 0x3e, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8344);
        EXPECT(gbc.pc(), 0x130d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 03CD
        gbc.setState(0x11ca, 0x1c81, 0x4140, 0x1328, 0xcd51, 0x2a08, 0x1, 0x0);
        gbc.writeMem(0x11ca, { 0x3e, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1c81);
        EXPECT(gbc.pc(), 0x11cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 03CE
        gbc.setState(0xdccf, 0xdf8e, 0xbc90, 0x9cfc, 0x4aff, 0xa45c, 0x0, 0x1);
        gbc.writeMem(0xdccf, { 0x3e, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xdf8e);
        EXPECT(gbc.pc(), 0xdcd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdccf), 0x3e);
        EXPECT(gbc.readMem(0xdcd0), 0xe);
        // 3E 03CF
        gbc.setState(0xd2dc, 0x2a77, 0x1f10, 0xd3ba, 0xe316, 0x3a81, 0x0, 0x0);
        gbc.writeMem(0xd2dc, { 0x3e, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2a77);
        EXPECT(gbc.pc(), 0xd2de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2dc), 0x3e);
        EXPECT(gbc.readMem(0xd2dd), 0x73);
        // 3E 03D0
        gbc.setState(0xb2d8, 0x8ea, 0x6060, 0xfa44, 0xe9ae, 0xbbf0, 0x0, 0x1);
        gbc.writeMem(0xb2d8, { 0x3e, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8ea);
        EXPECT(gbc.pc(), 0xb2da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2d8), 0x3e);
        EXPECT(gbc.readMem(0xb2d9), 0x92);
        // 3E 03D2
        gbc.setState(0xad6e, 0x14d7, 0x930, 0x57a5, 0xf1a6, 0xc6d1, 0x1, 0x0);
        gbc.writeMem(0xad6e, { 0x3e, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x14d7);
        EXPECT(gbc.pc(), 0xad70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad6e), 0x3e);
        EXPECT(gbc.readMem(0xad6f), 0x27);
        // 3E 03D3
        gbc.setState(0x1ca0, 0xd949, 0xbfd0, 0xe749, 0xd4c1, 0x39fa, 0x0, 0x1);
        gbc.writeMem(0x1ca0, { 0x3e, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd949);
        EXPECT(gbc.pc(), 0x1ca2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 03D4
        gbc.setState(0x4753, 0x785b, 0x6570, 0x9c5b, 0xde7, 0x6318, 0x1, 0x0);
        gbc.writeMem(0x4753, { 0x3e, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x785b);
        EXPECT(gbc.pc(), 0x4755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 03D5
        gbc.setState(0xcf41, 0xf2ae, 0x67f0, 0xc279, 0x5f5b, 0xde8, 0x0, 0x1);
        gbc.writeMem(0xcf41, { 0x3e, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xf2ae);
        EXPECT(gbc.pc(), 0xcf43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf41), 0x3e);
        EXPECT(gbc.readMem(0xcf42), 0x6f);
        // 3E 03D6
        gbc.setState(0x9576, 0x3cc8, 0x2f70, 0x544f, 0xd5d1, 0x8386, 0x0, 0x1);
        gbc.writeMem(0x9576, { 0x3e, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3cc8);
        EXPECT(gbc.pc(), 0x9578);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9576), 0x3e);
        EXPECT(gbc.readMem(0x9577), 0xca);
        // 3E 03D7
        gbc.setState(0x715f, 0xf6dd, 0xe520, 0xcc72, 0x6953, 0x2bc1, 0x0, 0x1);
        gbc.writeMem(0x715f, { 0x3e, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf6dd);
        EXPECT(gbc.pc(), 0x7161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 03D8
        gbc.setState(0x6eb5, 0x4868, 0xe00, 0x1188, 0x4f04, 0x4cbf, 0x0, 0x0);
        gbc.writeMem(0x6eb5, { 0x3e, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4868);
        EXPECT(gbc.pc(), 0x6eb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 03D9
        gbc.setState(0x920a, 0x9d46, 0x3fa0, 0x6f7c, 0xd5e2, 0x9dd4, 0x1, 0x1);
        gbc.writeMem(0x920a, { 0x3e, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9d46);
        EXPECT(gbc.pc(), 0x920c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x920a), 0x3e);
        EXPECT(gbc.readMem(0x920b), 0xb4);
        // 3E 03DA
        gbc.setState(0x43ce, 0x6be2, 0x28c0, 0xf9bd, 0x6e87, 0x9c0d, 0x0, 0x0);
        gbc.writeMem(0x43ce, { 0x3e, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6be2);
        EXPECT(gbc.pc(), 0x43d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 03DB
        gbc.setState(0x319a, 0x7dbc, 0x6da0, 0xb445, 0xa421, 0xd2da, 0x0, 0x1);
        gbc.writeMem(0x319a, { 0x3e, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7dbc);
        EXPECT(gbc.pc(), 0x319c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 3E 03DC
        gbc.setState(0xc648, 0x40af, 0xb3a0, 0xbabd, 0x585c, 0x1dc2, 0x0, 0x1);
        gbc.writeMem(0xc648, { 0x3e, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x40af);
        EXPECT(gbc.pc(), 0xc64a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc648), 0x3e);
        EXPECT(gbc.readMem(0xc649), 0xc6);
        // 3E 03DD
        gbc.setState(0x72f7, 0xc4e8, 0xe410, 0x2d38, 0xf377, 0xff8a, 0x0, 0x0);
        gbc.writeMem(0x72f7, { 0x3e, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc4e8);
        EXPECT(gbc.pc(), 0x72f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 03DE
        gbc.setState(0x302b, 0xb5e0, 0xdac0, 0x6934, 0x42c5, 0x2e98, 0x1, 0x1);
        gbc.writeMem(0x302b, { 0x3e, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb5e0);
        EXPECT(gbc.pc(), 0x302d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 03DF
        gbc.setState(0x4e2e, 0xc977, 0x2110, 0x67c6, 0x3ba8, 0x63d8, 0x1, 0x1);
        gbc.writeMem(0x4e2e, { 0x3e, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc977);
        EXPECT(gbc.pc(), 0x4e30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 3E 03E0
        gbc.setState(0x2eb0, 0x5863, 0xb540, 0x88ab, 0x46d9, 0xe12b, 0x0, 0x1);
        gbc.writeMem(0x2eb0, { 0x3e, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5863);
        EXPECT(gbc.pc(), 0x2eb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 3E 03E1
        gbc.setState(0x8399, 0x5c82, 0x6410, 0xe29b, 0xfa0e, 0xc98d, 0x1, 0x1);
        gbc.writeMem(0x8399, { 0x3e, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5c82);
        EXPECT(gbc.pc(), 0x839b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8399), 0x3e);
        EXPECT(gbc.readMem(0x839a), 0xa5);
        // 3E 03E2
        gbc.setState(0x3f4e, 0xf162, 0xc6f0, 0x3dff, 0x740f, 0xa06, 0x1, 0x1);
        gbc.writeMem(0x3f4e, { 0x3e, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf162);
        EXPECT(gbc.pc(), 0x3f50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 03E3
        gbc.setState(0xd2dd, 0xa779, 0x2290, 0x2036, 0x10b3, 0x8288, 0x0, 0x0);
        gbc.writeMem(0xd2dd, { 0x3e, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa779);
        EXPECT(gbc.pc(), 0xd2df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2dd), 0x3e);
        EXPECT(gbc.readMem(0xd2de), 0xf3);
        // 3E 03E4
        gbc.setState(0x5ed7, 0xba7d, 0x49b0, 0xccf5, 0x56c8, 0xc86b, 0x1, 0x1);
        gbc.writeMem(0x5ed7, { 0x3e, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xba7d);
        EXPECT(gbc.pc(), 0x5ed9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 3E 03E6
        gbc.setState(0x8b77, 0x8151, 0x2e60, 0xfa87, 0x22ba, 0x33a3, 0x1, 0x0);
        gbc.writeMem(0x8b77, { 0x3e, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8151);
        EXPECT(gbc.pc(), 0x8b79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b77), 0x3e);
        EXPECT(gbc.readMem(0x8b78), 0x57);
        // 3E 03E7
        gbc.setState(0xb44, 0x92de, 0xf7c0, 0xa345, 0x20fe, 0xd4b8, 0x0, 0x1);
        gbc.writeMem(0xb44, { 0x3e, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x92de);
        EXPECT(gbc.pc(), 0xb46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
    }
