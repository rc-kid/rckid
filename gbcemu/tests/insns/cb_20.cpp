#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_20)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_20) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 20 0000
        gbc.setState(0x7b9b, 0x998a, 0x6170, 0x7833, 0xe14b, 0xff00, 0x1, 0x0);
        gbc.writeMem(0x7b9b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x998a);
        EXPECT(gbc.pc(), 0x7b9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0001
        gbc.setState(0x14d4, 0x7cf7, 0xc1e0, 0xdb08, 0x3cc1, 0x33e, 0x0, 0x0);
        gbc.writeMem(0x14d4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7cf7);
        EXPECT(gbc.pc(), 0x14d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0002
        gbc.setState(0xd053, 0xf8b7, 0x2770, 0x3112, 0xef6b, 0x9d0c, 0x1, 0x1);
        gbc.writeMem(0xd053, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf8b7);
        EXPECT(gbc.pc(), 0xd055);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd053), 0xcb);
        EXPECT(gbc.readMem(0xd054), 0x20);
        // CB 20 0003
        gbc.setState(0xa02e, 0x5bc, 0x9360, 0x2775, 0x308b, 0x90c1, 0x1, 0x1);
        gbc.writeMem(0xa02e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5bc);
        EXPECT(gbc.pc(), 0xa030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa02e), 0xcb);
        EXPECT(gbc.readMem(0xa02f), 0x20);
        // CB 20 0004
        gbc.setState(0xe5ac, 0xad08, 0x5900, 0x1b77, 0x66b5, 0x9f1b, 0x0, 0x0);
        gbc.writeMem(0xe5ac, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xad08);
        EXPECT(gbc.pc(), 0xe5ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5ac), 0xcb);
        EXPECT(gbc.readMem(0xe5ad), 0x20);
        // CB 20 0005
        gbc.setState(0x1aeb, 0x77a2, 0x9f80, 0x7d00, 0x1234, 0x905, 0x1, 0x0);
        gbc.writeMem(0x1aeb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x77a2);
        EXPECT(gbc.pc(), 0x1aed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0006
        gbc.setState(0x8a09, 0xbf83, 0x1ed0, 0x489, 0xb300, 0xf2bb, 0x1, 0x0);
        gbc.writeMem(0x8a09, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xbf83);
        EXPECT(gbc.pc(), 0x8a0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a09), 0xcb);
        EXPECT(gbc.readMem(0x8a0a), 0x20);
        // CB 20 0007
        gbc.setState(0xa9f4, 0x302f, 0xa070, 0x4966, 0x828e, 0x91d, 0x1, 0x0);
        gbc.writeMem(0xa9f4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x302f);
        EXPECT(gbc.pc(), 0xa9f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9f4), 0xcb);
        EXPECT(gbc.readMem(0xa9f5), 0x20);
        // CB 20 0008
        gbc.setState(0xc91b, 0xb73c, 0xd950, 0x12ab, 0x99d2, 0xbf2b, 0x0, 0x1);
        gbc.writeMem(0xc91b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb73c);
        EXPECT(gbc.pc(), 0xc91d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc91b), 0xcb);
        EXPECT(gbc.readMem(0xc91c), 0x20);
        // CB 20 0009
        gbc.setState(0xc29b, 0x9d3, 0x64b0, 0xbd0d, 0x536d, 0x97ae, 0x1, 0x1);
        gbc.writeMem(0xc29b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9d3);
        EXPECT(gbc.pc(), 0xc29d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc29b), 0xcb);
        EXPECT(gbc.readMem(0xc29c), 0x20);
        // CB 20 000A
        gbc.setState(0xc8f6, 0x63a2, 0xfe40, 0xdcf5, 0x8743, 0x6f10, 0x0, 0x0);
        gbc.writeMem(0xc8f6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x63a2);
        EXPECT(gbc.pc(), 0xc8f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f6), 0xcb);
        EXPECT(gbc.readMem(0xc8f7), 0x20);
        // CB 20 000B
        gbc.setState(0x32c7, 0xaabf, 0xc490, 0xd24, 0xc8b2, 0xc5b5, 0x1, 0x0);
        gbc.writeMem(0x32c7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xaabf);
        EXPECT(gbc.pc(), 0x32c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 000C
        gbc.setState(0x45b4, 0x9b08, 0xa940, 0xeaa7, 0x9069, 0x6aed, 0x1, 0x1);
        gbc.writeMem(0x45b4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9b08);
        EXPECT(gbc.pc(), 0x45b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 000D
        gbc.setState(0x7638, 0xe7c5, 0xfb90, 0x6e35, 0x94a9, 0x5e47, 0x0, 0x0);
        gbc.writeMem(0x7638, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xe7c5);
        EXPECT(gbc.pc(), 0x763a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 000E
        gbc.setState(0x9156, 0xa89d, 0x6f40, 0xeb59, 0xf2ec, 0x254d, 0x0, 0x0);
        gbc.writeMem(0x9156, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa89d);
        EXPECT(gbc.pc(), 0x9158);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9156), 0xcb);
        EXPECT(gbc.readMem(0x9157), 0x20);
        // CB 20 000F
        gbc.setState(0x377a, 0x9b59, 0x6760, 0x55c2, 0x3084, 0x7529, 0x1, 0x0);
        gbc.writeMem(0x377a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9b59);
        EXPECT(gbc.pc(), 0x377c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0010
        gbc.setState(0x67ee, 0x275b, 0x96c0, 0xd3c6, 0x2645, 0xe443, 0x1, 0x1);
        gbc.writeMem(0x67ee, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x275b);
        EXPECT(gbc.pc(), 0x67f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0011
        gbc.setState(0xc98f, 0xb972, 0xc9d0, 0xc121, 0xcef6, 0x2f3, 0x1, 0x0);
        gbc.writeMem(0xc98f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb972);
        EXPECT(gbc.pc(), 0xc991);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc98f), 0xcb);
        EXPECT(gbc.readMem(0xc990), 0x20);
        // CB 20 0012
        gbc.setState(0xd9f, 0x5dec, 0x8870, 0x7a5, 0x73ea, 0xf0cb, 0x1, 0x0);
        gbc.writeMem(0xd9f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5dec);
        EXPECT(gbc.pc(), 0xda1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0013
        gbc.setState(0xb9b3, 0x399, 0x1450, 0x5c50, 0x9bec, 0x74f9, 0x0, 0x1);
        gbc.writeMem(0xb9b3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x399);
        EXPECT(gbc.pc(), 0xb9b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9b3), 0xcb);
        EXPECT(gbc.readMem(0xb9b4), 0x20);
        // CB 20 0014
        gbc.setState(0x1bfd, 0x36d7, 0xdf0, 0x2e7, 0xe915, 0xab37, 0x0, 0x1);
        gbc.writeMem(0x1bfd, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x36d7);
        EXPECT(gbc.pc(), 0x1bff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0015
        gbc.setState(0xbf8a, 0x6d99, 0x2e70, 0x3f8d, 0x3c66, 0x293e, 0x0, 0x1);
        gbc.writeMem(0xbf8a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6d99);
        EXPECT(gbc.pc(), 0xbf8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf8a), 0xcb);
        EXPECT(gbc.readMem(0xbf8b), 0x20);
        // CB 20 0016
        gbc.setState(0x44ab, 0x2ae3, 0xca70, 0x21bd, 0x93f, 0x3ecc, 0x1, 0x0);
        gbc.writeMem(0x44ab, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2ae3);
        EXPECT(gbc.pc(), 0x44ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0017
        gbc.setState(0x4d2d, 0xdbda, 0x5580, 0x2c8c, 0x12d7, 0x88a, 0x0, 0x0);
        gbc.writeMem(0x4d2d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xdbda);
        EXPECT(gbc.pc(), 0x4d2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0018
        gbc.setState(0xccea, 0x28c5, 0xbdc0, 0x512f, 0xa905, 0x81ff, 0x0, 0x1);
        gbc.writeMem(0xccea, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x28c5);
        EXPECT(gbc.pc(), 0xccec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccea), 0xcb);
        EXPECT(gbc.readMem(0xcceb), 0x20);
        // CB 20 0019
        gbc.setState(0x27d1, 0x3dca, 0xd500, 0xcbff, 0x539f, 0xe11f, 0x1, 0x1);
        gbc.writeMem(0x27d1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3dca);
        EXPECT(gbc.pc(), 0x27d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 001B
        gbc.setState(0x2fe1, 0xef7a, 0xd940, 0xdf46, 0x17da, 0x66fd, 0x1, 0x0);
        gbc.writeMem(0x2fe1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xef7a);
        EXPECT(gbc.pc(), 0x2fe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 001C
        gbc.setState(0xe0a0, 0x58dd, 0x89a0, 0x20f1, 0x4679, 0xdc4e, 0x0, 0x0);
        gbc.writeMem(0xe0a0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x58dd);
        EXPECT(gbc.pc(), 0xe0a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0a0), 0xcb);
        EXPECT(gbc.readMem(0xe0a1), 0x20);
        // CB 20 001D
        gbc.setState(0xcc6e, 0x3646, 0xa420, 0x727e, 0x34f, 0xfce5, 0x1, 0x1);
        gbc.writeMem(0xcc6e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3646);
        EXPECT(gbc.pc(), 0xcc70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc6e), 0xcb);
        EXPECT(gbc.readMem(0xcc6f), 0x20);
        // CB 20 001E
        gbc.setState(0xcb6b, 0x8988, 0x8640, 0xe49d, 0x2220, 0x1527, 0x0, 0x1);
        gbc.writeMem(0xcb6b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8988);
        EXPECT(gbc.pc(), 0xcb6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb6b), 0xcb);
        EXPECT(gbc.readMem(0xcb6c), 0x20);
        // CB 20 001F
        gbc.setState(0xa76f, 0xb5cf, 0x40d0, 0xbe26, 0xad60, 0x352f, 0x0, 0x0);
        gbc.writeMem(0xa76f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xb5cf);
        EXPECT(gbc.pc(), 0xa771);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa76f), 0xcb);
        EXPECT(gbc.readMem(0xa770), 0x20);
        // CB 20 0020
        gbc.setState(0x9463, 0xac52, 0xb800, 0x8917, 0x79ef, 0xba81, 0x1, 0x1);
        gbc.writeMem(0x9463, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xac52);
        EXPECT(gbc.pc(), 0x9465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9463), 0xcb);
        EXPECT(gbc.readMem(0x9464), 0x20);
        // CB 20 0021
        gbc.setState(0x794d, 0x6518, 0x87b0, 0x578c, 0xf7fe, 0xedd7, 0x1, 0x1);
        gbc.writeMem(0x794d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6518);
        EXPECT(gbc.pc(), 0x794f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0022
        gbc.setState(0xab2e, 0x3c06, 0x8150, 0x53d8, 0x821e, 0x8c5a, 0x1, 0x1);
        gbc.writeMem(0xab2e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3c06);
        EXPECT(gbc.pc(), 0xab30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab2e), 0xcb);
        EXPECT(gbc.readMem(0xab2f), 0x20);
        // CB 20 0023
        gbc.setState(0x86ff, 0xf0dd, 0x32b0, 0xa492, 0xa324, 0xcd72, 0x0, 0x1);
        gbc.writeMem(0x86ff, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf0dd);
        EXPECT(gbc.pc(), 0x8701);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86ff), 0xcb);
        EXPECT(gbc.readMem(0x8700), 0x20);
        // CB 20 0024
        gbc.setState(0xe79b, 0x276, 0x1ce0, 0x724f, 0xe7e9, 0x4ff4, 0x0, 0x0);
        gbc.writeMem(0xe79b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x276);
        EXPECT(gbc.pc(), 0xe79d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe79b), 0xcb);
        EXPECT(gbc.readMem(0xe79c), 0x20);
        // CB 20 0025
        gbc.setState(0xb2ab, 0xbfb5, 0xe6f0, 0x534b, 0xbfbc, 0x1aad, 0x0, 0x0);
        gbc.writeMem(0xb2ab, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xbfb5);
        EXPECT(gbc.pc(), 0xb2ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ab), 0xcb);
        EXPECT(gbc.readMem(0xb2ac), 0x20);
        // CB 20 0026
        gbc.setState(0x16e6, 0xad8d, 0x2400, 0xeb2a, 0x71cb, 0x96d2, 0x0, 0x0);
        gbc.writeMem(0x16e6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xad8d);
        EXPECT(gbc.pc(), 0x16e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0027
        gbc.setState(0xc4a5, 0x919e, 0xdb90, 0x36c3, 0x33de, 0x406d, 0x1, 0x0);
        gbc.writeMem(0xc4a5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x919e);
        EXPECT(gbc.pc(), 0xc4a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4a5), 0xcb);
        EXPECT(gbc.readMem(0xc4a6), 0x20);
        // CB 20 0028
        gbc.setState(0x46dd, 0x463d, 0x5d30, 0xd720, 0x953b, 0x99e0, 0x0, 0x1);
        gbc.writeMem(0x46dd, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x463d);
        EXPECT(gbc.pc(), 0x46df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0029
        gbc.setState(0x8f4c, 0x2248, 0x2160, 0x2274, 0x6cc8, 0x215a, 0x0, 0x1);
        gbc.writeMem(0x8f4c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2248);
        EXPECT(gbc.pc(), 0x8f4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f4c), 0xcb);
        EXPECT(gbc.readMem(0x8f4d), 0x20);
        // CB 20 002A
        gbc.setState(0x77c4, 0x5c96, 0xdfb0, 0xb76, 0x24d2, 0xf8dc, 0x0, 0x1);
        gbc.writeMem(0x77c4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5c96);
        EXPECT(gbc.pc(), 0x77c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 002B
        gbc.setState(0xd507, 0x10c7, 0x1150, 0x467d, 0xc0e2, 0xfc16, 0x1, 0x1);
        gbc.writeMem(0xd507, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x10c7);
        EXPECT(gbc.pc(), 0xd509);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd507), 0xcb);
        EXPECT(gbc.readMem(0xd508), 0x20);
        // CB 20 002C
        gbc.setState(0xbe11, 0xb9f4, 0x6b90, 0x2438, 0xa026, 0x8e88, 0x1, 0x1);
        gbc.writeMem(0xbe11, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb9f4);
        EXPECT(gbc.pc(), 0xbe13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe11), 0xcb);
        EXPECT(gbc.readMem(0xbe12), 0x20);
        // CB 20 002D
        gbc.setState(0xa015, 0x7c0e, 0x33f0, 0x5b, 0x8144, 0x89fb, 0x0, 0x1);
        gbc.writeMem(0xa015, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7c0e);
        EXPECT(gbc.pc(), 0xa017);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa015), 0xcb);
        EXPECT(gbc.readMem(0xa016), 0x20);
        // CB 20 002E
        gbc.setState(0xe7ec, 0x9cf2, 0xae80, 0x4712, 0x41c, 0xe07c, 0x0, 0x1);
        gbc.writeMem(0xe7ec, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9cf2);
        EXPECT(gbc.pc(), 0xe7ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7ec), 0xcb);
        EXPECT(gbc.readMem(0xe7ed), 0x20);
        // CB 20 002F
        gbc.setState(0x2f2e, 0x9bab, 0x3a00, 0x61cc, 0xf3bb, 0xc489, 0x1, 0x1);
        gbc.writeMem(0x2f2e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9bab);
        EXPECT(gbc.pc(), 0x2f30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0030
        gbc.setState(0x1cc6, 0x55cc, 0x4850, 0x2b4a, 0xa240, 0xacba, 0x1, 0x1);
        gbc.writeMem(0x1cc6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x55cc);
        EXPECT(gbc.pc(), 0x1cc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0031
        gbc.setState(0x2b0, 0xc6c3, 0xa400, 0x89e9, 0x1acd, 0xd955, 0x1, 0x1);
        gbc.writeMem(0x2b0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc6c3);
        EXPECT(gbc.pc(), 0x2b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0032
        gbc.setState(0x32ee, 0x7d57, 0x86b0, 0xb78c, 0xd6f8, 0xcfd1, 0x0, 0x0);
        gbc.writeMem(0x32ee, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7d57);
        EXPECT(gbc.pc(), 0x32f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0034
        gbc.setState(0xd095, 0x177f, 0x3660, 0xf02b, 0xf44, 0xfb4d, 0x1, 0x1);
        gbc.writeMem(0xd095, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x177f);
        EXPECT(gbc.pc(), 0xd097);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd095), 0xcb);
        EXPECT(gbc.readMem(0xd096), 0x20);
        // CB 20 0036
        gbc.setState(0x7a9e, 0xf369, 0x8150, 0x7d39, 0x2b72, 0xf7a0, 0x1, 0x1);
        gbc.writeMem(0x7a9e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xf369);
        EXPECT(gbc.pc(), 0x7aa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0038
        gbc.setState(0x4cf5, 0xfe91, 0x3e20, 0x5902, 0x3166, 0x9c46, 0x0, 0x0);
        gbc.writeMem(0x4cf5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xfe91);
        EXPECT(gbc.pc(), 0x4cf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0039
        gbc.setState(0x9b90, 0x7c3f, 0x8540, 0x9259, 0x3e61, 0x7479, 0x1, 0x1);
        gbc.writeMem(0x9b90, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7c3f);
        EXPECT(gbc.pc(), 0x9b92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b90), 0xcb);
        EXPECT(gbc.readMem(0x9b91), 0x20);
        // CB 20 003A
        gbc.setState(0x1694, 0xf448, 0xfa10, 0x3353, 0x31f9, 0x67b4, 0x1, 0x0);
        gbc.writeMem(0x1694, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf448);
        EXPECT(gbc.pc(), 0x1696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 003B
        gbc.setState(0x7370, 0x5a54, 0x1b30, 0x8369, 0x1d92, 0x70b, 0x1, 0x0);
        gbc.writeMem(0x7370, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x5a54);
        EXPECT(gbc.pc(), 0x7372);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 003C
        gbc.setState(0xd4a0, 0xfb61, 0x8740, 0x3ba1, 0xc426, 0xb1a5, 0x1, 0x1);
        gbc.writeMem(0xd4a0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xfb61);
        EXPECT(gbc.pc(), 0xd4a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4a0), 0xcb);
        EXPECT(gbc.readMem(0xd4a1), 0x20);
        // CB 20 003D
        gbc.setState(0x4d6a, 0xdb75, 0x8c70, 0x8d66, 0xd23a, 0x261e, 0x1, 0x0);
        gbc.writeMem(0x4d6a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xdb75);
        EXPECT(gbc.pc(), 0x4d6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 003E
        gbc.setState(0xc4ab, 0x6bb5, 0x79e0, 0xcda6, 0xb257, 0xca91, 0x1, 0x1);
        gbc.writeMem(0xc4ab, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6bb5);
        EXPECT(gbc.pc(), 0xc4ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4ab), 0xcb);
        EXPECT(gbc.readMem(0xc4ac), 0x20);
        // CB 20 003F
        gbc.setState(0x4764, 0xa57d, 0x13a0, 0xf019, 0xc046, 0x8006, 0x0, 0x0);
        gbc.writeMem(0x4764, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa57d);
        EXPECT(gbc.pc(), 0x4766);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0040
        gbc.setState(0xcbc1, 0x49aa, 0x93a0, 0xcf1b, 0x6e4e, 0xa04e, 0x0, 0x1);
        gbc.writeMem(0xcbc1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x49aa);
        EXPECT(gbc.pc(), 0xcbc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbc1), 0xcb);
        EXPECT(gbc.readMem(0xcbc2), 0x20);
        // CB 20 0041
        gbc.setState(0xc8b9, 0xfdbf, 0xbd40, 0x6d27, 0x1b27, 0x8e7d, 0x1, 0x1);
        gbc.writeMem(0xc8b9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xfdbf);
        EXPECT(gbc.pc(), 0xc8bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8b9), 0xcb);
        EXPECT(gbc.readMem(0xc8ba), 0x20);
        // CB 20 0042
        gbc.setState(0xa0d9, 0x8d96, 0xdee0, 0xce50, 0x7b28, 0x3ffe, 0x0, 0x0);
        gbc.writeMem(0xa0d9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8d96);
        EXPECT(gbc.pc(), 0xa0db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0d9), 0xcb);
        EXPECT(gbc.readMem(0xa0da), 0x20);
        // CB 20 0043
        gbc.setState(0x12eb, 0x2d67, 0x2cd0, 0xdf4d, 0x8e11, 0xceb7, 0x0, 0x1);
        gbc.writeMem(0x12eb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2d67);
        EXPECT(gbc.pc(), 0x12ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0044
        gbc.setState(0x40f3, 0x7e9f, 0xa0b0, 0xb35f, 0x1c04, 0xde5a, 0x1, 0x1);
        gbc.writeMem(0x40f3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x7e9f);
        EXPECT(gbc.pc(), 0x40f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0045
        gbc.setState(0xe5a6, 0x761f, 0xc660, 0xf2b, 0xf50f, 0xbe91, 0x0, 0x0);
        gbc.writeMem(0xe5a6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x761f);
        EXPECT(gbc.pc(), 0xe5a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5a6), 0xcb);
        EXPECT(gbc.readMem(0xe5a7), 0x20);
        // CB 20 0046
        gbc.setState(0x1240, 0x62ce, 0xaad0, 0x2bab, 0x6957, 0xd1f0, 0x0, 0x1);
        gbc.writeMem(0x1240, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x62ce);
        EXPECT(gbc.pc(), 0x1242);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0047
        gbc.setState(0x7338, 0xe7c3, 0x6630, 0x608, 0x5182, 0xc2b4, 0x0, 0x0);
        gbc.writeMem(0x7338, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe7c3);
        EXPECT(gbc.pc(), 0x733a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0048
        gbc.setState(0x43f2, 0xaeba, 0x9160, 0xf85d, 0x6e8, 0x2bf9, 0x1, 0x0);
        gbc.writeMem(0x43f2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xaeba);
        EXPECT(gbc.pc(), 0x43f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0049
        gbc.setState(0x223, 0xfa53, 0x33d0, 0x8cfd, 0x69d4, 0x29fc, 0x1, 0x0);
        gbc.writeMem(0x223, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xfa53);
        EXPECT(gbc.pc(), 0x225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 004A
        gbc.setState(0x128e, 0x36c6, 0xed60, 0xee31, 0x8387, 0x8cd1, 0x1, 0x0);
        gbc.writeMem(0x128e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x36c6);
        EXPECT(gbc.pc(), 0x1290);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 004B
        gbc.setState(0xbc0a, 0x9656, 0x2b70, 0x8ab4, 0xd54e, 0x50a7, 0x0, 0x1);
        gbc.writeMem(0xbc0a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9656);
        EXPECT(gbc.pc(), 0xbc0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc0a), 0xcb);
        EXPECT(gbc.readMem(0xbc0b), 0x20);
        // CB 20 004C
        gbc.setState(0x31d1, 0xfcfb, 0x4a10, 0x566a, 0x3509, 0x1690, 0x0, 0x1);
        gbc.writeMem(0x31d1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xfcfb);
        EXPECT(gbc.pc(), 0x31d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 004D
        gbc.setState(0x3755, 0x3b63, 0xa450, 0x7d3, 0xb898, 0x7bdc, 0x0, 0x0);
        gbc.writeMem(0x3755, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3b63);
        EXPECT(gbc.pc(), 0x3757);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 004E
        gbc.setState(0x4699, 0xbb17, 0xac70, 0x733c, 0x2cbb, 0x860c, 0x1, 0x0);
        gbc.writeMem(0x4699, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xbb17);
        EXPECT(gbc.pc(), 0x469b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 004F
        gbc.setState(0x5ef5, 0x4f8f, 0xa060, 0xbe3e, 0xeb1c, 0x1c4e, 0x1, 0x1);
        gbc.writeMem(0x5ef5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x4f8f);
        EXPECT(gbc.pc(), 0x5ef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0050
        gbc.setState(0x6bf3, 0xf8d7, 0x4f90, 0xb13e, 0x4323, 0xb2c2, 0x0, 0x1);
        gbc.writeMem(0x6bf3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf8d7);
        EXPECT(gbc.pc(), 0x6bf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0051
        gbc.setState(0xa665, 0xb113, 0x3560, 0x851c, 0x748d, 0x9080, 0x0, 0x0);
        gbc.writeMem(0xa665, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb113);
        EXPECT(gbc.pc(), 0xa667);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa665), 0xcb);
        EXPECT(gbc.readMem(0xa666), 0x20);
        // CB 20 0052
        gbc.setState(0x90a7, 0xde7f, 0x6a90, 0xef09, 0xa864, 0x5ca0, 0x1, 0x0);
        gbc.writeMem(0x90a7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xde7f);
        EXPECT(gbc.pc(), 0x90a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90a7), 0xcb);
        EXPECT(gbc.readMem(0x90a8), 0x20);
        // CB 20 0053
        gbc.setState(0x9ba9, 0x18ac, 0x5e30, 0x79ec, 0x2211, 0x23df, 0x0, 0x1);
        gbc.writeMem(0x9ba9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x18ac);
        EXPECT(gbc.pc(), 0x9bab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ba9), 0xcb);
        EXPECT(gbc.readMem(0x9baa), 0x20);
        // CB 20 0054
        gbc.setState(0xc3dc, 0x76c8, 0xa3c0, 0x35c9, 0x25af, 0x4382, 0x0, 0x0);
        gbc.writeMem(0xc3dc, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x76c8);
        EXPECT(gbc.pc(), 0xc3de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3dc), 0xcb);
        EXPECT(gbc.readMem(0xc3dd), 0x20);
        // CB 20 0055
        gbc.setState(0x366d, 0xcc84, 0x20a0, 0x8c16, 0x5797, 0x601, 0x0, 0x1);
        gbc.writeMem(0x366d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xcc84);
        EXPECT(gbc.pc(), 0x366f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0056
        gbc.setState(0x3cbe, 0xbda5, 0x7c90, 0xeea9, 0xf3, 0x29f3, 0x1, 0x1);
        gbc.writeMem(0x3cbe, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xbda5);
        EXPECT(gbc.pc(), 0x3cc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0059
        gbc.setState(0x8b7c, 0x293f, 0x8790, 0x3976, 0xda47, 0x15cc, 0x0, 0x1);
        gbc.writeMem(0x8b7c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x293f);
        EXPECT(gbc.pc(), 0x8b7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b7c), 0xcb);
        EXPECT(gbc.readMem(0x8b7d), 0x20);
        // CB 20 005A
        gbc.setState(0x9b82, 0x8398, 0xe690, 0x1771, 0xf4f8, 0x9dca, 0x1, 0x0);
        gbc.writeMem(0x9b82, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8398);
        EXPECT(gbc.pc(), 0x9b84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b82), 0xcb);
        EXPECT(gbc.readMem(0x9b83), 0x20);
        // CB 20 005B
        gbc.setState(0xbef0, 0x4d53, 0xc790, 0x64f3, 0xb5de, 0x2b3c, 0x0, 0x1);
        gbc.writeMem(0xbef0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4d53);
        EXPECT(gbc.pc(), 0xbef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbef0), 0xcb);
        EXPECT(gbc.readMem(0xbef1), 0x20);
        // CB 20 005C
        gbc.setState(0xd8bf, 0x4281, 0x7500, 0xabc0, 0x4910, 0x12cd, 0x0, 0x1);
        gbc.writeMem(0xd8bf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4281);
        EXPECT(gbc.pc(), 0xd8c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8bf), 0xcb);
        EXPECT(gbc.readMem(0xd8c0), 0x20);
        // CB 20 005D
        gbc.setState(0xdc78, 0x65c1, 0x62c0, 0xc2fa, 0x7240, 0xc249, 0x1, 0x0);
        gbc.writeMem(0xdc78, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x65c1);
        EXPECT(gbc.pc(), 0xdc7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc78), 0xcb);
        EXPECT(gbc.readMem(0xdc79), 0x20);
        // CB 20 005E
        gbc.setState(0xb53e, 0x18e5, 0x52c0, 0x8770, 0xe170, 0x90fe, 0x1, 0x0);
        gbc.writeMem(0xb53e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x18e5);
        EXPECT(gbc.pc(), 0xb540);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb53e), 0xcb);
        EXPECT(gbc.readMem(0xb53f), 0x20);
        // CB 20 005F
        gbc.setState(0x6e7e, 0x4c3b, 0x4520, 0xdc5f, 0x3e16, 0x86f9, 0x0, 0x1);
        gbc.writeMem(0x6e7e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4c3b);
        EXPECT(gbc.pc(), 0x6e80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0060
        gbc.setState(0x6f6b, 0xbf62, 0xac10, 0xc91b, 0x6463, 0x54f8, 0x0, 0x0);
        gbc.writeMem(0x6f6b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xbf62);
        EXPECT(gbc.pc(), 0x6f6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0061
        gbc.setState(0x8ffa, 0xbd6a, 0x8b50, 0x2fb5, 0xafb8, 0xd82c, 0x1, 0x0);
        gbc.writeMem(0x8ffa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbd6a);
        EXPECT(gbc.pc(), 0x8ffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ffa), 0xcb);
        EXPECT(gbc.readMem(0x8ffb), 0x20);
        // CB 20 0063
        gbc.setState(0x8aaa, 0x257d, 0x5560, 0x253d, 0xf943, 0xa1bf, 0x0, 0x1);
        gbc.writeMem(0x8aaa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x257d);
        EXPECT(gbc.pc(), 0x8aac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aaa), 0xcb);
        EXPECT(gbc.readMem(0x8aab), 0x20);
        // CB 20 0064
        gbc.setState(0x3e17, 0xed76, 0xeae0, 0xe79e, 0x634e, 0x4d0a, 0x0, 0x1);
        gbc.writeMem(0x3e17, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xed76);
        EXPECT(gbc.pc(), 0x3e19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0065
        gbc.setState(0x363c, 0x4f94, 0x9f70, 0xb49b, 0xc5dc, 0xab0a, 0x0, 0x0);
        gbc.writeMem(0x363c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x4f94);
        EXPECT(gbc.pc(), 0x363e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0066
        gbc.setState(0xe215, 0xa72f, 0x9b0, 0x76ba, 0xba33, 0x592e, 0x1, 0x0);
        gbc.writeMem(0xe215, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa72f);
        EXPECT(gbc.pc(), 0xe217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe215), 0xcb);
        EXPECT(gbc.readMem(0xe216), 0x20);
        // CB 20 0067
        gbc.setState(0x35ac, 0x4b95, 0xa550, 0xab65, 0x21e7, 0x8545, 0x0, 0x1);
        gbc.writeMem(0x35ac, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4b95);
        EXPECT(gbc.pc(), 0x35ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0068
        gbc.setState(0x29db, 0x7e61, 0x260, 0x4e50, 0xcf2f, 0x81d5, 0x1, 0x0);
        gbc.writeMem(0x29db, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7e61);
        EXPECT(gbc.pc(), 0x29dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 006A
        gbc.setState(0x86c1, 0x622a, 0x2430, 0xba09, 0x3823, 0x5587, 0x0, 0x1);
        gbc.writeMem(0x86c1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x622a);
        EXPECT(gbc.pc(), 0x86c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86c1), 0xcb);
        EXPECT(gbc.readMem(0x86c2), 0x20);
        // CB 20 006B
        gbc.setState(0x11fa, 0x6eb3, 0x8620, 0x580b, 0xda4e, 0xc71b, 0x1, 0x0);
        gbc.writeMem(0x11fa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6eb3);
        EXPECT(gbc.pc(), 0x11fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 006C
        gbc.setState(0xcc15, 0x86b3, 0x6570, 0xbcef, 0x7e8, 0x26be, 0x1, 0x1);
        gbc.writeMem(0xcc15, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x86b3);
        EXPECT(gbc.pc(), 0xcc17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc15), 0xcb);
        EXPECT(gbc.readMem(0xcc16), 0x20);
        // CB 20 006D
        gbc.setState(0x5604, 0x7736, 0x9750, 0x8133, 0xa335, 0xe979, 0x0, 0x0);
        gbc.writeMem(0x5604, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7736);
        EXPECT(gbc.pc(), 0x5606);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 006E
        gbc.setState(0xc852, 0xa2e7, 0xca50, 0xb0ae, 0x2fea, 0xe7eb, 0x0, 0x0);
        gbc.writeMem(0xc852, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa2e7);
        EXPECT(gbc.pc(), 0xc854);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc852), 0xcb);
        EXPECT(gbc.readMem(0xc853), 0x20);
        // CB 20 006F
        gbc.setState(0xc956, 0xa459, 0xd3c0, 0x4d88, 0x749c, 0x6f5e, 0x0, 0x0);
        gbc.writeMem(0xc956, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xa459);
        EXPECT(gbc.pc(), 0xc958);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc956), 0xcb);
        EXPECT(gbc.readMem(0xc957), 0x20);
        // CB 20 0071
        gbc.setState(0x3b1a, 0x4ee2, 0x9da0, 0x61dc, 0x7951, 0x8ae8, 0x1, 0x1);
        gbc.writeMem(0x3b1a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4ee2);
        EXPECT(gbc.pc(), 0x3b1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0072
        gbc.setState(0x8cce, 0x54cf, 0xfde0, 0xf80e, 0x603c, 0xb2b5, 0x1, 0x0);
        gbc.writeMem(0x8cce, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x54cf);
        EXPECT(gbc.pc(), 0x8cd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cce), 0xcb);
        EXPECT(gbc.readMem(0x8ccf), 0x20);
        // CB 20 0073
        gbc.setState(0xe433, 0x2b, 0x7ec0, 0xdec8, 0x43c7, 0xaa5d, 0x1, 0x0);
        gbc.writeMem(0xe433, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2b);
        EXPECT(gbc.pc(), 0xe435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe433), 0xcb);
        EXPECT(gbc.readMem(0xe434), 0x20);
        // CB 20 0074
        gbc.setState(0x9902, 0x3868, 0xf920, 0xf79f, 0xcac2, 0x95bb, 0x1, 0x1);
        gbc.writeMem(0x9902, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3868);
        EXPECT(gbc.pc(), 0x9904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9902), 0xcb);
        EXPECT(gbc.readMem(0x9903), 0x20);
        // CB 20 0075
        gbc.setState(0xcd87, 0xcb1, 0x5c00, 0x6e18, 0xb411, 0xdd42, 0x0, 0x0);
        gbc.writeMem(0xcd87, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xcb1);
        EXPECT(gbc.pc(), 0xcd89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd87), 0xcb);
        EXPECT(gbc.readMem(0xcd88), 0x20);
        // CB 20 0076
        gbc.setState(0x8c82, 0x2a4d, 0x7580, 0x2416, 0xe50, 0x309, 0x0, 0x0);
        gbc.writeMem(0x8c82, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2a4d);
        EXPECT(gbc.pc(), 0x8c84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c82), 0xcb);
        EXPECT(gbc.readMem(0x8c83), 0x20);
        // CB 20 0077
        gbc.setState(0x24dd, 0x4363, 0x1530, 0xbb85, 0x6f81, 0x93a9, 0x1, 0x0);
        gbc.writeMem(0x24dd, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4363);
        EXPECT(gbc.pc(), 0x24df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0078
        gbc.setState(0xc082, 0xf0d2, 0x5d20, 0xf6d0, 0xc055, 0xa6ca, 0x1, 0x1);
        gbc.writeMem(0xc082, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xf0d2);
        EXPECT(gbc.pc(), 0xc084);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc082), 0xcb);
        EXPECT(gbc.readMem(0xc083), 0x20);
        // CB 20 0079
        gbc.setState(0x1fd9, 0xe043, 0x8b80, 0x8b4d, 0x1182, 0x7992, 0x1, 0x0);
        gbc.writeMem(0x1fd9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe043);
        EXPECT(gbc.pc(), 0x1fdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 007A
        gbc.setState(0x397a, 0x13c, 0x6310, 0xd6d0, 0x66d9, 0x4cbf, 0x1, 0x1);
        gbc.writeMem(0x397a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x13c);
        EXPECT(gbc.pc(), 0x397c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 007B
        gbc.setState(0xbef1, 0x12a0, 0xa5b0, 0xc4d3, 0x5944, 0x5464, 0x0, 0x0);
        gbc.writeMem(0xbef1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x12a0);
        EXPECT(gbc.pc(), 0xbef3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbef1), 0xcb);
        EXPECT(gbc.readMem(0xbef2), 0x20);
        // CB 20 007C
        gbc.setState(0x726e, 0x35d3, 0x12a0, 0xca83, 0xe944, 0x1efe, 0x1, 0x0);
        gbc.writeMem(0x726e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x35d3);
        EXPECT(gbc.pc(), 0x7270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 007D
        gbc.setState(0x9b49, 0x23bb, 0xfb20, 0xc45c, 0x59c8, 0x8c52, 0x0, 0x0);
        gbc.writeMem(0x9b49, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x23bb);
        EXPECT(gbc.pc(), 0x9b4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b49), 0xcb);
        EXPECT(gbc.readMem(0x9b4a), 0x20);
        // CB 20 007E
        gbc.setState(0xd972, 0x27c7, 0xf990, 0x8f65, 0x3e8a, 0x692a, 0x1, 0x1);
        gbc.writeMem(0xd972, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x27c7);
        EXPECT(gbc.pc(), 0xd974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd972), 0xcb);
        EXPECT(gbc.readMem(0xd973), 0x20);
        // CB 20 007F
        gbc.setState(0xa59e, 0x5ac5, 0x1b80, 0x432, 0xfaab, 0xbdf8, 0x1, 0x0);
        gbc.writeMem(0xa59e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x5ac5);
        EXPECT(gbc.pc(), 0xa5a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa59e), 0xcb);
        EXPECT(gbc.readMem(0xa59f), 0x20);
        // CB 20 0080
        gbc.setState(0xc224, 0x406, 0x4010, 0x4b6, 0x30c6, 0xf29a, 0x1, 0x0);
        gbc.writeMem(0xc224, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x406);
        EXPECT(gbc.pc(), 0xc226);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc224), 0xcb);
        EXPECT(gbc.readMem(0xc225), 0x20);
        // CB 20 0081
        gbc.setState(0x8fc1, 0x3374, 0x3b60, 0xae5f, 0x26b8, 0xba27, 0x0, 0x0);
        gbc.writeMem(0x8fc1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3374);
        EXPECT(gbc.pc(), 0x8fc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fc1), 0xcb);
        EXPECT(gbc.readMem(0x8fc2), 0x20);
        // CB 20 0082
        gbc.setState(0xd33c, 0xef49, 0xd510, 0xc211, 0x3fd, 0x4271, 0x1, 0x1);
        gbc.writeMem(0xd33c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xef49);
        EXPECT(gbc.pc(), 0xd33e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd33c), 0xcb);
        EXPECT(gbc.readMem(0xd33d), 0x20);
        // CB 20 0083
        gbc.setState(0xc7b5, 0xccf4, 0xd7d0, 0x774a, 0xb4c8, 0x5dab, 0x0, 0x1);
        gbc.writeMem(0xc7b5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xccf4);
        EXPECT(gbc.pc(), 0xc7b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7b5), 0xcb);
        EXPECT(gbc.readMem(0xc7b6), 0x20);
        // CB 20 0084
        gbc.setState(0x53ce, 0xc781, 0xd10, 0xa9e5, 0x672d, 0xce53, 0x1, 0x0);
        gbc.writeMem(0x53ce, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xc781);
        EXPECT(gbc.pc(), 0x53d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0085
        gbc.setState(0x4717, 0xd4b5, 0xa8c0, 0x16ba, 0x8b96, 0xfd16, 0x1, 0x0);
        gbc.writeMem(0x4717, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd4b5);
        EXPECT(gbc.pc(), 0x4719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0086
        gbc.setState(0xb5b3, 0x635b, 0xcc10, 0xac9a, 0x51d1, 0x4fe3, 0x0, 0x1);
        gbc.writeMem(0xb5b3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x635b);
        EXPECT(gbc.pc(), 0xb5b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5b3), 0xcb);
        EXPECT(gbc.readMem(0xb5b4), 0x20);
        // CB 20 0087
        gbc.setState(0x8b43, 0xff8f, 0x3250, 0xb6db, 0x98c0, 0xcfb0, 0x1, 0x0);
        gbc.writeMem(0x8b43, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xff8f);
        EXPECT(gbc.pc(), 0x8b45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b43), 0xcb);
        EXPECT(gbc.readMem(0x8b44), 0x20);
        // CB 20 0088
        gbc.setState(0x5585, 0x21c7, 0xa350, 0x1065, 0xfd0e, 0x448c, 0x0, 0x1);
        gbc.writeMem(0x5585, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x21c7);
        EXPECT(gbc.pc(), 0x5587);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0089
        gbc.setState(0x32fe, 0x4ead, 0xdc30, 0xce1, 0x7c27, 0x4b2d, 0x1, 0x0);
        gbc.writeMem(0x32fe, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4ead);
        EXPECT(gbc.pc(), 0x3300);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 008A
        gbc.setState(0x51b4, 0x4da2, 0x80b0, 0xb988, 0x6bbb, 0xcd9, 0x0, 0x1);
        gbc.writeMem(0x51b4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4da2);
        EXPECT(gbc.pc(), 0x51b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 008B
        gbc.setState(0x79d6, 0xdb05, 0x1970, 0x47da, 0x5aa0, 0x9470, 0x0, 0x0);
        gbc.writeMem(0x79d6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xdb05);
        EXPECT(gbc.pc(), 0x79d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 008C
        gbc.setState(0xe55b, 0xcfaa, 0x3d60, 0x66d3, 0x42d1, 0x1e55, 0x1, 0x1);
        gbc.writeMem(0xe55b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xcfaa);
        EXPECT(gbc.pc(), 0xe55d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe55b), 0xcb);
        EXPECT(gbc.readMem(0xe55c), 0x20);
        // CB 20 008D
        gbc.setState(0x65e8, 0x26c8, 0xaf50, 0x9a22, 0xe926, 0xd1af, 0x1, 0x1);
        gbc.writeMem(0x65e8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x26c8);
        EXPECT(gbc.pc(), 0x65ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 008E
        gbc.setState(0x699f, 0x8679, 0x3d50, 0xe437, 0x8c00, 0xd1c3, 0x0, 0x0);
        gbc.writeMem(0x699f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8679);
        EXPECT(gbc.pc(), 0x69a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 008F
        gbc.setState(0xcc46, 0x94f1, 0x7740, 0x36e2, 0xbcbd, 0x5efb, 0x0, 0x0);
        gbc.writeMem(0xcc46, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x94f1);
        EXPECT(gbc.pc(), 0xcc48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc46), 0xcb);
        EXPECT(gbc.readMem(0xcc47), 0x20);
        // CB 20 0090
        gbc.setState(0x38d2, 0xc5a5, 0x8e20, 0x52f6, 0xcc30, 0x61f4, 0x1, 0x1);
        gbc.writeMem(0x38d2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc5a5);
        EXPECT(gbc.pc(), 0x38d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0091
        gbc.setState(0x85f, 0x150e, 0x50, 0xbfb3, 0xbdf5, 0xb076, 0x1, 0x0);
        gbc.writeMem(0x85f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x150e);
        EXPECT(gbc.pc(), 0x861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0092
        gbc.setState(0xa4e3, 0x2559, 0xef50, 0xefc, 0xc00a, 0xc30a, 0x0, 0x1);
        gbc.writeMem(0xa4e3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2559);
        EXPECT(gbc.pc(), 0xa4e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4e3), 0xcb);
        EXPECT(gbc.readMem(0xa4e4), 0x20);
        // CB 20 0093
        gbc.setState(0xda6e, 0x875f, 0x9e80, 0xf0df, 0xe1da, 0x680d, 0x1, 0x1);
        gbc.writeMem(0xda6e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x875f);
        EXPECT(gbc.pc(), 0xda70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda6e), 0xcb);
        EXPECT(gbc.readMem(0xda6f), 0x20);
        // CB 20 0094
        gbc.setState(0xa812, 0xc837, 0xd280, 0xf564, 0xf5e2, 0xa6f, 0x0, 0x1);
        gbc.writeMem(0xa812, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc837);
        EXPECT(gbc.pc(), 0xa814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa812), 0xcb);
        EXPECT(gbc.readMem(0xa813), 0x20);
        // CB 20 0096
        gbc.setState(0x1b46, 0x64e6, 0x5f80, 0x2ad1, 0x76a6, 0x53d5, 0x1, 0x0);
        gbc.writeMem(0x1b46, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x64e6);
        EXPECT(gbc.pc(), 0x1b48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0098
        gbc.setState(0xa1f9, 0x70ce, 0x2990, 0x92fb, 0x20be, 0xa1fd, 0x1, 0x0);
        gbc.writeMem(0xa1f9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x70ce);
        EXPECT(gbc.pc(), 0xa1fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1f9), 0xcb);
        EXPECT(gbc.readMem(0xa1fa), 0x20);
        // CB 20 0099
        gbc.setState(0xb77d, 0xa73b, 0xd3d0, 0x813f, 0x7b16, 0x897a, 0x1, 0x1);
        gbc.writeMem(0xb77d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa73b);
        EXPECT(gbc.pc(), 0xb77f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb77d), 0xcb);
        EXPECT(gbc.readMem(0xb77e), 0x20);
        // CB 20 009A
        gbc.setState(0x48b0, 0xacea, 0x6320, 0x2e9c, 0xe8d, 0x5bbf, 0x0, 0x1);
        gbc.writeMem(0x48b0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xacea);
        EXPECT(gbc.pc(), 0x48b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 009B
        gbc.setState(0x9cfa, 0x8722, 0xffb0, 0x8146, 0xf034, 0xc761, 0x1, 0x0);
        gbc.writeMem(0x9cfa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8722);
        EXPECT(gbc.pc(), 0x9cfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cfa), 0xcb);
        EXPECT(gbc.readMem(0x9cfb), 0x20);
        // CB 20 009C
        gbc.setState(0xa772, 0xbd4a, 0x1830, 0xace3, 0xdc23, 0xc5ad, 0x0, 0x0);
        gbc.writeMem(0xa772, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xbd4a);
        EXPECT(gbc.pc(), 0xa774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa772), 0xcb);
        EXPECT(gbc.readMem(0xa773), 0x20);
        // CB 20 009D
        gbc.setState(0xa39d, 0x2e01, 0xf5a0, 0x722, 0xb385, 0xe425, 0x0, 0x0);
        gbc.writeMem(0xa39d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2e01);
        EXPECT(gbc.pc(), 0xa39f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa39d), 0xcb);
        EXPECT(gbc.readMem(0xa39e), 0x20);
        // CB 20 009E
        gbc.setState(0x4fd6, 0x595a, 0x1ab0, 0xe493, 0xce14, 0xa62f, 0x0, 0x1);
        gbc.writeMem(0x4fd6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x595a);
        EXPECT(gbc.pc(), 0x4fd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 009F
        gbc.setState(0x93bb, 0xaf7b, 0xf810, 0x2a0b, 0xd419, 0x2ef7, 0x1, 0x0);
        gbc.writeMem(0x93bb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xaf7b);
        EXPECT(gbc.pc(), 0x93bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93bb), 0xcb);
        EXPECT(gbc.readMem(0x93bc), 0x20);
        // CB 20 00A0
        gbc.setState(0x4657, 0x4bc4, 0x6150, 0x3551, 0x5d75, 0x4f9f, 0x0, 0x1);
        gbc.writeMem(0x4657, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4bc4);
        EXPECT(gbc.pc(), 0x4659);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00A1
        gbc.setState(0x4702, 0xaf30, 0xd590, 0xcef, 0xb640, 0xd91, 0x1, 0x0);
        gbc.writeMem(0x4702, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xaf30);
        EXPECT(gbc.pc(), 0x4704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00A2
        gbc.setState(0x3db9, 0x724c, 0x25f0, 0x141f, 0xce92, 0x8a5, 0x0, 0x1);
        gbc.writeMem(0x3db9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x724c);
        EXPECT(gbc.pc(), 0x3dbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00A3
        gbc.setState(0x4a65, 0x4fb7, 0x9fd0, 0x50fd, 0x874, 0x8756, 0x0, 0x0);
        gbc.writeMem(0x4a65, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x4fb7);
        EXPECT(gbc.pc(), 0x4a67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00A4
        gbc.setState(0x23c7, 0x7188, 0xa5a0, 0x4f33, 0xb1bc, 0xf38b, 0x1, 0x1);
        gbc.writeMem(0x23c7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7188);
        EXPECT(gbc.pc(), 0x23c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00A7
        gbc.setState(0x96c6, 0xe34f, 0x5670, 0xfb3d, 0xf6c5, 0xe8b6, 0x1, 0x1);
        gbc.writeMem(0x96c6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe34f);
        EXPECT(gbc.pc(), 0x96c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96c6), 0xcb);
        EXPECT(gbc.readMem(0x96c7), 0x20);
        // CB 20 00A8
        gbc.setState(0x7d26, 0xb6c, 0xc870, 0xe395, 0xd384, 0xfed, 0x1, 0x1);
        gbc.writeMem(0x7d26, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb6c);
        EXPECT(gbc.pc(), 0x7d28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00A9
        gbc.setState(0x2e8d, 0xc7ed, 0xa7d0, 0x74e3, 0x962, 0x95fa, 0x0, 0x1);
        gbc.writeMem(0x2e8d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc7ed);
        EXPECT(gbc.pc(), 0x2e8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00AA
        gbc.setState(0x4c0b, 0x5322, 0x1d00, 0x9c8d, 0xd4c9, 0xc94c, 0x1, 0x0);
        gbc.writeMem(0x4c0b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x5322);
        EXPECT(gbc.pc(), 0x4c0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00AB
        gbc.setState(0xc35e, 0x5cde, 0xa560, 0x9fe1, 0x9c, 0xfb1a, 0x0, 0x0);
        gbc.writeMem(0xc35e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5cde);
        EXPECT(gbc.pc(), 0xc360);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc35e), 0xcb);
        EXPECT(gbc.readMem(0xc35f), 0x20);
        // CB 20 00AC
        gbc.setState(0x2b00, 0xaa8d, 0x9e90, 0x7a0e, 0xd69d, 0x38e2, 0x0, 0x1);
        gbc.writeMem(0x2b00, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xaa8d);
        EXPECT(gbc.pc(), 0x2b02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00AD
        gbc.setState(0x9c19, 0x39c7, 0x1e50, 0x8cdb, 0x55ee, 0xb4ec, 0x0, 0x0);
        gbc.writeMem(0x9c19, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x39c7);
        EXPECT(gbc.pc(), 0x9c1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c19), 0xcb);
        EXPECT(gbc.readMem(0x9c1a), 0x20);
        // CB 20 00AF
        gbc.setState(0x8d82, 0xe871, 0x7910, 0x10ef, 0x9e6a, 0xf87f, 0x1, 0x1);
        gbc.writeMem(0x8d82, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe871);
        EXPECT(gbc.pc(), 0x8d84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d82), 0xcb);
        EXPECT(gbc.readMem(0x8d83), 0x20);
        // CB 20 00B0
        gbc.setState(0x468b, 0xcf5e, 0xa460, 0x56fe, 0x1fc0, 0xa749, 0x1, 0x1);
        gbc.writeMem(0x468b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xcf5e);
        EXPECT(gbc.pc(), 0x468d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00B1
        gbc.setState(0x6e1, 0xeaf4, 0x4e30, 0xf47c, 0xff50, 0x3c85, 0x1, 0x1);
        gbc.writeMem(0x6e1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xeaf4);
        EXPECT(gbc.pc(), 0x6e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00B2
        gbc.setState(0x6dd5, 0xd608, 0x9930, 0x2f0f, 0x7ea2, 0x3f14, 0x1, 0x0);
        gbc.writeMem(0x6dd5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd608);
        EXPECT(gbc.pc(), 0x6dd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00B3
        gbc.setState(0x9eda, 0xa681, 0xf230, 0xbbde, 0x6946, 0xc212, 0x1, 0x0);
        gbc.writeMem(0x9eda, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xa681);
        EXPECT(gbc.pc(), 0x9edc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eda), 0xcb);
        EXPECT(gbc.readMem(0x9edb), 0x20);
        // CB 20 00B4
        gbc.setState(0x731b, 0xb51e, 0xc570, 0x75eb, 0x3662, 0xd358, 0x0, 0x0);
        gbc.writeMem(0x731b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb51e);
        EXPECT(gbc.pc(), 0x731d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00B5
        gbc.setState(0x704f, 0xb5e1, 0xd5f0, 0x9962, 0x7d59, 0xaf87, 0x1, 0x1);
        gbc.writeMem(0x704f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb5e1);
        EXPECT(gbc.pc(), 0x7051);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00B6
        gbc.setState(0x92d0, 0xc33b, 0xa670, 0xcff2, 0xa268, 0xca87, 0x0, 0x1);
        gbc.writeMem(0x92d0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc33b);
        EXPECT(gbc.pc(), 0x92d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92d0), 0xcb);
        EXPECT(gbc.readMem(0x92d1), 0x20);
        // CB 20 00B7
        gbc.setState(0x4378, 0x406d, 0xb5e0, 0x24d5, 0x62d9, 0x1779, 0x0, 0x1);
        gbc.writeMem(0x4378, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x406d);
        EXPECT(gbc.pc(), 0x437a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00B9
        gbc.setState(0x416b, 0x6472, 0xd80, 0xccd2, 0x6328, 0x913f, 0x1, 0x1);
        gbc.writeMem(0x416b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6472);
        EXPECT(gbc.pc(), 0x416d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00BA
        gbc.setState(0x28d8, 0x728a, 0x4a90, 0xf252, 0x66ba, 0xd782, 0x1, 0x0);
        gbc.writeMem(0x28d8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x728a);
        EXPECT(gbc.pc(), 0x28da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00BB
        gbc.setState(0xc5b7, 0x7c8a, 0xfd90, 0x85d9, 0xf659, 0x429a, 0x0, 0x0);
        gbc.writeMem(0xc5b7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7c8a);
        EXPECT(gbc.pc(), 0xc5b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5b7), 0xcb);
        EXPECT(gbc.readMem(0xc5b8), 0x20);
        // CB 20 00BC
        gbc.setState(0x7ce5, 0xb12, 0xb4b0, 0x69fb, 0x9a48, 0xca57, 0x0, 0x0);
        gbc.writeMem(0x7ce5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb12);
        EXPECT(gbc.pc(), 0x7ce7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00BD
        gbc.setState(0x54f8, 0xd09, 0x64b0, 0xe66f, 0x46e7, 0xd1e2, 0x0, 0x0);
        gbc.writeMem(0x54f8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd09);
        EXPECT(gbc.pc(), 0x54fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00BE
        gbc.setState(0xc4a4, 0xd34f, 0x61c0, 0x2cf, 0x7d62, 0xdc8b, 0x0, 0x0);
        gbc.writeMem(0xc4a4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xd34f);
        EXPECT(gbc.pc(), 0xc4a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4a4), 0xcb);
        EXPECT(gbc.readMem(0xc4a5), 0x20);
        // CB 20 00BF
        gbc.setState(0x2ff9, 0xa118, 0xeb50, 0x8927, 0x162, 0x2c02, 0x0, 0x0);
        gbc.writeMem(0x2ff9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xa118);
        EXPECT(gbc.pc(), 0x2ffb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00C0
        gbc.setState(0x2e43, 0x169, 0xe860, 0xd4ed, 0x8bf1, 0xd176, 0x1, 0x1);
        gbc.writeMem(0x2e43, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x169);
        EXPECT(gbc.pc(), 0x2e45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00C1
        gbc.setState(0xc30e, 0x387f, 0xfda0, 0x5c3f, 0x708d, 0x2d21, 0x0, 0x1);
        gbc.writeMem(0xc30e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x387f);
        EXPECT(gbc.pc(), 0xc310);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc30e), 0xcb);
        EXPECT(gbc.readMem(0xc30f), 0x20);
        // CB 20 00C2
        gbc.setState(0xa914, 0x142d, 0x5fd0, 0xab14, 0x2daa, 0x4d33, 0x1, 0x0);
        gbc.writeMem(0xa914, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x142d);
        EXPECT(gbc.pc(), 0xa916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa914), 0xcb);
        EXPECT(gbc.readMem(0xa915), 0x20);
        // CB 20 00C3
        gbc.setState(0xb5a5, 0xeea0, 0xc510, 0xb9e2, 0x8eea, 0x6251, 0x0, 0x0);
        gbc.writeMem(0xb5a5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xeea0);
        EXPECT(gbc.pc(), 0xb5a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5a5), 0xcb);
        EXPECT(gbc.readMem(0xb5a6), 0x20);
        // CB 20 00C4
        gbc.setState(0xba72, 0xb6c0, 0xd130, 0xc0ef, 0xd055, 0xa44c, 0x0, 0x0);
        gbc.writeMem(0xba72, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb6c0);
        EXPECT(gbc.pc(), 0xba74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba72), 0xcb);
        EXPECT(gbc.readMem(0xba73), 0x20);
        // CB 20 00C5
        gbc.setState(0x82e6, 0x91d3, 0x8290, 0x9f2d, 0xf2c0, 0x7dff, 0x1, 0x0);
        gbc.writeMem(0x82e6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x91d3);
        EXPECT(gbc.pc(), 0x82e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82e6), 0xcb);
        EXPECT(gbc.readMem(0x82e7), 0x20);
        // CB 20 00C6
        gbc.setState(0x739b, 0x354a, 0xc4b0, 0xf17b, 0x25ec, 0x42cf, 0x1, 0x1);
        gbc.writeMem(0x739b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x354a);
        EXPECT(gbc.pc(), 0x739d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00C7
        gbc.setState(0x840b, 0xae80, 0xd150, 0xd063, 0xba57, 0x1174, 0x0, 0x1);
        gbc.writeMem(0x840b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xae80);
        EXPECT(gbc.pc(), 0x840d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x840b), 0xcb);
        EXPECT(gbc.readMem(0x840c), 0x20);
        // CB 20 00C8
        gbc.setState(0xb7e2, 0xeee, 0x6170, 0xb5f9, 0x92bc, 0x99c2, 0x0, 0x0);
        gbc.writeMem(0xb7e2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xeee);
        EXPECT(gbc.pc(), 0xb7e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e2), 0xcb);
        EXPECT(gbc.readMem(0xb7e3), 0x20);
        // CB 20 00C9
        gbc.setState(0x18b7, 0x161c, 0x1590, 0x869c, 0x1325, 0xc60c, 0x0, 0x1);
        gbc.writeMem(0x18b7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x161c);
        EXPECT(gbc.pc(), 0x18b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00CA
        gbc.setState(0xcee6, 0xa36a, 0x6e20, 0x30d, 0xe49e, 0xfaef, 0x0, 0x0);
        gbc.writeMem(0xcee6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa36a);
        EXPECT(gbc.pc(), 0xcee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcee6), 0xcb);
        EXPECT(gbc.readMem(0xcee7), 0x20);
        // CB 20 00CB
        gbc.setState(0x6a6, 0xc6ab, 0x2fe0, 0xa63f, 0xde48, 0xd95f, 0x0, 0x1);
        gbc.writeMem(0x6a6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc6ab);
        EXPECT(gbc.pc(), 0x6a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00CC
        gbc.setState(0x79bb, 0xdea5, 0x49a0, 0xc4b5, 0x1c99, 0xff1, 0x1, 0x1);
        gbc.writeMem(0x79bb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xdea5);
        EXPECT(gbc.pc(), 0x79bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00CD
        gbc.setState(0xa685, 0x63ff, 0x8420, 0x735f, 0x9784, 0x2c55, 0x0, 0x1);
        gbc.writeMem(0xa685, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x63ff);
        EXPECT(gbc.pc(), 0xa687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa685), 0xcb);
        EXPECT(gbc.readMem(0xa686), 0x20);
        // CB 20 00CE
        gbc.setState(0x6f75, 0xe0ec, 0xe330, 0x5e2f, 0xe585, 0x797f, 0x0, 0x0);
        gbc.writeMem(0x6f75, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe0ec);
        EXPECT(gbc.pc(), 0x6f77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00CF
        gbc.setState(0x47b, 0x470e, 0x9ca0, 0x815e, 0x38e5, 0x3cdf, 0x0, 0x0);
        gbc.writeMem(0x47b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x470e);
        EXPECT(gbc.pc(), 0x47d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00D0
        gbc.setState(0xa979, 0xf3fc, 0x3c70, 0xc75d, 0x9a47, 0xd84b, 0x1, 0x1);
        gbc.writeMem(0xa979, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf3fc);
        EXPECT(gbc.pc(), 0xa97b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa979), 0xcb);
        EXPECT(gbc.readMem(0xa97a), 0x20);
        // CB 20 00D1
        gbc.setState(0xb4bf, 0x2c15, 0x16e0, 0x1c90, 0x58c, 0x9ba5, 0x0, 0x0);
        gbc.writeMem(0xb4bf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2c15);
        EXPECT(gbc.pc(), 0xb4c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4bf), 0xcb);
        EXPECT(gbc.readMem(0xb4c0), 0x20);
        // CB 20 00D2
        gbc.setState(0x96d0, 0xeb35, 0xab80, 0xb57, 0x6822, 0xa4c6, 0x0, 0x1);
        gbc.writeMem(0x96d0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xeb35);
        EXPECT(gbc.pc(), 0x96d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96d0), 0xcb);
        EXPECT(gbc.readMem(0x96d1), 0x20);
        // CB 20 00D3
        gbc.setState(0x1556, 0xedb5, 0xee0, 0xee3e, 0xdcd9, 0xc514, 0x1, 0x0);
        gbc.writeMem(0x1556, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xedb5);
        EXPECT(gbc.pc(), 0x1558);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00D4
        gbc.setState(0x2019, 0x7112, 0x1850, 0x5900, 0x6c4b, 0xea00, 0x1, 0x1);
        gbc.writeMem(0x2019, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7112);
        EXPECT(gbc.pc(), 0x201b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00D5
        gbc.setState(0x801b, 0x57c1, 0xc050, 0xe774, 0xe23d, 0x80e8, 0x1, 0x1);
        gbc.writeMem(0x801b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x57c1);
        EXPECT(gbc.pc(), 0x801d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x801b), 0xcb);
        EXPECT(gbc.readMem(0x801c), 0x20);
        // CB 20 00D6
        gbc.setState(0xbaa1, 0x69db, 0x3a0, 0x6ed3, 0xb958, 0xce02, 0x0, 0x1);
        gbc.writeMem(0xbaa1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x69db);
        EXPECT(gbc.pc(), 0xbaa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaa1), 0xcb);
        EXPECT(gbc.readMem(0xbaa2), 0x20);
        // CB 20 00D8
        gbc.setState(0xad15, 0x9228, 0xa210, 0x7f29, 0x48dc, 0xbd61, 0x1, 0x0);
        gbc.writeMem(0xad15, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9228);
        EXPECT(gbc.pc(), 0xad17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad15), 0xcb);
        EXPECT(gbc.readMem(0xad16), 0x20);
        // CB 20 00D9
        gbc.setState(0xe244, 0x97ac, 0xbed0, 0x2557, 0x3572, 0xa2f5, 0x0, 0x0);
        gbc.writeMem(0xe244, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x97ac);
        EXPECT(gbc.pc(), 0xe246);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe244), 0xcb);
        EXPECT(gbc.readMem(0xe245), 0x20);
        // CB 20 00DA
        gbc.setState(0xfa8, 0xeec4, 0x49e0, 0x72e3, 0xed6d, 0xf0e1, 0x1, 0x1);
        gbc.writeMem(0xfa8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xeec4);
        EXPECT(gbc.pc(), 0xfaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00DB
        gbc.setState(0x4aa, 0x8cac, 0x4660, 0x3ffe, 0x42f, 0xd18a, 0x0, 0x0);
        gbc.writeMem(0x4aa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8cac);
        EXPECT(gbc.pc(), 0x4ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00DC
        gbc.setState(0x4d85, 0x1a97, 0x6300, 0x9802, 0xe263, 0x844b, 0x0, 0x1);
        gbc.writeMem(0x4d85, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1a97);
        EXPECT(gbc.pc(), 0x4d87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00DD
        gbc.setState(0x6b5e, 0x547b, 0x5bd0, 0x43, 0xfeb5, 0x2c46, 0x0, 0x0);
        gbc.writeMem(0x6b5e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x547b);
        EXPECT(gbc.pc(), 0x6b60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00DE
        gbc.setState(0x6e10, 0xf8a9, 0xc00, 0xa111, 0x92f, 0x18ed, 0x0, 0x1);
        gbc.writeMem(0x6e10, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf8a9);
        EXPECT(gbc.pc(), 0x6e12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00DF
        gbc.setState(0x74e6, 0xa1e1, 0x3610, 0x7e3d, 0x434, 0x90c8, 0x0, 0x0);
        gbc.writeMem(0x74e6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa1e1);
        EXPECT(gbc.pc(), 0x74e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00E0
        gbc.setState(0x70cc, 0xb945, 0xddf0, 0xa6cc, 0xbd88, 0xd509, 0x1, 0x0);
        gbc.writeMem(0x70cc, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb945);
        EXPECT(gbc.pc(), 0x70ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00E1
        gbc.setState(0x5f64, 0x2b24, 0x6270, 0x7a6b, 0x76c0, 0xf3d4, 0x0, 0x0);
        gbc.writeMem(0x5f64, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2b24);
        EXPECT(gbc.pc(), 0x5f66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00E2
        gbc.setState(0x1fb, 0x437, 0x7340, 0x80df, 0x9bad, 0x4a7d, 0x1, 0x1);
        gbc.writeMem(0x1fb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x437);
        EXPECT(gbc.pc(), 0x1fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00E3
        gbc.setState(0x1c47, 0x48cc, 0x8d0, 0xeb8, 0x6a26, 0xdd88, 0x0, 0x0);
        gbc.writeMem(0x1c47, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x48cc);
        EXPECT(gbc.pc(), 0x1c49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00E4
        gbc.setState(0x994c, 0x930b, 0x7210, 0x184f, 0xcc72, 0xc981, 0x0, 0x1);
        gbc.writeMem(0x994c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x930b);
        EXPECT(gbc.pc(), 0x994e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x994c), 0xcb);
        EXPECT(gbc.readMem(0x994d), 0x20);
        // CB 20 00E5
        gbc.setState(0x5865, 0xbfde, 0xd3c0, 0xbebc, 0x77f5, 0x8b5f, 0x0, 0x1);
        gbc.writeMem(0x5865, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xbfde);
        EXPECT(gbc.pc(), 0x5867);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00E6
        gbc.setState(0x51b9, 0x51, 0x7780, 0x7bd7, 0x8f26, 0x62b6, 0x0, 0x1);
        gbc.writeMem(0x51b9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x51);
        EXPECT(gbc.pc(), 0x51bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00E7
        gbc.setState(0xc664, 0x26dd, 0xa690, 0xcea5, 0xd14f, 0x96b, 0x0, 0x0);
        gbc.writeMem(0xc664, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x26dd);
        EXPECT(gbc.pc(), 0xc666);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc664), 0xcb);
        EXPECT(gbc.readMem(0xc665), 0x20);
        // CB 20 00E8
        gbc.setState(0x40ee, 0x592b, 0xd520, 0xa092, 0x1316, 0x7278, 0x0, 0x1);
        gbc.writeMem(0x40ee, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x592b);
        EXPECT(gbc.pc(), 0x40f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00EA
        gbc.setState(0x3dcf, 0xd8d6, 0xcf50, 0x7bf1, 0x26cd, 0xd6fc, 0x0, 0x0);
        gbc.writeMem(0x3dcf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd8d6);
        EXPECT(gbc.pc(), 0x3dd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00EB
        gbc.setState(0x2b0d, 0x5475, 0x4d10, 0xa31b, 0xceec, 0xf900, 0x1, 0x1);
        gbc.writeMem(0x2b0d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5475);
        EXPECT(gbc.pc(), 0x2b0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00EC
        gbc.setState(0xb385, 0x1588, 0x5460, 0xf82f, 0x3d6f, 0x4bca, 0x0, 0x1);
        gbc.writeMem(0xb385, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1588);
        EXPECT(gbc.pc(), 0xb387);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb385), 0xcb);
        EXPECT(gbc.readMem(0xb386), 0x20);
        // CB 20 00ED
        gbc.setState(0xcec7, 0x2fb6, 0x4330, 0xde53, 0x2089, 0xc81f, 0x1, 0x0);
        gbc.writeMem(0xcec7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x2fb6);
        EXPECT(gbc.pc(), 0xcec9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcec7), 0xcb);
        EXPECT(gbc.readMem(0xcec8), 0x20);
        // CB 20 00EE
        gbc.setState(0x3e2d, 0x3e16, 0xb930, 0x4b9, 0x9fcd, 0xc0f7, 0x0, 0x0);
        gbc.writeMem(0x3e2d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3e16);
        EXPECT(gbc.pc(), 0x3e2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00F0
        gbc.setState(0x1d26, 0xca73, 0xe130, 0xfb71, 0x2a50, 0xce81, 0x1, 0x0);
        gbc.writeMem(0x1d26, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xca73);
        EXPECT(gbc.pc(), 0x1d28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00F1
        gbc.setState(0xe8a2, 0x7ac8, 0x4630, 0xf069, 0x9746, 0x737d, 0x1, 0x0);
        gbc.writeMem(0xe8a2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7ac8);
        EXPECT(gbc.pc(), 0xe8a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8a2), 0xcb);
        EXPECT(gbc.readMem(0xe8a3), 0x20);
        // CB 20 00F3
        gbc.setState(0x9f06, 0xf3f3, 0x82f0, 0x15a9, 0x9ffa, 0x410c, 0x0, 0x1);
        gbc.writeMem(0x9f06, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf3f3);
        EXPECT(gbc.pc(), 0x9f08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f06), 0xcb);
        EXPECT(gbc.readMem(0x9f07), 0x20);
        // CB 20 00F4
        gbc.setState(0x7454, 0xb930, 0x4460, 0x4740, 0x749f, 0xe05a, 0x1, 0x1);
        gbc.writeMem(0x7454, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb930);
        EXPECT(gbc.pc(), 0x7456);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00F5
        gbc.setState(0x391d, 0x5cf1, 0xb8c0, 0x1022, 0x7cee, 0xecad, 0x0, 0x0);
        gbc.writeMem(0x391d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5cf1);
        EXPECT(gbc.pc(), 0x391f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00F6
        gbc.setState(0x940e, 0xed48, 0xaf30, 0x412c, 0xeea4, 0x6bdd, 0x0, 0x1);
        gbc.writeMem(0x940e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xed48);
        EXPECT(gbc.pc(), 0x9410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x940e), 0xcb);
        EXPECT(gbc.readMem(0x940f), 0x20);
        // CB 20 00F7
        gbc.setState(0xa992, 0x7ea6, 0xe650, 0x2669, 0x9a6c, 0xda51, 0x0, 0x1);
        gbc.writeMem(0xa992, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7ea6);
        EXPECT(gbc.pc(), 0xa994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa992), 0xcb);
        EXPECT(gbc.readMem(0xa993), 0x20);
        // CB 20 00F8
        gbc.setState(0x158f, 0xbefb, 0x9120, 0x661b, 0x813b, 0xb8a3, 0x1, 0x1);
        gbc.writeMem(0x158f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xbefb);
        EXPECT(gbc.pc(), 0x1591);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00F9
        gbc.setState(0x2fb1, 0x3596, 0xa230, 0xee1e, 0xbb72, 0x3043, 0x0, 0x1);
        gbc.writeMem(0x2fb1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3596);
        EXPECT(gbc.pc(), 0x2fb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00FB
        gbc.setState(0xe805, 0x1f54, 0x5790, 0x71ad, 0x3188, 0x8271, 0x1, 0x0);
        gbc.writeMem(0xe805, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x1f54);
        EXPECT(gbc.pc(), 0xe807);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe805), 0xcb);
        EXPECT(gbc.readMem(0xe806), 0x20);
        // CB 20 00FC
        gbc.setState(0xe2d, 0x1945, 0xda30, 0x7e44, 0xe189, 0x552d, 0x0, 0x1);
        gbc.writeMem(0xe2d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1945);
        EXPECT(gbc.pc(), 0xe2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00FD
        gbc.setState(0x3ba7, 0xa24e, 0xca00, 0x1828, 0x9fc7, 0x49b3, 0x1, 0x0);
        gbc.writeMem(0x3ba7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa24e);
        EXPECT(gbc.pc(), 0x3ba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 00FE
        gbc.setState(0x5f1f, 0xf140, 0x280, 0xd71b, 0xeff7, 0x7c83, 0x1, 0x0);
        gbc.writeMem(0x5f1f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf140);
        EXPECT(gbc.pc(), 0x5f21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 00FF
        gbc.setState(0x4e89, 0xe4b5, 0x4f20, 0xb6e5, 0xaf69, 0x7b84, 0x1, 0x0);
        gbc.writeMem(0x4e89, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe4b5);
        EXPECT(gbc.pc(), 0x4e8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0100
        gbc.setState(0xc1c6, 0x10e1, 0x9ef0, 0x2b5c, 0xb4d7, 0x315c, 0x0, 0x0);
        gbc.writeMem(0xc1c6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x10e1);
        EXPECT(gbc.pc(), 0xc1c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1c6), 0xcb);
        EXPECT(gbc.readMem(0xc1c7), 0x20);
        // CB 20 0101
        gbc.setState(0xb9aa, 0x414e, 0x3230, 0x5940, 0xcc70, 0x96e4, 0x0, 0x1);
        gbc.writeMem(0xb9aa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x414e);
        EXPECT(gbc.pc(), 0xb9ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9aa), 0xcb);
        EXPECT(gbc.readMem(0xb9ab), 0x20);
        // CB 20 0102
        gbc.setState(0x1936, 0xd642, 0x5aa0, 0xb95d, 0x4608, 0x7ec0, 0x0, 0x0);
        gbc.writeMem(0x1936, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd642);
        EXPECT(gbc.pc(), 0x1938);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0103
        gbc.setState(0xe70f, 0xe22e, 0xb010, 0xda74, 0x6e8d, 0x5c7a, 0x0, 0x1);
        gbc.writeMem(0xe70f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe22e);
        EXPECT(gbc.pc(), 0xe711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe70f), 0xcb);
        EXPECT(gbc.readMem(0xe710), 0x20);
        // CB 20 0104
        gbc.setState(0xcf72, 0x5b4a, 0xaa80, 0x2e19, 0xf016, 0x9632, 0x0, 0x0);
        gbc.writeMem(0xcf72, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5b4a);
        EXPECT(gbc.pc(), 0xcf74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf72), 0xcb);
        EXPECT(gbc.readMem(0xcf73), 0x20);
        // CB 20 0105
        gbc.setState(0xc850, 0xe5ed, 0x9490, 0x3079, 0x5ad0, 0x3cac, 0x0, 0x1);
        gbc.writeMem(0xc850, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe5ed);
        EXPECT(gbc.pc(), 0xc852);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc850), 0xcb);
        EXPECT(gbc.readMem(0xc851), 0x20);
        // CB 20 0106
        gbc.setState(0x2ff0, 0xe935, 0xd950, 0xc3ad, 0xef36, 0xfd2f, 0x1, 0x1);
        gbc.writeMem(0x2ff0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe935);
        EXPECT(gbc.pc(), 0x2ff2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0107
        gbc.setState(0x6d32, 0xaab5, 0xe1f0, 0x9f74, 0xc74, 0xb18a, 0x0, 0x0);
        gbc.writeMem(0x6d32, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xaab5);
        EXPECT(gbc.pc(), 0x6d34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0108
        gbc.setState(0xcf7c, 0x523d, 0x3030, 0xdaaf, 0x4a, 0x97a8, 0x0, 0x0);
        gbc.writeMem(0xcf7c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x523d);
        EXPECT(gbc.pc(), 0xcf7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf7c), 0xcb);
        EXPECT(gbc.readMem(0xcf7d), 0x20);
        // CB 20 0109
        gbc.setState(0x54ba, 0x21a8, 0xaec0, 0x26f1, 0x8a0a, 0xdcff, 0x1, 0x0);
        gbc.writeMem(0x54ba, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x21a8);
        EXPECT(gbc.pc(), 0x54bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 010A
        gbc.setState(0x3395, 0x77b4, 0xdac0, 0x6598, 0x159f, 0xbd59, 0x1, 0x0);
        gbc.writeMem(0x3395, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x77b4);
        EXPECT(gbc.pc(), 0x3397);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 010C
        gbc.setState(0x745b, 0xfeeb, 0xa3b0, 0x153a, 0xdbb4, 0x830c, 0x0, 0x1);
        gbc.writeMem(0x745b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xfeeb);
        EXPECT(gbc.pc(), 0x745d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 010D
        gbc.setState(0x4237, 0xbece, 0xe670, 0x7744, 0xbd50, 0x9941, 0x1, 0x1);
        gbc.writeMem(0x4237, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xbece);
        EXPECT(gbc.pc(), 0x4239);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 010E
        gbc.setState(0xa71a, 0x58e7, 0x7750, 0xca6b, 0x750b, 0x9c28, 0x1, 0x0);
        gbc.writeMem(0xa71a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x58e7);
        EXPECT(gbc.pc(), 0xa71c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa71a), 0xcb);
        EXPECT(gbc.readMem(0xa71b), 0x20);
        // CB 20 0110
        gbc.setState(0xd02, 0xd00, 0x75e0, 0xd047, 0xebad, 0xbc28, 0x1, 0x0);
        gbc.writeMem(0xd02, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd00);
        EXPECT(gbc.pc(), 0xd04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0111
        gbc.setState(0x9de7, 0x287, 0xb1c0, 0x4ad1, 0x816, 0xc02c, 0x1, 0x1);
        gbc.writeMem(0x9de7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x287);
        EXPECT(gbc.pc(), 0x9de9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9de7), 0xcb);
        EXPECT(gbc.readMem(0x9de8), 0x20);
        // CB 20 0112
        gbc.setState(0x2728, 0x7854, 0xd190, 0x3db9, 0xf25a, 0xa215, 0x1, 0x1);
        gbc.writeMem(0x2728, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7854);
        EXPECT(gbc.pc(), 0x272a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0113
        gbc.setState(0xc139, 0xcfb1, 0x69a0, 0xc1b3, 0x2a77, 0x5cd5, 0x0, 0x1);
        gbc.writeMem(0xc139, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xcfb1);
        EXPECT(gbc.pc(), 0xc13b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc139), 0xcb);
        EXPECT(gbc.readMem(0xc13a), 0x20);
        // CB 20 0115
        gbc.setState(0xdf36, 0xa3af, 0x1bf0, 0xf98d, 0x2708, 0x7f61, 0x0, 0x0);
        gbc.writeMem(0xdf36, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xa3af);
        EXPECT(gbc.pc(), 0xdf38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf36), 0xcb);
        EXPECT(gbc.readMem(0xdf37), 0x20);
        // CB 20 0116
        gbc.setState(0x865a, 0xe6ab, 0x21c0, 0x48fe, 0xb4af, 0x4684, 0x1, 0x1);
        gbc.writeMem(0x865a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe6ab);
        EXPECT(gbc.pc(), 0x865c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x865a), 0xcb);
        EXPECT(gbc.readMem(0x865b), 0x20);
        // CB 20 0117
        gbc.setState(0x9c25, 0xd322, 0xef60, 0x2c96, 0xfd, 0xefd6, 0x0, 0x1);
        gbc.writeMem(0x9c25, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd322);
        EXPECT(gbc.pc(), 0x9c27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c25), 0xcb);
        EXPECT(gbc.readMem(0x9c26), 0x20);
        // CB 20 0119
        gbc.setState(0xb5b0, 0xdfa0, 0xcfa0, 0x8310, 0x68fa, 0xc9f1, 0x1, 0x1);
        gbc.writeMem(0xb5b0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xdfa0);
        EXPECT(gbc.pc(), 0xb5b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5b0), 0xcb);
        EXPECT(gbc.readMem(0xb5b1), 0x20);
        // CB 20 011A
        gbc.setState(0xbaaf, 0xbab, 0x2f20, 0x70a8, 0x46ad, 0xe722, 0x1, 0x0);
        gbc.writeMem(0xbaaf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbab);
        EXPECT(gbc.pc(), 0xbab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaaf), 0xcb);
        EXPECT(gbc.readMem(0xbab0), 0x20);
        // CB 20 011B
        gbc.setState(0xa5ed, 0x41a6, 0x2760, 0x8f87, 0x6079, 0xeef5, 0x0, 0x0);
        gbc.writeMem(0xa5ed, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x41a6);
        EXPECT(gbc.pc(), 0xa5ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5ed), 0xcb);
        EXPECT(gbc.readMem(0xa5ee), 0x20);
        // CB 20 011C
        gbc.setState(0x867a, 0x8bf3, 0x8f10, 0xbf31, 0x6b0b, 0xbcc0, 0x0, 0x1);
        gbc.writeMem(0x867a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8bf3);
        EXPECT(gbc.pc(), 0x867c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x867a), 0xcb);
        EXPECT(gbc.readMem(0x867b), 0x20);
        // CB 20 011D
        gbc.setState(0x1f9a, 0x3e2b, 0x21b0, 0xa9df, 0x1446, 0xfa82, 0x1, 0x1);
        gbc.writeMem(0x1f9a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3e2b);
        EXPECT(gbc.pc(), 0x1f9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 011E
        gbc.setState(0x549f, 0x4222, 0x2bf0, 0xd028, 0x3f21, 0xf11a, 0x0, 0x0);
        gbc.writeMem(0x549f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4222);
        EXPECT(gbc.pc(), 0x54a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 011F
        gbc.setState(0xc2c9, 0x55df, 0x8800, 0x3d21, 0xf653, 0x2cee, 0x0, 0x0);
        gbc.writeMem(0xc2c9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x55df);
        EXPECT(gbc.pc(), 0xc2cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2c9), 0xcb);
        EXPECT(gbc.readMem(0xc2ca), 0x20);
        // CB 20 0120
        gbc.setState(0x9024, 0x2710, 0x4d80, 0x85e4, 0x1254, 0x78cb, 0x1, 0x0);
        gbc.writeMem(0x9024, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x2710);
        EXPECT(gbc.pc(), 0x9026);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9024), 0xcb);
        EXPECT(gbc.readMem(0x9025), 0x20);
        // CB 20 0121
        gbc.setState(0x650c, 0x8404, 0xc2a0, 0xc3e3, 0xd5f, 0xb55d, 0x0, 0x1);
        gbc.writeMem(0x650c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8404);
        EXPECT(gbc.pc(), 0x650e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0122
        gbc.setState(0x60, 0x124f, 0xbac0, 0x73b6, 0xdfaa, 0x8988, 0x0, 0x1);
        gbc.writeMem(0x60, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x124f);
        EXPECT(gbc.pc(), 0x62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0123
        gbc.setState(0xac58, 0x2c62, 0xd8a0, 0xce8a, 0x8c08, 0x97a9, 0x1, 0x0);
        gbc.writeMem(0xac58, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2c62);
        EXPECT(gbc.pc(), 0xac5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac58), 0xcb);
        EXPECT(gbc.readMem(0xac59), 0x20);
        // CB 20 0124
        gbc.setState(0x39e0, 0x4f2e, 0x84a0, 0x551e, 0x8aa0, 0x353f, 0x0, 0x0);
        gbc.writeMem(0x39e0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x4f2e);
        EXPECT(gbc.pc(), 0x39e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0125
        gbc.setState(0xaeee, 0x3fd5, 0x3ea0, 0x7986, 0x786e, 0x4130, 0x0, 0x0);
        gbc.writeMem(0xaeee, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3fd5);
        EXPECT(gbc.pc(), 0xaef0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeee), 0xcb);
        EXPECT(gbc.readMem(0xaeef), 0x20);
        // CB 20 0126
        gbc.setState(0xb733, 0x2e00, 0x6e20, 0xa9ee, 0xaa33, 0x3240, 0x0, 0x0);
        gbc.writeMem(0xb733, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2e00);
        EXPECT(gbc.pc(), 0xb735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb733), 0xcb);
        EXPECT(gbc.readMem(0xb734), 0x20);
        // CB 20 0127
        gbc.setState(0x1b3a, 0x8551, 0xb990, 0xd3c6, 0x4707, 0x6bc7, 0x0, 0x0);
        gbc.writeMem(0x1b3a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8551);
        EXPECT(gbc.pc(), 0x1b3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0128
        gbc.setState(0xe17b, 0x2258, 0xaec0, 0x9115, 0xfc88, 0x4b20, 0x0, 0x0);
        gbc.writeMem(0xe17b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2258);
        EXPECT(gbc.pc(), 0xe17d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe17b), 0xcb);
        EXPECT(gbc.readMem(0xe17c), 0x20);
        // CB 20 0129
        gbc.setState(0x844, 0x240b, 0x48a0, 0x6054, 0x31f8, 0xf05c, 0x0, 0x0);
        gbc.writeMem(0x844, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x240b);
        EXPECT(gbc.pc(), 0x846);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 012A
        gbc.setState(0xb70c, 0x3fb0, 0x4460, 0xbe0, 0x86b7, 0x2907, 0x1, 0x1);
        gbc.writeMem(0xb70c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3fb0);
        EXPECT(gbc.pc(), 0xb70e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb70c), 0xcb);
        EXPECT(gbc.readMem(0xb70d), 0x20);
        // CB 20 012B
        gbc.setState(0x3209, 0x6115, 0x93f0, 0x6351, 0xca38, 0xb4c6, 0x0, 0x1);
        gbc.writeMem(0x3209, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x6115);
        EXPECT(gbc.pc(), 0x320b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 012C
        gbc.setState(0xcba8, 0x2bc3, 0xad50, 0x8345, 0x6aef, 0x1df2, 0x0, 0x0);
        gbc.writeMem(0xcba8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2bc3);
        EXPECT(gbc.pc(), 0xcbaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcba8), 0xcb);
        EXPECT(gbc.readMem(0xcba9), 0x20);
        // CB 20 012E
        gbc.setState(0xce99, 0x8f64, 0x1030, 0x124c, 0x5f76, 0xf285, 0x0, 0x0);
        gbc.writeMem(0xce99, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8f64);
        EXPECT(gbc.pc(), 0xce9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce99), 0xcb);
        EXPECT(gbc.readMem(0xce9a), 0x20);
        // CB 20 012F
        gbc.setState(0x325e, 0x8616, 0xa6f0, 0x7308, 0x33f9, 0xb4b1, 0x1, 0x1);
        gbc.writeMem(0x325e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8616);
        EXPECT(gbc.pc(), 0x3260);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0130
        gbc.setState(0x4dcf, 0x8b31, 0xf3b0, 0x6cf0, 0x33e8, 0x4b76, 0x1, 0x1);
        gbc.writeMem(0x4dcf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8b31);
        EXPECT(gbc.pc(), 0x4dd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0131
        gbc.setState(0x3fe3, 0x9cf3, 0xb100, 0xf0c2, 0x5058, 0x53b3, 0x1, 0x0);
        gbc.writeMem(0x3fe3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9cf3);
        EXPECT(gbc.pc(), 0x3fe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0132
        gbc.setState(0xba6e, 0x62b4, 0x60f0, 0x2ee9, 0xbbbc, 0x502e, 0x0, 0x1);
        gbc.writeMem(0xba6e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x62b4);
        EXPECT(gbc.pc(), 0xba70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba6e), 0xcb);
        EXPECT(gbc.readMem(0xba6f), 0x20);
        // CB 20 0133
        gbc.setState(0x10e3, 0x9ca, 0xe640, 0x8769, 0xebcd, 0x5557, 0x0, 0x1);
        gbc.writeMem(0x10e3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9ca);
        EXPECT(gbc.pc(), 0x10e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0134
        gbc.setState(0x6efb, 0xd22e, 0x8660, 0x257, 0x6ce5, 0xc000, 0x0, 0x1);
        gbc.writeMem(0x6efb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd22e);
        EXPECT(gbc.pc(), 0x6efd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0135
        gbc.setState(0xadd2, 0x7491, 0xbd80, 0x867f, 0xd2ca, 0xbd53, 0x0, 0x0);
        gbc.writeMem(0xadd2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x7491);
        EXPECT(gbc.pc(), 0xadd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadd2), 0xcb);
        EXPECT(gbc.readMem(0xadd3), 0x20);
        // CB 20 0136
        gbc.setState(0x5266, 0x3724, 0xd7a0, 0x2f5f, 0xc3ca, 0x3be0, 0x1, 0x0);
        gbc.writeMem(0x5266, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3724);
        EXPECT(gbc.pc(), 0x5268);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0137
        gbc.setState(0x9e77, 0x7933, 0x5b60, 0xc1e3, 0xe22f, 0x450c, 0x0, 0x1);
        gbc.writeMem(0x9e77, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7933);
        EXPECT(gbc.pc(), 0x9e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e77), 0xcb);
        EXPECT(gbc.readMem(0x9e78), 0x20);
        // CB 20 0138
        gbc.setState(0x9d08, 0x3c82, 0xcb60, 0xe12c, 0xef92, 0xb5b, 0x1, 0x0);
        gbc.writeMem(0x9d08, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3c82);
        EXPECT(gbc.pc(), 0x9d0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d08), 0xcb);
        EXPECT(gbc.readMem(0x9d09), 0x20);
        // CB 20 013A
        gbc.setState(0x1b7a, 0xe875, 0x74b0, 0x867f, 0xd946, 0x860c, 0x1, 0x0);
        gbc.writeMem(0x1b7a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe875);
        EXPECT(gbc.pc(), 0x1b7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 013B
        gbc.setState(0x9ca3, 0xbdf5, 0x7ab0, 0x5de8, 0xbf79, 0x3bf5, 0x0, 0x1);
        gbc.writeMem(0x9ca3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xbdf5);
        EXPECT(gbc.pc(), 0x9ca5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ca3), 0xcb);
        EXPECT(gbc.readMem(0x9ca4), 0x20);
        // CB 20 013C
        gbc.setState(0xc21f, 0xcbe, 0x2350, 0x9f07, 0x19d, 0x96e0, 0x1, 0x0);
        gbc.writeMem(0xc21f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xcbe);
        EXPECT(gbc.pc(), 0xc221);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc21f), 0xcb);
        EXPECT(gbc.readMem(0xc220), 0x20);
        // CB 20 013D
        gbc.setState(0xac4d, 0x8b3, 0xb7d0, 0x4507, 0x30a1, 0xc2f3, 0x1, 0x1);
        gbc.writeMem(0xac4d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8b3);
        EXPECT(gbc.pc(), 0xac4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac4d), 0xcb);
        EXPECT(gbc.readMem(0xac4e), 0x20);
        // CB 20 013E
        gbc.setState(0x8c12, 0x7009, 0x8a80, 0x2388, 0x76dc, 0xe3a9, 0x1, 0x0);
        gbc.writeMem(0x8c12, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7009);
        EXPECT(gbc.pc(), 0x8c14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c12), 0xcb);
        EXPECT(gbc.readMem(0x8c13), 0x20);
        // CB 20 013F
        gbc.setState(0x83c4, 0xaac2, 0x96c0, 0xeb54, 0x410c, 0xe4b, 0x1, 0x0);
        gbc.writeMem(0x83c4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xaac2);
        EXPECT(gbc.pc(), 0x83c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83c4), 0xcb);
        EXPECT(gbc.readMem(0x83c5), 0x20);
        // CB 20 0140
        gbc.setState(0xca58, 0x8d31, 0xc3c0, 0xcc72, 0x2e44, 0x3b4b, 0x1, 0x1);
        gbc.writeMem(0xca58, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8d31);
        EXPECT(gbc.pc(), 0xca5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca58), 0xcb);
        EXPECT(gbc.readMem(0xca59), 0x20);
        // CB 20 0141
        gbc.setState(0x30a6, 0x98b4, 0x1880, 0x2a7d, 0x25d3, 0xe86f, 0x0, 0x0);
        gbc.writeMem(0x30a6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x98b4);
        EXPECT(gbc.pc(), 0x30a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0142
        gbc.setState(0xb730, 0xfdf5, 0x9620, 0x6c1b, 0xa99a, 0xb8f9, 0x0, 0x1);
        gbc.writeMem(0xb730, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xfdf5);
        EXPECT(gbc.pc(), 0xb732);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb730), 0xcb);
        EXPECT(gbc.readMem(0xb731), 0x20);
        // CB 20 0143
        gbc.setState(0xbc10, 0xcc43, 0xdd00, 0x8bb, 0x6778, 0x50b1, 0x1, 0x1);
        gbc.writeMem(0xbc10, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xcc43);
        EXPECT(gbc.pc(), 0xbc12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc10), 0xcb);
        EXPECT(gbc.readMem(0xbc11), 0x20);
        // CB 20 0144
        gbc.setState(0x6ee0, 0x543f, 0xd9e0, 0xb0e2, 0x17a3, 0x6e4c, 0x0, 0x1);
        gbc.writeMem(0x6ee0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x543f);
        EXPECT(gbc.pc(), 0x6ee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0145
        gbc.setState(0x726d, 0x37b2, 0x9070, 0xcb5, 0x688f, 0x610c, 0x0, 0x1);
        gbc.writeMem(0x726d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x37b2);
        EXPECT(gbc.pc(), 0x726f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0146
        gbc.setState(0xc3c6, 0x9776, 0x6140, 0x1bdc, 0xbbd2, 0xce90, 0x1, 0x1);
        gbc.writeMem(0xc3c6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9776);
        EXPECT(gbc.pc(), 0xc3c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3c6), 0xcb);
        EXPECT(gbc.readMem(0xc3c7), 0x20);
        // CB 20 0147
        gbc.setState(0x5638, 0xc5a9, 0xd50, 0x57ee, 0xaad1, 0x3624, 0x1, 0x1);
        gbc.writeMem(0x5638, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc5a9);
        EXPECT(gbc.pc(), 0x563a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0148
        gbc.setState(0x93dc, 0x7100, 0x83b0, 0xe217, 0xcd3e, 0xb087, 0x0, 0x0);
        gbc.writeMem(0x93dc, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7100);
        EXPECT(gbc.pc(), 0x93de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93dc), 0xcb);
        EXPECT(gbc.readMem(0x93dd), 0x20);
        // CB 20 0149
        gbc.setState(0x237a, 0x63c0, 0xda0, 0xedf9, 0x4780, 0x7e0c, 0x0, 0x0);
        gbc.writeMem(0x237a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x63c0);
        EXPECT(gbc.pc(), 0x237c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 014A
        gbc.setState(0x5fbb, 0xf05d, 0x8270, 0x8b36, 0x66c, 0x930b, 0x1, 0x1);
        gbc.writeMem(0x5fbb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf05d);
        EXPECT(gbc.pc(), 0x5fbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 014B
        gbc.setState(0xbc3a, 0xd5e, 0x68c0, 0x7f60, 0x7daa, 0xa9fd, 0x0, 0x0);
        gbc.writeMem(0xbc3a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd5e);
        EXPECT(gbc.pc(), 0xbc3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc3a), 0xcb);
        EXPECT(gbc.readMem(0xbc3b), 0x20);
        // CB 20 014C
        gbc.setState(0x6f74, 0xa785, 0x4210, 0x2e98, 0xbf42, 0x3518, 0x1, 0x1);
        gbc.writeMem(0x6f74, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa785);
        EXPECT(gbc.pc(), 0x6f76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 014D
        gbc.setState(0xef8b, 0xbffb, 0xe4a0, 0xa8fe, 0x6f87, 0x6b13, 0x1, 0x1);
        gbc.writeMem(0xef8b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xbffb);
        EXPECT(gbc.pc(), 0xef8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef8b), 0xcb);
        EXPECT(gbc.readMem(0xef8c), 0x20);
        // CB 20 014E
        gbc.setState(0x3c6e, 0xd592, 0x6780, 0x307, 0x44b8, 0x677c, 0x1, 0x1);
        gbc.writeMem(0x3c6e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd592);
        EXPECT(gbc.pc(), 0x3c70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 014F
        gbc.setState(0x3617, 0x7b2b, 0xf9e0, 0xc431, 0x8cc, 0xc3aa, 0x0, 0x1);
        gbc.writeMem(0x3617, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7b2b);
        EXPECT(gbc.pc(), 0x3619);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0150
        gbc.setState(0x31e3, 0xac2b, 0x86a0, 0x6e43, 0x62c4, 0xe3a3, 0x0, 0x1);
        gbc.writeMem(0x31e3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xac2b);
        EXPECT(gbc.pc(), 0x31e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0151
        gbc.setState(0x6392, 0x28b6, 0x9b80, 0xf4af, 0xd0e2, 0x1205, 0x0, 0x0);
        gbc.writeMem(0x6392, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x28b6);
        EXPECT(gbc.pc(), 0x6394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0152
        gbc.setState(0xcc65, 0x7625, 0x65a0, 0x33de, 0xdfb3, 0x8253, 0x0, 0x0);
        gbc.writeMem(0xcc65, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x7625);
        EXPECT(gbc.pc(), 0xcc67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc65), 0xcb);
        EXPECT(gbc.readMem(0xcc66), 0x20);
        // CB 20 0153
        gbc.setState(0x408a, 0x453e, 0x6dc0, 0x43b0, 0xd110, 0x5aca, 0x1, 0x0);
        gbc.writeMem(0x408a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x453e);
        EXPECT(gbc.pc(), 0x408c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0154
        gbc.setState(0x7ba1, 0x9532, 0x35f0, 0x5bbf, 0x967, 0x8240, 0x1, 0x0);
        gbc.writeMem(0x7ba1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9532);
        EXPECT(gbc.pc(), 0x7ba3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0155
        gbc.setState(0x1758, 0xc307, 0xf70, 0x432e, 0xa894, 0x4f50, 0x1, 0x0);
        gbc.writeMem(0x1758, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc307);
        EXPECT(gbc.pc(), 0x175a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0156
        gbc.setState(0x2b8, 0xe21c, 0x7130, 0xdab, 0x8f9, 0x3dd6, 0x0, 0x0);
        gbc.writeMem(0x2b8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe21c);
        EXPECT(gbc.pc(), 0x2ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0157
        gbc.setState(0xa9c, 0xf107, 0x8250, 0x4195, 0x9560, 0xd15b, 0x1, 0x1);
        gbc.writeMem(0xa9c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf107);
        EXPECT(gbc.pc(), 0xa9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0158
        gbc.setState(0xe6b5, 0x2ef5, 0x1b90, 0xd8d, 0x90e4, 0xeac1, 0x1, 0x1);
        gbc.writeMem(0xe6b5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2ef5);
        EXPECT(gbc.pc(), 0xe6b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6b5), 0xcb);
        EXPECT(gbc.readMem(0xe6b6), 0x20);
        // CB 20 0159
        gbc.setState(0x7c67, 0x53b8, 0x2330, 0x7127, 0xda2c, 0x8d55, 0x0, 0x0);
        gbc.writeMem(0x7c67, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x53b8);
        EXPECT(gbc.pc(), 0x7c69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 015A
        gbc.setState(0xc1ae, 0xaa44, 0xebd0, 0x78e0, 0x6576, 0x9acb, 0x0, 0x1);
        gbc.writeMem(0xc1ae, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xaa44);
        EXPECT(gbc.pc(), 0xc1b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ae), 0xcb);
        EXPECT(gbc.readMem(0xc1af), 0x20);
        // CB 20 015B
        gbc.setState(0xed20, 0x6a65, 0x46a0, 0x36a6, 0x424a, 0x38e, 0x1, 0x1);
        gbc.writeMem(0xed20, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x6a65);
        EXPECT(gbc.pc(), 0xed22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed20), 0xcb);
        EXPECT(gbc.readMem(0xed21), 0x20);
        // CB 20 015C
        gbc.setState(0x5f80, 0xbf6, 0xe700, 0xcac9, 0x8cd0, 0x7fcf, 0x0, 0x1);
        gbc.writeMem(0x5f80, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xbf6);
        EXPECT(gbc.pc(), 0x5f82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 015D
        gbc.setState(0x847c, 0x879a, 0xd190, 0x5e73, 0x9463, 0xd3a0, 0x0, 0x1);
        gbc.writeMem(0x847c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x879a);
        EXPECT(gbc.pc(), 0x847e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x847c), 0xcb);
        EXPECT(gbc.readMem(0x847d), 0x20);
        // CB 20 015E
        gbc.setState(0xcf35, 0xdf33, 0x1e70, 0xea4f, 0x9958, 0x76b8, 0x1, 0x0);
        gbc.writeMem(0xcf35, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xdf33);
        EXPECT(gbc.pc(), 0xcf37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf35), 0xcb);
        EXPECT(gbc.readMem(0xcf36), 0x20);
        // CB 20 015F
        gbc.setState(0x5cfa, 0x7f21, 0x90a0, 0x5b72, 0x6db9, 0x45aa, 0x0, 0x1);
        gbc.writeMem(0x5cfa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7f21);
        EXPECT(gbc.pc(), 0x5cfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0160
        gbc.setState(0x23b8, 0x7e7e, 0xba20, 0xa2d, 0x2e8b, 0x3a88, 0x0, 0x1);
        gbc.writeMem(0x23b8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x7e7e);
        EXPECT(gbc.pc(), 0x23ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0161
        gbc.setState(0xa465, 0xa28a, 0x3350, 0x6c83, 0xc1fc, 0xb4b, 0x0, 0x0);
        gbc.writeMem(0xa465, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xa28a);
        EXPECT(gbc.pc(), 0xa467);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa465), 0xcb);
        EXPECT(gbc.readMem(0xa466), 0x20);
        // CB 20 0162
        gbc.setState(0xb96f, 0x1589, 0xbf30, 0x89c6, 0xc6ec, 0xb6f1, 0x1, 0x0);
        gbc.writeMem(0xb96f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1589);
        EXPECT(gbc.pc(), 0xb971);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb96f), 0xcb);
        EXPECT(gbc.readMem(0xb970), 0x20);
        // CB 20 0163
        gbc.setState(0x754a, 0x9461, 0xbff0, 0x2e9, 0xa2d, 0xaadf, 0x0, 0x1);
        gbc.writeMem(0x754a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9461);
        EXPECT(gbc.pc(), 0x754c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0164
        gbc.setState(0xe2a8, 0x1002, 0x84a0, 0x4cc1, 0xf0c0, 0x82c8, 0x1, 0x1);
        gbc.writeMem(0xe2a8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1002);
        EXPECT(gbc.pc(), 0xe2aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2a8), 0xcb);
        EXPECT(gbc.readMem(0xe2a9), 0x20);
        // CB 20 0165
        gbc.setState(0xc5d7, 0x9d2, 0x9cc0, 0xdb46, 0xe35e, 0x3a1, 0x1, 0x1);
        gbc.writeMem(0xc5d7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9d2);
        EXPECT(gbc.pc(), 0xc5d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5d7), 0xcb);
        EXPECT(gbc.readMem(0xc5d8), 0x20);
        // CB 20 0166
        gbc.setState(0x2c3d, 0x6d72, 0xc480, 0x4e79, 0x474e, 0x4179, 0x1, 0x0);
        gbc.writeMem(0x2c3d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6d72);
        EXPECT(gbc.pc(), 0x2c3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0167
        gbc.setState(0x408f, 0x4127, 0xecc0, 0xc156, 0x7f65, 0xd0cb, 0x0, 0x1);
        gbc.writeMem(0x408f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x4127);
        EXPECT(gbc.pc(), 0x4091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0168
        gbc.setState(0x4ba0, 0x88b4, 0x2e80, 0xfee1, 0xdb78, 0x8a61, 0x0, 0x0);
        gbc.writeMem(0x4ba0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x88b4);
        EXPECT(gbc.pc(), 0x4ba2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0169
        gbc.setState(0x8dda, 0xc405, 0x7250, 0xfec9, 0x9144, 0x5ab2, 0x0, 0x0);
        gbc.writeMem(0x8dda, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc405);
        EXPECT(gbc.pc(), 0x8ddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dda), 0xcb);
        EXPECT(gbc.readMem(0x8ddb), 0x20);
        // CB 20 016A
        gbc.setState(0xe365, 0xcf34, 0xb020, 0xd767, 0x8dfb, 0x9af8, 0x0, 0x1);
        gbc.writeMem(0xe365, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xcf34);
        EXPECT(gbc.pc(), 0xe367);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe365), 0xcb);
        EXPECT(gbc.readMem(0xe366), 0x20);
        // CB 20 016B
        gbc.setState(0xba7d, 0xea31, 0xb8a0, 0x6af8, 0xeaa3, 0xa689, 0x0, 0x1);
        gbc.writeMem(0xba7d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xea31);
        EXPECT(gbc.pc(), 0xba7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba7d), 0xcb);
        EXPECT(gbc.readMem(0xba7e), 0x20);
        // CB 20 016C
        gbc.setState(0x639d, 0x9d44, 0xd0e0, 0x1733, 0x56bd, 0xea61, 0x0, 0x1);
        gbc.writeMem(0x639d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9d44);
        EXPECT(gbc.pc(), 0x639f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 016D
        gbc.setState(0x2356, 0xb573, 0xc290, 0xbe6, 0xcdb4, 0xfc2a, 0x1, 0x0);
        gbc.writeMem(0x2356, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb573);
        EXPECT(gbc.pc(), 0x2358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 016E
        gbc.setState(0xb906, 0xb850, 0xdc0, 0xe5a8, 0x1ee7, 0x795d, 0x0, 0x1);
        gbc.writeMem(0xb906, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb850);
        EXPECT(gbc.pc(), 0xb908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb906), 0xcb);
        EXPECT(gbc.readMem(0xb907), 0x20);
        // CB 20 016F
        gbc.setState(0x989b, 0x5a50, 0xa30, 0xf222, 0xa5e9, 0x27e8, 0x1, 0x0);
        gbc.writeMem(0x989b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x5a50);
        EXPECT(gbc.pc(), 0x989d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x989b), 0xcb);
        EXPECT(gbc.readMem(0x989c), 0x20);
        // CB 20 0170
        gbc.setState(0xb4c4, 0x47d4, 0xee30, 0xa10b, 0x40bb, 0xa3d3, 0x1, 0x0);
        gbc.writeMem(0xb4c4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x47d4);
        EXPECT(gbc.pc(), 0xb4c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4c4), 0xcb);
        EXPECT(gbc.readMem(0xb4c5), 0x20);
        // CB 20 0171
        gbc.setState(0x1acb, 0x76ad, 0x6940, 0x54eb, 0xcaed, 0x311a, 0x1, 0x1);
        gbc.writeMem(0x1acb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x76ad);
        EXPECT(gbc.pc(), 0x1acd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0172
        gbc.setState(0xe48d, 0xdf0f, 0x4470, 0xd466, 0xa3d0, 0xf5bc, 0x1, 0x1);
        gbc.writeMem(0xe48d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xdf0f);
        EXPECT(gbc.pc(), 0xe48f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe48d), 0xcb);
        EXPECT(gbc.readMem(0xe48e), 0x20);
        // CB 20 0173
        gbc.setState(0x968f, 0xd00f, 0x41e0, 0x439b, 0xae15, 0x90ae, 0x0, 0x1);
        gbc.writeMem(0x968f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd00f);
        EXPECT(gbc.pc(), 0x9691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x968f), 0xcb);
        EXPECT(gbc.readMem(0x9690), 0x20);
        // CB 20 0174
        gbc.setState(0xcd1c, 0x6626, 0x8810, 0x5662, 0xc12f, 0xd890, 0x0, 0x0);
        gbc.writeMem(0xcd1c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6626);
        EXPECT(gbc.pc(), 0xcd1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd1c), 0xcb);
        EXPECT(gbc.readMem(0xcd1d), 0x20);
        // CB 20 0175
        gbc.setState(0xa945, 0x61bb, 0x8da0, 0x24d4, 0x51d8, 0xfa46, 0x1, 0x0);
        gbc.writeMem(0xa945, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x61bb);
        EXPECT(gbc.pc(), 0xa947);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa945), 0xcb);
        EXPECT(gbc.readMem(0xa946), 0x20);
        // CB 20 0176
        gbc.setState(0x1a7a, 0x742c, 0xa700, 0xe122, 0xcf46, 0x4d84, 0x0, 0x1);
        gbc.writeMem(0x1a7a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x742c);
        EXPECT(gbc.pc(), 0x1a7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0177
        gbc.setState(0x1bc3, 0x3d7b, 0x6c0, 0xf59d, 0x9f2, 0x618d, 0x0, 0x0);
        gbc.writeMem(0x1bc3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x3d7b);
        EXPECT(gbc.pc(), 0x1bc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0178
        gbc.setState(0x4fb8, 0x611f, 0x9440, 0x5038, 0xe005, 0x6ccd, 0x0, 0x0);
        gbc.writeMem(0x4fb8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x611f);
        EXPECT(gbc.pc(), 0x4fba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0179
        gbc.setState(0x7018, 0xbd74, 0x9900, 0x7331, 0xe52e, 0xc680, 0x1, 0x0);
        gbc.writeMem(0x7018, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xbd74);
        EXPECT(gbc.pc(), 0x701a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 017A
        gbc.setState(0xce87, 0xf2cb, 0xc5b0, 0xa49c, 0x93c8, 0x192c, 0x0, 0x1);
        gbc.writeMem(0xce87, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf2cb);
        EXPECT(gbc.pc(), 0xce89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce87), 0xcb);
        EXPECT(gbc.readMem(0xce88), 0x20);
        // CB 20 017B
        gbc.setState(0x1ce2, 0xbff2, 0x9d90, 0x9f43, 0xdf4e, 0xde0, 0x0, 0x0);
        gbc.writeMem(0x1ce2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xbff2);
        EXPECT(gbc.pc(), 0x1ce4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 017C
        gbc.setState(0x7aa7, 0x3752, 0x5d20, 0xfde8, 0x47a7, 0x75c0, 0x0, 0x1);
        gbc.writeMem(0x7aa7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3752);
        EXPECT(gbc.pc(), 0x7aa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 017E
        gbc.setState(0xc7a1, 0xa253, 0xd6a0, 0xdd6d, 0x0, 0x23e4, 0x1, 0x0);
        gbc.writeMem(0xc7a1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa253);
        EXPECT(gbc.pc(), 0xc7a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7a1), 0xcb);
        EXPECT(gbc.readMem(0xc7a2), 0x20);
        // CB 20 017F
        gbc.setState(0x78d2, 0x287e, 0x8170, 0xdb36, 0xfdc1, 0x19a, 0x0, 0x0);
        gbc.writeMem(0x78d2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x287e);
        EXPECT(gbc.pc(), 0x78d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0180
        gbc.setState(0x8385, 0xbc59, 0x1ba0, 0xd6b4, 0x3119, 0xd7af, 0x0, 0x1);
        gbc.writeMem(0x8385, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xbc59);
        EXPECT(gbc.pc(), 0x8387);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8385), 0xcb);
        EXPECT(gbc.readMem(0x8386), 0x20);
        // CB 20 0181
        gbc.setState(0x2393, 0x626e, 0xf2c0, 0x7925, 0xe820, 0xcffb, 0x1, 0x0);
        gbc.writeMem(0x2393, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x626e);
        EXPECT(gbc.pc(), 0x2395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0182
        gbc.setState(0x3214, 0x9f58, 0xf5d0, 0xb6af, 0xddbe, 0xc444, 0x1, 0x1);
        gbc.writeMem(0x3214, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9f58);
        EXPECT(gbc.pc(), 0x3216);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0183
        gbc.setState(0xd4f3, 0xacc3, 0x4770, 0x397, 0x1e60, 0xe61, 0x0, 0x0);
        gbc.writeMem(0xd4f3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xacc3);
        EXPECT(gbc.pc(), 0xd4f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4f3), 0xcb);
        EXPECT(gbc.readMem(0xd4f4), 0x20);
        // CB 20 0184
        gbc.setState(0xf45, 0x5476, 0x9f40, 0xeff5, 0x291f, 0xe56d, 0x1, 0x0);
        gbc.writeMem(0xf45, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5476);
        EXPECT(gbc.pc(), 0xf47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0185
        gbc.setState(0xe3ad, 0x8ae9, 0x62e0, 0xab69, 0x2a92, 0x72b9, 0x0, 0x1);
        gbc.writeMem(0xe3ad, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8ae9);
        EXPECT(gbc.pc(), 0xe3af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ad), 0xcb);
        EXPECT(gbc.readMem(0xe3ae), 0x20);
        // CB 20 0186
        gbc.setState(0xa563, 0xbdda, 0x6480, 0xadfe, 0x9bf1, 0xfc9a, 0x0, 0x0);
        gbc.writeMem(0xa563, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xbdda);
        EXPECT(gbc.pc(), 0xa565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa563), 0xcb);
        EXPECT(gbc.readMem(0xa564), 0x20);
        // CB 20 0187
        gbc.setState(0x333c, 0xb6cf, 0xb760, 0x4565, 0x97c6, 0x989e, 0x0, 0x0);
        gbc.writeMem(0x333c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb6cf);
        EXPECT(gbc.pc(), 0x333e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0188
        gbc.setState(0x6538, 0x2dfa, 0x22d0, 0xe027, 0xc16, 0xc2db, 0x0, 0x0);
        gbc.writeMem(0x6538, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2dfa);
        EXPECT(gbc.pc(), 0x653a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0189
        gbc.setState(0xd4c7, 0xa817, 0x3650, 0xb108, 0x4cb0, 0x1dbe, 0x1, 0x0);
        gbc.writeMem(0xd4c7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xa817);
        EXPECT(gbc.pc(), 0xd4c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4c7), 0xcb);
        EXPECT(gbc.readMem(0xd4c8), 0x20);
        // CB 20 018A
        gbc.setState(0x3fd7, 0x66f2, 0xc620, 0xbe2e, 0x8dcc, 0xf1d7, 0x0, 0x0);
        gbc.writeMem(0x3fd7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x66f2);
        EXPECT(gbc.pc(), 0x3fd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 018B
        gbc.setState(0x1c, 0xe40e, 0xea0, 0x8dd6, 0x16d1, 0x2b36, 0x0, 0x1);
        gbc.writeMem(0x1c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe40e);
        EXPECT(gbc.pc(), 0x1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 018C
        gbc.setState(0x23ba, 0x211a, 0xc570, 0x9c2c, 0xc396, 0x9a0b, 0x0, 0x0);
        gbc.writeMem(0x23ba, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x211a);
        EXPECT(gbc.pc(), 0x23bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 018D
        gbc.setState(0x217, 0x86a2, 0x7360, 0x237, 0x6db5, 0xafc, 0x0, 0x0);
        gbc.writeMem(0x217, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x86a2);
        EXPECT(gbc.pc(), 0x219);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 018E
        gbc.setState(0x2af1, 0xf35a, 0x9b50, 0xc99d, 0xb511, 0xd14e, 0x0, 0x0);
        gbc.writeMem(0x2af1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf35a);
        EXPECT(gbc.pc(), 0x2af3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 018F
        gbc.setState(0xac11, 0xd569, 0x1e0, 0x1bcd, 0xa787, 0x2c2e, 0x1, 0x1);
        gbc.writeMem(0xac11, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd569);
        EXPECT(gbc.pc(), 0xac13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac11), 0xcb);
        EXPECT(gbc.readMem(0xac12), 0x20);
        // CB 20 0190
        gbc.setState(0x3b, 0x5d27, 0xea90, 0xf924, 0xa65b, 0x687b, 0x1, 0x0);
        gbc.writeMem(0x3b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x5d27);
        EXPECT(gbc.pc(), 0x3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0191
        gbc.setState(0xdb4f, 0x6a53, 0xec80, 0xa80, 0xbe9c, 0xde7f, 0x0, 0x0);
        gbc.writeMem(0xdb4f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6a53);
        EXPECT(gbc.pc(), 0xdb51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb4f), 0xcb);
        EXPECT(gbc.readMem(0xdb50), 0x20);
        // CB 20 0192
        gbc.setState(0xbf1f, 0x5139, 0x7e30, 0x6e03, 0xfe00, 0x745c, 0x1, 0x0);
        gbc.writeMem(0xbf1f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5139);
        EXPECT(gbc.pc(), 0xbf21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf1f), 0xcb);
        EXPECT(gbc.readMem(0xbf20), 0x20);
        // CB 20 0193
        gbc.setState(0xd533, 0x6a56, 0xf1c0, 0x21b7, 0xbd, 0xdad6, 0x1, 0x0);
        gbc.writeMem(0xd533, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6a56);
        EXPECT(gbc.pc(), 0xd535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd533), 0xcb);
        EXPECT(gbc.readMem(0xd534), 0x20);
        // CB 20 0194
        gbc.setState(0x1b14, 0x802, 0x5b10, 0x95ef, 0xa2e2, 0x4f0e, 0x1, 0x1);
        gbc.writeMem(0x1b14, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x802);
        EXPECT(gbc.pc(), 0x1b16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0195
        gbc.setState(0xdaf5, 0x6bfc, 0x7190, 0x9cc2, 0xa6e0, 0xd4a7, 0x0, 0x1);
        gbc.writeMem(0xdaf5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x6bfc);
        EXPECT(gbc.pc(), 0xdaf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaf5), 0xcb);
        EXPECT(gbc.readMem(0xdaf6), 0x20);
        // CB 20 0196
        gbc.setState(0xa4a0, 0x660e, 0x7580, 0xc3be, 0xd98, 0xa866, 0x0, 0x0);
        gbc.writeMem(0xa4a0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x660e);
        EXPECT(gbc.pc(), 0xa4a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4a0), 0xcb);
        EXPECT(gbc.readMem(0xa4a1), 0x20);
        // CB 20 0197
        gbc.setState(0x8171, 0x8c9f, 0xc630, 0x10cd, 0xf297, 0xdf90, 0x1, 0x0);
        gbc.writeMem(0x8171, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x8c9f);
        EXPECT(gbc.pc(), 0x8173);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8171), 0xcb);
        EXPECT(gbc.readMem(0x8172), 0x20);
        // CB 20 0198
        gbc.setState(0x9ed8, 0x963e, 0x2020, 0x7032, 0xa892, 0x2160, 0x0, 0x1);
        gbc.writeMem(0x9ed8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x963e);
        EXPECT(gbc.pc(), 0x9eda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ed8), 0xcb);
        EXPECT(gbc.readMem(0x9ed9), 0x20);
        // CB 20 0199
        gbc.setState(0x2ac8, 0x80ae, 0x8fe0, 0xe1a9, 0x1424, 0x667c, 0x0, 0x1);
        gbc.writeMem(0x2ac8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x80ae);
        EXPECT(gbc.pc(), 0x2aca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 019A
        gbc.setState(0x5f77, 0xf120, 0x5e00, 0x7739, 0xa2c1, 0x2abe, 0x0, 0x1);
        gbc.writeMem(0x5f77, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xf120);
        EXPECT(gbc.pc(), 0x5f79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 019B
        gbc.setState(0xb84c, 0x11cd, 0xead0, 0x5016, 0xe169, 0xcbc0, 0x1, 0x0);
        gbc.writeMem(0xb84c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x11cd);
        EXPECT(gbc.pc(), 0xb84e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb84c), 0xcb);
        EXPECT(gbc.readMem(0xb84d), 0x20);
        // CB 20 019C
        gbc.setState(0x8ad2, 0x25e4, 0xb460, 0xffc7, 0x8b41, 0x209d, 0x1, 0x1);
        gbc.writeMem(0x8ad2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x25e4);
        EXPECT(gbc.pc(), 0x8ad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ad2), 0xcb);
        EXPECT(gbc.readMem(0x8ad3), 0x20);
        // CB 20 019D
        gbc.setState(0x88e2, 0x888c, 0x5c40, 0xfbcd, 0xe453, 0xeed3, 0x1, 0x0);
        gbc.writeMem(0x88e2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x888c);
        EXPECT(gbc.pc(), 0x88e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88e2), 0xcb);
        EXPECT(gbc.readMem(0x88e3), 0x20);
        // CB 20 019E
        gbc.setState(0x7659, 0x5a5c, 0xe390, 0xd9cc, 0x72c3, 0x9833, 0x0, 0x0);
        gbc.writeMem(0x7659, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x5a5c);
        EXPECT(gbc.pc(), 0x765b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 019F
        gbc.setState(0xcd59, 0x5cdd, 0x8690, 0xb14b, 0xeb3b, 0x26df, 0x0, 0x0);
        gbc.writeMem(0xcd59, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5cdd);
        EXPECT(gbc.pc(), 0xcd5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd59), 0xcb);
        EXPECT(gbc.readMem(0xcd5a), 0x20);
        // CB 20 01A0
        gbc.setState(0x960a, 0xf310, 0x3f90, 0xa350, 0x3e7c, 0xf518, 0x1, 0x0);
        gbc.writeMem(0x960a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf310);
        EXPECT(gbc.pc(), 0x960c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x960a), 0xcb);
        EXPECT(gbc.readMem(0x960b), 0x20);
        // CB 20 01A1
        gbc.setState(0x1d16, 0x4bff, 0x5000, 0x18f0, 0x911b, 0xbe88, 0x1, 0x0);
        gbc.writeMem(0x1d16, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4bff);
        EXPECT(gbc.pc(), 0x1d18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01A2
        gbc.setState(0xc387, 0x6028, 0x2b80, 0x960e, 0x6992, 0xac5d, 0x1, 0x1);
        gbc.writeMem(0xc387, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6028);
        EXPECT(gbc.pc(), 0xc389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc387), 0xcb);
        EXPECT(gbc.readMem(0xc388), 0x20);
        // CB 20 01A4
        gbc.setState(0x129c, 0x582, 0xfff0, 0xd627, 0x85a3, 0x3ff7, 0x0, 0x0);
        gbc.writeMem(0x129c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x582);
        EXPECT(gbc.pc(), 0x129e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01A5
        gbc.setState(0xca6, 0x93d5, 0x86e0, 0x69af, 0x6195, 0x99b2, 0x0, 0x0);
        gbc.writeMem(0xca6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x93d5);
        EXPECT(gbc.pc(), 0xca8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01A6
        gbc.setState(0x2386, 0x1d01, 0x4dd0, 0xca0a, 0xec45, 0x41ea, 0x1, 0x1);
        gbc.writeMem(0x2386, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1d01);
        EXPECT(gbc.pc(), 0x2388);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01A7
        gbc.setState(0x2f80, 0x5904, 0x41b0, 0x5303, 0xf12d, 0x1970, 0x1, 0x0);
        gbc.writeMem(0x2f80, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5904);
        EXPECT(gbc.pc(), 0x2f82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01A8
        gbc.setState(0xd54b, 0xbc6d, 0xb500, 0xc3c0, 0x47ee, 0xc7eb, 0x0, 0x0);
        gbc.writeMem(0xd54b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xbc6d);
        EXPECT(gbc.pc(), 0xd54d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd54b), 0xcb);
        EXPECT(gbc.readMem(0xd54c), 0x20);
        // CB 20 01A9
        gbc.setState(0x993, 0x572c, 0xaa80, 0x8ae1, 0x78d8, 0xcd95, 0x1, 0x0);
        gbc.writeMem(0x993, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x572c);
        EXPECT(gbc.pc(), 0x995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01AA
        gbc.setState(0x5c81, 0x1c5e, 0x1490, 0x2e14, 0xa5b1, 0xbd12, 0x0, 0x1);
        gbc.writeMem(0x5c81, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1c5e);
        EXPECT(gbc.pc(), 0x5c83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01AB
        gbc.setState(0xe3f9, 0xcc66, 0xf190, 0x53c7, 0x489a, 0xdb2e, 0x1, 0x1);
        gbc.writeMem(0xe3f9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xcc66);
        EXPECT(gbc.pc(), 0xe3fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3f9), 0xcb);
        EXPECT(gbc.readMem(0xe3fa), 0x20);
        // CB 20 01AC
        gbc.setState(0x353f, 0x41a0, 0xa240, 0x31bf, 0x93f0, 0x4948, 0x0, 0x0);
        gbc.writeMem(0x353f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x41a0);
        EXPECT(gbc.pc(), 0x3541);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01AD
        gbc.setState(0x5604, 0x8dab, 0xaa10, 0x2a41, 0x4559, 0x60ae, 0x1, 0x0);
        gbc.writeMem(0x5604, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8dab);
        EXPECT(gbc.pc(), 0x5606);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01AE
        gbc.setState(0xa487, 0x92ef, 0xd9c0, 0xc134, 0xf1fa, 0x4c50, 0x0, 0x0);
        gbc.writeMem(0xa487, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x92ef);
        EXPECT(gbc.pc(), 0xa489);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa487), 0xcb);
        EXPECT(gbc.readMem(0xa488), 0x20);
        // CB 20 01AF
        gbc.setState(0xee6e, 0x19ae, 0xb640, 0x45ec, 0x8c71, 0x51f3, 0x0, 0x1);
        gbc.writeMem(0xee6e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x19ae);
        EXPECT(gbc.pc(), 0xee70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee6e), 0xcb);
        EXPECT(gbc.readMem(0xee6f), 0x20);
        // CB 20 01B0
        gbc.setState(0x6266, 0x35bc, 0xdb80, 0xc99a, 0xbb1f, 0x98e1, 0x0, 0x0);
        gbc.writeMem(0x6266, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x35bc);
        EXPECT(gbc.pc(), 0x6268);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01B1
        gbc.setState(0x70f6, 0x8336, 0xbea0, 0x57ae, 0x37b8, 0x5b93, 0x0, 0x1);
        gbc.writeMem(0x70f6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8336);
        EXPECT(gbc.pc(), 0x70f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01B2
        gbc.setState(0xb9bf, 0x57e0, 0x1660, 0xc7d0, 0x253e, 0xabf7, 0x1, 0x0);
        gbc.writeMem(0xb9bf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x57e0);
        EXPECT(gbc.pc(), 0xb9c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9bf), 0xcb);
        EXPECT(gbc.readMem(0xb9c0), 0x20);
        // CB 20 01B3
        gbc.setState(0x1159, 0x63d5, 0xe710, 0x461d, 0x2f08, 0x9650, 0x0, 0x1);
        gbc.writeMem(0x1159, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x63d5);
        EXPECT(gbc.pc(), 0x115b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01B4
        gbc.setState(0xd7f6, 0xacfa, 0x5bf0, 0xfc15, 0xcd1a, 0x23ba, 0x1, 0x1);
        gbc.writeMem(0xd7f6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xacfa);
        EXPECT(gbc.pc(), 0xd7f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7f6), 0xcb);
        EXPECT(gbc.readMem(0xd7f7), 0x20);
        // CB 20 01B5
        gbc.setState(0xb4ff, 0xca8c, 0xf80, 0x206c, 0x192d, 0x222e, 0x0, 0x1);
        gbc.writeMem(0xb4ff, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xca8c);
        EXPECT(gbc.pc(), 0xb501);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ff), 0xcb);
        EXPECT(gbc.readMem(0xb500), 0x20);
        // CB 20 01B6
        gbc.setState(0xcb4f, 0xa55, 0x9a10, 0x2b75, 0xf75a, 0x187a, 0x0, 0x1);
        gbc.writeMem(0xcb4f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa55);
        EXPECT(gbc.pc(), 0xcb51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb4f), 0xcb);
        EXPECT(gbc.readMem(0xcb50), 0x20);
        // CB 20 01B7
        gbc.setState(0x8252, 0xb332, 0x2120, 0x2816, 0xd742, 0xa30a, 0x1, 0x0);
        gbc.writeMem(0x8252, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb332);
        EXPECT(gbc.pc(), 0x8254);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8252), 0xcb);
        EXPECT(gbc.readMem(0x8253), 0x20);
        // CB 20 01B8
        gbc.setState(0x2c98, 0xcfa9, 0x8e30, 0xde90, 0xd7d1, 0xfaf7, 0x1, 0x0);
        gbc.writeMem(0x2c98, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xcfa9);
        EXPECT(gbc.pc(), 0x2c9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01B9
        gbc.setState(0x6c5d, 0xe7d4, 0x9070, 0xdd3f, 0x4cb4, 0x461, 0x1, 0x0);
        gbc.writeMem(0x6c5d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe7d4);
        EXPECT(gbc.pc(), 0x6c5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01BA
        gbc.setState(0xb6a5, 0xce6, 0x5c60, 0xb302, 0x5265, 0xe63d, 0x1, 0x0);
        gbc.writeMem(0xb6a5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xce6);
        EXPECT(gbc.pc(), 0xb6a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6a5), 0xcb);
        EXPECT(gbc.readMem(0xb6a6), 0x20);
        // CB 20 01BC
        gbc.setState(0x8e6, 0x5ae3, 0x1ed0, 0xaff4, 0xc4ae, 0x9ca3, 0x1, 0x1);
        gbc.writeMem(0x8e6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x5ae3);
        EXPECT(gbc.pc(), 0x8e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01BD
        gbc.setState(0x8242, 0xe7d9, 0x6450, 0x5c90, 0xc17e, 0xe443, 0x1, 0x1);
        gbc.writeMem(0x8242, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe7d9);
        EXPECT(gbc.pc(), 0x8244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8242), 0xcb);
        EXPECT(gbc.readMem(0x8243), 0x20);
        // CB 20 01BE
        gbc.setState(0x1376, 0x6a14, 0xfa00, 0x5a70, 0x7e82, 0xd6ed, 0x0, 0x0);
        gbc.writeMem(0x1376, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6a14);
        EXPECT(gbc.pc(), 0x1378);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01BF
        gbc.setState(0x32bf, 0x6de, 0x5070, 0x9051, 0x9fc4, 0x9921, 0x0, 0x0);
        gbc.writeMem(0x32bf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6de);
        EXPECT(gbc.pc(), 0x32c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01C0
        gbc.setState(0x6d25, 0xbe6c, 0x68f0, 0xce0a, 0xa642, 0x37e3, 0x1, 0x1);
        gbc.writeMem(0x6d25, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xbe6c);
        EXPECT(gbc.pc(), 0x6d27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01C1
        gbc.setState(0xdba1, 0x3d26, 0xcfd0, 0xa459, 0xe945, 0xdafa, 0x1, 0x1);
        gbc.writeMem(0xdba1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x3d26);
        EXPECT(gbc.pc(), 0xdba3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdba1), 0xcb);
        EXPECT(gbc.readMem(0xdba2), 0x20);
        // CB 20 01C2
        gbc.setState(0x2995, 0x899f, 0x8cf0, 0x74b0, 0x8fa7, 0x722, 0x1, 0x1);
        gbc.writeMem(0x2995, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x899f);
        EXPECT(gbc.pc(), 0x2997);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01C3
        gbc.setState(0x89a4, 0x937c, 0x76e0, 0x4de5, 0xcb2d, 0xa437, 0x0, 0x0);
        gbc.writeMem(0x89a4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x937c);
        EXPECT(gbc.pc(), 0x89a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89a4), 0xcb);
        EXPECT(gbc.readMem(0x89a5), 0x20);
        // CB 20 01C4
        gbc.setState(0xef28, 0xc939, 0x3440, 0xa09a, 0xdaee, 0x85b4, 0x0, 0x0);
        gbc.writeMem(0xef28, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc939);
        EXPECT(gbc.pc(), 0xef2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef28), 0xcb);
        EXPECT(gbc.readMem(0xef29), 0x20);
        // CB 20 01C5
        gbc.setState(0x6806, 0x1169, 0x1cd0, 0x36fc, 0x8f79, 0xcd6f, 0x1, 0x0);
        gbc.writeMem(0x6806, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1169);
        EXPECT(gbc.pc(), 0x6808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01C6
        gbc.setState(0x95be, 0x991b, 0x590, 0xd9b1, 0x4712, 0x36cf, 0x1, 0x0);
        gbc.writeMem(0x95be, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x991b);
        EXPECT(gbc.pc(), 0x95c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95be), 0xcb);
        EXPECT(gbc.readMem(0x95bf), 0x20);
        // CB 20 01C7
        gbc.setState(0x47db, 0x6efe, 0x4060, 0x5e0a, 0xb2d7, 0xa5fc, 0x0, 0x0);
        gbc.writeMem(0x47db, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6efe);
        EXPECT(gbc.pc(), 0x47dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01C8
        gbc.setState(0x7488, 0x5df4, 0x86c0, 0x35de, 0xf763, 0x6f04, 0x1, 0x0);
        gbc.writeMem(0x7488, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5df4);
        EXPECT(gbc.pc(), 0x748a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01C9
        gbc.setState(0x3b1c, 0x6ed0, 0xeb10, 0xdf00, 0x7ba9, 0xdcd4, 0x1, 0x1);
        gbc.writeMem(0x3b1c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6ed0);
        EXPECT(gbc.pc(), 0x3b1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01CA
        gbc.setState(0x3d70, 0xaf9e, 0x1bc0, 0x7ad0, 0xe2d8, 0xe28, 0x1, 0x1);
        gbc.writeMem(0x3d70, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xaf9e);
        EXPECT(gbc.pc(), 0x3d72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01CB
        gbc.setState(0x5b5f, 0x9b, 0x4470, 0xfa30, 0x4d0c, 0xc3ad, 0x1, 0x0);
        gbc.writeMem(0x5b5f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9b);
        EXPECT(gbc.pc(), 0x5b61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01CC
        gbc.setState(0x6ff0, 0x7cfb, 0xb360, 0xb597, 0xccff, 0x191e, 0x0, 0x1);
        gbc.writeMem(0x6ff0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x7cfb);
        EXPECT(gbc.pc(), 0x6ff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01CD
        gbc.setState(0x4db9, 0x50cd, 0xf820, 0x274, 0xda9a, 0xaddd, 0x0, 0x0);
        gbc.writeMem(0x4db9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x50cd);
        EXPECT(gbc.pc(), 0x4dbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01CF
        gbc.setState(0x43ce, 0x301f, 0xd010, 0xee22, 0x99e6, 0xa53c, 0x0, 0x1);
        gbc.writeMem(0x43ce, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x301f);
        EXPECT(gbc.pc(), 0x43d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01D0
        gbc.setState(0xc09b, 0x124c, 0x6690, 0x6291, 0x78ce, 0xc948, 0x0, 0x1);
        gbc.writeMem(0xc09b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x124c);
        EXPECT(gbc.pc(), 0xc09d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc09b), 0xcb);
        EXPECT(gbc.readMem(0xc09c), 0x20);
        // CB 20 01D1
        gbc.setState(0xe2a0, 0xdd6c, 0x4460, 0x4c81, 0xa24d, 0x390d, 0x0, 0x0);
        gbc.writeMem(0xe2a0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xdd6c);
        EXPECT(gbc.pc(), 0xe2a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2a0), 0xcb);
        EXPECT(gbc.readMem(0xe2a1), 0x20);
        // CB 20 01D2
        gbc.setState(0x5815, 0x3e72, 0x9bb0, 0x8edf, 0x143c, 0x9795, 0x1, 0x0);
        gbc.writeMem(0x5815, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3e72);
        EXPECT(gbc.pc(), 0x5817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01D3
        gbc.setState(0x7b60, 0x4458, 0xdca0, 0x9495, 0xa4bd, 0x2c25, 0x0, 0x0);
        gbc.writeMem(0x7b60, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4458);
        EXPECT(gbc.pc(), 0x7b62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01D4
        gbc.setState(0xe9af, 0xdf9e, 0xdc20, 0xf0d5, 0xfe0e, 0xd0df, 0x1, 0x0);
        gbc.writeMem(0xe9af, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xdf9e);
        EXPECT(gbc.pc(), 0xe9b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9af), 0xcb);
        EXPECT(gbc.readMem(0xe9b0), 0x20);
        // CB 20 01D6
        gbc.setState(0xe2fc, 0xcc, 0xc750, 0x7e54, 0x32c1, 0x3611, 0x1, 0x0);
        gbc.writeMem(0xe2fc, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xcc);
        EXPECT(gbc.pc(), 0xe2fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2fc), 0xcb);
        EXPECT(gbc.readMem(0xe2fd), 0x20);
        // CB 20 01D7
        gbc.setState(0xb7d3, 0x70c8, 0x9e90, 0x60fe, 0xdf16, 0x4122, 0x0, 0x1);
        gbc.writeMem(0xb7d3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x70c8);
        EXPECT(gbc.pc(), 0xb7d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7d3), 0xcb);
        EXPECT(gbc.readMem(0xb7d4), 0x20);
        // CB 20 01D8
        gbc.setState(0xdecd, 0xa3d2, 0xfe20, 0x938b, 0xe91f, 0xd25, 0x0, 0x1);
        gbc.writeMem(0xdecd, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa3d2);
        EXPECT(gbc.pc(), 0xdecf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdecd), 0xcb);
        EXPECT(gbc.readMem(0xdece), 0x20);
        // CB 20 01D9
        gbc.setState(0xa9aa, 0x39f4, 0x54a0, 0xd07e, 0x47ab, 0x816e, 0x0, 0x1);
        gbc.writeMem(0xa9aa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x39f4);
        EXPECT(gbc.pc(), 0xa9ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9aa), 0xcb);
        EXPECT(gbc.readMem(0xa9ab), 0x20);
        // CB 20 01DA
        gbc.setState(0xe88a, 0x8b60, 0x3c80, 0x9d3a, 0x8bb2, 0x9bf7, 0x1, 0x1);
        gbc.writeMem(0xe88a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8b60);
        EXPECT(gbc.pc(), 0xe88c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe88a), 0xcb);
        EXPECT(gbc.readMem(0xe88b), 0x20);
        // CB 20 01DB
        gbc.setState(0x18e9, 0xe2ce, 0x65c0, 0x45ba, 0xe858, 0xbb34, 0x1, 0x1);
        gbc.writeMem(0x18e9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe2ce);
        EXPECT(gbc.pc(), 0x18eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01DC
        gbc.setState(0xb5df, 0x6b35, 0x6490, 0xf4e1, 0xdae9, 0xb88f, 0x0, 0x1);
        gbc.writeMem(0xb5df, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6b35);
        EXPECT(gbc.pc(), 0xb5e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5df), 0xcb);
        EXPECT(gbc.readMem(0xb5e0), 0x20);
        // CB 20 01DD
        gbc.setState(0x6f21, 0x3fd7, 0xbff0, 0xd01c, 0x682f, 0xe549, 0x1, 0x0);
        gbc.writeMem(0x6f21, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3fd7);
        EXPECT(gbc.pc(), 0x6f23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01DE
        gbc.setState(0xddfb, 0xfb9, 0x8ec0, 0xb999, 0xdfe, 0xe695, 0x0, 0x0);
        gbc.writeMem(0xddfb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xfb9);
        EXPECT(gbc.pc(), 0xddfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddfb), 0xcb);
        EXPECT(gbc.readMem(0xddfc), 0x20);
        // CB 20 01DF
        gbc.setState(0xed29, 0x599b, 0xf7f0, 0x7cc9, 0x2e64, 0x85af, 0x1, 0x1);
        gbc.writeMem(0xed29, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x599b);
        EXPECT(gbc.pc(), 0xed2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed29), 0xcb);
        EXPECT(gbc.readMem(0xed2a), 0x20);
        // CB 20 01E0
        gbc.setState(0x61a5, 0x44aa, 0x1740, 0x8677, 0x22f, 0x265c, 0x1, 0x1);
        gbc.writeMem(0x61a5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x44aa);
        EXPECT(gbc.pc(), 0x61a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01E1
        gbc.setState(0x590a, 0x5108, 0xb390, 0x719a, 0xecf9, 0x4a2, 0x0, 0x0);
        gbc.writeMem(0x590a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5108);
        EXPECT(gbc.pc(), 0x590c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01E2
        gbc.setState(0xcb64, 0x2131, 0xbfe0, 0xa746, 0xd1b0, 0xae13, 0x0, 0x1);
        gbc.writeMem(0xcb64, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2131);
        EXPECT(gbc.pc(), 0xcb66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb64), 0xcb);
        EXPECT(gbc.readMem(0xcb65), 0x20);
        // CB 20 01E3
        gbc.setState(0xab14, 0x5c0, 0x5cb0, 0x4877, 0x3479, 0xb1b3, 0x0, 0x1);
        gbc.writeMem(0xab14, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5c0);
        EXPECT(gbc.pc(), 0xab16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab14), 0xcb);
        EXPECT(gbc.readMem(0xab15), 0x20);
        // CB 20 01E4
        gbc.setState(0x79a6, 0x1965, 0xaf0, 0xa8b5, 0x5988, 0x41d1, 0x0, 0x1);
        gbc.writeMem(0x79a6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1965);
        EXPECT(gbc.pc(), 0x79a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01E6
        gbc.setState(0x8a3a, 0x212b, 0x740, 0xf47d, 0xeace, 0xf8b4, 0x1, 0x0);
        gbc.writeMem(0x8a3a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x212b);
        EXPECT(gbc.pc(), 0x8a3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a3a), 0xcb);
        EXPECT(gbc.readMem(0x8a3b), 0x20);
        // CB 20 01E7
        gbc.setState(0xd3f1, 0xbc51, 0xe3b0, 0xfaa1, 0x9fd, 0x425b, 0x1, 0x1);
        gbc.writeMem(0xd3f1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xbc51);
        EXPECT(gbc.pc(), 0xd3f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3f1), 0xcb);
        EXPECT(gbc.readMem(0xd3f2), 0x20);
        // CB 20 01E8
        gbc.setState(0x4b27, 0x7678, 0xc60, 0x54f3, 0x2f88, 0xe525, 0x1, 0x0);
        gbc.writeMem(0x4b27, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7678);
        EXPECT(gbc.pc(), 0x4b29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01E9
        gbc.setState(0x3e6d, 0xb2d1, 0x3740, 0x4e6, 0x6e07, 0x4cc1, 0x1, 0x0);
        gbc.writeMem(0x3e6d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb2d1);
        EXPECT(gbc.pc(), 0x3e6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01EA
        gbc.setState(0xa7b8, 0x677b, 0xe460, 0xa868, 0x8fbe, 0x6c87, 0x0, 0x0);
        gbc.writeMem(0xa7b8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x677b);
        EXPECT(gbc.pc(), 0xa7ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b8), 0xcb);
        EXPECT(gbc.readMem(0xa7b9), 0x20);
        // CB 20 01EB
        gbc.setState(0xa4ee, 0xf29a, 0x910, 0x1281, 0x1eeb, 0xca75, 0x1, 0x0);
        gbc.writeMem(0xa4ee, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf29a);
        EXPECT(gbc.pc(), 0xa4f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ee), 0xcb);
        EXPECT(gbc.readMem(0xa4ef), 0x20);
        // CB 20 01EC
        gbc.setState(0x5598, 0x27fb, 0x5690, 0x9322, 0x2e91, 0xb395, 0x0, 0x0);
        gbc.writeMem(0x5598, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x27fb);
        EXPECT(gbc.pc(), 0x559a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01ED
        gbc.setState(0x28b1, 0xf4ae, 0x7a50, 0xc859, 0x7073, 0x8c0d, 0x0, 0x0);
        gbc.writeMem(0x28b1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf4ae);
        EXPECT(gbc.pc(), 0x28b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01EE
        gbc.setState(0xd123, 0x7c3b, 0xe030, 0x2400, 0xb621, 0x802c, 0x1, 0x0);
        gbc.writeMem(0xd123, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7c3b);
        EXPECT(gbc.pc(), 0xd125);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd123), 0xcb);
        EXPECT(gbc.readMem(0xd124), 0x20);
        // CB 20 01EF
        gbc.setState(0xd313, 0x66c7, 0x7b20, 0x8c1d, 0x32c5, 0x8e07, 0x1, 0x0);
        gbc.writeMem(0xd313, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x66c7);
        EXPECT(gbc.pc(), 0xd315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd313), 0xcb);
        EXPECT(gbc.readMem(0xd314), 0x20);
        // CB 20 01F0
        gbc.setState(0xcb67, 0x4c8d, 0x94a0, 0x6b61, 0x2312, 0xf4d4, 0x1, 0x0);
        gbc.writeMem(0xcb67, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x4c8d);
        EXPECT(gbc.pc(), 0xcb69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb67), 0xcb);
        EXPECT(gbc.readMem(0xcb68), 0x20);
        // CB 20 01F1
        gbc.setState(0x5fe9, 0xd945, 0x7d20, 0x432a, 0xb011, 0x2c69, 0x1, 0x0);
        gbc.writeMem(0x5fe9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd945);
        EXPECT(gbc.pc(), 0x5feb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01F2
        gbc.setState(0x9238, 0x15b4, 0xaad0, 0x1d81, 0xb29, 0x7d69, 0x1, 0x0);
        gbc.writeMem(0x9238, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x15b4);
        EXPECT(gbc.pc(), 0x923a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9238), 0xcb);
        EXPECT(gbc.readMem(0x9239), 0x20);
        // CB 20 01F3
        gbc.setState(0xbbbf, 0x948d, 0x22a0, 0x6a0, 0x63e1, 0xebd, 0x0, 0x1);
        gbc.writeMem(0xbbbf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x948d);
        EXPECT(gbc.pc(), 0xbbc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbbf), 0xcb);
        EXPECT(gbc.readMem(0xbbc0), 0x20);
        // CB 20 01F4
        gbc.setState(0x1c55, 0xbb1c, 0x7290, 0xd4fd, 0x2a57, 0xf837, 0x1, 0x0);
        gbc.writeMem(0x1c55, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xbb1c);
        EXPECT(gbc.pc(), 0x1c57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01F5
        gbc.setState(0x34a0, 0x8771, 0x9360, 0x9990, 0xf7ac, 0xf71f, 0x1, 0x1);
        gbc.writeMem(0x34a0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8771);
        EXPECT(gbc.pc(), 0x34a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 01F6
        gbc.setState(0xceb5, 0x4a8, 0xbb80, 0xa088, 0xdc4d, 0x7932, 0x0, 0x1);
        gbc.writeMem(0xceb5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4a8);
        EXPECT(gbc.pc(), 0xceb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceb5), 0xcb);
        EXPECT(gbc.readMem(0xceb6), 0x20);
        // CB 20 01F7
        gbc.setState(0x93fd, 0xd510, 0x18e0, 0x2317, 0xceaa, 0x68c2, 0x0, 0x0);
        gbc.writeMem(0x93fd, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd510);
        EXPECT(gbc.pc(), 0x93ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93fd), 0xcb);
        EXPECT(gbc.readMem(0x93fe), 0x20);
        // CB 20 01F8
        gbc.setState(0x789, 0x1046, 0xb580, 0x4ba2, 0x600d, 0x2ed8, 0x0, 0x0);
        gbc.writeMem(0x789, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1046);
        EXPECT(gbc.pc(), 0x78b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01F9
        gbc.setState(0xda65, 0xe78a, 0xd450, 0x949c, 0x8798, 0x4207, 0x1, 0x1);
        gbc.writeMem(0xda65, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe78a);
        EXPECT(gbc.pc(), 0xda67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda65), 0xcb);
        EXPECT(gbc.readMem(0xda66), 0x20);
        // CB 20 01FA
        gbc.setState(0xcdbe, 0xdb99, 0x9bb0, 0xaa0b, 0xc6ef, 0x8a3b, 0x1, 0x0);
        gbc.writeMem(0xcdbe, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xdb99);
        EXPECT(gbc.pc(), 0xcdc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdbe), 0xcb);
        EXPECT(gbc.readMem(0xcdbf), 0x20);
        // CB 20 01FB
        gbc.setState(0x4c70, 0xda52, 0xd470, 0x462f, 0x182d, 0xc47f, 0x0, 0x0);
        gbc.writeMem(0x4c70, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xda52);
        EXPECT(gbc.pc(), 0x4c72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 01FD
        gbc.setState(0xc71d, 0x51d0, 0xa820, 0x54b1, 0x8e01, 0x606d, 0x0, 0x1);
        gbc.writeMem(0xc71d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x51d0);
        EXPECT(gbc.pc(), 0xc71f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc71d), 0xcb);
        EXPECT(gbc.readMem(0xc71e), 0x20);
        // CB 20 01FE
        gbc.setState(0xb80d, 0x222, 0xeac0, 0x88b9, 0x7284, 0x88d4, 0x1, 0x1);
        gbc.writeMem(0xb80d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x222);
        EXPECT(gbc.pc(), 0xb80f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb80d), 0xcb);
        EXPECT(gbc.readMem(0xb80e), 0x20);
        // CB 20 01FF
        gbc.setState(0x4db0, 0x70bc, 0x62d0, 0x29e0, 0x872b, 0x3bd, 0x1, 0x1);
        gbc.writeMem(0x4db0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x70bc);
        EXPECT(gbc.pc(), 0x4db2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0200
        gbc.setState(0xe706, 0xee95, 0x9f30, 0xb1bc, 0x3228, 0xd6b, 0x0, 0x0);
        gbc.writeMem(0xe706, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xee95);
        EXPECT(gbc.pc(), 0xe708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe706), 0xcb);
        EXPECT(gbc.readMem(0xe707), 0x20);
        // CB 20 0201
        gbc.setState(0x844, 0x1063, 0xbad0, 0x7951, 0x897c, 0x5a1f, 0x0, 0x0);
        gbc.writeMem(0x844, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x1063);
        EXPECT(gbc.pc(), 0x846);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0203
        gbc.setState(0x2cb6, 0x13dd, 0xf400, 0x8c85, 0xa1ec, 0x4d68, 0x1, 0x0);
        gbc.writeMem(0x2cb6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x13dd);
        EXPECT(gbc.pc(), 0x2cb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0204
        gbc.setState(0xd470, 0x79ab, 0x7560, 0xb40, 0x78e7, 0x1832, 0x1, 0x1);
        gbc.writeMem(0xd470, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x79ab);
        EXPECT(gbc.pc(), 0xd472);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd470), 0xcb);
        EXPECT(gbc.readMem(0xd471), 0x20);
        // CB 20 0205
        gbc.setState(0xa652, 0x1f60, 0xe810, 0xae16, 0x5cda, 0x93de, 0x0, 0x0);
        gbc.writeMem(0xa652, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1f60);
        EXPECT(gbc.pc(), 0xa654);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa652), 0xcb);
        EXPECT(gbc.readMem(0xa653), 0x20);
        // CB 20 0206
        gbc.setState(0x28ed, 0x958b, 0x7df0, 0xe912, 0xfb7c, 0xe8dc, 0x0, 0x0);
        gbc.writeMem(0x28ed, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x958b);
        EXPECT(gbc.pc(), 0x28ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0207
        gbc.setState(0xca5f, 0xaa26, 0xbb00, 0xc4ff, 0x8fd0, 0xda44, 0x1, 0x0);
        gbc.writeMem(0xca5f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xaa26);
        EXPECT(gbc.pc(), 0xca61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca5f), 0xcb);
        EXPECT(gbc.readMem(0xca60), 0x20);
        // CB 20 0208
        gbc.setState(0x3610, 0xa1b8, 0x62c0, 0xc2ab, 0xac4e, 0x865d, 0x0, 0x0);
        gbc.writeMem(0x3610, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa1b8);
        EXPECT(gbc.pc(), 0x3612);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0209
        gbc.setState(0x889a, 0x7afe, 0x5d20, 0x29d7, 0xc5b1, 0xffd, 0x1, 0x0);
        gbc.writeMem(0x889a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x7afe);
        EXPECT(gbc.pc(), 0x889c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x889a), 0xcb);
        EXPECT(gbc.readMem(0x889b), 0x20);
        // CB 20 020A
        gbc.setState(0xa4e3, 0xbc2, 0x63f0, 0xc247, 0x47c2, 0x1f91, 0x0, 0x0);
        gbc.writeMem(0xa4e3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xbc2);
        EXPECT(gbc.pc(), 0xa4e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4e3), 0xcb);
        EXPECT(gbc.readMem(0xa4e4), 0x20);
        // CB 20 020B
        gbc.setState(0x209f, 0x3e38, 0xc50, 0xa9ce, 0x5895, 0x23fa, 0x1, 0x0);
        gbc.writeMem(0x209f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x3e38);
        EXPECT(gbc.pc(), 0x20a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 020C
        gbc.setState(0xa2fa, 0x1408, 0x55c0, 0xe11e, 0xdb7f, 0x5fd2, 0x1, 0x0);
        gbc.writeMem(0xa2fa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1408);
        EXPECT(gbc.pc(), 0xa2fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2fa), 0xcb);
        EXPECT(gbc.readMem(0xa2fb), 0x20);
        // CB 20 020D
        gbc.setState(0xc8d5, 0xde7a, 0xf920, 0x1569, 0x2a4e, 0x1687, 0x0, 0x1);
        gbc.writeMem(0xc8d5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xde7a);
        EXPECT(gbc.pc(), 0xc8d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8d5), 0xcb);
        EXPECT(gbc.readMem(0xc8d6), 0x20);
        // CB 20 020E
        gbc.setState(0x98e6, 0x75a0, 0x10, 0xa28e, 0xdbb8, 0xc7b6, 0x0, 0x1);
        gbc.writeMem(0x98e6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x75a0);
        EXPECT(gbc.pc(), 0x98e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98e6), 0xcb);
        EXPECT(gbc.readMem(0x98e7), 0x20);
        // CB 20 020F
        gbc.setState(0x9926, 0xd2ba, 0xf6d0, 0x18b9, 0xf571, 0x2d7c, 0x0, 0x1);
        gbc.writeMem(0x9926, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd2ba);
        EXPECT(gbc.pc(), 0x9928);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9926), 0xcb);
        EXPECT(gbc.readMem(0x9927), 0x20);
        // CB 20 0210
        gbc.setState(0xae85, 0x2f29, 0xd30, 0x5450, 0x7c6, 0xb6c6, 0x0, 0x1);
        gbc.writeMem(0xae85, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x2f29);
        EXPECT(gbc.pc(), 0xae87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae85), 0xcb);
        EXPECT(gbc.readMem(0xae86), 0x20);
        // CB 20 0211
        gbc.setState(0x3b41, 0x57e1, 0x8870, 0x105a, 0x93e1, 0xf385, 0x1, 0x1);
        gbc.writeMem(0x3b41, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x57e1);
        EXPECT(gbc.pc(), 0x3b43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0212
        gbc.setState(0x2c64, 0x1836, 0x2790, 0xe4c8, 0x391c, 0x8584, 0x1, 0x0);
        gbc.writeMem(0x2c64, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1836);
        EXPECT(gbc.pc(), 0x2c66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0213
        gbc.setState(0x6c26, 0xfee4, 0x50a0, 0xa7a9, 0xedcb, 0x8c57, 0x1, 0x0);
        gbc.writeMem(0x6c26, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xfee4);
        EXPECT(gbc.pc(), 0x6c28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0214
        gbc.setState(0x7a5b, 0x13b5, 0xc480, 0xab07, 0x1e9e, 0x84ea, 0x0, 0x0);
        gbc.writeMem(0x7a5b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x13b5);
        EXPECT(gbc.pc(), 0x7a5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0215
        gbc.setState(0x95f2, 0xdb6, 0xc480, 0x8cfa, 0x11fd, 0x70d, 0x0, 0x0);
        gbc.writeMem(0x95f2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xdb6);
        EXPECT(gbc.pc(), 0x95f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95f2), 0xcb);
        EXPECT(gbc.readMem(0x95f3), 0x20);
        // CB 20 0216
        gbc.setState(0x872e, 0xa158, 0x62a0, 0x632d, 0xfd01, 0x440c, 0x1, 0x1);
        gbc.writeMem(0x872e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa158);
        EXPECT(gbc.pc(), 0x8730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x872e), 0xcb);
        EXPECT(gbc.readMem(0x872f), 0x20);
        // CB 20 0217
        gbc.setState(0x5235, 0x8551, 0xde40, 0xd0ed, 0x543b, 0x738b, 0x0, 0x1);
        gbc.writeMem(0x5235, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8551);
        EXPECT(gbc.pc(), 0x5237);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0218
        gbc.setState(0xb686, 0x674b, 0xf690, 0x8fb9, 0x2364, 0xc01a, 0x0, 0x1);
        gbc.writeMem(0xb686, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x674b);
        EXPECT(gbc.pc(), 0xb688);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb686), 0xcb);
        EXPECT(gbc.readMem(0xb687), 0x20);
        // CB 20 0219
        gbc.setState(0x7780, 0xc3a2, 0x2a00, 0xbf58, 0x5ed3, 0x25c5, 0x1, 0x0);
        gbc.writeMem(0x7780, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc3a2);
        EXPECT(gbc.pc(), 0x7782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 021A
        gbc.setState(0xd17d, 0x2be4, 0xf230, 0x195c, 0x128d, 0x6e0d, 0x0, 0x0);
        gbc.writeMem(0xd17d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2be4);
        EXPECT(gbc.pc(), 0xd17f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd17d), 0xcb);
        EXPECT(gbc.readMem(0xd17e), 0x20);
        // CB 20 021B
        gbc.setState(0x1007, 0xf483, 0x2fb0, 0x5e53, 0x7593, 0xbe4d, 0x0, 0x1);
        gbc.writeMem(0x1007, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf483);
        EXPECT(gbc.pc(), 0x1009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 021C
        gbc.setState(0xa870, 0x72ba, 0x3bb0, 0x498, 0x6efd, 0xd504, 0x1, 0x1);
        gbc.writeMem(0xa870, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x72ba);
        EXPECT(gbc.pc(), 0xa872);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa870), 0xcb);
        EXPECT(gbc.readMem(0xa871), 0x20);
        // CB 20 021D
        gbc.setState(0xbf54, 0x9d7b, 0x7710, 0xa89f, 0x2b3c, 0xe1cd, 0x1, 0x0);
        gbc.writeMem(0xbf54, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x9d7b);
        EXPECT(gbc.pc(), 0xbf56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf54), 0xcb);
        EXPECT(gbc.readMem(0xbf55), 0x20);
        // CB 20 021E
        gbc.setState(0x46ce, 0x3be0, 0xec60, 0x53ce, 0x70f4, 0xffd4, 0x0, 0x1);
        gbc.writeMem(0x46ce, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x3be0);
        EXPECT(gbc.pc(), 0x46d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 021F
        gbc.setState(0x8fc4, 0xd060, 0x7bf0, 0x9cb2, 0x404b, 0x68f1, 0x1, 0x0);
        gbc.writeMem(0x8fc4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd060);
        EXPECT(gbc.pc(), 0x8fc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fc4), 0xcb);
        EXPECT(gbc.readMem(0x8fc5), 0x20);
        // CB 20 0220
        gbc.setState(0x2ea1, 0x3bbb, 0x66b0, 0x7337, 0x1246, 0x400a, 0x1, 0x1);
        gbc.writeMem(0x2ea1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3bbb);
        EXPECT(gbc.pc(), 0x2ea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0221
        gbc.setState(0x754c, 0xe36c, 0xab90, 0x9c98, 0x7246, 0x1afb, 0x1, 0x1);
        gbc.writeMem(0x754c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe36c);
        EXPECT(gbc.pc(), 0x754e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0222
        gbc.setState(0x3695, 0x6a5c, 0xd870, 0xe56, 0xecae, 0xe30d, 0x0, 0x1);
        gbc.writeMem(0x3695, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6a5c);
        EXPECT(gbc.pc(), 0x3697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0223
        gbc.setState(0xa286, 0x20a2, 0x4630, 0x4bae, 0x3608, 0xb2ca, 0x1, 0x0);
        gbc.writeMem(0xa286, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x20a2);
        EXPECT(gbc.pc(), 0xa288);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa286), 0xcb);
        EXPECT(gbc.readMem(0xa287), 0x20);
        // CB 20 0224
        gbc.setState(0xca8d, 0xc09c, 0xb7d0, 0xfaa4, 0x7ec8, 0xdd6f, 0x0, 0x0);
        gbc.writeMem(0xca8d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc09c);
        EXPECT(gbc.pc(), 0xca8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca8d), 0xcb);
        EXPECT(gbc.readMem(0xca8e), 0x20);
        // CB 20 0226
        gbc.setState(0xd8a6, 0x3fa2, 0xeb50, 0x8d62, 0x344f, 0xbeeb, 0x1, 0x0);
        gbc.writeMem(0xd8a6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3fa2);
        EXPECT(gbc.pc(), 0xd8a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8a6), 0xcb);
        EXPECT(gbc.readMem(0xd8a7), 0x20);
        // CB 20 0227
        gbc.setState(0x71f2, 0xd6e0, 0xea30, 0xc384, 0x4f72, 0x78a7, 0x0, 0x1);
        gbc.writeMem(0x71f2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd6e0);
        EXPECT(gbc.pc(), 0x71f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0228
        gbc.setState(0x462f, 0xc7c4, 0xa8c0, 0x4d39, 0x3749, 0x329, 0x0, 0x0);
        gbc.writeMem(0x462f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc7c4);
        EXPECT(gbc.pc(), 0x4631);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0229
        gbc.setState(0x6a54, 0xd246, 0xda10, 0xc7ac, 0x5935, 0xe3fc, 0x0, 0x1);
        gbc.writeMem(0x6a54, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd246);
        EXPECT(gbc.pc(), 0x6a56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 022A
        gbc.setState(0xa694, 0xd9e9, 0x39c0, 0x1846, 0x20e3, 0x5103, 0x0, 0x1);
        gbc.writeMem(0xa694, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd9e9);
        EXPECT(gbc.pc(), 0xa696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa694), 0xcb);
        EXPECT(gbc.readMem(0xa695), 0x20);
        // CB 20 022B
        gbc.setState(0x7bb, 0x4b70, 0xe50, 0xdcc2, 0xe0d6, 0x13e3, 0x1, 0x0);
        gbc.writeMem(0x7bb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4b70);
        EXPECT(gbc.pc(), 0x7bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 022C
        gbc.setState(0x63e5, 0xbba0, 0x1400, 0x7d21, 0x208b, 0x781b, 0x1, 0x1);
        gbc.writeMem(0x63e5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xbba0);
        EXPECT(gbc.pc(), 0x63e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 022D
        gbc.setState(0xefae, 0xd4ed, 0x6ae0, 0xe22d, 0xf0f3, 0x8581, 0x0, 0x0);
        gbc.writeMem(0xefae, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd4ed);
        EXPECT(gbc.pc(), 0xefb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefae), 0xcb);
        EXPECT(gbc.readMem(0xefaf), 0x20);
        // CB 20 022E
        gbc.setState(0x8953, 0x4179, 0xf960, 0xc20e, 0x4f10, 0xed32, 0x1, 0x0);
        gbc.writeMem(0x8953, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4179);
        EXPECT(gbc.pc(), 0x8955);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8953), 0xcb);
        EXPECT(gbc.readMem(0x8954), 0x20);
        // CB 20 022F
        gbc.setState(0x2b62, 0x847e, 0xf9a0, 0x800, 0xd667, 0xc290, 0x1, 0x1);
        gbc.writeMem(0x2b62, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x847e);
        EXPECT(gbc.pc(), 0x2b64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0230
        gbc.setState(0x2a92, 0x60d7, 0xac0, 0x8c8, 0xb960, 0xed9d, 0x1, 0x1);
        gbc.writeMem(0x2a92, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x60d7);
        EXPECT(gbc.pc(), 0x2a94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0231
        gbc.setState(0x7e8f, 0x81d, 0xdca0, 0x70cf, 0xfe9f, 0xe3ff, 0x1, 0x1);
        gbc.writeMem(0x7e8f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x81d);
        EXPECT(gbc.pc(), 0x7e91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0232
        gbc.setState(0x4820, 0x996, 0x2aa0, 0x5191, 0xf37f, 0xb45, 0x1, 0x1);
        gbc.writeMem(0x4820, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x996);
        EXPECT(gbc.pc(), 0x4822);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0233
        gbc.setState(0xc6c1, 0xa35a, 0xe560, 0x67f3, 0xfd1d, 0xc7ac, 0x0, 0x1);
        gbc.writeMem(0xc6c1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa35a);
        EXPECT(gbc.pc(), 0xc6c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6c1), 0xcb);
        EXPECT(gbc.readMem(0xc6c2), 0x20);
        // CB 20 0234
        gbc.setState(0x7dc0, 0x7ca1, 0x54d0, 0xf501, 0x1c40, 0x8e99, 0x0, 0x1);
        gbc.writeMem(0x7dc0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x7ca1);
        EXPECT(gbc.pc(), 0x7dc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0235
        gbc.setState(0xbee2, 0x106, 0xe790, 0xf13, 0x37, 0x17c0, 0x1, 0x0);
        gbc.writeMem(0xbee2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x106);
        EXPECT(gbc.pc(), 0xbee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbee2), 0xcb);
        EXPECT(gbc.readMem(0xbee3), 0x20);
        // CB 20 0236
        gbc.setState(0x2b30, 0xa0f8, 0x5040, 0xa6af, 0xb70a, 0x6c16, 0x1, 0x1);
        gbc.writeMem(0x2b30, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa0f8);
        EXPECT(gbc.pc(), 0x2b32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0238
        gbc.setState(0xc527, 0xbd4f, 0x2970, 0xae8a, 0x3469, 0x5a39, 0x1, 0x1);
        gbc.writeMem(0xc527, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xbd4f);
        EXPECT(gbc.pc(), 0xc529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc527), 0xcb);
        EXPECT(gbc.readMem(0xc528), 0x20);
        // CB 20 0239
        gbc.setState(0x2773, 0xd293, 0x7210, 0xf8fb, 0x2deb, 0x7bfd, 0x1, 0x1);
        gbc.writeMem(0x2773, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd293);
        EXPECT(gbc.pc(), 0x2775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 023A
        gbc.setState(0x816f, 0x7666, 0x95b0, 0x16a8, 0xa3c4, 0x775b, 0x1, 0x0);
        gbc.writeMem(0x816f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7666);
        EXPECT(gbc.pc(), 0x8171);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x816f), 0xcb);
        EXPECT(gbc.readMem(0x8170), 0x20);
        // CB 20 023B
        gbc.setState(0xbc79, 0xda04, 0xdd40, 0xcc31, 0xa043, 0xd0bf, 0x0, 0x0);
        gbc.writeMem(0xbc79, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xda04);
        EXPECT(gbc.pc(), 0xbc7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc79), 0xcb);
        EXPECT(gbc.readMem(0xbc7a), 0x20);
        // CB 20 023C
        gbc.setState(0x5cc8, 0x894e, 0x8220, 0xcd81, 0xd645, 0x3538, 0x0, 0x0);
        gbc.writeMem(0x5cc8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x894e);
        EXPECT(gbc.pc(), 0x5cca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 023D
        gbc.setState(0xb98c, 0x77e6, 0x4a80, 0x1856, 0x8a27, 0xc36, 0x0, 0x1);
        gbc.writeMem(0xb98c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x77e6);
        EXPECT(gbc.pc(), 0xb98e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb98c), 0xcb);
        EXPECT(gbc.readMem(0xb98d), 0x20);
        // CB 20 023E
        gbc.setState(0xbb32, 0x2399, 0x8cc0, 0x7b37, 0x73, 0x4653, 0x1, 0x0);
        gbc.writeMem(0xbb32, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2399);
        EXPECT(gbc.pc(), 0xbb34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb32), 0xcb);
        EXPECT(gbc.readMem(0xbb33), 0x20);
        // CB 20 023F
        gbc.setState(0xa700, 0xa411, 0xc680, 0xc90d, 0x30a9, 0x1bda, 0x0, 0x0);
        gbc.writeMem(0xa700, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xa411);
        EXPECT(gbc.pc(), 0xa702);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa700), 0xcb);
        EXPECT(gbc.readMem(0xa701), 0x20);
        // CB 20 0240
        gbc.setState(0x5756, 0x336d, 0xf9d0, 0x6989, 0xfedd, 0x4853, 0x0, 0x1);
        gbc.writeMem(0x5756, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x336d);
        EXPECT(gbc.pc(), 0x5758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0242
        gbc.setState(0x480f, 0x4644, 0xb940, 0x8d12, 0xa9, 0xf931, 0x1, 0x0);
        gbc.writeMem(0x480f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4644);
        EXPECT(gbc.pc(), 0x4811);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0243
        gbc.setState(0x598, 0x69a8, 0x7340, 0xd7e5, 0xc06e, 0x563c, 0x0, 0x1);
        gbc.writeMem(0x598, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x69a8);
        EXPECT(gbc.pc(), 0x59a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0244
        gbc.setState(0x5b07, 0xf8c5, 0x4ca0, 0x1140, 0xc9cd, 0x1f55, 0x1, 0x1);
        gbc.writeMem(0x5b07, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf8c5);
        EXPECT(gbc.pc(), 0x5b09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0245
        gbc.setState(0x2e09, 0xad29, 0xb140, 0xfc1f, 0xbebd, 0xeee, 0x0, 0x1);
        gbc.writeMem(0x2e09, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xad29);
        EXPECT(gbc.pc(), 0x2e0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0246
        gbc.setState(0x8cea, 0x1701, 0xfdb0, 0x4f9f, 0x623e, 0x91d7, 0x0, 0x1);
        gbc.writeMem(0x8cea, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1701);
        EXPECT(gbc.pc(), 0x8cec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cea), 0xcb);
        EXPECT(gbc.readMem(0x8ceb), 0x20);
        // CB 20 0247
        gbc.setState(0x84ee, 0x407c, 0xdef0, 0xd8e6, 0xd046, 0x6b98, 0x1, 0x1);
        gbc.writeMem(0x84ee, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x407c);
        EXPECT(gbc.pc(), 0x84f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84ee), 0xcb);
        EXPECT(gbc.readMem(0x84ef), 0x20);
        // CB 20 0248
        gbc.setState(0xeddc, 0xb05f, 0x1620, 0x64ab, 0x6c1e, 0xeee7, 0x0, 0x1);
        gbc.writeMem(0xeddc, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb05f);
        EXPECT(gbc.pc(), 0xedde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeddc), 0xcb);
        EXPECT(gbc.readMem(0xeddd), 0x20);
        // CB 20 0249
        gbc.setState(0x7c32, 0xa30, 0x8860, 0x82a1, 0xab8d, 0x98b4, 0x0, 0x0);
        gbc.writeMem(0x7c32, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa30);
        EXPECT(gbc.pc(), 0x7c34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 024B
        gbc.setState(0x88b1, 0x9832, 0xff70, 0x9d67, 0xf518, 0x3dad, 0x0, 0x1);
        gbc.writeMem(0x88b1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9832);
        EXPECT(gbc.pc(), 0x88b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b1), 0xcb);
        EXPECT(gbc.readMem(0x88b2), 0x20);
        // CB 20 024C
        gbc.setState(0xe2b9, 0xb10, 0x7350, 0x4725, 0x52fd, 0xa4d3, 0x1, 0x1);
        gbc.writeMem(0xe2b9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb10);
        EXPECT(gbc.pc(), 0xe2bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2b9), 0xcb);
        EXPECT(gbc.readMem(0xe2ba), 0x20);
        // CB 20 024D
        gbc.setState(0x1970, 0xc917, 0x88b0, 0x2d42, 0xe185, 0xdde3, 0x0, 0x1);
        gbc.writeMem(0x1970, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc917);
        EXPECT(gbc.pc(), 0x1972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 024E
        gbc.setState(0x988e, 0x63fe, 0xe630, 0x44d4, 0xcd3d, 0x663, 0x0, 0x1);
        gbc.writeMem(0x988e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x63fe);
        EXPECT(gbc.pc(), 0x9890);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x988e), 0xcb);
        EXPECT(gbc.readMem(0x988f), 0x20);
        // CB 20 024F
        gbc.setState(0x3a9b, 0x2b36, 0xd4f0, 0xae15, 0x61be, 0xd91b, 0x1, 0x1);
        gbc.writeMem(0x3a9b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x2b36);
        EXPECT(gbc.pc(), 0x3a9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0250
        gbc.setState(0xb002, 0xa1a3, 0xbe0, 0x3fa1, 0xe938, 0xd9d6, 0x1, 0x0);
        gbc.writeMem(0xb002, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa1a3);
        EXPECT(gbc.pc(), 0xb004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb002), 0xcb);
        EXPECT(gbc.readMem(0xb003), 0x20);
        // CB 20 0251
        gbc.setState(0xaa40, 0x95be, 0x9220, 0xb34a, 0xa93c, 0xe8e6, 0x1, 0x0);
        gbc.writeMem(0xaa40, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x95be);
        EXPECT(gbc.pc(), 0xaa42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa40), 0xcb);
        EXPECT(gbc.readMem(0xaa41), 0x20);
        // CB 20 0252
        gbc.setState(0x77bd, 0xe1c4, 0xfbc0, 0x2760, 0x3878, 0xced9, 0x1, 0x0);
        gbc.writeMem(0x77bd, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe1c4);
        EXPECT(gbc.pc(), 0x77bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0253
        gbc.setState(0xc842, 0xfc6b, 0x3ee0, 0x4170, 0x4b37, 0x72a1, 0x1, 0x1);
        gbc.writeMem(0xc842, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xfc6b);
        EXPECT(gbc.pc(), 0xc844);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc842), 0xcb);
        EXPECT(gbc.readMem(0xc843), 0x20);
        // CB 20 0254
        gbc.setState(0x573, 0xb157, 0xfb20, 0x3aaf, 0xd0f5, 0x1e84, 0x0, 0x1);
        gbc.writeMem(0x573, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb157);
        EXPECT(gbc.pc(), 0x575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0255
        gbc.setState(0xedb2, 0xbd94, 0x5360, 0x8dcc, 0x11fb, 0x2145, 0x0, 0x1);
        gbc.writeMem(0xedb2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xbd94);
        EXPECT(gbc.pc(), 0xedb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedb2), 0xcb);
        EXPECT(gbc.readMem(0xedb3), 0x20);
        // CB 20 0256
        gbc.setState(0x85cb, 0x7bf1, 0xdf30, 0xd67e, 0xb6c7, 0x774e, 0x1, 0x0);
        gbc.writeMem(0x85cb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7bf1);
        EXPECT(gbc.pc(), 0x85cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85cb), 0xcb);
        EXPECT(gbc.readMem(0x85cc), 0x20);
        // CB 20 0258
        gbc.setState(0x4736, 0x65c5, 0x5160, 0x24af, 0x91be, 0x7358, 0x0, 0x1);
        gbc.writeMem(0x4736, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x65c5);
        EXPECT(gbc.pc(), 0x4738);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0259
        gbc.setState(0x2fdd, 0x1306, 0x1c0, 0xd416, 0x7316, 0x6aa5, 0x1, 0x1);
        gbc.writeMem(0x2fdd, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1306);
        EXPECT(gbc.pc(), 0x2fdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 025A
        gbc.setState(0xc277, 0xb476, 0x25a0, 0x230c, 0x8273, 0x357e, 0x0, 0x0);
        gbc.writeMem(0xc277, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb476);
        EXPECT(gbc.pc(), 0xc279);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc277), 0xcb);
        EXPECT(gbc.readMem(0xc278), 0x20);
        // CB 20 025B
        gbc.setState(0x8c07, 0x31, 0x1e70, 0xa594, 0x4380, 0xb309, 0x1, 0x0);
        gbc.writeMem(0x8c07, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x31);
        EXPECT(gbc.pc(), 0x8c09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c07), 0xcb);
        EXPECT(gbc.readMem(0x8c08), 0x20);
        // CB 20 025C
        gbc.setState(0xd916, 0x19fb, 0xd1c0, 0x6c20, 0xd8c0, 0x4745, 0x1, 0x1);
        gbc.writeMem(0xd916, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x19fb);
        EXPECT(gbc.pc(), 0xd918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd916), 0xcb);
        EXPECT(gbc.readMem(0xd917), 0x20);
        // CB 20 025D
        gbc.setState(0xcadc, 0x49cd, 0x3120, 0x53a, 0xe5ab, 0x4319, 0x0, 0x1);
        gbc.writeMem(0xcadc, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x49cd);
        EXPECT(gbc.pc(), 0xcade);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcadc), 0xcb);
        EXPECT(gbc.readMem(0xcadd), 0x20);
        // CB 20 025E
        gbc.setState(0xd1e7, 0xb1b1, 0xea80, 0x1d8b, 0xbd5e, 0x71f, 0x0, 0x0);
        gbc.writeMem(0xd1e7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb1b1);
        EXPECT(gbc.pc(), 0xd1e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1e7), 0xcb);
        EXPECT(gbc.readMem(0xd1e8), 0x20);
        // CB 20 025F
        gbc.setState(0xe727, 0x9354, 0x1490, 0x6b0b, 0x493b, 0x3416, 0x1, 0x0);
        gbc.writeMem(0xe727, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9354);
        EXPECT(gbc.pc(), 0xe729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe727), 0xcb);
        EXPECT(gbc.readMem(0xe728), 0x20);
        // CB 20 0260
        gbc.setState(0x96f0, 0x735a, 0xa120, 0x50ef, 0x9e55, 0x6a1a, 0x0, 0x1);
        gbc.writeMem(0x96f0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x735a);
        EXPECT(gbc.pc(), 0x96f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96f0), 0xcb);
        EXPECT(gbc.readMem(0x96f1), 0x20);
        // CB 20 0261
        gbc.setState(0x7801, 0x61b8, 0x6ba0, 0xbed4, 0x3817, 0x69e6, 0x1, 0x0);
        gbc.writeMem(0x7801, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x61b8);
        EXPECT(gbc.pc(), 0x7803);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0262
        gbc.setState(0x1f38, 0x5538, 0xda30, 0xaf04, 0x7660, 0xe332, 0x1, 0x1);
        gbc.writeMem(0x1f38, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5538);
        EXPECT(gbc.pc(), 0x1f3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0263
        gbc.setState(0x2ad9, 0x2109, 0xb6a0, 0xac7f, 0x7b50, 0xd71d, 0x0, 0x0);
        gbc.writeMem(0x2ad9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2109);
        EXPECT(gbc.pc(), 0x2adb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0264
        gbc.setState(0x465a, 0xe8a7, 0x6870, 0x8ca3, 0xa84d, 0x11a1, 0x0, 0x1);
        gbc.writeMem(0x465a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe8a7);
        EXPECT(gbc.pc(), 0x465c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0265
        gbc.setState(0x7c35, 0x63c, 0x5180, 0x236f, 0x417e, 0xebda, 0x0, 0x1);
        gbc.writeMem(0x7c35, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x63c);
        EXPECT(gbc.pc(), 0x7c37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0266
        gbc.setState(0x6db4, 0x2c66, 0x6eb0, 0x393, 0xc633, 0x653c, 0x0, 0x0);
        gbc.writeMem(0x6db4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2c66);
        EXPECT(gbc.pc(), 0x6db6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0267
        gbc.setState(0x8c8a, 0x28e0, 0xc0e0, 0x50be, 0x2ec2, 0x8c5a, 0x0, 0x1);
        gbc.writeMem(0x8c8a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x28e0);
        EXPECT(gbc.pc(), 0x8c8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c8a), 0xcb);
        EXPECT(gbc.readMem(0x8c8b), 0x20);
        // CB 20 0268
        gbc.setState(0x481e, 0x7538, 0xa170, 0x8f63, 0x334a, 0x83a2, 0x1, 0x1);
        gbc.writeMem(0x481e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7538);
        EXPECT(gbc.pc(), 0x4820);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0269
        gbc.setState(0x41e8, 0xe27a, 0x90e0, 0x559e, 0xe92a, 0xb38a, 0x0, 0x0);
        gbc.writeMem(0x41e8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe27a);
        EXPECT(gbc.pc(), 0x41ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 026A
        gbc.setState(0x100c, 0x546b, 0xe390, 0x9edf, 0xb704, 0xfae8, 0x0, 0x0);
        gbc.writeMem(0x100c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x546b);
        EXPECT(gbc.pc(), 0x100e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 026B
        gbc.setState(0xcbb5, 0x7b0b, 0x5d10, 0xafa, 0x4185, 0x8b22, 0x0, 0x1);
        gbc.writeMem(0xcbb5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7b0b);
        EXPECT(gbc.pc(), 0xcbb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbb5), 0xcb);
        EXPECT(gbc.readMem(0xcbb6), 0x20);
        // CB 20 026C
        gbc.setState(0x8976, 0xf060, 0xe3d0, 0x2bfc, 0x4cb9, 0x1e46, 0x1, 0x0);
        gbc.writeMem(0x8976, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf060);
        EXPECT(gbc.pc(), 0x8978);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8976), 0xcb);
        EXPECT(gbc.readMem(0x8977), 0x20);
        // CB 20 026D
        gbc.setState(0xbe12, 0x274b, 0x9d0, 0x131, 0xcdcd, 0xf7c6, 0x1, 0x0);
        gbc.writeMem(0xbe12, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x274b);
        EXPECT(gbc.pc(), 0xbe14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe12), 0xcb);
        EXPECT(gbc.readMem(0xbe13), 0x20);
        // CB 20 026E
        gbc.setState(0xa5bc, 0x3a2a, 0xa130, 0x73b5, 0xed, 0x97a9, 0x0, 0x0);
        gbc.writeMem(0xa5bc, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3a2a);
        EXPECT(gbc.pc(), 0xa5be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5bc), 0xcb);
        EXPECT(gbc.readMem(0xa5bd), 0x20);
        // CB 20 026F
        gbc.setState(0x6335, 0x37f2, 0x7800, 0x2fce, 0xca45, 0xc068, 0x1, 0x1);
        gbc.writeMem(0x6335, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x37f2);
        EXPECT(gbc.pc(), 0x6337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0270
        gbc.setState(0x1b8e, 0x7ddf, 0xeb90, 0xcf72, 0xfc9, 0x5438, 0x1, 0x1);
        gbc.writeMem(0x1b8e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x7ddf);
        EXPECT(gbc.pc(), 0x1b90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0271
        gbc.setState(0xc29a, 0x8925, 0xce0, 0x4794, 0xed7, 0xc991, 0x0, 0x1);
        gbc.writeMem(0xc29a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8925);
        EXPECT(gbc.pc(), 0xc29c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc29a), 0xcb);
        EXPECT(gbc.readMem(0xc29b), 0x20);
        // CB 20 0272
        gbc.setState(0x4d1b, 0x8425, 0x7200, 0x4f8a, 0x19d1, 0xc7c0, 0x1, 0x0);
        gbc.writeMem(0x4d1b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8425);
        EXPECT(gbc.pc(), 0x4d1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0273
        gbc.setState(0xee31, 0xf892, 0x77f0, 0xfc5c, 0xd963, 0x2fa9, 0x0, 0x0);
        gbc.writeMem(0xee31, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf892);
        EXPECT(gbc.pc(), 0xee33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee31), 0xcb);
        EXPECT(gbc.readMem(0xee32), 0x20);
        // CB 20 0274
        gbc.setState(0x9c62, 0xf28a, 0xa290, 0x98ef, 0x201e, 0x969, 0x1, 0x0);
        gbc.writeMem(0x9c62, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf28a);
        EXPECT(gbc.pc(), 0x9c64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c62), 0xcb);
        EXPECT(gbc.readMem(0x9c63), 0x20);
        // CB 20 0275
        gbc.setState(0xb40, 0xf890, 0xdca0, 0x8fbf, 0x9f74, 0xa7a7, 0x0, 0x1);
        gbc.writeMem(0xb40, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf890);
        EXPECT(gbc.pc(), 0xb42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0276
        gbc.setState(0x59f8, 0xf4d4, 0x1e80, 0xcfa3, 0x490d, 0xc164, 0x0, 0x1);
        gbc.writeMem(0x59f8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf4d4);
        EXPECT(gbc.pc(), 0x59fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0277
        gbc.setState(0x821e, 0xeb8, 0x2340, 0x65f6, 0xccda, 0x3b18, 0x0, 0x1);
        gbc.writeMem(0x821e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xeb8);
        EXPECT(gbc.pc(), 0x8220);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x821e), 0xcb);
        EXPECT(gbc.readMem(0x821f), 0x20);
        // CB 20 0278
        gbc.setState(0x9621, 0xa7cb, 0x8230, 0x2144, 0x3d71, 0x5085, 0x0, 0x0);
        gbc.writeMem(0x9621, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa7cb);
        EXPECT(gbc.pc(), 0x9623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9621), 0xcb);
        EXPECT(gbc.readMem(0x9622), 0x20);
        // CB 20 0279
        gbc.setState(0x1d12, 0xeeff, 0x1e30, 0x6910, 0x1e29, 0x1069, 0x1, 0x0);
        gbc.writeMem(0x1d12, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xeeff);
        EXPECT(gbc.pc(), 0x1d14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 027A
        gbc.setState(0xcddb, 0x6fda, 0xdef0, 0xa534, 0x3ad0, 0xde53, 0x1, 0x1);
        gbc.writeMem(0xcddb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x6fda);
        EXPECT(gbc.pc(), 0xcddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcddb), 0xcb);
        EXPECT(gbc.readMem(0xcddc), 0x20);
        // CB 20 027B
        gbc.setState(0xbf8a, 0x262b, 0xeec0, 0xb20, 0x20d2, 0x7827, 0x1, 0x1);
        gbc.writeMem(0xbf8a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x262b);
        EXPECT(gbc.pc(), 0xbf8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf8a), 0xcb);
        EXPECT(gbc.readMem(0xbf8b), 0x20);
        // CB 20 027C
        gbc.setState(0x6a13, 0x97f1, 0x2310, 0xc946, 0xd1f6, 0xb9bb, 0x1, 0x0);
        gbc.writeMem(0x6a13, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x97f1);
        EXPECT(gbc.pc(), 0x6a15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 027D
        gbc.setState(0x37c1, 0x7743, 0x8e00, 0xcc75, 0xd64d, 0x1d93, 0x0, 0x0);
        gbc.writeMem(0x37c1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7743);
        EXPECT(gbc.pc(), 0x37c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 027E
        gbc.setState(0xa96b, 0x390b, 0x5e0, 0x34d6, 0x8c8c, 0xbaf8, 0x1, 0x0);
        gbc.writeMem(0xa96b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x390b);
        EXPECT(gbc.pc(), 0xa96d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa96b), 0xcb);
        EXPECT(gbc.readMem(0xa96c), 0x20);
        // CB 20 027F
        gbc.setState(0x89e7, 0x8b42, 0xd240, 0x276d, 0x6c6d, 0x271b, 0x1, 0x1);
        gbc.writeMem(0x89e7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8b42);
        EXPECT(gbc.pc(), 0x89e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89e7), 0xcb);
        EXPECT(gbc.readMem(0x89e8), 0x20);
        // CB 20 0280
        gbc.setState(0x70c, 0x6d52, 0x480, 0xf16f, 0xeb16, 0x8fe4, 0x0, 0x1);
        gbc.writeMem(0x70c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6d52);
        EXPECT(gbc.pc(), 0x70e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0282
        gbc.setState(0xd2d8, 0x6b76, 0xb10, 0x7680, 0xabf4, 0x386c, 0x1, 0x0);
        gbc.writeMem(0xd2d8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6b76);
        EXPECT(gbc.pc(), 0xd2da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2d8), 0xcb);
        EXPECT(gbc.readMem(0xd2d9), 0x20);
        // CB 20 0283
        gbc.setState(0x7c99, 0x730a, 0x7310, 0x9664, 0x5015, 0x1772, 0x1, 0x1);
        gbc.writeMem(0x7c99, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x730a);
        EXPECT(gbc.pc(), 0x7c9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0284
        gbc.setState(0x68e3, 0x1da2, 0x7be0, 0x6bd8, 0x8ad8, 0x69b5, 0x0, 0x1);
        gbc.writeMem(0x68e3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1da2);
        EXPECT(gbc.pc(), 0x68e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0285
        gbc.setState(0x918, 0x1ab4, 0xfb60, 0x6e66, 0x325d, 0x7359, 0x1, 0x0);
        gbc.writeMem(0x918, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1ab4);
        EXPECT(gbc.pc(), 0x91a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0286
        gbc.setState(0x7ca6, 0xa8fe, 0x93e0, 0x50ad, 0x9421, 0x7f9e, 0x0, 0x1);
        gbc.writeMem(0x7ca6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa8fe);
        EXPECT(gbc.pc(), 0x7ca8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0287
        gbc.setState(0xe99a, 0x77c, 0xba20, 0xff4e, 0xf018, 0x8fda, 0x1, 0x1);
        gbc.writeMem(0xe99a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x77c);
        EXPECT(gbc.pc(), 0xe99c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe99a), 0xcb);
        EXPECT(gbc.readMem(0xe99b), 0x20);
        // CB 20 0288
        gbc.setState(0xc3d7, 0xee11, 0xe120, 0xc934, 0x8fbf, 0x26a2, 0x0, 0x0);
        gbc.writeMem(0xc3d7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xee11);
        EXPECT(gbc.pc(), 0xc3d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3d7), 0xcb);
        EXPECT(gbc.readMem(0xc3d8), 0x20);
        // CB 20 0289
        gbc.setState(0x56cc, 0x17c7, 0x5c80, 0x81a1, 0x3e81, 0x3023, 0x0, 0x0);
        gbc.writeMem(0x56cc, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x17c7);
        EXPECT(gbc.pc(), 0x56ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 028A
        gbc.setState(0x9661, 0x527d, 0x43a0, 0xa704, 0x25b7, 0x124b, 0x1, 0x1);
        gbc.writeMem(0x9661, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x527d);
        EXPECT(gbc.pc(), 0x9663);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9661), 0xcb);
        EXPECT(gbc.readMem(0x9662), 0x20);
        // CB 20 028B
        gbc.setState(0xc373, 0x6abf, 0xbd20, 0xe005, 0x30b1, 0x1f66, 0x0, 0x1);
        gbc.writeMem(0xc373, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6abf);
        EXPECT(gbc.pc(), 0xc375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc373), 0xcb);
        EXPECT(gbc.readMem(0xc374), 0x20);
        // CB 20 028C
        gbc.setState(0x7542, 0xb8e1, 0x4210, 0xd0fa, 0xa98c, 0x99f9, 0x0, 0x0);
        gbc.writeMem(0x7542, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb8e1);
        EXPECT(gbc.pc(), 0x7544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 028D
        gbc.setState(0x15ee, 0xdc8b, 0xbfb0, 0xecd8, 0xaf94, 0xa6fc, 0x1, 0x1);
        gbc.writeMem(0x15ee, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xdc8b);
        EXPECT(gbc.pc(), 0x15f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 028F
        gbc.setState(0x65e, 0x711f, 0x5720, 0xd3fd, 0x61d0, 0x2602, 0x1, 0x1);
        gbc.writeMem(0x65e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x711f);
        EXPECT(gbc.pc(), 0x660);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0290
        gbc.setState(0x6e1b, 0xbe2, 0x6b80, 0xfd3a, 0xef9f, 0x9575, 0x0, 0x1);
        gbc.writeMem(0x6e1b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xbe2);
        EXPECT(gbc.pc(), 0x6e1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0291
        gbc.setState(0x5624, 0xcbef, 0x9dd0, 0x834a, 0xc7fe, 0x2883, 0x0, 0x0);
        gbc.writeMem(0x5624, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xcbef);
        EXPECT(gbc.pc(), 0x5626);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0292
        gbc.setState(0xb277, 0x154e, 0xc230, 0xa4ac, 0x466b, 0x83f6, 0x1, 0x0);
        gbc.writeMem(0xb277, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x154e);
        EXPECT(gbc.pc(), 0xb279);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb277), 0xcb);
        EXPECT(gbc.readMem(0xb278), 0x20);
        // CB 20 0293
        gbc.setState(0xc295, 0xc40b, 0x2430, 0xe556, 0xf341, 0xd070, 0x1, 0x0);
        gbc.writeMem(0xc295, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc40b);
        EXPECT(gbc.pc(), 0xc297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc295), 0xcb);
        EXPECT(gbc.readMem(0xc296), 0x20);
        // CB 20 0294
        gbc.setState(0xdde7, 0xd00a, 0xd870, 0x2902, 0x186c, 0xace4, 0x1, 0x0);
        gbc.writeMem(0xdde7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd00a);
        EXPECT(gbc.pc(), 0xdde9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdde7), 0xcb);
        EXPECT(gbc.readMem(0xdde8), 0x20);
        // CB 20 0295
        gbc.setState(0x3156, 0x95c6, 0x7380, 0x6664, 0xe145, 0xc160, 0x1, 0x1);
        gbc.writeMem(0x3156, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x95c6);
        EXPECT(gbc.pc(), 0x3158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0296
        gbc.setState(0x962a, 0x7ca1, 0x93f0, 0x9576, 0xa546, 0xb157, 0x1, 0x0);
        gbc.writeMem(0x962a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7ca1);
        EXPECT(gbc.pc(), 0x962c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x962a), 0xcb);
        EXPECT(gbc.readMem(0x962b), 0x20);
        // CB 20 0297
        gbc.setState(0x124c, 0x4a0, 0xccf0, 0xa161, 0xf707, 0x9e6a, 0x0, 0x1);
        gbc.writeMem(0x124c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4a0);
        EXPECT(gbc.pc(), 0x124e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0298
        gbc.setState(0x53b9, 0xa4b0, 0x54e0, 0x1770, 0x7149, 0xdab3, 0x1, 0x1);
        gbc.writeMem(0x53b9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa4b0);
        EXPECT(gbc.pc(), 0x53bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0299
        gbc.setState(0x9d7a, 0xf782, 0x5270, 0xcebd, 0x9edd, 0x7fae, 0x0, 0x0);
        gbc.writeMem(0x9d7a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf782);
        EXPECT(gbc.pc(), 0x9d7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d7a), 0xcb);
        EXPECT(gbc.readMem(0x9d7b), 0x20);
        // CB 20 029A
        gbc.setState(0x8494, 0x5aa0, 0xb010, 0x660c, 0xe4a5, 0xe020, 0x1, 0x0);
        gbc.writeMem(0x8494, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x5aa0);
        EXPECT(gbc.pc(), 0x8496);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8494), 0xcb);
        EXPECT(gbc.readMem(0x8495), 0x20);
        // CB 20 029B
        gbc.setState(0xd89f, 0x1ed7, 0xa00, 0x8a1e, 0xd730, 0x96ed, 0x1, 0x1);
        gbc.writeMem(0xd89f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1ed7);
        EXPECT(gbc.pc(), 0xd8a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd89f), 0xcb);
        EXPECT(gbc.readMem(0xd8a0), 0x20);
        // CB 20 029C
        gbc.setState(0x656c, 0xce31, 0x5c10, 0x29f2, 0xc8c5, 0x5b57, 0x1, 0x1);
        gbc.writeMem(0x656c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xce31);
        EXPECT(gbc.pc(), 0x656e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 029D
        gbc.setState(0xdc24, 0x37a, 0x1a50, 0x4d44, 0xd481, 0xd6e2, 0x1, 0x0);
        gbc.writeMem(0xdc24, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x37a);
        EXPECT(gbc.pc(), 0xdc26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc24), 0xcb);
        EXPECT(gbc.readMem(0xdc25), 0x20);
        // CB 20 029E
        gbc.setState(0xad16, 0xa460, 0x76a0, 0x8cf0, 0x75c9, 0xd670, 0x1, 0x0);
        gbc.writeMem(0xad16, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa460);
        EXPECT(gbc.pc(), 0xad18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad16), 0xcb);
        EXPECT(gbc.readMem(0xad17), 0x20);
        // CB 20 029F
        gbc.setState(0x94be, 0xdc95, 0x5ca0, 0xd083, 0x54e6, 0x8bfe, 0x0, 0x1);
        gbc.writeMem(0x94be, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xdc95);
        EXPECT(gbc.pc(), 0x94c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94be), 0xcb);
        EXPECT(gbc.readMem(0x94bf), 0x20);
        // CB 20 02A0
        gbc.setState(0x7edb, 0x1c05, 0x6160, 0x8834, 0x7be9, 0x8a64, 0x0, 0x1);
        gbc.writeMem(0x7edb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x1c05);
        EXPECT(gbc.pc(), 0x7edd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 02A2
        gbc.setState(0x6949, 0xd04c, 0xffb0, 0x2d4d, 0x4ea4, 0x1018, 0x0, 0x0);
        gbc.writeMem(0x6949, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd04c);
        EXPECT(gbc.pc(), 0x694b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 02A3
        gbc.setState(0x7275, 0xa393, 0xe7b0, 0xa67a, 0x2591, 0x8386, 0x0, 0x1);
        gbc.writeMem(0x7275, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa393);
        EXPECT(gbc.pc(), 0x7277);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 02A4
        gbc.setState(0xbcd6, 0xebb1, 0xee0, 0x1d08, 0xd9b1, 0xf02c, 0x1, 0x1);
        gbc.writeMem(0xbcd6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xebb1);
        EXPECT(gbc.pc(), 0xbcd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcd6), 0xcb);
        EXPECT(gbc.readMem(0xbcd7), 0x20);
        // CB 20 02A5
        gbc.setState(0xac98, 0xb593, 0x7750, 0xfdc0, 0x8d29, 0x4981, 0x0, 0x0);
        gbc.writeMem(0xac98, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xb593);
        EXPECT(gbc.pc(), 0xac9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac98), 0xcb);
        EXPECT(gbc.readMem(0xac99), 0x20);
        // CB 20 02A6
        gbc.setState(0xc3da, 0x7169, 0x4f50, 0x66ab, 0xbf1e, 0x1ff9, 0x0, 0x0);
        gbc.writeMem(0xc3da, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7169);
        EXPECT(gbc.pc(), 0xc3dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3da), 0xcb);
        EXPECT(gbc.readMem(0xc3db), 0x20);
        // CB 20 02A7
        gbc.setState(0x2bc3, 0x697c, 0xfcd0, 0x15c8, 0x1576, 0x8108, 0x1, 0x1);
        gbc.writeMem(0x2bc3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x697c);
        EXPECT(gbc.pc(), 0x2bc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 02A8
        gbc.setState(0xa767, 0x7eb4, 0x4920, 0x7e6e, 0x8733, 0x7c57, 0x1, 0x1);
        gbc.writeMem(0xa767, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7eb4);
        EXPECT(gbc.pc(), 0xa769);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa767), 0xcb);
        EXPECT(gbc.readMem(0xa768), 0x20);
        // CB 20 02A9
        gbc.setState(0xb47f, 0x802a, 0xebf0, 0xdc2, 0x2231, 0xb538, 0x1, 0x0);
        gbc.writeMem(0xb47f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x802a);
        EXPECT(gbc.pc(), 0xb481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb47f), 0xcb);
        EXPECT(gbc.readMem(0xb480), 0x20);
        // CB 20 02AA
        gbc.setState(0x1c3c, 0xd5b8, 0x41a0, 0x2937, 0xd470, 0x2a71, 0x1, 0x1);
        gbc.writeMem(0x1c3c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd5b8);
        EXPECT(gbc.pc(), 0x1c3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 02AB
        gbc.setState(0x1d51, 0xd05, 0x1150, 0x26fc, 0x32f9, 0xfc88, 0x1, 0x0);
        gbc.writeMem(0x1d51, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd05);
        EXPECT(gbc.pc(), 0x1d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 02AC
        gbc.setState(0xd5c6, 0x4cd6, 0x3ba0, 0x5e91, 0xc9ef, 0x1d66, 0x1, 0x1);
        gbc.writeMem(0xd5c6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4cd6);
        EXPECT(gbc.pc(), 0xd5c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5c6), 0xcb);
        EXPECT(gbc.readMem(0xd5c7), 0x20);
        // CB 20 02AD
        gbc.setState(0x5b55, 0xa052, 0xf350, 0x75bc, 0xfc0b, 0x4a3, 0x1, 0x0);
        gbc.writeMem(0x5b55, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa052);
        EXPECT(gbc.pc(), 0x5b57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 02AE
        gbc.setState(0xbc51, 0x31b, 0xf540, 0x13c, 0x4750, 0x4c0f, 0x1, 0x1);
        gbc.writeMem(0xbc51, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x31b);
        EXPECT(gbc.pc(), 0xbc53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc51), 0xcb);
        EXPECT(gbc.readMem(0xbc52), 0x20);
        // CB 20 02AF
        gbc.setState(0xac66, 0x543, 0x4260, 0x7335, 0x3676, 0x7b5b, 0x1, 0x0);
        gbc.writeMem(0xac66, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x543);
        EXPECT(gbc.pc(), 0xac68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac66), 0xcb);
        EXPECT(gbc.readMem(0xac67), 0x20);
        // CB 20 02B1
        gbc.setState(0x15f9, 0x9d40, 0x8540, 0x671c, 0xb79, 0xacde, 0x0, 0x1);
        gbc.writeMem(0x15f9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x9d40);
        EXPECT(gbc.pc(), 0x15fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 02B2
        gbc.setState(0x98f2, 0xfe0, 0x8330, 0xfe85, 0xcaa, 0x95cd, 0x0, 0x1);
        gbc.writeMem(0x98f2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xfe0);
        EXPECT(gbc.pc(), 0x98f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98f2), 0xcb);
        EXPECT(gbc.readMem(0x98f3), 0x20);
        // CB 20 02B3
        gbc.setState(0x6337, 0xece, 0x88e0, 0x60e0, 0xc171, 0xe6b3, 0x1, 0x0);
        gbc.writeMem(0x6337, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xece);
        EXPECT(gbc.pc(), 0x6339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 02B5
        gbc.setState(0x965d, 0x2b4, 0xc2d0, 0x831e, 0x42c7, 0x961c, 0x0, 0x1);
        gbc.writeMem(0x965d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2b4);
        EXPECT(gbc.pc(), 0x965f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x965d), 0xcb);
        EXPECT(gbc.readMem(0x965e), 0x20);
        // CB 20 02B7
        gbc.setState(0xa1b1, 0xee2c, 0xad60, 0x5281, 0x3a2a, 0xfcae, 0x1, 0x1);
        gbc.writeMem(0xa1b1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xee2c);
        EXPECT(gbc.pc(), 0xa1b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1b1), 0xcb);
        EXPECT(gbc.readMem(0xa1b2), 0x20);
        // CB 20 02B8
        gbc.setState(0x10be, 0xc10, 0xd010, 0xd316, 0x6b67, 0xce15, 0x1, 0x1);
        gbc.writeMem(0x10be, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc10);
        EXPECT(gbc.pc(), 0x10c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 02B9
        gbc.setState(0x1f7d, 0x97a7, 0x21e0, 0x50c7, 0x9e55, 0xaf62, 0x0, 0x1);
        gbc.writeMem(0x1f7d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x97a7);
        EXPECT(gbc.pc(), 0x1f7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 02BA
        gbc.setState(0xd9ba, 0x5158, 0x2a70, 0x2bb5, 0x58f2, 0x47e6, 0x1, 0x0);
        gbc.writeMem(0xd9ba, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5158);
        EXPECT(gbc.pc(), 0xd9bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ba), 0xcb);
        EXPECT(gbc.readMem(0xd9bb), 0x20);
        // CB 20 02BB
        gbc.setState(0xd15d, 0xbaed, 0xad0, 0x17b8, 0x72e8, 0x229c, 0x1, 0x1);
        gbc.writeMem(0xd15d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xbaed);
        EXPECT(gbc.pc(), 0xd15f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd15d), 0xcb);
        EXPECT(gbc.readMem(0xd15e), 0x20);
        // CB 20 02BC
        gbc.setState(0x2a74, 0x691e, 0x3680, 0x2503, 0xee60, 0xee73, 0x1, 0x0);
        gbc.writeMem(0x2a74, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x691e);
        EXPECT(gbc.pc(), 0x2a76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 02BD
        gbc.setState(0xef8f, 0x3bc2, 0xa70, 0xb211, 0xe71, 0xb714, 0x0, 0x0);
        gbc.writeMem(0xef8f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3bc2);
        EXPECT(gbc.pc(), 0xef91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef8f), 0xcb);
        EXPECT(gbc.readMem(0xef90), 0x20);
        // CB 20 02BE
        gbc.setState(0x1f41, 0xc3bb, 0xb170, 0x2844, 0xee0, 0x8ca3, 0x1, 0x1);
        gbc.writeMem(0x1f41, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc3bb);
        EXPECT(gbc.pc(), 0x1f43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 02C0
        gbc.setState(0x95a1, 0xd0c2, 0xf5d0, 0x177f, 0x1b23, 0x6150, 0x1, 0x0);
        gbc.writeMem(0x95a1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xd0c2);
        EXPECT(gbc.pc(), 0x95a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95a1), 0xcb);
        EXPECT(gbc.readMem(0x95a2), 0x20);
        // CB 20 02C1
        gbc.setState(0xcac7, 0x98f5, 0x8bd0, 0xf000, 0xb479, 0x28a2, 0x1, 0x0);
        gbc.writeMem(0xcac7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x98f5);
        EXPECT(gbc.pc(), 0xcac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcac7), 0xcb);
        EXPECT(gbc.readMem(0xcac8), 0x20);
        // CB 20 02C3
        gbc.setState(0xd59, 0xa9c3, 0x5eb0, 0x978c, 0xb26d, 0xb3d1, 0x0, 0x1);
        gbc.writeMem(0xd59, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xa9c3);
        EXPECT(gbc.pc(), 0xd5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 02C5
        gbc.setState(0xbdc3, 0x7516, 0x7bb0, 0x7abd, 0xafae, 0x6c88, 0x0, 0x1);
        gbc.writeMem(0xbdc3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x7516);
        EXPECT(gbc.pc(), 0xbdc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdc3), 0xcb);
        EXPECT(gbc.readMem(0xbdc4), 0x20);
        // CB 20 02C6
        gbc.setState(0x6e51, 0xc692, 0xabc0, 0x23ab, 0xa15d, 0x782e, 0x0, 0x0);
        gbc.writeMem(0x6e51, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc692);
        EXPECT(gbc.pc(), 0x6e53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 02C7
        gbc.setState(0xae65, 0xbfb6, 0x60, 0x9efd, 0xd35d, 0x681e, 0x0, 0x0);
        gbc.writeMem(0xae65, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xbfb6);
        EXPECT(gbc.pc(), 0xae67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae65), 0xcb);
        EXPECT(gbc.readMem(0xae66), 0x20);
        // CB 20 02C8
        gbc.setState(0xaaa1, 0xd8c4, 0x9db0, 0xa6ca, 0xe216, 0x634a, 0x1, 0x1);
        gbc.writeMem(0xaaa1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd8c4);
        EXPECT(gbc.pc(), 0xaaa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaa1), 0xcb);
        EXPECT(gbc.readMem(0xaaa2), 0x20);
        // CB 20 02C9
        gbc.setState(0xa1ac, 0xa495, 0xc440, 0x58f1, 0xd22e, 0x84c3, 0x1, 0x0);
        gbc.writeMem(0xa1ac, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa495);
        EXPECT(gbc.pc(), 0xa1ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1ac), 0xcb);
        EXPECT(gbc.readMem(0xa1ad), 0x20);
        // CB 20 02CA
        gbc.setState(0x7e8c, 0xd689, 0xd550, 0x2d5, 0x7705, 0x754f, 0x0, 0x1);
        gbc.writeMem(0x7e8c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd689);
        EXPECT(gbc.pc(), 0x7e8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 02CB
        gbc.setState(0x6103, 0xc82a, 0xb50, 0xfbeb, 0x9287, 0xea5d, 0x1, 0x1);
        gbc.writeMem(0x6103, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc82a);
        EXPECT(gbc.pc(), 0x6105);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 02CD
        gbc.setState(0x1b84, 0x7d04, 0x3870, 0xe242, 0xb276, 0xfed, 0x1, 0x1);
        gbc.writeMem(0x1b84, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7d04);
        EXPECT(gbc.pc(), 0x1b86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 02CE
        gbc.setState(0x59ce, 0xd44c, 0x6c70, 0xfbeb, 0x5f6e, 0x3d4d, 0x1, 0x0);
        gbc.writeMem(0x59ce, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd44c);
        EXPECT(gbc.pc(), 0x59d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 02CF
        gbc.setState(0x75c4, 0x70d6, 0xaa0, 0x9075, 0x239f, 0x1cea, 0x1, 0x0);
        gbc.writeMem(0x75c4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x70d6);
        EXPECT(gbc.pc(), 0x75c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 02D0
        gbc.setState(0x917, 0xb618, 0xe0f0, 0xefb2, 0x590d, 0xafe1, 0x1, 0x1);
        gbc.writeMem(0x917, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb618);
        EXPECT(gbc.pc(), 0x919);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 02D1
        gbc.setState(0x8834, 0x51af, 0x60, 0x291a, 0x4185, 0x59a1, 0x1, 0x0);
        gbc.writeMem(0x8834, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x51af);
        EXPECT(gbc.pc(), 0x8836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8834), 0xcb);
        EXPECT(gbc.readMem(0x8835), 0x20);
        // CB 20 02D2
        gbc.setState(0xa39a, 0x84e0, 0x9790, 0x214d, 0x5255, 0x8e4b, 0x1, 0x0);
        gbc.writeMem(0xa39a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x84e0);
        EXPECT(gbc.pc(), 0xa39c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa39a), 0xcb);
        EXPECT(gbc.readMem(0xa39b), 0x20);
        // CB 20 02D3
        gbc.setState(0xe110, 0x67e4, 0x17e0, 0xb4fe, 0xc97f, 0x66ba, 0x0, 0x0);
        gbc.writeMem(0xe110, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x67e4);
        EXPECT(gbc.pc(), 0xe112);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe110), 0xcb);
        EXPECT(gbc.readMem(0xe111), 0x20);
        // CB 20 02D4
        gbc.setState(0x8c71, 0x399a, 0x4840, 0xa001, 0x3a48, 0x556b, 0x1, 0x0);
        gbc.writeMem(0x8c71, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x399a);
        EXPECT(gbc.pc(), 0x8c73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c71), 0xcb);
        EXPECT(gbc.readMem(0x8c72), 0x20);
        // CB 20 02D5
        gbc.setState(0x20c7, 0x7e7a, 0x1090, 0x9ee0, 0xb47a, 0x3aa9, 0x1, 0x0);
        gbc.writeMem(0x20c7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7e7a);
        EXPECT(gbc.pc(), 0x20c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 02D6
        gbc.setState(0xb0dd, 0xd9bc, 0x1860, 0x3163, 0x71ec, 0x620f, 0x0, 0x1);
        gbc.writeMem(0xb0dd, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd9bc);
        EXPECT(gbc.pc(), 0xb0df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0dd), 0xcb);
        EXPECT(gbc.readMem(0xb0de), 0x20);
        // CB 20 02D7
        gbc.setState(0xa6c1, 0x9566, 0x4b30, 0xa2f2, 0x407d, 0xcc0e, 0x1, 0x1);
        gbc.writeMem(0xa6c1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9566);
        EXPECT(gbc.pc(), 0xa6c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6c1), 0xcb);
        EXPECT(gbc.readMem(0xa6c2), 0x20);
        // CB 20 02D8
        gbc.setState(0x67e8, 0x3181, 0xea20, 0x68fe, 0x6b3a, 0xebc4, 0x0, 0x0);
        gbc.writeMem(0x67e8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3181);
        EXPECT(gbc.pc(), 0x67ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 02D9
        gbc.setState(0xd07f, 0x644f, 0x12e0, 0xddf5, 0x976a, 0x69eb, 0x0, 0x0);
        gbc.writeMem(0xd07f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x644f);
        EXPECT(gbc.pc(), 0xd081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd07f), 0xcb);
        EXPECT(gbc.readMem(0xd080), 0x20);
        // CB 20 02DA
        gbc.setState(0xa691, 0x8f5f, 0x5fe0, 0xadfe, 0xdd08, 0xf6fe, 0x0, 0x0);
        gbc.writeMem(0xa691, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8f5f);
        EXPECT(gbc.pc(), 0xa693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa691), 0xcb);
        EXPECT(gbc.readMem(0xa692), 0x20);
        // CB 20 02DB
        gbc.setState(0xe3e5, 0x16da, 0xe3a0, 0xa273, 0xc09d, 0xe125, 0x1, 0x0);
        gbc.writeMem(0xe3e5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x16da);
        EXPECT(gbc.pc(), 0xe3e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3e5), 0xcb);
        EXPECT(gbc.readMem(0xe3e6), 0x20);
        // CB 20 02DD
        gbc.setState(0xd53d, 0x2492, 0xad60, 0x3019, 0xfaf1, 0x7031, 0x0, 0x0);
        gbc.writeMem(0xd53d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2492);
        EXPECT(gbc.pc(), 0xd53f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd53d), 0xcb);
        EXPECT(gbc.readMem(0xd53e), 0x20);
        // CB 20 02DE
        gbc.setState(0x60b8, 0x31fb, 0x7cc0, 0x152, 0xe487, 0x9332, 0x1, 0x1);
        gbc.writeMem(0x60b8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x31fb);
        EXPECT(gbc.pc(), 0x60ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 02DF
        gbc.setState(0x4143, 0xd786, 0x3630, 0xa957, 0xb95d, 0xaab9, 0x1, 0x1);
        gbc.writeMem(0x4143, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xd786);
        EXPECT(gbc.pc(), 0x4145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 02E0
        gbc.setState(0x66f7, 0x7c4, 0x95d0, 0xc6a5, 0x4fb4, 0x599a, 0x0, 0x1);
        gbc.writeMem(0x66f7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7c4);
        EXPECT(gbc.pc(), 0x66f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 02E1
        gbc.setState(0xad1, 0x25c9, 0xe170, 0x3dbe, 0xef28, 0xef74, 0x0, 0x1);
        gbc.writeMem(0xad1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x25c9);
        EXPECT(gbc.pc(), 0xad3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 02E2
        gbc.setState(0x2bce, 0xf219, 0x3ad0, 0x8d84, 0xd6d, 0x4470, 0x1, 0x0);
        gbc.writeMem(0x2bce, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf219);
        EXPECT(gbc.pc(), 0x2bd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 02E3
        gbc.setState(0xba19, 0x4ec0, 0x3df0, 0x5bf6, 0xb511, 0xc25e, 0x0, 0x1);
        gbc.writeMem(0xba19, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4ec0);
        EXPECT(gbc.pc(), 0xba1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba19), 0xcb);
        EXPECT(gbc.readMem(0xba1a), 0x20);
        // CB 20 02E4
        gbc.setState(0x6362, 0x28a8, 0xa5a0, 0xd83b, 0x61dd, 0xcb5a, 0x1, 0x0);
        gbc.writeMem(0x6362, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x28a8);
        EXPECT(gbc.pc(), 0x6364);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 02E5
        gbc.setState(0xa4f4, 0x5ed, 0x29d0, 0x75d4, 0xf561, 0xe931, 0x0, 0x0);
        gbc.writeMem(0xa4f4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5ed);
        EXPECT(gbc.pc(), 0xa4f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4f4), 0xcb);
        EXPECT(gbc.readMem(0xa4f5), 0x20);
        // CB 20 02E6
        gbc.setState(0x9d7b, 0x3b00, 0xc80, 0x604b, 0xe917, 0xb2eb, 0x0, 0x0);
        gbc.writeMem(0x9d7b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3b00);
        EXPECT(gbc.pc(), 0x9d7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d7b), 0xcb);
        EXPECT(gbc.readMem(0x9d7c), 0x20);
        // CB 20 02E7
        gbc.setState(0x57ca, 0xc814, 0xdf00, 0xc557, 0xc58e, 0xf371, 0x0, 0x0);
        gbc.writeMem(0x57ca, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc814);
        EXPECT(gbc.pc(), 0x57cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 02E8
        gbc.setState(0x3b04, 0xd89, 0x5140, 0x5a80, 0x13e3, 0x5cd7, 0x1, 0x1);
        gbc.writeMem(0x3b04, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd89);
        EXPECT(gbc.pc(), 0x3b06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 02E9
        gbc.setState(0x20a3, 0x35bc, 0x6ff0, 0x9ebb, 0x1b9e, 0xacad, 0x1, 0x0);
        gbc.writeMem(0x20a3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x35bc);
        EXPECT(gbc.pc(), 0x20a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 02EA
        gbc.setState(0x806c, 0x1bc, 0xfbf0, 0xeac7, 0xddfd, 0xa5e, 0x0, 0x0);
        gbc.writeMem(0x806c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1bc);
        EXPECT(gbc.pc(), 0x806e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x806c), 0xcb);
        EXPECT(gbc.readMem(0x806d), 0x20);
        // CB 20 02EB
        gbc.setState(0x4071, 0x545c, 0xf340, 0xff52, 0x77be, 0xf67d, 0x0, 0x0);
        gbc.writeMem(0x4071, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x545c);
        EXPECT(gbc.pc(), 0x4073);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 02EC
        gbc.setState(0xaf29, 0x1d98, 0x4120, 0x50c3, 0x7988, 0xbb4e, 0x0, 0x0);
        gbc.writeMem(0xaf29, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1d98);
        EXPECT(gbc.pc(), 0xaf2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf29), 0xcb);
        EXPECT(gbc.readMem(0xaf2a), 0x20);
        // CB 20 02ED
        gbc.setState(0x555f, 0xc0cf, 0xfee0, 0x9e20, 0xc4e5, 0xb1ed, 0x1, 0x0);
        gbc.writeMem(0x555f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc0cf);
        EXPECT(gbc.pc(), 0x5561);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 02EE
        gbc.setState(0xa39c, 0x8a95, 0x1f50, 0xdff8, 0xe8c5, 0x24fa, 0x0, 0x0);
        gbc.writeMem(0xa39c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8a95);
        EXPECT(gbc.pc(), 0xa39e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa39c), 0xcb);
        EXPECT(gbc.readMem(0xa39d), 0x20);
        // CB 20 02EF
        gbc.setState(0x95dd, 0x50ad, 0x2610, 0x4d18, 0xcfd0, 0x38fe, 0x1, 0x0);
        gbc.writeMem(0x95dd, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x50ad);
        EXPECT(gbc.pc(), 0x95df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95dd), 0xcb);
        EXPECT(gbc.readMem(0x95de), 0x20);
        // CB 20 02F0
        gbc.setState(0xe97f, 0x60d8, 0x2100, 0xfd0, 0x7377, 0xd838, 0x1, 0x0);
        gbc.writeMem(0xe97f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x60d8);
        EXPECT(gbc.pc(), 0xe981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe97f), 0xcb);
        EXPECT(gbc.readMem(0xe980), 0x20);
        // CB 20 02F1
        gbc.setState(0x5b5, 0x64fe, 0xb0b0, 0xe987, 0xc2df, 0x7a68, 0x1, 0x0);
        gbc.writeMem(0x5b5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x64fe);
        EXPECT(gbc.pc(), 0x5b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 02F2
        gbc.setState(0x4f0f, 0x181a, 0x6150, 0xf620, 0x2109, 0x506f, 0x1, 0x0);
        gbc.writeMem(0x4f0f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x181a);
        EXPECT(gbc.pc(), 0x4f11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 02F3
        gbc.setState(0xb873, 0xdc9b, 0x2320, 0xb3f6, 0x72e7, 0xdded, 0x1, 0x1);
        gbc.writeMem(0xb873, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xdc9b);
        EXPECT(gbc.pc(), 0xb875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb873), 0xcb);
        EXPECT(gbc.readMem(0xb874), 0x20);
        // CB 20 02F5
        gbc.setState(0x816f, 0x2dbe, 0xede0, 0x86c5, 0xdb16, 0x7a4c, 0x1, 0x0);
        gbc.writeMem(0x816f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x2dbe);
        EXPECT(gbc.pc(), 0x8171);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x816f), 0xcb);
        EXPECT(gbc.readMem(0x8170), 0x20);
        // CB 20 02F6
        gbc.setState(0xa152, 0x9153, 0xb320, 0x530a, 0x978e, 0x67b4, 0x1, 0x0);
        gbc.writeMem(0xa152, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9153);
        EXPECT(gbc.pc(), 0xa154);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa152), 0xcb);
        EXPECT(gbc.readMem(0xa153), 0x20);
        // CB 20 02F7
        gbc.setState(0x80bf, 0x581f, 0x9c80, 0x80e, 0x2a56, 0x99b9, 0x1, 0x1);
        gbc.writeMem(0x80bf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x581f);
        EXPECT(gbc.pc(), 0x80c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80bf), 0xcb);
        EXPECT(gbc.readMem(0x80c0), 0x20);
        // CB 20 02F8
        gbc.setState(0xe692, 0x6fad, 0xe390, 0x11bc, 0x6cb8, 0x6b70, 0x1, 0x1);
        gbc.writeMem(0xe692, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6fad);
        EXPECT(gbc.pc(), 0xe694);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe692), 0xcb);
        EXPECT(gbc.readMem(0xe693), 0x20);
        // CB 20 02F9
        gbc.setState(0x25b8, 0xc5b3, 0x630, 0xc140, 0xc482, 0xafa0, 0x1, 0x0);
        gbc.writeMem(0x25b8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc5b3);
        EXPECT(gbc.pc(), 0x25ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 02FA
        gbc.setState(0x12f0, 0xf4d2, 0xcaa0, 0x6d5b, 0x67a, 0x8784, 0x0, 0x0);
        gbc.writeMem(0x12f0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf4d2);
        EXPECT(gbc.pc(), 0x12f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 02FB
        gbc.setState(0x2564, 0x55d6, 0xce00, 0x7508, 0x4958, 0x264a, 0x0, 0x1);
        gbc.writeMem(0x2564, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x55d6);
        EXPECT(gbc.pc(), 0x2566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 02FC
        gbc.setState(0xe11f, 0xc26, 0x6150, 0xdf24, 0x74e4, 0x33f5, 0x1, 0x0);
        gbc.writeMem(0xe11f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc26);
        EXPECT(gbc.pc(), 0xe121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe11f), 0xcb);
        EXPECT(gbc.readMem(0xe120), 0x20);
        // CB 20 02FD
        gbc.setState(0x364b, 0x3351, 0xea60, 0x139, 0x6899, 0x1d98, 0x1, 0x0);
        gbc.writeMem(0x364b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3351);
        EXPECT(gbc.pc(), 0x364d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 02FE
        gbc.setState(0xbe27, 0xee2, 0x8670, 0xf029, 0x9005, 0x27e4, 0x1, 0x1);
        gbc.writeMem(0xbe27, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xee2);
        EXPECT(gbc.pc(), 0xbe29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe27), 0xcb);
        EXPECT(gbc.readMem(0xbe28), 0x20);
        // CB 20 02FF
        gbc.setState(0x174f, 0xaa5b, 0x80b0, 0x45e, 0x274b, 0x9315, 0x1, 0x0);
        gbc.writeMem(0x174f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xaa5b);
        EXPECT(gbc.pc(), 0x1751);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0300
        gbc.setState(0x170, 0x7ad, 0xedf0, 0x6247, 0x30d4, 0xa7d3, 0x0, 0x0);
        gbc.writeMem(0x170, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7ad);
        EXPECT(gbc.pc(), 0x172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0301
        gbc.setState(0x6d13, 0xd9f2, 0x8e60, 0xe1d7, 0x1e51, 0x6b6, 0x0, 0x1);
        gbc.writeMem(0x6d13, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd9f2);
        EXPECT(gbc.pc(), 0x6d15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0302
        gbc.setState(0x1e6, 0x9154, 0x86f0, 0x1ddc, 0x3a62, 0x5cb1, 0x1, 0x1);
        gbc.writeMem(0x1e6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9154);
        EXPECT(gbc.pc(), 0x1e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0303
        gbc.setState(0x4b89, 0x914d, 0xbf0, 0x3ccc, 0xb7cd, 0x6a69, 0x0, 0x1);
        gbc.writeMem(0x4b89, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x914d);
        EXPECT(gbc.pc(), 0x4b8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0304
        gbc.setState(0x96c6, 0xeb0a, 0x6fa0, 0x8496, 0xbc4a, 0x3012, 0x1, 0x1);
        gbc.writeMem(0x96c6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xeb0a);
        EXPECT(gbc.pc(), 0x96c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96c6), 0xcb);
        EXPECT(gbc.readMem(0x96c7), 0x20);
        // CB 20 0305
        gbc.setState(0xb138, 0x3bfc, 0x2080, 0x32f2, 0xa083, 0x676d, 0x0, 0x0);
        gbc.writeMem(0xb138, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3bfc);
        EXPECT(gbc.pc(), 0xb13a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb138), 0xcb);
        EXPECT(gbc.readMem(0xb139), 0x20);
        // CB 20 0306
        gbc.setState(0xc02e, 0xd0fa, 0xc070, 0x829f, 0x7783, 0xd3a0, 0x0, 0x0);
        gbc.writeMem(0xc02e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd0fa);
        EXPECT(gbc.pc(), 0xc030);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc02e), 0xcb);
        EXPECT(gbc.readMem(0xc02f), 0x20);
        // CB 20 0307
        gbc.setState(0x7704, 0xc836, 0x23d0, 0xdacd, 0x569c, 0xee28, 0x0, 0x1);
        gbc.writeMem(0x7704, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc836);
        EXPECT(gbc.pc(), 0x7706);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0308
        gbc.setState(0xe06b, 0x2f5, 0x1db0, 0x9710, 0xfb56, 0x1f0d, 0x0, 0x0);
        gbc.writeMem(0xe06b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2f5);
        EXPECT(gbc.pc(), 0xe06d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe06b), 0xcb);
        EXPECT(gbc.readMem(0xe06c), 0x20);
        // CB 20 0309
        gbc.setState(0xa5d2, 0xd355, 0x4580, 0x1e3a, 0xf84e, 0x851b, 0x0, 0x1);
        gbc.writeMem(0xa5d2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xd355);
        EXPECT(gbc.pc(), 0xa5d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5d2), 0xcb);
        EXPECT(gbc.readMem(0xa5d3), 0x20);
        // CB 20 030A
        gbc.setState(0x2b7d, 0xd3de, 0x8d00, 0x2533, 0xfb90, 0xd464, 0x0, 0x1);
        gbc.writeMem(0x2b7d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd3de);
        EXPECT(gbc.pc(), 0x2b7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 030B
        gbc.setState(0x2a8c, 0xbe20, 0x220, 0x279b, 0x22b8, 0x133e, 0x1, 0x1);
        gbc.writeMem(0x2a8c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xbe20);
        EXPECT(gbc.pc(), 0x2a8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 030C
        gbc.setState(0x67fa, 0xd19b, 0x9c90, 0x5c46, 0x884, 0xe401, 0x1, 0x0);
        gbc.writeMem(0x67fa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd19b);
        EXPECT(gbc.pc(), 0x67fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 030D
        gbc.setState(0xeea9, 0x29d4, 0xd320, 0x31db, 0x6a61, 0x769c, 0x1, 0x0);
        gbc.writeMem(0xeea9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x29d4);
        EXPECT(gbc.pc(), 0xeeab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeea9), 0xcb);
        EXPECT(gbc.readMem(0xeeaa), 0x20);
        // CB 20 030E
        gbc.setState(0x6c2f, 0xacb6, 0x4e10, 0x4828, 0x5a83, 0x5d8b, 0x0, 0x1);
        gbc.writeMem(0x6c2f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xacb6);
        EXPECT(gbc.pc(), 0x6c31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0310
        gbc.setState(0x425c, 0xb10, 0xc8e0, 0xd9fd, 0x8914, 0xa18, 0x0, 0x0);
        gbc.writeMem(0x425c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb10);
        EXPECT(gbc.pc(), 0x425e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0311
        gbc.setState(0xe96e, 0xcf5, 0x6a10, 0x4588, 0x5926, 0x5825, 0x0, 0x0);
        gbc.writeMem(0xe96e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xcf5);
        EXPECT(gbc.pc(), 0xe970);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe96e), 0xcb);
        EXPECT(gbc.readMem(0xe96f), 0x20);
        // CB 20 0312
        gbc.setState(0x5463, 0xbff4, 0xccf0, 0x81bc, 0xdb1d, 0x1446, 0x1, 0x0);
        gbc.writeMem(0x5463, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xbff4);
        EXPECT(gbc.pc(), 0x5465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0313
        gbc.setState(0x871e, 0x2938, 0x18d0, 0x6ed, 0x2585, 0xc862, 0x0, 0x1);
        gbc.writeMem(0x871e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2938);
        EXPECT(gbc.pc(), 0x8720);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x871e), 0xcb);
        EXPECT(gbc.readMem(0x871f), 0x20);
        // CB 20 0314
        gbc.setState(0x8168, 0xf47d, 0x9fa0, 0xaed6, 0xb9e1, 0x16b7, 0x1, 0x1);
        gbc.writeMem(0x8168, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf47d);
        EXPECT(gbc.pc(), 0x816a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8168), 0xcb);
        EXPECT(gbc.readMem(0x8169), 0x20);
        // CB 20 0315
        gbc.setState(0x5181, 0xb8e7, 0xa9d0, 0x95b2, 0x71a7, 0x8a7d, 0x1, 0x0);
        gbc.writeMem(0x5181, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb8e7);
        EXPECT(gbc.pc(), 0x5183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0316
        gbc.setState(0x2598, 0xbc73, 0xfa00, 0x5e5d, 0xb58c, 0x4562, 0x0, 0x1);
        gbc.writeMem(0x2598, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xbc73);
        EXPECT(gbc.pc(), 0x259a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0317
        gbc.setState(0x393c, 0x18e0, 0x6d90, 0x277, 0xfed2, 0x855a, 0x1, 0x0);
        gbc.writeMem(0x393c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x18e0);
        EXPECT(gbc.pc(), 0x393e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0318
        gbc.setState(0xe9ce, 0x237b, 0x1860, 0xf450, 0xfdb3, 0xae75, 0x0, 0x1);
        gbc.writeMem(0xe9ce, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x237b);
        EXPECT(gbc.pc(), 0xe9d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9ce), 0xcb);
        EXPECT(gbc.readMem(0xe9cf), 0x20);
        // CB 20 0319
        gbc.setState(0x29fb, 0x7a89, 0xd700, 0x9249, 0x1077, 0xec13, 0x0, 0x0);
        gbc.writeMem(0x29fb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7a89);
        EXPECT(gbc.pc(), 0x29fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 031A
        gbc.setState(0xdb60, 0xbab2, 0xb50, 0x6428, 0x4aec, 0x744, 0x1, 0x1);
        gbc.writeMem(0xdb60, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xbab2);
        EXPECT(gbc.pc(), 0xdb62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb60), 0xcb);
        EXPECT(gbc.readMem(0xdb61), 0x20);
        // CB 20 031B
        gbc.setState(0x166a, 0xfb26, 0x59a0, 0xe328, 0x5e07, 0xc6ac, 0x1, 0x0);
        gbc.writeMem(0x166a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xfb26);
        EXPECT(gbc.pc(), 0x166c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 031C
        gbc.setState(0x470a, 0xb62d, 0x9510, 0x5cbf, 0xb2b0, 0x182e, 0x1, 0x1);
        gbc.writeMem(0x470a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb62d);
        EXPECT(gbc.pc(), 0x470c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 031D
        gbc.setState(0xc2a8, 0x16b, 0x6510, 0x5501, 0x89be, 0x6a10, 0x1, 0x1);
        gbc.writeMem(0xc2a8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x16b);
        EXPECT(gbc.pc(), 0xc2aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2a8), 0xcb);
        EXPECT(gbc.readMem(0xc2a9), 0x20);
        // CB 20 031E
        gbc.setState(0x6ba5, 0x33ae, 0x740, 0xf697, 0x45c3, 0x17c7, 0x0, 0x1);
        gbc.writeMem(0x6ba5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x33ae);
        EXPECT(gbc.pc(), 0x6ba7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 031F
        gbc.setState(0xea3d, 0x9285, 0x3b40, 0x3d4, 0xfd1, 0x4e65, 0x1, 0x0);
        gbc.writeMem(0xea3d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9285);
        EXPECT(gbc.pc(), 0xea3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea3d), 0xcb);
        EXPECT(gbc.readMem(0xea3e), 0x20);
        // CB 20 0320
        gbc.setState(0x81f4, 0x36e0, 0xea70, 0xa344, 0x9614, 0x91dc, 0x0, 0x0);
        gbc.writeMem(0x81f4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x36e0);
        EXPECT(gbc.pc(), 0x81f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81f4), 0xcb);
        EXPECT(gbc.readMem(0x81f5), 0x20);
        // CB 20 0321
        gbc.setState(0xadf0, 0x6b2d, 0xc240, 0xa5db, 0xdf4, 0x9827, 0x0, 0x1);
        gbc.writeMem(0xadf0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x6b2d);
        EXPECT(gbc.pc(), 0xadf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf0), 0xcb);
        EXPECT(gbc.readMem(0xadf1), 0x20);
        // CB 20 0322
        gbc.setState(0x2588, 0x1882, 0xdd10, 0x9e9e, 0xa1de, 0xf418, 0x0, 0x1);
        gbc.writeMem(0x2588, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1882);
        EXPECT(gbc.pc(), 0x258a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0323
        gbc.setState(0xcd7c, 0x36d5, 0x1440, 0x66c4, 0x13d6, 0x2c2c, 0x1, 0x0);
        gbc.writeMem(0xcd7c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x36d5);
        EXPECT(gbc.pc(), 0xcd7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd7c), 0xcb);
        EXPECT(gbc.readMem(0xcd7d), 0x20);
        // CB 20 0324
        gbc.setState(0x688f, 0x18c4, 0x4ee0, 0x7e13, 0xd20c, 0xe4ec, 0x1, 0x1);
        gbc.writeMem(0x688f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x18c4);
        EXPECT(gbc.pc(), 0x6891);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0325
        gbc.setState(0xeb64, 0xd0cc, 0xf830, 0xf30, 0x8bad, 0xe70a, 0x1, 0x1);
        gbc.writeMem(0xeb64, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd0cc);
        EXPECT(gbc.pc(), 0xeb66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb64), 0xcb);
        EXPECT(gbc.readMem(0xeb65), 0x20);
        // CB 20 0326
        gbc.setState(0x3fa0, 0xfcdb, 0x7130, 0xe69d, 0x4959, 0x9128, 0x0, 0x1);
        gbc.writeMem(0x3fa0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xfcdb);
        EXPECT(gbc.pc(), 0x3fa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0328
        gbc.setState(0x8793, 0xc0b0, 0x2ad0, 0x48a2, 0x61b, 0xdddf, 0x1, 0x1);
        gbc.writeMem(0x8793, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc0b0);
        EXPECT(gbc.pc(), 0x8795);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8793), 0xcb);
        EXPECT(gbc.readMem(0x8794), 0x20);
        // CB 20 0329
        gbc.setState(0x4244, 0x43e4, 0x8bc0, 0xbb7d, 0xfb4, 0xac2f, 0x1, 0x1);
        gbc.writeMem(0x4244, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x43e4);
        EXPECT(gbc.pc(), 0x4246);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 032A
        gbc.setState(0x7ad7, 0x1fde, 0x7550, 0x2c8c, 0x2a49, 0x6394, 0x0, 0x0);
        gbc.writeMem(0x7ad7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1fde);
        EXPECT(gbc.pc(), 0x7ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 032B
        gbc.setState(0x2eaf, 0x1a4a, 0x79a0, 0x11fd, 0x472e, 0xc8b2, 0x1, 0x1);
        gbc.writeMem(0x2eaf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1a4a);
        EXPECT(gbc.pc(), 0x2eb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 032C
        gbc.setState(0x6401, 0x236a, 0xde80, 0xefad, 0x71b1, 0x1dd6, 0x1, 0x1);
        gbc.writeMem(0x6401, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x236a);
        EXPECT(gbc.pc(), 0x6403);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 032D
        gbc.setState(0xab65, 0xee63, 0xe660, 0xc13e, 0x2b5b, 0x759a, 0x1, 0x0);
        gbc.writeMem(0xab65, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xee63);
        EXPECT(gbc.pc(), 0xab67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab65), 0xcb);
        EXPECT(gbc.readMem(0xab66), 0x20);
        // CB 20 032E
        gbc.setState(0x70ab, 0xff20, 0x9580, 0xd09, 0xa543, 0xf863, 0x0, 0x0);
        gbc.writeMem(0x70ab, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xff20);
        EXPECT(gbc.pc(), 0x70ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 032F
        gbc.setState(0x4c82, 0x6a7d, 0x45f0, 0x2baa, 0x7700, 0xf7fa, 0x1, 0x1);
        gbc.writeMem(0x4c82, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6a7d);
        EXPECT(gbc.pc(), 0x4c84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0330
        gbc.setState(0x5472, 0x1c29, 0x1ad0, 0xdb5f, 0xf6a6, 0x53f3, 0x0, 0x1);
        gbc.writeMem(0x5472, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1c29);
        EXPECT(gbc.pc(), 0x5474);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0331
        gbc.setState(0x52e6, 0x2ae4, 0x8c0, 0xc0ef, 0x2449, 0xce5a, 0x0, 0x1);
        gbc.writeMem(0x52e6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2ae4);
        EXPECT(gbc.pc(), 0x52e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0332
        gbc.setState(0x89fb, 0xe4c0, 0x39f0, 0x688b, 0x8b4, 0x9752, 0x0, 0x0);
        gbc.writeMem(0x89fb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe4c0);
        EXPECT(gbc.pc(), 0x89fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89fb), 0xcb);
        EXPECT(gbc.readMem(0x89fc), 0x20);
        // CB 20 0333
        gbc.setState(0xaa07, 0x5039, 0xaf40, 0x7606, 0xce82, 0x5ae2, 0x0, 0x1);
        gbc.writeMem(0xaa07, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5039);
        EXPECT(gbc.pc(), 0xaa09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa07), 0xcb);
        EXPECT(gbc.readMem(0xaa08), 0x20);
        // CB 20 0334
        gbc.setState(0x543c, 0x86db, 0xb420, 0x982b, 0x2229, 0x2e0, 0x0, 0x1);
        gbc.writeMem(0x543c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x86db);
        EXPECT(gbc.pc(), 0x543e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0335
        gbc.setState(0xecb0, 0x9bdf, 0xcb60, 0xa713, 0x6101, 0xa2b3, 0x1, 0x1);
        gbc.writeMem(0xecb0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9bdf);
        EXPECT(gbc.pc(), 0xecb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecb0), 0xcb);
        EXPECT(gbc.readMem(0xecb1), 0x20);
        // CB 20 0336
        gbc.setState(0xc661, 0xc977, 0x5f0, 0xa612, 0xd6ba, 0xbfb6, 0x0, 0x0);
        gbc.writeMem(0xc661, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc977);
        EXPECT(gbc.pc(), 0xc663);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc661), 0xcb);
        EXPECT(gbc.readMem(0xc662), 0x20);
        // CB 20 0337
        gbc.setState(0xca72, 0xf6a2, 0x2b10, 0xe0d2, 0xd526, 0x84a7, 0x0, 0x1);
        gbc.writeMem(0xca72, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf6a2);
        EXPECT(gbc.pc(), 0xca74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca72), 0xcb);
        EXPECT(gbc.readMem(0xca73), 0x20);
        // CB 20 0339
        gbc.setState(0x33d0, 0x8b32, 0xace0, 0x2b94, 0x453, 0xeb67, 0x1, 0x1);
        gbc.writeMem(0x33d0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x8b32);
        EXPECT(gbc.pc(), 0x33d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 033A
        gbc.setState(0x908e, 0x95e, 0x3340, 0x731b, 0x637b, 0x4974, 0x0, 0x0);
        gbc.writeMem(0x908e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x95e);
        EXPECT(gbc.pc(), 0x9090);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x908e), 0xcb);
        EXPECT(gbc.readMem(0x908f), 0x20);
        // CB 20 033C
        gbc.setState(0x79a5, 0xff7c, 0x50c0, 0x7c0f, 0x9846, 0x9336, 0x1, 0x0);
        gbc.writeMem(0x79a5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xff7c);
        EXPECT(gbc.pc(), 0x79a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 033D
        gbc.setState(0x4c0c, 0xc4c8, 0xd5d0, 0x2101, 0x8504, 0xb5c9, 0x1, 0x0);
        gbc.writeMem(0x4c0c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc4c8);
        EXPECT(gbc.pc(), 0x4c0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 033E
        gbc.setState(0xe475, 0x9e33, 0xfa70, 0xe80b, 0xa136, 0x341f, 0x0, 0x1);
        gbc.writeMem(0xe475, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x9e33);
        EXPECT(gbc.pc(), 0xe477);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe475), 0xcb);
        EXPECT(gbc.readMem(0xe476), 0x20);
        // CB 20 033F
        gbc.setState(0x4259, 0xe60, 0xca10, 0x4414, 0xd545, 0x2d38, 0x1, 0x0);
        gbc.writeMem(0x4259, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe60);
        EXPECT(gbc.pc(), 0x425b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0340
        gbc.setState(0xcc8c, 0xb20f, 0xcb30, 0x1ab7, 0x647a, 0xb69c, 0x0, 0x1);
        gbc.writeMem(0xcc8c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb20f);
        EXPECT(gbc.pc(), 0xcc8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc8c), 0xcb);
        EXPECT(gbc.readMem(0xcc8d), 0x20);
        // CB 20 0341
        gbc.setState(0x7b8e, 0x2e02, 0x6170, 0x7cbe, 0x8e72, 0x2873, 0x0, 0x1);
        gbc.writeMem(0x7b8e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2e02);
        EXPECT(gbc.pc(), 0x7b90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0342
        gbc.setState(0xad34, 0xc95, 0x6280, 0x7947, 0x2833, 0x2ec0, 0x1, 0x0);
        gbc.writeMem(0xad34, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc95);
        EXPECT(gbc.pc(), 0xad36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad34), 0xcb);
        EXPECT(gbc.readMem(0xad35), 0x20);
        // CB 20 0343
        gbc.setState(0xdd43, 0x237f, 0x9710, 0x7099, 0x3569, 0x4c58, 0x1, 0x1);
        gbc.writeMem(0xdd43, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x237f);
        EXPECT(gbc.pc(), 0xdd45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd43), 0xcb);
        EXPECT(gbc.readMem(0xdd44), 0x20);
        // CB 20 0344
        gbc.setState(0x5dc5, 0x49d4, 0xff10, 0x524e, 0xf0b6, 0xc817, 0x1, 0x1);
        gbc.writeMem(0x5dc5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x49d4);
        EXPECT(gbc.pc(), 0x5dc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0345
        gbc.setState(0x8ce1, 0xa27c, 0x1c0, 0x484d, 0xa2f9, 0xa8e1, 0x1, 0x0);
        gbc.writeMem(0x8ce1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa27c);
        EXPECT(gbc.pc(), 0x8ce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ce1), 0xcb);
        EXPECT(gbc.readMem(0x8ce2), 0x20);
        // CB 20 0346
        gbc.setState(0x8e9d, 0x4b9f, 0xed80, 0x2775, 0x8d6c, 0x7734, 0x0, 0x0);
        gbc.writeMem(0x8e9d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4b9f);
        EXPECT(gbc.pc(), 0x8e9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e9d), 0xcb);
        EXPECT(gbc.readMem(0x8e9e), 0x20);
        // CB 20 0347
        gbc.setState(0x8459, 0xc026, 0x8c00, 0x8998, 0xd6b1, 0x9ae7, 0x1, 0x1);
        gbc.writeMem(0x8459, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc026);
        EXPECT(gbc.pc(), 0x845b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8459), 0xcb);
        EXPECT(gbc.readMem(0x845a), 0x20);
        // CB 20 0348
        gbc.setState(0x3f1, 0x5ea4, 0x2600, 0x53e9, 0xdd0b, 0xd676, 0x1, 0x0);
        gbc.writeMem(0x3f1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x5ea4);
        EXPECT(gbc.pc(), 0x3f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0349
        gbc.setState(0x67f3, 0x817b, 0x3680, 0xe6de, 0x2bf0, 0xca0c, 0x1, 0x0);
        gbc.writeMem(0x67f3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x817b);
        EXPECT(gbc.pc(), 0x67f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 034A
        gbc.setState(0xa346, 0x4c18, 0x29a0, 0x1641, 0x6ef9, 0x6df5, 0x1, 0x1);
        gbc.writeMem(0xa346, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4c18);
        EXPECT(gbc.pc(), 0xa348);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa346), 0xcb);
        EXPECT(gbc.readMem(0xa347), 0x20);
        // CB 20 034B
        gbc.setState(0x87e1, 0x87d0, 0xdd30, 0xc0a2, 0x552b, 0x26eb, 0x0, 0x0);
        gbc.writeMem(0x87e1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x87d0);
        EXPECT(gbc.pc(), 0x87e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87e1), 0xcb);
        EXPECT(gbc.readMem(0x87e2), 0x20);
        // CB 20 034E
        gbc.setState(0xc485, 0xe65a, 0xd4e0, 0x91ba, 0x4152, 0x3da0, 0x0, 0x1);
        gbc.writeMem(0xc485, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe65a);
        EXPECT(gbc.pc(), 0xc487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc485), 0xcb);
        EXPECT(gbc.readMem(0xc486), 0x20);
        // CB 20 0350
        gbc.setState(0xa9f8, 0x401e, 0x8290, 0xe58d, 0xc9f, 0xc82f, 0x1, 0x0);
        gbc.writeMem(0xa9f8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x401e);
        EXPECT(gbc.pc(), 0xa9fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9f8), 0xcb);
        EXPECT(gbc.readMem(0xa9f9), 0x20);
        // CB 20 0351
        gbc.setState(0xb950, 0x55c4, 0x33a0, 0xbdda, 0xe0ac, 0x11c5, 0x1, 0x1);
        gbc.writeMem(0xb950, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x55c4);
        EXPECT(gbc.pc(), 0xb952);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb950), 0xcb);
        EXPECT(gbc.readMem(0xb951), 0x20);
        // CB 20 0352
        gbc.setState(0xadc6, 0xc6a3, 0xa30, 0x1d91, 0x7ed7, 0xfad8, 0x0, 0x0);
        gbc.writeMem(0xadc6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc6a3);
        EXPECT(gbc.pc(), 0xadc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadc6), 0xcb);
        EXPECT(gbc.readMem(0xadc7), 0x20);
        // CB 20 0353
        gbc.setState(0x8979, 0x808b, 0x1f20, 0xb5c8, 0x32f3, 0xd366, 0x0, 0x0);
        gbc.writeMem(0x8979, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x808b);
        EXPECT(gbc.pc(), 0x897b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8979), 0xcb);
        EXPECT(gbc.readMem(0x897a), 0x20);
        // CB 20 0354
        gbc.setState(0x770c, 0x4041, 0x9690, 0x7901, 0x74f4, 0xd82f, 0x1, 0x1);
        gbc.writeMem(0x770c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4041);
        EXPECT(gbc.pc(), 0x770e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0355
        gbc.setState(0x4703, 0x942b, 0xbb00, 0x66e2, 0xc5f2, 0x39a4, 0x0, 0x0);
        gbc.writeMem(0x4703, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x942b);
        EXPECT(gbc.pc(), 0x4705);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0356
        gbc.setState(0x6e1b, 0x2881, 0x6750, 0xbe9d, 0x177f, 0x5b6e, 0x1, 0x0);
        gbc.writeMem(0x6e1b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2881);
        EXPECT(gbc.pc(), 0x6e1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0357
        gbc.setState(0x2498, 0x7a5e, 0x1150, 0xb34, 0x7493, 0x57c9, 0x0, 0x1);
        gbc.writeMem(0x2498, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7a5e);
        EXPECT(gbc.pc(), 0x249a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0358
        gbc.setState(0x3065, 0xaf47, 0x7e00, 0xf8e9, 0x39c6, 0x37c4, 0x0, 0x1);
        gbc.writeMem(0x3065, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xaf47);
        EXPECT(gbc.pc(), 0x3067);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0359
        gbc.setState(0xb04c, 0xa189, 0xf9e0, 0x80df, 0xf83f, 0xfc13, 0x0, 0x1);
        gbc.writeMem(0xb04c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xa189);
        EXPECT(gbc.pc(), 0xb04e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb04c), 0xcb);
        EXPECT(gbc.readMem(0xb04d), 0x20);
        // CB 20 035A
        gbc.setState(0xb458, 0x42a6, 0xb230, 0x72fb, 0xae8e, 0x9eb5, 0x0, 0x0);
        gbc.writeMem(0xb458, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x42a6);
        EXPECT(gbc.pc(), 0xb45a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb458), 0xcb);
        EXPECT(gbc.readMem(0xb459), 0x20);
        // CB 20 035B
        gbc.setState(0x5024, 0x94b0, 0xf10, 0x42db, 0xd0bb, 0xa4e, 0x0, 0x0);
        gbc.writeMem(0x5024, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x94b0);
        EXPECT(gbc.pc(), 0x5026);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 035C
        gbc.setState(0x707c, 0xe9c9, 0x1870, 0x1854, 0xbdc6, 0xf6bb, 0x0, 0x1);
        gbc.writeMem(0x707c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe9c9);
        EXPECT(gbc.pc(), 0x707e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 035D
        gbc.setState(0x7b50, 0x3b9, 0xfe90, 0x6d82, 0x8363, 0xb006, 0x1, 0x1);
        gbc.writeMem(0x7b50, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3b9);
        EXPECT(gbc.pc(), 0x7b52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 035E
        gbc.setState(0xd0ba, 0x6a8d, 0x2e90, 0x6f64, 0x4193, 0xfb64, 0x0, 0x1);
        gbc.writeMem(0xd0ba, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6a8d);
        EXPECT(gbc.pc(), 0xd0bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0ba), 0xcb);
        EXPECT(gbc.readMem(0xd0bb), 0x20);
        // CB 20 035F
        gbc.setState(0x589f, 0x27eb, 0x89e0, 0x3b9b, 0x1afa, 0xafe2, 0x1, 0x1);
        gbc.writeMem(0x589f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x27eb);
        EXPECT(gbc.pc(), 0x58a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0360
        gbc.setState(0xd500, 0x3420, 0x6eb0, 0xd756, 0xfad9, 0xf64e, 0x0, 0x0);
        gbc.writeMem(0xd500, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3420);
        EXPECT(gbc.pc(), 0xd502);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd500), 0xcb);
        EXPECT(gbc.readMem(0xd501), 0x20);
        // CB 20 0361
        gbc.setState(0x7cb0, 0x8bff, 0xbc30, 0x9b94, 0xf14a, 0x6f2b, 0x0, 0x0);
        gbc.writeMem(0x7cb0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8bff);
        EXPECT(gbc.pc(), 0x7cb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0362
        gbc.setState(0xefcc, 0x7da3, 0x3550, 0xbde4, 0xf490, 0x3010, 0x1, 0x0);
        gbc.writeMem(0xefcc, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7da3);
        EXPECT(gbc.pc(), 0xefce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefcc), 0xcb);
        EXPECT(gbc.readMem(0xefcd), 0x20);
        // CB 20 0363
        gbc.setState(0xeeeb, 0xb5ff, 0xf390, 0xa79c, 0xfcde, 0xd17b, 0x0, 0x1);
        gbc.writeMem(0xeeeb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb5ff);
        EXPECT(gbc.pc(), 0xeeed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeeb), 0xcb);
        EXPECT(gbc.readMem(0xeeec), 0x20);
        // CB 20 0364
        gbc.setState(0xd5ae, 0x36af, 0x2130, 0xbab6, 0xe11, 0x5972, 0x0, 0x1);
        gbc.writeMem(0xd5ae, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x36af);
        EXPECT(gbc.pc(), 0xd5b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ae), 0xcb);
        EXPECT(gbc.readMem(0xd5af), 0x20);
        // CB 20 0365
        gbc.setState(0x7249, 0x358e, 0x9980, 0x7810, 0x21e, 0xc3bb, 0x1, 0x0);
        gbc.writeMem(0x7249, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x358e);
        EXPECT(gbc.pc(), 0x724b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0366
        gbc.setState(0x17f8, 0x59d1, 0xefe0, 0xda59, 0x30eb, 0xc9ad, 0x1, 0x1);
        gbc.writeMem(0x17f8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x59d1);
        EXPECT(gbc.pc(), 0x17fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0367
        gbc.setState(0x75fa, 0xe11e, 0x44d0, 0x3c00, 0x2123, 0xb6a5, 0x1, 0x1);
        gbc.writeMem(0x75fa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe11e);
        EXPECT(gbc.pc(), 0x75fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0368
        gbc.setState(0xaedf, 0xcfd7, 0xbeb0, 0x320, 0x634a, 0xbc3d, 0x1, 0x0);
        gbc.writeMem(0xaedf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xcfd7);
        EXPECT(gbc.pc(), 0xaee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaedf), 0xcb);
        EXPECT(gbc.readMem(0xaee0), 0x20);
        // CB 20 0369
        gbc.setState(0xcf4b, 0xebac, 0x1eb0, 0xeeab, 0xd3c3, 0x743b, 0x0, 0x0);
        gbc.writeMem(0xcf4b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xebac);
        EXPECT(gbc.pc(), 0xcf4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf4b), 0xcb);
        EXPECT(gbc.readMem(0xcf4c), 0x20);
        // CB 20 036A
        gbc.setState(0x955c, 0xd2ad, 0xcb00, 0xf4bb, 0xbd16, 0xfd5b, 0x0, 0x1);
        gbc.writeMem(0x955c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd2ad);
        EXPECT(gbc.pc(), 0x955e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x955c), 0xcb);
        EXPECT(gbc.readMem(0x955d), 0x20);
        // CB 20 036B
        gbc.setState(0xa860, 0xf51, 0xbca0, 0x7838, 0xc2ba, 0xb1ab, 0x0, 0x0);
        gbc.writeMem(0xa860, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf51);
        EXPECT(gbc.pc(), 0xa862);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa860), 0xcb);
        EXPECT(gbc.readMem(0xa861), 0x20);
        // CB 20 036C
        gbc.setState(0x765a, 0x8a6e, 0x1060, 0x2c88, 0x7d0c, 0xdc97, 0x1, 0x0);
        gbc.writeMem(0x765a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8a6e);
        EXPECT(gbc.pc(), 0x765c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 036D
        gbc.setState(0xe11, 0xebfc, 0x7660, 0xa075, 0xde39, 0xc330, 0x1, 0x1);
        gbc.writeMem(0xe11, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xebfc);
        EXPECT(gbc.pc(), 0xe13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 036E
        gbc.setState(0x239f, 0x5ebd, 0x1f40, 0x6b9e, 0xf99e, 0x8f0d, 0x0, 0x0);
        gbc.writeMem(0x239f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5ebd);
        EXPECT(gbc.pc(), 0x23a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 036F
        gbc.setState(0xc324, 0x138d, 0x3740, 0x488f, 0x3b1a, 0xb444, 0x0, 0x0);
        gbc.writeMem(0xc324, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x138d);
        EXPECT(gbc.pc(), 0xc326);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc324), 0xcb);
        EXPECT(gbc.readMem(0xc325), 0x20);
        // CB 20 0370
        gbc.setState(0x514f, 0x6aa8, 0x9f50, 0x2a0e, 0x4b0, 0xfc31, 0x0, 0x1);
        gbc.writeMem(0x514f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6aa8);
        EXPECT(gbc.pc(), 0x5151);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0371
        gbc.setState(0x7c28, 0x8953, 0x5420, 0xf0fc, 0x378d, 0xaea4, 0x0, 0x0);
        gbc.writeMem(0x7c28, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8953);
        EXPECT(gbc.pc(), 0x7c2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0372
        gbc.setState(0x9da1, 0x93b6, 0xe560, 0xf6dc, 0x341, 0x26d6, 0x1, 0x0);
        gbc.writeMem(0x9da1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x93b6);
        EXPECT(gbc.pc(), 0x9da3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9da1), 0xcb);
        EXPECT(gbc.readMem(0x9da2), 0x20);
        // CB 20 0373
        gbc.setState(0xbd98, 0x87c1, 0x7930, 0xfb10, 0xc51d, 0x22e3, 0x1, 0x1);
        gbc.writeMem(0xbd98, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x87c1);
        EXPECT(gbc.pc(), 0xbd9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd98), 0xcb);
        EXPECT(gbc.readMem(0xbd99), 0x20);
        // CB 20 0374
        gbc.setState(0xab0b, 0xfac4, 0xdf30, 0x401, 0x9230, 0x6a95, 0x1, 0x1);
        gbc.writeMem(0xab0b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xfac4);
        EXPECT(gbc.pc(), 0xab0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab0b), 0xcb);
        EXPECT(gbc.readMem(0xab0c), 0x20);
        // CB 20 0375
        gbc.setState(0x51b3, 0xe845, 0xed10, 0x4ce8, 0x16d5, 0x958a, 0x0, 0x0);
        gbc.writeMem(0x51b3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe845);
        EXPECT(gbc.pc(), 0x51b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0376
        gbc.setState(0x193f, 0xcea5, 0xc8b0, 0xe6f0, 0x2df0, 0xde24, 0x0, 0x0);
        gbc.writeMem(0x193f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcea5);
        EXPECT(gbc.pc(), 0x1941);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0377
        gbc.setState(0x7029, 0xc088, 0x270, 0x780f, 0xa52a, 0x2e13, 0x0, 0x0);
        gbc.writeMem(0x7029, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc088);
        EXPECT(gbc.pc(), 0x702b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0378
        gbc.setState(0x2166, 0xb10e, 0xbea0, 0xc765, 0x1127, 0xd526, 0x0, 0x0);
        gbc.writeMem(0x2166, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb10e);
        EXPECT(gbc.pc(), 0x2168);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0379
        gbc.setState(0xdb75, 0xa32f, 0xe160, 0x83ba, 0xbc35, 0x96bc, 0x1, 0x0);
        gbc.writeMem(0xdb75, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa32f);
        EXPECT(gbc.pc(), 0xdb77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb75), 0xcb);
        EXPECT(gbc.readMem(0xdb76), 0x20);
        // CB 20 037A
        gbc.setState(0xdabf, 0xb80a, 0x7d40, 0xdda7, 0x2b06, 0x947e, 0x1, 0x0);
        gbc.writeMem(0xdabf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb80a);
        EXPECT(gbc.pc(), 0xdac1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdabf), 0xcb);
        EXPECT(gbc.readMem(0xdac0), 0x20);
        // CB 20 037B
        gbc.setState(0xb448, 0x3685, 0x6bc0, 0xf4bb, 0xf2ba, 0xada6, 0x1, 0x1);
        gbc.writeMem(0xb448, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3685);
        EXPECT(gbc.pc(), 0xb44a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb448), 0xcb);
        EXPECT(gbc.readMem(0xb449), 0x20);
        // CB 20 037C
        gbc.setState(0xb18, 0x957b, 0x13a0, 0x8b08, 0x1d6f, 0xaebf, 0x0, 0x1);
        gbc.writeMem(0xb18, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x957b);
        EXPECT(gbc.pc(), 0xb1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 037E
        gbc.setState(0x58e5, 0xdb59, 0x41b0, 0xddb1, 0xf1ca, 0x271a, 0x0, 0x1);
        gbc.writeMem(0x58e5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xdb59);
        EXPECT(gbc.pc(), 0x58e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 037F
        gbc.setState(0xc608, 0xf158, 0x71b0, 0x4948, 0xcc30, 0xebc9, 0x1, 0x1);
        gbc.writeMem(0xc608, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf158);
        EXPECT(gbc.pc(), 0xc60a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc608), 0xcb);
        EXPECT(gbc.readMem(0xc609), 0x20);
        // CB 20 0380
        gbc.setState(0x8bb2, 0xecca, 0xd980, 0xadd, 0xbd63, 0x6e76, 0x0, 0x0);
        gbc.writeMem(0x8bb2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xecca);
        EXPECT(gbc.pc(), 0x8bb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bb2), 0xcb);
        EXPECT(gbc.readMem(0x8bb3), 0x20);
        // CB 20 0381
        gbc.setState(0x6d5b, 0x992e, 0x4e60, 0x5382, 0xf067, 0x19ba, 0x1, 0x0);
        gbc.writeMem(0x6d5b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x992e);
        EXPECT(gbc.pc(), 0x6d5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0382
        gbc.setState(0x1162, 0x612d, 0xdba0, 0x7e4c, 0xbd33, 0x20d1, 0x0, 0x1);
        gbc.writeMem(0x1162, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x612d);
        EXPECT(gbc.pc(), 0x1164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0383
        gbc.setState(0xb2d6, 0x9855, 0xcf80, 0x32ba, 0x83ef, 0x6713, 0x1, 0x0);
        gbc.writeMem(0xb2d6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x9855);
        EXPECT(gbc.pc(), 0xb2d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2d6), 0xcb);
        EXPECT(gbc.readMem(0xb2d7), 0x20);
        // CB 20 0384
        gbc.setState(0x540d, 0xd28, 0x8bb0, 0xd7e, 0x2afb, 0x8dd6, 0x1, 0x0);
        gbc.writeMem(0x540d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd28);
        EXPECT(gbc.pc(), 0x540f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0385
        gbc.setState(0x1169, 0x7b49, 0x5540, 0x69b9, 0xbd4a, 0x8fe5, 0x1, 0x1);
        gbc.writeMem(0x1169, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7b49);
        EXPECT(gbc.pc(), 0x116b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0386
        gbc.setState(0x2139, 0x263f, 0x2580, 0x733, 0x2cab, 0x17aa, 0x0, 0x1);
        gbc.writeMem(0x2139, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x263f);
        EXPECT(gbc.pc(), 0x213b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0387
        gbc.setState(0x8bd5, 0x2153, 0x9160, 0xc832, 0x2c03, 0xe6db, 0x0, 0x1);
        gbc.writeMem(0x8bd5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2153);
        EXPECT(gbc.pc(), 0x8bd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bd5), 0xcb);
        EXPECT(gbc.readMem(0x8bd6), 0x20);
        // CB 20 0388
        gbc.setState(0x683f, 0xa519, 0x2dc0, 0x6f2, 0x6c18, 0xa3bf, 0x0, 0x1);
        gbc.writeMem(0x683f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa519);
        EXPECT(gbc.pc(), 0x6841);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0389
        gbc.setState(0xba52, 0xde74, 0x3530, 0xf14f, 0x16e0, 0xcd8a, 0x1, 0x1);
        gbc.writeMem(0xba52, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xde74);
        EXPECT(gbc.pc(), 0xba54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba52), 0xcb);
        EXPECT(gbc.readMem(0xba53), 0x20);
        // CB 20 038A
        gbc.setState(0x130e, 0xc266, 0xcac0, 0x5bdf, 0xd6ee, 0x71db, 0x0, 0x0);
        gbc.writeMem(0x130e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xc266);
        EXPECT(gbc.pc(), 0x1310);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 038B
        gbc.setState(0xba32, 0xe674, 0x350, 0x7848, 0x9ef0, 0x6b7e, 0x0, 0x0);
        gbc.writeMem(0xba32, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe674);
        EXPECT(gbc.pc(), 0xba34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba32), 0xcb);
        EXPECT(gbc.readMem(0xba33), 0x20);
        // CB 20 038C
        gbc.setState(0x2e3e, 0xa23d, 0xfb60, 0xf3ae, 0x50ad, 0x461e, 0x1, 0x1);
        gbc.writeMem(0x2e3e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa23d);
        EXPECT(gbc.pc(), 0x2e40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 038D
        gbc.setState(0xa380, 0x389c, 0xeae0, 0x442, 0x3892, 0x3a2e, 0x1, 0x0);
        gbc.writeMem(0xa380, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x389c);
        EXPECT(gbc.pc(), 0xa382);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa380), 0xcb);
        EXPECT(gbc.readMem(0xa381), 0x20);
        // CB 20 038E
        gbc.setState(0x91e6, 0xe878, 0x11e0, 0xfd76, 0xeff0, 0xa7f7, 0x1, 0x1);
        gbc.writeMem(0x91e6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xe878);
        EXPECT(gbc.pc(), 0x91e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91e6), 0xcb);
        EXPECT(gbc.readMem(0x91e7), 0x20);
        // CB 20 0390
        gbc.setState(0x5e39, 0x8eaa, 0xac10, 0x7e08, 0x20a2, 0xf414, 0x1, 0x0);
        gbc.writeMem(0x5e39, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8eaa);
        EXPECT(gbc.pc(), 0x5e3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 0391
        gbc.setState(0xdf2a, 0x9b1d, 0x510, 0xfe36, 0x622a, 0x7445, 0x0, 0x0);
        gbc.writeMem(0xdf2a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x9b1d);
        EXPECT(gbc.pc(), 0xdf2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf2a), 0xcb);
        EXPECT(gbc.readMem(0xdf2b), 0x20);
        // CB 20 0392
        gbc.setState(0x8bc4, 0x1e1b, 0xb2c0, 0xdc95, 0x793d, 0x30b3, 0x1, 0x0);
        gbc.writeMem(0x8bc4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1e1b);
        EXPECT(gbc.pc(), 0x8bc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bc4), 0xcb);
        EXPECT(gbc.readMem(0x8bc5), 0x20);
        // CB 20 0393
        gbc.setState(0xd47d, 0x9d5c, 0x3a50, 0xbacd, 0xaaff, 0x3789, 0x0, 0x0);
        gbc.writeMem(0xd47d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9d5c);
        EXPECT(gbc.pc(), 0xd47f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd47d), 0xcb);
        EXPECT(gbc.readMem(0xd47e), 0x20);
        // CB 20 0394
        gbc.setState(0x5c3f, 0x7acb, 0xdef0, 0xdf28, 0x6e88, 0xcfa7, 0x0, 0x1);
        gbc.writeMem(0x5c3f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7acb);
        EXPECT(gbc.pc(), 0x5c41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0395
        gbc.setState(0xd71e, 0x90c8, 0x8070, 0x763b, 0x2395, 0xff61, 0x0, 0x0);
        gbc.writeMem(0xd71e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x90c8);
        EXPECT(gbc.pc(), 0xd720);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd71e), 0xcb);
        EXPECT(gbc.readMem(0xd71f), 0x20);
        // CB 20 0396
        gbc.setState(0x7d5, 0xd298, 0x9750, 0xfa19, 0x4188, 0xa0d0, 0x1, 0x1);
        gbc.writeMem(0x7d5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd298);
        EXPECT(gbc.pc(), 0x7d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 0399
        gbc.setState(0x9a31, 0xefe2, 0x8bd0, 0x771b, 0x3041, 0xb25b, 0x0, 0x0);
        gbc.writeMem(0x9a31, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xefe2);
        EXPECT(gbc.pc(), 0x9a33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a31), 0xcb);
        EXPECT(gbc.readMem(0x9a32), 0x20);
        // CB 20 039B
        gbc.setState(0xb8a4, 0x98b8, 0x2070, 0x1c45, 0xefc8, 0x3736, 0x0, 0x1);
        gbc.writeMem(0xb8a4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x98b8);
        EXPECT(gbc.pc(), 0xb8a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8a4), 0xcb);
        EXPECT(gbc.readMem(0xb8a5), 0x20);
        // CB 20 039C
        gbc.setState(0xdd9a, 0x2d30, 0xd490, 0xe4bb, 0xccee, 0xe42, 0x0, 0x0);
        gbc.writeMem(0xdd9a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2d30);
        EXPECT(gbc.pc(), 0xdd9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd9a), 0xcb);
        EXPECT(gbc.readMem(0xdd9b), 0x20);
        // CB 20 039D
        gbc.setState(0x6146, 0x9cf6, 0x5dc0, 0x7faa, 0xff1d, 0x26aa, 0x1, 0x1);
        gbc.writeMem(0x6146, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x9cf6);
        EXPECT(gbc.pc(), 0x6148);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 039E
        gbc.setState(0x6804, 0x946e, 0x6a40, 0xbbb1, 0x5fd2, 0x6536, 0x1, 0x0);
        gbc.writeMem(0x6804, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x946e);
        EXPECT(gbc.pc(), 0x6806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 039F
        gbc.setState(0xbcaf, 0xbe59, 0x6710, 0xeafd, 0x9a00, 0x8bc7, 0x0, 0x0);
        gbc.writeMem(0xbcaf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xbe59);
        EXPECT(gbc.pc(), 0xbcb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcaf), 0xcb);
        EXPECT(gbc.readMem(0xbcb0), 0x20);
        // CB 20 03A0
        gbc.setState(0xbfa8, 0xdf8f, 0x2bf0, 0xb7a2, 0xa94e, 0xda16, 0x1, 0x0);
        gbc.writeMem(0xbfa8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xdf8f);
        EXPECT(gbc.pc(), 0xbfaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfa8), 0xcb);
        EXPECT(gbc.readMem(0xbfa9), 0x20);
        // CB 20 03A1
        gbc.setState(0xe579, 0xe255, 0x56a0, 0xa985, 0x79da, 0x7eaf, 0x0, 0x1);
        gbc.writeMem(0xe579, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xe255);
        EXPECT(gbc.pc(), 0xe57b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe579), 0xcb);
        EXPECT(gbc.readMem(0xe57a), 0x20);
        // CB 20 03A2
        gbc.setState(0x1e55, 0xf798, 0x9050, 0x9db6, 0x3edb, 0x8b7a, 0x0, 0x1);
        gbc.writeMem(0x1e55, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf798);
        EXPECT(gbc.pc(), 0x1e57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 03A3
        gbc.setState(0xdeb1, 0x5e5b, 0x80d0, 0xd9c, 0xc349, 0x1ba1, 0x0, 0x1);
        gbc.writeMem(0xdeb1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x5e5b);
        EXPECT(gbc.pc(), 0xdeb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeb1), 0xcb);
        EXPECT(gbc.readMem(0xdeb2), 0x20);
        // CB 20 03A4
        gbc.setState(0x9fd4, 0x801e, 0xe5c0, 0x1b78, 0x3976, 0xf078, 0x1, 0x0);
        gbc.writeMem(0x9fd4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x801e);
        EXPECT(gbc.pc(), 0x9fd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fd4), 0xcb);
        EXPECT(gbc.readMem(0x9fd5), 0x20);
        // CB 20 03A6
        gbc.setState(0x39c7, 0x2a54, 0x5f00, 0x7223, 0xe139, 0x76e6, 0x1, 0x0);
        gbc.writeMem(0x39c7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2a54);
        EXPECT(gbc.pc(), 0x39c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 03A7
        gbc.setState(0x733e, 0x223b, 0xa160, 0xeb02, 0xcf8c, 0x20e, 0x0, 0x0);
        gbc.writeMem(0x733e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x223b);
        EXPECT(gbc.pc(), 0x7340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 03A8
        gbc.setState(0x1363, 0xfeba, 0xf5a0, 0xedbe, 0x128f, 0xfaba, 0x1, 0x0);
        gbc.writeMem(0x1363, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xfeba);
        EXPECT(gbc.pc(), 0x1365);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 03A9
        gbc.setState(0xe726, 0x7692, 0x7e30, 0xcfc0, 0xa1ab, 0x991f, 0x0, 0x1);
        gbc.writeMem(0xe726, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x7692);
        EXPECT(gbc.pc(), 0xe728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe726), 0xcb);
        EXPECT(gbc.readMem(0xe727), 0x20);
        // CB 20 03AA
        gbc.setState(0x3775, 0xa83a, 0xf570, 0x3044, 0xbeb5, 0x2621, 0x0, 0x1);
        gbc.writeMem(0x3775, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa83a);
        EXPECT(gbc.pc(), 0x3777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 03AB
        gbc.setState(0x6cf6, 0x1bd2, 0x93d0, 0x2ca5, 0x930e, 0x4257, 0x1, 0x1);
        gbc.writeMem(0x6cf6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x1bd2);
        EXPECT(gbc.pc(), 0x6cf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 03AC
        gbc.setState(0x7d4e, 0x1b5f, 0x4880, 0xb695, 0x603d, 0x5d65, 0x0, 0x1);
        gbc.writeMem(0x7d4e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1b5f);
        EXPECT(gbc.pc(), 0x7d50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 03AD
        gbc.setState(0xbcd6, 0x4d23, 0x5df0, 0x4a3a, 0x6771, 0x5e74, 0x0, 0x1);
        gbc.writeMem(0xbcd6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4d23);
        EXPECT(gbc.pc(), 0xbcd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcd6), 0xcb);
        EXPECT(gbc.readMem(0xbcd7), 0x20);
        // CB 20 03AE
        gbc.setState(0x474f, 0xb2db, 0x15c0, 0xd8a3, 0x2d5a, 0xf9b8, 0x1, 0x1);
        gbc.writeMem(0x474f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb2db);
        EXPECT(gbc.pc(), 0x4751);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 03AF
        gbc.setState(0x791d, 0x398d, 0xd9c0, 0x3b3c, 0xb1e9, 0xb3ec, 0x0, 0x0);
        gbc.writeMem(0x791d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x398d);
        EXPECT(gbc.pc(), 0x791f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 03B1
        gbc.setState(0x6b4, 0x5a89, 0xa020, 0xd622, 0xaa9, 0x624d, 0x0, 0x0);
        gbc.writeMem(0x6b4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x5a89);
        EXPECT(gbc.pc(), 0x6b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 03B2
        gbc.setState(0xec6c, 0xa08e, 0x4250, 0x8694, 0xf4fc, 0xbc5a, 0x1, 0x0);
        gbc.writeMem(0xec6c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa08e);
        EXPECT(gbc.pc(), 0xec6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec6c), 0xcb);
        EXPECT(gbc.readMem(0xec6d), 0x20);
        // CB 20 03B3
        gbc.setState(0xa98c, 0xda6f, 0xb250, 0xdf40, 0xf770, 0x1e2, 0x0, 0x1);
        gbc.writeMem(0xa98c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xda6f);
        EXPECT(gbc.pc(), 0xa98e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa98c), 0xcb);
        EXPECT(gbc.readMem(0xa98d), 0x20);
        // CB 20 03B4
        gbc.setState(0x951f, 0x637d, 0xfa80, 0xc110, 0x1d97, 0x4f67, 0x1, 0x1);
        gbc.writeMem(0x951f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x637d);
        EXPECT(gbc.pc(), 0x9521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x951f), 0xcb);
        EXPECT(gbc.readMem(0x9520), 0x20);
        // CB 20 03B5
        gbc.setState(0x9b9b, 0x40b5, 0x5080, 0xa33c, 0xfcae, 0xf610, 0x1, 0x1);
        gbc.writeMem(0x9b9b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x40b5);
        EXPECT(gbc.pc(), 0x9b9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b9b), 0xcb);
        EXPECT(gbc.readMem(0x9b9c), 0x20);
        // CB 20 03B6
        gbc.setState(0xc3ab, 0x59b0, 0xb910, 0xe752, 0x5bc0, 0x1fee, 0x0, 0x0);
        gbc.writeMem(0xc3ab, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x59b0);
        EXPECT(gbc.pc(), 0xc3ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3ab), 0xcb);
        EXPECT(gbc.readMem(0xc3ac), 0x20);
        // CB 20 03B7
        gbc.setState(0x5c0b, 0xe640, 0x2bd0, 0x2d98, 0x1b4e, 0xfff2, 0x1, 0x0);
        gbc.writeMem(0x5c0b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe640);
        EXPECT(gbc.pc(), 0x5c0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 03B8
        gbc.setState(0x1068, 0x3b19, 0xf3f0, 0x39d4, 0xcb91, 0x58a5, 0x0, 0x0);
        gbc.writeMem(0x1068, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3b19);
        EXPECT(gbc.pc(), 0x106a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 03B9
        gbc.setState(0xbedb, 0xbc63, 0x2ff0, 0x84b5, 0xde17, 0xde4c, 0x1, 0x1);
        gbc.writeMem(0xbedb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xbc63);
        EXPECT(gbc.pc(), 0xbedd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbedb), 0xcb);
        EXPECT(gbc.readMem(0xbedc), 0x20);
        // CB 20 03BA
        gbc.setState(0xbcac, 0x11c1, 0x4950, 0x277a, 0x205d, 0x580b, 0x1, 0x0);
        gbc.writeMem(0xbcac, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x11c1);
        EXPECT(gbc.pc(), 0xbcae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcac), 0xcb);
        EXPECT(gbc.readMem(0xbcad), 0x20);
        // CB 20 03BB
        gbc.setState(0xa6b0, 0x5217, 0xe350, 0x28f, 0x36f5, 0xac74, 0x0, 0x1);
        gbc.writeMem(0xa6b0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5217);
        EXPECT(gbc.pc(), 0xa6b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6b0), 0xcb);
        EXPECT(gbc.readMem(0xa6b1), 0x20);
        // CB 20 03BC
        gbc.setState(0x8d65, 0xb471, 0xa8a0, 0xa70c, 0x951c, 0x809, 0x0, 0x1);
        gbc.writeMem(0x8d65, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb471);
        EXPECT(gbc.pc(), 0x8d67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d65), 0xcb);
        EXPECT(gbc.readMem(0x8d66), 0x20);
        // CB 20 03BD
        gbc.setState(0x4cd, 0x9a72, 0xb770, 0x2cb5, 0x8ed5, 0xe312, 0x0, 0x1);
        gbc.writeMem(0x4cd, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9a72);
        EXPECT(gbc.pc(), 0x4cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 03BE
        gbc.setState(0x65db, 0xfeba, 0x2890, 0xc100, 0x4a33, 0x7f78, 0x1, 0x0);
        gbc.writeMem(0x65db, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xfeba);
        EXPECT(gbc.pc(), 0x65dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 03BF
        gbc.setState(0x2112, 0xa31c, 0xc4d0, 0xc9b2, 0x7a10, 0x56a8, 0x0, 0x0);
        gbc.writeMem(0x2112, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa31c);
        EXPECT(gbc.pc(), 0x2114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 03C0
        gbc.setState(0x8ae0, 0xa8bf, 0x7a50, 0x9ea8, 0xcbc6, 0x8884, 0x0, 0x1);
        gbc.writeMem(0x8ae0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa8bf);
        EXPECT(gbc.pc(), 0x8ae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ae0), 0xcb);
        EXPECT(gbc.readMem(0x8ae1), 0x20);
        // CB 20 03C1
        gbc.setState(0x4803, 0x4a00, 0x2100, 0xf838, 0x6675, 0xe707, 0x1, 0x1);
        gbc.writeMem(0x4803, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4a00);
        EXPECT(gbc.pc(), 0x4805);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 03C2
        gbc.setState(0xdf3c, 0x3e0d, 0xbc80, 0xbcd3, 0xf77f, 0xd93d, 0x0, 0x1);
        gbc.writeMem(0xdf3c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3e0d);
        EXPECT(gbc.pc(), 0xdf3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf3c), 0xcb);
        EXPECT(gbc.readMem(0xdf3d), 0x20);
        // CB 20 03C3
        gbc.setState(0x496, 0x9aa4, 0xb6f0, 0x915d, 0x58c5, 0xeb73, 0x0, 0x0);
        gbc.writeMem(0x496, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9aa4);
        EXPECT(gbc.pc(), 0x498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 03C4
        gbc.setState(0xa8e0, 0xc42, 0x23a0, 0xd45d, 0xc909, 0xc6eb, 0x0, 0x1);
        gbc.writeMem(0xa8e0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc42);
        EXPECT(gbc.pc(), 0xa8e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8e0), 0xcb);
        EXPECT(gbc.readMem(0xa8e1), 0x20);
        // CB 20 03C5
        gbc.setState(0xacea, 0x6e2f, 0xd30, 0x581d, 0x18a8, 0x70c1, 0x0, 0x0);
        gbc.writeMem(0xacea, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6e2f);
        EXPECT(gbc.pc(), 0xacec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacea), 0xcb);
        EXPECT(gbc.readMem(0xaceb), 0x20);
        // CB 20 03C6
        gbc.setState(0x9946, 0x21ee, 0x1d0, 0x944e, 0x446e, 0x22b3, 0x0, 0x0);
        gbc.writeMem(0x9946, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x21ee);
        EXPECT(gbc.pc(), 0x9948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9946), 0xcb);
        EXPECT(gbc.readMem(0x9947), 0x20);
        // CB 20 03C7
        gbc.setState(0x7c51, 0x9d57, 0x5500, 0x90d6, 0xec9a, 0x8028, 0x1, 0x0);
        gbc.writeMem(0x7c51, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9d57);
        EXPECT(gbc.pc(), 0x7c53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 03C8
        gbc.setState(0xcd37, 0x785, 0xbbf0, 0xbc4f, 0x10b0, 0x1d59, 0x1, 0x1);
        gbc.writeMem(0xcd37, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x785);
        EXPECT(gbc.pc(), 0xcd39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd37), 0xcb);
        EXPECT(gbc.readMem(0xcd38), 0x20);
        // CB 20 03C9
        gbc.setState(0xbc9f, 0xe50, 0x4510, 0x73b7, 0x18d6, 0x856a, 0x0, 0x1);
        gbc.writeMem(0xbc9f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe50);
        EXPECT(gbc.pc(), 0xbca1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc9f), 0xcb);
        EXPECT(gbc.readMem(0xbca0), 0x20);
        // CB 20 03CA
        gbc.setState(0xd3c4, 0x610a, 0xffa0, 0xe7de, 0x10d3, 0x85cd, 0x0, 0x1);
        gbc.writeMem(0xd3c4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x610a);
        EXPECT(gbc.pc(), 0xd3c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3c4), 0xcb);
        EXPECT(gbc.readMem(0xd3c5), 0x20);
        // CB 20 03CB
        gbc.setState(0x6f8e, 0x4422, 0xe720, 0x8e78, 0xaae1, 0x868a, 0x1, 0x0);
        gbc.writeMem(0x6f8e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4422);
        EXPECT(gbc.pc(), 0x6f90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 03CC
        gbc.setState(0xb4d2, 0xdf58, 0xa4d0, 0x78fa, 0xc63b, 0xacb1, 0x1, 0x0);
        gbc.writeMem(0xb4d2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xdf58);
        EXPECT(gbc.pc(), 0xb4d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4d2), 0xcb);
        EXPECT(gbc.readMem(0xb4d3), 0x20);
        // CB 20 03CD
        gbc.setState(0x88f4, 0x1dfc, 0x2110, 0xe5b1, 0xae78, 0xfa0e, 0x1, 0x1);
        gbc.writeMem(0x88f4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1dfc);
        EXPECT(gbc.pc(), 0x88f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88f4), 0xcb);
        EXPECT(gbc.readMem(0x88f5), 0x20);
        // CB 20 03CE
        gbc.setState(0xb44b, 0xe8b0, 0x9c30, 0x4847, 0x3d58, 0xf1f, 0x1, 0x0);
        gbc.writeMem(0xb44b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe8b0);
        EXPECT(gbc.pc(), 0xb44d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb44b), 0xcb);
        EXPECT(gbc.readMem(0xb44c), 0x20);
        // CB 20 03CF
        gbc.setState(0xece5, 0x9a70, 0xbff0, 0x9360, 0x5c72, 0x5427, 0x1, 0x0);
        gbc.writeMem(0xece5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9a70);
        EXPECT(gbc.pc(), 0xece7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xece5), 0xcb);
        EXPECT(gbc.readMem(0xece6), 0x20);
        // CB 20 03D0
        gbc.setState(0x1d45, 0x1cec, 0x7d50, 0xbcfc, 0x35ff, 0x76f3, 0x0, 0x0);
        gbc.writeMem(0x1d45, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1cec);
        EXPECT(gbc.pc(), 0x1d47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 03D1
        gbc.setState(0x7088, 0xb1f, 0xefb0, 0x617, 0xe15a, 0x9d11, 0x0, 0x0);
        gbc.writeMem(0x7088, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb1f);
        EXPECT(gbc.pc(), 0x708a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 03D2
        gbc.setState(0x35c4, 0x25da, 0x2350, 0x35e6, 0xd873, 0xcb8d, 0x0, 0x1);
        gbc.writeMem(0x35c4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x25da);
        EXPECT(gbc.pc(), 0x35c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 03D3
        gbc.setState(0x6807, 0x6bc4, 0x28d0, 0x68e3, 0x9d8e, 0x1e58, 0x0, 0x1);
        gbc.writeMem(0x6807, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6bc4);
        EXPECT(gbc.pc(), 0x6809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 03D4
        gbc.setState(0x999e, 0x3b90, 0xa210, 0xc6b5, 0xb56a, 0xd034, 0x0, 0x0);
        gbc.writeMem(0x999e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3b90);
        EXPECT(gbc.pc(), 0x99a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x999e), 0xcb);
        EXPECT(gbc.readMem(0x999f), 0x20);
        // CB 20 03D5
        gbc.setState(0xdf93, 0xdd1a, 0xf580, 0xb58a, 0x50fe, 0x8f69, 0x0, 0x1);
        gbc.writeMem(0xdf93, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xdd1a);
        EXPECT(gbc.pc(), 0xdf95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf93), 0xcb);
        EXPECT(gbc.readMem(0xdf94), 0x20);
        // CB 20 03D6
        gbc.setState(0xc57a, 0x856e, 0xfb80, 0x206c, 0xd3fb, 0x6b4f, 0x1, 0x0);
        gbc.writeMem(0xc57a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x856e);
        EXPECT(gbc.pc(), 0xc57c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc57a), 0xcb);
        EXPECT(gbc.readMem(0xc57b), 0x20);
        // CB 20 03D7
        gbc.setState(0x5fce, 0x1f48, 0x63e0, 0x40f8, 0x2d71, 0xb513, 0x1, 0x1);
        gbc.writeMem(0x5fce, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1f48);
        EXPECT(gbc.pc(), 0x5fd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 03D9
        gbc.setState(0x62a1, 0x5661, 0xa3a0, 0x9de6, 0x2f9f, 0xf901, 0x0, 0x0);
        gbc.writeMem(0x62a1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5661);
        EXPECT(gbc.pc(), 0x62a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 03DA
        gbc.setState(0x9ebe, 0x1e6f, 0xdd0, 0x78f3, 0x776a, 0x21df, 0x1, 0x0);
        gbc.writeMem(0x9ebe, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1e6f);
        EXPECT(gbc.pc(), 0x9ec0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ebe), 0xcb);
        EXPECT(gbc.readMem(0x9ebf), 0x20);
        // CB 20 03DB
        gbc.setState(0xb817, 0x9307, 0xfb70, 0x374, 0x8279, 0xcde2, 0x1, 0x0);
        gbc.writeMem(0xb817, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9307);
        EXPECT(gbc.pc(), 0xb819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb817), 0xcb);
        EXPECT(gbc.readMem(0xb818), 0x20);
        // CB 20 03DC
        gbc.setState(0x8199, 0x77a6, 0xd2c0, 0xdc59, 0x7125, 0x4681, 0x0, 0x0);
        gbc.writeMem(0x8199, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x77a6);
        EXPECT(gbc.pc(), 0x819b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8199), 0xcb);
        EXPECT(gbc.readMem(0x819a), 0x20);
        // CB 20 03DD
        gbc.setState(0x5a75, 0x9739, 0x26f0, 0xe43a, 0xf94d, 0x38ae, 0x1, 0x1);
        gbc.writeMem(0x5a75, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9739);
        EXPECT(gbc.pc(), 0x5a77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 03DE
        gbc.setState(0x7024, 0xfc69, 0x6590, 0xa48d, 0xbeec, 0xaefd, 0x1, 0x1);
        gbc.writeMem(0x7024, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xfc69);
        EXPECT(gbc.pc(), 0x7026);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 03DF
        gbc.setState(0x2659, 0xbfaf, 0x92f0, 0xec33, 0x1366, 0x7946, 0x1, 0x1);
        gbc.writeMem(0x2659, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xbfaf);
        EXPECT(gbc.pc(), 0x265b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 03E0
        gbc.setState(0xa6ff, 0x6b92, 0x5220, 0x3163, 0xc8bc, 0x2d6e, 0x0, 0x0);
        gbc.writeMem(0xa6ff, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x6b92);
        EXPECT(gbc.pc(), 0xa701);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ff), 0xcb);
        EXPECT(gbc.readMem(0xa700), 0x20);
        // CB 20 03E1
        gbc.setState(0x3846, 0xd307, 0xef80, 0xc01a, 0x8605, 0x1a95, 0x0, 0x1);
        gbc.writeMem(0x3846, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd307);
        EXPECT(gbc.pc(), 0x3848);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 03E2
        gbc.setState(0x9d3b, 0x8fae, 0xf9c0, 0xb5ce, 0x9f3a, 0x280d, 0x1, 0x1);
        gbc.writeMem(0x9d3b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8fae);
        EXPECT(gbc.pc(), 0x9d3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d3b), 0xcb);
        EXPECT(gbc.readMem(0x9d3c), 0x20);
        // CB 20 03E4
        gbc.setState(0x70df, 0x6430, 0xdcd0, 0x25a5, 0x7370, 0xaa1b, 0x1, 0x0);
        gbc.writeMem(0x70df, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6430);
        EXPECT(gbc.pc(), 0x70e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 03E5
        gbc.setState(0x3818, 0x3014, 0x4210, 0x6763, 0xee46, 0x5993, 0x0, 0x0);
        gbc.writeMem(0x3818, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x3014);
        EXPECT(gbc.pc(), 0x381a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 20 03E6
        gbc.setState(0x3483, 0x9c6e, 0xc780, 0xc8dd, 0x4961, 0xd11a, 0x0, 0x1);
        gbc.writeMem(0x3483, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9c6e);
        EXPECT(gbc.pc(), 0x3485);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 20 03E7
        gbc.setState(0x850, 0x9748, 0xcac0, 0x58e, 0x39c0, 0xdff9, 0x0, 0x1);
        gbc.writeMem(0x850, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9748);
        EXPECT(gbc.pc(), 0x852);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
