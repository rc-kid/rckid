    TEST(gbcemu, opcode_cb_66) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 66 0000
        gbc.setState(0xef25, 0x9b3c, 0xb540, 0xf6ba, 0xca1, 0x9b24, 0x0, 0x0);
        gbc.writeMem(0x9b24, { 0xf3 });
        gbc.writeMem(0xef25, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9b3c, gbc.sp());
        EXPECT(0xef27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x9b24));
        EXPECT(0xcb, gbc.readMem(0xef25));
        EXPECT(0x66, gbc.readMem(0xef26));
        // CB 66 0001
        gbc.setState(0xa858, 0xa1a1, 0xf70, 0x79d1, 0x2cda, 0x728f, 0x0, 0x1);
        gbc.writeMem(0x728f, { 0x55 });
        gbc.writeMem(0xa858, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa1a1, gbc.sp());
        EXPECT(0xa85a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa858));
        EXPECT(0x66, gbc.readMem(0xa859));
        // CB 66 0002
        gbc.setState(0x7506, 0x5832, 0x94d0, 0xb9f0, 0x21b7, 0xc3a8, 0x0, 0x1);
        gbc.writeMem(0x7506, { 0xcb, 0x66 });
        gbc.writeMem(0xc3a8, { 0x11 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5832, gbc.sp());
        EXPECT(0x7508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc3a8));
        // CB 66 0003
        gbc.setState(0x62a7, 0x7e2c, 0x33a0, 0xa9ca, 0xfa7e, 0x13a7, 0x0, 0x0);
        gbc.writeMem(0x13a7, { 0x36 });
        gbc.writeMem(0x62a7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7e2c, gbc.sp());
        EXPECT(0x62a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0004
        gbc.setState(0x8569, 0x76db, 0x50a0, 0x3479, 0x9f20, 0xee40, 0x1, 0x1);
        gbc.writeMem(0x8569, { 0xcb, 0x66 });
        gbc.writeMem(0xee40, { 0xf2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x76db, gbc.sp());
        EXPECT(0x856b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8569));
        EXPECT(0x66, gbc.readMem(0x856a));
        EXPECT(0xf2, gbc.readMem(0xee40));
        // CB 66 0005
        gbc.setState(0x27d, 0x82a7, 0x4d20, 0x2008, 0xdde0, 0x1919, 0x0, 0x0);
        gbc.writeMem(0x27d, { 0xcb, 0x66 });
        gbc.writeMem(0x1919, { 0x84 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x82a7, gbc.sp());
        EXPECT(0x27f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0006
        gbc.setState(0x2889, 0xa2c2, 0x48b0, 0x7b62, 0x800f, 0xbaf3, 0x0, 0x1);
        gbc.writeMem(0x2889, { 0xcb, 0x66 });
        gbc.writeMem(0xbaf3, { 0xb8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa2c2, gbc.sp());
        EXPECT(0x288b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xbaf3));
        // CB 66 0007
        gbc.setState(0x9d73, 0xbfba, 0xbb40, 0x7160, 0x52d4, 0x404c, 0x0, 0x1);
        gbc.writeMem(0x404c, { 0xd7 });
        gbc.writeMem(0x9d73, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xbfba, gbc.sp());
        EXPECT(0x9d75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d73));
        EXPECT(0x66, gbc.readMem(0x9d74));
        // CB 66 0008
        gbc.setState(0x8002, 0x8fc2, 0x9e90, 0xe99f, 0x374f, 0x89a0, 0x1, 0x0);
        gbc.writeMem(0x8002, { 0xcb, 0x66 });
        gbc.writeMem(0x89a0, { 0x88 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8fc2, gbc.sp());
        EXPECT(0x8004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8002));
        EXPECT(0x66, gbc.readMem(0x8003));
        EXPECT(0x88, gbc.readMem(0x89a0));
        // CB 66 0009
        gbc.setState(0x16d7, 0xbf58, 0x1920, 0x421e, 0x747a, 0x2ac0, 0x1, 0x1);
        gbc.writeMem(0x16d7, { 0xcb, 0x66 });
        gbc.writeMem(0x2ac0, { 0xad });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbf58, gbc.sp());
        EXPECT(0x16d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 000A
        gbc.setState(0xa5df, 0x6651, 0x7de0, 0x46b6, 0xeeaa, 0xf8de, 0x1, 0x0);
        gbc.writeMem(0xa5df, { 0xcb, 0x66 });
        gbc.writeMem(0xf8de, { 0xed });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6651, gbc.sp());
        EXPECT(0xa5e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5df));
        EXPECT(0x66, gbc.readMem(0xa5e0));
        EXPECT(0xed, gbc.readMem(0xf8de));
        // CB 66 000B
        gbc.setState(0x7b8c, 0xfc56, 0xe4d0, 0xab1d, 0x78cc, 0x62fe, 0x0, 0x1);
        gbc.writeMem(0x62fe, { 0x4f });
        gbc.writeMem(0x7b8c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfc56, gbc.sp());
        EXPECT(0x7b8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 000C
        gbc.setState(0xb32b, 0x3c4b, 0x3290, 0xfe0b, 0x7649, 0x2e1f, 0x1, 0x1);
        gbc.writeMem(0x2e1f, { 0x86 });
        gbc.writeMem(0xb32b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3c4b, gbc.sp());
        EXPECT(0xb32d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32b));
        EXPECT(0x66, gbc.readMem(0xb32c));
        // CB 66 000D
        gbc.setState(0xada4, 0xf803, 0xfab0, 0x1178, 0x2936, 0xe4f, 0x1, 0x0);
        gbc.writeMem(0xe4f, { 0xca });
        gbc.writeMem(0xada4, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf803, gbc.sp());
        EXPECT(0xada6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada4));
        EXPECT(0x66, gbc.readMem(0xada5));
        // CB 66 000F
        gbc.setState(0x17ca, 0x1e2d, 0xe600, 0xd3fe, 0x3bac, 0xb098, 0x0, 0x0);
        gbc.writeMem(0x17ca, { 0xcb, 0x66 });
        gbc.writeMem(0xb098, { 0x8e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1e2d, gbc.sp());
        EXPECT(0x17cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xb098));
        // CB 66 0010
        gbc.setState(0x8fd6, 0xba43, 0xf230, 0xc305, 0xa438, 0xc26e, 0x0, 0x1);
        gbc.writeMem(0x8fd6, { 0xcb, 0x66 });
        gbc.writeMem(0xc26e, { 0x58 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xba43, gbc.sp());
        EXPECT(0x8fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd6));
        EXPECT(0x66, gbc.readMem(0x8fd7));
        EXPECT(0x58, gbc.readMem(0xc26e));
        // CB 66 0011
        gbc.setState(0x9a49, 0xdc0a, 0xac30, 0xdcb1, 0x4a8a, 0xed51, 0x1, 0x1);
        gbc.writeMem(0x9a49, { 0xcb, 0x66 });
        gbc.writeMem(0xed51, { 0x6c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdc0a, gbc.sp());
        EXPECT(0x9a4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a49));
        EXPECT(0x66, gbc.readMem(0x9a4a));
        EXPECT(0x6c, gbc.readMem(0xed51));
        // CB 66 0012
        gbc.setState(0xddfd, 0xa1e5, 0xb600, 0xca94, 0xe780, 0x7e9f, 0x0, 0x0);
        gbc.writeMem(0x7e9f, { 0xcf });
        gbc.writeMem(0xddfd, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa1e5, gbc.sp());
        EXPECT(0xddff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddfd));
        EXPECT(0x66, gbc.readMem(0xddfe));
        // CB 66 0013
        gbc.setState(0x6268, 0x79b7, 0x5160, 0x5bec, 0x2735, 0xd5f3, 0x0, 0x0);
        gbc.writeMem(0x6268, { 0xcb, 0x66 });
        gbc.writeMem(0xd5f3, { 0xf });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x79b7, gbc.sp());
        EXPECT(0x626a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xd5f3));
        // CB 66 0014
        gbc.setState(0x51a3, 0x5, 0xe800, 0x378e, 0x9399, 0x108, 0x1, 0x0);
        gbc.writeMem(0x108, { 0x9f });
        gbc.writeMem(0x51a3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5, gbc.sp());
        EXPECT(0x51a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0015
        gbc.setState(0xe009, 0xf91f, 0x70, 0x31ce, 0x6b15, 0xf6ff, 0x1, 0x0);
        gbc.writeMem(0xe009, { 0xcb, 0x66 });
        gbc.writeMem(0xf6ff, { 0x72 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf91f, gbc.sp());
        EXPECT(0xe00b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe009));
        EXPECT(0x66, gbc.readMem(0xe00a));
        EXPECT(0x72, gbc.readMem(0xf6ff));
        // CB 66 0016
        gbc.setState(0x6aa1, 0x98a9, 0x9810, 0x425, 0xb0f6, 0xbe4, 0x0, 0x1);
        gbc.writeMem(0xbe4, { 0xfc });
        gbc.writeMem(0x6aa1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x98a9, gbc.sp());
        EXPECT(0x6aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0017
        gbc.setState(0xe477, 0xa5f9, 0xf4b0, 0xf1cd, 0xaa9b, 0xc46e, 0x0, 0x1);
        gbc.writeMem(0xc46e, { 0x42 });
        gbc.writeMem(0xe477, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa5f9, gbc.sp());
        EXPECT(0xe479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc46e));
        EXPECT(0xcb, gbc.readMem(0xe477));
        EXPECT(0x66, gbc.readMem(0xe478));
        // CB 66 0018
        gbc.setState(0x89d6, 0xa6f, 0x7550, 0x1868, 0x9a51, 0x70e4, 0x1, 0x0);
        gbc.writeMem(0x70e4, { 0xad });
        gbc.writeMem(0x89d6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa6f, gbc.sp());
        EXPECT(0x89d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d6));
        EXPECT(0x66, gbc.readMem(0x89d7));
        // CB 66 0019
        gbc.setState(0x9083, 0xdbbb, 0x8160, 0x2f08, 0xcb7d, 0xa7ce, 0x1, 0x1);
        gbc.writeMem(0x9083, { 0xcb, 0x66 });
        gbc.writeMem(0xa7ce, { 0x53 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdbbb, gbc.sp());
        EXPECT(0x9085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9083));
        EXPECT(0x66, gbc.readMem(0x9084));
        EXPECT(0x53, gbc.readMem(0xa7ce));
        // CB 66 001A
        gbc.setState(0x8f9, 0x2177, 0x32b0, 0xea90, 0xc750, 0x4e39, 0x0, 0x0);
        gbc.writeMem(0x8f9, { 0xcb, 0x66 });
        gbc.writeMem(0x4e39, { 0xdd });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2177, gbc.sp());
        EXPECT(0x8fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 001B
        gbc.setState(0xfd1, 0xaf8, 0x8e0, 0x3f14, 0x79c0, 0x8b4b, 0x0, 0x1);
        gbc.writeMem(0xfd1, { 0xcb, 0x66 });
        gbc.writeMem(0x8b4b, { 0xe9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xaf8, gbc.sp());
        EXPECT(0xfd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8b4b));
        // CB 66 001C
        gbc.setState(0x59fd, 0x7727, 0x10f0, 0xb6a9, 0x2e3d, 0xf19, 0x1, 0x1);
        gbc.writeMem(0xf19, { 0x3d });
        gbc.writeMem(0x59fd, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7727, gbc.sp());
        EXPECT(0x59ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 001D
        gbc.setState(0x44aa, 0x697b, 0xc770, 0x38f, 0xdf0b, 0x805, 0x0, 0x1);
        gbc.writeMem(0x805, { 0xf5 });
        gbc.writeMem(0x44aa, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x697b, gbc.sp());
        EXPECT(0x44ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 001E
        gbc.setState(0x7700, 0x5b98, 0x59a0, 0x6809, 0xdbe5, 0xfab, 0x0, 0x1);
        gbc.writeMem(0xfab, { 0x24 });
        gbc.writeMem(0x7700, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5b98, gbc.sp());
        EXPECT(0x7702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 001F
        gbc.setState(0x4133, 0xcb3e, 0x820, 0x9b4, 0x32f2, 0x2d35, 0x1, 0x1);
        gbc.writeMem(0x2d35, { 0x36 });
        gbc.writeMem(0x4133, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcb3e, gbc.sp());
        EXPECT(0x4135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0020
        gbc.setState(0xb75d, 0x5bd6, 0xc390, 0xda4d, 0x774, 0xefe7, 0x1, 0x1);
        gbc.writeMem(0xb75d, { 0xcb, 0x66 });
        gbc.writeMem(0xefe7, { 0x1f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5bd6, gbc.sp());
        EXPECT(0xb75f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb75d));
        EXPECT(0x66, gbc.readMem(0xb75e));
        EXPECT(0x1f, gbc.readMem(0xefe7));
        // CB 66 0021
        gbc.setState(0xcc90, 0x76e, 0xdcc0, 0x6216, 0xe041, 0x8ba6, 0x1, 0x1);
        gbc.writeMem(0x8ba6, { 0xf9 });
        gbc.writeMem(0xcc90, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x76e, gbc.sp());
        EXPECT(0xcc92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x8ba6));
        EXPECT(0xcb, gbc.readMem(0xcc90));
        EXPECT(0x66, gbc.readMem(0xcc91));
        // CB 66 0022
        gbc.setState(0x5e6a, 0x1b52, 0x1a30, 0xff5d, 0x2cb, 0x5554, 0x1, 0x1);
        gbc.writeMem(0x5554, { 0x5b });
        gbc.writeMem(0x5e6a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1b52, gbc.sp());
        EXPECT(0x5e6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0023
        gbc.setState(0xb465, 0xbdea, 0xa950, 0x90de, 0x9b70, 0x31a9, 0x1, 0x0);
        gbc.writeMem(0x31a9, { 0x84 });
        gbc.writeMem(0xb465, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xbdea, gbc.sp());
        EXPECT(0xb467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb465));
        EXPECT(0x66, gbc.readMem(0xb466));
        // CB 66 0024
        gbc.setState(0x7a71, 0x52bc, 0xfd0, 0xe75b, 0xb5b2, 0x1ad3, 0x0, 0x0);
        gbc.writeMem(0x1ad3, { 0xb6 });
        gbc.writeMem(0x7a71, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x52bc, gbc.sp());
        EXPECT(0x7a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0025
        gbc.setState(0x1b9c, 0xd41e, 0xde90, 0x3a30, 0x1bf2, 0xb584, 0x0, 0x0);
        gbc.writeMem(0x1b9c, { 0xcb, 0x66 });
        gbc.writeMem(0xb584, { 0x36 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd41e, gbc.sp());
        EXPECT(0x1b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb584));
        // CB 66 0026
        gbc.setState(0xe92b, 0x9da5, 0x6390, 0xf61c, 0x8ecf, 0x33a3, 0x1, 0x0);
        gbc.writeMem(0x33a3, { 0x44 });
        gbc.writeMem(0xe92b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9da5, gbc.sp());
        EXPECT(0xe92d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe92b));
        EXPECT(0x66, gbc.readMem(0xe92c));
        // CB 66 0027
        gbc.setState(0x5781, 0x113f, 0x1b20, 0x7d10, 0x46f, 0xfe63, 0x1, 0x1);
        gbc.writeMem(0x5781, { 0xcb, 0x66 });
        gbc.writeMem(0xfe63, { 0x7d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x113f, gbc.sp());
        EXPECT(0x5783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xfe63));
        // CB 66 0028
        gbc.setState(0x47a, 0x658, 0x5d10, 0xb98b, 0x388a, 0xd30d, 0x0, 0x0);
        gbc.writeMem(0x47a, { 0xcb, 0x66 });
        gbc.writeMem(0xd30d, { 0x8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x658, gbc.sp());
        EXPECT(0x47c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xd30d));
        // CB 66 0029
        gbc.setState(0x6258, 0x1706, 0x30b0, 0x3390, 0x2461, 0xb1dc, 0x0, 0x1);
        gbc.writeMem(0x6258, { 0xcb, 0x66 });
        gbc.writeMem(0xb1dc, { 0xd6 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1706, gbc.sp());
        EXPECT(0x625a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb1dc));
        // CB 66 002A
        gbc.setState(0x3d3d, 0xf94a, 0x5c90, 0xf0c9, 0xedfe, 0xf4a5, 0x1, 0x1);
        gbc.writeMem(0x3d3d, { 0xcb, 0x66 });
        gbc.writeMem(0xf4a5, { 0x2b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf94a, gbc.sp());
        EXPECT(0x3d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xf4a5));
        // CB 66 002B
        gbc.setState(0xdc4b, 0xd1aa, 0x9180, 0x8ef8, 0x4543, 0x2a9c, 0x0, 0x1);
        gbc.writeMem(0x2a9c, { 0x7d });
        gbc.writeMem(0xdc4b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd1aa, gbc.sp());
        EXPECT(0xdc4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc4b));
        EXPECT(0x66, gbc.readMem(0xdc4c));
        // CB 66 002D
        gbc.setState(0xa6de, 0x4eea, 0xf310, 0xb8c7, 0xe793, 0xb50b, 0x0, 0x0);
        gbc.writeMem(0xa6de, { 0xcb, 0x66 });
        gbc.writeMem(0xb50b, { 0xd3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4eea, gbc.sp());
        EXPECT(0xa6e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6de));
        EXPECT(0x66, gbc.readMem(0xa6df));
        EXPECT(0xd3, gbc.readMem(0xb50b));
        // CB 66 002E
        gbc.setState(0xd045, 0x453c, 0x4130, 0xf472, 0xa4ed, 0xeb01, 0x1, 0x0);
        gbc.writeMem(0xd045, { 0xcb, 0x66 });
        gbc.writeMem(0xeb01, { 0x4f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x453c, gbc.sp());
        EXPECT(0xd047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd045));
        EXPECT(0x66, gbc.readMem(0xd046));
        EXPECT(0x4f, gbc.readMem(0xeb01));
        // CB 66 002F
        gbc.setState(0x7ec, 0x5396, 0x2b80, 0x6c11, 0x4d37, 0xa968, 0x0, 0x0);
        gbc.writeMem(0x7ec, { 0xcb, 0x66 });
        gbc.writeMem(0xa968, { 0xd0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5396, gbc.sp());
        EXPECT(0x7ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa968));
        // CB 66 0030
        gbc.setState(0xde9d, 0xdf66, 0xd450, 0x13eb, 0x4edd, 0xaec8, 0x0, 0x0);
        gbc.writeMem(0xaec8, { 0x61 });
        gbc.writeMem(0xde9d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdf66, gbc.sp());
        EXPECT(0xde9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xaec8));
        EXPECT(0xcb, gbc.readMem(0xde9d));
        EXPECT(0x66, gbc.readMem(0xde9e));
        // CB 66 0031
        gbc.setState(0x59d8, 0xab08, 0xb1c0, 0x98ea, 0x2722, 0x3967, 0x0, 0x1);
        gbc.writeMem(0x3967, { 0x78 });
        gbc.writeMem(0x59d8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xab08, gbc.sp());
        EXPECT(0x59da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0032
        gbc.setState(0x9c52, 0xbd88, 0xed0, 0xaa24, 0x95cf, 0xa708, 0x1, 0x1);
        gbc.writeMem(0x9c52, { 0xcb, 0x66 });
        gbc.writeMem(0xa708, { 0xaf });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbd88, gbc.sp());
        EXPECT(0x9c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c52));
        EXPECT(0x66, gbc.readMem(0x9c53));
        EXPECT(0xaf, gbc.readMem(0xa708));
        // CB 66 0033
        gbc.setState(0xb8f6, 0xe1be, 0x9950, 0xd018, 0x87d0, 0xe7ba, 0x1, 0x0);
        gbc.writeMem(0xb8f6, { 0xcb, 0x66 });
        gbc.writeMem(0xe7ba, { 0x50 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe1be, gbc.sp());
        EXPECT(0xb8f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f6));
        EXPECT(0x66, gbc.readMem(0xb8f7));
        EXPECT(0x50, gbc.readMem(0xe7ba));
        // CB 66 0034
        gbc.setState(0x3052, 0xc3b2, 0x1120, 0x703, 0x2a55, 0xa722, 0x0, 0x1);
        gbc.writeMem(0x3052, { 0xcb, 0x66 });
        gbc.writeMem(0xa722, { 0x6c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc3b2, gbc.sp());
        EXPECT(0x3054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa722));
        // CB 66 0035
        gbc.setState(0xb5a, 0x604c, 0x73a0, 0x6e8d, 0xa887, 0x99d, 0x1, 0x1);
        gbc.writeMem(0x99d, { 0xf1 });
        gbc.writeMem(0xb5a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x604c, gbc.sp());
        EXPECT(0xb5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0036
        gbc.setState(0xcc94, 0xf189, 0x3990, 0xeb9, 0xd90f, 0xedd1, 0x1, 0x0);
        gbc.writeMem(0xcc94, { 0xcb, 0x66 });
        gbc.writeMem(0xedd1, { 0xc7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf189, gbc.sp());
        EXPECT(0xcc96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc94));
        EXPECT(0x66, gbc.readMem(0xcc95));
        EXPECT(0xc7, gbc.readMem(0xedd1));
        // CB 66 0037
        gbc.setState(0x166c, 0xe592, 0xb2c0, 0x38e5, 0x14c2, 0x57c7, 0x0, 0x1);
        gbc.writeMem(0x166c, { 0xcb, 0x66 });
        gbc.writeMem(0x57c7, { 0x7b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe592, gbc.sp());
        EXPECT(0x166e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0038
        gbc.setState(0x4b00, 0x464c, 0x70a0, 0xbd72, 0xf5dd, 0xb0d8, 0x0, 0x1);
        gbc.writeMem(0x4b00, { 0xcb, 0x66 });
        gbc.writeMem(0xb0d8, { 0xad });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x464c, gbc.sp());
        EXPECT(0x4b02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xb0d8));
        // CB 66 0039
        gbc.setState(0xd519, 0xcc91, 0x4a00, 0xec85, 0x2067, 0x24fe, 0x0, 0x0);
        gbc.writeMem(0x24fe, { 0x9f });
        gbc.writeMem(0xd519, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xcc91, gbc.sp());
        EXPECT(0xd51b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd519));
        EXPECT(0x66, gbc.readMem(0xd51a));
        // CB 66 003A
        gbc.setState(0xb1ab, 0x3e3c, 0x97f0, 0x3b9a, 0xf386, 0x52fb, 0x0, 0x0);
        gbc.writeMem(0x52fb, { 0xcd });
        gbc.writeMem(0xb1ab, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3e3c, gbc.sp());
        EXPECT(0xb1ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ab));
        EXPECT(0x66, gbc.readMem(0xb1ac));
        // CB 66 003B
        gbc.setState(0xbe51, 0x1574, 0x3700, 0xcab, 0xcdc1, 0x4424, 0x0, 0x0);
        gbc.writeMem(0x4424, { 0xa });
        gbc.writeMem(0xbe51, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1574, gbc.sp());
        EXPECT(0xbe53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe51));
        EXPECT(0x66, gbc.readMem(0xbe52));
        // CB 66 003C
        gbc.setState(0xd4f1, 0x9144, 0x9420, 0x817e, 0xd582, 0x6b53, 0x0, 0x1);
        gbc.writeMem(0x6b53, { 0x62 });
        gbc.writeMem(0xd4f1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9144, gbc.sp());
        EXPECT(0xd4f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f1));
        EXPECT(0x66, gbc.readMem(0xd4f2));
        // CB 66 003D
        gbc.setState(0xd27, 0x344, 0x30c0, 0x3cab, 0x6162, 0x7625, 0x1, 0x0);
        gbc.writeMem(0xd27, { 0xcb, 0x66 });
        gbc.writeMem(0x7625, { 0x39 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x344, gbc.sp());
        EXPECT(0xd29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 003E
        gbc.setState(0xa6a9, 0xe777, 0x6ae0, 0xcd85, 0x95bf, 0x81cf, 0x0, 0x0);
        gbc.writeMem(0x81cf, { 0x6b });
        gbc.writeMem(0xa6a9, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe777, gbc.sp());
        EXPECT(0xa6ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x81cf));
        EXPECT(0xcb, gbc.readMem(0xa6a9));
        EXPECT(0x66, gbc.readMem(0xa6aa));
        // CB 66 003F
        gbc.setState(0xe169, 0x3184, 0x7920, 0x2fb4, 0xf11, 0xaf58, 0x1, 0x0);
        gbc.writeMem(0xaf58, { 0x7e });
        gbc.writeMem(0xe169, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3184, gbc.sp());
        EXPECT(0xe16b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xaf58));
        EXPECT(0xcb, gbc.readMem(0xe169));
        EXPECT(0x66, gbc.readMem(0xe16a));
        // CB 66 0040
        gbc.setState(0xe2a4, 0x3bac, 0xea30, 0x71c5, 0xaf2e, 0xb40c, 0x1, 0x1);
        gbc.writeMem(0xb40c, { 0xb6 });
        gbc.writeMem(0xe2a4, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3bac, gbc.sp());
        EXPECT(0xe2a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb40c));
        EXPECT(0xcb, gbc.readMem(0xe2a4));
        EXPECT(0x66, gbc.readMem(0xe2a5));
        // CB 66 0041
        gbc.setState(0x9c9d, 0x939b, 0xf1c0, 0xba1f, 0x3689, 0x9130, 0x0, 0x1);
        gbc.writeMem(0x9130, { 0x82 });
        gbc.writeMem(0x9c9d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x939b, gbc.sp());
        EXPECT(0x9c9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9130));
        EXPECT(0xcb, gbc.readMem(0x9c9d));
        EXPECT(0x66, gbc.readMem(0x9c9e));
        // CB 66 0042
        gbc.setState(0xfe0, 0xf6fa, 0xed00, 0xae99, 0x4c6c, 0xa772, 0x0, 0x1);
        gbc.writeMem(0xfe0, { 0xcb, 0x66 });
        gbc.writeMem(0xa772, { 0x4b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf6fa, gbc.sp());
        EXPECT(0xfe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa772));
        // CB 66 0043
        gbc.setState(0xb79, 0xb7a, 0x680, 0x4e20, 0xa5b6, 0x768e, 0x1, 0x1);
        gbc.writeMem(0xb79, { 0xcb, 0x66 });
        gbc.writeMem(0x768e, { 0x81 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb7a, gbc.sp());
        EXPECT(0xb7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0044
        gbc.setState(0x61d3, 0xb83d, 0xcaa0, 0x489d, 0xc637, 0x3c10, 0x1, 0x0);
        gbc.writeMem(0x3c10, { 0x21 });
        gbc.writeMem(0x61d3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb83d, gbc.sp());
        EXPECT(0x61d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0045
        gbc.setState(0x607d, 0x3f53, 0xc10, 0x671b, 0x9862, 0x780d, 0x0, 0x0);
        gbc.writeMem(0x607d, { 0xcb, 0x66 });
        gbc.writeMem(0x780d, { 0xc6 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3f53, gbc.sp());
        EXPECT(0x607f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0046
        gbc.setState(0xe77f, 0x3e7e, 0xc340, 0x1fb6, 0x2477, 0x9066, 0x1, 0x0);
        gbc.writeMem(0x9066, { 0x66 });
        gbc.writeMem(0xe77f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3e7e, gbc.sp());
        EXPECT(0xe781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9066));
        EXPECT(0xcb, gbc.readMem(0xe77f));
        EXPECT(0x66, gbc.readMem(0xe780));
        // CB 66 0047
        gbc.setState(0x85c0, 0x7125, 0xc590, 0x22be, 0x3e15, 0xc5c0, 0x0, 0x1);
        gbc.writeMem(0x85c0, { 0xcb, 0x66 });
        gbc.writeMem(0xc5c0, { 0x4b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7125, gbc.sp());
        EXPECT(0x85c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c0));
        EXPECT(0x66, gbc.readMem(0x85c1));
        EXPECT(0x4b, gbc.readMem(0xc5c0));
        // CB 66 0048
        gbc.setState(0x436f, 0x469c, 0xe240, 0xddad, 0xbaed, 0xf371, 0x0, 0x1);
        gbc.writeMem(0x436f, { 0xcb, 0x66 });
        gbc.writeMem(0xf371, { 0xfb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x469c, gbc.sp());
        EXPECT(0x4371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xf371));
        // CB 66 0049
        gbc.setState(0x7f73, 0x30c2, 0x2910, 0x4c3c, 0xa40e, 0x3712, 0x0, 0x1);
        gbc.writeMem(0x3712, { 0x2b });
        gbc.writeMem(0x7f73, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x30c2, gbc.sp());
        EXPECT(0x7f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 004A
        gbc.setState(0xe886, 0x1b32, 0xec90, 0xfadc, 0x79e3, 0xa8d4, 0x1, 0x0);
        gbc.writeMem(0xa8d4, { 0x4a });
        gbc.writeMem(0xe886, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1b32, gbc.sp());
        EXPECT(0xe888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xa8d4));
        EXPECT(0xcb, gbc.readMem(0xe886));
        EXPECT(0x66, gbc.readMem(0xe887));
        // CB 66 004B
        gbc.setState(0x3b52, 0x3825, 0xe970, 0xbdf8, 0x9830, 0xc2d3, 0x1, 0x0);
        gbc.writeMem(0x3b52, { 0xcb, 0x66 });
        gbc.writeMem(0xc2d3, { 0x91 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3825, gbc.sp());
        EXPECT(0x3b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc2d3));
        // CB 66 004C
        gbc.setState(0x94fc, 0x4116, 0xfc60, 0x1647, 0x9d29, 0x223f, 0x1, 0x1);
        gbc.writeMem(0x223f, { 0xf7 });
        gbc.writeMem(0x94fc, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4116, gbc.sp());
        EXPECT(0x94fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94fc));
        EXPECT(0x66, gbc.readMem(0x94fd));
        // CB 66 004E
        gbc.setState(0xbf63, 0x72ed, 0x8810, 0x8cda, 0x4bd3, 0xb2d0, 0x1, 0x1);
        gbc.writeMem(0xb2d0, { 0x26 });
        gbc.writeMem(0xbf63, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x72ed, gbc.sp());
        EXPECT(0xbf65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb2d0));
        EXPECT(0xcb, gbc.readMem(0xbf63));
        EXPECT(0x66, gbc.readMem(0xbf64));
        // CB 66 004F
        gbc.setState(0xd93b, 0x4086, 0x82d0, 0x6517, 0x8e24, 0x9aef, 0x1, 0x0);
        gbc.writeMem(0x9aef, { 0xfb });
        gbc.writeMem(0xd93b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4086, gbc.sp());
        EXPECT(0xd93d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0x9aef));
        EXPECT(0xcb, gbc.readMem(0xd93b));
        EXPECT(0x66, gbc.readMem(0xd93c));
        // CB 66 0050
        gbc.setState(0xa05, 0x2ae5, 0x4530, 0x5bf9, 0xddce, 0xe61d, 0x1, 0x0);
        gbc.writeMem(0xa05, { 0xcb, 0x66 });
        gbc.writeMem(0xe61d, { 0xe5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2ae5, gbc.sp());
        EXPECT(0xa07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xe61d));
        // CB 66 0051
        gbc.setState(0x527e, 0x8d0e, 0x1950, 0x1c06, 0x622c, 0xd2ae, 0x1, 0x1);
        gbc.writeMem(0x527e, { 0xcb, 0x66 });
        gbc.writeMem(0xd2ae, { 0xcf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8d0e, gbc.sp());
        EXPECT(0x5280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xd2ae));
        // CB 66 0052
        gbc.setState(0x8ce7, 0x57c5, 0xc8c0, 0xbafc, 0x365c, 0x7f64, 0x0, 0x0);
        gbc.writeMem(0x7f64, { 0xd4 });
        gbc.writeMem(0x8ce7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x57c5, gbc.sp());
        EXPECT(0x8ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce7));
        EXPECT(0x66, gbc.readMem(0x8ce8));
        // CB 66 0053
        gbc.setState(0x8597, 0xeada, 0xbdc0, 0x7c32, 0x40aa, 0x99d6, 0x1, 0x0);
        gbc.writeMem(0x8597, { 0xcb, 0x66 });
        gbc.writeMem(0x99d6, { 0x2f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xeada, gbc.sp());
        EXPECT(0x8599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8597));
        EXPECT(0x66, gbc.readMem(0x8598));
        EXPECT(0x2f, gbc.readMem(0x99d6));
        // CB 66 0054
        gbc.setState(0x85a0, 0x5a1e, 0x3840, 0xa11f, 0x54f, 0xdb3d, 0x1, 0x1);
        gbc.writeMem(0x85a0, { 0xcb, 0x66 });
        gbc.writeMem(0xdb3d, { 0x3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5a1e, gbc.sp());
        EXPECT(0x85a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85a0));
        EXPECT(0x66, gbc.readMem(0x85a1));
        EXPECT(0x3, gbc.readMem(0xdb3d));
        // CB 66 0055
        gbc.setState(0x1b0b, 0x24f5, 0x1320, 0x14fe, 0xc6c9, 0xcf6e, 0x1, 0x0);
        gbc.writeMem(0x1b0b, { 0xcb, 0x66 });
        gbc.writeMem(0xcf6e, { 0x96 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x24f5, gbc.sp());
        EXPECT(0x1b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xcf6e));
        // CB 66 0056
        gbc.setState(0x71db, 0x6e4c, 0xb350, 0xe884, 0x1cac, 0xd718, 0x1, 0x0);
        gbc.writeMem(0x71db, { 0xcb, 0x66 });
        gbc.writeMem(0xd718, { 0xd8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6e4c, gbc.sp());
        EXPECT(0x71dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xd718));
        // CB 66 0057
        gbc.setState(0xa23e, 0xc6f5, 0xdf80, 0x6207, 0x5027, 0x63c7, 0x1, 0x1);
        gbc.writeMem(0x63c7, { 0x98 });
        gbc.writeMem(0xa23e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc6f5, gbc.sp());
        EXPECT(0xa240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa23e));
        EXPECT(0x66, gbc.readMem(0xa23f));
        // CB 66 0058
        gbc.setState(0x8d4c, 0x52b0, 0x7360, 0x84ee, 0xa490, 0x3a91, 0x0, 0x1);
        gbc.writeMem(0x3a91, { 0xda });
        gbc.writeMem(0x8d4c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x52b0, gbc.sp());
        EXPECT(0x8d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d4c));
        EXPECT(0x66, gbc.readMem(0x8d4d));
        // CB 66 0059
        gbc.setState(0xd390, 0x2906, 0x8010, 0xe920, 0xd20b, 0xc2bf, 0x1, 0x0);
        gbc.writeMem(0xc2bf, { 0xdd });
        gbc.writeMem(0xd390, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2906, gbc.sp());
        EXPECT(0xd392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xc2bf));
        EXPECT(0xcb, gbc.readMem(0xd390));
        EXPECT(0x66, gbc.readMem(0xd391));
        // CB 66 005A
        gbc.setState(0x700a, 0x7e36, 0x1cc0, 0x1138, 0xcb85, 0x8cbe, 0x1, 0x1);
        gbc.writeMem(0x700a, { 0xcb, 0x66 });
        gbc.writeMem(0x8cbe, { 0x18 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7e36, gbc.sp());
        EXPECT(0x700c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x8cbe));
        // CB 66 005B
        gbc.setState(0x6fc, 0x3d33, 0x86b0, 0xee6f, 0xa281, 0x9b63, 0x1, 0x0);
        gbc.writeMem(0x6fc, { 0xcb, 0x66 });
        gbc.writeMem(0x9b63, { 0xbb });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3d33, gbc.sp());
        EXPECT(0x6fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9b63));
        // CB 66 005C
        gbc.setState(0x7c71, 0xd147, 0x4aa0, 0x548e, 0x2c19, 0x1dbb, 0x0, 0x1);
        gbc.writeMem(0x1dbb, { 0xb4 });
        gbc.writeMem(0x7c71, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd147, gbc.sp());
        EXPECT(0x7c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 005D
        gbc.setState(0x682c, 0xbd46, 0x66c0, 0x311a, 0xb980, 0x3fb3, 0x1, 0x1);
        gbc.writeMem(0x3fb3, { 0x77 });
        gbc.writeMem(0x682c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xbd46, gbc.sp());
        EXPECT(0x682e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 005E
        gbc.setState(0x4a4, 0xcc1f, 0xe380, 0x9f4f, 0xaf40, 0xe03d, 0x0, 0x1);
        gbc.writeMem(0x4a4, { 0xcb, 0x66 });
        gbc.writeMem(0xe03d, { 0xd7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xcc1f, gbc.sp());
        EXPECT(0x4a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xe03d));
        // CB 66 005F
        gbc.setState(0xb16c, 0xbf99, 0xf3e0, 0x3edb, 0x8da7, 0x4e03, 0x1, 0x0);
        gbc.writeMem(0x4e03, { 0x8f });
        gbc.writeMem(0xb16c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbf99, gbc.sp());
        EXPECT(0xb16e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb16c));
        EXPECT(0x66, gbc.readMem(0xb16d));
        // CB 66 0060
        gbc.setState(0xbd1, 0x72cc, 0xb6a0, 0xaaec, 0xf4b8, 0x4218, 0x1, 0x0);
        gbc.writeMem(0xbd1, { 0xcb, 0x66 });
        gbc.writeMem(0x4218, { 0x5b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x72cc, gbc.sp());
        EXPECT(0xbd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0061
        gbc.setState(0xcc46, 0x66dd, 0x80e0, 0xb951, 0x28e8, 0x2162, 0x1, 0x1);
        gbc.writeMem(0x2162, { 0xc });
        gbc.writeMem(0xcc46, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x66dd, gbc.sp());
        EXPECT(0xcc48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc46));
        EXPECT(0x66, gbc.readMem(0xcc47));
        // CB 66 0062
        gbc.setState(0xeb89, 0x3ee2, 0x2d0, 0x7e0a, 0xac34, 0xa68c, 0x1, 0x1);
        gbc.writeMem(0xa68c, { 0xd7 });
        gbc.writeMem(0xeb89, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3ee2, gbc.sp());
        EXPECT(0xeb8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xa68c));
        EXPECT(0xcb, gbc.readMem(0xeb89));
        EXPECT(0x66, gbc.readMem(0xeb8a));
        // CB 66 0063
        gbc.setState(0x3fa5, 0xd960, 0xcd40, 0xb1da, 0x941d, 0xa2e4, 0x1, 0x0);
        gbc.writeMem(0x3fa5, { 0xcb, 0x66 });
        gbc.writeMem(0xa2e4, { 0xf });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd960, gbc.sp());
        EXPECT(0x3fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xa2e4));
        // CB 66 0064
        gbc.setState(0x6498, 0xe1fc, 0x3320, 0x9a3c, 0xcda4, 0xb27c, 0x0, 0x1);
        gbc.writeMem(0x6498, { 0xcb, 0x66 });
        gbc.writeMem(0xb27c, { 0x45 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe1fc, gbc.sp());
        EXPECT(0x649a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xb27c));
        // CB 66 0065
        gbc.setState(0x8fc2, 0xb289, 0x1b50, 0xea60, 0xf94d, 0x8f08, 0x0, 0x0);
        gbc.writeMem(0x8f08, { 0x82 });
        gbc.writeMem(0x8fc2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb289, gbc.sp());
        EXPECT(0x8fc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8f08));
        EXPECT(0xcb, gbc.readMem(0x8fc2));
        EXPECT(0x66, gbc.readMem(0x8fc3));
        // CB 66 0066
        gbc.setState(0xdff3, 0xc64e, 0x1610, 0x6bb2, 0xd579, 0x97e5, 0x0, 0x1);
        gbc.writeMem(0x97e5, { 0x46 });
        gbc.writeMem(0xdff3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc64e, gbc.sp());
        EXPECT(0xdff5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x97e5));
        EXPECT(0xcb, gbc.readMem(0xdff3));
        EXPECT(0x66, gbc.readMem(0xdff4));
        // CB 66 0067
        gbc.setState(0x6a8f, 0xa3f9, 0xb0, 0xa1cc, 0x687d, 0x9038, 0x1, 0x0);
        gbc.writeMem(0x6a8f, { 0xcb, 0x66 });
        gbc.writeMem(0x9038, { 0xea });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa3f9, gbc.sp());
        EXPECT(0x6a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x9038));
        // CB 66 0069
        gbc.setState(0x15bd, 0x15f3, 0x45c0, 0x7519, 0x9897, 0xed5a, 0x0, 0x0);
        gbc.writeMem(0x15bd, { 0xcb, 0x66 });
        gbc.writeMem(0xed5a, { 0x57 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x15f3, gbc.sp());
        EXPECT(0x15bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xed5a));
        // CB 66 006A
        gbc.setState(0x1f3d, 0xa1f1, 0x3c30, 0xbcaa, 0x1667, 0xcf19, 0x0, 0x1);
        gbc.writeMem(0x1f3d, { 0xcb, 0x66 });
        gbc.writeMem(0xcf19, { 0x10 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa1f1, gbc.sp());
        EXPECT(0x1f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcf19));
        // CB 66 006B
        gbc.setState(0x46ec, 0x3765, 0x2220, 0x75d7, 0x4b55, 0x4867, 0x1, 0x1);
        gbc.writeMem(0x46ec, { 0xcb, 0x66 });
        gbc.writeMem(0x4867, { 0x6c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3765, gbc.sp());
        EXPECT(0x46ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 006C
        gbc.setState(0x1906, 0x326, 0x59c0, 0xb4fb, 0x2780, 0xc99d, 0x1, 0x1);
        gbc.writeMem(0x1906, { 0xcb, 0x66 });
        gbc.writeMem(0xc99d, { 0xda });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x326, gbc.sp());
        EXPECT(0x1908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc99d));
        // CB 66 006D
        gbc.setState(0xd36e, 0xb358, 0xe390, 0xbc71, 0x41e7, 0xe928, 0x0, 0x1);
        gbc.writeMem(0xd36e, { 0xcb, 0x66 });
        gbc.writeMem(0xe928, { 0x77 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb358, gbc.sp());
        EXPECT(0xd370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd36e));
        EXPECT(0x66, gbc.readMem(0xd36f));
        EXPECT(0x77, gbc.readMem(0xe928));
        // CB 66 006E
        gbc.setState(0xe986, 0xfd4, 0xdee0, 0x9d57, 0x513b, 0xef17, 0x0, 0x0);
        gbc.writeMem(0xe986, { 0xcb, 0x66 });
        gbc.writeMem(0xef17, { 0x56 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfd4, gbc.sp());
        EXPECT(0xe988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe986));
        EXPECT(0x66, gbc.readMem(0xe987));
        EXPECT(0x56, gbc.readMem(0xef17));
        // CB 66 006F
        gbc.setState(0xb872, 0xce6a, 0xeb20, 0xe364, 0xc8f, 0xa08e, 0x1, 0x1);
        gbc.writeMem(0xa08e, { 0x8e });
        gbc.writeMem(0xb872, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xce6a, gbc.sp());
        EXPECT(0xb874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xa08e));
        EXPECT(0xcb, gbc.readMem(0xb872));
        EXPECT(0x66, gbc.readMem(0xb873));
        // CB 66 0070
        gbc.setState(0x2343, 0xc9ba, 0x6af0, 0xa71e, 0x5330, 0xe146, 0x0, 0x1);
        gbc.writeMem(0x2343, { 0xcb, 0x66 });
        gbc.writeMem(0xe146, { 0xf0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc9ba, gbc.sp());
        EXPECT(0x2345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe146));
        // CB 66 0071
        gbc.setState(0x8c3a, 0xd5f8, 0xe0f0, 0x7fb4, 0x71a7, 0x8706, 0x1, 0x0);
        gbc.writeMem(0x8706, { 0x9 });
        gbc.writeMem(0x8c3a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd5f8, gbc.sp());
        EXPECT(0x8c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8706));
        EXPECT(0xcb, gbc.readMem(0x8c3a));
        EXPECT(0x66, gbc.readMem(0x8c3b));
        // CB 66 0072
        gbc.setState(0xb033, 0xb5fd, 0xe8f0, 0xe71d, 0x2bb7, 0xb3d5, 0x0, 0x1);
        gbc.writeMem(0xb033, { 0xcb, 0x66 });
        gbc.writeMem(0xb3d5, { 0xe6 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb5fd, gbc.sp());
        EXPECT(0xb035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb033));
        EXPECT(0x66, gbc.readMem(0xb034));
        EXPECT(0xe6, gbc.readMem(0xb3d5));
        // CB 66 0073
        gbc.setState(0xddd, 0xc898, 0xee10, 0xa90a, 0xbb11, 0xb979, 0x0, 0x1);
        gbc.writeMem(0xddd, { 0xcb, 0x66 });
        gbc.writeMem(0xb979, { 0xec });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc898, gbc.sp());
        EXPECT(0xddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xb979));
        // CB 66 0074
        gbc.setState(0x223f, 0x8e47, 0x2180, 0xf12d, 0x513f, 0x2f7d, 0x1, 0x0);
        gbc.writeMem(0x223f, { 0xcb, 0x66 });
        gbc.writeMem(0x2f7d, { 0x4e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8e47, gbc.sp());
        EXPECT(0x2241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0075
        gbc.setState(0xb20, 0xa7, 0x7270, 0x4f5d, 0xc3cf, 0x5db8, 0x1, 0x0);
        gbc.writeMem(0xb20, { 0xcb, 0x66 });
        gbc.writeMem(0x5db8, { 0x96 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa7, gbc.sp());
        EXPECT(0xb22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0077
        gbc.setState(0x7c7f, 0x16b6, 0xd3c0, 0xf1aa, 0x945a, 0x67d9, 0x1, 0x1);
        gbc.writeMem(0x67d9, { 0xff });
        gbc.writeMem(0x7c7f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x16b6, gbc.sp());
        EXPECT(0x7c81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0078
        gbc.setState(0xeae9, 0xccb9, 0x4640, 0xb42d, 0xbafb, 0xf619, 0x0, 0x0);
        gbc.writeMem(0xeae9, { 0xcb, 0x66 });
        gbc.writeMem(0xf619, { 0x1f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xccb9, gbc.sp());
        EXPECT(0xeaeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae9));
        EXPECT(0x66, gbc.readMem(0xeaea));
        EXPECT(0x1f, gbc.readMem(0xf619));
        // CB 66 0079
        gbc.setState(0x24a6, 0xc10b, 0x710, 0xe85c, 0x6f47, 0xaef4, 0x0, 0x0);
        gbc.writeMem(0x24a6, { 0xcb, 0x66 });
        gbc.writeMem(0xaef4, { 0xde });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc10b, gbc.sp());
        EXPECT(0x24a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xaef4));
        // CB 66 007A
        gbc.setState(0xa897, 0xf369, 0xe4c0, 0xebe3, 0x5acc, 0xb83f, 0x1, 0x1);
        gbc.writeMem(0xa897, { 0xcb, 0x66 });
        gbc.writeMem(0xb83f, { 0x91 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf369, gbc.sp());
        EXPECT(0xa899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa897));
        EXPECT(0x66, gbc.readMem(0xa898));
        EXPECT(0x91, gbc.readMem(0xb83f));
        // CB 66 007B
        gbc.setState(0xd1c9, 0xbc08, 0x8e60, 0x1985, 0x5d9d, 0xc849, 0x0, 0x1);
        gbc.writeMem(0xc849, { 0xfb });
        gbc.writeMem(0xd1c9, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbc08, gbc.sp());
        EXPECT(0xd1cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xc849));
        EXPECT(0xcb, gbc.readMem(0xd1c9));
        EXPECT(0x66, gbc.readMem(0xd1ca));
        // CB 66 007C
        gbc.setState(0xad52, 0xacda, 0xe920, 0xfdf5, 0x1b95, 0xa9d9, 0x1, 0x0);
        gbc.writeMem(0xa9d9, { 0x18 });
        gbc.writeMem(0xad52, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xacda, gbc.sp());
        EXPECT(0xad54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xa9d9));
        EXPECT(0xcb, gbc.readMem(0xad52));
        EXPECT(0x66, gbc.readMem(0xad53));
        // CB 66 007D
        gbc.setState(0x7d41, 0xc5b1, 0xb120, 0x2ad0, 0x6b64, 0x6324, 0x0, 0x1);
        gbc.writeMem(0x6324, { 0xd7 });
        gbc.writeMem(0x7d41, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc5b1, gbc.sp());
        EXPECT(0x7d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 007E
        gbc.setState(0x33f, 0x5ab1, 0x1e00, 0x2274, 0xe66, 0x36ab, 0x1, 0x0);
        gbc.writeMem(0x33f, { 0xcb, 0x66 });
        gbc.writeMem(0x36ab, { 0x5c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5ab1, gbc.sp());
        EXPECT(0x341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 007F
        gbc.setState(0x6cd4, 0x36d7, 0xfa00, 0x646b, 0x91ac, 0xb8ec, 0x1, 0x0);
        gbc.writeMem(0x6cd4, { 0xcb, 0x66 });
        gbc.writeMem(0xb8ec, { 0x7f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x36d7, gbc.sp());
        EXPECT(0x6cd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xb8ec));
        // CB 66 0080
        gbc.setState(0x5194, 0xc049, 0xd610, 0xb6dd, 0x99cf, 0xb00c, 0x1, 0x1);
        gbc.writeMem(0x5194, { 0xcb, 0x66 });
        gbc.writeMem(0xb00c, { 0x32 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc049, gbc.sp());
        EXPECT(0x5196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xb00c));
        // CB 66 0081
        gbc.setState(0xd9ba, 0x26d9, 0xba40, 0xf1e3, 0x5eb, 0x385b, 0x0, 0x0);
        gbc.writeMem(0x385b, { 0x70 });
        gbc.writeMem(0xd9ba, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x26d9, gbc.sp());
        EXPECT(0xd9bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ba));
        EXPECT(0x66, gbc.readMem(0xd9bb));
        // CB 66 0082
        gbc.setState(0xdd38, 0xa94, 0x8650, 0x922c, 0x385e, 0x4e43, 0x1, 0x0);
        gbc.writeMem(0x4e43, { 0xde });
        gbc.writeMem(0xdd38, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa94, gbc.sp());
        EXPECT(0xdd3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd38));
        EXPECT(0x66, gbc.readMem(0xdd39));
        // CB 66 0083
        gbc.setState(0xd5bc, 0xfe1e, 0x5bd0, 0x4684, 0xe48f, 0xbc2a, 0x0, 0x0);
        gbc.writeMem(0xbc2a, { 0xe4 });
        gbc.writeMem(0xd5bc, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfe1e, gbc.sp());
        EXPECT(0xd5be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xbc2a));
        EXPECT(0xcb, gbc.readMem(0xd5bc));
        EXPECT(0x66, gbc.readMem(0xd5bd));
        // CB 66 0084
        gbc.setState(0xeb9c, 0x8af5, 0x82b0, 0x47eb, 0xe65, 0xa580, 0x1, 0x1);
        gbc.writeMem(0xa580, { 0xc1 });
        gbc.writeMem(0xeb9c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8af5, gbc.sp());
        EXPECT(0xeb9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa580));
        EXPECT(0xcb, gbc.readMem(0xeb9c));
        EXPECT(0x66, gbc.readMem(0xeb9d));
        // CB 66 0085
        gbc.setState(0x2a9b, 0x79a5, 0xd910, 0x114e, 0x3553, 0x14f2, 0x1, 0x0);
        gbc.writeMem(0x14f2, { 0x2c });
        gbc.writeMem(0x2a9b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x79a5, gbc.sp());
        EXPECT(0x2a9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0086
        gbc.setState(0xe21e, 0x15b2, 0x9b0, 0x16af, 0x74d0, 0xc656, 0x0, 0x0);
        gbc.writeMem(0xc656, { 0xa0 });
        gbc.writeMem(0xe21e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x15b2, gbc.sp());
        EXPECT(0xe220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc656));
        EXPECT(0xcb, gbc.readMem(0xe21e));
        EXPECT(0x66, gbc.readMem(0xe21f));
        // CB 66 0087
        gbc.setState(0x7f3e, 0x2a83, 0x5c70, 0x68ed, 0x149b, 0x7e67, 0x1, 0x0);
        gbc.writeMem(0x7e67, { 0x59 });
        gbc.writeMem(0x7f3e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2a83, gbc.sp());
        EXPECT(0x7f40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0088
        gbc.setState(0x9ed1, 0xbf51, 0x610, 0x2cbc, 0x6d0f, 0x1613, 0x1, 0x0);
        gbc.writeMem(0x1613, { 0xba });
        gbc.writeMem(0x9ed1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbf51, gbc.sp());
        EXPECT(0x9ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed1));
        EXPECT(0x66, gbc.readMem(0x9ed2));
        // CB 66 0089
        gbc.setState(0x1fee, 0xef1f, 0xf1e0, 0xff04, 0x18d3, 0x3b01, 0x1, 0x0);
        gbc.writeMem(0x1fee, { 0xcb, 0x66 });
        gbc.writeMem(0x3b01, { 0x74 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xef1f, gbc.sp());
        EXPECT(0x1ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 008A
        gbc.setState(0x55dc, 0x35f2, 0xa0c0, 0x1e81, 0x1c56, 0x34fe, 0x1, 0x0);
        gbc.writeMem(0x34fe, { 0x8f });
        gbc.writeMem(0x55dc, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x35f2, gbc.sp());
        EXPECT(0x55de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 008B
        gbc.setState(0xb14b, 0xa805, 0x9bc0, 0xb3b6, 0xb229, 0x6a54, 0x0, 0x1);
        gbc.writeMem(0x6a54, { 0x2d });
        gbc.writeMem(0xb14b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa805, gbc.sp());
        EXPECT(0xb14d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb14b));
        EXPECT(0x66, gbc.readMem(0xb14c));
        // CB 66 008C
        gbc.setState(0x45be, 0xbc73, 0x2870, 0xee5, 0x8ee5, 0x2b3, 0x0, 0x1);
        gbc.writeMem(0x2b3, { 0xc4 });
        gbc.writeMem(0x45be, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xbc73, gbc.sp());
        EXPECT(0x45c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 008D
        gbc.setState(0xdc84, 0x66b8, 0x1540, 0x4a20, 0xb2bf, 0x2897, 0x0, 0x1);
        gbc.writeMem(0x2897, { 0x88 });
        gbc.writeMem(0xdc84, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x66b8, gbc.sp());
        EXPECT(0xdc86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc84));
        EXPECT(0x66, gbc.readMem(0xdc85));
        // CB 66 008E
        gbc.setState(0x6b58, 0x7762, 0xc010, 0x44da, 0xf1e4, 0x8325, 0x1, 0x1);
        gbc.writeMem(0x6b58, { 0xcb, 0x66 });
        gbc.writeMem(0x8325, { 0xf8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7762, gbc.sp());
        EXPECT(0x6b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8325));
        // CB 66 008F
        gbc.setState(0x566f, 0x1805, 0x3810, 0xea9, 0x3340, 0x307a, 0x0, 0x1);
        gbc.writeMem(0x307a, { 0xc7 });
        gbc.writeMem(0x566f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1805, gbc.sp());
        EXPECT(0x5671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0090
        gbc.setState(0x2eb3, 0x454b, 0xed00, 0x3c50, 0xf3e4, 0x6181, 0x0, 0x0);
        gbc.writeMem(0x2eb3, { 0xcb, 0x66 });
        gbc.writeMem(0x6181, { 0x4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x454b, gbc.sp());
        EXPECT(0x2eb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0091
        gbc.setState(0x5297, 0xd334, 0x74e0, 0x838c, 0x6610, 0x99f8, 0x0, 0x1);
        gbc.writeMem(0x5297, { 0xcb, 0x66 });
        gbc.writeMem(0x99f8, { 0x4d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd334, gbc.sp());
        EXPECT(0x5299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x99f8));
        // CB 66 0092
        gbc.setState(0x1394, 0xea50, 0xb460, 0x8a4d, 0xa4a9, 0x7454, 0x0, 0x0);
        gbc.writeMem(0x1394, { 0xcb, 0x66 });
        gbc.writeMem(0x7454, { 0xb3 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xea50, gbc.sp());
        EXPECT(0x1396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0093
        gbc.setState(0x7661, 0xa048, 0x8b30, 0x4ad3, 0xc55f, 0x6318, 0x0, 0x1);
        gbc.writeMem(0x6318, { 0x41 });
        gbc.writeMem(0x7661, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa048, gbc.sp());
        EXPECT(0x7663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0094
        gbc.setState(0x110f, 0x7d1f, 0xb990, 0x1a9a, 0x62a6, 0x9a78, 0x1, 0x0);
        gbc.writeMem(0x110f, { 0xcb, 0x66 });
        gbc.writeMem(0x9a78, { 0xd2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7d1f, gbc.sp());
        EXPECT(0x1111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x9a78));
        // CB 66 0095
        gbc.setState(0x43e7, 0xde33, 0x90d0, 0xd603, 0xc1b8, 0xf6ba, 0x0, 0x0);
        gbc.writeMem(0x43e7, { 0xcb, 0x66 });
        gbc.writeMem(0xf6ba, { 0x2f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xde33, gbc.sp());
        EXPECT(0x43e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xf6ba));
        // CB 66 0096
        gbc.setState(0xd7ca, 0x79b0, 0x6e10, 0x3ea7, 0x767e, 0xe239, 0x0, 0x1);
        gbc.writeMem(0xd7ca, { 0xcb, 0x66 });
        gbc.writeMem(0xe239, { 0x1f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x79b0, gbc.sp());
        EXPECT(0xd7cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ca));
        EXPECT(0x66, gbc.readMem(0xd7cb));
        EXPECT(0x1f, gbc.readMem(0xe239));
        // CB 66 0097
        gbc.setState(0x50a6, 0xfddd, 0xc7f0, 0x3cfd, 0xf660, 0xde8b, 0x1, 0x0);
        gbc.writeMem(0x50a6, { 0xcb, 0x66 });
        gbc.writeMem(0xde8b, { 0xc9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfddd, gbc.sp());
        EXPECT(0x50a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xde8b));
        // CB 66 0098
        gbc.setState(0x5e4f, 0x3b9c, 0xca80, 0xdb82, 0x4b1, 0xe08c, 0x0, 0x1);
        gbc.writeMem(0x5e4f, { 0xcb, 0x66 });
        gbc.writeMem(0xe08c, { 0xad });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3b9c, gbc.sp());
        EXPECT(0x5e51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xe08c));
        // CB 66 009A
        gbc.setState(0x1baa, 0xa2c, 0xfb50, 0xfc43, 0x6f43, 0x81a7, 0x1, 0x0);
        gbc.writeMem(0x1baa, { 0xcb, 0x66 });
        gbc.writeMem(0x81a7, { 0xe9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa2c, gbc.sp());
        EXPECT(0x1bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x81a7));
        // CB 66 009B
        gbc.setState(0xb654, 0xda49, 0x530, 0x59cd, 0xd16f, 0x2c6b, 0x1, 0x1);
        gbc.writeMem(0x2c6b, { 0x10 });
        gbc.writeMem(0xb654, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xda49, gbc.sp());
        EXPECT(0xb656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb654));
        EXPECT(0x66, gbc.readMem(0xb655));
        // CB 66 009C
        gbc.setState(0x9134, 0xfca7, 0xf130, 0x45fd, 0x46e5, 0x84d4, 0x0, 0x0);
        gbc.writeMem(0x84d4, { 0x7d });
        gbc.writeMem(0x9134, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfca7, gbc.sp());
        EXPECT(0x9136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x84d4));
        EXPECT(0xcb, gbc.readMem(0x9134));
        EXPECT(0x66, gbc.readMem(0x9135));
        // CB 66 009D
        gbc.setState(0x3dfb, 0xe4d, 0xbc60, 0x10c7, 0xbf27, 0x3803, 0x1, 0x0);
        gbc.writeMem(0x3803, { 0x85 });
        gbc.writeMem(0x3dfb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe4d, gbc.sp());
        EXPECT(0x3dfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 009E
        gbc.setState(0x2d04, 0x25f5, 0x13d0, 0x4b90, 0x9bb3, 0xb6fe, 0x0, 0x0);
        gbc.writeMem(0x2d04, { 0xcb, 0x66 });
        gbc.writeMem(0xb6fe, { 0x66 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x25f5, gbc.sp());
        EXPECT(0x2d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb6fe));
        // CB 66 009F
        gbc.setState(0xcf1c, 0x3c09, 0x4c30, 0x606e, 0x42b3, 0x6a39, 0x0, 0x1);
        gbc.writeMem(0x6a39, { 0x5f });
        gbc.writeMem(0xcf1c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3c09, gbc.sp());
        EXPECT(0xcf1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf1c));
        EXPECT(0x66, gbc.readMem(0xcf1d));
        // CB 66 00A0
        gbc.setState(0xbff8, 0x910a, 0x4610, 0xb758, 0xb0f4, 0x17cb, 0x0, 0x1);
        gbc.writeMem(0x17cb, { 0x11 });
        gbc.writeMem(0xbff8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x910a, gbc.sp());
        EXPECT(0xbffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff8));
        EXPECT(0x66, gbc.readMem(0xbff9));
        // CB 66 00A2
        gbc.setState(0x3cb5, 0xd306, 0x3840, 0xdd7b, 0xac0b, 0x2f69, 0x1, 0x0);
        gbc.writeMem(0x2f69, { 0x59 });
        gbc.writeMem(0x3cb5, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd306, gbc.sp());
        EXPECT(0x3cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 00A3
        gbc.setState(0x8e58, 0xbfab, 0x5460, 0x3ba, 0xd08c, 0x1276, 0x1, 0x1);
        gbc.writeMem(0x1276, { 0x6b });
        gbc.writeMem(0x8e58, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbfab, gbc.sp());
        EXPECT(0x8e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e58));
        EXPECT(0x66, gbc.readMem(0x8e59));
        // CB 66 00A5
        gbc.setState(0x8dab, 0x5da8, 0x6c70, 0xc482, 0x125, 0x1696, 0x1, 0x1);
        gbc.writeMem(0x1696, { 0x6 });
        gbc.writeMem(0x8dab, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5da8, gbc.sp());
        EXPECT(0x8dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dab));
        EXPECT(0x66, gbc.readMem(0x8dac));
        // CB 66 00A6
        gbc.setState(0xfbf, 0x5159, 0x8890, 0x5b13, 0x2728, 0x3017, 0x1, 0x1);
        gbc.writeMem(0xfbf, { 0xcb, 0x66 });
        gbc.writeMem(0x3017, { 0x14 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5159, gbc.sp());
        EXPECT(0xfc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 00A7
        gbc.setState(0xee26, 0x49c1, 0x8c0, 0xd0e9, 0xc954, 0x63f8, 0x0, 0x0);
        gbc.writeMem(0x63f8, { 0x3d });
        gbc.writeMem(0xee26, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x49c1, gbc.sp());
        EXPECT(0xee28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee26));
        EXPECT(0x66, gbc.readMem(0xee27));
        // CB 66 00A8
        gbc.setState(0x156d, 0x1b91, 0x2600, 0x819a, 0xe13a, 0xd3cc, 0x0, 0x0);
        gbc.writeMem(0x156d, { 0xcb, 0x66 });
        gbc.writeMem(0xd3cc, { 0xac });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1b91, gbc.sp());
        EXPECT(0x156f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd3cc));
        // CB 66 00A9
        gbc.setState(0x7826, 0x87ed, 0xf170, 0xaa29, 0x3ca8, 0xedde, 0x1, 0x0);
        gbc.writeMem(0x7826, { 0xcb, 0x66 });
        gbc.writeMem(0xedde, { 0x1e });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x87ed, gbc.sp());
        EXPECT(0x7828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xedde));
        // CB 66 00AA
        gbc.setState(0xef20, 0xe24, 0x6730, 0x6336, 0xf524, 0x1592, 0x1, 0x0);
        gbc.writeMem(0x1592, { 0xa3 });
        gbc.writeMem(0xef20, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe24, gbc.sp());
        EXPECT(0xef22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef20));
        EXPECT(0x66, gbc.readMem(0xef21));
        // CB 66 00AB
        gbc.setState(0x6a65, 0xc9fb, 0x7930, 0x15a5, 0x3abc, 0x83d0, 0x1, 0x0);
        gbc.writeMem(0x6a65, { 0xcb, 0x66 });
        gbc.writeMem(0x83d0, { 0x78 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc9fb, gbc.sp());
        EXPECT(0x6a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x83d0));
        // CB 66 00AC
        gbc.setState(0x33a4, 0x2b7c, 0x59b0, 0xec97, 0xb28, 0xbdcf, 0x1, 0x0);
        gbc.writeMem(0x33a4, { 0xcb, 0x66 });
        gbc.writeMem(0xbdcf, { 0xfb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2b7c, gbc.sp());
        EXPECT(0x33a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xbdcf));
        // CB 66 00AD
        gbc.setState(0xa964, 0x3e9b, 0x3490, 0x8df8, 0x1149, 0xd73, 0x1, 0x1);
        gbc.writeMem(0xd73, { 0xa8 });
        gbc.writeMem(0xa964, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3e9b, gbc.sp());
        EXPECT(0xa966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa964));
        EXPECT(0x66, gbc.readMem(0xa965));
        // CB 66 00AE
        gbc.setState(0xc569, 0x1bb9, 0xf3f0, 0x909, 0xf3ef, 0xbde8, 0x0, 0x0);
        gbc.writeMem(0xbde8, { 0x33 });
        gbc.writeMem(0xc569, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1bb9, gbc.sp());
        EXPECT(0xc56b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbde8));
        EXPECT(0xcb, gbc.readMem(0xc569));
        EXPECT(0x66, gbc.readMem(0xc56a));
        // CB 66 00AF
        gbc.setState(0x7345, 0xb72e, 0xa90, 0x375f, 0x8790, 0x6dbe, 0x0, 0x1);
        gbc.writeMem(0x6dbe, { 0xf2 });
        gbc.writeMem(0x7345, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb72e, gbc.sp());
        EXPECT(0x7347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 00B0
        gbc.setState(0x6186, 0xd657, 0x9c0, 0xc0b2, 0xa6ad, 0x8aff, 0x1, 0x1);
        gbc.writeMem(0x6186, { 0xcb, 0x66 });
        gbc.writeMem(0x8aff, { 0x57 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd657, gbc.sp());
        EXPECT(0x6188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8aff));
        // CB 66 00B1
        gbc.setState(0xb2f0, 0xec2b, 0xe480, 0x681e, 0xa89c, 0x86c2, 0x0, 0x1);
        gbc.writeMem(0x86c2, { 0xec });
        gbc.writeMem(0xb2f0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xec2b, gbc.sp());
        EXPECT(0xb2f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x86c2));
        EXPECT(0xcb, gbc.readMem(0xb2f0));
        EXPECT(0x66, gbc.readMem(0xb2f1));
        // CB 66 00B2
        gbc.setState(0x9118, 0x8123, 0xaf20, 0xbc5b, 0x1f1e, 0xb72, 0x0, 0x1);
        gbc.writeMem(0xb72, { 0xbc });
        gbc.writeMem(0x9118, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8123, gbc.sp());
        EXPECT(0x911a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9118));
        EXPECT(0x66, gbc.readMem(0x9119));
        // CB 66 00B3
        gbc.setState(0x1e8a, 0x5df8, 0x7ac0, 0xfb9e, 0xe448, 0x2626, 0x0, 0x0);
        gbc.writeMem(0x1e8a, { 0xcb, 0x66 });
        gbc.writeMem(0x2626, { 0x49 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5df8, gbc.sp());
        EXPECT(0x1e8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 00B4
        gbc.setState(0xae38, 0xe4a9, 0x4c10, 0x28cf, 0xa08c, 0x1691, 0x1, 0x0);
        gbc.writeMem(0x1691, { 0x5 });
        gbc.writeMem(0xae38, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe4a9, gbc.sp());
        EXPECT(0xae3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae38));
        EXPECT(0x66, gbc.readMem(0xae39));
        // CB 66 00B5
        gbc.setState(0x3458, 0x589, 0x570, 0x10fe, 0xab00, 0x4b3b, 0x1, 0x0);
        gbc.writeMem(0x3458, { 0xcb, 0x66 });
        gbc.writeMem(0x4b3b, { 0x35 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x589, gbc.sp());
        EXPECT(0x345a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 00B6
        gbc.setState(0xdd37, 0x94dc, 0x4380, 0x2315, 0xd03a, 0xdc79, 0x0, 0x1);
        gbc.writeMem(0xdc79, { 0x4f });
        gbc.writeMem(0xdd37, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x94dc, gbc.sp());
        EXPECT(0xdd39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xdc79));
        EXPECT(0xcb, gbc.readMem(0xdd37));
        EXPECT(0x66, gbc.readMem(0xdd38));
        // CB 66 00B7
        gbc.setState(0x98aa, 0x527a, 0x5cf0, 0x6b4c, 0xacf3, 0x1c34, 0x1, 0x0);
        gbc.writeMem(0x1c34, { 0x54 });
        gbc.writeMem(0x98aa, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x527a, gbc.sp());
        EXPECT(0x98ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98aa));
        EXPECT(0x66, gbc.readMem(0x98ab));
        // CB 66 00B8
        gbc.setState(0x6a1, 0x75f5, 0xf200, 0x481d, 0x962b, 0x8b87, 0x0, 0x1);
        gbc.writeMem(0x6a1, { 0xcb, 0x66 });
        gbc.writeMem(0x8b87, { 0x2f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x75f5, gbc.sp());
        EXPECT(0x6a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8b87));
        // CB 66 00B9
        gbc.setState(0x4615, 0xcb9b, 0x6e50, 0x57f8, 0x5d15, 0x7aa5, 0x1, 0x1);
        gbc.writeMem(0x4615, { 0xcb, 0x66 });
        gbc.writeMem(0x7aa5, { 0x7a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xcb9b, gbc.sp());
        EXPECT(0x4617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 00BA
        gbc.setState(0x243c, 0xe77b, 0x61f0, 0xfc97, 0x2fe5, 0x3677, 0x0, 0x0);
        gbc.writeMem(0x243c, { 0xcb, 0x66 });
        gbc.writeMem(0x3677, { 0xcb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe77b, gbc.sp());
        EXPECT(0x243e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 00BB
        gbc.setState(0x4cdd, 0x2fbc, 0xbc70, 0x89d5, 0x6a39, 0xd657, 0x1, 0x0);
        gbc.writeMem(0x4cdd, { 0xcb, 0x66 });
        gbc.writeMem(0xd657, { 0x96 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2fbc, gbc.sp());
        EXPECT(0x4cdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xd657));
        // CB 66 00BC
        gbc.setState(0xa77b, 0x4065, 0x40d0, 0x5910, 0x19f6, 0xd41, 0x1, 0x0);
        gbc.writeMem(0xd41, { 0xdc });
        gbc.writeMem(0xa77b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4065, gbc.sp());
        EXPECT(0xa77d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa77b));
        EXPECT(0x66, gbc.readMem(0xa77c));
        // CB 66 00BD
        gbc.setState(0xd321, 0x9fb7, 0x5170, 0xf405, 0xc434, 0x21ee, 0x1, 0x1);
        gbc.writeMem(0x21ee, { 0x75 });
        gbc.writeMem(0xd321, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9fb7, gbc.sp());
        EXPECT(0xd323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd321));
        EXPECT(0x66, gbc.readMem(0xd322));
        // CB 66 00BE
        gbc.setState(0x3ff1, 0x3381, 0x1a30, 0x8de3, 0x7d33, 0x648b, 0x1, 0x1);
        gbc.writeMem(0x3ff1, { 0xcb, 0x66 });
        gbc.writeMem(0x648b, { 0x4e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3381, gbc.sp());
        EXPECT(0x3ff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 00BF
        gbc.setState(0x3172, 0x5ea2, 0x6400, 0xfca5, 0xafb0, 0xbe7e, 0x0, 0x1);
        gbc.writeMem(0x3172, { 0xcb, 0x66 });
        gbc.writeMem(0xbe7e, { 0x8d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5ea2, gbc.sp());
        EXPECT(0x3174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbe7e));
        // CB 66 00C0
        gbc.setState(0x4ac8, 0x9ae9, 0x7130, 0xfabb, 0x2a9, 0xdc2, 0x0, 0x0);
        gbc.writeMem(0xdc2, { 0xc7 });
        gbc.writeMem(0x4ac8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9ae9, gbc.sp());
        EXPECT(0x4aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 00C1
        gbc.setState(0x7dde, 0x5767, 0xa1c0, 0x61df, 0x6174, 0xfb06, 0x1, 0x1);
        gbc.writeMem(0x7dde, { 0xcb, 0x66 });
        gbc.writeMem(0xfb06, { 0x99 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5767, gbc.sp());
        EXPECT(0x7de0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xfb06));
        // CB 66 00C2
        gbc.setState(0x9e02, 0x7011, 0x79b0, 0xbcf, 0x806a, 0x408c, 0x0, 0x1);
        gbc.writeMem(0x408c, { 0x9c });
        gbc.writeMem(0x9e02, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7011, gbc.sp());
        EXPECT(0x9e04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e02));
        EXPECT(0x66, gbc.readMem(0x9e03));
        // CB 66 00C3
        gbc.setState(0x142d, 0xde9d, 0xaf50, 0x5610, 0x1033, 0xe676, 0x1, 0x0);
        gbc.writeMem(0x142d, { 0xcb, 0x66 });
        gbc.writeMem(0xe676, { 0x8c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xde9d, gbc.sp());
        EXPECT(0x142f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe676));
        // CB 66 00C4
        gbc.setState(0xbc28, 0x38b9, 0xc7f0, 0x28ce, 0x611f, 0x4579, 0x0, 0x1);
        gbc.writeMem(0x4579, { 0xe0 });
        gbc.writeMem(0xbc28, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x38b9, gbc.sp());
        EXPECT(0xbc2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc28));
        EXPECT(0x66, gbc.readMem(0xbc29));
        // CB 66 00C5
        gbc.setState(0x65fb, 0x46c1, 0xab40, 0xf069, 0x6d15, 0x8443, 0x0, 0x1);
        gbc.writeMem(0x65fb, { 0xcb, 0x66 });
        gbc.writeMem(0x8443, { 0x6d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x46c1, gbc.sp());
        EXPECT(0x65fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8443));
        // CB 66 00C6
        gbc.setState(0x162f, 0xfd09, 0x5db0, 0xe802, 0xbfe8, 0x14d0, 0x1, 0x0);
        gbc.writeMem(0x14d0, { 0xf0 });
        gbc.writeMem(0x162f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfd09, gbc.sp());
        EXPECT(0x1631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 00C7
        gbc.setState(0x3f4, 0x2e69, 0xc380, 0xf674, 0x17fb, 0x2185, 0x0, 0x0);
        gbc.writeMem(0x3f4, { 0xcb, 0x66 });
        gbc.writeMem(0x2185, { 0xef });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2e69, gbc.sp());
        EXPECT(0x3f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 00C8
        gbc.setState(0xabda, 0xc09c, 0xbb30, 0x91dc, 0x272e, 0xcdcd, 0x0, 0x1);
        gbc.writeMem(0xabda, { 0xcb, 0x66 });
        gbc.writeMem(0xcdcd, { 0xc1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc09c, gbc.sp());
        EXPECT(0xabdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabda));
        EXPECT(0x66, gbc.readMem(0xabdb));
        EXPECT(0xc1, gbc.readMem(0xcdcd));
        // CB 66 00C9
        gbc.setState(0xa18c, 0xea59, 0x9b20, 0xc22b, 0xf225, 0xf825, 0x1, 0x0);
        gbc.writeMem(0xa18c, { 0xcb, 0x66 });
        gbc.writeMem(0xf825, { 0xf2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xea59, gbc.sp());
        EXPECT(0xa18e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa18c));
        EXPECT(0x66, gbc.readMem(0xa18d));
        EXPECT(0xf2, gbc.readMem(0xf825));
        // CB 66 00CA
        gbc.setState(0x764c, 0x4589, 0x7f20, 0xf12d, 0x353a, 0x5483, 0x1, 0x0);
        gbc.writeMem(0x5483, { 0xa0 });
        gbc.writeMem(0x764c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4589, gbc.sp());
        EXPECT(0x764e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 00CB
        gbc.setState(0xdb8a, 0xbae5, 0x8940, 0x99d4, 0x40f5, 0x6e41, 0x1, 0x0);
        gbc.writeMem(0x6e41, { 0xbe });
        gbc.writeMem(0xdb8a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbae5, gbc.sp());
        EXPECT(0xdb8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb8a));
        EXPECT(0x66, gbc.readMem(0xdb8b));
        // CB 66 00CC
        gbc.setState(0x6d53, 0xaa9f, 0x6950, 0xadd, 0x2191, 0x5dad, 0x0, 0x1);
        gbc.writeMem(0x5dad, { 0x64 });
        gbc.writeMem(0x6d53, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xaa9f, gbc.sp());
        EXPECT(0x6d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 00CD
        gbc.setState(0xad98, 0xaa16, 0x6870, 0xf64a, 0x9b42, 0x3179, 0x0, 0x1);
        gbc.writeMem(0x3179, { 0x42 });
        gbc.writeMem(0xad98, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xaa16, gbc.sp());
        EXPECT(0xad9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad98));
        EXPECT(0x66, gbc.readMem(0xad99));
        // CB 66 00CE
        gbc.setState(0x8efa, 0x6a1d, 0x3660, 0x6a3c, 0x71f2, 0x6a58, 0x0, 0x0);
        gbc.writeMem(0x6a58, { 0x6e });
        gbc.writeMem(0x8efa, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6a1d, gbc.sp());
        EXPECT(0x8efc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8efa));
        EXPECT(0x66, gbc.readMem(0x8efb));
        // CB 66 00CF
        gbc.setState(0x252a, 0x2ed1, 0x2d0, 0xdc8b, 0xd8fa, 0x70a8, 0x0, 0x0);
        gbc.writeMem(0x252a, { 0xcb, 0x66 });
        gbc.writeMem(0x70a8, { 0x1a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2ed1, gbc.sp());
        EXPECT(0x252c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 00D0
        gbc.setState(0x5292, 0x1e70, 0x2c70, 0x1741, 0x5220, 0xa227, 0x1, 0x0);
        gbc.writeMem(0x5292, { 0xcb, 0x66 });
        gbc.writeMem(0xa227, { 0xd4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1e70, gbc.sp());
        EXPECT(0x5294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa227));
        // CB 66 00D1
        gbc.setState(0x6ed0, 0x3208, 0xba70, 0x9cc, 0x5de0, 0x323f, 0x1, 0x0);
        gbc.writeMem(0x323f, { 0x93 });
        gbc.writeMem(0x6ed0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3208, gbc.sp());
        EXPECT(0x6ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 00D2
        gbc.setState(0xb460, 0x93ff, 0x2ec0, 0xec2c, 0x988d, 0x700f, 0x0, 0x0);
        gbc.writeMem(0x700f, { 0x1 });
        gbc.writeMem(0xb460, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x93ff, gbc.sp());
        EXPECT(0xb462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb460));
        EXPECT(0x66, gbc.readMem(0xb461));
        // CB 66 00D3
        gbc.setState(0xdd55, 0x686a, 0x2540, 0x4f61, 0x4e4d, 0x577c, 0x0, 0x0);
        gbc.writeMem(0x577c, { 0xec });
        gbc.writeMem(0xdd55, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x686a, gbc.sp());
        EXPECT(0xdd57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd55));
        EXPECT(0x66, gbc.readMem(0xdd56));
        // CB 66 00D4
        gbc.setState(0x8758, 0xd030, 0x0, 0xc60c, 0x8cea, 0x8985, 0x0, 0x0);
        gbc.writeMem(0x8758, { 0xcb, 0x66 });
        gbc.writeMem(0x8985, { 0x3b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd030, gbc.sp());
        EXPECT(0x875a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8758));
        EXPECT(0x66, gbc.readMem(0x8759));
        EXPECT(0x3b, gbc.readMem(0x8985));
        // CB 66 00D5
        gbc.setState(0xb35b, 0xc501, 0x82f0, 0xd9de, 0xbe60, 0x9e38, 0x1, 0x0);
        gbc.writeMem(0x9e38, { 0xef });
        gbc.writeMem(0xb35b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc501, gbc.sp());
        EXPECT(0xb35d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x9e38));
        EXPECT(0xcb, gbc.readMem(0xb35b));
        EXPECT(0x66, gbc.readMem(0xb35c));
        // CB 66 00D6
        gbc.setState(0xcaa4, 0x77b6, 0x1080, 0xd318, 0x9f97, 0x405a, 0x0, 0x1);
        gbc.writeMem(0x405a, { 0x75 });
        gbc.writeMem(0xcaa4, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x77b6, gbc.sp());
        EXPECT(0xcaa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaa4));
        EXPECT(0x66, gbc.readMem(0xcaa5));
        // CB 66 00D7
        gbc.setState(0x1c8f, 0x10b6, 0x3400, 0xb861, 0xc627, 0xd401, 0x0, 0x0);
        gbc.writeMem(0x1c8f, { 0xcb, 0x66 });
        gbc.writeMem(0xd401, { 0x1e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x10b6, gbc.sp());
        EXPECT(0x1c91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xd401));
        // CB 66 00D8
        gbc.setState(0xb553, 0xe937, 0x380, 0x9496, 0xa36c, 0x1888, 0x0, 0x0);
        gbc.writeMem(0x1888, { 0xa1 });
        gbc.writeMem(0xb553, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe937, gbc.sp());
        EXPECT(0xb555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb553));
        EXPECT(0x66, gbc.readMem(0xb554));
        // CB 66 00D9
        gbc.setState(0x5a23, 0xae73, 0x37d0, 0x4653, 0xdd59, 0xbf00, 0x1, 0x0);
        gbc.writeMem(0x5a23, { 0xcb, 0x66 });
        gbc.writeMem(0xbf00, { 0xbb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xae73, gbc.sp());
        EXPECT(0x5a25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbf00));
        // CB 66 00DA
        gbc.setState(0x3b09, 0xd83e, 0x4530, 0xa646, 0xff7a, 0xbc06, 0x1, 0x0);
        gbc.writeMem(0x3b09, { 0xcb, 0x66 });
        gbc.writeMem(0xbc06, { 0x97 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd83e, gbc.sp());
        EXPECT(0x3b0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbc06));
        // CB 66 00DB
        gbc.setState(0x4a1f, 0xf540, 0x8310, 0x536b, 0xfcd1, 0x9dc7, 0x1, 0x1);
        gbc.writeMem(0x4a1f, { 0xcb, 0x66 });
        gbc.writeMem(0x9dc7, { 0x5e });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf540, gbc.sp());
        EXPECT(0x4a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9dc7));
        // CB 66 00DC
        gbc.setState(0x34d7, 0x80e4, 0xaef0, 0x841e, 0x7a55, 0xbc75, 0x1, 0x0);
        gbc.writeMem(0x34d7, { 0xcb, 0x66 });
        gbc.writeMem(0xbc75, { 0x79 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x80e4, gbc.sp());
        EXPECT(0x34d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbc75));
        // CB 66 00DD
        gbc.setState(0xb9e3, 0xe3bd, 0xeee0, 0x66f7, 0xcbe5, 0xf9a7, 0x1, 0x0);
        gbc.writeMem(0xb9e3, { 0xcb, 0x66 });
        gbc.writeMem(0xf9a7, { 0xc9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe3bd, gbc.sp());
        EXPECT(0xb9e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9e3));
        EXPECT(0x66, gbc.readMem(0xb9e4));
        EXPECT(0xc9, gbc.readMem(0xf9a7));
        // CB 66 00DE
        gbc.setState(0xcf73, 0x9f41, 0x9e30, 0xe667, 0xf97c, 0x4587, 0x1, 0x1);
        gbc.writeMem(0x4587, { 0xaa });
        gbc.writeMem(0xcf73, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9f41, gbc.sp());
        EXPECT(0xcf75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf73));
        EXPECT(0x66, gbc.readMem(0xcf74));
        // CB 66 00DF
        gbc.setState(0x96dc, 0x17b5, 0x44d0, 0xd1bd, 0xd89a, 0x45, 0x1, 0x1);
        gbc.writeMem(0x45, { 0xaf });
        gbc.writeMem(0x96dc, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x17b5, gbc.sp());
        EXPECT(0x96de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96dc));
        EXPECT(0x66, gbc.readMem(0x96dd));
        // CB 66 00E0
        gbc.setState(0x5c91, 0xf161, 0x40d0, 0x372c, 0xd9d7, 0x80c2, 0x1, 0x1);
        gbc.writeMem(0x5c91, { 0xcb, 0x66 });
        gbc.writeMem(0x80c2, { 0xef });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf161, gbc.sp());
        EXPECT(0x5c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x80c2));
        // CB 66 00E1
        gbc.setState(0x8913, 0x3cd4, 0xbab0, 0x35ff, 0x98f9, 0xbc36, 0x1, 0x0);
        gbc.writeMem(0x8913, { 0xcb, 0x66 });
        gbc.writeMem(0xbc36, { 0x15 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3cd4, gbc.sp());
        EXPECT(0x8915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8913));
        EXPECT(0x66, gbc.readMem(0x8914));
        EXPECT(0x15, gbc.readMem(0xbc36));
        // CB 66 00E2
        gbc.setState(0x51e4, 0x93a, 0xbdf0, 0x963a, 0x1fc2, 0x6192, 0x1, 0x0);
        gbc.writeMem(0x51e4, { 0xcb, 0x66 });
        gbc.writeMem(0x6192, { 0x8a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x93a, gbc.sp());
        EXPECT(0x51e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 00E3
        gbc.setState(0x2947, 0x182c, 0xcb40, 0x2695, 0xd0de, 0xfb34, 0x0, 0x0);
        gbc.writeMem(0x2947, { 0xcb, 0x66 });
        gbc.writeMem(0xfb34, { 0x41 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x182c, gbc.sp());
        EXPECT(0x2949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xfb34));
        // CB 66 00E4
        gbc.setState(0x555a, 0x7776, 0x19b0, 0xc077, 0xfca7, 0xfa42, 0x1, 0x0);
        gbc.writeMem(0x555a, { 0xcb, 0x66 });
        gbc.writeMem(0xfa42, { 0x74 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7776, gbc.sp());
        EXPECT(0x555c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xfa42));
        // CB 66 00E5
        gbc.setState(0x6730, 0x1234, 0x5490, 0x828a, 0xe10b, 0x411b, 0x0, 0x1);
        gbc.writeMem(0x411b, { 0x39 });
        gbc.writeMem(0x6730, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1234, gbc.sp());
        EXPECT(0x6732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 00E6
        gbc.setState(0xc23, 0x7ebf, 0x6690, 0xb89f, 0xa065, 0x58d, 0x1, 0x1);
        gbc.writeMem(0x58d, { 0xae });
        gbc.writeMem(0xc23, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7ebf, gbc.sp());
        EXPECT(0xc25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 00E7
        gbc.setState(0xc432, 0x748a, 0x17b0, 0xea11, 0x918f, 0xf8fb, 0x0, 0x0);
        gbc.writeMem(0xc432, { 0xcb, 0x66 });
        gbc.writeMem(0xf8fb, { 0x3f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x748a, gbc.sp());
        EXPECT(0xc434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc432));
        EXPECT(0x66, gbc.readMem(0xc433));
        EXPECT(0x3f, gbc.readMem(0xf8fb));
        // CB 66 00E8
        gbc.setState(0xaf4d, 0x449e, 0x7280, 0xc1cd, 0xc560, 0xb15c, 0x0, 0x0);
        gbc.writeMem(0xaf4d, { 0xcb, 0x66 });
        gbc.writeMem(0xb15c, { 0x24 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x449e, gbc.sp());
        EXPECT(0xaf4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf4d));
        EXPECT(0x66, gbc.readMem(0xaf4e));
        EXPECT(0x24, gbc.readMem(0xb15c));
        // CB 66 00E9
        gbc.setState(0x2a10, 0x2ebf, 0xb100, 0xb99a, 0x9c0f, 0x62a0, 0x1, 0x1);
        gbc.writeMem(0x2a10, { 0xcb, 0x66 });
        gbc.writeMem(0x62a0, { 0x4b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2ebf, gbc.sp());
        EXPECT(0x2a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 00EA
        gbc.setState(0x1d6c, 0xb2ab, 0xcef0, 0xa1d, 0xc2c7, 0x6a29, 0x1, 0x1);
        gbc.writeMem(0x1d6c, { 0xcb, 0x66 });
        gbc.writeMem(0x6a29, { 0x8f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb2ab, gbc.sp());
        EXPECT(0x1d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 00EB
        gbc.setState(0x8b0e, 0x1816, 0xbdd0, 0x34f, 0xb12e, 0x3cb4, 0x1, 0x1);
        gbc.writeMem(0x3cb4, { 0x8d });
        gbc.writeMem(0x8b0e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1816, gbc.sp());
        EXPECT(0x8b10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b0e));
        EXPECT(0x66, gbc.readMem(0x8b0f));
        // CB 66 00EC
        gbc.setState(0xe9fa, 0x12f0, 0xc030, 0x70d9, 0x38c2, 0xc46, 0x1, 0x1);
        gbc.writeMem(0xc46, { 0x54 });
        gbc.writeMem(0xe9fa, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x12f0, gbc.sp());
        EXPECT(0xe9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9fa));
        EXPECT(0x66, gbc.readMem(0xe9fb));
        // CB 66 00ED
        gbc.setState(0x61b3, 0x2cb9, 0x4430, 0x71ab, 0x90dd, 0x4e55, 0x0, 0x1);
        gbc.writeMem(0x4e55, { 0xcb });
        gbc.writeMem(0x61b3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2cb9, gbc.sp());
        EXPECT(0x61b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 00EE
        gbc.setState(0x6939, 0xd642, 0xb980, 0xedd9, 0x8025, 0xd581, 0x1, 0x1);
        gbc.writeMem(0x6939, { 0xcb, 0x66 });
        gbc.writeMem(0xd581, { 0xa5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd642, gbc.sp());
        EXPECT(0x693b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xd581));
        // CB 66 00EF
        gbc.setState(0x225a, 0xd0bf, 0x32a0, 0xeb10, 0xa3a, 0xa370, 0x0, 0x0);
        gbc.writeMem(0x225a, { 0xcb, 0x66 });
        gbc.writeMem(0xa370, { 0x4f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd0bf, gbc.sp());
        EXPECT(0x225c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xa370));
        // CB 66 00F0
        gbc.setState(0x9b12, 0x1fde, 0xbc10, 0xa656, 0x8a15, 0x28e7, 0x0, 0x1);
        gbc.writeMem(0x28e7, { 0xc9 });
        gbc.writeMem(0x9b12, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1fde, gbc.sp());
        EXPECT(0x9b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b12));
        EXPECT(0x66, gbc.readMem(0x9b13));
        // CB 66 00F1
        gbc.setState(0xd1a2, 0xaa46, 0x2f80, 0xa2d1, 0x7210, 0x9b7f, 0x1, 0x1);
        gbc.writeMem(0x9b7f, { 0xec });
        gbc.writeMem(0xd1a2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xaa46, gbc.sp());
        EXPECT(0xd1a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x9b7f));
        EXPECT(0xcb, gbc.readMem(0xd1a2));
        EXPECT(0x66, gbc.readMem(0xd1a3));
        // CB 66 00F2
        gbc.setState(0xbc68, 0xdb7d, 0xf380, 0x1c17, 0x3679, 0x17dd, 0x1, 0x0);
        gbc.writeMem(0x17dd, { 0x1e });
        gbc.writeMem(0xbc68, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdb7d, gbc.sp());
        EXPECT(0xbc6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc68));
        EXPECT(0x66, gbc.readMem(0xbc69));
        // CB 66 00F3
        gbc.setState(0xece0, 0x527e, 0x4c90, 0x3d48, 0x7344, 0xab74, 0x1, 0x0);
        gbc.writeMem(0xab74, { 0x79 });
        gbc.writeMem(0xece0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x527e, gbc.sp());
        EXPECT(0xece2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xab74));
        EXPECT(0xcb, gbc.readMem(0xece0));
        EXPECT(0x66, gbc.readMem(0xece1));
        // CB 66 00F4
        gbc.setState(0x1c70, 0x2d38, 0x2fb0, 0x5626, 0x7c2a, 0x9ee1, 0x0, 0x1);
        gbc.writeMem(0x1c70, { 0xcb, 0x66 });
        gbc.writeMem(0x9ee1, { 0x7b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2d38, gbc.sp());
        EXPECT(0x1c72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9ee1));
        // CB 66 00F5
        gbc.setState(0x7c5f, 0x1fd5, 0x6890, 0xf206, 0x2e7a, 0xeaf9, 0x1, 0x0);
        gbc.writeMem(0x7c5f, { 0xcb, 0x66 });
        gbc.writeMem(0xeaf9, { 0x5a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1fd5, gbc.sp());
        EXPECT(0x7c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xeaf9));
        // CB 66 00F7
        gbc.setState(0xdb4b, 0xb865, 0x6910, 0x262d, 0x67fe, 0xd93f, 0x0, 0x1);
        gbc.writeMem(0xd93f, { 0xae });
        gbc.writeMem(0xdb4b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb865, gbc.sp());
        EXPECT(0xdb4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xd93f));
        EXPECT(0xcb, gbc.readMem(0xdb4b));
        EXPECT(0x66, gbc.readMem(0xdb4c));
        // CB 66 00F8
        gbc.setState(0xc31e, 0x4027, 0x9490, 0x60ac, 0x1ec4, 0xe9da, 0x0, 0x1);
        gbc.writeMem(0xc31e, { 0xcb, 0x66 });
        gbc.writeMem(0xe9da, { 0xb7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4027, gbc.sp());
        EXPECT(0xc320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc31e));
        EXPECT(0x66, gbc.readMem(0xc31f));
        EXPECT(0xb7, gbc.readMem(0xe9da));
        // CB 66 00F9
        gbc.setState(0xd866, 0x1dc1, 0x88e0, 0x3df1, 0x7035, 0x723e, 0x1, 0x1);
        gbc.writeMem(0x723e, { 0x26 });
        gbc.writeMem(0xd866, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1dc1, gbc.sp());
        EXPECT(0xd868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd866));
        EXPECT(0x66, gbc.readMem(0xd867));
        // CB 66 00FA
        gbc.setState(0xb1cd, 0x7978, 0x9580, 0x46c9, 0xfe55, 0xee9, 0x0, 0x1);
        gbc.writeMem(0xee9, { 0xef });
        gbc.writeMem(0xb1cd, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7978, gbc.sp());
        EXPECT(0xb1cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1cd));
        EXPECT(0x66, gbc.readMem(0xb1ce));
        // CB 66 00FB
        gbc.setState(0x4dbe, 0x498e, 0x2000, 0xa241, 0x31d6, 0xe96b, 0x1, 0x0);
        gbc.writeMem(0x4dbe, { 0xcb, 0x66 });
        gbc.writeMem(0xe96b, { 0x63 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x498e, gbc.sp());
        EXPECT(0x4dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xe96b));
        // CB 66 00FC
        gbc.setState(0x5e9f, 0x4dd3, 0x5930, 0x6b91, 0x1975, 0xa343, 0x0, 0x0);
        gbc.writeMem(0x5e9f, { 0xcb, 0x66 });
        gbc.writeMem(0xa343, { 0xd });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4dd3, gbc.sp());
        EXPECT(0x5ea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xa343));
        // CB 66 00FD
        gbc.setState(0xb3f5, 0x6e1e, 0x8310, 0x54a1, 0xef1, 0xec64, 0x1, 0x1);
        gbc.writeMem(0xb3f5, { 0xcb, 0x66 });
        gbc.writeMem(0xec64, { 0xbc });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6e1e, gbc.sp());
        EXPECT(0xb3f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f5));
        EXPECT(0x66, gbc.readMem(0xb3f6));
        EXPECT(0xbc, gbc.readMem(0xec64));
        // CB 66 00FE
        gbc.setState(0xcbbf, 0x55ce, 0x7280, 0x7ec5, 0x4ba, 0x80e7, 0x0, 0x0);
        gbc.writeMem(0x80e7, { 0xb9 });
        gbc.writeMem(0xcbbf, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x55ce, gbc.sp());
        EXPECT(0xcbc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x80e7));
        EXPECT(0xcb, gbc.readMem(0xcbbf));
        EXPECT(0x66, gbc.readMem(0xcbc0));
        // CB 66 00FF
        gbc.setState(0x57af, 0x2d20, 0x1a60, 0xcf9c, 0x8d2d, 0xfbff, 0x1, 0x1);
        gbc.writeMem(0x57af, { 0xcb, 0x66 });
        gbc.writeMem(0xfbff, { 0x88 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2d20, gbc.sp());
        EXPECT(0x57b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xfbff));
        // CB 66 0100
        gbc.setState(0x1c95, 0xc4b2, 0xd7d0, 0x3a28, 0x8ecc, 0xf6b4, 0x1, 0x0);
        gbc.writeMem(0x1c95, { 0xcb, 0x66 });
        gbc.writeMem(0xf6b4, { 0x56 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc4b2, gbc.sp());
        EXPECT(0x1c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xf6b4));
        // CB 66 0101
        gbc.setState(0xd9d8, 0xcac9, 0x61f0, 0xd0fb, 0x22b2, 0x5f08, 0x1, 0x0);
        gbc.writeMem(0x5f08, { 0xa9 });
        gbc.writeMem(0xd9d8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcac9, gbc.sp());
        EXPECT(0xd9da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d8));
        EXPECT(0x66, gbc.readMem(0xd9d9));
        // CB 66 0102
        gbc.setState(0xbf75, 0x814d, 0x60d0, 0x2fa5, 0x2f44, 0x8a1c, 0x1, 0x1);
        gbc.writeMem(0x8a1c, { 0xcb });
        gbc.writeMem(0xbf75, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x814d, gbc.sp());
        EXPECT(0xbf77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a1c));
        EXPECT(0xcb, gbc.readMem(0xbf75));
        EXPECT(0x66, gbc.readMem(0xbf76));
        // CB 66 0103
        gbc.setState(0x2bc6, 0x5b84, 0x4970, 0xe2b4, 0x574b, 0x3d7f, 0x0, 0x0);
        gbc.writeMem(0x2bc6, { 0xcb, 0x66 });
        gbc.writeMem(0x3d7f, { 0xba });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5b84, gbc.sp());
        EXPECT(0x2bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0104
        gbc.setState(0x5946, 0xecab, 0x9ed0, 0x6211, 0x97d3, 0x113f, 0x1, 0x0);
        gbc.writeMem(0x113f, { 0xc2 });
        gbc.writeMem(0x5946, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xecab, gbc.sp());
        EXPECT(0x5948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0105
        gbc.setState(0x3833, 0xd5c9, 0xc2e0, 0xe851, 0x7e7, 0x429d, 0x1, 0x0);
        gbc.writeMem(0x3833, { 0xcb, 0x66 });
        gbc.writeMem(0x429d, { 0xd0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd5c9, gbc.sp());
        EXPECT(0x3835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0106
        gbc.setState(0xd482, 0x6d2c, 0x6670, 0x137f, 0x54a3, 0xac46, 0x0, 0x1);
        gbc.writeMem(0xac46, { 0xca });
        gbc.writeMem(0xd482, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6d2c, gbc.sp());
        EXPECT(0xd484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xac46));
        EXPECT(0xcb, gbc.readMem(0xd482));
        EXPECT(0x66, gbc.readMem(0xd483));
        // CB 66 0107
        gbc.setState(0xb0bf, 0x380b, 0xad90, 0x609, 0x6ce3, 0x6e5e, 0x1, 0x0);
        gbc.writeMem(0x6e5e, { 0xb2 });
        gbc.writeMem(0xb0bf, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x380b, gbc.sp());
        EXPECT(0xb0c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0bf));
        EXPECT(0x66, gbc.readMem(0xb0c0));
        // CB 66 0109
        gbc.setState(0x8de2, 0xd6d4, 0xf510, 0x4150, 0x3226, 0xbc7, 0x1, 0x1);
        gbc.writeMem(0xbc7, { 0x5e });
        gbc.writeMem(0x8de2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd6d4, gbc.sp());
        EXPECT(0x8de4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de2));
        EXPECT(0x66, gbc.readMem(0x8de3));
        // CB 66 010A
        gbc.setState(0x947f, 0xe30d, 0xf140, 0x9bfe, 0xa43a, 0x5efb, 0x1, 0x0);
        gbc.writeMem(0x5efb, { 0xad });
        gbc.writeMem(0x947f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe30d, gbc.sp());
        EXPECT(0x9481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x947f));
        EXPECT(0x66, gbc.readMem(0x9480));
        // CB 66 010B
        gbc.setState(0x9397, 0xfee3, 0x73d0, 0xc90d, 0x1518, 0x9363, 0x0, 0x0);
        gbc.writeMem(0x9363, { 0xab });
        gbc.writeMem(0x9397, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfee3, gbc.sp());
        EXPECT(0x9399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x9363));
        EXPECT(0xcb, gbc.readMem(0x9397));
        EXPECT(0x66, gbc.readMem(0x9398));
        // CB 66 010C
        gbc.setState(0x823b, 0xb2d0, 0x7460, 0x3d80, 0x9304, 0xfebc, 0x0, 0x0);
        gbc.writeMem(0x823b, { 0xcb, 0x66 });
        gbc.writeMem(0xfebc, { 0x6d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb2d0, gbc.sp());
        EXPECT(0x823d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x823b));
        EXPECT(0x66, gbc.readMem(0x823c));
        EXPECT(0x6d, gbc.readMem(0xfebc));
        // CB 66 010D
        gbc.setState(0xcf6f, 0xa2fb, 0xe7c0, 0x17e4, 0x9935, 0x5fa, 0x1, 0x1);
        gbc.writeMem(0x5fa, { 0x9d });
        gbc.writeMem(0xcf6f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa2fb, gbc.sp());
        EXPECT(0xcf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf6f));
        EXPECT(0x66, gbc.readMem(0xcf70));
        // CB 66 010E
        gbc.setState(0xde35, 0x38cf, 0x5590, 0x9fc6, 0x5d6, 0x1c80, 0x0, 0x1);
        gbc.writeMem(0x1c80, { 0x8f });
        gbc.writeMem(0xde35, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x38cf, gbc.sp());
        EXPECT(0xde37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde35));
        EXPECT(0x66, gbc.readMem(0xde36));
        // CB 66 010F
        gbc.setState(0xe2e2, 0xeb4a, 0x4f80, 0x17ec, 0xd16a, 0x1920, 0x1, 0x1);
        gbc.writeMem(0x1920, { 0x1e });
        gbc.writeMem(0xe2e2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xeb4a, gbc.sp());
        EXPECT(0xe2e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e2));
        EXPECT(0x66, gbc.readMem(0xe2e3));
        // CB 66 0110
        gbc.setState(0x4dc5, 0xcc79, 0x3c10, 0x1718, 0x4a24, 0xafab, 0x0, 0x1);
        gbc.writeMem(0x4dc5, { 0xcb, 0x66 });
        gbc.writeMem(0xafab, { 0x4d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcc79, gbc.sp());
        EXPECT(0x4dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xafab));
        // CB 66 0111
        gbc.setState(0x63c2, 0x51a3, 0xe560, 0xfd4e, 0xf4ae, 0x28e6, 0x1, 0x0);
        gbc.writeMem(0x28e6, { 0xa8 });
        gbc.writeMem(0x63c2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x51a3, gbc.sp());
        EXPECT(0x63c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0113
        gbc.setState(0x69e0, 0x2263, 0x6ff0, 0x8bda, 0x9760, 0xdf, 0x0, 0x1);
        gbc.writeMem(0xdf, { 0xa });
        gbc.writeMem(0x69e0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2263, gbc.sp());
        EXPECT(0x69e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0114
        gbc.setState(0xa985, 0xca1, 0xb860, 0xe659, 0x38b1, 0x91dc, 0x1, 0x1);
        gbc.writeMem(0x91dc, { 0xdc });
        gbc.writeMem(0xa985, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xca1, gbc.sp());
        EXPECT(0xa987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x91dc));
        EXPECT(0xcb, gbc.readMem(0xa985));
        EXPECT(0x66, gbc.readMem(0xa986));
        // CB 66 0115
        gbc.setState(0x12dc, 0xbbd, 0xf180, 0xf4db, 0x198a, 0xe4ec, 0x1, 0x0);
        gbc.writeMem(0x12dc, { 0xcb, 0x66 });
        gbc.writeMem(0xe4ec, { 0xb5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbbd, gbc.sp());
        EXPECT(0x12de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe4ec));
        // CB 66 0116
        gbc.setState(0xcff8, 0x628d, 0x1e50, 0xc06b, 0x293b, 0x75dd, 0x0, 0x1);
        gbc.writeMem(0x75dd, { 0x44 });
        gbc.writeMem(0xcff8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x628d, gbc.sp());
        EXPECT(0xcffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcff8));
        EXPECT(0x66, gbc.readMem(0xcff9));
        // CB 66 0117
        gbc.setState(0x5732, 0x42b6, 0x9200, 0xe9d8, 0xf1fa, 0x2b10, 0x0, 0x1);
        gbc.writeMem(0x2b10, { 0x9a });
        gbc.writeMem(0x5732, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x42b6, gbc.sp());
        EXPECT(0x5734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0118
        gbc.setState(0x77a2, 0xa902, 0xa1e0, 0xaa28, 0x3e8f, 0x4a59, 0x0, 0x0);
        gbc.writeMem(0x4a59, { 0x5 });
        gbc.writeMem(0x77a2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa902, gbc.sp());
        EXPECT(0x77a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0119
        gbc.setState(0x86fa, 0x7f08, 0x7570, 0xd619, 0xa1d7, 0xb283, 0x0, 0x1);
        gbc.writeMem(0x86fa, { 0xcb, 0x66 });
        gbc.writeMem(0xb283, { 0x88 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7f08, gbc.sp());
        EXPECT(0x86fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fa));
        EXPECT(0x66, gbc.readMem(0x86fb));
        EXPECT(0x88, gbc.readMem(0xb283));
        // CB 66 011A
        gbc.setState(0xac3e, 0xb779, 0x8f40, 0xf5db, 0x54a0, 0x49db, 0x0, 0x1);
        gbc.writeMem(0x49db, { 0x73 });
        gbc.writeMem(0xac3e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb779, gbc.sp());
        EXPECT(0xac40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac3e));
        EXPECT(0x66, gbc.readMem(0xac3f));
        // CB 66 011B
        gbc.setState(0xe985, 0xe024, 0x28f0, 0xa320, 0xd157, 0x1322, 0x0, 0x1);
        gbc.writeMem(0x1322, { 0xb5 });
        gbc.writeMem(0xe985, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe024, gbc.sp());
        EXPECT(0xe987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe985));
        EXPECT(0x66, gbc.readMem(0xe986));
        // CB 66 011C
        gbc.setState(0x4bee, 0x6d69, 0x7510, 0x3735, 0xf745, 0xae1b, 0x0, 0x0);
        gbc.writeMem(0x4bee, { 0xcb, 0x66 });
        gbc.writeMem(0xae1b, { 0xaa });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6d69, gbc.sp());
        EXPECT(0x4bf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xae1b));
        // CB 66 011D
        gbc.setState(0x60b1, 0x7e1, 0xa4a0, 0x8bcb, 0x8af1, 0x7031, 0x0, 0x1);
        gbc.writeMem(0x60b1, { 0xcb, 0x66 });
        gbc.writeMem(0x7031, { 0x14 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7e1, gbc.sp());
        EXPECT(0x60b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 011E
        gbc.setState(0x6a79, 0xc1c8, 0xbcf0, 0x6a3a, 0xda79, 0x312, 0x1, 0x0);
        gbc.writeMem(0x312, { 0xaf });
        gbc.writeMem(0x6a79, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc1c8, gbc.sp());
        EXPECT(0x6a7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 011F
        gbc.setState(0x114, 0x87b2, 0x560, 0x38a1, 0x578b, 0xff4, 0x0, 0x1);
        gbc.writeMem(0x114, { 0xcb, 0x66 });
        gbc.writeMem(0xff4, { 0x19 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x87b2, gbc.sp());
        EXPECT(0x116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0120
        gbc.setState(0x3b74, 0x1996, 0x8a90, 0x3a4a, 0x1679, 0xe02a, 0x1, 0x0);
        gbc.writeMem(0x3b74, { 0xcb, 0x66 });
        gbc.writeMem(0xe02a, { 0xfb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1996, gbc.sp());
        EXPECT(0x3b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xe02a));
        // CB 66 0121
        gbc.setState(0x8064, 0x7986, 0x4cb0, 0x6f75, 0x165f, 0x67c5, 0x0, 0x1);
        gbc.writeMem(0x67c5, { 0x7c });
        gbc.writeMem(0x8064, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7986, gbc.sp());
        EXPECT(0x8066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8064));
        EXPECT(0x66, gbc.readMem(0x8065));
        // CB 66 0122
        gbc.setState(0xcca3, 0x30de, 0x1920, 0xe068, 0x885, 0x59c5, 0x1, 0x0);
        gbc.writeMem(0x59c5, { 0xcc });
        gbc.writeMem(0xcca3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x30de, gbc.sp());
        EXPECT(0xcca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcca3));
        EXPECT(0x66, gbc.readMem(0xcca4));
        // CB 66 0123
        gbc.setState(0x6371, 0x76be, 0xe690, 0x1cdd, 0xd117, 0xb066, 0x1, 0x0);
        gbc.writeMem(0x6371, { 0xcb, 0x66 });
        gbc.writeMem(0xb066, { 0x76 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x76be, gbc.sp());
        EXPECT(0x6373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb066));
        // CB 66 0124
        gbc.setState(0xcb3f, 0x5650, 0xabf0, 0xed94, 0x60a3, 0xbb3b, 0x0, 0x1);
        gbc.writeMem(0xbb3b, { 0xde });
        gbc.writeMem(0xcb3f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5650, gbc.sp());
        EXPECT(0xcb41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xbb3b));
        EXPECT(0xcb, gbc.readMem(0xcb3f));
        EXPECT(0x66, gbc.readMem(0xcb40));
        // CB 66 0125
        gbc.setState(0xa02a, 0x7d4c, 0x4a60, 0x9cfb, 0xe05d, 0xc7bb, 0x0, 0x1);
        gbc.writeMem(0xa02a, { 0xcb, 0x66 });
        gbc.writeMem(0xc7bb, { 0xf9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7d4c, gbc.sp());
        EXPECT(0xa02c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa02a));
        EXPECT(0x66, gbc.readMem(0xa02b));
        EXPECT(0xf9, gbc.readMem(0xc7bb));
        // CB 66 0126
        gbc.setState(0x8356, 0x8b2c, 0xf120, 0xc8f3, 0xb4f0, 0xf061, 0x0, 0x1);
        gbc.writeMem(0x8356, { 0xcb, 0x66 });
        gbc.writeMem(0xf061, { 0x9f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8b2c, gbc.sp());
        EXPECT(0x8358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8356));
        EXPECT(0x66, gbc.readMem(0x8357));
        EXPECT(0x9f, gbc.readMem(0xf061));
        // CB 66 0127
        gbc.setState(0xb2a1, 0x6e5d, 0x5ee0, 0x9713, 0xc2b, 0xe01a, 0x0, 0x0);
        gbc.writeMem(0xb2a1, { 0xcb, 0x66 });
        gbc.writeMem(0xe01a, { 0x9e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6e5d, gbc.sp());
        EXPECT(0xb2a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a1));
        EXPECT(0x66, gbc.readMem(0xb2a2));
        EXPECT(0x9e, gbc.readMem(0xe01a));
        // CB 66 0128
        gbc.setState(0x9bdb, 0x8c7f, 0xe80, 0x69b6, 0xc626, 0x1352, 0x1, 0x0);
        gbc.writeMem(0x1352, { 0x7f });
        gbc.writeMem(0x9bdb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8c7f, gbc.sp());
        EXPECT(0x9bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bdb));
        EXPECT(0x66, gbc.readMem(0x9bdc));
        // CB 66 0129
        gbc.setState(0x951f, 0xb5f7, 0xae0, 0xefb2, 0xb340, 0x2cc1, 0x1, 0x1);
        gbc.writeMem(0x2cc1, { 0xbc });
        gbc.writeMem(0x951f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb5f7, gbc.sp());
        EXPECT(0x9521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x951f));
        EXPECT(0x66, gbc.readMem(0x9520));
        // CB 66 012A
        gbc.setState(0x7586, 0xe49a, 0xb300, 0x644f, 0x985f, 0xcacd, 0x1, 0x1);
        gbc.writeMem(0x7586, { 0xcb, 0x66 });
        gbc.writeMem(0xcacd, { 0x4a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe49a, gbc.sp());
        EXPECT(0x7588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xcacd));
        // CB 66 012B
        gbc.setState(0xdef7, 0x8abc, 0xa40, 0x7cde, 0x1f41, 0x1c7e, 0x0, 0x0);
        gbc.writeMem(0x1c7e, { 0xad });
        gbc.writeMem(0xdef7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8abc, gbc.sp());
        EXPECT(0xdef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdef7));
        EXPECT(0x66, gbc.readMem(0xdef8));
        // CB 66 012C
        gbc.setState(0x79a8, 0x15c4, 0xf290, 0xb617, 0x4e32, 0x58af, 0x0, 0x0);
        gbc.writeMem(0x58af, { 0xd1 });
        gbc.writeMem(0x79a8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x15c4, gbc.sp());
        EXPECT(0x79aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 012D
        gbc.setState(0xcef6, 0x8a5d, 0x88c0, 0x4ee9, 0x604f, 0xc194, 0x1, 0x0);
        gbc.writeMem(0xc194, { 0x33 });
        gbc.writeMem(0xcef6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8a5d, gbc.sp());
        EXPECT(0xcef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc194));
        EXPECT(0xcb, gbc.readMem(0xcef6));
        EXPECT(0x66, gbc.readMem(0xcef7));
        // CB 66 012E
        gbc.setState(0x6235, 0x8687, 0x9350, 0x3c08, 0x8fb4, 0xb818, 0x1, 0x1);
        gbc.writeMem(0x6235, { 0xcb, 0x66 });
        gbc.writeMem(0xb818, { 0x90 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8687, gbc.sp());
        EXPECT(0x6237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xb818));
        // CB 66 012F
        gbc.setState(0x43fb, 0x636c, 0x7fa0, 0xf076, 0x7292, 0x6b75, 0x0, 0x1);
        gbc.writeMem(0x43fb, { 0xcb, 0x66 });
        gbc.writeMem(0x6b75, { 0xf });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x636c, gbc.sp());
        EXPECT(0x43fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0130
        gbc.setState(0x8f4d, 0xbf8a, 0x7ae0, 0xb866, 0x66d8, 0x5576, 0x0, 0x0);
        gbc.writeMem(0x5576, { 0x3c });
        gbc.writeMem(0x8f4d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbf8a, gbc.sp());
        EXPECT(0x8f4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f4d));
        EXPECT(0x66, gbc.readMem(0x8f4e));
        // CB 66 0131
        gbc.setState(0xe4b8, 0x20a4, 0xaf50, 0xbb36, 0x8f55, 0x892c, 0x0, 0x1);
        gbc.writeMem(0x892c, { 0xf4 });
        gbc.writeMem(0xe4b8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x20a4, gbc.sp());
        EXPECT(0xe4ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x892c));
        EXPECT(0xcb, gbc.readMem(0xe4b8));
        EXPECT(0x66, gbc.readMem(0xe4b9));
        // CB 66 0132
        gbc.setState(0x7f51, 0xd98a, 0x60a0, 0x9d1e, 0x168f, 0x5bb8, 0x1, 0x0);
        gbc.writeMem(0x5bb8, { 0x7 });
        gbc.writeMem(0x7f51, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd98a, gbc.sp());
        EXPECT(0x7f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0133
        gbc.setState(0xd3aa, 0xd855, 0x6480, 0x7993, 0x51, 0x43c4, 0x1, 0x0);
        gbc.writeMem(0x43c4, { 0x5a });
        gbc.writeMem(0xd3aa, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd855, gbc.sp());
        EXPECT(0xd3ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3aa));
        EXPECT(0x66, gbc.readMem(0xd3ab));
        // CB 66 0134
        gbc.setState(0x213f, 0xee6d, 0xd6f0, 0xacf8, 0x877e, 0x5c79, 0x0, 0x0);
        gbc.writeMem(0x213f, { 0xcb, 0x66 });
        gbc.writeMem(0x5c79, { 0xf3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xee6d, gbc.sp());
        EXPECT(0x2141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0135
        gbc.setState(0x858, 0xce1e, 0xa6d0, 0xfecc, 0x6474, 0x1698, 0x1, 0x0);
        gbc.writeMem(0x858, { 0xcb, 0x66 });
        gbc.writeMem(0x1698, { 0x1b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xce1e, gbc.sp());
        EXPECT(0x85a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0136
        gbc.setState(0xe3e5, 0x5a69, 0x8cc0, 0xa73d, 0xbd03, 0x523f, 0x1, 0x1);
        gbc.writeMem(0x523f, { 0x3b });
        gbc.writeMem(0xe3e5, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5a69, gbc.sp());
        EXPECT(0xe3e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e5));
        EXPECT(0x66, gbc.readMem(0xe3e6));
        // CB 66 0137
        gbc.setState(0xdc2c, 0xc7d, 0x5510, 0x5eeb, 0x4370, 0x8f49, 0x1, 0x0);
        gbc.writeMem(0x8f49, { 0x5e });
        gbc.writeMem(0xdc2c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc7d, gbc.sp());
        EXPECT(0xdc2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8f49));
        EXPECT(0xcb, gbc.readMem(0xdc2c));
        EXPECT(0x66, gbc.readMem(0xdc2d));
        // CB 66 0138
        gbc.setState(0xc29, 0x8770, 0x93f0, 0x5784, 0x41f9, 0x25a9, 0x1, 0x1);
        gbc.writeMem(0xc29, { 0xcb, 0x66 });
        gbc.writeMem(0x25a9, { 0x3a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8770, gbc.sp());
        EXPECT(0xc2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0139
        gbc.setState(0x26c, 0x86c1, 0x9f50, 0xa3fc, 0xfab1, 0xd606, 0x0, 0x0);
        gbc.writeMem(0x26c, { 0xcb, 0x66 });
        gbc.writeMem(0xd606, { 0x70 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x86c1, gbc.sp());
        EXPECT(0x26e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xd606));
        // CB 66 013A
        gbc.setState(0x2dbe, 0x7ac0, 0xd3f0, 0x3c1a, 0xf932, 0x1c4a, 0x0, 0x1);
        gbc.writeMem(0x1c4a, { 0xef });
        gbc.writeMem(0x2dbe, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7ac0, gbc.sp());
        EXPECT(0x2dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 013B
        gbc.setState(0xd1d, 0x3ed8, 0x4530, 0x220, 0x5134, 0xd4a8, 0x1, 0x1);
        gbc.writeMem(0xd1d, { 0xcb, 0x66 });
        gbc.writeMem(0xd4a8, { 0xea });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3ed8, gbc.sp());
        EXPECT(0xd1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xd4a8));
        // CB 66 013C
        gbc.setState(0x3f25, 0xe9d8, 0xf250, 0xcfd3, 0x4bca, 0xc879, 0x1, 0x0);
        gbc.writeMem(0x3f25, { 0xcb, 0x66 });
        gbc.writeMem(0xc879, { 0x27 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe9d8, gbc.sp());
        EXPECT(0x3f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc879));
        // CB 66 013D
        gbc.setState(0x9692, 0x7354, 0x9550, 0xb91e, 0xbb02, 0xd337, 0x1, 0x1);
        gbc.writeMem(0x9692, { 0xcb, 0x66 });
        gbc.writeMem(0xd337, { 0x44 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7354, gbc.sp());
        EXPECT(0x9694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9692));
        EXPECT(0x66, gbc.readMem(0x9693));
        EXPECT(0x44, gbc.readMem(0xd337));
        // CB 66 013E
        gbc.setState(0x4d48, 0x28c8, 0xe7c0, 0x57e1, 0xe4d3, 0xd288, 0x0, 0x0);
        gbc.writeMem(0x4d48, { 0xcb, 0x66 });
        gbc.writeMem(0xd288, { 0x84 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x28c8, gbc.sp());
        EXPECT(0x4d4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xd288));
        // CB 66 013F
        gbc.setState(0xd800, 0x7467, 0x59b0, 0x6133, 0x9b1c, 0xd7d0, 0x0, 0x0);
        gbc.writeMem(0xd7d0, { 0x8 });
        gbc.writeMem(0xd800, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7467, gbc.sp());
        EXPECT(0xd802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xd7d0));
        EXPECT(0xcb, gbc.readMem(0xd800));
        EXPECT(0x66, gbc.readMem(0xd801));
        // CB 66 0140
        gbc.setState(0xab44, 0x37e4, 0xefc0, 0x484c, 0xe424, 0x51bc, 0x1, 0x1);
        gbc.writeMem(0x51bc, { 0x8b });
        gbc.writeMem(0xab44, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x37e4, gbc.sp());
        EXPECT(0xab46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab44));
        EXPECT(0x66, gbc.readMem(0xab45));
        // CB 66 0141
        gbc.setState(0xec83, 0xa89d, 0xc020, 0x693c, 0xfc90, 0xd0a9, 0x1, 0x0);
        gbc.writeMem(0xd0a9, { 0x8b });
        gbc.writeMem(0xec83, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa89d, gbc.sp());
        EXPECT(0xec85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xd0a9));
        EXPECT(0xcb, gbc.readMem(0xec83));
        EXPECT(0x66, gbc.readMem(0xec84));
        // CB 66 0142
        gbc.setState(0xd4fb, 0xa739, 0x8820, 0xf935, 0x93c2, 0x40ff, 0x1, 0x1);
        gbc.writeMem(0x40ff, { 0xb6 });
        gbc.writeMem(0xd4fb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa739, gbc.sp());
        EXPECT(0xd4fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4fb));
        EXPECT(0x66, gbc.readMem(0xd4fc));
        // CB 66 0143
        gbc.setState(0x857d, 0xa5b7, 0x83b0, 0x653c, 0x310b, 0x59a0, 0x0, 0x1);
        gbc.writeMem(0x59a0, { 0x2d });
        gbc.writeMem(0x857d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa5b7, gbc.sp());
        EXPECT(0x857f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x857d));
        EXPECT(0x66, gbc.readMem(0x857e));
        // CB 66 0144
        gbc.setState(0x69f0, 0xc03c, 0x3260, 0x2570, 0x4b0, 0x4e8, 0x1, 0x1);
        gbc.writeMem(0x4e8, { 0x65 });
        gbc.writeMem(0x69f0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc03c, gbc.sp());
        EXPECT(0x69f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0145
        gbc.setState(0x19bc, 0xe56b, 0xdc20, 0xbb61, 0x590b, 0x6b10, 0x0, 0x1);
        gbc.writeMem(0x19bc, { 0xcb, 0x66 });
        gbc.writeMem(0x6b10, { 0xea });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe56b, gbc.sp());
        EXPECT(0x19be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0146
        gbc.setState(0x8f4f, 0x4ee3, 0xc30, 0x2090, 0xb07f, 0x295a, 0x1, 0x1);
        gbc.writeMem(0x295a, { 0x3b });
        gbc.writeMem(0x8f4f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4ee3, gbc.sp());
        EXPECT(0x8f51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f4f));
        EXPECT(0x66, gbc.readMem(0x8f50));
        // CB 66 0147
        gbc.setState(0x552d, 0xeebe, 0xcad0, 0x4e6b, 0xcaad, 0x1f5, 0x1, 0x1);
        gbc.writeMem(0x1f5, { 0x2a });
        gbc.writeMem(0x552d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xeebe, gbc.sp());
        EXPECT(0x552f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0148
        gbc.setState(0xcb2b, 0xc82d, 0xf4c0, 0x827b, 0xfa5e, 0x9abc, 0x0, 0x1);
        gbc.writeMem(0x9abc, { 0xcb });
        gbc.writeMem(0xcb2b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc82d, gbc.sp());
        EXPECT(0xcb2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abc));
        EXPECT(0xcb, gbc.readMem(0xcb2b));
        EXPECT(0x66, gbc.readMem(0xcb2c));
        // CB 66 0149
        gbc.setState(0x4e5a, 0x853e, 0x430, 0x6645, 0x2c2e, 0xe385, 0x0, 0x0);
        gbc.writeMem(0x4e5a, { 0xcb, 0x66 });
        gbc.writeMem(0xe385, { 0xa6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x853e, gbc.sp());
        EXPECT(0x4e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe385));
        // CB 66 014A
        gbc.setState(0xd3d5, 0x4cfe, 0x4b90, 0x567b, 0x527e, 0x45ce, 0x1, 0x0);
        gbc.writeMem(0x45ce, { 0xc2 });
        gbc.writeMem(0xd3d5, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4cfe, gbc.sp());
        EXPECT(0xd3d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3d5));
        EXPECT(0x66, gbc.readMem(0xd3d6));
        // CB 66 014B
        gbc.setState(0xab1e, 0xab55, 0x58f0, 0xdd38, 0x1ae4, 0x78a7, 0x0, 0x0);
        gbc.writeMem(0x78a7, { 0xea });
        gbc.writeMem(0xab1e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xab55, gbc.sp());
        EXPECT(0xab20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab1e));
        EXPECT(0x66, gbc.readMem(0xab1f));
        // CB 66 014C
        gbc.setState(0x9dbd, 0x2a3c, 0x6be0, 0x95f9, 0x79eb, 0xdf8f, 0x1, 0x1);
        gbc.writeMem(0x9dbd, { 0xcb, 0x66 });
        gbc.writeMem(0xdf8f, { 0xab });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2a3c, gbc.sp());
        EXPECT(0x9dbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dbd));
        EXPECT(0x66, gbc.readMem(0x9dbe));
        EXPECT(0xab, gbc.readMem(0xdf8f));
        // CB 66 014D
        gbc.setState(0xdcb0, 0xf40, 0x8e90, 0x96f5, 0x7887, 0x2dde, 0x1, 0x1);
        gbc.writeMem(0x2dde, { 0xe2 });
        gbc.writeMem(0xdcb0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf40, gbc.sp());
        EXPECT(0xdcb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb0));
        EXPECT(0x66, gbc.readMem(0xdcb1));
        // CB 66 014E
        gbc.setState(0x9bff, 0xda9f, 0xb150, 0x4c78, 0xae22, 0x5982, 0x1, 0x0);
        gbc.writeMem(0x5982, { 0xa7 });
        gbc.writeMem(0x9bff, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xda9f, gbc.sp());
        EXPECT(0x9c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bff));
        EXPECT(0x66, gbc.readMem(0x9c00));
        // CB 66 014F
        gbc.setState(0x9abe, 0xddb2, 0xb070, 0x7c40, 0xf759, 0x6ff0, 0x0, 0x1);
        gbc.writeMem(0x6ff0, { 0x89 });
        gbc.writeMem(0x9abe, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xddb2, gbc.sp());
        EXPECT(0x9ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abe));
        EXPECT(0x66, gbc.readMem(0x9abf));
        // CB 66 0150
        gbc.setState(0x2fa, 0x9ecd, 0xc8f0, 0xaf5e, 0x6f6f, 0x953d, 0x1, 0x0);
        gbc.writeMem(0x2fa, { 0xcb, 0x66 });
        gbc.writeMem(0x953d, { 0xb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9ecd, gbc.sp());
        EXPECT(0x2fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x953d));
        // CB 66 0151
        gbc.setState(0x8c7a, 0xa3b1, 0x82a0, 0xd4ec, 0xe9c0, 0x1954, 0x0, 0x1);
        gbc.writeMem(0x1954, { 0x8c });
        gbc.writeMem(0x8c7a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa3b1, gbc.sp());
        EXPECT(0x8c7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c7a));
        EXPECT(0x66, gbc.readMem(0x8c7b));
        // CB 66 0152
        gbc.setState(0x2cf8, 0x4ed7, 0xee00, 0xf966, 0xfb3d, 0xff02, 0x0, 0x0);
        gbc.writeMem(0x2cf8, { 0xcb, 0x66 });
        gbc.writeMem(0xff02, { 0x37 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4ed7, gbc.sp());
        EXPECT(0x2cfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xff02));
        // CB 66 0153
        gbc.setState(0x7fa7, 0x9766, 0xdb70, 0x1ddb, 0x316d, 0x3d92, 0x0, 0x0);
        gbc.writeMem(0x3d92, { 0xb1 });
        gbc.writeMem(0x7fa7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9766, gbc.sp());
        EXPECT(0x7fa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0154
        gbc.setState(0x65f6, 0x7ae2, 0xce30, 0x39a3, 0x1beb, 0x3f60, 0x0, 0x1);
        gbc.writeMem(0x3f60, { 0xe });
        gbc.writeMem(0x65f6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7ae2, gbc.sp());
        EXPECT(0x65f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0155
        gbc.setState(0x9075, 0x2772, 0x2f90, 0x3e98, 0x8aad, 0x61ca, 0x0, 0x0);
        gbc.writeMem(0x61ca, { 0x98 });
        gbc.writeMem(0x9075, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2772, gbc.sp());
        EXPECT(0x9077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9075));
        EXPECT(0x66, gbc.readMem(0x9076));
        // CB 66 0156
        gbc.setState(0x8fbe, 0x852c, 0xe8c0, 0xdf39, 0x64d8, 0xa83e, 0x1, 0x0);
        gbc.writeMem(0x8fbe, { 0xcb, 0x66 });
        gbc.writeMem(0xa83e, { 0xbe });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x852c, gbc.sp());
        EXPECT(0x8fc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fbe));
        EXPECT(0x66, gbc.readMem(0x8fbf));
        EXPECT(0xbe, gbc.readMem(0xa83e));
        // CB 66 0157
        gbc.setState(0x1f3e, 0x3a28, 0x41b0, 0x8da3, 0x25b8, 0x58d9, 0x1, 0x1);
        gbc.writeMem(0x1f3e, { 0xcb, 0x66 });
        gbc.writeMem(0x58d9, { 0x5c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3a28, gbc.sp());
        EXPECT(0x1f40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0158
        gbc.setState(0x463c, 0xb744, 0xa2d0, 0x5bde, 0xf1ea, 0x3c58, 0x1, 0x0);
        gbc.writeMem(0x3c58, { 0xde });
        gbc.writeMem(0x463c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb744, gbc.sp());
        EXPECT(0x463e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0159
        gbc.setState(0xef13, 0x21aa, 0xb00, 0xf7a3, 0xa1d9, 0x854d, 0x0, 0x0);
        gbc.writeMem(0x854d, { 0x3e });
        gbc.writeMem(0xef13, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x21aa, gbc.sp());
        EXPECT(0xef15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x854d));
        EXPECT(0xcb, gbc.readMem(0xef13));
        EXPECT(0x66, gbc.readMem(0xef14));
        // CB 66 015A
        gbc.setState(0x1863, 0x825f, 0x9930, 0x6168, 0xdbe8, 0xfda9, 0x1, 0x0);
        gbc.writeMem(0x1863, { 0xcb, 0x66 });
        gbc.writeMem(0xfda9, { 0x68 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x825f, gbc.sp());
        EXPECT(0x1865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xfda9));
        // CB 66 015B
        gbc.setState(0xdd7c, 0x5897, 0x23b0, 0x7cfa, 0x69eb, 0xffa4, 0x1, 0x1);
        gbc.writeMem(0xdd7c, { 0xcb, 0x66 });
        gbc.writeMem(0xffa4, { 0xb8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5897, gbc.sp());
        EXPECT(0xdd7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd7c));
        EXPECT(0x66, gbc.readMem(0xdd7d));
        EXPECT(0xb8, gbc.readMem(0xffa4));
        // CB 66 015C
        gbc.setState(0xe478, 0x4753, 0x4c60, 0x9526, 0xb986, 0x7154, 0x0, 0x1);
        gbc.writeMem(0x7154, { 0xd8 });
        gbc.writeMem(0xe478, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4753, gbc.sp());
        EXPECT(0xe47a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe478));
        EXPECT(0x66, gbc.readMem(0xe479));
        // CB 66 015D
        gbc.setState(0xbe0b, 0x662, 0x5ce0, 0xbc0e, 0xb16e, 0xed43, 0x1, 0x1);
        gbc.writeMem(0xbe0b, { 0xcb, 0x66 });
        gbc.writeMem(0xed43, { 0x1c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x662, gbc.sp());
        EXPECT(0xbe0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe0b));
        EXPECT(0x66, gbc.readMem(0xbe0c));
        EXPECT(0x1c, gbc.readMem(0xed43));
        // CB 66 015E
        gbc.setState(0x461e, 0x2b76, 0xcc30, 0xa023, 0x612a, 0xdb94, 0x0, 0x1);
        gbc.writeMem(0x461e, { 0xcb, 0x66 });
        gbc.writeMem(0xdb94, { 0x17 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2b76, gbc.sp());
        EXPECT(0x4620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xdb94));
        // CB 66 015F
        gbc.setState(0xebf0, 0x2e7b, 0x6860, 0xd588, 0x2833, 0x60c7, 0x0, 0x0);
        gbc.writeMem(0x60c7, { 0x8e });
        gbc.writeMem(0xebf0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2e7b, gbc.sp());
        EXPECT(0xebf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf0));
        EXPECT(0x66, gbc.readMem(0xebf1));
        // CB 66 0160
        gbc.setState(0x6b6b, 0x84ba, 0x5de0, 0x99e9, 0x7daa, 0xb796, 0x1, 0x0);
        gbc.writeMem(0x6b6b, { 0xcb, 0x66 });
        gbc.writeMem(0xb796, { 0x13 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x84ba, gbc.sp());
        EXPECT(0x6b6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb796));
        // CB 66 0161
        gbc.setState(0x963f, 0xa838, 0x4be0, 0xbd20, 0x9cea, 0xc7c2, 0x0, 0x1);
        gbc.writeMem(0x963f, { 0xcb, 0x66 });
        gbc.writeMem(0xc7c2, { 0x1f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa838, gbc.sp());
        EXPECT(0x9641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x963f));
        EXPECT(0x66, gbc.readMem(0x9640));
        EXPECT(0x1f, gbc.readMem(0xc7c2));
        // CB 66 0162
        gbc.setState(0x1542, 0xab47, 0xd5e0, 0xfe6a, 0x58db, 0xaf84, 0x0, 0x1);
        gbc.writeMem(0x1542, { 0xcb, 0x66 });
        gbc.writeMem(0xaf84, { 0xf9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xab47, gbc.sp());
        EXPECT(0x1544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xaf84));
        // CB 66 0163
        gbc.setState(0x95e0, 0xe763, 0xf4e0, 0xb97d, 0xe626, 0x1858, 0x1, 0x1);
        gbc.writeMem(0x1858, { 0x1f });
        gbc.writeMem(0x95e0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe763, gbc.sp());
        EXPECT(0x95e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e0));
        EXPECT(0x66, gbc.readMem(0x95e1));
        // CB 66 0164
        gbc.setState(0xcccf, 0xe4b9, 0xa550, 0x3cfd, 0x9e3a, 0xec97, 0x0, 0x0);
        gbc.writeMem(0xcccf, { 0xcb, 0x66 });
        gbc.writeMem(0xec97, { 0x67 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe4b9, gbc.sp());
        EXPECT(0xccd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcccf));
        EXPECT(0x66, gbc.readMem(0xccd0));
        EXPECT(0x67, gbc.readMem(0xec97));
        // CB 66 0165
        gbc.setState(0x4e32, 0x1155, 0x7010, 0xc10b, 0xd88, 0xed1d, 0x1, 0x0);
        gbc.writeMem(0x4e32, { 0xcb, 0x66 });
        gbc.writeMem(0xed1d, { 0x2e });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1155, gbc.sp());
        EXPECT(0x4e34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xed1d));
        // CB 66 0166
        gbc.setState(0x1260, 0x21ad, 0x2c10, 0xb0b5, 0x55be, 0x128b, 0x0, 0x0);
        gbc.writeMem(0x1260, { 0xcb, 0x66 });
        gbc.writeMem(0x128b, { 0xc4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x21ad, gbc.sp());
        EXPECT(0x1262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0167
        gbc.setState(0x4c5f, 0x7b14, 0x7bd0, 0xb2bd, 0x29f9, 0xc586, 0x1, 0x0);
        gbc.writeMem(0x4c5f, { 0xcb, 0x66 });
        gbc.writeMem(0xc586, { 0xea });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7b14, gbc.sp());
        EXPECT(0x4c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xc586));
        // CB 66 0168
        gbc.setState(0xbcc8, 0x534b, 0xb740, 0x31fd, 0xe10f, 0xcffe, 0x0, 0x1);
        gbc.writeMem(0xbcc8, { 0xcb, 0x66 });
        gbc.writeMem(0xcffe, { 0x3b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x534b, gbc.sp());
        EXPECT(0xbcca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc8));
        EXPECT(0x66, gbc.readMem(0xbcc9));
        EXPECT(0x3b, gbc.readMem(0xcffe));
        // CB 66 0169
        gbc.setState(0xb75f, 0xd20a, 0x23a0, 0x56c, 0x8afa, 0x6d12, 0x1, 0x0);
        gbc.writeMem(0x6d12, { 0xca });
        gbc.writeMem(0xb75f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd20a, gbc.sp());
        EXPECT(0xb761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb75f));
        EXPECT(0x66, gbc.readMem(0xb760));
        // CB 66 016A
        gbc.setState(0x2a99, 0xed56, 0xd10, 0xb9aa, 0x2a10, 0x8727, 0x0, 0x1);
        gbc.writeMem(0x2a99, { 0xcb, 0x66 });
        gbc.writeMem(0x8727, { 0x11 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xed56, gbc.sp());
        EXPECT(0x2a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8727));
        // CB 66 016B
        gbc.setState(0xb958, 0x7f51, 0xa330, 0x1461, 0x8d60, 0xc8b2, 0x1, 0x1);
        gbc.writeMem(0xb958, { 0xcb, 0x66 });
        gbc.writeMem(0xc8b2, { 0xb2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7f51, gbc.sp());
        EXPECT(0xb95a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb958));
        EXPECT(0x66, gbc.readMem(0xb959));
        EXPECT(0xb2, gbc.readMem(0xc8b2));
        // CB 66 016C
        gbc.setState(0x62a, 0xb20, 0x9eb0, 0x6175, 0xd373, 0x482c, 0x1, 0x1);
        gbc.writeMem(0x62a, { 0xcb, 0x66 });
        gbc.writeMem(0x482c, { 0x6a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb20, gbc.sp());
        EXPECT(0x62c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 016D
        gbc.setState(0x98e7, 0x937f, 0xcc60, 0x27b5, 0x4adc, 0x3ab5, 0x0, 0x0);
        gbc.writeMem(0x3ab5, { 0x33 });
        gbc.writeMem(0x98e7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x937f, gbc.sp());
        EXPECT(0x98e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e7));
        EXPECT(0x66, gbc.readMem(0x98e8));
        // CB 66 016E
        gbc.setState(0x2ab7, 0x7786, 0x37b0, 0x5cc3, 0x9481, 0xa02b, 0x0, 0x1);
        gbc.writeMem(0x2ab7, { 0xcb, 0x66 });
        gbc.writeMem(0xa02b, { 0x2d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7786, gbc.sp());
        EXPECT(0x2ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa02b));
        // CB 66 016F
        gbc.setState(0x53f0, 0x7cf6, 0x5a10, 0x5c17, 0xe4a7, 0x352c, 0x1, 0x1);
        gbc.writeMem(0x352c, { 0xea });
        gbc.writeMem(0x53f0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7cf6, gbc.sp());
        EXPECT(0x53f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0170
        gbc.setState(0xb7bb, 0x69df, 0xba00, 0xb373, 0x6eb3, 0x583e, 0x1, 0x1);
        gbc.writeMem(0x583e, { 0xf2 });
        gbc.writeMem(0xb7bb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x69df, gbc.sp());
        EXPECT(0xb7bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7bb));
        EXPECT(0x66, gbc.readMem(0xb7bc));
        // CB 66 0171
        gbc.setState(0x42eb, 0xa0b6, 0x3fc0, 0x5085, 0x4773, 0x431c, 0x0, 0x0);
        gbc.writeMem(0x42eb, { 0xcb, 0x66 });
        gbc.writeMem(0x431c, { 0xbb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa0b6, gbc.sp());
        EXPECT(0x42ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0172
        gbc.setState(0xa18, 0x357f, 0xb6a0, 0x615f, 0x7ef4, 0x720, 0x1, 0x1);
        gbc.writeMem(0x720, { 0x8b });
        gbc.writeMem(0xa18, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x357f, gbc.sp());
        EXPECT(0xa1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0173
        gbc.setState(0x41c3, 0xb3c3, 0x3e20, 0xa8af, 0x279, 0xa181, 0x1, 0x0);
        gbc.writeMem(0x41c3, { 0xcb, 0x66 });
        gbc.writeMem(0xa181, { 0xa7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb3c3, gbc.sp());
        EXPECT(0x41c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa181));
        // CB 66 0174
        gbc.setState(0x2d96, 0x2f23, 0x85e0, 0xb9c8, 0x67cb, 0x503f, 0x0, 0x1);
        gbc.writeMem(0x2d96, { 0xcb, 0x66 });
        gbc.writeMem(0x503f, { 0xd5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2f23, gbc.sp());
        EXPECT(0x2d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0175
        gbc.setState(0x8257, 0xcb11, 0x5b20, 0x9596, 0xf85d, 0xde60, 0x0, 0x1);
        gbc.writeMem(0x8257, { 0xcb, 0x66 });
        gbc.writeMem(0xde60, { 0x37 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcb11, gbc.sp());
        EXPECT(0x8259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8257));
        EXPECT(0x66, gbc.readMem(0x8258));
        EXPECT(0x37, gbc.readMem(0xde60));
        // CB 66 0176
        gbc.setState(0xaac, 0x61dc, 0x6840, 0x2405, 0xc929, 0x758c, 0x0, 0x0);
        gbc.writeMem(0xaac, { 0xcb, 0x66 });
        gbc.writeMem(0x758c, { 0xf0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x61dc, gbc.sp());
        EXPECT(0xaae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0177
        gbc.setState(0x8511, 0x3a5f, 0x64d0, 0xdd73, 0x3689, 0xc187, 0x1, 0x0);
        gbc.writeMem(0x8511, { 0xcb, 0x66 });
        gbc.writeMem(0xc187, { 0xda });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3a5f, gbc.sp());
        EXPECT(0x8513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8511));
        EXPECT(0x66, gbc.readMem(0x8512));
        EXPECT(0xda, gbc.readMem(0xc187));
        // CB 66 0178
        gbc.setState(0x476c, 0xf19a, 0xdf90, 0x42f6, 0x319, 0x5a35, 0x0, 0x1);
        gbc.writeMem(0x476c, { 0xcb, 0x66 });
        gbc.writeMem(0x5a35, { 0xc0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf19a, gbc.sp());
        EXPECT(0x476e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0179
        gbc.setState(0x992, 0xf83b, 0x5b00, 0xf23, 0x9c4d, 0xbe5f, 0x0, 0x0);
        gbc.writeMem(0x992, { 0xcb, 0x66 });
        gbc.writeMem(0xbe5f, { 0xe1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf83b, gbc.sp());
        EXPECT(0x994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xbe5f));
        // CB 66 017A
        gbc.setState(0xd33, 0x7fa, 0x2430, 0x8611, 0x85cb, 0x1c3a, 0x0, 0x0);
        gbc.writeMem(0xd33, { 0xcb, 0x66 });
        gbc.writeMem(0x1c3a, { 0x1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7fa, gbc.sp());
        EXPECT(0xd35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 017B
        gbc.setState(0x63f5, 0x9039, 0x7260, 0x1e7b, 0x348f, 0xd5c0, 0x0, 0x0);
        gbc.writeMem(0x63f5, { 0xcb, 0x66 });
        gbc.writeMem(0xd5c0, { 0x49 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9039, gbc.sp());
        EXPECT(0x63f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd5c0));
        // CB 66 017C
        gbc.setState(0x1095, 0xe3f, 0xca90, 0x9e2c, 0xd9c6, 0x4fae, 0x1, 0x1);
        gbc.writeMem(0x1095, { 0xcb, 0x66 });
        gbc.writeMem(0x4fae, { 0x6 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe3f, gbc.sp());
        EXPECT(0x1097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 017D
        gbc.setState(0x7aac, 0xaefe, 0xeca0, 0x6b70, 0x7026, 0xcba6, 0x0, 0x0);
        gbc.writeMem(0x7aac, { 0xcb, 0x66 });
        gbc.writeMem(0xcba6, { 0x6e });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xaefe, gbc.sp());
        EXPECT(0x7aae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xcba6));
        // CB 66 017E
        gbc.setState(0x98c4, 0x4d18, 0x1f60, 0xb28d, 0x3d7f, 0x4bf8, 0x0, 0x0);
        gbc.writeMem(0x4bf8, { 0xc });
        gbc.writeMem(0x98c4, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4d18, gbc.sp());
        EXPECT(0x98c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c4));
        EXPECT(0x66, gbc.readMem(0x98c5));
        // CB 66 017F
        gbc.setState(0x9116, 0x72a2, 0xb970, 0x2c64, 0xed60, 0x172d, 0x0, 0x0);
        gbc.writeMem(0x172d, { 0x29 });
        gbc.writeMem(0x9116, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x72a2, gbc.sp());
        EXPECT(0x9118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9116));
        EXPECT(0x66, gbc.readMem(0x9117));
        // CB 66 0180
        gbc.setState(0xaf16, 0xf9dd, 0xd90, 0xa85, 0x3c26, 0x8083, 0x1, 0x0);
        gbc.writeMem(0x8083, { 0xb5 });
        gbc.writeMem(0xaf16, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf9dd, gbc.sp());
        EXPECT(0xaf18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8083));
        EXPECT(0xcb, gbc.readMem(0xaf16));
        EXPECT(0x66, gbc.readMem(0xaf17));
        // CB 66 0182
        gbc.setState(0x4b0, 0x97cf, 0x9c70, 0xdc33, 0x72b4, 0x8feb, 0x0, 0x1);
        gbc.writeMem(0x4b0, { 0xcb, 0x66 });
        gbc.writeMem(0x8feb, { 0x99 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x97cf, gbc.sp());
        EXPECT(0x4b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8feb));
        // CB 66 0183
        gbc.setState(0x9aa, 0x9df0, 0xdea0, 0xc76a, 0xe8b, 0x34b8, 0x1, 0x1);
        gbc.writeMem(0x9aa, { 0xcb, 0x66 });
        gbc.writeMem(0x34b8, { 0x2e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9df0, gbc.sp());
        EXPECT(0x9ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0184
        gbc.setState(0xa8d2, 0x2394, 0x5520, 0x98cc, 0x23b7, 0xf1b0, 0x1, 0x0);
        gbc.writeMem(0xa8d2, { 0xcb, 0x66 });
        gbc.writeMem(0xf1b0, { 0x5d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2394, gbc.sp());
        EXPECT(0xa8d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d2));
        EXPECT(0x66, gbc.readMem(0xa8d3));
        EXPECT(0x5d, gbc.readMem(0xf1b0));
        // CB 66 0185
        gbc.setState(0xc55f, 0xf425, 0x4de0, 0xdcd3, 0xe989, 0xf3d3, 0x1, 0x1);
        gbc.writeMem(0xc55f, { 0xcb, 0x66 });
        gbc.writeMem(0xf3d3, { 0xbb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf425, gbc.sp());
        EXPECT(0xc561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc55f));
        EXPECT(0x66, gbc.readMem(0xc560));
        EXPECT(0xbb, gbc.readMem(0xf3d3));
        // CB 66 0186
        gbc.setState(0xd60a, 0xfcd7, 0x4cf0, 0x56b5, 0xa77, 0xadf4, 0x0, 0x0);
        gbc.writeMem(0xadf4, { 0xc0 });
        gbc.writeMem(0xd60a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfcd7, gbc.sp());
        EXPECT(0xd60c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xadf4));
        EXPECT(0xcb, gbc.readMem(0xd60a));
        EXPECT(0x66, gbc.readMem(0xd60b));
        // CB 66 0187
        gbc.setState(0x40c6, 0xf344, 0xc250, 0xf026, 0xdffd, 0xc48, 0x0, 0x0);
        gbc.writeMem(0xc48, { 0x57 });
        gbc.writeMem(0x40c6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf344, gbc.sp());
        EXPECT(0x40c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0188
        gbc.setState(0x9da4, 0x63b5, 0x6190, 0xba38, 0x328c, 0xeb76, 0x0, 0x1);
        gbc.writeMem(0x9da4, { 0xcb, 0x66 });
        gbc.writeMem(0xeb76, { 0x2f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x63b5, gbc.sp());
        EXPECT(0x9da6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9da4));
        EXPECT(0x66, gbc.readMem(0x9da5));
        EXPECT(0x2f, gbc.readMem(0xeb76));
        // CB 66 0189
        gbc.setState(0x96e, 0xac63, 0x69a0, 0x730d, 0xbb69, 0xb8ef, 0x1, 0x1);
        gbc.writeMem(0x96e, { 0xcb, 0x66 });
        gbc.writeMem(0xb8ef, { 0xad });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xac63, gbc.sp());
        EXPECT(0x970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xb8ef));
        // CB 66 018A
        gbc.setState(0x309, 0x6c5f, 0x1d80, 0x1043, 0x9ca2, 0x1dbd, 0x0, 0x0);
        gbc.writeMem(0x309, { 0xcb, 0x66 });
        gbc.writeMem(0x1dbd, { 0x3b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6c5f, gbc.sp());
        EXPECT(0x30b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 018B
        gbc.setState(0x3025, 0xb911, 0xfbb0, 0x25d8, 0x3ac, 0x9fd, 0x1, 0x0);
        gbc.writeMem(0x9fd, { 0x1d });
        gbc.writeMem(0x3025, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb911, gbc.sp());
        EXPECT(0x3027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 018C
        gbc.setState(0x1614, 0x55e5, 0x6910, 0x441c, 0x495d, 0xb073, 0x1, 0x0);
        gbc.writeMem(0x1614, { 0xcb, 0x66 });
        gbc.writeMem(0xb073, { 0xfb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x55e5, gbc.sp());
        EXPECT(0x1616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xb073));
        // CB 66 018D
        gbc.setState(0xece2, 0xf777, 0xdd80, 0x393b, 0xcb6c, 0x90af, 0x1, 0x0);
        gbc.writeMem(0x90af, { 0x82 });
        gbc.writeMem(0xece2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf777, gbc.sp());
        EXPECT(0xece4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x90af));
        EXPECT(0xcb, gbc.readMem(0xece2));
        EXPECT(0x66, gbc.readMem(0xece3));
        // CB 66 018E
        gbc.setState(0xb9c0, 0xa46, 0x6cf0, 0x3639, 0x4375, 0x7c95, 0x1, 0x0);
        gbc.writeMem(0x7c95, { 0xeb });
        gbc.writeMem(0xb9c0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa46, gbc.sp());
        EXPECT(0xb9c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9c0));
        EXPECT(0x66, gbc.readMem(0xb9c1));
        // CB 66 018F
        gbc.setState(0x34cb, 0xc294, 0x77e0, 0xa72b, 0x1342, 0x8d3, 0x1, 0x0);
        gbc.writeMem(0x8d3, { 0x4b });
        gbc.writeMem(0x34cb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc294, gbc.sp());
        EXPECT(0x34cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0190
        gbc.setState(0xb7c1, 0xa4a0, 0x9aa0, 0xb704, 0x9e47, 0x33ae, 0x1, 0x0);
        gbc.writeMem(0x33ae, { 0xc1 });
        gbc.writeMem(0xb7c1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa4a0, gbc.sp());
        EXPECT(0xb7c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7c1));
        EXPECT(0x66, gbc.readMem(0xb7c2));
        // CB 66 0191
        gbc.setState(0x86a0, 0x710d, 0xa620, 0xd5a0, 0x3cf, 0xa4dd, 0x1, 0x1);
        gbc.writeMem(0x86a0, { 0xcb, 0x66 });
        gbc.writeMem(0xa4dd, { 0x65 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x710d, gbc.sp());
        EXPECT(0x86a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86a0));
        EXPECT(0x66, gbc.readMem(0x86a1));
        EXPECT(0x65, gbc.readMem(0xa4dd));
        // CB 66 0192
        gbc.setState(0x714d, 0xa45b, 0xf4c0, 0x25d5, 0xcb32, 0xd46f, 0x0, 0x0);
        gbc.writeMem(0x714d, { 0xcb, 0x66 });
        gbc.writeMem(0xd46f, { 0x6e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa45b, gbc.sp());
        EXPECT(0x714f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd46f));
        // CB 66 0193
        gbc.setState(0xb54a, 0xab58, 0x6920, 0xd1fe, 0x884, 0xaef5, 0x0, 0x0);
        gbc.writeMem(0xaef5, { 0x42 });
        gbc.writeMem(0xb54a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xab58, gbc.sp());
        EXPECT(0xb54c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xaef5));
        EXPECT(0xcb, gbc.readMem(0xb54a));
        EXPECT(0x66, gbc.readMem(0xb54b));
        // CB 66 0194
        gbc.setState(0x45f8, 0xd938, 0xf500, 0xece1, 0xcba7, 0x92f3, 0x1, 0x0);
        gbc.writeMem(0x45f8, { 0xcb, 0x66 });
        gbc.writeMem(0x92f3, { 0x75 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd938, gbc.sp());
        EXPECT(0x45fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x92f3));
        // CB 66 0195
        gbc.setState(0x2140, 0x7550, 0xd090, 0x6d1f, 0x603d, 0xbd97, 0x0, 0x0);
        gbc.writeMem(0x2140, { 0xcb, 0x66 });
        gbc.writeMem(0xbd97, { 0x52 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7550, gbc.sp());
        EXPECT(0x2142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbd97));
        // CB 66 0196
        gbc.setState(0xce14, 0x623a, 0x4140, 0xfd31, 0x3c7d, 0x2706, 0x0, 0x0);
        gbc.writeMem(0x2706, { 0x1b });
        gbc.writeMem(0xce14, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x623a, gbc.sp());
        EXPECT(0xce16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce14));
        EXPECT(0x66, gbc.readMem(0xce15));
        // CB 66 0197
        gbc.setState(0x177b, 0x86e, 0xe100, 0x39cb, 0x8165, 0x8e15, 0x0, 0x1);
        gbc.writeMem(0x177b, { 0xcb, 0x66 });
        gbc.writeMem(0x8e15, { 0x84 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x86e, gbc.sp());
        EXPECT(0x177d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x8e15));
        // CB 66 0198
        gbc.setState(0x4873, 0xdedd, 0x2fa0, 0x92ff, 0x84d4, 0x39ee, 0x0, 0x1);
        gbc.writeMem(0x39ee, { 0xa3 });
        gbc.writeMem(0x4873, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdedd, gbc.sp());
        EXPECT(0x4875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0199
        gbc.setState(0x3d84, 0x5f28, 0x5ef0, 0xe89c, 0x4ce, 0xb727, 0x1, 0x0);
        gbc.writeMem(0x3d84, { 0xcb, 0x66 });
        gbc.writeMem(0xb727, { 0xd6 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5f28, gbc.sp());
        EXPECT(0x3d86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb727));
        // CB 66 019A
        gbc.setState(0xd2e8, 0xe88e, 0x2230, 0x93a8, 0x23c, 0xc15c, 0x1, 0x1);
        gbc.writeMem(0xc15c, { 0xcb });
        gbc.writeMem(0xd2e8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe88e, gbc.sp());
        EXPECT(0xd2ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc15c));
        EXPECT(0xcb, gbc.readMem(0xd2e8));
        EXPECT(0x66, gbc.readMem(0xd2e9));
        // CB 66 019B
        gbc.setState(0x34b0, 0x52d6, 0xbdf0, 0x5995, 0x133a, 0x7bf9, 0x1, 0x0);
        gbc.writeMem(0x34b0, { 0xcb, 0x66 });
        gbc.writeMem(0x7bf9, { 0x36 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x52d6, gbc.sp());
        EXPECT(0x34b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 019C
        gbc.setState(0xe252, 0xf934, 0xa20, 0xe4ed, 0xe8b8, 0x6c09, 0x0, 0x0);
        gbc.writeMem(0x6c09, { 0xd2 });
        gbc.writeMem(0xe252, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf934, gbc.sp());
        EXPECT(0xe254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe252));
        EXPECT(0x66, gbc.readMem(0xe253));
        // CB 66 019D
        gbc.setState(0xdc2f, 0x7ba6, 0x54b0, 0x97c9, 0x50ad, 0x5a98, 0x0, 0x1);
        gbc.writeMem(0x5a98, { 0xd9 });
        gbc.writeMem(0xdc2f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7ba6, gbc.sp());
        EXPECT(0xdc31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc2f));
        EXPECT(0x66, gbc.readMem(0xdc30));
        // CB 66 019E
        gbc.setState(0x4faf, 0x3420, 0xc220, 0x86d7, 0x8005, 0xce8a, 0x1, 0x0);
        gbc.writeMem(0x4faf, { 0xcb, 0x66 });
        gbc.writeMem(0xce8a, { 0xd7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3420, gbc.sp());
        EXPECT(0x4fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xce8a));
        // CB 66 01A1
        gbc.setState(0xa9e0, 0x30f, 0x51a0, 0xfa16, 0xea71, 0x1c2c, 0x0, 0x1);
        gbc.writeMem(0x1c2c, { 0xe0 });
        gbc.writeMem(0xa9e0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x30f, gbc.sp());
        EXPECT(0xa9e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9e0));
        EXPECT(0x66, gbc.readMem(0xa9e1));
        // CB 66 01A4
        gbc.setState(0x4fa9, 0x8514, 0x2f00, 0xe181, 0x431a, 0x319f, 0x1, 0x1);
        gbc.writeMem(0x319f, { 0x6d });
        gbc.writeMem(0x4fa9, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8514, gbc.sp());
        EXPECT(0x4fab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 01A5
        gbc.setState(0xe31c, 0xd2ab, 0xa3f0, 0x5a4c, 0xe686, 0x1d19, 0x0, 0x1);
        gbc.writeMem(0x1d19, { 0xff });
        gbc.writeMem(0xe31c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd2ab, gbc.sp());
        EXPECT(0xe31e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe31c));
        EXPECT(0x66, gbc.readMem(0xe31d));
        // CB 66 01A6
        gbc.setState(0x5257, 0xe6f3, 0x76b0, 0xcd98, 0xdd6f, 0xe75, 0x1, 0x1);
        gbc.writeMem(0xe75, { 0x1a });
        gbc.writeMem(0x5257, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe6f3, gbc.sp());
        EXPECT(0x5259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 01A7
        gbc.setState(0xa4c6, 0xaf4a, 0xad50, 0x2f05, 0x4a55, 0xf190, 0x1, 0x1);
        gbc.writeMem(0xa4c6, { 0xcb, 0x66 });
        gbc.writeMem(0xf190, { 0x2f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xaf4a, gbc.sp());
        EXPECT(0xa4c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c6));
        EXPECT(0x66, gbc.readMem(0xa4c7));
        EXPECT(0x2f, gbc.readMem(0xf190));
        // CB 66 01A8
        gbc.setState(0x16a6, 0xfea5, 0x5700, 0x3682, 0xe755, 0x49d1, 0x1, 0x1);
        gbc.writeMem(0x16a6, { 0xcb, 0x66 });
        gbc.writeMem(0x49d1, { 0xdc });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xfea5, gbc.sp());
        EXPECT(0x16a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 01A9
        gbc.setState(0x2b4a, 0xd399, 0xa6e0, 0x13ad, 0xae5, 0x5cd1, 0x1, 0x0);
        gbc.writeMem(0x2b4a, { 0xcb, 0x66 });
        gbc.writeMem(0x5cd1, { 0x24 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd399, gbc.sp());
        EXPECT(0x2b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 01AA
        gbc.setState(0x68, 0xbd76, 0x4360, 0xc86f, 0xe713, 0x1db8, 0x1, 0x0);
        gbc.writeMem(0x68, { 0xcb, 0x66 });
        gbc.writeMem(0x1db8, { 0x2e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbd76, gbc.sp());
        EXPECT(0x6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 01AB
        gbc.setState(0x8453, 0xcde7, 0x3240, 0xa5fc, 0x1470, 0xb47f, 0x0, 0x1);
        gbc.writeMem(0x8453, { 0xcb, 0x66 });
        gbc.writeMem(0xb47f, { 0xcb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xcde7, gbc.sp());
        EXPECT(0x8455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8453));
        EXPECT(0x66, gbc.readMem(0x8454));
        EXPECT(0xcb, gbc.readMem(0xb47f));
        // CB 66 01AC
        gbc.setState(0x87ed, 0x52b7, 0xc0d0, 0x767d, 0xc14c, 0x7353, 0x0, 0x0);
        gbc.writeMem(0x7353, { 0x62 });
        gbc.writeMem(0x87ed, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x52b7, gbc.sp());
        EXPECT(0x87ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ed));
        EXPECT(0x66, gbc.readMem(0x87ee));
        // CB 66 01AD
        gbc.setState(0x41c3, 0xf83, 0x4ed0, 0xa64b, 0x9b97, 0x458a, 0x0, 0x1);
        gbc.writeMem(0x41c3, { 0xcb, 0x66 });
        gbc.writeMem(0x458a, { 0x89 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf83, gbc.sp());
        EXPECT(0x41c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 01AE
        gbc.setState(0x3ad7, 0x5c0f, 0x9fb0, 0xe847, 0x570, 0x6aec, 0x0, 0x0);
        gbc.writeMem(0x3ad7, { 0xcb, 0x66 });
        gbc.writeMem(0x6aec, { 0x1f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5c0f, gbc.sp());
        EXPECT(0x3ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 01AF
        gbc.setState(0xb6c1, 0x75f5, 0xe880, 0x1b0, 0xd507, 0xfe60, 0x0, 0x0);
        gbc.writeMem(0xb6c1, { 0xcb, 0x66 });
        gbc.writeMem(0xfe60, { 0xfb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x75f5, gbc.sp());
        EXPECT(0xb6c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c1));
        EXPECT(0x66, gbc.readMem(0xb6c2));
        EXPECT(0xfb, gbc.readMem(0xfe60));
        // CB 66 01B0
        gbc.setState(0x8f7, 0x5ba2, 0xbf0, 0x81bb, 0x1eb4, 0x32d2, 0x1, 0x0);
        gbc.writeMem(0x8f7, { 0xcb, 0x66 });
        gbc.writeMem(0x32d2, { 0x3f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5ba2, gbc.sp());
        EXPECT(0x8f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 01B1
        gbc.setState(0x5a99, 0x7382, 0x5eb0, 0x8d8e, 0xce72, 0xf61, 0x0, 0x1);
        gbc.writeMem(0xf61, { 0xe });
        gbc.writeMem(0x5a99, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7382, gbc.sp());
        EXPECT(0x5a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 01B2
        gbc.setState(0x76b3, 0x388f, 0x12a0, 0x758d, 0xc4e1, 0xbe36, 0x0, 0x1);
        gbc.writeMem(0x76b3, { 0xcb, 0x66 });
        gbc.writeMem(0xbe36, { 0x6e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x388f, gbc.sp());
        EXPECT(0x76b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xbe36));
        // CB 66 01B3
        gbc.setState(0x13f3, 0x2c45, 0x1200, 0x5700, 0xb0b4, 0x3936, 0x1, 0x0);
        gbc.writeMem(0x13f3, { 0xcb, 0x66 });
        gbc.writeMem(0x3936, { 0xa0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2c45, gbc.sp());
        EXPECT(0x13f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 01B4
        gbc.setState(0x92f8, 0xa89e, 0xb510, 0xa4dd, 0x84e3, 0x9f2b, 0x1, 0x0);
        gbc.writeMem(0x92f8, { 0xcb, 0x66 });
        gbc.writeMem(0x9f2b, { 0xc2 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa89e, gbc.sp());
        EXPECT(0x92fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92f8));
        EXPECT(0x66, gbc.readMem(0x92f9));
        EXPECT(0xc2, gbc.readMem(0x9f2b));
        // CB 66 01B5
        gbc.setState(0xdaaa, 0xe8ef, 0x1300, 0xae46, 0xea5d, 0xd819, 0x1, 0x0);
        gbc.writeMem(0xd819, { 0x33 });
        gbc.writeMem(0xdaaa, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe8ef, gbc.sp());
        EXPECT(0xdaac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd819));
        EXPECT(0xcb, gbc.readMem(0xdaaa));
        EXPECT(0x66, gbc.readMem(0xdaab));
        // CB 66 01B6
        gbc.setState(0xa7f1, 0xe528, 0x6ba0, 0x1c86, 0xd23e, 0xee6d, 0x0, 0x1);
        gbc.writeMem(0xa7f1, { 0xcb, 0x66 });
        gbc.writeMem(0xee6d, { 0xe3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe528, gbc.sp());
        EXPECT(0xa7f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f1));
        EXPECT(0x66, gbc.readMem(0xa7f2));
        EXPECT(0xe3, gbc.readMem(0xee6d));
        // CB 66 01B7
        gbc.setState(0xa13f, 0x9e75, 0xe190, 0xe3fe, 0x177d, 0xa188, 0x0, 0x1);
        gbc.writeMem(0xa13f, { 0xcb, 0x66 });
        gbc.writeMem(0xa188, { 0x52 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9e75, gbc.sp());
        EXPECT(0xa141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa13f));
        EXPECT(0x66, gbc.readMem(0xa140));
        EXPECT(0x52, gbc.readMem(0xa188));
        // CB 66 01B8
        gbc.setState(0x4285, 0x6ba1, 0x1500, 0xfe86, 0x58c6, 0x63e2, 0x1, 0x1);
        gbc.writeMem(0x4285, { 0xcb, 0x66 });
        gbc.writeMem(0x63e2, { 0x1e });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6ba1, gbc.sp());
        EXPECT(0x4287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 01B9
        gbc.setState(0xb104, 0x5b66, 0x8100, 0xa0f9, 0xa8f7, 0x2b49, 0x0, 0x0);
        gbc.writeMem(0x2b49, { 0xcf });
        gbc.writeMem(0xb104, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5b66, gbc.sp());
        EXPECT(0xb106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb104));
        EXPECT(0x66, gbc.readMem(0xb105));
        // CB 66 01BA
        gbc.setState(0x1eca, 0xa128, 0xf5e0, 0x7fc7, 0x1262, 0x3405, 0x0, 0x0);
        gbc.writeMem(0x1eca, { 0xcb, 0x66 });
        gbc.writeMem(0x3405, { 0xb4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa128, gbc.sp());
        EXPECT(0x1ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 01BB
        gbc.setState(0x64a7, 0xd6a2, 0xf160, 0xf737, 0x3220, 0x43f0, 0x0, 0x0);
        gbc.writeMem(0x43f0, { 0x2 });
        gbc.writeMem(0x64a7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd6a2, gbc.sp());
        EXPECT(0x64a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 01BC
        gbc.setState(0x220f, 0x7a0c, 0x2480, 0xf3c9, 0x1d91, 0x1f29, 0x1, 0x0);
        gbc.writeMem(0x1f29, { 0x8f });
        gbc.writeMem(0x220f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7a0c, gbc.sp());
        EXPECT(0x2211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 01BD
        gbc.setState(0x1a69, 0xc4a9, 0x81b0, 0x782, 0xb2e3, 0x1eff, 0x0, 0x0);
        gbc.writeMem(0x1a69, { 0xcb, 0x66 });
        gbc.writeMem(0x1eff, { 0x8d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc4a9, gbc.sp());
        EXPECT(0x1a6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 01BE
        gbc.setState(0xd85c, 0xcd30, 0x9990, 0xba5, 0x3e8f, 0x506, 0x1, 0x0);
        gbc.writeMem(0x506, { 0x13 });
        gbc.writeMem(0xd85c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcd30, gbc.sp());
        EXPECT(0xd85e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd85c));
        EXPECT(0x66, gbc.readMem(0xd85d));
        // CB 66 01BF
        gbc.setState(0x67e8, 0x71ae, 0xabd0, 0xfb5d, 0xce62, 0x9a3, 0x0, 0x1);
        gbc.writeMem(0x9a3, { 0xe });
        gbc.writeMem(0x67e8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x71ae, gbc.sp());
        EXPECT(0x67ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 01C0
        gbc.setState(0x992a, 0x3806, 0x6750, 0x15fe, 0x21f3, 0xc0d8, 0x1, 0x0);
        gbc.writeMem(0x992a, { 0xcb, 0x66 });
        gbc.writeMem(0xc0d8, { 0x38 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3806, gbc.sp());
        EXPECT(0x992c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x992a));
        EXPECT(0x66, gbc.readMem(0x992b));
        EXPECT(0x38, gbc.readMem(0xc0d8));
        // CB 66 01C1
        gbc.setState(0xeb23, 0x68b3, 0x98e0, 0x790c, 0xef2f, 0xd2e7, 0x0, 0x1);
        gbc.writeMem(0xd2e7, { 0x58 });
        gbc.writeMem(0xeb23, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x68b3, gbc.sp());
        EXPECT(0xeb25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd2e7));
        EXPECT(0xcb, gbc.readMem(0xeb23));
        EXPECT(0x66, gbc.readMem(0xeb24));
        // CB 66 01C2
        gbc.setState(0x4230, 0x6de9, 0x4630, 0x8159, 0x6f1b, 0xacda, 0x0, 0x0);
        gbc.writeMem(0x4230, { 0xcb, 0x66 });
        gbc.writeMem(0xacda, { 0x50 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6de9, gbc.sp());
        EXPECT(0x4232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xacda));
        // CB 66 01C3
        gbc.setState(0x705a, 0x83f7, 0x3fa0, 0x2f97, 0x1084, 0x86f6, 0x1, 0x0);
        gbc.writeMem(0x705a, { 0xcb, 0x66 });
        gbc.writeMem(0x86f6, { 0x6b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x83f7, gbc.sp());
        EXPECT(0x705c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x86f6));
        // CB 66 01C5
        gbc.setState(0x9040, 0xb7ef, 0x4000, 0xe93f, 0x81f9, 0x5254, 0x1, 0x0);
        gbc.writeMem(0x5254, { 0x61 });
        gbc.writeMem(0x9040, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb7ef, gbc.sp());
        EXPECT(0x9042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9040));
        EXPECT(0x66, gbc.readMem(0x9041));
        // CB 66 01C6
        gbc.setState(0xe5e4, 0x5631, 0x6fb0, 0xee03, 0x55c1, 0xf539, 0x1, 0x0);
        gbc.writeMem(0xe5e4, { 0xcb, 0x66 });
        gbc.writeMem(0xf539, { 0x7b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5631, gbc.sp());
        EXPECT(0xe5e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e4));
        EXPECT(0x66, gbc.readMem(0xe5e5));
        EXPECT(0x7b, gbc.readMem(0xf539));
        // CB 66 01C8
        gbc.setState(0x7b4e, 0xb22d, 0x31b0, 0x9d11, 0xe112, 0xb1b8, 0x1, 0x0);
        gbc.writeMem(0x7b4e, { 0xcb, 0x66 });
        gbc.writeMem(0xb1b8, { 0x5f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb22d, gbc.sp());
        EXPECT(0x7b50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xb1b8));
        // CB 66 01C9
        gbc.setState(0x3e9d, 0x57fa, 0x940, 0xd8fd, 0x2b92, 0x2028, 0x1, 0x0);
        gbc.writeMem(0x2028, { 0xd });
        gbc.writeMem(0x3e9d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x57fa, gbc.sp());
        EXPECT(0x3e9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 01CA
        gbc.setState(0x9319, 0xad6e, 0x7510, 0x2130, 0x41f, 0x9002, 0x0, 0x0);
        gbc.writeMem(0x9002, { 0xd2 });
        gbc.writeMem(0x9319, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xad6e, gbc.sp());
        EXPECT(0x931b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x9002));
        EXPECT(0xcb, gbc.readMem(0x9319));
        EXPECT(0x66, gbc.readMem(0x931a));
        // CB 66 01CB
        gbc.setState(0x62cf, 0x9c7e, 0x7260, 0x19ed, 0xa6e4, 0x2382, 0x0, 0x1);
        gbc.writeMem(0x2382, { 0x43 });
        gbc.writeMem(0x62cf, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9c7e, gbc.sp());
        EXPECT(0x62d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 01CC
        gbc.setState(0x6348, 0x4e26, 0xeef0, 0x6d82, 0x81d1, 0x1ecf, 0x0, 0x0);
        gbc.writeMem(0x1ecf, { 0x2e });
        gbc.writeMem(0x6348, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4e26, gbc.sp());
        EXPECT(0x634a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 01CD
        gbc.setState(0xa4ef, 0xabc7, 0xf6e0, 0xf646, 0xd741, 0x77c8, 0x1, 0x0);
        gbc.writeMem(0x77c8, { 0xa2 });
        gbc.writeMem(0xa4ef, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xabc7, gbc.sp());
        EXPECT(0xa4f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ef));
        EXPECT(0x66, gbc.readMem(0xa4f0));
        // CB 66 01CE
        gbc.setState(0xdd8, 0xfc42, 0x20e0, 0xb96f, 0x9a2d, 0xa333, 0x1, 0x0);
        gbc.writeMem(0xdd8, { 0xcb, 0x66 });
        gbc.writeMem(0xa333, { 0x28 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfc42, gbc.sp());
        EXPECT(0xdda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xa333));
        // CB 66 01CF
        gbc.setState(0x8b43, 0x6e2e, 0xb3d0, 0x5c7b, 0xe3fe, 0x3f3a, 0x1, 0x0);
        gbc.writeMem(0x3f3a, { 0xdf });
        gbc.writeMem(0x8b43, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6e2e, gbc.sp());
        EXPECT(0x8b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b43));
        EXPECT(0x66, gbc.readMem(0x8b44));
        // CB 66 01D0
        gbc.setState(0xe779, 0xce55, 0x5320, 0x9dea, 0x9853, 0x196d, 0x0, 0x0);
        gbc.writeMem(0x196d, { 0xa3 });
        gbc.writeMem(0xe779, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xce55, gbc.sp());
        EXPECT(0xe77b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe779));
        EXPECT(0x66, gbc.readMem(0xe77a));
        // CB 66 01D1
        gbc.setState(0x5cdc, 0xd2ad, 0x6be0, 0x3d58, 0xccdf, 0xd418, 0x0, 0x1);
        gbc.writeMem(0x5cdc, { 0xcb, 0x66 });
        gbc.writeMem(0xd418, { 0x9c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd2ad, gbc.sp());
        EXPECT(0x5cde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd418));
        // CB 66 01D2
        gbc.setState(0x69f6, 0xb42f, 0x59e0, 0x5793, 0x218f, 0x6552, 0x0, 0x0);
        gbc.writeMem(0x6552, { 0x0 });
        gbc.writeMem(0x69f6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb42f, gbc.sp());
        EXPECT(0x69f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 01D3
        gbc.setState(0xb9bb, 0x1ac0, 0x8f20, 0xa167, 0x6220, 0x1284, 0x0, 0x1);
        gbc.writeMem(0x1284, { 0x77 });
        gbc.writeMem(0xb9bb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1ac0, gbc.sp());
        EXPECT(0xb9bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9bb));
        EXPECT(0x66, gbc.readMem(0xb9bc));
        // CB 66 01D4
        gbc.setState(0xc086, 0xb529, 0x5f10, 0xac4a, 0xee5d, 0x5106, 0x0, 0x1);
        gbc.writeMem(0x5106, { 0xb5 });
        gbc.writeMem(0xc086, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb529, gbc.sp());
        EXPECT(0xc088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc086));
        EXPECT(0x66, gbc.readMem(0xc087));
        // CB 66 01D5
        gbc.setState(0x55ba, 0x5dfa, 0x4560, 0x5aed, 0x4869, 0xfcb2, 0x1, 0x1);
        gbc.writeMem(0x55ba, { 0xcb, 0x66 });
        gbc.writeMem(0xfcb2, { 0xc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5dfa, gbc.sp());
        EXPECT(0x55bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xfcb2));
        // CB 66 01D6
        gbc.setState(0x4962, 0x6b56, 0x7ee0, 0xddbc, 0xee48, 0xd799, 0x1, 0x0);
        gbc.writeMem(0x4962, { 0xcb, 0x66 });
        gbc.writeMem(0xd799, { 0x68 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6b56, gbc.sp());
        EXPECT(0x4964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd799));
        // CB 66 01D7
        gbc.setState(0x1fa4, 0xbb87, 0x2d0, 0x81f2, 0x6d8d, 0xf65d, 0x0, 0x0);
        gbc.writeMem(0x1fa4, { 0xcb, 0x66 });
        gbc.writeMem(0xf65d, { 0x75 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbb87, gbc.sp());
        EXPECT(0x1fa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xf65d));
        // CB 66 01D8
        gbc.setState(0xdd62, 0xeb24, 0xdd30, 0xa997, 0x1f9d, 0x92bd, 0x1, 0x0);
        gbc.writeMem(0x92bd, { 0x4a });
        gbc.writeMem(0xdd62, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xeb24, gbc.sp());
        EXPECT(0xdd64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x92bd));
        EXPECT(0xcb, gbc.readMem(0xdd62));
        EXPECT(0x66, gbc.readMem(0xdd63));
        // CB 66 01D9
        gbc.setState(0xd06e, 0xc5d8, 0x7800, 0xd3ad, 0x2ad8, 0x5d85, 0x0, 0x1);
        gbc.writeMem(0x5d85, { 0x4 });
        gbc.writeMem(0xd06e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc5d8, gbc.sp());
        EXPECT(0xd070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd06e));
        EXPECT(0x66, gbc.readMem(0xd06f));
        // CB 66 01DA
        gbc.setState(0x923c, 0x852, 0x6eb0, 0xad5, 0x9935, 0x9ad1, 0x1, 0x0);
        gbc.writeMem(0x923c, { 0xcb, 0x66 });
        gbc.writeMem(0x9ad1, { 0x58 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x852, gbc.sp());
        EXPECT(0x923e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x923c));
        EXPECT(0x66, gbc.readMem(0x923d));
        EXPECT(0x58, gbc.readMem(0x9ad1));
        // CB 66 01DB
        gbc.setState(0xb22b, 0x6bd0, 0x3830, 0x52fc, 0x8262, 0x9af9, 0x0, 0x0);
        gbc.writeMem(0x9af9, { 0x7 });
        gbc.writeMem(0xb22b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6bd0, gbc.sp());
        EXPECT(0xb22d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9af9));
        EXPECT(0xcb, gbc.readMem(0xb22b));
        EXPECT(0x66, gbc.readMem(0xb22c));
        // CB 66 01DC
        gbc.setState(0x8034, 0xf97e, 0x1180, 0x2dfd, 0x753d, 0x7a2c, 0x1, 0x1);
        gbc.writeMem(0x7a2c, { 0xf1 });
        gbc.writeMem(0x8034, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf97e, gbc.sp());
        EXPECT(0x8036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8034));
        EXPECT(0x66, gbc.readMem(0x8035));
        // CB 66 01DD
        gbc.setState(0xde, 0x3cf5, 0x19f0, 0x8887, 0x5b04, 0x9eb5, 0x0, 0x1);
        gbc.writeMem(0xde, { 0xcb, 0x66 });
        gbc.writeMem(0x9eb5, { 0x7e });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3cf5, gbc.sp());
        EXPECT(0xe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9eb5));
        // CB 66 01DE
        gbc.setState(0xd6f3, 0x7528, 0xfab0, 0xf658, 0xb07c, 0xa65, 0x0, 0x0);
        gbc.writeMem(0xa65, { 0xa6 });
        gbc.writeMem(0xd6f3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7528, gbc.sp());
        EXPECT(0xd6f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f3));
        EXPECT(0x66, gbc.readMem(0xd6f4));
        // CB 66 01DF
        gbc.setState(0x9fc3, 0x69f0, 0x9bb0, 0x5171, 0xe3b7, 0xb9cd, 0x0, 0x1);
        gbc.writeMem(0x9fc3, { 0xcb, 0x66 });
        gbc.writeMem(0xb9cd, { 0xd });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x69f0, gbc.sp());
        EXPECT(0x9fc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc3));
        EXPECT(0x66, gbc.readMem(0x9fc4));
        EXPECT(0xd, gbc.readMem(0xb9cd));
        // CB 66 01E0
        gbc.setState(0xb0b3, 0x17b3, 0x19f0, 0x58c7, 0x78b4, 0x799f, 0x0, 0x0);
        gbc.writeMem(0x799f, { 0xab });
        gbc.writeMem(0xb0b3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x17b3, gbc.sp());
        EXPECT(0xb0b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0b3));
        EXPECT(0x66, gbc.readMem(0xb0b4));
        // CB 66 01E1
        gbc.setState(0xd2b1, 0xe61e, 0x8180, 0xdc20, 0xa122, 0x6dc9, 0x1, 0x1);
        gbc.writeMem(0x6dc9, { 0x1d });
        gbc.writeMem(0xd2b1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe61e, gbc.sp());
        EXPECT(0xd2b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2b1));
        EXPECT(0x66, gbc.readMem(0xd2b2));
        // CB 66 01E2
        gbc.setState(0xa812, 0x863, 0x6c20, 0xadd5, 0xeb0, 0xe260, 0x0, 0x0);
        gbc.writeMem(0xa812, { 0xcb, 0x66 });
        gbc.writeMem(0xe260, { 0x2d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x863, gbc.sp());
        EXPECT(0xa814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa812));
        EXPECT(0x66, gbc.readMem(0xa813));
        EXPECT(0x2d, gbc.readMem(0xe260));
        // CB 66 01E3
        gbc.setState(0x24ec, 0xe9d0, 0xf460, 0x4896, 0xe807, 0xa041, 0x0, 0x1);
        gbc.writeMem(0x24ec, { 0xcb, 0x66 });
        gbc.writeMem(0xa041, { 0x1d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe9d0, gbc.sp());
        EXPECT(0x24ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa041));
        // CB 66 01E5
        gbc.setState(0x5101, 0x889d, 0xb050, 0x36f6, 0x31f8, 0x3c6a, 0x0, 0x1);
        gbc.writeMem(0x3c6a, { 0x4c });
        gbc.writeMem(0x5101, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x889d, gbc.sp());
        EXPECT(0x5103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 01E6
        gbc.setState(0xd398, 0x822a, 0x5310, 0x4fcb, 0x5d79, 0x6258, 0x0, 0x1);
        gbc.writeMem(0x6258, { 0xe0 });
        gbc.writeMem(0xd398, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x822a, gbc.sp());
        EXPECT(0xd39a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd398));
        EXPECT(0x66, gbc.readMem(0xd399));
        // CB 66 01E7
        gbc.setState(0xb8dc, 0x8388, 0xd380, 0xf551, 0xc816, 0x70b4, 0x1, 0x0);
        gbc.writeMem(0x70b4, { 0xd6 });
        gbc.writeMem(0xb8dc, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8388, gbc.sp());
        EXPECT(0xb8de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8dc));
        EXPECT(0x66, gbc.readMem(0xb8dd));
        // CB 66 01E8
        gbc.setState(0x467e, 0xd7dd, 0xef50, 0x80a9, 0xbdf3, 0x134c, 0x0, 0x0);
        gbc.writeMem(0x134c, { 0x46 });
        gbc.writeMem(0x467e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd7dd, gbc.sp());
        EXPECT(0x4680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 01E9
        gbc.setState(0x527e, 0x3992, 0x8450, 0x44b8, 0x44f1, 0x15, 0x0, 0x0);
        gbc.writeMem(0x15, { 0x33 });
        gbc.writeMem(0x527e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3992, gbc.sp());
        EXPECT(0x5280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 01EA
        gbc.setState(0x522b, 0x5f42, 0x6990, 0x201b, 0x688c, 0x8e37, 0x1, 0x0);
        gbc.writeMem(0x522b, { 0xcb, 0x66 });
        gbc.writeMem(0x8e37, { 0x47 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5f42, gbc.sp());
        EXPECT(0x522d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8e37));
        // CB 66 01EB
        gbc.setState(0x1bb1, 0x7199, 0x2250, 0xfb1b, 0x88c6, 0x17aa, 0x1, 0x1);
        gbc.writeMem(0x17aa, { 0xca });
        gbc.writeMem(0x1bb1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7199, gbc.sp());
        EXPECT(0x1bb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 01EC
        gbc.setState(0xa658, 0x79ae, 0x800, 0x31b1, 0xaf26, 0x4d19, 0x0, 0x0);
        gbc.writeMem(0x4d19, { 0x5d });
        gbc.writeMem(0xa658, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x79ae, gbc.sp());
        EXPECT(0xa65a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa658));
        EXPECT(0x66, gbc.readMem(0xa659));
        // CB 66 01ED
        gbc.setState(0xc9e7, 0x7c87, 0xe30, 0xe22d, 0xcaad, 0x94ff, 0x0, 0x1);
        gbc.writeMem(0x94ff, { 0x8 });
        gbc.writeMem(0xc9e7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7c87, gbc.sp());
        EXPECT(0xc9e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x94ff));
        EXPECT(0xcb, gbc.readMem(0xc9e7));
        EXPECT(0x66, gbc.readMem(0xc9e8));
        // CB 66 01EE
        gbc.setState(0x98ba, 0xba94, 0xa730, 0xcbae, 0xdf30, 0x2a4e, 0x1, 0x0);
        gbc.writeMem(0x2a4e, { 0xf7 });
        gbc.writeMem(0x98ba, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xba94, gbc.sp());
        EXPECT(0x98bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ba));
        EXPECT(0x66, gbc.readMem(0x98bb));
        // CB 66 01EF
        gbc.setState(0x859c, 0x548d, 0x9160, 0x1d0d, 0xe066, 0xbd5d, 0x0, 0x1);
        gbc.writeMem(0x859c, { 0xcb, 0x66 });
        gbc.writeMem(0xbd5d, { 0x78 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x548d, gbc.sp());
        EXPECT(0x859e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x859c));
        EXPECT(0x66, gbc.readMem(0x859d));
        EXPECT(0x78, gbc.readMem(0xbd5d));
        // CB 66 01F0
        gbc.setState(0xafc0, 0x9d8a, 0x760, 0xe57c, 0x1551, 0x38da, 0x1, 0x0);
        gbc.writeMem(0x38da, { 0xe2 });
        gbc.writeMem(0xafc0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9d8a, gbc.sp());
        EXPECT(0xafc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc0));
        EXPECT(0x66, gbc.readMem(0xafc1));
        // CB 66 01F1
        gbc.setState(0xd492, 0xcac6, 0x22c0, 0xb75c, 0xc05e, 0xf831, 0x1, 0x0);
        gbc.writeMem(0xd492, { 0xcb, 0x66 });
        gbc.writeMem(0xf831, { 0xc7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xcac6, gbc.sp());
        EXPECT(0xd494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd492));
        EXPECT(0x66, gbc.readMem(0xd493));
        EXPECT(0xc7, gbc.readMem(0xf831));
        // CB 66 01F2
        gbc.setState(0x6225, 0xa07e, 0xb430, 0x1318, 0xaf86, 0x2321, 0x0, 0x0);
        gbc.writeMem(0x2321, { 0xe2 });
        gbc.writeMem(0x6225, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa07e, gbc.sp());
        EXPECT(0x6227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 01F3
        gbc.setState(0xe0cd, 0xe418, 0x5cd0, 0x36a3, 0x7516, 0x188c, 0x1, 0x1);
        gbc.writeMem(0x188c, { 0x91 });
        gbc.writeMem(0xe0cd, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe418, gbc.sp());
        EXPECT(0xe0cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0cd));
        EXPECT(0x66, gbc.readMem(0xe0ce));
        // CB 66 01F4
        gbc.setState(0xa211, 0xba5, 0x1ea0, 0xe2b5, 0xac8e, 0xfcd8, 0x1, 0x0);
        gbc.writeMem(0xa211, { 0xcb, 0x66 });
        gbc.writeMem(0xfcd8, { 0x9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xba5, gbc.sp());
        EXPECT(0xa213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa211));
        EXPECT(0x66, gbc.readMem(0xa212));
        EXPECT(0x9, gbc.readMem(0xfcd8));
        // CB 66 01F5
        gbc.setState(0xdb9e, 0x4699, 0x8e50, 0xd180, 0x1027, 0x41c4, 0x1, 0x1);
        gbc.writeMem(0x41c4, { 0x5e });
        gbc.writeMem(0xdb9e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4699, gbc.sp());
        EXPECT(0xdba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb9e));
        EXPECT(0x66, gbc.readMem(0xdb9f));
        // CB 66 01F6
        gbc.setState(0x4b5, 0x62c, 0xdc90, 0xffc3, 0x2b38, 0xf64f, 0x1, 0x1);
        gbc.writeMem(0x4b5, { 0xcb, 0x66 });
        gbc.writeMem(0xf64f, { 0x55 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x62c, gbc.sp());
        EXPECT(0x4b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xf64f));
        // CB 66 01F7
        gbc.setState(0xaef8, 0xc334, 0x93b0, 0x55f3, 0xcca8, 0x90e8, 0x1, 0x0);
        gbc.writeMem(0x90e8, { 0x67 });
        gbc.writeMem(0xaef8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc334, gbc.sp());
        EXPECT(0xaefa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x90e8));
        EXPECT(0xcb, gbc.readMem(0xaef8));
        EXPECT(0x66, gbc.readMem(0xaef9));
        // CB 66 01F8
        gbc.setState(0xb033, 0x1878, 0x2dd0, 0xfd55, 0x321f, 0xa10f, 0x1, 0x0);
        gbc.writeMem(0xa10f, { 0xbe });
        gbc.writeMem(0xb033, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1878, gbc.sp());
        EXPECT(0xb035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xa10f));
        EXPECT(0xcb, gbc.readMem(0xb033));
        EXPECT(0x66, gbc.readMem(0xb034));
        // CB 66 01F9
        gbc.setState(0x5268, 0x3724, 0x8380, 0xbecc, 0x77fd, 0x1d1, 0x1, 0x0);
        gbc.writeMem(0x1d1, { 0xaa });
        gbc.writeMem(0x5268, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3724, gbc.sp());
        EXPECT(0x526a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 01FA
        gbc.setState(0xfe6, 0x11f5, 0x33f0, 0x2098, 0xa53d, 0xd590, 0x1, 0x1);
        gbc.writeMem(0xfe6, { 0xcb, 0x66 });
        gbc.writeMem(0xd590, { 0xb7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x11f5, gbc.sp());
        EXPECT(0xfe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd590));
        // CB 66 01FB
        gbc.setState(0x696e, 0x6d6a, 0x450, 0xd115, 0x2125, 0x3bfe, 0x0, 0x1);
        gbc.writeMem(0x3bfe, { 0xc4 });
        gbc.writeMem(0x696e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6d6a, gbc.sp());
        EXPECT(0x6970, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 01FC
        gbc.setState(0xbf28, 0x93d7, 0xc650, 0xa819, 0x6d2, 0x760c, 0x0, 0x1);
        gbc.writeMem(0x760c, { 0x99 });
        gbc.writeMem(0xbf28, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x93d7, gbc.sp());
        EXPECT(0xbf2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf28));
        EXPECT(0x66, gbc.readMem(0xbf29));
        // CB 66 01FE
        gbc.setState(0xdd3e, 0x7ab1, 0xaad0, 0xe107, 0x4ad3, 0xb171, 0x0, 0x1);
        gbc.writeMem(0xb171, { 0x5f });
        gbc.writeMem(0xdd3e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7ab1, gbc.sp());
        EXPECT(0xdd40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xb171));
        EXPECT(0xcb, gbc.readMem(0xdd3e));
        EXPECT(0x66, gbc.readMem(0xdd3f));
        // CB 66 01FF
        gbc.setState(0x8eeb, 0x1526, 0x97c0, 0x56cc, 0x5a6a, 0x42c6, 0x0, 0x0);
        gbc.writeMem(0x42c6, { 0xea });
        gbc.writeMem(0x8eeb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1526, gbc.sp());
        EXPECT(0x8eed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eeb));
        EXPECT(0x66, gbc.readMem(0x8eec));
        // CB 66 0200
        gbc.setState(0x4f9f, 0x671c, 0xd1f0, 0x62a0, 0x6d16, 0xabc7, 0x0, 0x1);
        gbc.writeMem(0x4f9f, { 0xcb, 0x66 });
        gbc.writeMem(0xabc7, { 0xc8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x671c, gbc.sp());
        EXPECT(0x4fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xabc7));
        // CB 66 0202
        gbc.setState(0x96a5, 0xb746, 0xdfe0, 0x5ad5, 0xbdd7, 0x7cca, 0x0, 0x0);
        gbc.writeMem(0x7cca, { 0x1a });
        gbc.writeMem(0x96a5, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb746, gbc.sp());
        EXPECT(0x96a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96a5));
        EXPECT(0x66, gbc.readMem(0x96a6));
        // CB 66 0203
        gbc.setState(0x46b9, 0xd9d5, 0xb320, 0x762f, 0x45eb, 0x54c5, 0x0, 0x0);
        gbc.writeMem(0x46b9, { 0xcb, 0x66 });
        gbc.writeMem(0x54c5, { 0xc6 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd9d5, gbc.sp());
        EXPECT(0x46bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0204
        gbc.setState(0xb2df, 0x1b69, 0xc70, 0x1a89, 0xc35a, 0xaee3, 0x1, 0x0);
        gbc.writeMem(0xaee3, { 0x64 });
        gbc.writeMem(0xb2df, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1b69, gbc.sp());
        EXPECT(0xb2e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xaee3));
        EXPECT(0xcb, gbc.readMem(0xb2df));
        EXPECT(0x66, gbc.readMem(0xb2e0));
        // CB 66 0205
        gbc.setState(0x9191, 0x8946, 0xe790, 0xa98e, 0xd667, 0xabe3, 0x1, 0x0);
        gbc.writeMem(0x9191, { 0xcb, 0x66 });
        gbc.writeMem(0xabe3, { 0x65 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8946, gbc.sp());
        EXPECT(0x9193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9191));
        EXPECT(0x66, gbc.readMem(0x9192));
        EXPECT(0x65, gbc.readMem(0xabe3));
        // CB 66 0206
        gbc.setState(0xd756, 0xf694, 0x6ef0, 0xe5ed, 0x102e, 0xd0a3, 0x1, 0x1);
        gbc.writeMem(0xd0a3, { 0x27 });
        gbc.writeMem(0xd756, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf694, gbc.sp());
        EXPECT(0xd758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd0a3));
        EXPECT(0xcb, gbc.readMem(0xd756));
        EXPECT(0x66, gbc.readMem(0xd757));
        // CB 66 0207
        gbc.setState(0xc25f, 0x8145, 0xdd80, 0x768, 0x8e33, 0xa4ff, 0x1, 0x0);
        gbc.writeMem(0xa4ff, { 0x96 });
        gbc.writeMem(0xc25f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8145, gbc.sp());
        EXPECT(0xc261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xa4ff));
        EXPECT(0xcb, gbc.readMem(0xc25f));
        EXPECT(0x66, gbc.readMem(0xc260));
        // CB 66 0208
        gbc.setState(0xb8f7, 0xf88d, 0x7bf0, 0x5770, 0xef69, 0x9354, 0x0, 0x0);
        gbc.writeMem(0x9354, { 0xc4 });
        gbc.writeMem(0xb8f7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf88d, gbc.sp());
        EXPECT(0xb8f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x9354));
        EXPECT(0xcb, gbc.readMem(0xb8f7));
        EXPECT(0x66, gbc.readMem(0xb8f8));
        // CB 66 0209
        gbc.setState(0x290d, 0x36a9, 0xfe80, 0x1858, 0x7f0a, 0x7ff8, 0x1, 0x1);
        gbc.writeMem(0x290d, { 0xcb, 0x66 });
        gbc.writeMem(0x7ff8, { 0xe5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x36a9, gbc.sp());
        EXPECT(0x290f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 020A
        gbc.setState(0x82ec, 0x9b0c, 0x8b00, 0x7e13, 0xca46, 0x55d1, 0x0, 0x0);
        gbc.writeMem(0x55d1, { 0xf8 });
        gbc.writeMem(0x82ec, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9b0c, gbc.sp());
        EXPECT(0x82ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ec));
        EXPECT(0x66, gbc.readMem(0x82ed));
        // CB 66 020B
        gbc.setState(0x661a, 0x4407, 0x7530, 0x7c8d, 0xc337, 0x13ac, 0x1, 0x0);
        gbc.writeMem(0x13ac, { 0x58 });
        gbc.writeMem(0x661a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4407, gbc.sp());
        EXPECT(0x661c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 020C
        gbc.setState(0x335d, 0x43d6, 0xa310, 0xe06b, 0x516d, 0x93d5, 0x1, 0x1);
        gbc.writeMem(0x335d, { 0xcb, 0x66 });
        gbc.writeMem(0x93d5, { 0xa5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x43d6, gbc.sp());
        EXPECT(0x335f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x93d5));
        // CB 66 020D
        gbc.setState(0x1080, 0xa441, 0x98d0, 0x6f69, 0x4f1f, 0x5285, 0x1, 0x0);
        gbc.writeMem(0x1080, { 0xcb, 0x66 });
        gbc.writeMem(0x5285, { 0xb4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa441, gbc.sp());
        EXPECT(0x1082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 020E
        gbc.setState(0x5b70, 0x9b09, 0x400, 0xdf8c, 0x30cb, 0xdb3, 0x1, 0x1);
        gbc.writeMem(0xdb3, { 0x8d });
        gbc.writeMem(0x5b70, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9b09, gbc.sp());
        EXPECT(0x5b72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 020F
        gbc.setState(0x7155, 0x7b93, 0x2860, 0xe91, 0x8e94, 0x535, 0x1, 0x1);
        gbc.writeMem(0x535, { 0x72 });
        gbc.writeMem(0x7155, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7b93, gbc.sp());
        EXPECT(0x7157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0210
        gbc.setState(0x21a6, 0x89a2, 0xc910, 0xf86, 0x12f1, 0xbac7, 0x1, 0x1);
        gbc.writeMem(0x21a6, { 0xcb, 0x66 });
        gbc.writeMem(0xbac7, { 0xfd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x89a2, gbc.sp());
        EXPECT(0x21a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xbac7));
        // CB 66 0211
        gbc.setState(0x8660, 0x5923, 0x9ce0, 0xe160, 0xcb27, 0x2298, 0x1, 0x0);
        gbc.writeMem(0x2298, { 0xb });
        gbc.writeMem(0x8660, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5923, gbc.sp());
        EXPECT(0x8662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8660));
        EXPECT(0x66, gbc.readMem(0x8661));
        // CB 66 0212
        gbc.setState(0x3e85, 0xccb3, 0xc830, 0x9f19, 0xdb1d, 0x6c43, 0x0, 0x1);
        gbc.writeMem(0x3e85, { 0xcb, 0x66 });
        gbc.writeMem(0x6c43, { 0x42 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xccb3, gbc.sp());
        EXPECT(0x3e87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0213
        gbc.setState(0xdb96, 0xe8ed, 0xd1d0, 0xec8e, 0xbb78, 0x1fd4, 0x0, 0x0);
        gbc.writeMem(0x1fd4, { 0xde });
        gbc.writeMem(0xdb96, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe8ed, gbc.sp());
        EXPECT(0xdb98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb96));
        EXPECT(0x66, gbc.readMem(0xdb97));
        // CB 66 0214
        gbc.setState(0xbad3, 0x56eb, 0x1a0, 0xb34e, 0xeb05, 0xcc13, 0x0, 0x1);
        gbc.writeMem(0xbad3, { 0xcb, 0x66 });
        gbc.writeMem(0xcc13, { 0xf0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x56eb, gbc.sp());
        EXPECT(0xbad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad3));
        EXPECT(0x66, gbc.readMem(0xbad4));
        EXPECT(0xf0, gbc.readMem(0xcc13));
        // CB 66 0215
        gbc.setState(0xc3e5, 0x403a, 0x5600, 0x5f11, 0x4602, 0xc10a, 0x1, 0x1);
        gbc.writeMem(0xc10a, { 0x4d });
        gbc.writeMem(0xc3e5, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x403a, gbc.sp());
        EXPECT(0xc3e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc10a));
        EXPECT(0xcb, gbc.readMem(0xc3e5));
        EXPECT(0x66, gbc.readMem(0xc3e6));
        // CB 66 0216
        gbc.setState(0x4051, 0x62af, 0x2810, 0x6677, 0xa8a9, 0x836f, 0x1, 0x0);
        gbc.writeMem(0x4051, { 0xcb, 0x66 });
        gbc.writeMem(0x836f, { 0xd9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x62af, gbc.sp());
        EXPECT(0x4053, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x836f));
        // CB 66 0217
        gbc.setState(0x9e9a, 0x6c12, 0xb6f0, 0xdf7c, 0x505c, 0x9931, 0x1, 0x1);
        gbc.writeMem(0x9931, { 0xa2 });
        gbc.writeMem(0x9e9a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6c12, gbc.sp());
        EXPECT(0x9e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9931));
        EXPECT(0xcb, gbc.readMem(0x9e9a));
        EXPECT(0x66, gbc.readMem(0x9e9b));
        // CB 66 0218
        gbc.setState(0xd1a1, 0xf887, 0x5ce0, 0xb40b, 0xc7f1, 0x7e30, 0x0, 0x1);
        gbc.writeMem(0x7e30, { 0x15 });
        gbc.writeMem(0xd1a1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf887, gbc.sp());
        EXPECT(0xd1a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a1));
        EXPECT(0x66, gbc.readMem(0xd1a2));
        // CB 66 0219
        gbc.setState(0x4665, 0x9770, 0xa830, 0x7ce1, 0x9900, 0x3464, 0x1, 0x0);
        gbc.writeMem(0x3464, { 0x85 });
        gbc.writeMem(0x4665, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9770, gbc.sp());
        EXPECT(0x4667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 021A
        gbc.setState(0x6d12, 0x8469, 0x2590, 0xa89b, 0x59d4, 0x49a1, 0x0, 0x1);
        gbc.writeMem(0x49a1, { 0x2f });
        gbc.writeMem(0x6d12, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8469, gbc.sp());
        EXPECT(0x6d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 021B
        gbc.setState(0x2b7e, 0x24ca, 0x8490, 0x9eb, 0xd583, 0x9fe8, 0x0, 0x1);
        gbc.writeMem(0x2b7e, { 0xcb, 0x66 });
        gbc.writeMem(0x9fe8, { 0x22 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x24ca, gbc.sp());
        EXPECT(0x2b80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x9fe8));
        // CB 66 021D
        gbc.setState(0x7a84, 0xb8ca, 0xbb20, 0xccb1, 0xb4ca, 0x6c84, 0x1, 0x0);
        gbc.writeMem(0x6c84, { 0xe3 });
        gbc.writeMem(0x7a84, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb8ca, gbc.sp());
        EXPECT(0x7a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 021F
        gbc.setState(0x3c7d, 0x7fba, 0xf980, 0xbe4b, 0x8550, 0x9c40, 0x1, 0x1);
        gbc.writeMem(0x3c7d, { 0xcb, 0x66 });
        gbc.writeMem(0x9c40, { 0x7e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7fba, gbc.sp());
        EXPECT(0x3c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9c40));
        // CB 66 0220
        gbc.setState(0xac05, 0x39f9, 0x62a0, 0xbad7, 0x43a3, 0x7fbd, 0x0, 0x0);
        gbc.writeMem(0x7fbd, { 0x11 });
        gbc.writeMem(0xac05, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x39f9, gbc.sp());
        EXPECT(0xac07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac05));
        EXPECT(0x66, gbc.readMem(0xac06));
        // CB 66 0221
        gbc.setState(0xa3c2, 0x225, 0x48a0, 0xd9e0, 0x5a14, 0xdca4, 0x0, 0x1);
        gbc.writeMem(0xa3c2, { 0xcb, 0x66 });
        gbc.writeMem(0xdca4, { 0x66 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x225, gbc.sp());
        EXPECT(0xa3c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3c2));
        EXPECT(0x66, gbc.readMem(0xa3c3));
        EXPECT(0x66, gbc.readMem(0xdca4));
        // CB 66 0222
        gbc.setState(0x11ea, 0x13ba, 0xc950, 0x4ed5, 0x4edf, 0x3e47, 0x1, 0x1);
        gbc.writeMem(0x11ea, { 0xcb, 0x66 });
        gbc.writeMem(0x3e47, { 0x1f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x13ba, gbc.sp());
        EXPECT(0x11ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0223
        gbc.setState(0x44d7, 0xd330, 0x6e60, 0x1120, 0xf61b, 0xad10, 0x0, 0x1);
        gbc.writeMem(0x44d7, { 0xcb, 0x66 });
        gbc.writeMem(0xad10, { 0xfd });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd330, gbc.sp());
        EXPECT(0x44d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xad10));
        // CB 66 0224
        gbc.setState(0x42e, 0x63b2, 0x1d80, 0x7a01, 0x8cc7, 0x4ecc, 0x1, 0x0);
        gbc.writeMem(0x42e, { 0xcb, 0x66 });
        gbc.writeMem(0x4ecc, { 0x61 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x63b2, gbc.sp());
        EXPECT(0x430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0225
        gbc.setState(0xd6af, 0x34d4, 0xf3a0, 0x4317, 0x42ec, 0x2069, 0x1, 0x0);
        gbc.writeMem(0x2069, { 0xec });
        gbc.writeMem(0xd6af, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x34d4, gbc.sp());
        EXPECT(0xd6b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6af));
        EXPECT(0x66, gbc.readMem(0xd6b0));
        // CB 66 0227
        gbc.setState(0x4ba5, 0x28fa, 0x1c60, 0xf34c, 0xb361, 0x57bb, 0x1, 0x0);
        gbc.writeMem(0x4ba5, { 0xcb, 0x66 });
        gbc.writeMem(0x57bb, { 0x3e });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x28fa, gbc.sp());
        EXPECT(0x4ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0228
        gbc.setState(0x4db2, 0xc7f7, 0x31b0, 0xbbe9, 0xac0e, 0xec49, 0x0, 0x1);
        gbc.writeMem(0x4db2, { 0xcb, 0x66 });
        gbc.writeMem(0xec49, { 0x10 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc7f7, gbc.sp());
        EXPECT(0x4db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xec49));
        // CB 66 0229
        gbc.setState(0x5358, 0x55e2, 0xc060, 0xcef5, 0x1ca1, 0xee38, 0x1, 0x0);
        gbc.writeMem(0x5358, { 0xcb, 0x66 });
        gbc.writeMem(0xee38, { 0xc4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x55e2, gbc.sp());
        EXPECT(0x535a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xee38));
        // CB 66 022A
        gbc.setState(0xd388, 0xbc87, 0x5550, 0xb08, 0xe19e, 0x5f46, 0x1, 0x1);
        gbc.writeMem(0x5f46, { 0xbb });
        gbc.writeMem(0xd388, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbc87, gbc.sp());
        EXPECT(0xd38a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd388));
        EXPECT(0x66, gbc.readMem(0xd389));
        // CB 66 022B
        gbc.setState(0x3d48, 0x39c8, 0x1ea0, 0x651e, 0x75f9, 0x8da1, 0x1, 0x0);
        gbc.writeMem(0x3d48, { 0xcb, 0x66 });
        gbc.writeMem(0x8da1, { 0x27 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x39c8, gbc.sp());
        EXPECT(0x3d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8da1));
        // CB 66 022C
        gbc.setState(0x4c58, 0xd319, 0xe300, 0x2c61, 0xf243, 0x261a, 0x1, 0x1);
        gbc.writeMem(0x261a, { 0xc6 });
        gbc.writeMem(0x4c58, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd319, gbc.sp());
        EXPECT(0x4c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 022D
        gbc.setState(0xe819, 0x8d04, 0x2db0, 0xbc3c, 0x128d, 0xa155, 0x0, 0x0);
        gbc.writeMem(0xa155, { 0x5f });
        gbc.writeMem(0xe819, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8d04, gbc.sp());
        EXPECT(0xe81b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xa155));
        EXPECT(0xcb, gbc.readMem(0xe819));
        EXPECT(0x66, gbc.readMem(0xe81a));
        // CB 66 022E
        gbc.setState(0x1f7a, 0xc883, 0xc950, 0xa306, 0x2f42, 0x3fab, 0x0, 0x0);
        gbc.writeMem(0x1f7a, { 0xcb, 0x66 });
        gbc.writeMem(0x3fab, { 0xfd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc883, gbc.sp());
        EXPECT(0x1f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 022F
        gbc.setState(0x2cca, 0xaaf1, 0x67f0, 0xf303, 0xcc51, 0xea69, 0x1, 0x1);
        gbc.writeMem(0x2cca, { 0xcb, 0x66 });
        gbc.writeMem(0xea69, { 0xe9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xaaf1, gbc.sp());
        EXPECT(0x2ccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xea69));
        // CB 66 0230
        gbc.setState(0x9a6c, 0xae18, 0xea50, 0xacf2, 0x8435, 0x6811, 0x1, 0x0);
        gbc.writeMem(0x6811, { 0x0 });
        gbc.writeMem(0x9a6c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xae18, gbc.sp());
        EXPECT(0x9a6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a6c));
        EXPECT(0x66, gbc.readMem(0x9a6d));
        // CB 66 0231
        gbc.setState(0x1730, 0xa608, 0x7a40, 0x2313, 0x98b1, 0x95cc, 0x0, 0x1);
        gbc.writeMem(0x1730, { 0xcb, 0x66 });
        gbc.writeMem(0x95cc, { 0x26 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa608, gbc.sp());
        EXPECT(0x1732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x95cc));
        // CB 66 0232
        gbc.setState(0xac71, 0xd1a1, 0x43d0, 0x99ce, 0xb9b, 0xf48e, 0x0, 0x0);
        gbc.writeMem(0xac71, { 0xcb, 0x66 });
        gbc.writeMem(0xf48e, { 0x27 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd1a1, gbc.sp());
        EXPECT(0xac73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac71));
        EXPECT(0x66, gbc.readMem(0xac72));
        EXPECT(0x27, gbc.readMem(0xf48e));
        // CB 66 0233
        gbc.setState(0xc670, 0xc112, 0x6c90, 0xfe1a, 0x6332, 0xccdb, 0x0, 0x0);
        gbc.writeMem(0xc670, { 0xcb, 0x66 });
        gbc.writeMem(0xccdb, { 0x9b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc112, gbc.sp());
        EXPECT(0xc672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc670));
        EXPECT(0x66, gbc.readMem(0xc671));
        EXPECT(0x9b, gbc.readMem(0xccdb));
        // CB 66 0234
        gbc.setState(0x1769, 0xc242, 0x8fe0, 0x2236, 0xd7bb, 0x35ce, 0x0, 0x1);
        gbc.writeMem(0x1769, { 0xcb, 0x66 });
        gbc.writeMem(0x35ce, { 0x3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc242, gbc.sp());
        EXPECT(0x176b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0235
        gbc.setState(0xa3ad, 0x709f, 0xaa20, 0x3b18, 0xf6a7, 0xb394, 0x0, 0x0);
        gbc.writeMem(0xa3ad, { 0xcb, 0x66 });
        gbc.writeMem(0xb394, { 0xd6 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x709f, gbc.sp());
        EXPECT(0xa3af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ad));
        EXPECT(0x66, gbc.readMem(0xa3ae));
        EXPECT(0xd6, gbc.readMem(0xb394));
        // CB 66 0236
        gbc.setState(0x1a65, 0x4e73, 0x3d00, 0x5487, 0x1fd6, 0x39ea, 0x1, 0x1);
        gbc.writeMem(0x1a65, { 0xcb, 0x66 });
        gbc.writeMem(0x39ea, { 0x7f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4e73, gbc.sp());
        EXPECT(0x1a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0237
        gbc.setState(0x53ad, 0xd1df, 0x40f0, 0x9438, 0xc0eb, 0x6969, 0x0, 0x1);
        gbc.writeMem(0x53ad, { 0xcb, 0x66 });
        gbc.writeMem(0x6969, { 0x4e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd1df, gbc.sp());
        EXPECT(0x53af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0238
        gbc.setState(0x8a2f, 0x93a5, 0xfaf0, 0xdbd, 0xbda6, 0x1a41, 0x1, 0x1);
        gbc.writeMem(0x1a41, { 0x23 });
        gbc.writeMem(0x8a2f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x93a5, gbc.sp());
        EXPECT(0x8a31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a2f));
        EXPECT(0x66, gbc.readMem(0x8a30));
        // CB 66 0239
        gbc.setState(0x11a, 0xb374, 0xbfc0, 0x6071, 0xabf2, 0x3332, 0x1, 0x1);
        gbc.writeMem(0x11a, { 0xcb, 0x66 });
        gbc.writeMem(0x3332, { 0xef });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb374, gbc.sp());
        EXPECT(0x11c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 023A
        gbc.setState(0x5ae0, 0x7fa9, 0x1000, 0xe4ed, 0xc6df, 0xe5aa, 0x0, 0x0);
        gbc.writeMem(0x5ae0, { 0xcb, 0x66 });
        gbc.writeMem(0xe5aa, { 0x90 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7fa9, gbc.sp());
        EXPECT(0x5ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xe5aa));
        // CB 66 023B
        gbc.setState(0x43b5, 0x9fc1, 0x7870, 0x6e09, 0x9f34, 0x4703, 0x1, 0x1);
        gbc.writeMem(0x43b5, { 0xcb, 0x66 });
        gbc.writeMem(0x4703, { 0xa9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9fc1, gbc.sp());
        EXPECT(0x43b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 023C
        gbc.setState(0x52f4, 0xc365, 0x3dc0, 0x986d, 0x331b, 0x32e5, 0x0, 0x0);
        gbc.writeMem(0x32e5, { 0x7a });
        gbc.writeMem(0x52f4, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc365, gbc.sp());
        EXPECT(0x52f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 023D
        gbc.setState(0x9d6e, 0xfa29, 0xd5d0, 0xf59d, 0x9e77, 0x2b29, 0x0, 0x1);
        gbc.writeMem(0x2b29, { 0x82 });
        gbc.writeMem(0x9d6e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfa29, gbc.sp());
        EXPECT(0x9d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d6e));
        EXPECT(0x66, gbc.readMem(0x9d6f));
        // CB 66 023E
        gbc.setState(0x2489, 0x52f8, 0xaab0, 0xda5c, 0x645c, 0x3051, 0x1, 0x1);
        gbc.writeMem(0x2489, { 0xcb, 0x66 });
        gbc.writeMem(0x3051, { 0xa5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x52f8, gbc.sp());
        EXPECT(0x248b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 023F
        gbc.setState(0xd36a, 0xc26d, 0xbed0, 0x1fc8, 0xe426, 0x5ead, 0x1, 0x1);
        gbc.writeMem(0x5ead, { 0x20 });
        gbc.writeMem(0xd36a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc26d, gbc.sp());
        EXPECT(0xd36c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd36a));
        EXPECT(0x66, gbc.readMem(0xd36b));
        // CB 66 0240
        gbc.setState(0xb055, 0x7e8d, 0x42b0, 0xce64, 0xb4cf, 0x6ab8, 0x1, 0x0);
        gbc.writeMem(0x6ab8, { 0xd7 });
        gbc.writeMem(0xb055, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7e8d, gbc.sp());
        EXPECT(0xb057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb055));
        EXPECT(0x66, gbc.readMem(0xb056));
        // CB 66 0241
        gbc.setState(0x2238, 0x2c4f, 0x3d80, 0xc898, 0x4854, 0x4619, 0x1, 0x1);
        gbc.writeMem(0x2238, { 0xcb, 0x66 });
        gbc.writeMem(0x4619, { 0xb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2c4f, gbc.sp());
        EXPECT(0x223a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0242
        gbc.setState(0x36d8, 0x6612, 0x8140, 0x46fa, 0x306f, 0x6857, 0x1, 0x1);
        gbc.writeMem(0x36d8, { 0xcb, 0x66 });
        gbc.writeMem(0x6857, { 0xba });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6612, gbc.sp());
        EXPECT(0x36da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0243
        gbc.setState(0xb6d4, 0xc0ea, 0x8a0, 0x2038, 0x3748, 0x991d, 0x0, 0x1);
        gbc.writeMem(0x991d, { 0xf8 });
        gbc.writeMem(0xb6d4, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc0ea, gbc.sp());
        EXPECT(0xb6d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x991d));
        EXPECT(0xcb, gbc.readMem(0xb6d4));
        EXPECT(0x66, gbc.readMem(0xb6d5));
        // CB 66 0244
        gbc.setState(0xa140, 0x3ef6, 0x4c90, 0xabbe, 0x1c, 0xa298, 0x1, 0x1);
        gbc.writeMem(0xa140, { 0xcb, 0x66 });
        gbc.writeMem(0xa298, { 0x46 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3ef6, gbc.sp());
        EXPECT(0xa142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa140));
        EXPECT(0x66, gbc.readMem(0xa141));
        EXPECT(0x46, gbc.readMem(0xa298));
        // CB 66 0245
        gbc.setState(0x2f9e, 0x5ad0, 0x4920, 0x7948, 0xf3c0, 0xbd15, 0x1, 0x0);
        gbc.writeMem(0x2f9e, { 0xcb, 0x66 });
        gbc.writeMem(0xbd15, { 0x37 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5ad0, gbc.sp());
        EXPECT(0x2fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbd15));
        // CB 66 0246
        gbc.setState(0xb13f, 0xd299, 0xe1b0, 0x8e68, 0xeb9, 0xd066, 0x0, 0x1);
        gbc.writeMem(0xb13f, { 0xcb, 0x66 });
        gbc.writeMem(0xd066, { 0x72 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd299, gbc.sp());
        EXPECT(0xb141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb13f));
        EXPECT(0x66, gbc.readMem(0xb140));
        EXPECT(0x72, gbc.readMem(0xd066));
        // CB 66 0247
        gbc.setState(0x5161, 0x2523, 0x5c60, 0xa0a9, 0xf616, 0xf6b2, 0x0, 0x1);
        gbc.writeMem(0x5161, { 0xcb, 0x66 });
        gbc.writeMem(0xf6b2, { 0xb9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2523, gbc.sp());
        EXPECT(0x5163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xf6b2));
        // CB 66 0248
        gbc.setState(0x50bb, 0xa04d, 0x2bd0, 0x8dcf, 0x6fe0, 0xcdba, 0x0, 0x1);
        gbc.writeMem(0x50bb, { 0xcb, 0x66 });
        gbc.writeMem(0xcdba, { 0xfe });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa04d, gbc.sp());
        EXPECT(0x50bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xcdba));
        // CB 66 0249
        gbc.setState(0x53b7, 0x4fd, 0xbe60, 0x9e79, 0xbccd, 0x5333, 0x1, 0x1);
        gbc.writeMem(0x5333, { 0x68 });
        gbc.writeMem(0x53b7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4fd, gbc.sp());
        EXPECT(0x53b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 024A
        gbc.setState(0x683e, 0x9e63, 0xa6b0, 0xe1d, 0xea08, 0xe375, 0x0, 0x0);
        gbc.writeMem(0x683e, { 0xcb, 0x66 });
        gbc.writeMem(0xe375, { 0xe6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9e63, gbc.sp());
        EXPECT(0x6840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe375));
        // CB 66 024B
        gbc.setState(0x61f1, 0xa8e7, 0xde90, 0x8575, 0x2c39, 0x618f, 0x1, 0x0);
        gbc.writeMem(0x618f, { 0x88 });
        gbc.writeMem(0x61f1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa8e7, gbc.sp());
        EXPECT(0x61f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 024C
        gbc.setState(0xa8bf, 0x876e, 0x6390, 0xefe6, 0x9316, 0xbebf, 0x0, 0x1);
        gbc.writeMem(0xa8bf, { 0xcb, 0x66 });
        gbc.writeMem(0xbebf, { 0x23 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x876e, gbc.sp());
        EXPECT(0xa8c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8bf));
        EXPECT(0x66, gbc.readMem(0xa8c0));
        EXPECT(0x23, gbc.readMem(0xbebf));
        // CB 66 024D
        gbc.setState(0x33e4, 0xe180, 0xb450, 0xedf7, 0x4206, 0xed50, 0x1, 0x1);
        gbc.writeMem(0x33e4, { 0xcb, 0x66 });
        gbc.writeMem(0xed50, { 0xa5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe180, gbc.sp());
        EXPECT(0x33e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xed50));
        // CB 66 024E
        gbc.setState(0x1460, 0x99f5, 0xb1f0, 0x897c, 0xfbbe, 0x3fee, 0x1, 0x1);
        gbc.writeMem(0x1460, { 0xcb, 0x66 });
        gbc.writeMem(0x3fee, { 0xc0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x99f5, gbc.sp());
        EXPECT(0x1462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 024F
        gbc.setState(0x98c9, 0x8375, 0x3980, 0x9384, 0x1908, 0x19fe, 0x1, 0x1);
        gbc.writeMem(0x19fe, { 0x13 });
        gbc.writeMem(0x98c9, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8375, gbc.sp());
        EXPECT(0x98cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c9));
        EXPECT(0x66, gbc.readMem(0x98ca));
        // CB 66 0250
        gbc.setState(0xd3c2, 0xc4b, 0xc660, 0x4826, 0xb0ea, 0xa09a, 0x0, 0x0);
        gbc.writeMem(0xa09a, { 0xa5 });
        gbc.writeMem(0xd3c2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc4b, gbc.sp());
        EXPECT(0xd3c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xa09a));
        EXPECT(0xcb, gbc.readMem(0xd3c2));
        EXPECT(0x66, gbc.readMem(0xd3c3));
        // CB 66 0252
        gbc.setState(0xf0b, 0xfb0, 0xdd50, 0x9482, 0xe0b, 0xa4b7, 0x0, 0x1);
        gbc.writeMem(0xf0b, { 0xcb, 0x66 });
        gbc.writeMem(0xa4b7, { 0xf4 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xfb0, gbc.sp());
        EXPECT(0xf0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xa4b7));
        // CB 66 0253
        gbc.setState(0x5f06, 0x980c, 0xe0f0, 0x23cd, 0x249f, 0xf10c, 0x1, 0x1);
        gbc.writeMem(0x5f06, { 0xcb, 0x66 });
        gbc.writeMem(0xf10c, { 0xbe });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x980c, gbc.sp());
        EXPECT(0x5f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xf10c));
        // CB 66 0254
        gbc.setState(0x88c3, 0xf0e6, 0x1330, 0x682, 0xa513, 0x735d, 0x1, 0x0);
        gbc.writeMem(0x735d, { 0x51 });
        gbc.writeMem(0x88c3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf0e6, gbc.sp());
        EXPECT(0x88c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c3));
        EXPECT(0x66, gbc.readMem(0x88c4));
        // CB 66 0255
        gbc.setState(0x8267, 0x9858, 0xd580, 0x1155, 0x736e, 0x9303, 0x0, 0x1);
        gbc.writeMem(0x8267, { 0xcb, 0x66 });
        gbc.writeMem(0x9303, { 0x3e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9858, gbc.sp());
        EXPECT(0x8269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8267));
        EXPECT(0x66, gbc.readMem(0x8268));
        EXPECT(0x3e, gbc.readMem(0x9303));
        // CB 66 0256
        gbc.setState(0x6630, 0x4f12, 0xd370, 0x506e, 0x60f9, 0x5040, 0x0, 0x0);
        gbc.writeMem(0x5040, { 0x98 });
        gbc.writeMem(0x6630, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4f12, gbc.sp());
        EXPECT(0x6632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0257
        gbc.setState(0x6733, 0xadc4, 0x6d70, 0xf517, 0x344, 0xc357, 0x1, 0x0);
        gbc.writeMem(0x6733, { 0xcb, 0x66 });
        gbc.writeMem(0xc357, { 0x4a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xadc4, gbc.sp());
        EXPECT(0x6735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xc357));
        // CB 66 0258
        gbc.setState(0xce9d, 0x5959, 0x17c0, 0x1615, 0xdad9, 0x3fc9, 0x0, 0x1);
        gbc.writeMem(0x3fc9, { 0x72 });
        gbc.writeMem(0xce9d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5959, gbc.sp());
        EXPECT(0xce9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce9d));
        EXPECT(0x66, gbc.readMem(0xce9e));
        // CB 66 0259
        gbc.setState(0xa6b4, 0x77ba, 0x89e0, 0x8d4e, 0x5ef5, 0xc810, 0x0, 0x1);
        gbc.writeMem(0xa6b4, { 0xcb, 0x66 });
        gbc.writeMem(0xc810, { 0x6f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x77ba, gbc.sp());
        EXPECT(0xa6b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b4));
        EXPECT(0x66, gbc.readMem(0xa6b5));
        EXPECT(0x6f, gbc.readMem(0xc810));
        // CB 66 025A
        gbc.setState(0x2253, 0xa061, 0x4130, 0x27e5, 0x4523, 0x617, 0x0, 0x0);
        gbc.writeMem(0x617, { 0x1b });
        gbc.writeMem(0x2253, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa061, gbc.sp());
        EXPECT(0x2255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 025B
        gbc.setState(0x2c40, 0xa2ad, 0x8910, 0x62a0, 0x53fd, 0x8a80, 0x0, 0x1);
        gbc.writeMem(0x2c40, { 0xcb, 0x66 });
        gbc.writeMem(0x8a80, { 0x9a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa2ad, gbc.sp());
        EXPECT(0x2c42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8a80));
        // CB 66 025C
        gbc.setState(0x454f, 0x6cc, 0x9080, 0x3383, 0xe061, 0x90ab, 0x1, 0x0);
        gbc.writeMem(0x454f, { 0xcb, 0x66 });
        gbc.writeMem(0x90ab, { 0x59 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6cc, gbc.sp());
        EXPECT(0x4551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x90ab));
        // CB 66 025D
        gbc.setState(0x8f90, 0x3038, 0x5390, 0x9523, 0x99a2, 0x8538, 0x0, 0x0);
        gbc.writeMem(0x8538, { 0xdb });
        gbc.writeMem(0x8f90, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3038, gbc.sp());
        EXPECT(0x8f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x8538));
        EXPECT(0xcb, gbc.readMem(0x8f90));
        EXPECT(0x66, gbc.readMem(0x8f91));
        // CB 66 025E
        gbc.setState(0xddd6, 0x7cab, 0x82f0, 0x45, 0xd533, 0x1360, 0x1, 0x0);
        gbc.writeMem(0x1360, { 0xfc });
        gbc.writeMem(0xddd6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7cab, gbc.sp());
        EXPECT(0xddd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddd6));
        EXPECT(0x66, gbc.readMem(0xddd7));
        // CB 66 025F
        gbc.setState(0x8f3, 0x6c3f, 0x2e00, 0xb3d, 0x800, 0xb909, 0x0, 0x1);
        gbc.writeMem(0x8f3, { 0xcb, 0x66 });
        gbc.writeMem(0xb909, { 0xea });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6c3f, gbc.sp());
        EXPECT(0x8f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xb909));
        // CB 66 0260
        gbc.setState(0xc542, 0x3baf, 0xb060, 0x4d01, 0x3ca4, 0x8f7c, 0x0, 0x1);
        gbc.writeMem(0x8f7c, { 0x6 });
        gbc.writeMem(0xc542, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3baf, gbc.sp());
        EXPECT(0xc544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8f7c));
        EXPECT(0xcb, gbc.readMem(0xc542));
        EXPECT(0x66, gbc.readMem(0xc543));
        // CB 66 0261
        gbc.setState(0x5f3c, 0x7427, 0x3ea0, 0xd488, 0xdd8a, 0xfb8e, 0x0, 0x0);
        gbc.writeMem(0x5f3c, { 0xcb, 0x66 });
        gbc.writeMem(0xfb8e, { 0xd0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7427, gbc.sp());
        EXPECT(0x5f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xfb8e));
        // CB 66 0262
        gbc.setState(0x2c6b, 0xe844, 0x8890, 0x2a41, 0xdc0b, 0x3787, 0x1, 0x0);
        gbc.writeMem(0x2c6b, { 0xcb, 0x66 });
        gbc.writeMem(0x3787, { 0x1f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe844, gbc.sp());
        EXPECT(0x2c6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0263
        gbc.setState(0xb153, 0x845f, 0x4980, 0xafa5, 0x793f, 0xa665, 0x0, 0x0);
        gbc.writeMem(0xa665, { 0x86 });
        gbc.writeMem(0xb153, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x845f, gbc.sp());
        EXPECT(0xb155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa665));
        EXPECT(0xcb, gbc.readMem(0xb153));
        EXPECT(0x66, gbc.readMem(0xb154));
        // CB 66 0264
        gbc.setState(0xebc7, 0xb53d, 0xf730, 0x8d73, 0x967f, 0x8683, 0x0, 0x1);
        gbc.writeMem(0x8683, { 0x81 });
        gbc.writeMem(0xebc7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb53d, gbc.sp());
        EXPECT(0xebc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8683));
        EXPECT(0xcb, gbc.readMem(0xebc7));
        EXPECT(0x66, gbc.readMem(0xebc8));
        // CB 66 0265
        gbc.setState(0xb063, 0xd399, 0x3410, 0xda3e, 0x1a17, 0xdcb2, 0x0, 0x0);
        gbc.writeMem(0xb063, { 0xcb, 0x66 });
        gbc.writeMem(0xdcb2, { 0x4f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd399, gbc.sp());
        EXPECT(0xb065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb063));
        EXPECT(0x66, gbc.readMem(0xb064));
        EXPECT(0x4f, gbc.readMem(0xdcb2));
        // CB 66 0266
        gbc.setState(0x2931, 0xb23e, 0x5dc0, 0xac74, 0xbf73, 0xc071, 0x1, 0x1);
        gbc.writeMem(0x2931, { 0xcb, 0x66 });
        gbc.writeMem(0xc071, { 0x5d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb23e, gbc.sp());
        EXPECT(0x2933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc071));
        // CB 66 0267
        gbc.setState(0x61bb, 0x2a83, 0x5c50, 0x782, 0x125, 0xc0e6, 0x1, 0x0);
        gbc.writeMem(0x61bb, { 0xcb, 0x66 });
        gbc.writeMem(0xc0e6, { 0x2f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2a83, gbc.sp());
        EXPECT(0x61bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc0e6));
        // CB 66 0268
        gbc.setState(0x58e8, 0x4fd9, 0x16d0, 0xc0ad, 0x19e6, 0x8329, 0x1, 0x0);
        gbc.writeMem(0x58e8, { 0xcb, 0x66 });
        gbc.writeMem(0x8329, { 0xd1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4fd9, gbc.sp());
        EXPECT(0x58ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0x8329));
        // CB 66 0269
        gbc.setState(0x5a8d, 0xbdb8, 0x7c70, 0x5452, 0x9cb8, 0x2d73, 0x1, 0x0);
        gbc.writeMem(0x2d73, { 0xc });
        gbc.writeMem(0x5a8d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xbdb8, gbc.sp());
        EXPECT(0x5a8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 026A
        gbc.setState(0x1d59, 0x31d1, 0x7300, 0x466b, 0x2a09, 0xbf3f, 0x1, 0x0);
        gbc.writeMem(0x1d59, { 0xcb, 0x66 });
        gbc.writeMem(0xbf3f, { 0x31 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x31d1, gbc.sp());
        EXPECT(0x1d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbf3f));
        // CB 66 026B
        gbc.setState(0x448, 0x9abb, 0x11a0, 0x5dd3, 0x19fd, 0x7cb3, 0x0, 0x0);
        gbc.writeMem(0x448, { 0xcb, 0x66 });
        gbc.writeMem(0x7cb3, { 0x38 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9abb, gbc.sp());
        EXPECT(0x44a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 026C
        gbc.setState(0x267b, 0x4b22, 0xd950, 0x3654, 0xd59b, 0x94ca, 0x0, 0x0);
        gbc.writeMem(0x267b, { 0xcb, 0x66 });
        gbc.writeMem(0x94ca, { 0x1e });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4b22, gbc.sp());
        EXPECT(0x267d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x94ca));
        // CB 66 026E
        gbc.setState(0xd67c, 0x976, 0xc7b0, 0x878a, 0xbab5, 0xd3fd, 0x0, 0x0);
        gbc.writeMem(0xd3fd, { 0x50 });
        gbc.writeMem(0xd67c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x976, gbc.sp());
        EXPECT(0xd67e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd3fd));
        EXPECT(0xcb, gbc.readMem(0xd67c));
        EXPECT(0x66, gbc.readMem(0xd67d));
        // CB 66 026F
        gbc.setState(0x88fd, 0xf7ac, 0x4190, 0x4c50, 0x47ba, 0xacdd, 0x0, 0x0);
        gbc.writeMem(0x88fd, { 0xcb, 0x66 });
        gbc.writeMem(0xacdd, { 0x23 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf7ac, gbc.sp());
        EXPECT(0x88ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88fd));
        EXPECT(0x66, gbc.readMem(0x88fe));
        EXPECT(0x23, gbc.readMem(0xacdd));
        // CB 66 0270
        gbc.setState(0x494f, 0xfbc7, 0x7c0, 0x8ea9, 0x8470, 0x5eab, 0x0, 0x0);
        gbc.writeMem(0x494f, { 0xcb, 0x66 });
        gbc.writeMem(0x5eab, { 0x26 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfbc7, gbc.sp());
        EXPECT(0x4951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0271
        gbc.setState(0x6f7a, 0xc07e, 0xd660, 0x6c93, 0x1dc1, 0x53f, 0x1, 0x1);
        gbc.writeMem(0x53f, { 0xb3 });
        gbc.writeMem(0x6f7a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc07e, gbc.sp());
        EXPECT(0x6f7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0272
        gbc.setState(0x98a4, 0x7230, 0xae00, 0x1376, 0x5c0b, 0x8e67, 0x0, 0x1);
        gbc.writeMem(0x8e67, { 0x79 });
        gbc.writeMem(0x98a4, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7230, gbc.sp());
        EXPECT(0x98a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8e67));
        EXPECT(0xcb, gbc.readMem(0x98a4));
        EXPECT(0x66, gbc.readMem(0x98a5));
        // CB 66 0273
        gbc.setState(0x1b7d, 0x3117, 0xc820, 0xcca1, 0xf437, 0xc16f, 0x1, 0x1);
        gbc.writeMem(0x1b7d, { 0xcb, 0x66 });
        gbc.writeMem(0xc16f, { 0xfa });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3117, gbc.sp());
        EXPECT(0x1b7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc16f));
        // CB 66 0274
        gbc.setState(0xc526, 0x34c3, 0x380, 0xcbd4, 0x99de, 0x5bed, 0x1, 0x1);
        gbc.writeMem(0x5bed, { 0x28 });
        gbc.writeMem(0xc526, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x34c3, gbc.sp());
        EXPECT(0xc528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc526));
        EXPECT(0x66, gbc.readMem(0xc527));
        // CB 66 0275
        gbc.setState(0x4dd2, 0x7242, 0xc110, 0xf6a, 0xc622, 0x56de, 0x1, 0x0);
        gbc.writeMem(0x4dd2, { 0xcb, 0x66 });
        gbc.writeMem(0x56de, { 0xc9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7242, gbc.sp());
        EXPECT(0x4dd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0276
        gbc.setState(0x1b31, 0xf86f, 0xa570, 0x6fde, 0x2c0b, 0x30d, 0x1, 0x0);
        gbc.writeMem(0x30d, { 0x32 });
        gbc.writeMem(0x1b31, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf86f, gbc.sp());
        EXPECT(0x1b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0277
        gbc.setState(0xba0d, 0xf499, 0x9610, 0xe206, 0x7fb5, 0xc2b7, 0x0, 0x0);
        gbc.writeMem(0xba0d, { 0xcb, 0x66 });
        gbc.writeMem(0xc2b7, { 0x66 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf499, gbc.sp());
        EXPECT(0xba0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba0d));
        EXPECT(0x66, gbc.readMem(0xba0e));
        EXPECT(0x66, gbc.readMem(0xc2b7));
        // CB 66 0278
        gbc.setState(0xd41, 0x75b6, 0x4400, 0xfafa, 0x92b0, 0xd721, 0x0, 0x1);
        gbc.writeMem(0xd41, { 0xcb, 0x66 });
        gbc.writeMem(0xd721, { 0x83 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x75b6, gbc.sp());
        EXPECT(0xd43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xd721));
        // CB 66 0279
        gbc.setState(0x9b0c, 0xca10, 0x3e30, 0x1b0d, 0xc41c, 0x736f, 0x0, 0x0);
        gbc.writeMem(0x736f, { 0xf3 });
        gbc.writeMem(0x9b0c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xca10, gbc.sp());
        EXPECT(0x9b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b0c));
        EXPECT(0x66, gbc.readMem(0x9b0d));
        // CB 66 027A
        gbc.setState(0x67e2, 0x9cf8, 0xd750, 0x1f77, 0xaae6, 0x90d1, 0x0, 0x1);
        gbc.writeMem(0x67e2, { 0xcb, 0x66 });
        gbc.writeMem(0x90d1, { 0xed });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9cf8, gbc.sp());
        EXPECT(0x67e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x90d1));
        // CB 66 027B
        gbc.setState(0x98da, 0x36ad, 0xd330, 0x5483, 0xa976, 0x7098, 0x1, 0x0);
        gbc.writeMem(0x7098, { 0xe9 });
        gbc.writeMem(0x98da, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x36ad, gbc.sp());
        EXPECT(0x98dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98da));
        EXPECT(0x66, gbc.readMem(0x98db));
        // CB 66 027C
        gbc.setState(0x131c, 0x7f4f, 0x8b20, 0xb976, 0x8a4, 0x728c, 0x0, 0x0);
        gbc.writeMem(0x131c, { 0xcb, 0x66 });
        gbc.writeMem(0x728c, { 0xf0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7f4f, gbc.sp());
        EXPECT(0x131e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 027D
        gbc.setState(0x37d9, 0x35bb, 0xe0f0, 0xf988, 0xd8f7, 0x9e53, 0x1, 0x1);
        gbc.writeMem(0x37d9, { 0xcb, 0x66 });
        gbc.writeMem(0x9e53, { 0xb1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x35bb, gbc.sp());
        EXPECT(0x37db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x9e53));
        // CB 66 027E
        gbc.setState(0x6bb3, 0xedd1, 0x43a0, 0x427, 0x5b00, 0x3b51, 0x1, 0x0);
        gbc.writeMem(0x3b51, { 0xf1 });
        gbc.writeMem(0x6bb3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xedd1, gbc.sp());
        EXPECT(0x6bb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 027F
        gbc.setState(0x2f15, 0xfb89, 0x35e0, 0xafc6, 0x24fa, 0xd326, 0x0, 0x1);
        gbc.writeMem(0x2f15, { 0xcb, 0x66 });
        gbc.writeMem(0xd326, { 0xad });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xfb89, gbc.sp());
        EXPECT(0x2f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xd326));
        // CB 66 0280
        gbc.setState(0x70fc, 0x1cf8, 0x8e10, 0xebf7, 0x441b, 0xedac, 0x0, 0x0);
        gbc.writeMem(0x70fc, { 0xcb, 0x66 });
        gbc.writeMem(0xedac, { 0xd5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1cf8, gbc.sp());
        EXPECT(0x70fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xedac));
        // CB 66 0281
        gbc.setState(0xc520, 0xf9b, 0xfe90, 0x9fbf, 0x5caf, 0x8098, 0x0, 0x1);
        gbc.writeMem(0x8098, { 0x76 });
        gbc.writeMem(0xc520, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf9b, gbc.sp());
        EXPECT(0xc522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8098));
        EXPECT(0xcb, gbc.readMem(0xc520));
        EXPECT(0x66, gbc.readMem(0xc521));
        // CB 66 0282
        gbc.setState(0x428b, 0x6bd1, 0x99f0, 0xe15e, 0x66f5, 0x2583, 0x1, 0x1);
        gbc.writeMem(0x2583, { 0xb2 });
        gbc.writeMem(0x428b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6bd1, gbc.sp());
        EXPECT(0x428d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0283
        gbc.setState(0xddf5, 0x6baf, 0x1100, 0x590f, 0x292b, 0x3b1a, 0x1, 0x1);
        gbc.writeMem(0x3b1a, { 0xaa });
        gbc.writeMem(0xddf5, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6baf, gbc.sp());
        EXPECT(0xddf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddf5));
        EXPECT(0x66, gbc.readMem(0xddf6));
        // CB 66 0284
        gbc.setState(0x75d7, 0xa24, 0x4130, 0xf9d8, 0xaecc, 0x26ee, 0x0, 0x1);
        gbc.writeMem(0x26ee, { 0xd });
        gbc.writeMem(0x75d7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa24, gbc.sp());
        EXPECT(0x75d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0285
        gbc.setState(0xabfa, 0xa0a0, 0x32c0, 0xcf99, 0x4992, 0xc62, 0x0, 0x1);
        gbc.writeMem(0xc62, { 0x82 });
        gbc.writeMem(0xabfa, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa0a0, gbc.sp());
        EXPECT(0xabfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabfa));
        EXPECT(0x66, gbc.readMem(0xabfb));
        // CB 66 0286
        gbc.setState(0x67b2, 0x4b79, 0x5910, 0x530f, 0xb3ea, 0x7f58, 0x1, 0x0);
        gbc.writeMem(0x67b2, { 0xcb, 0x66 });
        gbc.writeMem(0x7f58, { 0x94 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4b79, gbc.sp());
        EXPECT(0x67b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0287
        gbc.setState(0x40b1, 0x6dbb, 0x4350, 0xb3d0, 0xb0f9, 0xa07a, 0x0, 0x1);
        gbc.writeMem(0x40b1, { 0xcb, 0x66 });
        gbc.writeMem(0xa07a, { 0xa7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6dbb, gbc.sp());
        EXPECT(0x40b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa07a));
        // CB 66 0288
        gbc.setState(0x3fff, 0x399c, 0x12a0, 0xaeea, 0xa1ce, 0x85eb, 0x1, 0x1);
        gbc.writeMem(0x3fff, { 0xcb, 0x66 });
        gbc.writeMem(0x85eb, { 0x98 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x399c, gbc.sp());
        EXPECT(0x4001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x85eb));
        // CB 66 0289
        gbc.setState(0xdc1c, 0xa425, 0xdc40, 0x471f, 0xf6e1, 0xfe35, 0x1, 0x0);
        gbc.writeMem(0xdc1c, { 0xcb, 0x66 });
        gbc.writeMem(0xfe35, { 0x12 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa425, gbc.sp());
        EXPECT(0xdc1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc1c));
        EXPECT(0x66, gbc.readMem(0xdc1d));
        EXPECT(0x12, gbc.readMem(0xfe35));
        // CB 66 028A
        gbc.setState(0xe399, 0x8fec, 0xb810, 0x391f, 0x871f, 0x5b8b, 0x1, 0x0);
        gbc.writeMem(0x5b8b, { 0x8b });
        gbc.writeMem(0xe399, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8fec, gbc.sp());
        EXPECT(0xe39b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe399));
        EXPECT(0x66, gbc.readMem(0xe39a));
        // CB 66 028C
        gbc.setState(0x29dd, 0x224e, 0x3320, 0x5dc2, 0xbeb7, 0x3d50, 0x1, 0x0);
        gbc.writeMem(0x29dd, { 0xcb, 0x66 });
        gbc.writeMem(0x3d50, { 0x64 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x224e, gbc.sp());
        EXPECT(0x29df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 028D
        gbc.setState(0x8fc, 0x5def, 0x8420, 0x3fa9, 0xa97, 0xab13, 0x1, 0x1);
        gbc.writeMem(0x8fc, { 0xcb, 0x66 });
        gbc.writeMem(0xab13, { 0x3b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5def, gbc.sp());
        EXPECT(0x8fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xab13));
        // CB 66 028E
        gbc.setState(0x498b, 0xf798, 0xe620, 0x64e8, 0x40ed, 0xfd68, 0x1, 0x1);
        gbc.writeMem(0x498b, { 0xcb, 0x66 });
        gbc.writeMem(0xfd68, { 0xfe });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf798, gbc.sp());
        EXPECT(0x498d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xfd68));
        // CB 66 0290
        gbc.setState(0x1081, 0x90f7, 0x7ad0, 0x64ba, 0x96a8, 0x3772, 0x0, 0x1);
        gbc.writeMem(0x1081, { 0xcb, 0x66 });
        gbc.writeMem(0x3772, { 0x67 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x90f7, gbc.sp());
        EXPECT(0x1083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0291
        gbc.setState(0x113f, 0x4c75, 0x1290, 0x4cac, 0x8bec, 0x361, 0x1, 0x0);
        gbc.writeMem(0x361, { 0xac });
        gbc.writeMem(0x113f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4c75, gbc.sp());
        EXPECT(0x1141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0292
        gbc.setState(0x19b0, 0xdf6f, 0x5170, 0x78f3, 0x3e73, 0x31e3, 0x1, 0x0);
        gbc.writeMem(0x19b0, { 0xcb, 0x66 });
        gbc.writeMem(0x31e3, { 0x5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xdf6f, gbc.sp());
        EXPECT(0x19b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0293
        gbc.setState(0x863a, 0x81ce, 0x2020, 0x87dd, 0xa4eb, 0xa250, 0x1, 0x0);
        gbc.writeMem(0x863a, { 0xcb, 0x66 });
        gbc.writeMem(0xa250, { 0x61 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x81ce, gbc.sp());
        EXPECT(0x863c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x863a));
        EXPECT(0x66, gbc.readMem(0x863b));
        EXPECT(0x61, gbc.readMem(0xa250));
        // CB 66 0294
        gbc.setState(0xd88c, 0xc523, 0x23c0, 0x83b8, 0x308b, 0x7411, 0x0, 0x1);
        gbc.writeMem(0x7411, { 0x9a });
        gbc.writeMem(0xd88c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc523, gbc.sp());
        EXPECT(0xd88e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd88c));
        EXPECT(0x66, gbc.readMem(0xd88d));
        // CB 66 0295
        gbc.setState(0xe15, 0x9dd2, 0xe3e0, 0x5652, 0x570f, 0xe8fd, 0x1, 0x0);
        gbc.writeMem(0xe15, { 0xcb, 0x66 });
        gbc.writeMem(0xe8fd, { 0xb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9dd2, gbc.sp());
        EXPECT(0xe17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe8fd));
        // CB 66 0296
        gbc.setState(0x6049, 0x613e, 0xfd00, 0xf70d, 0x7fd8, 0x3958, 0x0, 0x0);
        gbc.writeMem(0x3958, { 0x1d });
        gbc.writeMem(0x6049, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x613e, gbc.sp());
        EXPECT(0x604b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0297
        gbc.setState(0xee4e, 0xea5f, 0xa3e0, 0x6754, 0x38b7, 0xa7c, 0x0, 0x0);
        gbc.writeMem(0xa7c, { 0x58 });
        gbc.writeMem(0xee4e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xea5f, gbc.sp());
        EXPECT(0xee50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee4e));
        EXPECT(0x66, gbc.readMem(0xee4f));
        // CB 66 0298
        gbc.setState(0xe79d, 0x411, 0x910, 0xd412, 0xc94, 0x7938, 0x0, 0x0);
        gbc.writeMem(0x7938, { 0x84 });
        gbc.writeMem(0xe79d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x411, gbc.sp());
        EXPECT(0xe79f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe79d));
        EXPECT(0x66, gbc.readMem(0xe79e));
        // CB 66 0299
        gbc.setState(0x484e, 0xf141, 0x9cc0, 0x7930, 0x4174, 0x454e, 0x1, 0x1);
        gbc.writeMem(0x454e, { 0xaa });
        gbc.writeMem(0x484e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf141, gbc.sp());
        EXPECT(0x4850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 029A
        gbc.setState(0x3663, 0x503, 0xdf00, 0x1645, 0x7592, 0x796a, 0x1, 0x1);
        gbc.writeMem(0x3663, { 0xcb, 0x66 });
        gbc.writeMem(0x796a, { 0x4a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x503, gbc.sp());
        EXPECT(0x3665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 029B
        gbc.setState(0x4474, 0xe3ed, 0x2ba0, 0x934b, 0x989a, 0x2972, 0x0, 0x0);
        gbc.writeMem(0x2972, { 0x2 });
        gbc.writeMem(0x4474, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe3ed, gbc.sp());
        EXPECT(0x4476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 029C
        gbc.setState(0xbf08, 0xdb24, 0xfad0, 0x3e7, 0xe908, 0x9c9e, 0x0, 0x0);
        gbc.writeMem(0x9c9e, { 0x21 });
        gbc.writeMem(0xbf08, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xdb24, gbc.sp());
        EXPECT(0xbf0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9c9e));
        EXPECT(0xcb, gbc.readMem(0xbf08));
        EXPECT(0x66, gbc.readMem(0xbf09));
        // CB 66 029D
        gbc.setState(0x3c4b, 0x23a1, 0x1c50, 0x3f82, 0xd2b4, 0x3582, 0x1, 0x1);
        gbc.writeMem(0x3582, { 0xd5 });
        gbc.writeMem(0x3c4b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x23a1, gbc.sp());
        EXPECT(0x3c4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 029E
        gbc.setState(0x8357, 0x9194, 0x2d90, 0x535c, 0xdffe, 0x9d1, 0x0, 0x0);
        gbc.writeMem(0x9d1, { 0x9a });
        gbc.writeMem(0x8357, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9194, gbc.sp());
        EXPECT(0x8359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8357));
        EXPECT(0x66, gbc.readMem(0x8358));
        // CB 66 029F
        gbc.setState(0x56d9, 0x872d, 0xf390, 0x88e7, 0xc154, 0x42e6, 0x1, 0x1);
        gbc.writeMem(0x42e6, { 0x5e });
        gbc.writeMem(0x56d9, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x872d, gbc.sp());
        EXPECT(0x56db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 02A0
        gbc.setState(0x5da3, 0x8a63, 0xe230, 0xede7, 0x9d0f, 0x97b0, 0x0, 0x1);
        gbc.writeMem(0x5da3, { 0xcb, 0x66 });
        gbc.writeMem(0x97b0, { 0xc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8a63, gbc.sp());
        EXPECT(0x5da5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x97b0));
        // CB 66 02A1
        gbc.setState(0xc6fb, 0x2abb, 0x67a0, 0x1b12, 0xd8f2, 0x5657, 0x1, 0x1);
        gbc.writeMem(0x5657, { 0x15 });
        gbc.writeMem(0xc6fb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2abb, gbc.sp());
        EXPECT(0xc6fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6fb));
        EXPECT(0x66, gbc.readMem(0xc6fc));
        // CB 66 02A2
        gbc.setState(0x2615, 0xa23d, 0x59a0, 0x525e, 0x93c3, 0x962, 0x1, 0x0);
        gbc.writeMem(0x962, { 0x59 });
        gbc.writeMem(0x2615, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa23d, gbc.sp());
        EXPECT(0x2617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 02A3
        gbc.setState(0x1605, 0x7bc, 0x9bd0, 0x2f3d, 0x7582, 0x467b, 0x0, 0x0);
        gbc.writeMem(0x1605, { 0xcb, 0x66 });
        gbc.writeMem(0x467b, { 0xac });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7bc, gbc.sp());
        EXPECT(0x1607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 02A4
        gbc.setState(0x24ec, 0xbf8f, 0x80c0, 0x48f0, 0x46fe, 0x2456, 0x1, 0x1);
        gbc.writeMem(0x2456, { 0x83 });
        gbc.writeMem(0x24ec, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbf8f, gbc.sp());
        EXPECT(0x24ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 02A5
        gbc.setState(0x3daa, 0x27d9, 0x6ef0, 0xc119, 0xd11d, 0xa34b, 0x0, 0x1);
        gbc.writeMem(0x3daa, { 0xcb, 0x66 });
        gbc.writeMem(0xa34b, { 0x42 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x27d9, gbc.sp());
        EXPECT(0x3dac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa34b));
        // CB 66 02A6
        gbc.setState(0xf6f, 0xde0d, 0xa790, 0x1ce, 0x1107, 0x9ca8, 0x0, 0x0);
        gbc.writeMem(0xf6f, { 0xcb, 0x66 });
        gbc.writeMem(0x9ca8, { 0xb });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xde0d, gbc.sp());
        EXPECT(0xf71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9ca8));
        // CB 66 02A8
        gbc.setState(0xb882, 0x337c, 0x4190, 0xa18b, 0xefcd, 0x82a0, 0x1, 0x0);
        gbc.writeMem(0x82a0, { 0xd3 });
        gbc.writeMem(0xb882, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x337c, gbc.sp());
        EXPECT(0xb884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0x82a0));
        EXPECT(0xcb, gbc.readMem(0xb882));
        EXPECT(0x66, gbc.readMem(0xb883));
        // CB 66 02A9
        gbc.setState(0xb5bf, 0xf530, 0x6610, 0xcb8f, 0x3b6f, 0x9ddf, 0x0, 0x1);
        gbc.writeMem(0x9ddf, { 0x78 });
        gbc.writeMem(0xb5bf, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf530, gbc.sp());
        EXPECT(0xb5c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9ddf));
        EXPECT(0xcb, gbc.readMem(0xb5bf));
        EXPECT(0x66, gbc.readMem(0xb5c0));
        // CB 66 02AA
        gbc.setState(0x3792, 0xe29, 0x7a60, 0x336d, 0x338e, 0x2090, 0x1, 0x0);
        gbc.writeMem(0x2090, { 0xc2 });
        gbc.writeMem(0x3792, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe29, gbc.sp());
        EXPECT(0x3794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 02AB
        gbc.setState(0xd54f, 0xbfbe, 0xb70, 0x321e, 0x6e17, 0xd90e, 0x1, 0x0);
        gbc.writeMem(0xd54f, { 0xcb, 0x66 });
        gbc.writeMem(0xd90e, { 0x11 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xbfbe, gbc.sp());
        EXPECT(0xd551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd54f));
        EXPECT(0x66, gbc.readMem(0xd550));
        EXPECT(0x11, gbc.readMem(0xd90e));
        // CB 66 02AC
        gbc.setState(0xb2fd, 0xda04, 0xba90, 0xc0ae, 0x457f, 0x490f, 0x0, 0x1);
        gbc.writeMem(0x490f, { 0x4a });
        gbc.writeMem(0xb2fd, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xda04, gbc.sp());
        EXPECT(0xb2ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2fd));
        EXPECT(0x66, gbc.readMem(0xb2fe));
        // CB 66 02AD
        gbc.setState(0xd8e7, 0xfdbc, 0x8700, 0xcb36, 0x46dc, 0x7d0, 0x0, 0x1);
        gbc.writeMem(0x7d0, { 0x8e });
        gbc.writeMem(0xd8e7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfdbc, gbc.sp());
        EXPECT(0xd8e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e7));
        EXPECT(0x66, gbc.readMem(0xd8e8));
        // CB 66 02AE
        gbc.setState(0x5aa6, 0x8ef3, 0xf7b0, 0x79c3, 0x730d, 0x368e, 0x0, 0x1);
        gbc.writeMem(0x368e, { 0xe2 });
        gbc.writeMem(0x5aa6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8ef3, gbc.sp());
        EXPECT(0x5aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 02AF
        gbc.setState(0x9ae4, 0x262a, 0xdbd0, 0xeab6, 0x1fec, 0x5cc6, 0x1, 0x1);
        gbc.writeMem(0x5cc6, { 0x5f });
        gbc.writeMem(0x9ae4, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x262a, gbc.sp());
        EXPECT(0x9ae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae4));
        EXPECT(0x66, gbc.readMem(0x9ae5));
        // CB 66 02B0
        gbc.setState(0xd127, 0x9b51, 0x25d0, 0xe00a, 0x8bc3, 0x104b, 0x0, 0x1);
        gbc.writeMem(0x104b, { 0xeb });
        gbc.writeMem(0xd127, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9b51, gbc.sp());
        EXPECT(0xd129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd127));
        EXPECT(0x66, gbc.readMem(0xd128));
        // CB 66 02B1
        gbc.setState(0x6d6e, 0x7f14, 0x1c90, 0x37fd, 0x9d54, 0x4204, 0x1, 0x0);
        gbc.writeMem(0x4204, { 0x5c });
        gbc.writeMem(0x6d6e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7f14, gbc.sp());
        EXPECT(0x6d70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 02B2
        gbc.setState(0x1aa6, 0xad44, 0x1c30, 0x83eb, 0x73b1, 0xc44, 0x0, 0x0);
        gbc.writeMem(0xc44, { 0x38 });
        gbc.writeMem(0x1aa6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xad44, gbc.sp());
        EXPECT(0x1aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 02B3
        gbc.setState(0x6185, 0xf19, 0xc20, 0xac97, 0xa1ae, 0x9b06, 0x1, 0x1);
        gbc.writeMem(0x6185, { 0xcb, 0x66 });
        gbc.writeMem(0x9b06, { 0x21 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf19, gbc.sp());
        EXPECT(0x6187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9b06));
        // CB 66 02B4
        gbc.setState(0x5bd8, 0x8569, 0x420, 0x3ae4, 0x7a61, 0xfb59, 0x1, 0x1);
        gbc.writeMem(0x5bd8, { 0xcb, 0x66 });
        gbc.writeMem(0xfb59, { 0xba });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8569, gbc.sp());
        EXPECT(0x5bda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xfb59));
        // CB 66 02B5
        gbc.setState(0x6a5c, 0xc4cb, 0xa270, 0x4e83, 0x90b5, 0xf0d, 0x1, 0x1);
        gbc.writeMem(0xf0d, { 0x18 });
        gbc.writeMem(0x6a5c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc4cb, gbc.sp());
        EXPECT(0x6a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 02B6
        gbc.setState(0x489, 0xd9b4, 0x99e0, 0x25f8, 0xf0b3, 0x8b9f, 0x1, 0x1);
        gbc.writeMem(0x489, { 0xcb, 0x66 });
        gbc.writeMem(0x8b9f, { 0x65 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd9b4, gbc.sp());
        EXPECT(0x48b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8b9f));
        // CB 66 02B7
        gbc.setState(0x8f14, 0xc82a, 0x4370, 0x7c4c, 0xda43, 0xed9d, 0x0, 0x0);
        gbc.writeMem(0x8f14, { 0xcb, 0x66 });
        gbc.writeMem(0xed9d, { 0x49 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc82a, gbc.sp());
        EXPECT(0x8f16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f14));
        EXPECT(0x66, gbc.readMem(0x8f15));
        EXPECT(0x49, gbc.readMem(0xed9d));
        // CB 66 02B8
        gbc.setState(0xceac, 0xa622, 0x5b00, 0x9d51, 0x3ea1, 0xcab3, 0x0, 0x1);
        gbc.writeMem(0xcab3, { 0x4b });
        gbc.writeMem(0xceac, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa622, gbc.sp());
        EXPECT(0xceae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcab3));
        EXPECT(0xcb, gbc.readMem(0xceac));
        EXPECT(0x66, gbc.readMem(0xcead));
        // CB 66 02B9
        gbc.setState(0x43dd, 0x5f28, 0x5ac0, 0x48aa, 0x7f3a, 0x91f5, 0x0, 0x0);
        gbc.writeMem(0x43dd, { 0xcb, 0x66 });
        gbc.writeMem(0x91f5, { 0xed });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5f28, gbc.sp());
        EXPECT(0x43df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x91f5));
        // CB 66 02BA
        gbc.setState(0x5e4f, 0x748e, 0x55f0, 0xa600, 0xc0b0, 0xddb3, 0x1, 0x0);
        gbc.writeMem(0x5e4f, { 0xcb, 0x66 });
        gbc.writeMem(0xddb3, { 0x1d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x748e, gbc.sp());
        EXPECT(0x5e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xddb3));
        // CB 66 02BB
        gbc.setState(0x33a, 0x6a7f, 0xdb0, 0x7746, 0x93d8, 0xa621, 0x0, 0x1);
        gbc.writeMem(0x33a, { 0xcb, 0x66 });
        gbc.writeMem(0xa621, { 0xc });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6a7f, gbc.sp());
        EXPECT(0x33c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa621));
        // CB 66 02BD
        gbc.setState(0x768d, 0x46a4, 0x8980, 0x6b00, 0x8ebb, 0xc9a5, 0x0, 0x1);
        gbc.writeMem(0x768d, { 0xcb, 0x66 });
        gbc.writeMem(0xc9a5, { 0x8f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x46a4, gbc.sp());
        EXPECT(0x768f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc9a5));
        // CB 66 02BE
        gbc.setState(0xde55, 0xf465, 0x3e00, 0xb0e5, 0xb093, 0x91e2, 0x0, 0x0);
        gbc.writeMem(0x91e2, { 0x86 });
        gbc.writeMem(0xde55, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf465, gbc.sp());
        EXPECT(0xde57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x91e2));
        EXPECT(0xcb, gbc.readMem(0xde55));
        EXPECT(0x66, gbc.readMem(0xde56));
        // CB 66 02BF
        gbc.setState(0x76fd, 0xf445, 0x1b60, 0xd22f, 0xbf70, 0x55ad, 0x0, 0x0);
        gbc.writeMem(0x55ad, { 0x49 });
        gbc.writeMem(0x76fd, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf445, gbc.sp());
        EXPECT(0x76ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 02C0
        gbc.setState(0x858e, 0x62dd, 0xbdf0, 0x66c2, 0x56f4, 0xbc0d, 0x1, 0x0);
        gbc.writeMem(0x858e, { 0xcb, 0x66 });
        gbc.writeMem(0xbc0d, { 0xb5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x62dd, gbc.sp());
        EXPECT(0x8590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x858e));
        EXPECT(0x66, gbc.readMem(0x858f));
        EXPECT(0xb5, gbc.readMem(0xbc0d));
        // CB 66 02C1
        gbc.setState(0xdafd, 0x2172, 0x8640, 0x2c16, 0x11f6, 0xba6a, 0x1, 0x1);
        gbc.writeMem(0xba6a, { 0x8b });
        gbc.writeMem(0xdafd, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2172, gbc.sp());
        EXPECT(0xdaff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xba6a));
        EXPECT(0xcb, gbc.readMem(0xdafd));
        EXPECT(0x66, gbc.readMem(0xdafe));
        // CB 66 02C2
        gbc.setState(0x135e, 0x6dea, 0xa080, 0x50f8, 0xc2e7, 0x9e13, 0x0, 0x0);
        gbc.writeMem(0x135e, { 0xcb, 0x66 });
        gbc.writeMem(0x9e13, { 0x23 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6dea, gbc.sp());
        EXPECT(0x1360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x9e13));
        // CB 66 02C3
        gbc.setState(0x8163, 0x1b7d, 0x7c10, 0xb232, 0x49f1, 0xa9a, 0x0, 0x1);
        gbc.writeMem(0xa9a, { 0xbe });
        gbc.writeMem(0x8163, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1b7d, gbc.sp());
        EXPECT(0x8165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8163));
        EXPECT(0x66, gbc.readMem(0x8164));
        // CB 66 02C4
        gbc.setState(0x2724, 0xb7b9, 0x6f60, 0x41ea, 0x4a2e, 0x140b, 0x1, 0x1);
        gbc.writeMem(0x140b, { 0x8e });
        gbc.writeMem(0x2724, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb7b9, gbc.sp());
        EXPECT(0x2726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 02C5
        gbc.setState(0xb309, 0x87ac, 0x8c50, 0x329f, 0xf783, 0xd208, 0x1, 0x0);
        gbc.writeMem(0xb309, { 0xcb, 0x66 });
        gbc.writeMem(0xd208, { 0xdd });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x87ac, gbc.sp());
        EXPECT(0xb30b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb309));
        EXPECT(0x66, gbc.readMem(0xb30a));
        EXPECT(0xdd, gbc.readMem(0xd208));
        // CB 66 02C6
        gbc.setState(0xa21e, 0x69a, 0x7990, 0x8b92, 0xe593, 0x3b6a, 0x0, 0x1);
        gbc.writeMem(0x3b6a, { 0x3e });
        gbc.writeMem(0xa21e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x69a, gbc.sp());
        EXPECT(0xa220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa21e));
        EXPECT(0x66, gbc.readMem(0xa21f));
        // CB 66 02C7
        gbc.setState(0x8b24, 0x4e11, 0x10e0, 0x494f, 0x6837, 0xd4c1, 0x0, 0x0);
        gbc.writeMem(0x8b24, { 0xcb, 0x66 });
        gbc.writeMem(0xd4c1, { 0xae });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4e11, gbc.sp());
        EXPECT(0x8b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b24));
        EXPECT(0x66, gbc.readMem(0x8b25));
        EXPECT(0xae, gbc.readMem(0xd4c1));
        // CB 66 02C8
        gbc.setState(0x82ed, 0xfbe6, 0x1380, 0x5b85, 0xabf8, 0xb7ce, 0x1, 0x1);
        gbc.writeMem(0x82ed, { 0xcb, 0x66 });
        gbc.writeMem(0xb7ce, { 0x53 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfbe6, gbc.sp());
        EXPECT(0x82ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ed));
        EXPECT(0x66, gbc.readMem(0x82ee));
        EXPECT(0x53, gbc.readMem(0xb7ce));
        // CB 66 02C9
        gbc.setState(0xa7f4, 0x14a3, 0x3e30, 0xcc5d, 0xf1b1, 0xc06c, 0x0, 0x1);
        gbc.writeMem(0xa7f4, { 0xcb, 0x66 });
        gbc.writeMem(0xc06c, { 0x10 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x14a3, gbc.sp());
        EXPECT(0xa7f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f4));
        EXPECT(0x66, gbc.readMem(0xa7f5));
        EXPECT(0x10, gbc.readMem(0xc06c));
        // CB 66 02CA
        gbc.setState(0xe925, 0x51ba, 0x2470, 0x85e, 0x536a, 0xe4d8, 0x0, 0x1);
        gbc.writeMem(0xe4d8, { 0xa });
        gbc.writeMem(0xe925, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x51ba, gbc.sp());
        EXPECT(0xe927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe4d8));
        EXPECT(0xcb, gbc.readMem(0xe925));
        EXPECT(0x66, gbc.readMem(0xe926));
        // CB 66 02CB
        gbc.setState(0xe2f, 0x2e77, 0x3c00, 0xc862, 0x755a, 0x8ab8, 0x1, 0x0);
        gbc.writeMem(0xe2f, { 0xcb, 0x66 });
        gbc.writeMem(0x8ab8, { 0x8b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2e77, gbc.sp());
        EXPECT(0xe31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x8ab8));
        // CB 66 02CC
        gbc.setState(0xbf5a, 0x7a5b, 0x3ab0, 0x47a1, 0x3480, 0x77d9, 0x0, 0x1);
        gbc.writeMem(0x77d9, { 0x24 });
        gbc.writeMem(0xbf5a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7a5b, gbc.sp());
        EXPECT(0xbf5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf5a));
        EXPECT(0x66, gbc.readMem(0xbf5b));
        // CB 66 02CD
        gbc.setState(0x404d, 0x41bf, 0xc1e0, 0x1a17, 0x71d1, 0xb0, 0x1, 0x0);
        gbc.writeMem(0xb0, { 0x9 });
        gbc.writeMem(0x404d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x41bf, gbc.sp());
        EXPECT(0x404f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 02CE
        gbc.setState(0xc02c, 0xe34f, 0xf010, 0x8244, 0x228e, 0x8539, 0x1, 0x1);
        gbc.writeMem(0x8539, { 0x79 });
        gbc.writeMem(0xc02c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe34f, gbc.sp());
        EXPECT(0xc02e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8539));
        EXPECT(0xcb, gbc.readMem(0xc02c));
        EXPECT(0x66, gbc.readMem(0xc02d));
        // CB 66 02CF
        gbc.setState(0xca3e, 0x1a6a, 0x4920, 0x3bb4, 0x6470, 0xa78a, 0x0, 0x0);
        gbc.writeMem(0xa78a, { 0x3e });
        gbc.writeMem(0xca3e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1a6a, gbc.sp());
        EXPECT(0xca40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa78a));
        EXPECT(0xcb, gbc.readMem(0xca3e));
        EXPECT(0x66, gbc.readMem(0xca3f));
        // CB 66 02D0
        gbc.setState(0x8f66, 0xa7a0, 0x2f10, 0x5e8b, 0x66bd, 0x2140, 0x1, 0x1);
        gbc.writeMem(0x2140, { 0x90 });
        gbc.writeMem(0x8f66, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa7a0, gbc.sp());
        EXPECT(0x8f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f66));
        EXPECT(0x66, gbc.readMem(0x8f67));
        // CB 66 02D1
        gbc.setState(0x2955, 0x7f37, 0xc1b0, 0x1132, 0x6555, 0xbbf5, 0x0, 0x0);
        gbc.writeMem(0x2955, { 0xcb, 0x66 });
        gbc.writeMem(0xbbf5, { 0x58 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7f37, gbc.sp());
        EXPECT(0x2957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbbf5));
        // CB 66 02D2
        gbc.setState(0xba0e, 0x1731, 0xf4f0, 0xd66f, 0x8ffb, 0x21a, 0x1, 0x0);
        gbc.writeMem(0x21a, { 0x66 });
        gbc.writeMem(0xba0e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1731, gbc.sp());
        EXPECT(0xba10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba0e));
        EXPECT(0x66, gbc.readMem(0xba0f));
        // CB 66 02D3
        gbc.setState(0xb7f6, 0x155b, 0xe60, 0xeceb, 0xbc0b, 0xc511, 0x0, 0x1);
        gbc.writeMem(0xb7f6, { 0xcb, 0x66 });
        gbc.writeMem(0xc511, { 0xad });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x155b, gbc.sp());
        EXPECT(0xb7f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f6));
        EXPECT(0x66, gbc.readMem(0xb7f7));
        EXPECT(0xad, gbc.readMem(0xc511));
        // CB 66 02D4
        gbc.setState(0x63d6, 0x8947, 0xaaf0, 0x8e30, 0x1226, 0xa539, 0x1, 0x1);
        gbc.writeMem(0x63d6, { 0xcb, 0x66 });
        gbc.writeMem(0xa539, { 0x7a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8947, gbc.sp());
        EXPECT(0x63d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa539));
        // CB 66 02D5
        gbc.setState(0x8dd9, 0x2ba8, 0xce10, 0xddca, 0x6433, 0xe5a, 0x0, 0x0);
        gbc.writeMem(0xe5a, { 0xa6 });
        gbc.writeMem(0x8dd9, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2ba8, gbc.sp());
        EXPECT(0x8ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dd9));
        EXPECT(0x66, gbc.readMem(0x8dda));
        // CB 66 02D6
        gbc.setState(0x1903, 0x8a9, 0xce20, 0xdf3c, 0xe3da, 0xf74, 0x1, 0x0);
        gbc.writeMem(0xf74, { 0xe3 });
        gbc.writeMem(0x1903, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8a9, gbc.sp());
        EXPECT(0x1905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 02D7
        gbc.setState(0x1132, 0xf5fa, 0xfa10, 0xe7f5, 0xf98c, 0xb740, 0x0, 0x0);
        gbc.writeMem(0x1132, { 0xcb, 0x66 });
        gbc.writeMem(0xb740, { 0xe9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf5fa, gbc.sp());
        EXPECT(0x1134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb740));
        // CB 66 02D8
        gbc.setState(0xe07a, 0x696d, 0xd6e0, 0x7056, 0xba68, 0xbb18, 0x0, 0x1);
        gbc.writeMem(0xbb18, { 0x53 });
        gbc.writeMem(0xe07a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x696d, gbc.sp());
        EXPECT(0xe07c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbb18));
        EXPECT(0xcb, gbc.readMem(0xe07a));
        EXPECT(0x66, gbc.readMem(0xe07b));
        // CB 66 02D9
        gbc.setState(0x6c72, 0xaff6, 0xb50, 0xea7, 0x1714, 0x5c45, 0x0, 0x1);
        gbc.writeMem(0x5c45, { 0x81 });
        gbc.writeMem(0x6c72, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xaff6, gbc.sp());
        EXPECT(0x6c74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 02DA
        gbc.setState(0x2392, 0xbb7b, 0x6be0, 0xf2fb, 0x82ab, 0xf579, 0x1, 0x0);
        gbc.writeMem(0x2392, { 0xcb, 0x66 });
        gbc.writeMem(0xf579, { 0x2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbb7b, gbc.sp());
        EXPECT(0x2394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xf579));
        // CB 66 02DC
        gbc.setState(0x2a41, 0x9264, 0x7ef0, 0xbf42, 0xa5cf, 0xb530, 0x0, 0x0);
        gbc.writeMem(0x2a41, { 0xcb, 0x66 });
        gbc.writeMem(0xb530, { 0x5f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9264, gbc.sp());
        EXPECT(0x2a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xb530));
        // CB 66 02DD
        gbc.setState(0xeb8d, 0x5819, 0x9e90, 0x93ad, 0x6f64, 0xff5c, 0x0, 0x0);
        gbc.writeMem(0xeb8d, { 0xcb, 0x66 });
        gbc.writeMem(0xff5c, { 0xc3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5819, gbc.sp());
        EXPECT(0xeb8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb8d));
        EXPECT(0x66, gbc.readMem(0xeb8e));
        EXPECT(0xc3, gbc.readMem(0xff5c));
        // CB 66 02DE
        gbc.setState(0xb74c, 0x5e78, 0x6180, 0xde48, 0xd4e3, 0x4ad, 0x0, 0x1);
        gbc.writeMem(0x4ad, { 0x86 });
        gbc.writeMem(0xb74c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5e78, gbc.sp());
        EXPECT(0xb74e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb74c));
        EXPECT(0x66, gbc.readMem(0xb74d));
        // CB 66 02DF
        gbc.setState(0xe7e, 0xc084, 0xfce0, 0xb7d9, 0xbd75, 0xb5c9, 0x0, 0x1);
        gbc.writeMem(0xe7e, { 0xcb, 0x66 });
        gbc.writeMem(0xb5c9, { 0xf0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc084, gbc.sp());
        EXPECT(0xe80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb5c9));
        // CB 66 02E0
        gbc.setState(0x6eaa, 0x4dab, 0x4410, 0x29c6, 0xbf81, 0x2e1f, 0x0, 0x1);
        gbc.writeMem(0x2e1f, { 0x86 });
        gbc.writeMem(0x6eaa, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4dab, gbc.sp());
        EXPECT(0x6eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 02E1
        gbc.setState(0x6ba8, 0x493b, 0xcb50, 0x3a64, 0xd38d, 0x8b34, 0x1, 0x0);
        gbc.writeMem(0x6ba8, { 0xcb, 0x66 });
        gbc.writeMem(0x8b34, { 0x34 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x493b, gbc.sp());
        EXPECT(0x6baa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8b34));
        // CB 66 02E2
        gbc.setState(0xe1bf, 0xbb73, 0xcb0, 0x7e97, 0xf5f3, 0xd24b, 0x1, 0x1);
        gbc.writeMem(0xd24b, { 0x26 });
        gbc.writeMem(0xe1bf, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbb73, gbc.sp());
        EXPECT(0xe1c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd24b));
        EXPECT(0xcb, gbc.readMem(0xe1bf));
        EXPECT(0x66, gbc.readMem(0xe1c0));
        // CB 66 02E3
        gbc.setState(0x9451, 0xc35, 0x9770, 0xf5c6, 0x3fa5, 0x7def, 0x1, 0x0);
        gbc.writeMem(0x7def, { 0x35 });
        gbc.writeMem(0x9451, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc35, gbc.sp());
        EXPECT(0x9453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9451));
        EXPECT(0x66, gbc.readMem(0x9452));
        // CB 66 02E4
        gbc.setState(0xdcf8, 0x8ca5, 0x1360, 0x1561, 0xcfd8, 0x361c, 0x1, 0x1);
        gbc.writeMem(0x361c, { 0xf2 });
        gbc.writeMem(0xdcf8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8ca5, gbc.sp());
        EXPECT(0xdcfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf8));
        EXPECT(0x66, gbc.readMem(0xdcf9));
        // CB 66 02E5
        gbc.setState(0xbaab, 0xd164, 0xb780, 0x5e7e, 0xc0cd, 0xb4b9, 0x1, 0x1);
        gbc.writeMem(0xb4b9, { 0x2e });
        gbc.writeMem(0xbaab, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd164, gbc.sp());
        EXPECT(0xbaad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb4b9));
        EXPECT(0xcb, gbc.readMem(0xbaab));
        EXPECT(0x66, gbc.readMem(0xbaac));
        // CB 66 02E6
        gbc.setState(0x7cbe, 0xefcc, 0x4430, 0xa310, 0x8ea3, 0xab08, 0x0, 0x1);
        gbc.writeMem(0x7cbe, { 0xcb, 0x66 });
        gbc.writeMem(0xab08, { 0x65 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xefcc, gbc.sp());
        EXPECT(0x7cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xab08));
        // CB 66 02E7
        gbc.setState(0x2a28, 0xa46e, 0xe200, 0xdd54, 0x8877, 0x7a65, 0x0, 0x0);
        gbc.writeMem(0x2a28, { 0xcb, 0x66 });
        gbc.writeMem(0x7a65, { 0x7b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa46e, gbc.sp());
        EXPECT(0x2a2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 02E8
        gbc.setState(0x91d2, 0x7fab, 0x5160, 0x3e51, 0x7a29, 0x31df, 0x0, 0x0);
        gbc.writeMem(0x31df, { 0xeb });
        gbc.writeMem(0x91d2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7fab, gbc.sp());
        EXPECT(0x91d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d2));
        EXPECT(0x66, gbc.readMem(0x91d3));
        // CB 66 02E9
        gbc.setState(0x400e, 0xb713, 0xea60, 0x173b, 0x7cdf, 0x7c10, 0x0, 0x1);
        gbc.writeMem(0x400e, { 0xcb, 0x66 });
        gbc.writeMem(0x7c10, { 0xc8 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb713, gbc.sp());
        EXPECT(0x4010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 02EA
        gbc.setState(0xdcfb, 0x6b62, 0xcc0, 0x420, 0xb8c6, 0x13fd, 0x1, 0x1);
        gbc.writeMem(0x13fd, { 0xa5 });
        gbc.writeMem(0xdcfb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6b62, gbc.sp());
        EXPECT(0xdcfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcfb));
        EXPECT(0x66, gbc.readMem(0xdcfc));
        // CB 66 02EB
        gbc.setState(0x4336, 0x7e69, 0x7dc0, 0xf1d, 0x445f, 0xc207, 0x1, 0x1);
        gbc.writeMem(0x4336, { 0xcb, 0x66 });
        gbc.writeMem(0xc207, { 0xca });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7e69, gbc.sp());
        EXPECT(0x4338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xc207));
        // CB 66 02EC
        gbc.setState(0xd7e5, 0x9373, 0xed30, 0xd906, 0x653b, 0xbebf, 0x1, 0x0);
        gbc.writeMem(0xbebf, { 0x23 });
        gbc.writeMem(0xd7e5, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9373, gbc.sp());
        EXPECT(0xd7e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xbebf));
        EXPECT(0xcb, gbc.readMem(0xd7e5));
        EXPECT(0x66, gbc.readMem(0xd7e6));
        // CB 66 02ED
        gbc.setState(0x496d, 0xfc24, 0x65c0, 0xc772, 0x6455, 0x7468, 0x1, 0x1);
        gbc.writeMem(0x496d, { 0xcb, 0x66 });
        gbc.writeMem(0x7468, { 0x86 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfc24, gbc.sp());
        EXPECT(0x496f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 02EE
        gbc.setState(0xdb1, 0x7fa2, 0xf910, 0xa197, 0x3e70, 0xe763, 0x1, 0x1);
        gbc.writeMem(0xdb1, { 0xcb, 0x66 });
        gbc.writeMem(0xe763, { 0xfa });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7fa2, gbc.sp());
        EXPECT(0xdb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe763));
        // CB 66 02EF
        gbc.setState(0x5679, 0xb615, 0x7680, 0xd9b1, 0xce4c, 0xe3f4, 0x0, 0x1);
        gbc.writeMem(0x5679, { 0xcb, 0x66 });
        gbc.writeMem(0xe3f4, { 0x62 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb615, gbc.sp());
        EXPECT(0x567b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xe3f4));
        // CB 66 02F0
        gbc.setState(0xdc7c, 0xdc2b, 0x2cd0, 0xaba6, 0x6676, 0x7e6d, 0x0, 0x1);
        gbc.writeMem(0x7e6d, { 0xbb });
        gbc.writeMem(0xdc7c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdc2b, gbc.sp());
        EXPECT(0xdc7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc7c));
        EXPECT(0x66, gbc.readMem(0xdc7d));
        // CB 66 02F1
        gbc.setState(0x9bf9, 0xf9b, 0x3b70, 0x8e2b, 0x7cb1, 0xee7d, 0x0, 0x1);
        gbc.writeMem(0x9bf9, { 0xcb, 0x66 });
        gbc.writeMem(0xee7d, { 0x8d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf9b, gbc.sp());
        EXPECT(0x9bfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf9));
        EXPECT(0x66, gbc.readMem(0x9bfa));
        EXPECT(0x8d, gbc.readMem(0xee7d));
        // CB 66 02F2
        gbc.setState(0x984c, 0xe029, 0x9dc0, 0xc7fc, 0xf6ff, 0x76f1, 0x0, 0x1);
        gbc.writeMem(0x76f1, { 0x94 });
        gbc.writeMem(0x984c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe029, gbc.sp());
        EXPECT(0x984e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x984c));
        EXPECT(0x66, gbc.readMem(0x984d));
        // CB 66 02F3
        gbc.setState(0xba9f, 0xdc6f, 0x4ae0, 0x9311, 0xacac, 0xe0b7, 0x0, 0x0);
        gbc.writeMem(0xba9f, { 0xcb, 0x66 });
        gbc.writeMem(0xe0b7, { 0x2f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdc6f, gbc.sp());
        EXPECT(0xbaa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba9f));
        EXPECT(0x66, gbc.readMem(0xbaa0));
        EXPECT(0x2f, gbc.readMem(0xe0b7));
        // CB 66 02F4
        gbc.setState(0xe49c, 0x782b, 0x2150, 0x319e, 0x76e7, 0xf289, 0x1, 0x0);
        gbc.writeMem(0xe49c, { 0xcb, 0x66 });
        gbc.writeMem(0xf289, { 0xd4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x782b, gbc.sp());
        EXPECT(0xe49e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe49c));
        EXPECT(0x66, gbc.readMem(0xe49d));
        EXPECT(0xd4, gbc.readMem(0xf289));
        // CB 66 02F5
        gbc.setState(0xa08a, 0x5e06, 0x8c00, 0x6269, 0x86f1, 0xd42e, 0x1, 0x0);
        gbc.writeMem(0xa08a, { 0xcb, 0x66 });
        gbc.writeMem(0xd42e, { 0x88 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5e06, gbc.sp());
        EXPECT(0xa08c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa08a));
        EXPECT(0x66, gbc.readMem(0xa08b));
        EXPECT(0x88, gbc.readMem(0xd42e));
        // CB 66 02F6
        gbc.setState(0xdb11, 0x93d5, 0x140, 0x1160, 0xb161, 0xb255, 0x1, 0x1);
        gbc.writeMem(0xb255, { 0x1e });
        gbc.writeMem(0xdb11, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x93d5, gbc.sp());
        EXPECT(0xdb13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xb255));
        EXPECT(0xcb, gbc.readMem(0xdb11));
        EXPECT(0x66, gbc.readMem(0xdb12));
        // CB 66 02F7
        gbc.setState(0xceb1, 0x3c5b, 0x5dd0, 0x5adf, 0x342a, 0x74d8, 0x0, 0x1);
        gbc.writeMem(0x74d8, { 0x90 });
        gbc.writeMem(0xceb1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3c5b, gbc.sp());
        EXPECT(0xceb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceb1));
        EXPECT(0x66, gbc.readMem(0xceb2));
        // CB 66 02F8
        gbc.setState(0xbb13, 0x5fd2, 0x3240, 0x91a6, 0xf8a2, 0x1a39, 0x1, 0x1);
        gbc.writeMem(0x1a39, { 0xd });
        gbc.writeMem(0xbb13, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5fd2, gbc.sp());
        EXPECT(0xbb15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb13));
        EXPECT(0x66, gbc.readMem(0xbb14));
        // CB 66 02F9
        gbc.setState(0xa9df, 0x857d, 0xa3a0, 0x575c, 0x7059, 0xec1c, 0x0, 0x0);
        gbc.writeMem(0xa9df, { 0xcb, 0x66 });
        gbc.writeMem(0xec1c, { 0xef });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x857d, gbc.sp());
        EXPECT(0xa9e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9df));
        EXPECT(0x66, gbc.readMem(0xa9e0));
        EXPECT(0xef, gbc.readMem(0xec1c));
        // CB 66 02FB
        gbc.setState(0xe38, 0xeab3, 0x5b40, 0xab2e, 0xb2e7, 0x4200, 0x0, 0x0);
        gbc.writeMem(0xe38, { 0xcb, 0x66 });
        gbc.writeMem(0x4200, { 0xa1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xeab3, gbc.sp());
        EXPECT(0xe3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 02FC
        gbc.setState(0x8b35, 0x6774, 0xe9b0, 0x1986, 0x55c6, 0x4892, 0x0, 0x1);
        gbc.writeMem(0x4892, { 0x73 });
        gbc.writeMem(0x8b35, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6774, gbc.sp());
        EXPECT(0x8b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b35));
        EXPECT(0x66, gbc.readMem(0x8b36));
        // CB 66 02FD
        gbc.setState(0xb1cb, 0xc80d, 0x5570, 0x76e, 0xc666, 0xbdda, 0x0, 0x1);
        gbc.writeMem(0xb1cb, { 0xcb, 0x66 });
        gbc.writeMem(0xbdda, { 0xa6 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc80d, gbc.sp());
        EXPECT(0xb1cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1cb));
        EXPECT(0x66, gbc.readMem(0xb1cc));
        EXPECT(0xa6, gbc.readMem(0xbdda));
        // CB 66 02FE
        gbc.setState(0xbc24, 0x9233, 0xb090, 0x1799, 0x22a7, 0xe260, 0x1, 0x1);
        gbc.writeMem(0xbc24, { 0xcb, 0x66 });
        gbc.writeMem(0xe260, { 0x2d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9233, gbc.sp());
        EXPECT(0xbc26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc24));
        EXPECT(0x66, gbc.readMem(0xbc25));
        EXPECT(0x2d, gbc.readMem(0xe260));
        // CB 66 02FF
        gbc.setState(0x36a7, 0x7f02, 0x1760, 0x3545, 0xc8a1, 0x3cde, 0x1, 0x0);
        gbc.writeMem(0x36a7, { 0xcb, 0x66 });
        gbc.writeMem(0x3cde, { 0xdc });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7f02, gbc.sp());
        EXPECT(0x36a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0300
        gbc.setState(0xbbbf, 0xe9bd, 0x1550, 0xb98c, 0xab79, 0x4788, 0x0, 0x0);
        gbc.writeMem(0x4788, { 0xbb });
        gbc.writeMem(0xbbbf, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe9bd, gbc.sp());
        EXPECT(0xbbc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbbf));
        EXPECT(0x66, gbc.readMem(0xbbc0));
        // CB 66 0301
        gbc.setState(0x6ff4, 0x892e, 0xd5e0, 0x1222, 0xe0f5, 0x7f4, 0x0, 0x1);
        gbc.writeMem(0x7f4, { 0xec });
        gbc.writeMem(0x6ff4, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x892e, gbc.sp());
        EXPECT(0x6ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0302
        gbc.setState(0x4236, 0x757e, 0xe700, 0x4f87, 0x87f1, 0x13b8, 0x0, 0x1);
        gbc.writeMem(0x13b8, { 0x6b });
        gbc.writeMem(0x4236, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x757e, gbc.sp());
        EXPECT(0x4238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0303
        gbc.setState(0xdd02, 0x458c, 0xb220, 0x4f9d, 0xe25, 0x3779, 0x1, 0x1);
        gbc.writeMem(0x3779, { 0xec });
        gbc.writeMem(0xdd02, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x458c, gbc.sp());
        EXPECT(0xdd04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd02));
        EXPECT(0x66, gbc.readMem(0xdd03));
        // CB 66 0304
        gbc.setState(0x43bb, 0x2119, 0x2a0, 0x12dc, 0xb292, 0xc8a0, 0x0, 0x0);
        gbc.writeMem(0x43bb, { 0xcb, 0x66 });
        gbc.writeMem(0xc8a0, { 0x28 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2119, gbc.sp());
        EXPECT(0x43bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xc8a0));
        // CB 66 0305
        gbc.setState(0x9948, 0xafe8, 0x23f0, 0xc654, 0x5bce, 0x467f, 0x0, 0x0);
        gbc.writeMem(0x467f, { 0x8a });
        gbc.writeMem(0x9948, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xafe8, gbc.sp());
        EXPECT(0x994a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9948));
        EXPECT(0x66, gbc.readMem(0x9949));
        // CB 66 0306
        gbc.setState(0xbf3b, 0xb64e, 0x3030, 0xc2b7, 0x8fc5, 0xa3b, 0x1, 0x0);
        gbc.writeMem(0xa3b, { 0x73 });
        gbc.writeMem(0xbf3b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb64e, gbc.sp());
        EXPECT(0xbf3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf3b));
        EXPECT(0x66, gbc.readMem(0xbf3c));
        // CB 66 0307
        gbc.setState(0xb571, 0xa055, 0x6480, 0xf926, 0xa104, 0x3374, 0x1, 0x0);
        gbc.writeMem(0x3374, { 0x53 });
        gbc.writeMem(0xb571, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa055, gbc.sp());
        EXPECT(0xb573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb571));
        EXPECT(0x66, gbc.readMem(0xb572));
        // CB 66 0308
        gbc.setState(0x9229, 0xce4e, 0x6070, 0x8943, 0xb57e, 0xcb0c, 0x0, 0x0);
        gbc.writeMem(0x9229, { 0xcb, 0x66 });
        gbc.writeMem(0xcb0c, { 0x37 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xce4e, gbc.sp());
        EXPECT(0x922b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9229));
        EXPECT(0x66, gbc.readMem(0x922a));
        EXPECT(0x37, gbc.readMem(0xcb0c));
        // CB 66 0309
        gbc.setState(0x2952, 0x1100, 0x2370, 0x3ee2, 0x37d1, 0x5d23, 0x0, 0x0);
        gbc.writeMem(0x2952, { 0xcb, 0x66 });
        gbc.writeMem(0x5d23, { 0x6 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1100, gbc.sp());
        EXPECT(0x2954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 030A
        gbc.setState(0x3f81, 0xed23, 0xb200, 0xf6dd, 0x8e32, 0xa4ca, 0x0, 0x1);
        gbc.writeMem(0x3f81, { 0xcb, 0x66 });
        gbc.writeMem(0xa4ca, { 0x80 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xed23, gbc.sp());
        EXPECT(0x3f83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa4ca));
        // CB 66 030B
        gbc.setState(0x2152, 0x8695, 0x3f0, 0xc9f1, 0x8633, 0x3226, 0x1, 0x1);
        gbc.writeMem(0x2152, { 0xcb, 0x66 });
        gbc.writeMem(0x3226, { 0xfe });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8695, gbc.sp());
        EXPECT(0x2154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 030C
        gbc.setState(0x27dd, 0xbf16, 0x3720, 0x52e7, 0x8f34, 0x627c, 0x0, 0x1);
        gbc.writeMem(0x27dd, { 0xcb, 0x66 });
        gbc.writeMem(0x627c, { 0x8e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbf16, gbc.sp());
        EXPECT(0x27df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 030D
        gbc.setState(0xe1ef, 0x221f, 0x50, 0x2a24, 0xed1, 0xd2ce, 0x0, 0x1);
        gbc.writeMem(0xd2ce, { 0xfb });
        gbc.writeMem(0xe1ef, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x221f, gbc.sp());
        EXPECT(0xe1f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xd2ce));
        EXPECT(0xcb, gbc.readMem(0xe1ef));
        EXPECT(0x66, gbc.readMem(0xe1f0));
        // CB 66 030E
        gbc.setState(0xc01f, 0x6153, 0xdb10, 0x50d4, 0xea17, 0x1c55, 0x1, 0x0);
        gbc.writeMem(0x1c55, { 0x9f });
        gbc.writeMem(0xc01f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6153, gbc.sp());
        EXPECT(0xc021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc01f));
        EXPECT(0x66, gbc.readMem(0xc020));
        // CB 66 030F
        gbc.setState(0x3c33, 0x28b8, 0xc9a0, 0x9aab, 0x5ca1, 0xd5e2, 0x0, 0x0);
        gbc.writeMem(0x3c33, { 0xcb, 0x66 });
        gbc.writeMem(0xd5e2, { 0x96 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x28b8, gbc.sp());
        EXPECT(0x3c35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xd5e2));
        // CB 66 0311
        gbc.setState(0x8808, 0x3525, 0xa800, 0x9c1f, 0xe5fe, 0xf1e4, 0x1, 0x1);
        gbc.writeMem(0x8808, { 0xcb, 0x66 });
        gbc.writeMem(0xf1e4, { 0x82 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3525, gbc.sp());
        EXPECT(0x880a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8808));
        EXPECT(0x66, gbc.readMem(0x8809));
        EXPECT(0x82, gbc.readMem(0xf1e4));
        // CB 66 0312
        gbc.setState(0x68fb, 0xac8a, 0xb7c0, 0xc2a, 0x70cc, 0x524b, 0x0, 0x0);
        gbc.writeMem(0x524b, { 0x8f });
        gbc.writeMem(0x68fb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xac8a, gbc.sp());
        EXPECT(0x68fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0314
        gbc.setState(0xe398, 0xb8a0, 0x5af0, 0x591e, 0x7a9, 0x3969, 0x0, 0x0);
        gbc.writeMem(0x3969, { 0xb0 });
        gbc.writeMem(0xe398, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb8a0, gbc.sp());
        EXPECT(0xe39a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe398));
        EXPECT(0x66, gbc.readMem(0xe399));
        // CB 66 0315
        gbc.setState(0x1bc8, 0xac14, 0x1280, 0xf07c, 0xd24d, 0x73b7, 0x1, 0x0);
        gbc.writeMem(0x1bc8, { 0xcb, 0x66 });
        gbc.writeMem(0x73b7, { 0x18 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xac14, gbc.sp());
        EXPECT(0x1bca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0316
        gbc.setState(0x85e9, 0xab0c, 0xe60, 0x995, 0xbef8, 0xf830, 0x0, 0x0);
        gbc.writeMem(0x85e9, { 0xcb, 0x66 });
        gbc.writeMem(0xf830, { 0x86 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xab0c, gbc.sp());
        EXPECT(0x85eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e9));
        EXPECT(0x66, gbc.readMem(0x85ea));
        EXPECT(0x86, gbc.readMem(0xf830));
        // CB 66 0317
        gbc.setState(0x2407, 0xc328, 0x31e0, 0xbd59, 0xa8f3, 0x7ba2, 0x1, 0x0);
        gbc.writeMem(0x2407, { 0xcb, 0x66 });
        gbc.writeMem(0x7ba2, { 0x3 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc328, gbc.sp());
        EXPECT(0x2409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0318
        gbc.setState(0xca95, 0xa42, 0x8c40, 0x686c, 0x4205, 0xe7ed, 0x1, 0x0);
        gbc.writeMem(0xca95, { 0xcb, 0x66 });
        gbc.writeMem(0xe7ed, { 0x5b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa42, gbc.sp());
        EXPECT(0xca97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca95));
        EXPECT(0x66, gbc.readMem(0xca96));
        EXPECT(0x5b, gbc.readMem(0xe7ed));
        // CB 66 0319
        gbc.setState(0x52c1, 0x4d06, 0x58f0, 0xc2e0, 0x6daa, 0xf3d8, 0x0, 0x1);
        gbc.writeMem(0x52c1, { 0xcb, 0x66 });
        gbc.writeMem(0xf3d8, { 0x10 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4d06, gbc.sp());
        EXPECT(0x52c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xf3d8));
        // CB 66 031A
        gbc.setState(0x51b2, 0xd6cc, 0xb60, 0x1fe3, 0xd989, 0x2d60, 0x0, 0x1);
        gbc.writeMem(0x2d60, { 0x32 });
        gbc.writeMem(0x51b2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd6cc, gbc.sp());
        EXPECT(0x51b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 031B
        gbc.setState(0xd22f, 0xa309, 0xf4f0, 0xe528, 0xa47f, 0x6ab9, 0x0, 0x1);
        gbc.writeMem(0x6ab9, { 0x3f });
        gbc.writeMem(0xd22f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa309, gbc.sp());
        EXPECT(0xd231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd22f));
        EXPECT(0x66, gbc.readMem(0xd230));
        // CB 66 031C
        gbc.setState(0xca2f, 0xf457, 0x67f0, 0xd601, 0x1b9f, 0xf5eb, 0x0, 0x1);
        gbc.writeMem(0xca2f, { 0xcb, 0x66 });
        gbc.writeMem(0xf5eb, { 0xf3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf457, gbc.sp());
        EXPECT(0xca31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca2f));
        EXPECT(0x66, gbc.readMem(0xca30));
        EXPECT(0xf3, gbc.readMem(0xf5eb));
        // CB 66 031D
        gbc.setState(0x400f, 0x7de5, 0x9200, 0xa298, 0xd5a3, 0xc287, 0x1, 0x0);
        gbc.writeMem(0x400f, { 0xcb, 0x66 });
        gbc.writeMem(0xc287, { 0x71 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7de5, gbc.sp());
        EXPECT(0x4011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xc287));
        // CB 66 031E
        gbc.setState(0x8a6e, 0xaa28, 0xe4b0, 0xb0a4, 0x4e53, 0x3890, 0x1, 0x0);
        gbc.writeMem(0x3890, { 0x7a });
        gbc.writeMem(0x8a6e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xaa28, gbc.sp());
        EXPECT(0x8a70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a6e));
        EXPECT(0x66, gbc.readMem(0x8a6f));
        // CB 66 0320
        gbc.setState(0x9751, 0x37cd, 0x980, 0x1801, 0x31c8, 0x9b87, 0x1, 0x0);
        gbc.writeMem(0x9751, { 0xcb, 0x66 });
        gbc.writeMem(0x9b87, { 0x1f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x37cd, gbc.sp());
        EXPECT(0x9753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9751));
        EXPECT(0x66, gbc.readMem(0x9752));
        EXPECT(0x1f, gbc.readMem(0x9b87));
        // CB 66 0321
        gbc.setState(0x70b8, 0x166c, 0x82f0, 0x1a77, 0x2b3e, 0x82aa, 0x0, 0x1);
        gbc.writeMem(0x70b8, { 0xcb, 0x66 });
        gbc.writeMem(0x82aa, { 0x39 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x166c, gbc.sp());
        EXPECT(0x70ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x82aa));
        // CB 66 0322
        gbc.setState(0x1e49, 0x4c60, 0x6600, 0x2f5f, 0xd74c, 0xfe13, 0x1, 0x1);
        gbc.writeMem(0x1e49, { 0xcb, 0x66 });
        gbc.writeMem(0xfe13, { 0xf1 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4c60, gbc.sp());
        EXPECT(0x1e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xfe13));
        // CB 66 0323
        gbc.setState(0xb770, 0xdfee, 0xb5e0, 0x2c10, 0x61c3, 0x2dda, 0x0, 0x1);
        gbc.writeMem(0x2dda, { 0xa });
        gbc.writeMem(0xb770, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdfee, gbc.sp());
        EXPECT(0xb772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb770));
        EXPECT(0x66, gbc.readMem(0xb771));
        // CB 66 0324
        gbc.setState(0x8e84, 0xa9f, 0xe790, 0xc5de, 0x8a26, 0x721b, 0x1, 0x1);
        gbc.writeMem(0x721b, { 0x90 });
        gbc.writeMem(0x8e84, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa9f, gbc.sp());
        EXPECT(0x8e86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e84));
        EXPECT(0x66, gbc.readMem(0x8e85));
        // CB 66 0325
        gbc.setState(0xa689, 0x90d4, 0xdb00, 0xae5d, 0x9315, 0xf910, 0x0, 0x1);
        gbc.writeMem(0xa689, { 0xcb, 0x66 });
        gbc.writeMem(0xf910, { 0x66 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x90d4, gbc.sp());
        EXPECT(0xa68b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa689));
        EXPECT(0x66, gbc.readMem(0xa68a));
        EXPECT(0x66, gbc.readMem(0xf910));
        // CB 66 0326
        gbc.setState(0xdee8, 0x1b4e, 0xfa0, 0xe89e, 0xde41, 0xd0da, 0x1, 0x0);
        gbc.writeMem(0xd0da, { 0x7f });
        gbc.writeMem(0xdee8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1b4e, gbc.sp());
        EXPECT(0xdeea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xd0da));
        EXPECT(0xcb, gbc.readMem(0xdee8));
        EXPECT(0x66, gbc.readMem(0xdee9));
        // CB 66 0327
        gbc.setState(0xca1f, 0x2714, 0x3d70, 0x8d26, 0x5588, 0xc9de, 0x0, 0x0);
        gbc.writeMem(0xc9de, { 0x75 });
        gbc.writeMem(0xca1f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2714, gbc.sp());
        EXPECT(0xca21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xc9de));
        EXPECT(0xcb, gbc.readMem(0xca1f));
        EXPECT(0x66, gbc.readMem(0xca20));
        // CB 66 0328
        gbc.setState(0x5ba1, 0xbe0c, 0x6f0, 0xd43f, 0xfd0f, 0xdf23, 0x1, 0x0);
        gbc.writeMem(0x5ba1, { 0xcb, 0x66 });
        gbc.writeMem(0xdf23, { 0x1f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbe0c, gbc.sp());
        EXPECT(0x5ba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xdf23));
        // CB 66 0329
        gbc.setState(0x6532, 0x225e, 0xed30, 0x20f6, 0x9d55, 0xbc81, 0x1, 0x1);
        gbc.writeMem(0x6532, { 0xcb, 0x66 });
        gbc.writeMem(0xbc81, { 0xae });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x225e, gbc.sp());
        EXPECT(0x6534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xbc81));
        // CB 66 032C
        gbc.setState(0x55ae, 0xc92f, 0x2950, 0xdac4, 0xc5ad, 0x99d1, 0x0, 0x1);
        gbc.writeMem(0x55ae, { 0xcb, 0x66 });
        gbc.writeMem(0x99d1, { 0x2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc92f, gbc.sp());
        EXPECT(0x55b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x99d1));
        // CB 66 032D
        gbc.setState(0xa95b, 0x164c, 0x3820, 0x27bf, 0x7a0c, 0xfc2c, 0x0, 0x1);
        gbc.writeMem(0xa95b, { 0xcb, 0x66 });
        gbc.writeMem(0xfc2c, { 0x67 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x164c, gbc.sp());
        EXPECT(0xa95d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa95b));
        EXPECT(0x66, gbc.readMem(0xa95c));
        EXPECT(0x67, gbc.readMem(0xfc2c));
        // CB 66 032E
        gbc.setState(0xcd08, 0xfa04, 0xab0, 0xb05d, 0x5bbe, 0x4233, 0x0, 0x1);
        gbc.writeMem(0x4233, { 0x86 });
        gbc.writeMem(0xcd08, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfa04, gbc.sp());
        EXPECT(0xcd0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd08));
        EXPECT(0x66, gbc.readMem(0xcd09));
        // CB 66 032F
        gbc.setState(0x6f6d, 0x9d98, 0xab30, 0xa3da, 0x79d3, 0xe949, 0x1, 0x1);
        gbc.writeMem(0x6f6d, { 0xcb, 0x66 });
        gbc.writeMem(0xe949, { 0x9f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9d98, gbc.sp());
        EXPECT(0x6f6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe949));
        // CB 66 0330
        gbc.setState(0x2c60, 0xfefe, 0x1a00, 0x930b, 0x600b, 0xa387, 0x1, 0x0);
        gbc.writeMem(0x2c60, { 0xcb, 0x66 });
        gbc.writeMem(0xa387, { 0x82 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfefe, gbc.sp());
        EXPECT(0x2c62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa387));
        // CB 66 0331
        gbc.setState(0x6cd1, 0xbecd, 0x5ce0, 0xecd7, 0x3535, 0x7018, 0x0, 0x0);
        gbc.writeMem(0x6cd1, { 0xcb, 0x66 });
        gbc.writeMem(0x7018, { 0x92 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbecd, gbc.sp());
        EXPECT(0x6cd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0332
        gbc.setState(0x1415, 0x99d9, 0x3710, 0x8245, 0x119, 0xe94a, 0x0, 0x1);
        gbc.writeMem(0x1415, { 0xcb, 0x66 });
        gbc.writeMem(0xe94a, { 0x4f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x99d9, gbc.sp());
        EXPECT(0x1417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xe94a));
        // CB 66 0333
        gbc.setState(0xc4eb, 0x72d, 0x5f0, 0xf4bd, 0x6cda, 0x94a, 0x0, 0x0);
        gbc.writeMem(0x94a, { 0xb1 });
        gbc.writeMem(0xc4eb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x72d, gbc.sp());
        EXPECT(0xc4ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4eb));
        EXPECT(0x66, gbc.readMem(0xc4ec));
        // CB 66 0334
        gbc.setState(0xeb76, 0x93b2, 0xfe80, 0x8b95, 0x4b60, 0xea34, 0x0, 0x1);
        gbc.writeMem(0xea34, { 0x28 });
        gbc.writeMem(0xeb76, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x93b2, gbc.sp());
        EXPECT(0xeb78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xea34));
        EXPECT(0xcb, gbc.readMem(0xeb76));
        EXPECT(0x66, gbc.readMem(0xeb77));
        // CB 66 0335
        gbc.setState(0x1c9, 0xacfb, 0xd720, 0x1f62, 0xd2e4, 0xceb2, 0x0, 0x0);
        gbc.writeMem(0x1c9, { 0xcb, 0x66 });
        gbc.writeMem(0xceb2, { 0x11 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xacfb, gbc.sp());
        EXPECT(0x1cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xceb2));
        // CB 66 0337
        gbc.setState(0xb270, 0x5ba6, 0x4010, 0x96f7, 0xb3e7, 0xc709, 0x0, 0x1);
        gbc.writeMem(0xb270, { 0xcb, 0x66 });
        gbc.writeMem(0xc709, { 0x44 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5ba6, gbc.sp());
        EXPECT(0xb272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb270));
        EXPECT(0x66, gbc.readMem(0xb271));
        EXPECT(0x44, gbc.readMem(0xc709));
        // CB 66 0338
        gbc.setState(0x9e6a, 0x137f, 0x2ed0, 0x5d3c, 0xf53d, 0x5f2c, 0x0, 0x0);
        gbc.writeMem(0x5f2c, { 0xc5 });
        gbc.writeMem(0x9e6a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x137f, gbc.sp());
        EXPECT(0x9e6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e6a));
        EXPECT(0x66, gbc.readMem(0x9e6b));
        // CB 66 0339
        gbc.setState(0x8e6f, 0x830d, 0xc550, 0x6f2b, 0xd3ce, 0x818a, 0x0, 0x0);
        gbc.writeMem(0x818a, { 0x53 });
        gbc.writeMem(0x8e6f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x830d, gbc.sp());
        EXPECT(0x8e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x818a));
        EXPECT(0xcb, gbc.readMem(0x8e6f));
        EXPECT(0x66, gbc.readMem(0x8e70));
        // CB 66 033A
        gbc.setState(0xea4e, 0x5116, 0xae80, 0xd384, 0xa52e, 0x2206, 0x1, 0x0);
        gbc.writeMem(0x2206, { 0xc0 });
        gbc.writeMem(0xea4e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5116, gbc.sp());
        EXPECT(0xea50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea4e));
        EXPECT(0x66, gbc.readMem(0xea4f));
        // CB 66 033B
        gbc.setState(0x751d, 0xa6f6, 0xaf30, 0x87d0, 0xa18c, 0x8760, 0x0, 0x1);
        gbc.writeMem(0x751d, { 0xcb, 0x66 });
        gbc.writeMem(0x8760, { 0xc4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa6f6, gbc.sp());
        EXPECT(0x751f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x8760));
        // CB 66 033C
        gbc.setState(0x78b7, 0xf664, 0x7d40, 0x6c5d, 0xeb40, 0xb57c, 0x1, 0x1);
        gbc.writeMem(0x78b7, { 0xcb, 0x66 });
        gbc.writeMem(0xb57c, { 0xa6 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf664, gbc.sp());
        EXPECT(0x78b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb57c));
        // CB 66 033D
        gbc.setState(0xc341, 0x9e93, 0x3130, 0xcc88, 0x693d, 0x46b9, 0x1, 0x1);
        gbc.writeMem(0x46b9, { 0x97 });
        gbc.writeMem(0xc341, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9e93, gbc.sp());
        EXPECT(0xc343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc341));
        EXPECT(0x66, gbc.readMem(0xc342));
        // CB 66 033E
        gbc.setState(0x3996, 0xc890, 0x440, 0xb3e, 0xd87, 0xe07f, 0x1, 0x1);
        gbc.writeMem(0x3996, { 0xcb, 0x66 });
        gbc.writeMem(0xe07f, { 0x64 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc890, gbc.sp());
        EXPECT(0x3998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe07f));
        // CB 66 033F
        gbc.setState(0x7b2, 0xd2ac, 0xf810, 0xbbb4, 0x27cc, 0x611f, 0x1, 0x1);
        gbc.writeMem(0x7b2, { 0xcb, 0x66 });
        gbc.writeMem(0x611f, { 0x68 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd2ac, gbc.sp());
        EXPECT(0x7b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0340
        gbc.setState(0xc7a8, 0x4b13, 0x19f0, 0xb17c, 0x260c, 0xb79d, 0x1, 0x1);
        gbc.writeMem(0xb79d, { 0xcf });
        gbc.writeMem(0xc7a8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4b13, gbc.sp());
        EXPECT(0xc7aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xb79d));
        EXPECT(0xcb, gbc.readMem(0xc7a8));
        EXPECT(0x66, gbc.readMem(0xc7a9));
        // CB 66 0341
        gbc.setState(0x75c2, 0x45f0, 0x8c40, 0x66b3, 0x9c14, 0x9290, 0x1, 0x0);
        gbc.writeMem(0x75c2, { 0xcb, 0x66 });
        gbc.writeMem(0x9290, { 0x24 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x45f0, gbc.sp());
        EXPECT(0x75c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x9290));
        // CB 66 0342
        gbc.setState(0x55e0, 0xce21, 0x9890, 0x205c, 0xe776, 0x7e55, 0x1, 0x0);
        gbc.writeMem(0x55e0, { 0xcb, 0x66 });
        gbc.writeMem(0x7e55, { 0x2b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xce21, gbc.sp());
        EXPECT(0x55e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0343
        gbc.setState(0xd159, 0xedf1, 0xe480, 0x3865, 0x9fd3, 0x1f2c, 0x0, 0x1);
        gbc.writeMem(0x1f2c, { 0xd7 });
        gbc.writeMem(0xd159, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xedf1, gbc.sp());
        EXPECT(0xd15b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd159));
        EXPECT(0x66, gbc.readMem(0xd15a));
        // CB 66 0344
        gbc.setState(0x1f42, 0x6168, 0xdd60, 0x4604, 0x5dd, 0x10f5, 0x0, 0x1);
        gbc.writeMem(0x10f5, { 0xee });
        gbc.writeMem(0x1f42, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6168, gbc.sp());
        EXPECT(0x1f44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0345
        gbc.setState(0xef15, 0xcf74, 0x91c0, 0x65c, 0xec4, 0x8895, 0x0, 0x1);
        gbc.writeMem(0x8895, { 0x58 });
        gbc.writeMem(0xef15, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xcf74, gbc.sp());
        EXPECT(0xef17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8895));
        EXPECT(0xcb, gbc.readMem(0xef15));
        EXPECT(0x66, gbc.readMem(0xef16));
        // CB 66 0346
        gbc.setState(0x7b2f, 0x3294, 0x4f50, 0x2d1c, 0xa942, 0x619a, 0x1, 0x1);
        gbc.writeMem(0x619a, { 0x98 });
        gbc.writeMem(0x7b2f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3294, gbc.sp());
        EXPECT(0x7b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0347
        gbc.setState(0xe2ee, 0x1794, 0x9800, 0x6f59, 0x6e8c, 0x1956, 0x1, 0x0);
        gbc.writeMem(0x1956, { 0x10 });
        gbc.writeMem(0xe2ee, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1794, gbc.sp());
        EXPECT(0xe2f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ee));
        EXPECT(0x66, gbc.readMem(0xe2ef));
        // CB 66 0348
        gbc.setState(0x73f5, 0xd8b4, 0x6130, 0x6a2c, 0x1c1d, 0x2234, 0x1, 0x0);
        gbc.writeMem(0x2234, { 0x1e });
        gbc.writeMem(0x73f5, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd8b4, gbc.sp());
        EXPECT(0x73f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0349
        gbc.setState(0x6996, 0x8745, 0xede0, 0x7021, 0xc2d4, 0xbcdf, 0x0, 0x0);
        gbc.writeMem(0x6996, { 0xcb, 0x66 });
        gbc.writeMem(0xbcdf, { 0xb5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8745, gbc.sp());
        EXPECT(0x6998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xbcdf));
        // CB 66 034B
        gbc.setState(0xe53e, 0xa0ae, 0x3a00, 0x259a, 0xf182, 0x7931, 0x0, 0x0);
        gbc.writeMem(0x7931, { 0xdd });
        gbc.writeMem(0xe53e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa0ae, gbc.sp());
        EXPECT(0xe540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe53e));
        EXPECT(0x66, gbc.readMem(0xe53f));
        // CB 66 034C
        gbc.setState(0x875c, 0x668d, 0x27c0, 0x5703, 0xf15d, 0x64d8, 0x0, 0x1);
        gbc.writeMem(0x64d8, { 0xff });
        gbc.writeMem(0x875c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x668d, gbc.sp());
        EXPECT(0x875e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x875c));
        EXPECT(0x66, gbc.readMem(0x875d));
        // CB 66 034D
        gbc.setState(0x6cc0, 0xb199, 0xcc00, 0x9419, 0xec7d, 0x3317, 0x1, 0x0);
        gbc.writeMem(0x3317, { 0x59 });
        gbc.writeMem(0x6cc0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb199, gbc.sp());
        EXPECT(0x6cc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 034E
        gbc.setState(0x2f4b, 0x45ff, 0x4500, 0x853d, 0xe259, 0xb0e1, 0x1, 0x1);
        gbc.writeMem(0x2f4b, { 0xcb, 0x66 });
        gbc.writeMem(0xb0e1, { 0x30 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x45ff, gbc.sp());
        EXPECT(0x2f4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xb0e1));
        // CB 66 034F
        gbc.setState(0x79d2, 0x7a, 0x8a60, 0x7f01, 0x5402, 0x9745, 0x1, 0x0);
        gbc.writeMem(0x79d2, { 0xcb, 0x66 });
        gbc.writeMem(0x9745, { 0x9a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7a, gbc.sp());
        EXPECT(0x79d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9745));
        // CB 66 0350
        gbc.setState(0x3175, 0xe410, 0xd730, 0xe1d0, 0x1851, 0xed13, 0x0, 0x1);
        gbc.writeMem(0x3175, { 0xcb, 0x66 });
        gbc.writeMem(0xed13, { 0x27 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe410, gbc.sp());
        EXPECT(0x3177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xed13));
        // CB 66 0351
        gbc.setState(0xd39, 0xee50, 0xce20, 0xb61e, 0x787, 0x8063, 0x1, 0x1);
        gbc.writeMem(0xd39, { 0xcb, 0x66 });
        gbc.writeMem(0x8063, { 0x5a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xee50, gbc.sp());
        EXPECT(0xd3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x8063));
        // CB 66 0353
        gbc.setState(0xed10, 0x9abd, 0x2350, 0x210, 0xda94, 0xd8d7, 0x0, 0x0);
        gbc.writeMem(0xd8d7, { 0x4b });
        gbc.writeMem(0xed10, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9abd, gbc.sp());
        EXPECT(0xed12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd8d7));
        EXPECT(0xcb, gbc.readMem(0xed10));
        EXPECT(0x66, gbc.readMem(0xed11));
        // CB 66 0354
        gbc.setState(0x7d99, 0x46ca, 0x2360, 0x9ae6, 0x1750, 0x1f9c, 0x0, 0x1);
        gbc.writeMem(0x1f9c, { 0x5e });
        gbc.writeMem(0x7d99, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x46ca, gbc.sp());
        EXPECT(0x7d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0355
        gbc.setState(0xd606, 0x7d35, 0x4400, 0x3d8c, 0x27b, 0x8d7d, 0x1, 0x1);
        gbc.writeMem(0x8d7d, { 0xa4 });
        gbc.writeMem(0xd606, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7d35, gbc.sp());
        EXPECT(0xd608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8d7d));
        EXPECT(0xcb, gbc.readMem(0xd606));
        EXPECT(0x66, gbc.readMem(0xd607));
        // CB 66 0356
        gbc.setState(0xcf66, 0x4596, 0x7c30, 0xf087, 0x789b, 0x96c, 0x1, 0x1);
        gbc.writeMem(0x96c, { 0xb5 });
        gbc.writeMem(0xcf66, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4596, gbc.sp());
        EXPECT(0xcf68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf66));
        EXPECT(0x66, gbc.readMem(0xcf67));
        // CB 66 0357
        gbc.setState(0x924d, 0x8d29, 0x13d0, 0x3233, 0x1a93, 0x41fa, 0x1, 0x1);
        gbc.writeMem(0x41fa, { 0xed });
        gbc.writeMem(0x924d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8d29, gbc.sp());
        EXPECT(0x924f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x924d));
        EXPECT(0x66, gbc.readMem(0x924e));
        // CB 66 0358
        gbc.setState(0x5c1a, 0xf772, 0x6660, 0xd957, 0xf42c, 0x88fd, 0x1, 0x0);
        gbc.writeMem(0x5c1a, { 0xcb, 0x66 });
        gbc.writeMem(0x88fd, { 0x3b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf772, gbc.sp());
        EXPECT(0x5c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x88fd));
        // CB 66 0359
        gbc.setState(0x4c2d, 0x4abe, 0x67a0, 0xd7e, 0x2c3d, 0x934e, 0x0, 0x0);
        gbc.writeMem(0x4c2d, { 0xcb, 0x66 });
        gbc.writeMem(0x934e, { 0xa5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4abe, gbc.sp());
        EXPECT(0x4c2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x934e));
        // CB 66 035A
        gbc.setState(0x65e3, 0xb579, 0xa8c0, 0xe697, 0x5bdb, 0x1e83, 0x1, 0x0);
        gbc.writeMem(0x1e83, { 0x8f });
        gbc.writeMem(0x65e3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb579, gbc.sp());
        EXPECT(0x65e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 035B
        gbc.setState(0x5b31, 0x9fe9, 0x8a10, 0xd0b6, 0xfae0, 0x30a6, 0x1, 0x0);
        gbc.writeMem(0x30a6, { 0x75 });
        gbc.writeMem(0x5b31, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9fe9, gbc.sp());
        EXPECT(0x5b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 035C
        gbc.setState(0x613, 0x17dd, 0x45e0, 0x318, 0xab82, 0x6655, 0x0, 0x0);
        gbc.writeMem(0x613, { 0xcb, 0x66 });
        gbc.writeMem(0x6655, { 0xef });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x17dd, gbc.sp());
        EXPECT(0x615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 035D
        gbc.setState(0x469b, 0x14a5, 0x7d90, 0xe68a, 0x69a9, 0x296d, 0x0, 0x1);
        gbc.writeMem(0x296d, { 0xbf });
        gbc.writeMem(0x469b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x14a5, gbc.sp());
        EXPECT(0x469d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 035E
        gbc.setState(0x780c, 0xc31a, 0x8d70, 0xc7c6, 0x6b12, 0x3426, 0x1, 0x1);
        gbc.writeMem(0x3426, { 0xa9 });
        gbc.writeMem(0x780c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc31a, gbc.sp());
        EXPECT(0x780e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 035F
        gbc.setState(0xaa9a, 0x91f3, 0xca10, 0x8c05, 0xbef5, 0x29e9, 0x1, 0x1);
        gbc.writeMem(0x29e9, { 0x13 });
        gbc.writeMem(0xaa9a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x91f3, gbc.sp());
        EXPECT(0xaa9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa9a));
        EXPECT(0x66, gbc.readMem(0xaa9b));
        // CB 66 0360
        gbc.setState(0xe7a, 0x2b64, 0xcff0, 0x4357, 0x1431, 0x31cc, 0x0, 0x0);
        gbc.writeMem(0xe7a, { 0xcb, 0x66 });
        gbc.writeMem(0x31cc, { 0x7b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2b64, gbc.sp());
        EXPECT(0xe7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0361
        gbc.setState(0xc188, 0x6010, 0xb160, 0x35ba, 0x419e, 0xba63, 0x1, 0x0);
        gbc.writeMem(0xba63, { 0xae });
        gbc.writeMem(0xc188, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6010, gbc.sp());
        EXPECT(0xc18a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xba63));
        EXPECT(0xcb, gbc.readMem(0xc188));
        EXPECT(0x66, gbc.readMem(0xc189));
        // CB 66 0362
        gbc.setState(0x973e, 0x36e1, 0xb8e0, 0x4d7d, 0xb479, 0x5957, 0x1, 0x0);
        gbc.writeMem(0x5957, { 0x42 });
        gbc.writeMem(0x973e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x36e1, gbc.sp());
        EXPECT(0x9740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x973e));
        EXPECT(0x66, gbc.readMem(0x973f));
        // CB 66 0363
        gbc.setState(0xbfd, 0x2473, 0xbd30, 0x7574, 0x27f6, 0xd57, 0x0, 0x0);
        gbc.writeMem(0xbfd, { 0xcb, 0x66 });
        gbc.writeMem(0xd57, { 0x56 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2473, gbc.sp());
        EXPECT(0xbff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0364
        gbc.setState(0xd0d1, 0x8d8d, 0xeda0, 0x5768, 0xf731, 0x6a45, 0x0, 0x0);
        gbc.writeMem(0x6a45, { 0x1d });
        gbc.writeMem(0xd0d1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8d8d, gbc.sp());
        EXPECT(0xd0d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0d1));
        EXPECT(0x66, gbc.readMem(0xd0d2));
        // CB 66 0365
        gbc.setState(0xde38, 0xbf3d, 0x9ae0, 0x3987, 0xb911, 0x572c, 0x1, 0x0);
        gbc.writeMem(0x572c, { 0xdc });
        gbc.writeMem(0xde38, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbf3d, gbc.sp());
        EXPECT(0xde3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde38));
        EXPECT(0x66, gbc.readMem(0xde39));
        // CB 66 0366
        gbc.setState(0x6a39, 0x8af0, 0xe1c0, 0x8614, 0xc634, 0xf76d, 0x1, 0x1);
        gbc.writeMem(0x6a39, { 0xcb, 0x66 });
        gbc.writeMem(0xf76d, { 0x9b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8af0, gbc.sp());
        EXPECT(0x6a3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xf76d));
        // CB 66 0367
        gbc.setState(0xdce2, 0x2e4b, 0x2000, 0x143, 0x7234, 0x1f48, 0x0, 0x0);
        gbc.writeMem(0x1f48, { 0xc5 });
        gbc.writeMem(0xdce2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2e4b, gbc.sp());
        EXPECT(0xdce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdce2));
        EXPECT(0x66, gbc.readMem(0xdce3));
        // CB 66 0368
        gbc.setState(0x34c6, 0x3a93, 0x5560, 0xa42f, 0xed08, 0x5909, 0x0, 0x1);
        gbc.writeMem(0x34c6, { 0xcb, 0x66 });
        gbc.writeMem(0x5909, { 0x14 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3a93, gbc.sp());
        EXPECT(0x34c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0369
        gbc.setState(0x2241, 0x374a, 0xde40, 0x80aa, 0x5e99, 0xf1ed, 0x1, 0x0);
        gbc.writeMem(0x2241, { 0xcb, 0x66 });
        gbc.writeMem(0xf1ed, { 0xd });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x374a, gbc.sp());
        EXPECT(0x2243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xf1ed));
        // CB 66 036A
        gbc.setState(0xfba, 0x9482, 0xf200, 0xbed3, 0x94f, 0xe296, 0x0, 0x0);
        gbc.writeMem(0xfba, { 0xcb, 0x66 });
        gbc.writeMem(0xe296, { 0xd8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9482, gbc.sp());
        EXPECT(0xfbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xe296));
        // CB 66 036B
        gbc.setState(0x682c, 0xf12b, 0x55c0, 0x4efb, 0xd053, 0x19e5, 0x1, 0x0);
        gbc.writeMem(0x19e5, { 0x7 });
        gbc.writeMem(0x682c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf12b, gbc.sp());
        EXPECT(0x682e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 036C
        gbc.setState(0xe3e, 0xb132, 0x7ba0, 0xb0da, 0xc288, 0xb294, 0x1, 0x1);
        gbc.writeMem(0xe3e, { 0xcb, 0x66 });
        gbc.writeMem(0xb294, { 0x93 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb132, gbc.sp());
        EXPECT(0xe40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb294));
        // CB 66 036D
        gbc.setState(0xef2c, 0xdc0b, 0xe8d0, 0xd169, 0x5ee5, 0x4917, 0x0, 0x1);
        gbc.writeMem(0x4917, { 0x6b });
        gbc.writeMem(0xef2c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdc0b, gbc.sp());
        EXPECT(0xef2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef2c));
        EXPECT(0x66, gbc.readMem(0xef2d));
        // CB 66 036E
        gbc.setState(0xbf72, 0x20be, 0x590, 0x78e3, 0x6a5e, 0xa9ee, 0x1, 0x0);
        gbc.writeMem(0xa9ee, { 0x8e });
        gbc.writeMem(0xbf72, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x20be, gbc.sp());
        EXPECT(0xbf74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xa9ee));
        EXPECT(0xcb, gbc.readMem(0xbf72));
        EXPECT(0x66, gbc.readMem(0xbf73));
        // CB 66 036F
        gbc.setState(0x5f96, 0xa88, 0xf680, 0xf176, 0x8d2f, 0xf3d2, 0x1, 0x0);
        gbc.writeMem(0x5f96, { 0xcb, 0x66 });
        gbc.writeMem(0xf3d2, { 0x6e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa88, gbc.sp());
        EXPECT(0x5f98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xf3d2));
        // CB 66 0370
        gbc.setState(0xcc3e, 0xec5, 0x2660, 0x2600, 0xbd06, 0xab0, 0x1, 0x1);
        gbc.writeMem(0xab0, { 0x75 });
        gbc.writeMem(0xcc3e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xec5, gbc.sp());
        EXPECT(0xcc40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3e));
        EXPECT(0x66, gbc.readMem(0xcc3f));
        // CB 66 0371
        gbc.setState(0x5d89, 0x3154, 0x4270, 0x927a, 0xda18, 0xfecb, 0x0, 0x1);
        gbc.writeMem(0x5d89, { 0xcb, 0x66 });
        gbc.writeMem(0xfecb, { 0xbe });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3154, gbc.sp());
        EXPECT(0x5d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xfecb));
        // CB 66 0372
        gbc.setState(0xbdb7, 0x4a7b, 0x7080, 0x1de8, 0xc0cd, 0x1190, 0x1, 0x1);
        gbc.writeMem(0x1190, { 0x93 });
        gbc.writeMem(0xbdb7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4a7b, gbc.sp());
        EXPECT(0xbdb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb7));
        EXPECT(0x66, gbc.readMem(0xbdb8));
        // CB 66 0373
        gbc.setState(0xbb4f, 0xbb67, 0x13c0, 0x261d, 0x2054, 0xcae7, 0x0, 0x0);
        gbc.writeMem(0xbb4f, { 0xcb, 0x66 });
        gbc.writeMem(0xcae7, { 0x18 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbb67, gbc.sp());
        EXPECT(0xbb51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb4f));
        EXPECT(0x66, gbc.readMem(0xbb50));
        EXPECT(0x18, gbc.readMem(0xcae7));
        // CB 66 0374
        gbc.setState(0x646f, 0x3e4a, 0x5db0, 0x73b7, 0xc03e, 0x41cd, 0x0, 0x0);
        gbc.writeMem(0x41cd, { 0x27 });
        gbc.writeMem(0x646f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3e4a, gbc.sp());
        EXPECT(0x6471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0375
        gbc.setState(0xd987, 0xd9c7, 0x76b0, 0x9933, 0xbf8, 0x98f, 0x1, 0x0);
        gbc.writeMem(0x98f, { 0x40 });
        gbc.writeMem(0xd987, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd9c7, gbc.sp());
        EXPECT(0xd989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd987));
        EXPECT(0x66, gbc.readMem(0xd988));
        // CB 66 0376
        gbc.setState(0x9d1d, 0x95bc, 0x2310, 0x1dc8, 0x7095, 0xeb47, 0x1, 0x0);
        gbc.writeMem(0x9d1d, { 0xcb, 0x66 });
        gbc.writeMem(0xeb47, { 0x12 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x95bc, gbc.sp());
        EXPECT(0x9d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d1d));
        EXPECT(0x66, gbc.readMem(0x9d1e));
        EXPECT(0x12, gbc.readMem(0xeb47));
        // CB 66 0377
        gbc.setState(0x130, 0xecf8, 0x92e0, 0xc98f, 0x279d, 0x20ad, 0x0, 0x1);
        gbc.writeMem(0x130, { 0xcb, 0x66 });
        gbc.writeMem(0x20ad, { 0xeb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xecf8, gbc.sp());
        EXPECT(0x132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0378
        gbc.setState(0x811f, 0x6869, 0xce20, 0x9902, 0xcf74, 0x8127, 0x1, 0x1);
        gbc.writeMem(0x811f, { 0xcb, 0x66 });
        gbc.writeMem(0x8127, { 0xed });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6869, gbc.sp());
        EXPECT(0x8121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x811f));
        EXPECT(0x66, gbc.readMem(0x8120));
        EXPECT(0xed, gbc.readMem(0x8127));
        // CB 66 0379
        gbc.setState(0x71d6, 0xaca0, 0x1b10, 0xff9f, 0xd2da, 0x2daf, 0x0, 0x0);
        gbc.writeMem(0x2daf, { 0xda });
        gbc.writeMem(0x71d6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xaca0, gbc.sp());
        EXPECT(0x71d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 037A
        gbc.setState(0x8fb4, 0x9ea1, 0xfc40, 0xd76b, 0x534f, 0xff9a, 0x1, 0x1);
        gbc.writeMem(0x8fb4, { 0xcb, 0x66 });
        gbc.writeMem(0xff9a, { 0x2f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9ea1, gbc.sp());
        EXPECT(0x8fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb4));
        EXPECT(0x66, gbc.readMem(0x8fb5));
        EXPECT(0x2f, gbc.readMem(0xff9a));
        // CB 66 037C
        gbc.setState(0x61e6, 0x8983, 0x3430, 0xba78, 0x88e2, 0x7493, 0x0, 0x1);
        gbc.writeMem(0x61e6, { 0xcb, 0x66 });
        gbc.writeMem(0x7493, { 0x9a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8983, gbc.sp());
        EXPECT(0x61e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 037E
        gbc.setState(0x33a1, 0x5c4f, 0xe510, 0x138b, 0x10a9, 0x5d5c, 0x0, 0x1);
        gbc.writeMem(0x33a1, { 0xcb, 0x66 });
        gbc.writeMem(0x5d5c, { 0x26 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5c4f, gbc.sp());
        EXPECT(0x33a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 037F
        gbc.setState(0x2ca0, 0x4b99, 0xba80, 0xdbe5, 0x4256, 0x1d2f, 0x1, 0x0);
        gbc.writeMem(0x1d2f, { 0xce });
        gbc.writeMem(0x2ca0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4b99, gbc.sp());
        EXPECT(0x2ca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0380
        gbc.setState(0x73b9, 0x6e45, 0x1670, 0x9f28, 0x4a33, 0x33d1, 0x0, 0x1);
        gbc.writeMem(0x33d1, { 0xd8 });
        gbc.writeMem(0x73b9, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6e45, gbc.sp());
        EXPECT(0x73bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0381
        gbc.setState(0x7b1, 0x848f, 0xd470, 0x3743, 0x361d, 0xcd76, 0x1, 0x1);
        gbc.writeMem(0x7b1, { 0xcb, 0x66 });
        gbc.writeMem(0xcd76, { 0x53 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x848f, gbc.sp());
        EXPECT(0x7b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xcd76));
        // CB 66 0382
        gbc.setState(0xb6a4, 0x90b8, 0x94b0, 0xe8d3, 0x9155, 0x61ba, 0x0, 0x1);
        gbc.writeMem(0x61ba, { 0xeb });
        gbc.writeMem(0xb6a4, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x90b8, gbc.sp());
        EXPECT(0xb6a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6a4));
        EXPECT(0x66, gbc.readMem(0xb6a5));
        // CB 66 0383
        gbc.setState(0xdc86, 0xc788, 0xde0, 0x4a62, 0xcac5, 0x1ee6, 0x0, 0x0);
        gbc.writeMem(0x1ee6, { 0x3d });
        gbc.writeMem(0xdc86, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc788, gbc.sp());
        EXPECT(0xdc88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc86));
        EXPECT(0x66, gbc.readMem(0xdc87));
        // CB 66 0384
        gbc.setState(0x7afe, 0xd50b, 0xcb40, 0x58f, 0xe1bb, 0xcf0c, 0x0, 0x1);
        gbc.writeMem(0x7afe, { 0xcb, 0x66 });
        gbc.writeMem(0xcf0c, { 0x2b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd50b, gbc.sp());
        EXPECT(0x7b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcf0c));
        // CB 66 0385
        gbc.setState(0x22d8, 0x937, 0x6bb0, 0x964f, 0xd268, 0x7755, 0x0, 0x0);
        gbc.writeMem(0x22d8, { 0xcb, 0x66 });
        gbc.writeMem(0x7755, { 0x96 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x937, gbc.sp());
        EXPECT(0x22da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0386
        gbc.setState(0x9955, 0x266a, 0xf930, 0x547d, 0x2854, 0x9bf5, 0x0, 0x0);
        gbc.writeMem(0x9955, { 0xcb, 0x66 });
        gbc.writeMem(0x9bf5, { 0x17 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x266a, gbc.sp());
        EXPECT(0x9957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9955));
        EXPECT(0x66, gbc.readMem(0x9956));
        EXPECT(0x17, gbc.readMem(0x9bf5));
        // CB 66 0387
        gbc.setState(0xa734, 0x8ac1, 0x9180, 0x8e74, 0x96c3, 0x8f6c, 0x0, 0x0);
        gbc.writeMem(0x8f6c, { 0x4e });
        gbc.writeMem(0xa734, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8ac1, gbc.sp());
        EXPECT(0xa736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8f6c));
        EXPECT(0xcb, gbc.readMem(0xa734));
        EXPECT(0x66, gbc.readMem(0xa735));
        // CB 66 0388
        gbc.setState(0x11dd, 0x4b4c, 0x6e30, 0xf688, 0xac2f, 0x2d35, 0x0, 0x1);
        gbc.writeMem(0x11dd, { 0xcb, 0x66 });
        gbc.writeMem(0x2d35, { 0x36 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4b4c, gbc.sp());
        EXPECT(0x11df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 0389
        gbc.setState(0x56b3, 0x30b3, 0x6070, 0x1983, 0xed8e, 0x41d1, 0x1, 0x1);
        gbc.writeMem(0x41d1, { 0x6f });
        gbc.writeMem(0x56b3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x30b3, gbc.sp());
        EXPECT(0x56b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 038A
        gbc.setState(0xbd49, 0x4841, 0xc370, 0xb9c2, 0x1c0, 0x1b9e, 0x1, 0x1);
        gbc.writeMem(0x1b9e, { 0xb3 });
        gbc.writeMem(0xbd49, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4841, gbc.sp());
        EXPECT(0xbd4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd49));
        EXPECT(0x66, gbc.readMem(0xbd4a));
        // CB 66 038B
        gbc.setState(0x4b4c, 0x8fed, 0xfbf0, 0x9493, 0x8b49, 0x6024, 0x1, 0x1);
        gbc.writeMem(0x4b4c, { 0xcb, 0x66 });
        gbc.writeMem(0x6024, { 0x19 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8fed, gbc.sp());
        EXPECT(0x4b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 038C
        gbc.setState(0x261f, 0x8173, 0xb460, 0x1fd2, 0xf1a8, 0x1ba4, 0x0, 0x1);
        gbc.writeMem(0x1ba4, { 0x75 });
        gbc.writeMem(0x261f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8173, gbc.sp());
        EXPECT(0x2621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 038D
        gbc.setState(0x7f0a, 0xeb7f, 0xa0, 0x8ddf, 0xc7e0, 0x9b0b, 0x1, 0x1);
        gbc.writeMem(0x7f0a, { 0xcb, 0x66 });
        gbc.writeMem(0x9b0b, { 0x8f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xeb7f, gbc.sp());
        EXPECT(0x7f0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9b0b));
        // CB 66 038F
        gbc.setState(0xe511, 0xfbe1, 0x9430, 0x9406, 0x553e, 0x5840, 0x0, 0x0);
        gbc.writeMem(0x5840, { 0x76 });
        gbc.writeMem(0xe511, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfbe1, gbc.sp());
        EXPECT(0xe513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe511));
        EXPECT(0x66, gbc.readMem(0xe512));
        // CB 66 0390
        gbc.setState(0x3b95, 0x875a, 0x61a0, 0x435e, 0x9187, 0x7874, 0x0, 0x1);
        gbc.writeMem(0x3b95, { 0xcb, 0x66 });
        gbc.writeMem(0x7874, { 0x76 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x875a, gbc.sp());
        EXPECT(0x3b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0391
        gbc.setState(0x4a50, 0xdf0d, 0x5340, 0x25f9, 0x58e7, 0x7190, 0x1, 0x0);
        gbc.writeMem(0x4a50, { 0xcb, 0x66 });
        gbc.writeMem(0x7190, { 0x55 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdf0d, gbc.sp());
        EXPECT(0x4a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0392
        gbc.setState(0x59d0, 0x4fab, 0x81a0, 0xd567, 0xa440, 0x320f, 0x1, 0x1);
        gbc.writeMem(0x320f, { 0xc6 });
        gbc.writeMem(0x59d0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4fab, gbc.sp());
        EXPECT(0x59d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0393
        gbc.setState(0xd179, 0xf81b, 0xfac0, 0x7ac5, 0x8790, 0x34c6, 0x0, 0x1);
        gbc.writeMem(0x34c6, { 0xe7 });
        gbc.writeMem(0xd179, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf81b, gbc.sp());
        EXPECT(0xd17b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd179));
        EXPECT(0x66, gbc.readMem(0xd17a));
        // CB 66 0394
        gbc.setState(0xae4a, 0xe02b, 0x4bb0, 0xd11c, 0x413a, 0xf3b9, 0x1, 0x1);
        gbc.writeMem(0xae4a, { 0xcb, 0x66 });
        gbc.writeMem(0xf3b9, { 0xbf });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe02b, gbc.sp());
        EXPECT(0xae4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae4a));
        EXPECT(0x66, gbc.readMem(0xae4b));
        EXPECT(0xbf, gbc.readMem(0xf3b9));
        // CB 66 0396
        gbc.setState(0x4b93, 0x75c2, 0x6d60, 0x56a, 0xd24a, 0x6265, 0x0, 0x1);
        gbc.writeMem(0x4b93, { 0xcb, 0x66 });
        gbc.writeMem(0x6265, { 0xe8 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x75c2, gbc.sp());
        EXPECT(0x4b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 0397
        gbc.setState(0xe2a6, 0x5c, 0xbed0, 0x4e4d, 0x802e, 0x6fc, 0x1, 0x0);
        gbc.writeMem(0x6fc, { 0xf9 });
        gbc.writeMem(0xe2a6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5c, gbc.sp());
        EXPECT(0xe2a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a6));
        EXPECT(0x66, gbc.readMem(0xe2a7));
        // CB 66 0398
        gbc.setState(0x6e3, 0x20de, 0x26b0, 0x3d58, 0x16b7, 0x8d6e, 0x0, 0x0);
        gbc.writeMem(0x6e3, { 0xcb, 0x66 });
        gbc.writeMem(0x8d6e, { 0x57 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x20de, gbc.sp());
        EXPECT(0x6e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8d6e));
        // CB 66 0399
        gbc.setState(0x967e, 0x3434, 0xe790, 0x208a, 0xe15f, 0xc9f7, 0x1, 0x0);
        gbc.writeMem(0x967e, { 0xcb, 0x66 });
        gbc.writeMem(0xc9f7, { 0x73 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3434, gbc.sp());
        EXPECT(0x9680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x967e));
        EXPECT(0x66, gbc.readMem(0x967f));
        EXPECT(0x73, gbc.readMem(0xc9f7));
        // CB 66 039A
        gbc.setState(0x6174, 0xbf7b, 0x9d0, 0xc27d, 0xca23, 0xb905, 0x0, 0x1);
        gbc.writeMem(0x6174, { 0xcb, 0x66 });
        gbc.writeMem(0xb905, { 0x7a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbf7b, gbc.sp());
        EXPECT(0x6176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb905));
        // CB 66 039B
        gbc.setState(0xb81a, 0x6cad, 0xb5a0, 0xccdb, 0xee95, 0x70cd, 0x0, 0x1);
        gbc.writeMem(0x70cd, { 0x1d });
        gbc.writeMem(0xb81a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6cad, gbc.sp());
        EXPECT(0xb81c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb81a));
        EXPECT(0x66, gbc.readMem(0xb81b));
        // CB 66 039C
        gbc.setState(0xc873, 0xc1a2, 0xe530, 0xd378, 0x5ac1, 0xf537, 0x1, 0x0);
        gbc.writeMem(0xc873, { 0xcb, 0x66 });
        gbc.writeMem(0xf537, { 0x9c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc1a2, gbc.sp());
        EXPECT(0xc875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc873));
        EXPECT(0x66, gbc.readMem(0xc874));
        EXPECT(0x9c, gbc.readMem(0xf537));
        // CB 66 039D
        gbc.setState(0x1896, 0x60ad, 0x1ff0, 0x3d81, 0x2e42, 0x2f5e, 0x1, 0x0);
        gbc.writeMem(0x1896, { 0xcb, 0x66 });
        gbc.writeMem(0x2f5e, { 0xaf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x60ad, gbc.sp());
        EXPECT(0x1898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 039E
        gbc.setState(0xb45c, 0xd1cd, 0x6d90, 0xdd11, 0x441e, 0x4fc7, 0x0, 0x1);
        gbc.writeMem(0x4fc7, { 0xfd });
        gbc.writeMem(0xb45c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd1cd, gbc.sp());
        EXPECT(0xb45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb45c));
        EXPECT(0x66, gbc.readMem(0xb45d));
        // CB 66 039F
        gbc.setState(0xcab9, 0xc076, 0x6c30, 0x8a39, 0x569d, 0xc6c2, 0x0, 0x1);
        gbc.writeMem(0xc6c2, { 0xd1 });
        gbc.writeMem(0xcab9, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc076, gbc.sp());
        EXPECT(0xcabb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xc6c2));
        EXPECT(0xcb, gbc.readMem(0xcab9));
        EXPECT(0x66, gbc.readMem(0xcaba));
        // CB 66 03A0
        gbc.setState(0x8f13, 0xa84b, 0xf2d0, 0x5c20, 0xff64, 0xdc7d, 0x1, 0x0);
        gbc.writeMem(0x8f13, { 0xcb, 0x66 });
        gbc.writeMem(0xdc7d, { 0xa1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa84b, gbc.sp());
        EXPECT(0x8f15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f13));
        EXPECT(0x66, gbc.readMem(0x8f14));
        EXPECT(0xa1, gbc.readMem(0xdc7d));
        // CB 66 03A1
        gbc.setState(0xa849, 0x1419, 0x580, 0x6fc4, 0x40cf, 0x675b, 0x0, 0x0);
        gbc.writeMem(0x675b, { 0x3d });
        gbc.writeMem(0xa849, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1419, gbc.sp());
        EXPECT(0xa84b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa849));
        EXPECT(0x66, gbc.readMem(0xa84a));
        // CB 66 03A2
        gbc.setState(0x5984, 0x2106, 0xea30, 0xa8c2, 0x8b23, 0xa063, 0x1, 0x1);
        gbc.writeMem(0x5984, { 0xcb, 0x66 });
        gbc.writeMem(0xa063, { 0xeb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2106, gbc.sp());
        EXPECT(0x5986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xa063));
        // CB 66 03A3
        gbc.setState(0x4630, 0xc11, 0x9e80, 0xc106, 0xff42, 0x79af, 0x0, 0x1);
        gbc.writeMem(0x4630, { 0xcb, 0x66 });
        gbc.writeMem(0x79af, { 0x60 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc11, gbc.sp());
        EXPECT(0x4632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 03A4
        gbc.setState(0x9a17, 0xed4c, 0x5820, 0x4609, 0x65c6, 0xe303, 0x0, 0x0);
        gbc.writeMem(0x9a17, { 0xcb, 0x66 });
        gbc.writeMem(0xe303, { 0x62 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xed4c, gbc.sp());
        EXPECT(0x9a19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a17));
        EXPECT(0x66, gbc.readMem(0x9a18));
        EXPECT(0x62, gbc.readMem(0xe303));
        // CB 66 03A5
        gbc.setState(0x63e0, 0xca1d, 0x1030, 0x72a6, 0x495b, 0xd38f, 0x0, 0x1);
        gbc.writeMem(0x63e0, { 0xcb, 0x66 });
        gbc.writeMem(0xd38f, { 0x91 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xca1d, gbc.sp());
        EXPECT(0x63e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd38f));
        // CB 66 03A6
        gbc.setState(0x2bf2, 0x73e3, 0x6210, 0xa49, 0xa2f0, 0x12ba, 0x0, 0x0);
        gbc.writeMem(0x12ba, { 0x65 });
        gbc.writeMem(0x2bf2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x73e3, gbc.sp());
        EXPECT(0x2bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 03A7
        gbc.setState(0x5c03, 0xd3ed, 0x53c0, 0xdf3e, 0xf548, 0x72aa, 0x1, 0x1);
        gbc.writeMem(0x5c03, { 0xcb, 0x66 });
        gbc.writeMem(0x72aa, { 0x33 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd3ed, gbc.sp());
        EXPECT(0x5c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 03A8
        gbc.setState(0xcd56, 0x9692, 0x6a50, 0xdb58, 0xf5f9, 0x9f48, 0x1, 0x0);
        gbc.writeMem(0x9f48, { 0xb });
        gbc.writeMem(0xcd56, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9692, gbc.sp());
        EXPECT(0xcd58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9f48));
        EXPECT(0xcb, gbc.readMem(0xcd56));
        EXPECT(0x66, gbc.readMem(0xcd57));
        // CB 66 03A9
        gbc.setState(0xef56, 0x6164, 0x5cd0, 0x5756, 0x4571, 0x84f3, 0x1, 0x0);
        gbc.writeMem(0x84f3, { 0xc1 });
        gbc.writeMem(0xef56, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6164, gbc.sp());
        EXPECT(0xef58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x84f3));
        EXPECT(0xcb, gbc.readMem(0xef56));
        EXPECT(0x66, gbc.readMem(0xef57));
        // CB 66 03AA
        gbc.setState(0x50c5, 0x7511, 0x3700, 0x1454, 0x156a, 0x45a4, 0x1, 0x1);
        gbc.writeMem(0x45a4, { 0x6 });
        gbc.writeMem(0x50c5, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7511, gbc.sp());
        EXPECT(0x50c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 03AB
        gbc.setState(0x2645, 0xb7bb, 0x1760, 0x58a9, 0x784, 0xcd7a, 0x0, 0x1);
        gbc.writeMem(0x2645, { 0xcb, 0x66 });
        gbc.writeMem(0xcd7a, { 0xa5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb7bb, gbc.sp());
        EXPECT(0x2647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xcd7a));
        // CB 66 03AC
        gbc.setState(0x4e73, 0xadf8, 0xad30, 0xea84, 0xad64, 0x363f, 0x0, 0x1);
        gbc.writeMem(0x363f, { 0xcb });
        gbc.writeMem(0x4e73, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xadf8, gbc.sp());
        EXPECT(0x4e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 03AE
        gbc.setState(0xe60, 0x9523, 0x1920, 0x5bc3, 0x64e3, 0x8276, 0x0, 0x0);
        gbc.writeMem(0xe60, { 0xcb, 0x66 });
        gbc.writeMem(0x8276, { 0x44 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9523, gbc.sp());
        EXPECT(0xe62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8276));
        // CB 66 03AF
        gbc.setState(0xa0f3, 0xe8b3, 0x30, 0x180d, 0xddec, 0xd4b5, 0x1, 0x1);
        gbc.writeMem(0xa0f3, { 0xcb, 0x66 });
        gbc.writeMem(0xd4b5, { 0x57 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe8b3, gbc.sp());
        EXPECT(0xa0f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f3));
        EXPECT(0x66, gbc.readMem(0xa0f4));
        EXPECT(0x57, gbc.readMem(0xd4b5));
        // CB 66 03B0
        gbc.setState(0xd3ff, 0x2fd1, 0x1150, 0x8f27, 0xf585, 0x90f6, 0x0, 0x0);
        gbc.writeMem(0x90f6, { 0x48 });
        gbc.writeMem(0xd3ff, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2fd1, gbc.sp());
        EXPECT(0xd401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x90f6));
        EXPECT(0xcb, gbc.readMem(0xd3ff));
        EXPECT(0x66, gbc.readMem(0xd400));
        // CB 66 03B1
        gbc.setState(0x637d, 0xff31, 0x5150, 0xb921, 0xd943, 0x3444, 0x0, 0x1);
        gbc.writeMem(0x3444, { 0x46 });
        gbc.writeMem(0x637d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xff31, gbc.sp());
        EXPECT(0x637f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 03B2
        gbc.setState(0x841c, 0x328c, 0xbee0, 0xa3d0, 0x4133, 0xd6fb, 0x1, 0x0);
        gbc.writeMem(0x841c, { 0xcb, 0x66 });
        gbc.writeMem(0xd6fb, { 0x47 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x328c, gbc.sp());
        EXPECT(0x841e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x841c));
        EXPECT(0x66, gbc.readMem(0x841d));
        EXPECT(0x47, gbc.readMem(0xd6fb));
        // CB 66 03B3
        gbc.setState(0x344d, 0xf344, 0xb660, 0x3c73, 0x422b, 0xaa80, 0x1, 0x0);
        gbc.writeMem(0x344d, { 0xcb, 0x66 });
        gbc.writeMem(0xaa80, { 0xc6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf344, gbc.sp());
        EXPECT(0x344f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xaa80));
        // CB 66 03B4
        gbc.setState(0xc150, 0xc6e4, 0x5f90, 0x61ce, 0xca06, 0xafa7, 0x1, 0x0);
        gbc.writeMem(0xafa7, { 0x23 });
        gbc.writeMem(0xc150, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc6e4, gbc.sp());
        EXPECT(0xc152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xafa7));
        EXPECT(0xcb, gbc.readMem(0xc150));
        EXPECT(0x66, gbc.readMem(0xc151));
        // CB 66 03B5
        gbc.setState(0x7d26, 0x782b, 0x900, 0xaf7, 0x31b0, 0x69c4, 0x1, 0x0);
        gbc.writeMem(0x69c4, { 0x35 });
        gbc.writeMem(0x7d26, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x782b, gbc.sp());
        EXPECT(0x7d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 03B6
        gbc.setState(0x88d4, 0x8bb0, 0x98c0, 0x3cbf, 0xcdb8, 0x9b3f, 0x0, 0x1);
        gbc.writeMem(0x88d4, { 0xcb, 0x66 });
        gbc.writeMem(0x9b3f, { 0x82 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8bb0, gbc.sp());
        EXPECT(0x88d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88d4));
        EXPECT(0x66, gbc.readMem(0x88d5));
        EXPECT(0x82, gbc.readMem(0x9b3f));
        // CB 66 03B7
        gbc.setState(0x75f1, 0xa11f, 0xa3d0, 0x2d55, 0x60ea, 0x45a9, 0x0, 0x0);
        gbc.writeMem(0x45a9, { 0xab });
        gbc.writeMem(0x75f1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa11f, gbc.sp());
        EXPECT(0x75f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 03B8
        gbc.setState(0xabd3, 0x6cfb, 0x80d0, 0xc7be, 0x9c9d, 0x2461, 0x1, 0x0);
        gbc.writeMem(0x2461, { 0xc7 });
        gbc.writeMem(0xabd3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6cfb, gbc.sp());
        EXPECT(0xabd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd3));
        EXPECT(0x66, gbc.readMem(0xabd4));
        // CB 66 03B9
        gbc.setState(0xe472, 0x199a, 0x4400, 0xcd27, 0x7628, 0x603c, 0x1, 0x0);
        gbc.writeMem(0x603c, { 0xd2 });
        gbc.writeMem(0xe472, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x199a, gbc.sp());
        EXPECT(0xe474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe472));
        EXPECT(0x66, gbc.readMem(0xe473));
        // CB 66 03BA
        gbc.setState(0xcea1, 0xe524, 0xd660, 0x13ff, 0x302f, 0x7d96, 0x1, 0x0);
        gbc.writeMem(0x7d96, { 0xda });
        gbc.writeMem(0xcea1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe524, gbc.sp());
        EXPECT(0xcea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea1));
        EXPECT(0x66, gbc.readMem(0xcea2));
        // CB 66 03BB
        gbc.setState(0xd88, 0x8d12, 0x8c20, 0xc1b5, 0xad51, 0x1435, 0x1, 0x1);
        gbc.writeMem(0xd88, { 0xcb, 0x66 });
        gbc.writeMem(0x1435, { 0x3d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8d12, gbc.sp());
        EXPECT(0xd8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 03BC
        gbc.setState(0xb81c, 0x4a2f, 0x8040, 0x9c12, 0x8d90, 0x4b9d, 0x0, 0x0);
        gbc.writeMem(0x4b9d, { 0x23 });
        gbc.writeMem(0xb81c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4a2f, gbc.sp());
        EXPECT(0xb81e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb81c));
        EXPECT(0x66, gbc.readMem(0xb81d));
        // CB 66 03BD
        gbc.setState(0xd4e5, 0x4e23, 0x75e0, 0xa8ae, 0xfb6b, 0x9c7, 0x0, 0x1);
        gbc.writeMem(0x9c7, { 0x7 });
        gbc.writeMem(0xd4e5, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4e23, gbc.sp());
        EXPECT(0xd4e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4e5));
        EXPECT(0x66, gbc.readMem(0xd4e6));
        // CB 66 03BE
        gbc.setState(0xcbf9, 0x8cb0, 0xb860, 0xac11, 0xc236, 0x186a, 0x0, 0x0);
        gbc.writeMem(0x186a, { 0x27 });
        gbc.writeMem(0xcbf9, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8cb0, gbc.sp());
        EXPECT(0xcbfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbf9));
        EXPECT(0x66, gbc.readMem(0xcbfa));
        // CB 66 03BF
        gbc.setState(0x9540, 0x9408, 0x7780, 0x24dd, 0xff20, 0x4325, 0x0, 0x1);
        gbc.writeMem(0x4325, { 0x8f });
        gbc.writeMem(0x9540, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9408, gbc.sp());
        EXPECT(0x9542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9540));
        EXPECT(0x66, gbc.readMem(0x9541));
        // CB 66 03C0
        gbc.setState(0xd984, 0xfa5c, 0x8e80, 0x7e14, 0x58a8, 0x9ac9, 0x1, 0x0);
        gbc.writeMem(0x9ac9, { 0xc8 });
        gbc.writeMem(0xd984, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfa5c, gbc.sp());
        EXPECT(0xd986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9ac9));
        EXPECT(0xcb, gbc.readMem(0xd984));
        EXPECT(0x66, gbc.readMem(0xd985));
        // CB 66 03C1
        gbc.setState(0x35c6, 0x6733, 0xbe20, 0x8752, 0x6df9, 0xfe8f, 0x1, 0x1);
        gbc.writeMem(0x35c6, { 0xcb, 0x66 });
        gbc.writeMem(0xfe8f, { 0x29 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6733, gbc.sp());
        EXPECT(0x35c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xfe8f));
        // CB 66 03C2
        gbc.setState(0x5a46, 0xff18, 0xb9e0, 0x5cba, 0xe4d3, 0x1d43, 0x1, 0x0);
        gbc.writeMem(0x1d43, { 0x2f });
        gbc.writeMem(0x5a46, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xff18, gbc.sp());
        EXPECT(0x5a48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 03C3
        gbc.setState(0x7b03, 0xefb5, 0x1500, 0xf3c4, 0xdeaf, 0x4f4c, 0x0, 0x1);
        gbc.writeMem(0x4f4c, { 0xce });
        gbc.writeMem(0x7b03, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xefb5, gbc.sp());
        EXPECT(0x7b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 03C4
        gbc.setState(0xa2e6, 0x59ea, 0xb190, 0x4795, 0x2b9c, 0xadf, 0x1, 0x0);
        gbc.writeMem(0xadf, { 0xe4 });
        gbc.writeMem(0xa2e6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x59ea, gbc.sp());
        EXPECT(0xa2e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e6));
        EXPECT(0x66, gbc.readMem(0xa2e7));
        // CB 66 03C5
        gbc.setState(0xb491, 0x1482, 0x7b10, 0xd41d, 0x10ff, 0x6ef7, 0x1, 0x1);
        gbc.writeMem(0x6ef7, { 0x6a });
        gbc.writeMem(0xb491, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1482, gbc.sp());
        EXPECT(0xb493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb491));
        EXPECT(0x66, gbc.readMem(0xb492));
        // CB 66 03C6
        gbc.setState(0xca94, 0x204f, 0x3860, 0x4e6d, 0xb028, 0x4e96, 0x0, 0x1);
        gbc.writeMem(0x4e96, { 0xdc });
        gbc.writeMem(0xca94, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x204f, gbc.sp());
        EXPECT(0xca96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca94));
        EXPECT(0x66, gbc.readMem(0xca95));
        // CB 66 03C7
        gbc.setState(0x7c5f, 0x5da6, 0x5600, 0x8c2, 0x7d2b, 0x370f, 0x0, 0x0);
        gbc.writeMem(0x370f, { 0xb });
        gbc.writeMem(0x7c5f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5da6, gbc.sp());
        EXPECT(0x7c61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 03C8
        gbc.setState(0x7107, 0x96b0, 0xcc30, 0x2ad0, 0xfffe, 0x72e6, 0x0, 0x0);
        gbc.writeMem(0x7107, { 0xcb, 0x66 });
        gbc.writeMem(0x72e6, { 0x8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x96b0, gbc.sp());
        EXPECT(0x7109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 03C9
        gbc.setState(0x7a43, 0x28c1, 0xe3e0, 0xe2ee, 0x57df, 0xad40, 0x1, 0x0);
        gbc.writeMem(0x7a43, { 0xcb, 0x66 });
        gbc.writeMem(0xad40, { 0x93 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x28c1, gbc.sp());
        EXPECT(0x7a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xad40));
        // CB 66 03CA
        gbc.setState(0xeb2a, 0xb71b, 0x1b10, 0xdd77, 0xd4db, 0x5fe, 0x0, 0x0);
        gbc.writeMem(0x5fe, { 0x17 });
        gbc.writeMem(0xeb2a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb71b, gbc.sp());
        EXPECT(0xeb2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb2a));
        EXPECT(0x66, gbc.readMem(0xeb2b));
        // CB 66 03CB
        gbc.setState(0x9b57, 0x834a, 0x58a0, 0x3063, 0x5f61, 0xfb2f, 0x0, 0x1);
        gbc.writeMem(0x9b57, { 0xcb, 0x66 });
        gbc.writeMem(0xfb2f, { 0x53 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x834a, gbc.sp());
        EXPECT(0x9b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b57));
        EXPECT(0x66, gbc.readMem(0x9b58));
        EXPECT(0x53, gbc.readMem(0xfb2f));
        // CB 66 03CC
        gbc.setState(0xc316, 0x3efe, 0xfac0, 0x43ff, 0x4347, 0x9bfb, 0x0, 0x0);
        gbc.writeMem(0x9bfb, { 0x4 });
        gbc.writeMem(0xc316, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3efe, gbc.sp());
        EXPECT(0xc318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9bfb));
        EXPECT(0xcb, gbc.readMem(0xc316));
        EXPECT(0x66, gbc.readMem(0xc317));
        // CB 66 03CD
        gbc.setState(0xe490, 0x1768, 0xbc90, 0x9947, 0xec4c, 0x79eb, 0x0, 0x1);
        gbc.writeMem(0x79eb, { 0x6e });
        gbc.writeMem(0xe490, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1768, gbc.sp());
        EXPECT(0xe492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe490));
        EXPECT(0x66, gbc.readMem(0xe491));
        // CB 66 03CE
        gbc.setState(0x426d, 0x361a, 0xe620, 0xb395, 0x785a, 0xbb8b, 0x1, 0x0);
        gbc.writeMem(0x426d, { 0xcb, 0x66 });
        gbc.writeMem(0xbb8b, { 0x41 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x361a, gbc.sp());
        EXPECT(0x426f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xbb8b));
        // CB 66 03D0
        gbc.setState(0x1208, 0x44de, 0xa060, 0x8a17, 0xe610, 0x651, 0x1, 0x1);
        gbc.writeMem(0x651, { 0x5b });
        gbc.writeMem(0x1208, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x44de, gbc.sp());
        EXPECT(0x120a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 03D1
        gbc.setState(0xb934, 0x8ef2, 0x6ec0, 0x86a4, 0x45bc, 0xc7ae, 0x0, 0x1);
        gbc.writeMem(0xb934, { 0xcb, 0x66 });
        gbc.writeMem(0xc7ae, { 0x6d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8ef2, gbc.sp());
        EXPECT(0xb936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb934));
        EXPECT(0x66, gbc.readMem(0xb935));
        EXPECT(0x6d, gbc.readMem(0xc7ae));
        // CB 66 03D2
        gbc.setState(0x56b5, 0x74ad, 0xfc30, 0x9a03, 0x2ea9, 0xe9a7, 0x0, 0x0);
        gbc.writeMem(0x56b5, { 0xcb, 0x66 });
        gbc.writeMem(0xe9a7, { 0x23 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x74ad, gbc.sp());
        EXPECT(0x56b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xe9a7));
        // CB 66 03D3
        gbc.setState(0xebda, 0x3cfb, 0xafb0, 0xba25, 0x44c8, 0x58be, 0x1, 0x0);
        gbc.writeMem(0x58be, { 0x4c });
        gbc.writeMem(0xebda, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3cfb, gbc.sp());
        EXPECT(0xebdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebda));
        EXPECT(0x66, gbc.readMem(0xebdb));
        // CB 66 03D4
        gbc.setState(0xe650, 0x5bce, 0x6770, 0x2a5e, 0x573e, 0x6fa0, 0x1, 0x1);
        gbc.writeMem(0x6fa0, { 0x2b });
        gbc.writeMem(0xe650, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5bce, gbc.sp());
        EXPECT(0xe652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe650));
        EXPECT(0x66, gbc.readMem(0xe651));
        // CB 66 03D6
        gbc.setState(0xb2b6, 0x2ffa, 0xa260, 0x79e8, 0x5c3c, 0xc819, 0x1, 0x1);
        gbc.writeMem(0xb2b6, { 0xcb, 0x66 });
        gbc.writeMem(0xc819, { 0x4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2ffa, gbc.sp());
        EXPECT(0xb2b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b6));
        EXPECT(0x66, gbc.readMem(0xb2b7));
        EXPECT(0x4, gbc.readMem(0xc819));
        // CB 66 03D7
        gbc.setState(0xd838, 0x845, 0x6890, 0x1548, 0x19f1, 0xb12, 0x0, 0x1);
        gbc.writeMem(0xb12, { 0x3 });
        gbc.writeMem(0xd838, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x845, gbc.sp());
        EXPECT(0xd83a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd838));
        EXPECT(0x66, gbc.readMem(0xd839));
        // CB 66 03D8
        gbc.setState(0x3ca, 0x9a98, 0x3f40, 0x7935, 0x8bce, 0xdaf6, 0x0, 0x1);
        gbc.writeMem(0x3ca, { 0xcb, 0x66 });
        gbc.writeMem(0xdaf6, { 0x90 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9a98, gbc.sp());
        EXPECT(0x3cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xdaf6));
        // CB 66 03D9
        gbc.setState(0x5e39, 0x16b4, 0x6600, 0x61ef, 0x1600, 0x2d04, 0x1, 0x0);
        gbc.writeMem(0x2d04, { 0x74 });
        gbc.writeMem(0x5e39, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x16b4, gbc.sp());
        EXPECT(0x5e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 03DA
        gbc.setState(0x8aa7, 0xe210, 0x2460, 0x38f8, 0x31f9, 0xa378, 0x1, 0x0);
        gbc.writeMem(0x8aa7, { 0xcb, 0x66 });
        gbc.writeMem(0xa378, { 0xd9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe210, gbc.sp());
        EXPECT(0x8aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa7));
        EXPECT(0x66, gbc.readMem(0x8aa8));
        EXPECT(0xd9, gbc.readMem(0xa378));
        // CB 66 03DB
        gbc.setState(0x77a0, 0x17fb, 0x3aa0, 0x475a, 0xffbd, 0x8f90, 0x0, 0x0);
        gbc.writeMem(0x77a0, { 0xcb, 0x66 });
        gbc.writeMem(0x8f90, { 0xfc });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x17fb, gbc.sp());
        EXPECT(0x77a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0x8f90));
        // CB 66 03DC
        gbc.setState(0x6ded, 0xdd72, 0x630, 0xe552, 0xe8f8, 0x8974, 0x0, 0x1);
        gbc.writeMem(0x6ded, { 0xcb, 0x66 });
        gbc.writeMem(0x8974, { 0x9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xdd72, gbc.sp());
        EXPECT(0x6def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8974));
        // CB 66 03DD
        gbc.setState(0x795a, 0x8830, 0xd760, 0x5cf0, 0xf60d, 0x76a7, 0x1, 0x0);
        gbc.writeMem(0x76a7, { 0xff });
        gbc.writeMem(0x795a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8830, gbc.sp());
        EXPECT(0x795c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 66 03DE
        gbc.setState(0xa533, 0xd574, 0x2a00, 0x4376, 0xee1b, 0xf2ca, 0x0, 0x0);
        gbc.writeMem(0xa533, { 0xcb, 0x66 });
        gbc.writeMem(0xf2ca, { 0x7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd574, gbc.sp());
        EXPECT(0xa535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa533));
        EXPECT(0x66, gbc.readMem(0xa534));
        EXPECT(0x7, gbc.readMem(0xf2ca));
        // CB 66 03DF
        gbc.setState(0xced1, 0xfd77, 0x5fa0, 0xf043, 0x5467, 0x33e3, 0x0, 0x0);
        gbc.writeMem(0x33e3, { 0x6d });
        gbc.writeMem(0xced1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfd77, gbc.sp());
        EXPECT(0xced3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xced1));
        EXPECT(0x66, gbc.readMem(0xced2));
        // CB 66 03E0
        gbc.setState(0xe01, 0x6c6d, 0xa6d0, 0x199b, 0x70b9, 0x41ab, 0x1, 0x1);
        gbc.writeMem(0xe01, { 0xcb, 0x66 });
        gbc.writeMem(0x41ab, { 0x6c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6c6d, gbc.sp());
        EXPECT(0xe03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 66 03E1
        gbc.setState(0xd40b, 0x2841, 0x9420, 0x8f98, 0xb406, 0x40cd, 0x0, 0x0);
        gbc.writeMem(0x40cd, { 0xf4 });
        gbc.writeMem(0xd40b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2841, gbc.sp());
        EXPECT(0xd40d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd40b));
        EXPECT(0x66, gbc.readMem(0xd40c));
        // CB 66 03E2
        gbc.setState(0x83f4, 0x8e58, 0x36c0, 0xd0d5, 0xf967, 0x917f, 0x1, 0x0);
        gbc.writeMem(0x83f4, { 0xcb, 0x66 });
        gbc.writeMem(0x917f, { 0xba });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8e58, gbc.sp());
        EXPECT(0x83f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83f4));
        EXPECT(0x66, gbc.readMem(0x83f5));
        EXPECT(0xba, gbc.readMem(0x917f));
        // CB 66 03E3
        gbc.setState(0x659, 0xae4, 0xe60, 0x9a8d, 0x6a9d, 0x88cb, 0x0, 0x0);
        gbc.writeMem(0x659, { 0xcb, 0x66 });
        gbc.writeMem(0x88cb, { 0x2a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xae4, gbc.sp());
        EXPECT(0x65b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x88cb));
        // CB 66 03E4
        gbc.setState(0x1350, 0x9c5f, 0x81d0, 0x8812, 0xfb49, 0x8ce1, 0x0, 0x0);
        gbc.writeMem(0x1350, { 0xcb, 0x66 });
        gbc.writeMem(0x8ce1, { 0xa9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9c5f, gbc.sp());
        EXPECT(0x1352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x8ce1));
        // CB 66 03E6
        gbc.setState(0x20f0, 0xc56a, 0x6390, 0x13a, 0xa211, 0xa8d1, 0x0, 0x0);
        gbc.writeMem(0x20f0, { 0xcb, 0x66 });
        gbc.writeMem(0xa8d1, { 0x85 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc56a, gbc.sp());
        EXPECT(0x20f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa8d1));
        // CB 66 03E7
        gbc.setState(0xaa71, 0x3248, 0x9ff0, 0x80df, 0xa5cd, 0xa75d, 0x1, 0x1);
        gbc.writeMem(0xa75d, { 0xed });
        gbc.writeMem(0xaa71, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3248, gbc.sp());
        EXPECT(0xaa73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xa75d));
        EXPECT(0xcb, gbc.readMem(0xaa71));
        EXPECT(0x66, gbc.readMem(0xaa72));
    }
