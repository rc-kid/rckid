    TEST(gbcemu, opcode_cb_1d) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 1D 0000
        gbc.setState(0xebb9, 0xf868, 0xf050, 0xf910, 0xf457, 0xb953, 0x1, 0x1);
        gbc.writeMem(0xebb9, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf868, gbc.sp());
        EXPECT(0xebbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb9));
        EXPECT(0x1d, gbc.readMem(0xebba));
        // CB 1D 0001
        gbc.setState(0x3c55, 0xb4, 0x1550, 0xe0e2, 0x9a4a, 0x5369, 0x0, 0x0);
        gbc.writeMem(0x3c55, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb4, gbc.sp());
        EXPECT(0x3c57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0002
        gbc.setState(0x791, 0xf1, 0xb960, 0x4a96, 0x99cd, 0xfa33, 0x1, 0x0);
        gbc.writeMem(0x791, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf1, gbc.sp());
        EXPECT(0x793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0003
        gbc.setState(0x5be0, 0xbec3, 0x7d10, 0x2cf4, 0xf19d, 0x8ba0, 0x1, 0x1);
        gbc.writeMem(0x5be0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbec3, gbc.sp());
        EXPECT(0x5be2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0004
        gbc.setState(0x39da, 0x3afb, 0x6db0, 0x172e, 0xa25a, 0xe2be, 0x1, 0x0);
        gbc.writeMem(0x39da, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3afb, gbc.sp());
        EXPECT(0x39dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0005
        gbc.setState(0x2224, 0x3547, 0x7f60, 0x3e56, 0xe5eb, 0x33e5, 0x0, 0x1);
        gbc.writeMem(0x2224, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3547, gbc.sp());
        EXPECT(0x2226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0006
        gbc.setState(0xd1dc, 0xe518, 0xbc20, 0x15a, 0x3e25, 0xdfe9, 0x1, 0x1);
        gbc.writeMem(0xd1dc, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe518, gbc.sp());
        EXPECT(0xd1de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1dc));
        EXPECT(0x1d, gbc.readMem(0xd1dd));
        // CB 1D 0007
        gbc.setState(0xe04d, 0xc18f, 0x8a0, 0x556b, 0xad73, 0xe717, 0x0, 0x0);
        gbc.writeMem(0xe04d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc18f, gbc.sp());
        EXPECT(0xe04f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe04d));
        EXPECT(0x1d, gbc.readMem(0xe04e));
        // CB 1D 0008
        gbc.setState(0x7bf7, 0x4247, 0x50, 0x76e, 0xa6ca, 0x684, 0x1, 0x0);
        gbc.writeMem(0x7bf7, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4247, gbc.sp());
        EXPECT(0x7bf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0009
        gbc.setState(0xaa10, 0x1cd9, 0xa4e0, 0x1284, 0x527c, 0xb70b, 0x1, 0x1);
        gbc.writeMem(0xaa10, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1cd9, gbc.sp());
        EXPECT(0xaa12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa10));
        EXPECT(0x1d, gbc.readMem(0xaa11));
        // CB 1D 000A
        gbc.setState(0x4a84, 0x6576, 0xcc30, 0xdfa, 0xbd96, 0xc095, 0x0, 0x1);
        gbc.writeMem(0x4a84, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6576, gbc.sp());
        EXPECT(0x4a86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 000B
        gbc.setState(0x148e, 0xd1e4, 0xe60, 0x5e4a, 0x7731, 0x7e01, 0x0, 0x1);
        gbc.writeMem(0x148e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd1e4, gbc.sp());
        EXPECT(0x1490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 000C
        gbc.setState(0x35e2, 0xd76a, 0x88a0, 0xf30, 0x721c, 0xa7df, 0x0, 0x1);
        gbc.writeMem(0x35e2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd76a, gbc.sp());
        EXPECT(0x35e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 000D
        gbc.setState(0xb203, 0x4e7e, 0xa510, 0x7c34, 0x5155, 0x4100, 0x0, 0x1);
        gbc.writeMem(0xb203, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4e7e, gbc.sp());
        EXPECT(0xb205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb203));
        EXPECT(0x1d, gbc.readMem(0xb204));
        // CB 1D 000E
        gbc.setState(0x5c33, 0x66fe, 0xde30, 0x1f5a, 0x7ba8, 0xe0e, 0x0, 0x0);
        gbc.writeMem(0x5c33, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x66fe, gbc.sp());
        EXPECT(0x5c35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 000F
        gbc.setState(0x7fc7, 0xdb9b, 0xb830, 0x61bb, 0x5881, 0xb22d, 0x1, 0x1);
        gbc.writeMem(0x7fc7, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xdb9b, gbc.sp());
        EXPECT(0x7fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0010
        gbc.setState(0xef9f, 0x1c09, 0x7ea0, 0x74a, 0x3248, 0x99eb, 0x0, 0x1);
        gbc.writeMem(0xef9f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1c09, gbc.sp());
        EXPECT(0xefa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef9f));
        EXPECT(0x1d, gbc.readMem(0xefa0));
        // CB 1D 0011
        gbc.setState(0x6c46, 0x7d6f, 0xf0f0, 0x6d02, 0xcaab, 0x7675, 0x1, 0x0);
        gbc.writeMem(0x6c46, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7d6f, gbc.sp());
        EXPECT(0x6c48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0012
        gbc.setState(0x55d2, 0x67e, 0xf380, 0xcecb, 0x76b, 0x8cee, 0x0, 0x0);
        gbc.writeMem(0x55d2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x67e, gbc.sp());
        EXPECT(0x55d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0013
        gbc.setState(0x5dd8, 0x111d, 0x4c20, 0x8c3a, 0x1f24, 0x3f49, 0x0, 0x1);
        gbc.writeMem(0x5dd8, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x111d, gbc.sp());
        EXPECT(0x5dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0014
        gbc.setState(0xbf1b, 0xe04f, 0x6e60, 0x89bc, 0x6229, 0x7094, 0x1, 0x0);
        gbc.writeMem(0xbf1b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe04f, gbc.sp());
        EXPECT(0xbf1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf1b));
        EXPECT(0x1d, gbc.readMem(0xbf1c));
        // CB 1D 0015
        gbc.setState(0x8b76, 0xb083, 0x2820, 0x98e4, 0x8b31, 0x3f0, 0x0, 0x1);
        gbc.writeMem(0x8b76, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb083, gbc.sp());
        EXPECT(0x8b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b76));
        EXPECT(0x1d, gbc.readMem(0x8b77));
        // CB 1D 0016
        gbc.setState(0x6d6b, 0xf633, 0x5170, 0xf751, 0x79cd, 0x185d, 0x1, 0x1);
        gbc.writeMem(0x6d6b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf633, gbc.sp());
        EXPECT(0x6d6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0017
        gbc.setState(0x17bc, 0xa7a8, 0xd900, 0x86ef, 0xd1d7, 0x3d84, 0x0, 0x1);
        gbc.writeMem(0x17bc, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa7a8, gbc.sp());
        EXPECT(0x17be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0018
        gbc.setState(0x8967, 0xab57, 0x63e0, 0x6fa6, 0xd629, 0x8ec0, 0x0, 0x0);
        gbc.writeMem(0x8967, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xab57, gbc.sp());
        EXPECT(0x8969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8967));
        EXPECT(0x1d, gbc.readMem(0x8968));
        // CB 1D 001A
        gbc.setState(0x49e6, 0xaf25, 0x1240, 0x9196, 0x82da, 0x4eae, 0x0, 0x0);
        gbc.writeMem(0x49e6, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xaf25, gbc.sp());
        EXPECT(0x49e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 001B
        gbc.setState(0x6511, 0x1d9, 0xc360, 0xd35d, 0x6639, 0xe6e9, 0x0, 0x1);
        gbc.writeMem(0x6511, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1d9, gbc.sp());
        EXPECT(0x6513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 001C
        gbc.setState(0xd909, 0x378d, 0x8d0, 0xf913, 0x6707, 0x6d57, 0x0, 0x0);
        gbc.writeMem(0xd909, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x378d, gbc.sp());
        EXPECT(0xd90b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd909));
        EXPECT(0x1d, gbc.readMem(0xd90a));
        // CB 1D 001D
        gbc.setState(0x8744, 0xee19, 0x1c60, 0x5bd6, 0x18a2, 0xb008, 0x1, 0x1);
        gbc.writeMem(0x8744, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xee19, gbc.sp());
        EXPECT(0x8746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8744));
        EXPECT(0x1d, gbc.readMem(0x8745));
        // CB 1D 001E
        gbc.setState(0xc8a8, 0xa3be, 0xba80, 0x7ee5, 0xfa12, 0xee77, 0x1, 0x1);
        gbc.writeMem(0xc8a8, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa3be, gbc.sp());
        EXPECT(0xc8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a8));
        EXPECT(0x1d, gbc.readMem(0xc8a9));
        // CB 1D 001F
        gbc.setState(0x1370, 0xb1d5, 0xd440, 0xe36b, 0xd59f, 0xa5ba, 0x1, 0x0);
        gbc.writeMem(0x1370, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb1d5, gbc.sp());
        EXPECT(0x1372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0020
        gbc.setState(0xbee8, 0xeea5, 0x4170, 0xfe5, 0xe738, 0x1571, 0x0, 0x1);
        gbc.writeMem(0xbee8, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xeea5, gbc.sp());
        EXPECT(0xbeea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbee8));
        EXPECT(0x1d, gbc.readMem(0xbee9));
        // CB 1D 0021
        gbc.setState(0x1d11, 0x576d, 0xc010, 0x8aa4, 0xa3e4, 0x98be, 0x1, 0x0);
        gbc.writeMem(0x1d11, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x576d, gbc.sp());
        EXPECT(0x1d13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0022
        gbc.setState(0x3f75, 0x8a25, 0x7800, 0x9ea0, 0x614f, 0x8049, 0x1, 0x1);
        gbc.writeMem(0x3f75, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8a25, gbc.sp());
        EXPECT(0x3f77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0023
        gbc.setState(0xef5, 0x83bf, 0x5520, 0x4fc7, 0x65a, 0xd25f, 0x1, 0x0);
        gbc.writeMem(0xef5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x83bf, gbc.sp());
        EXPECT(0xef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0024
        gbc.setState(0x6d23, 0x6a3c, 0xf080, 0x464f, 0x282a, 0x8960, 0x0, 0x1);
        gbc.writeMem(0x6d23, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6a3c, gbc.sp());
        EXPECT(0x6d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0025
        gbc.setState(0x5c68, 0x2a, 0xc3f0, 0xe641, 0x501e, 0xa806, 0x1, 0x0);
        gbc.writeMem(0x5c68, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2a, gbc.sp());
        EXPECT(0x5c6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0026
        gbc.setState(0xa582, 0x3daa, 0x9720, 0x5d4b, 0x6873, 0xceb5, 0x0, 0x1);
        gbc.writeMem(0xa582, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3daa, gbc.sp());
        EXPECT(0xa584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa582));
        EXPECT(0x1d, gbc.readMem(0xa583));
        // CB 1D 0027
        gbc.setState(0x4812, 0xd63c, 0xb7d0, 0xddc4, 0x1fae, 0xe656, 0x0, 0x1);
        gbc.writeMem(0x4812, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd63c, gbc.sp());
        EXPECT(0x4814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0029
        gbc.setState(0xb596, 0x5e1c, 0xbb50, 0x38c7, 0xa662, 0x4e2f, 0x1, 0x1);
        gbc.writeMem(0xb596, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5e1c, gbc.sp());
        EXPECT(0xb598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb596));
        EXPECT(0x1d, gbc.readMem(0xb597));
        // CB 1D 002A
        gbc.setState(0x47df, 0x54a4, 0xddf0, 0x44a2, 0xcbcd, 0x4d31, 0x0, 0x0);
        gbc.writeMem(0x47df, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x54a4, gbc.sp());
        EXPECT(0x47e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 002B
        gbc.setState(0x4d1d, 0xce7c, 0xd000, 0xe442, 0x3238, 0xeb9e, 0x0, 0x0);
        gbc.writeMem(0x4d1d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xce7c, gbc.sp());
        EXPECT(0x4d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 002C
        gbc.setState(0xd7e7, 0x7aec, 0x7c70, 0x329c, 0xbba6, 0x9749, 0x0, 0x0);
        gbc.writeMem(0xd7e7, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7aec, gbc.sp());
        EXPECT(0xd7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e7));
        EXPECT(0x1d, gbc.readMem(0xd7e8));
        // CB 1D 002D
        gbc.setState(0x3fda, 0xd65, 0x5a10, 0x6913, 0xad15, 0x8113, 0x0, 0x1);
        gbc.writeMem(0x3fda, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd65, gbc.sp());
        EXPECT(0x3fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 002E
        gbc.setState(0x770f, 0x68f4, 0x7d60, 0x462f, 0x8982, 0xc6e2, 0x0, 0x1);
        gbc.writeMem(0x770f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x68f4, gbc.sp());
        EXPECT(0x7711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0030
        gbc.setState(0x5651, 0x1f29, 0x83d0, 0x4fef, 0x3b8b, 0xdc46, 0x1, 0x0);
        gbc.writeMem(0x5651, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1f29, gbc.sp());
        EXPECT(0x5653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0031
        gbc.setState(0x77fc, 0x8ac8, 0xfe90, 0x778d, 0xe11c, 0x78f0, 0x0, 0x0);
        gbc.writeMem(0x77fc, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8ac8, gbc.sp());
        EXPECT(0x77fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0032
        gbc.setState(0x3f6c, 0xc44, 0xb6d0, 0xc033, 0x4cb9, 0x95ae, 0x1, 0x0);
        gbc.writeMem(0x3f6c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc44, gbc.sp());
        EXPECT(0x3f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0033
        gbc.setState(0x42b4, 0xed13, 0x7470, 0xb1ff, 0x960c, 0x39b1, 0x1, 0x0);
        gbc.writeMem(0x42b4, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xed13, gbc.sp());
        EXPECT(0x42b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0034
        gbc.setState(0x5be, 0x25fc, 0x23f0, 0x4969, 0xafd8, 0x5ab6, 0x0, 0x0);
        gbc.writeMem(0x5be, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x25fc, gbc.sp());
        EXPECT(0x5c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0035
        gbc.setState(0x4dd3, 0xd65b, 0x5a20, 0xf9e0, 0xb4cd, 0x8525, 0x0, 0x1);
        gbc.writeMem(0x4dd3, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd65b, gbc.sp());
        EXPECT(0x4dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0036
        gbc.setState(0x4645, 0xcde2, 0x2090, 0x3756, 0x5692, 0x8bca, 0x1, 0x0);
        gbc.writeMem(0x4645, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcde2, gbc.sp());
        EXPECT(0x4647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0037
        gbc.setState(0x573c, 0x26f6, 0xbd80, 0x5270, 0x9aa6, 0xeba2, 0x1, 0x1);
        gbc.writeMem(0x573c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x26f6, gbc.sp());
        EXPECT(0x573e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0038
        gbc.setState(0x2afc, 0x87c5, 0x82a0, 0x90cd, 0xfbb2, 0x918c, 0x1, 0x0);
        gbc.writeMem(0x2afc, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x87c5, gbc.sp());
        EXPECT(0x2afe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0039
        gbc.setState(0xb1e6, 0x9d5e, 0xe610, 0x8172, 0x6419, 0xa7dc, 0x1, 0x1);
        gbc.writeMem(0xb1e6, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9d5e, gbc.sp());
        EXPECT(0xb1e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1e6));
        EXPECT(0x1d, gbc.readMem(0xb1e7));
        // CB 1D 003A
        gbc.setState(0x72ea, 0x9be3, 0xbc70, 0x556b, 0x500b, 0x5c99, 0x1, 0x0);
        gbc.writeMem(0x72ea, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9be3, gbc.sp());
        EXPECT(0x72ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 003B
        gbc.setState(0x7e75, 0xb5df, 0xef10, 0xd262, 0xcd72, 0x86f6, 0x0, 0x1);
        gbc.writeMem(0x7e75, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb5df, gbc.sp());
        EXPECT(0x7e77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 003C
        gbc.setState(0x9729, 0x10f3, 0xe9d0, 0xa2ae, 0x73b0, 0x2377, 0x0, 0x0);
        gbc.writeMem(0x9729, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x10f3, gbc.sp());
        EXPECT(0x972b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9729));
        EXPECT(0x1d, gbc.readMem(0x972a));
        // CB 1D 003D
        gbc.setState(0x156a, 0x9116, 0x3160, 0x66c6, 0x6647, 0x557f, 0x0, 0x1);
        gbc.writeMem(0x156a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9116, gbc.sp());
        EXPECT(0x156c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 003E
        gbc.setState(0xe0cc, 0x4129, 0xcb60, 0x766d, 0x9c4b, 0xe4cb, 0x1, 0x1);
        gbc.writeMem(0xe0cc, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4129, gbc.sp());
        EXPECT(0xe0ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0cc));
        EXPECT(0x1d, gbc.readMem(0xe0cd));
        // CB 1D 003F
        gbc.setState(0xa36b, 0x4a11, 0x5510, 0xcad, 0x1bd0, 0xa856, 0x0, 0x1);
        gbc.writeMem(0xa36b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4a11, gbc.sp());
        EXPECT(0xa36d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa36b));
        EXPECT(0x1d, gbc.readMem(0xa36c));
        // CB 1D 0040
        gbc.setState(0x1b34, 0xbf38, 0x1310, 0xc10c, 0xdca6, 0xabae, 0x1, 0x1);
        gbc.writeMem(0x1b34, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xbf38, gbc.sp());
        EXPECT(0x1b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0041
        gbc.setState(0xe9aa, 0xb1f5, 0x7ae0, 0xdc52, 0xa732, 0xeb5, 0x1, 0x1);
        gbc.writeMem(0xe9aa, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb1f5, gbc.sp());
        EXPECT(0xe9ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9aa));
        EXPECT(0x1d, gbc.readMem(0xe9ab));
        // CB 1D 0042
        gbc.setState(0x11c2, 0xbef, 0x4e0, 0x330a, 0xbdc1, 0x5260, 0x1, 0x0);
        gbc.writeMem(0x11c2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbef, gbc.sp());
        EXPECT(0x11c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0043
        gbc.setState(0x16ae, 0x92f5, 0xc170, 0x6b66, 0xaa95, 0x6cb, 0x1, 0x1);
        gbc.writeMem(0x16ae, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x92f5, gbc.sp());
        EXPECT(0x16b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0044
        gbc.setState(0xd485, 0xb5ef, 0xad50, 0xf4cb, 0x4c2, 0x375e, 0x1, 0x0);
        gbc.writeMem(0xd485, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb5ef, gbc.sp());
        EXPECT(0xd487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd485));
        EXPECT(0x1d, gbc.readMem(0xd486));
        // CB 1D 0045
        gbc.setState(0x5b30, 0xf4e1, 0x3710, 0xa1f4, 0x8cc7, 0xf176, 0x1, 0x1);
        gbc.writeMem(0x5b30, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf4e1, gbc.sp());
        EXPECT(0x5b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0046
        gbc.setState(0x1809, 0x8c28, 0x2470, 0x6749, 0x29de, 0xc693, 0x0, 0x0);
        gbc.writeMem(0x1809, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8c28, gbc.sp());
        EXPECT(0x180b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0047
        gbc.setState(0x607, 0xa089, 0x3d70, 0x77e3, 0xf3b1, 0x86dc, 0x1, 0x1);
        gbc.writeMem(0x607, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa089, gbc.sp());
        EXPECT(0x609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0048
        gbc.setState(0x9cc3, 0xeb20, 0x8d80, 0x9ed0, 0xf6ff, 0x7993, 0x0, 0x0);
        gbc.writeMem(0x9cc3, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xeb20, gbc.sp());
        EXPECT(0x9cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cc3));
        EXPECT(0x1d, gbc.readMem(0x9cc4));
        // CB 1D 0049
        gbc.setState(0x7537, 0xc4a3, 0xc110, 0x3516, 0x8693, 0xcbbd, 0x1, 0x1);
        gbc.writeMem(0x7537, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc4a3, gbc.sp());
        EXPECT(0x7539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 004A
        gbc.setState(0xb597, 0xf51b, 0xc2d0, 0x9c8b, 0x953d, 0x6eca, 0x1, 0x0);
        gbc.writeMem(0xb597, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf51b, gbc.sp());
        EXPECT(0xb599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb597));
        EXPECT(0x1d, gbc.readMem(0xb598));
        // CB 1D 004B
        gbc.setState(0x2aad, 0x8aca, 0x7370, 0x3750, 0x2b76, 0xabdb, 0x1, 0x1);
        gbc.writeMem(0x2aad, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8aca, gbc.sp());
        EXPECT(0x2aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 004C
        gbc.setState(0x314, 0x25d, 0xcd20, 0xe547, 0xf060, 0x4adf, 0x1, 0x1);
        gbc.writeMem(0x314, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x25d, gbc.sp());
        EXPECT(0x316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 004D
        gbc.setState(0x33f, 0x226e, 0x4e40, 0x7b7, 0xbeca, 0xc771, 0x1, 0x1);
        gbc.writeMem(0x33f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x226e, gbc.sp());
        EXPECT(0x341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 004E
        gbc.setState(0xc4ff, 0xa2df, 0xa020, 0xc5ff, 0xc867, 0xd335, 0x1, 0x0);
        gbc.writeMem(0xc4ff, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa2df, gbc.sp());
        EXPECT(0xc501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ff));
        EXPECT(0x1d, gbc.readMem(0xc500));
        // CB 1D 004F
        gbc.setState(0x9807, 0x156b, 0x5620, 0xfd69, 0x1d45, 0xfc0e, 0x0, 0x1);
        gbc.writeMem(0x9807, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x156b, gbc.sp());
        EXPECT(0x9809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9807));
        EXPECT(0x1d, gbc.readMem(0x9808));
        // CB 1D 0050
        gbc.setState(0xeb3d, 0xbb56, 0xb2e0, 0x35c9, 0x61c1, 0x54d1, 0x1, 0x0);
        gbc.writeMem(0xeb3d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbb56, gbc.sp());
        EXPECT(0xeb3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb3d));
        EXPECT(0x1d, gbc.readMem(0xeb3e));
        // CB 1D 0051
        gbc.setState(0x2909, 0x912b, 0xf370, 0x567e, 0xfc0, 0xd59c, 0x1, 0x1);
        gbc.writeMem(0x2909, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x912b, gbc.sp());
        EXPECT(0x290b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0052
        gbc.setState(0xa889, 0xfd8a, 0x6ad0, 0xd235, 0xde72, 0xc740, 0x1, 0x0);
        gbc.writeMem(0xa889, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfd8a, gbc.sp());
        EXPECT(0xa88b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa889));
        EXPECT(0x1d, gbc.readMem(0xa88a));
        // CB 1D 0053
        gbc.setState(0x644d, 0x7b5, 0x7170, 0x13a5, 0x791f, 0xa190, 0x1, 0x0);
        gbc.writeMem(0x644d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7b5, gbc.sp());
        EXPECT(0x644f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0054
        gbc.setState(0x627f, 0x5c00, 0xcd60, 0xd244, 0x4d2b, 0xdc01, 0x1, 0x0);
        gbc.writeMem(0x627f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5c00, gbc.sp());
        EXPECT(0x6281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0055
        gbc.setState(0x140c, 0x80b3, 0xaca0, 0xa3af, 0x847e, 0xf0d3, 0x1, 0x1);
        gbc.writeMem(0x140c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x80b3, gbc.sp());
        EXPECT(0x140e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0056
        gbc.setState(0xab5, 0x9d9f, 0xcd90, 0xdd38, 0xf669, 0x2c3e, 0x0, 0x0);
        gbc.writeMem(0xab5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9d9f, gbc.sp());
        EXPECT(0xab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0057
        gbc.setState(0x6ddf, 0x1d8d, 0x3920, 0xe777, 0x7e95, 0x8097, 0x0, 0x1);
        gbc.writeMem(0x6ddf, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1d8d, gbc.sp());
        EXPECT(0x6de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0058
        gbc.setState(0xd86d, 0x732a, 0xa270, 0xa396, 0xacf3, 0x546e, 0x1, 0x1);
        gbc.writeMem(0xd86d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x732a, gbc.sp());
        EXPECT(0xd86f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd86d));
        EXPECT(0x1d, gbc.readMem(0xd86e));
        // CB 1D 005A
        gbc.setState(0xd5ed, 0xd4e8, 0xb350, 0x751b, 0xfe32, 0xf464, 0x0, 0x1);
        gbc.writeMem(0xd5ed, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd4e8, gbc.sp());
        EXPECT(0xd5ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ed));
        EXPECT(0x1d, gbc.readMem(0xd5ee));
        // CB 1D 005B
        gbc.setState(0xe4c5, 0x58f2, 0xb90, 0xf60d, 0x952d, 0x2c0e, 0x1, 0x0);
        gbc.writeMem(0xe4c5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x58f2, gbc.sp());
        EXPECT(0xe4c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c5));
        EXPECT(0x1d, gbc.readMem(0xe4c6));
        // CB 1D 005C
        gbc.setState(0xa06e, 0x8439, 0x1820, 0x907e, 0x1fe4, 0x2583, 0x1, 0x1);
        gbc.writeMem(0xa06e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8439, gbc.sp());
        EXPECT(0xa070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa06e));
        EXPECT(0x1d, gbc.readMem(0xa06f));
        // CB 1D 005D
        gbc.setState(0x9de6, 0x2b1, 0x30c0, 0x65b5, 0xc6f2, 0x7916, 0x0, 0x1);
        gbc.writeMem(0x9de6, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2b1, gbc.sp());
        EXPECT(0x9de8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de6));
        EXPECT(0x1d, gbc.readMem(0x9de7));
        // CB 1D 005E
        gbc.setState(0x85c7, 0xccbf, 0xe720, 0xe3c1, 0xa39, 0xf7bd, 0x1, 0x1);
        gbc.writeMem(0x85c7, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xccbf, gbc.sp());
        EXPECT(0x85c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c7));
        EXPECT(0x1d, gbc.readMem(0x85c8));
        // CB 1D 005F
        gbc.setState(0x4e22, 0x93b, 0x5e70, 0x1909, 0x6ec, 0xc8af, 0x0, 0x1);
        gbc.writeMem(0x4e22, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x93b, gbc.sp());
        EXPECT(0x4e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0060
        gbc.setState(0x3a3f, 0x529c, 0x1e10, 0x6538, 0x60b5, 0x745a, 0x0, 0x1);
        gbc.writeMem(0x3a3f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x529c, gbc.sp());
        EXPECT(0x3a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0061
        gbc.setState(0x546c, 0xea9f, 0xb580, 0x96b3, 0xc74c, 0x74fa, 0x0, 0x0);
        gbc.writeMem(0x546c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xea9f, gbc.sp());
        EXPECT(0x546e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0062
        gbc.setState(0xbb79, 0x4f32, 0x47c0, 0x644a, 0xfe1f, 0xb255, 0x1, 0x0);
        gbc.writeMem(0xbb79, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4f32, gbc.sp());
        EXPECT(0xbb7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb79));
        EXPECT(0x1d, gbc.readMem(0xbb7a));
        // CB 1D 0063
        gbc.setState(0x5671, 0x6472, 0xaf90, 0x93e3, 0xeaa9, 0xeae, 0x0, 0x1);
        gbc.writeMem(0x5671, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6472, gbc.sp());
        EXPECT(0x5673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0064
        gbc.setState(0xd814, 0xfc24, 0x480, 0x95e, 0x9ef9, 0xbe, 0x1, 0x0);
        gbc.writeMem(0xd814, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfc24, gbc.sp());
        EXPECT(0xd816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd814));
        EXPECT(0x1d, gbc.readMem(0xd815));
        // CB 1D 0065
        gbc.setState(0x67c1, 0x1ae6, 0x67c0, 0xbf8f, 0x4b06, 0x1d4e, 0x1, 0x1);
        gbc.writeMem(0x67c1, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1ae6, gbc.sp());
        EXPECT(0x67c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0066
        gbc.setState(0x7159, 0x3b15, 0xa4e0, 0xf355, 0xa903, 0x4065, 0x0, 0x1);
        gbc.writeMem(0x7159, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3b15, gbc.sp());
        EXPECT(0x715b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0069
        gbc.setState(0xcbd2, 0xae8c, 0x7a00, 0xf6b0, 0xebec, 0x71ec, 0x1, 0x0);
        gbc.writeMem(0xcbd2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xae8c, gbc.sp());
        EXPECT(0xcbd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbd2));
        EXPECT(0x1d, gbc.readMem(0xcbd3));
        // CB 1D 006A
        gbc.setState(0x15b, 0xe604, 0x22f0, 0x4c07, 0x77f6, 0x2b07, 0x0, 0x0);
        gbc.writeMem(0x15b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe604, gbc.sp());
        EXPECT(0x15d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 006B
        gbc.setState(0x6ff5, 0xdfc1, 0x75d0, 0x7653, 0x7f2c, 0x661b, 0x0, 0x0);
        gbc.writeMem(0x6ff5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdfc1, gbc.sp());
        EXPECT(0x6ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 006C
        gbc.setState(0x1da1, 0x863a, 0xc3e0, 0x3a52, 0xc2d6, 0x1027, 0x0, 0x1);
        gbc.writeMem(0x1da1, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x863a, gbc.sp());
        EXPECT(0x1da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 006D
        gbc.setState(0x81f5, 0xbce4, 0xf940, 0xe55a, 0x55d4, 0xcedb, 0x1, 0x1);
        gbc.writeMem(0x81f5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbce4, gbc.sp());
        EXPECT(0x81f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81f5));
        EXPECT(0x1d, gbc.readMem(0x81f6));
        // CB 1D 006E
        gbc.setState(0xb602, 0xd50b, 0x170, 0x2838, 0x823c, 0xa1a0, 0x0, 0x0);
        gbc.writeMem(0xb602, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd50b, gbc.sp());
        EXPECT(0xb604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb602));
        EXPECT(0x1d, gbc.readMem(0xb603));
        // CB 1D 006F
        gbc.setState(0xd478, 0xde4b, 0x5760, 0x308f, 0x1bd, 0x4752, 0x0, 0x1);
        gbc.writeMem(0xd478, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xde4b, gbc.sp());
        EXPECT(0xd47a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd478));
        EXPECT(0x1d, gbc.readMem(0xd479));
        // CB 1D 0070
        gbc.setState(0x58c, 0x4621, 0x85f0, 0x700e, 0x7454, 0xaabf, 0x0, 0x0);
        gbc.writeMem(0x58c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4621, gbc.sp());
        EXPECT(0x58e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0071
        gbc.setState(0x59f5, 0xbc82, 0xd140, 0x9db3, 0x82d6, 0x61dc, 0x1, 0x0);
        gbc.writeMem(0x59f5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbc82, gbc.sp());
        EXPECT(0x59f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0072
        gbc.setState(0x1966, 0xf7e2, 0x1ac0, 0xcda2, 0x63d3, 0xaea6, 0x0, 0x0);
        gbc.writeMem(0x1966, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf7e2, gbc.sp());
        EXPECT(0x1968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0073
        gbc.setState(0x6202, 0x460e, 0xcf90, 0xde8b, 0xfe8a, 0x90c1, 0x1, 0x0);
        gbc.writeMem(0x6202, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x460e, gbc.sp());
        EXPECT(0x6204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0074
        gbc.setState(0xc5f3, 0x79ca, 0xbda0, 0xcb26, 0xc99d, 0x6744, 0x1, 0x1);
        gbc.writeMem(0xc5f3, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x79ca, gbc.sp());
        EXPECT(0xc5f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5f3));
        EXPECT(0x1d, gbc.readMem(0xc5f4));
        // CB 1D 0075
        gbc.setState(0x70b, 0xb5c6, 0xd1d0, 0x9b, 0xd8d3, 0x913b, 0x1, 0x0);
        gbc.writeMem(0x70b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb5c6, gbc.sp());
        EXPECT(0x70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0076
        gbc.setState(0x1662, 0x7214, 0xb650, 0xf9cc, 0x54e, 0xddb, 0x1, 0x1);
        gbc.writeMem(0x1662, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7214, gbc.sp());
        EXPECT(0x1664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0077
        gbc.setState(0x1a90, 0x7d1b, 0xe060, 0x3de1, 0xcccc, 0x8dd7, 0x0, 0x1);
        gbc.writeMem(0x1a90, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7d1b, gbc.sp());
        EXPECT(0x1a92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0078
        gbc.setState(0x9204, 0x58ff, 0xad60, 0xa7f1, 0x3094, 0x50e6, 0x1, 0x1);
        gbc.writeMem(0x9204, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x58ff, gbc.sp());
        EXPECT(0x9206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9204));
        EXPECT(0x1d, gbc.readMem(0x9205));
        // CB 1D 0079
        gbc.setState(0xea0, 0x3a66, 0x7a90, 0x3501, 0xfc87, 0xac1e, 0x0, 0x0);
        gbc.writeMem(0xea0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3a66, gbc.sp());
        EXPECT(0xea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 007A
        gbc.setState(0x84cf, 0xacc8, 0x8190, 0x28b4, 0x7cdb, 0xbbd7, 0x0, 0x0);
        gbc.writeMem(0x84cf, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xacc8, gbc.sp());
        EXPECT(0x84d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84cf));
        EXPECT(0x1d, gbc.readMem(0x84d0));
        // CB 1D 007B
        gbc.setState(0x1cd, 0x6d5, 0xe930, 0x6613, 0x5356, 0x9fcd, 0x0, 0x1);
        gbc.writeMem(0x1cd, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6d5, gbc.sp());
        EXPECT(0x1cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 007C
        gbc.setState(0x24d2, 0xb929, 0x5d50, 0xc8a0, 0xec5b, 0x84df, 0x1, 0x1);
        gbc.writeMem(0x24d2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb929, gbc.sp());
        EXPECT(0x24d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 007D
        gbc.setState(0xb834, 0x1218, 0xcb60, 0x2244, 0xc6bd, 0xb6fd, 0x1, 0x0);
        gbc.writeMem(0xb834, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1218, gbc.sp());
        EXPECT(0xb836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb834));
        EXPECT(0x1d, gbc.readMem(0xb835));
        // CB 1D 007E
        gbc.setState(0xb85d, 0x8a5a, 0x50c0, 0x9f2c, 0xe5ba, 0xf75f, 0x1, 0x1);
        gbc.writeMem(0xb85d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8a5a, gbc.sp());
        EXPECT(0xb85f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb85d));
        EXPECT(0x1d, gbc.readMem(0xb85e));
        // CB 1D 007F
        gbc.setState(0xc415, 0xe3d4, 0x8480, 0x66ab, 0x2285, 0x33d7, 0x0, 0x0);
        gbc.writeMem(0xc415, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe3d4, gbc.sp());
        EXPECT(0xc417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc415));
        EXPECT(0x1d, gbc.readMem(0xc416));
        // CB 1D 0080
        gbc.setState(0xab6, 0x5593, 0x6680, 0xe3fa, 0xd66f, 0xad01, 0x0, 0x0);
        gbc.writeMem(0xab6, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5593, gbc.sp());
        EXPECT(0xab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0081
        gbc.setState(0x7d58, 0x8349, 0xdc60, 0xfb7c, 0x7d28, 0xf537, 0x1, 0x0);
        gbc.writeMem(0x7d58, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8349, gbc.sp());
        EXPECT(0x7d5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0082
        gbc.setState(0x3875, 0x572e, 0xc960, 0x38e0, 0xa0f2, 0x2fdc, 0x0, 0x1);
        gbc.writeMem(0x3875, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x572e, gbc.sp());
        EXPECT(0x3877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0083
        gbc.setState(0x8ffd, 0x7747, 0x6e30, 0x9104, 0x48db, 0xdc98, 0x1, 0x0);
        gbc.writeMem(0x8ffd, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7747, gbc.sp());
        EXPECT(0x8fff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ffd));
        EXPECT(0x1d, gbc.readMem(0x8ffe));
        // CB 1D 0084
        gbc.setState(0x6e00, 0x3b89, 0xffe0, 0x1622, 0xdaf0, 0x9d5b, 0x0, 0x1);
        gbc.writeMem(0x6e00, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3b89, gbc.sp());
        EXPECT(0x6e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0085
        gbc.setState(0xd260, 0xdac8, 0xbdc0, 0x8d88, 0x9128, 0xcd58, 0x0, 0x1);
        gbc.writeMem(0xd260, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xdac8, gbc.sp());
        EXPECT(0xd262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd260));
        EXPECT(0x1d, gbc.readMem(0xd261));
        // CB 1D 0086
        gbc.setState(0x8799, 0x6736, 0x7fc0, 0xb6, 0x5e62, 0x93e8, 0x1, 0x0);
        gbc.writeMem(0x8799, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6736, gbc.sp());
        EXPECT(0x879b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8799));
        EXPECT(0x1d, gbc.readMem(0x879a));
        // CB 1D 0088
        gbc.setState(0xb09a, 0xd752, 0xc2e0, 0xb2fa, 0x9fc0, 0xcae6, 0x1, 0x1);
        gbc.writeMem(0xb09a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd752, gbc.sp());
        EXPECT(0xb09c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb09a));
        EXPECT(0x1d, gbc.readMem(0xb09b));
        // CB 1D 0089
        gbc.setState(0x3a06, 0x1c22, 0xde60, 0x5a0a, 0x51c9, 0x177e, 0x0, 0x1);
        gbc.writeMem(0x3a06, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1c22, gbc.sp());
        EXPECT(0x3a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 008A
        gbc.setState(0x79dc, 0x677e, 0x8ac0, 0xe507, 0x2a4d, 0xe4f4, 0x1, 0x1);
        gbc.writeMem(0x79dc, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x677e, gbc.sp());
        EXPECT(0x79de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 008B
        gbc.setState(0xe6e2, 0x5df4, 0xc770, 0xb67d, 0x436d, 0x45e5, 0x1, 0x1);
        gbc.writeMem(0xe6e2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5df4, gbc.sp());
        EXPECT(0xe6e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e2));
        EXPECT(0x1d, gbc.readMem(0xe6e3));
        // CB 1D 008C
        gbc.setState(0x4e78, 0x1c2f, 0x7bf0, 0x71d8, 0x9138, 0xe2a, 0x1, 0x0);
        gbc.writeMem(0x4e78, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1c2f, gbc.sp());
        EXPECT(0x4e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 008D
        gbc.setState(0x2e47, 0xbeda, 0xdba0, 0xdae8, 0x9c76, 0x5f29, 0x0, 0x0);
        gbc.writeMem(0x2e47, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbeda, gbc.sp());
        EXPECT(0x2e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 008E
        gbc.setState(0xcb2a, 0x240a, 0xc330, 0x2103, 0xf09a, 0x2611, 0x1, 0x0);
        gbc.writeMem(0xcb2a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x240a, gbc.sp());
        EXPECT(0xcb2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2a));
        EXPECT(0x1d, gbc.readMem(0xcb2b));
        // CB 1D 008F
        gbc.setState(0x36fd, 0xe6c2, 0xd120, 0xdcc2, 0x8073, 0x3ed3, 0x0, 0x1);
        gbc.writeMem(0x36fd, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe6c2, gbc.sp());
        EXPECT(0x36ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0090
        gbc.setState(0xae92, 0x5c87, 0x3a40, 0xe51e, 0x5cb7, 0x2a5d, 0x1, 0x0);
        gbc.writeMem(0xae92, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5c87, gbc.sp());
        EXPECT(0xae94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae92));
        EXPECT(0x1d, gbc.readMem(0xae93));
        // CB 1D 0092
        gbc.setState(0x48a0, 0x4ef2, 0x7250, 0x545, 0xfa2e, 0x8dd3, 0x0, 0x1);
        gbc.writeMem(0x48a0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4ef2, gbc.sp());
        EXPECT(0x48a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0093
        gbc.setState(0x2bca, 0xcf23, 0x9330, 0x2d00, 0xe29e, 0xb49d, 0x1, 0x0);
        gbc.writeMem(0x2bca, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xcf23, gbc.sp());
        EXPECT(0x2bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0094
        gbc.setState(0xcaed, 0x2701, 0x510, 0xae32, 0x5457, 0xebcf, 0x0, 0x1);
        gbc.writeMem(0xcaed, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2701, gbc.sp());
        EXPECT(0xcaef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaed));
        EXPECT(0x1d, gbc.readMem(0xcaee));
        // CB 1D 0095
        gbc.setState(0xd435, 0x6416, 0xa680, 0xa5e7, 0x2b35, 0xcdfe, 0x1, 0x1);
        gbc.writeMem(0xd435, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6416, gbc.sp());
        EXPECT(0xd437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd435));
        EXPECT(0x1d, gbc.readMem(0xd436));
        // CB 1D 0096
        gbc.setState(0xca20, 0xaa23, 0x7890, 0x56b5, 0x7178, 0xfed2, 0x1, 0x1);
        gbc.writeMem(0xca20, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xaa23, gbc.sp());
        EXPECT(0xca22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca20));
        EXPECT(0x1d, gbc.readMem(0xca21));
        // CB 1D 0097
        gbc.setState(0x55f6, 0x8033, 0x2c0, 0xea5a, 0xda44, 0x8abe, 0x0, 0x1);
        gbc.writeMem(0x55f6, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8033, gbc.sp());
        EXPECT(0x55f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0098
        gbc.setState(0x702, 0x42a3, 0xc2c0, 0x9aad, 0xeb6, 0x58a9, 0x0, 0x0);
        gbc.writeMem(0x702, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x42a3, gbc.sp());
        EXPECT(0x704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0099
        gbc.setState(0x8c69, 0xd3e1, 0xc520, 0xa1d8, 0x20a3, 0x6d2b, 0x0, 0x1);
        gbc.writeMem(0x8c69, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd3e1, gbc.sp());
        EXPECT(0x8c6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c69));
        EXPECT(0x1d, gbc.readMem(0x8c6a));
        // CB 1D 009A
        gbc.setState(0xb0e8, 0x5ec6, 0x620, 0x74e4, 0x1bd4, 0xc1bf, 0x0, 0x1);
        gbc.writeMem(0xb0e8, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5ec6, gbc.sp());
        EXPECT(0xb0ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e8));
        EXPECT(0x1d, gbc.readMem(0xb0e9));
        // CB 1D 009C
        gbc.setState(0xc739, 0x2ac3, 0xdda0, 0x9c81, 0x2547, 0x61df, 0x0, 0x1);
        gbc.writeMem(0xc739, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2ac3, gbc.sp());
        EXPECT(0xc73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc739));
        EXPECT(0x1d, gbc.readMem(0xc73a));
        // CB 1D 009D
        gbc.setState(0xcaad, 0x2d37, 0xe1b0, 0xe2de, 0xc603, 0x7617, 0x1, 0x0);
        gbc.writeMem(0xcaad, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2d37, gbc.sp());
        EXPECT(0xcaaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaad));
        EXPECT(0x1d, gbc.readMem(0xcaae));
        // CB 1D 009E
        gbc.setState(0xc10c, 0xb472, 0xf70, 0xf3c9, 0xa3c2, 0x4a47, 0x0, 0x0);
        gbc.writeMem(0xc10c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb472, gbc.sp());
        EXPECT(0xc10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc10c));
        EXPECT(0x1d, gbc.readMem(0xc10d));
        // CB 1D 009F
        gbc.setState(0x64a3, 0x468e, 0xd1f0, 0xc98d, 0xa438, 0x8bb3, 0x0, 0x0);
        gbc.writeMem(0x64a3, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x468e, gbc.sp());
        EXPECT(0x64a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00A0
        gbc.setState(0xd28b, 0x3a11, 0x8070, 0xe05b, 0xca27, 0xb2ed, 0x1, 0x0);
        gbc.writeMem(0xd28b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3a11, gbc.sp());
        EXPECT(0xd28d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd28b));
        EXPECT(0x1d, gbc.readMem(0xd28c));
        // CB 1D 00A1
        gbc.setState(0x6c15, 0x7a72, 0xda90, 0x862c, 0x4317, 0x8fda, 0x1, 0x0);
        gbc.writeMem(0x6c15, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7a72, gbc.sp());
        EXPECT(0x6c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00A2
        gbc.setState(0x474f, 0xc3c9, 0xcaf0, 0xf322, 0x3a5e, 0xba50, 0x0, 0x1);
        gbc.writeMem(0x474f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc3c9, gbc.sp());
        EXPECT(0x4751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00A3
        gbc.setState(0xe089, 0x1e07, 0xaa60, 0x40f2, 0xec57, 0xc353, 0x0, 0x0);
        gbc.writeMem(0xe089, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1e07, gbc.sp());
        EXPECT(0xe08b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe089));
        EXPECT(0x1d, gbc.readMem(0xe08a));
        // CB 1D 00A4
        gbc.setState(0xe9c1, 0xb6f1, 0xad60, 0x21b6, 0x52ef, 0x37f6, 0x1, 0x0);
        gbc.writeMem(0xe9c1, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb6f1, gbc.sp());
        EXPECT(0xe9c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c1));
        EXPECT(0x1d, gbc.readMem(0xe9c2));
        // CB 1D 00A5
        gbc.setState(0x8171, 0xafc1, 0xbe30, 0xd9fd, 0x7eb9, 0x68a, 0x0, 0x1);
        gbc.writeMem(0x8171, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xafc1, gbc.sp());
        EXPECT(0x8173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8171));
        EXPECT(0x1d, gbc.readMem(0x8172));
        // CB 1D 00A6
        gbc.setState(0x5a52, 0xc6b5, 0xf1f0, 0x8ab, 0x954c, 0x4594, 0x0, 0x0);
        gbc.writeMem(0x5a52, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc6b5, gbc.sp());
        EXPECT(0x5a54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00A7
        gbc.setState(0xa218, 0xc937, 0xd8a0, 0x9faa, 0x26e5, 0xa36a, 0x0, 0x1);
        gbc.writeMem(0xa218, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc937, gbc.sp());
        EXPECT(0xa21a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa218));
        EXPECT(0x1d, gbc.readMem(0xa219));
        // CB 1D 00A8
        gbc.setState(0xa0e1, 0x1ec4, 0xe920, 0x1e3a, 0x1e35, 0xed5f, 0x1, 0x0);
        gbc.writeMem(0xa0e1, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1ec4, gbc.sp());
        EXPECT(0xa0e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0e1));
        EXPECT(0x1d, gbc.readMem(0xa0e2));
        // CB 1D 00A9
        gbc.setState(0x3148, 0x5a93, 0x5730, 0xe4a0, 0x47b1, 0x85b5, 0x0, 0x1);
        gbc.writeMem(0x3148, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5a93, gbc.sp());
        EXPECT(0x314a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00AB
        gbc.setState(0x3d9f, 0xf002, 0x7210, 0x87e0, 0x8cae, 0xadb3, 0x1, 0x1);
        gbc.writeMem(0x3d9f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf002, gbc.sp());
        EXPECT(0x3da1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00AC
        gbc.setState(0x672b, 0x4a2, 0x51f0, 0xb58c, 0x58ff, 0x378f, 0x0, 0x1);
        gbc.writeMem(0x672b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4a2, gbc.sp());
        EXPECT(0x672d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00AD
        gbc.setState(0xdc9a, 0x859c, 0xe170, 0x1636, 0x294e, 0xbf3, 0x1, 0x0);
        gbc.writeMem(0xdc9a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x859c, gbc.sp());
        EXPECT(0xdc9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc9a));
        EXPECT(0x1d, gbc.readMem(0xdc9b));
        // CB 1D 00AE
        gbc.setState(0x29e, 0xbdd2, 0x8b20, 0x9b26, 0x293b, 0x5b45, 0x0, 0x1);
        gbc.writeMem(0x29e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbdd2, gbc.sp());
        EXPECT(0x2a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00B0
        gbc.setState(0xc75, 0x3b0a, 0xa4d0, 0xec43, 0x97f7, 0x90bf, 0x0, 0x1);
        gbc.writeMem(0xc75, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3b0a, gbc.sp());
        EXPECT(0xc77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00B1
        gbc.setState(0xbc55, 0x2494, 0x9d30, 0xc3a3, 0x848b, 0x4df8, 0x0, 0x1);
        gbc.writeMem(0xbc55, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2494, gbc.sp());
        EXPECT(0xbc57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc55));
        EXPECT(0x1d, gbc.readMem(0xbc56));
        // CB 1D 00B2
        gbc.setState(0xe09, 0xe560, 0x58f0, 0x93a6, 0x8089, 0xf56e, 0x0, 0x1);
        gbc.writeMem(0xe09, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe560, gbc.sp());
        EXPECT(0xe0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00B3
        gbc.setState(0x6fae, 0x2d57, 0xe8e0, 0x1a62, 0x4271, 0xd7e2, 0x1, 0x0);
        gbc.writeMem(0x6fae, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2d57, gbc.sp());
        EXPECT(0x6fb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00B4
        gbc.setState(0xed1c, 0xb159, 0x5990, 0x418f, 0x8d49, 0x17a6, 0x0, 0x1);
        gbc.writeMem(0xed1c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb159, gbc.sp());
        EXPECT(0xed1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed1c));
        EXPECT(0x1d, gbc.readMem(0xed1d));
        // CB 1D 00B5
        gbc.setState(0x6411, 0xc45b, 0x7650, 0x3e3f, 0xc818, 0xad7e, 0x0, 0x1);
        gbc.writeMem(0x6411, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc45b, gbc.sp());
        EXPECT(0x6413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00B6
        gbc.setState(0x7dad, 0x6fec, 0x8200, 0xf21c, 0xbf83, 0x9440, 0x0, 0x0);
        gbc.writeMem(0x7dad, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6fec, gbc.sp());
        EXPECT(0x7daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00B7
        gbc.setState(0x6344, 0xbd9d, 0xe6e0, 0xa17, 0xe4c6, 0x2865, 0x1, 0x0);
        gbc.writeMem(0x6344, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbd9d, gbc.sp());
        EXPECT(0x6346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00B8
        gbc.setState(0x38cf, 0x6282, 0xb200, 0x487e, 0x1cab, 0x720c, 0x1, 0x1);
        gbc.writeMem(0x38cf, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6282, gbc.sp());
        EXPECT(0x38d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00B9
        gbc.setState(0x1e36, 0xab1d, 0x160, 0x9fe6, 0xfc1e, 0x395c, 0x0, 0x0);
        gbc.writeMem(0x1e36, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xab1d, gbc.sp());
        EXPECT(0x1e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00BA
        gbc.setState(0x560a, 0x176e, 0x70f0, 0xfd90, 0x495e, 0x43b1, 0x1, 0x1);
        gbc.writeMem(0x560a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x176e, gbc.sp());
        EXPECT(0x560c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00BC
        gbc.setState(0x571, 0xb297, 0xcd70, 0xe004, 0x52be, 0xaead, 0x0, 0x1);
        gbc.writeMem(0x571, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb297, gbc.sp());
        EXPECT(0x573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00BD
        gbc.setState(0x29a2, 0xc8e3, 0x2eb0, 0x837e, 0xd760, 0xbfe8, 0x0, 0x0);
        gbc.writeMem(0x29a2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc8e3, gbc.sp());
        EXPECT(0x29a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00BE
        gbc.setState(0x7d29, 0x3113, 0xd5e0, 0x8b94, 0xf2c6, 0x5148, 0x0, 0x0);
        gbc.writeMem(0x7d29, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3113, gbc.sp());
        EXPECT(0x7d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00BF
        gbc.setState(0x3c46, 0xd842, 0x1c10, 0xebd0, 0xa7b1, 0xe38f, 0x0, 0x1);
        gbc.writeMem(0x3c46, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd842, gbc.sp());
        EXPECT(0x3c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00C0
        gbc.setState(0x1a47, 0x8cd5, 0xd390, 0xb004, 0xc8e6, 0x28e7, 0x1, 0x1);
        gbc.writeMem(0x1a47, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8cd5, gbc.sp());
        EXPECT(0x1a49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00C1
        gbc.setState(0x31a6, 0xc519, 0xeb0, 0x1da7, 0x47e0, 0xc6e3, 0x0, 0x1);
        gbc.writeMem(0x31a6, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc519, gbc.sp());
        EXPECT(0x31a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00C2
        gbc.setState(0x1e66, 0xff94, 0x1bc0, 0x1047, 0xbae0, 0xc4f, 0x1, 0x0);
        gbc.writeMem(0x1e66, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xff94, gbc.sp());
        EXPECT(0x1e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00C3
        gbc.setState(0xacde, 0x200b, 0x2ba0, 0x9e4e, 0xe2b5, 0x362b, 0x1, 0x0);
        gbc.writeMem(0xacde, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x200b, gbc.sp());
        EXPECT(0xace0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacde));
        EXPECT(0x1d, gbc.readMem(0xacdf));
        // CB 1D 00C4
        gbc.setState(0x5cad, 0x4c6a, 0x1de0, 0x8e3b, 0x3ebf, 0x5cd2, 0x0, 0x0);
        gbc.writeMem(0x5cad, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4c6a, gbc.sp());
        EXPECT(0x5caf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00C5
        gbc.setState(0xa5df, 0xe216, 0xfa0, 0x6837, 0x6080, 0x648f, 0x0, 0x1);
        gbc.writeMem(0xa5df, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe216, gbc.sp());
        EXPECT(0xa5e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5df));
        EXPECT(0x1d, gbc.readMem(0xa5e0));
        // CB 1D 00C6
        gbc.setState(0xe09d, 0xbffc, 0xb360, 0xd4fd, 0xa208, 0x2c90, 0x1, 0x1);
        gbc.writeMem(0xe09d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbffc, gbc.sp());
        EXPECT(0xe09f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe09d));
        EXPECT(0x1d, gbc.readMem(0xe09e));
        // CB 1D 00C7
        gbc.setState(0x9514, 0xdae1, 0x7800, 0xc037, 0x8506, 0x68aa, 0x0, 0x1);
        gbc.writeMem(0x9514, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xdae1, gbc.sp());
        EXPECT(0x9516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9514));
        EXPECT(0x1d, gbc.readMem(0x9515));
        // CB 1D 00C8
        gbc.setState(0x9f23, 0x237, 0x2b50, 0xa17d, 0xce2d, 0xc261, 0x1, 0x1);
        gbc.writeMem(0x9f23, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x237, gbc.sp());
        EXPECT(0x9f25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f23));
        EXPECT(0x1d, gbc.readMem(0x9f24));
        // CB 1D 00C9
        gbc.setState(0x9750, 0xa1c, 0x28b0, 0x53b7, 0x229e, 0xdc5c, 0x1, 0x0);
        gbc.writeMem(0x9750, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa1c, gbc.sp());
        EXPECT(0x9752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9750));
        EXPECT(0x1d, gbc.readMem(0x9751));
        // CB 1D 00CA
        gbc.setState(0x39d4, 0x4613, 0x72f0, 0xac6e, 0x88f8, 0xe9f6, 0x0, 0x0);
        gbc.writeMem(0x39d4, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4613, gbc.sp());
        EXPECT(0x39d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00CB
        gbc.setState(0x3577, 0x4a93, 0xb3b0, 0xf7e5, 0x240, 0x5b2c, 0x1, 0x1);
        gbc.writeMem(0x3577, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4a93, gbc.sp());
        EXPECT(0x3579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00CC
        gbc.setState(0x3259, 0xc55f, 0x8770, 0x643d, 0xa81a, 0xfdc5, 0x1, 0x0);
        gbc.writeMem(0x3259, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc55f, gbc.sp());
        EXPECT(0x325b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00CD
        gbc.setState(0x543b, 0x63d1, 0xb7f0, 0xaa0f, 0xeb1b, 0xc68, 0x1, 0x0);
        gbc.writeMem(0x543b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x63d1, gbc.sp());
        EXPECT(0x543d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00CE
        gbc.setState(0x6d88, 0x7d74, 0xe300, 0x54c4, 0x1dcb, 0x2463, 0x1, 0x1);
        gbc.writeMem(0x6d88, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7d74, gbc.sp());
        EXPECT(0x6d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00CF
        gbc.setState(0xe064, 0xf666, 0xcc70, 0x8778, 0xf84d, 0xad7f, 0x0, 0x1);
        gbc.writeMem(0xe064, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf666, gbc.sp());
        EXPECT(0xe066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe064));
        EXPECT(0x1d, gbc.readMem(0xe065));
        // CB 1D 00D0
        gbc.setState(0xde15, 0x74b5, 0x8790, 0x6046, 0x7ab0, 0x83be, 0x1, 0x0);
        gbc.writeMem(0xde15, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x74b5, gbc.sp());
        EXPECT(0xde17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde15));
        EXPECT(0x1d, gbc.readMem(0xde16));
        // CB 1D 00D1
        gbc.setState(0x5539, 0xbaa2, 0xac30, 0x6f3, 0x3d75, 0xa72e, 0x1, 0x1);
        gbc.writeMem(0x5539, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbaa2, gbc.sp());
        EXPECT(0x553b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00D2
        gbc.setState(0x99de, 0xf1f, 0x7b10, 0xedb7, 0xa482, 0x934f, 0x0, 0x0);
        gbc.writeMem(0x99de, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf1f, gbc.sp());
        EXPECT(0x99e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99de));
        EXPECT(0x1d, gbc.readMem(0x99df));
        // CB 1D 00D3
        gbc.setState(0x6926, 0x5b5e, 0x71a0, 0x861c, 0x4622, 0x52aa, 0x0, 0x0);
        gbc.writeMem(0x6926, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5b5e, gbc.sp());
        EXPECT(0x6928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00D4
        gbc.setState(0x17f4, 0x558f, 0x2860, 0xe58b, 0x91d0, 0x63ef, 0x1, 0x0);
        gbc.writeMem(0x17f4, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x558f, gbc.sp());
        EXPECT(0x17f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00D5
        gbc.setState(0x1cd1, 0x1fcc, 0x95f0, 0xa9d4, 0x2fd5, 0xa020, 0x1, 0x1);
        gbc.writeMem(0x1cd1, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1fcc, gbc.sp());
        EXPECT(0x1cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00D6
        gbc.setState(0xe2f8, 0x3eab, 0xe20, 0x443e, 0xe731, 0x3e09, 0x1, 0x1);
        gbc.writeMem(0xe2f8, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3eab, gbc.sp());
        EXPECT(0xe2fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2f8));
        EXPECT(0x1d, gbc.readMem(0xe2f9));
        // CB 1D 00D7
        gbc.setState(0xede5, 0xd986, 0xcd30, 0x3794, 0x908a, 0x3d88, 0x1, 0x0);
        gbc.writeMem(0xede5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd986, gbc.sp());
        EXPECT(0xede7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xede5));
        EXPECT(0x1d, gbc.readMem(0xede6));
        // CB 1D 00D8
        gbc.setState(0xc1ee, 0x692, 0x3680, 0x604e, 0x1c41, 0xf69c, 0x1, 0x0);
        gbc.writeMem(0xc1ee, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x692, gbc.sp());
        EXPECT(0xc1f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ee));
        EXPECT(0x1d, gbc.readMem(0xc1ef));
        // CB 1D 00D9
        gbc.setState(0x1df5, 0xb122, 0xd040, 0x739e, 0xd35f, 0x396, 0x1, 0x0);
        gbc.writeMem(0x1df5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb122, gbc.sp());
        EXPECT(0x1df7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00DA
        gbc.setState(0xdc3a, 0xf32, 0xa5d0, 0x3973, 0x2273, 0xd8ab, 0x0, 0x1);
        gbc.writeMem(0xdc3a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf32, gbc.sp());
        EXPECT(0xdc3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc3a));
        EXPECT(0x1d, gbc.readMem(0xdc3b));
        // CB 1D 00DB
        gbc.setState(0xdb1d, 0xd84a, 0xf000, 0x2687, 0x5bb6, 0x1950, 0x0, 0x0);
        gbc.writeMem(0xdb1d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd84a, gbc.sp());
        EXPECT(0xdb1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb1d));
        EXPECT(0x1d, gbc.readMem(0xdb1e));
        // CB 1D 00DC
        gbc.setState(0x5ad3, 0xf19e, 0x8ce0, 0xdc87, 0x7d83, 0x682e, 0x0, 0x1);
        gbc.writeMem(0x5ad3, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf19e, gbc.sp());
        EXPECT(0x5ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00DD
        gbc.setState(0xd05d, 0x180c, 0x4a90, 0xbfba, 0xdb6d, 0x32e9, 0x1, 0x1);
        gbc.writeMem(0xd05d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x180c, gbc.sp());
        EXPECT(0xd05f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd05d));
        EXPECT(0x1d, gbc.readMem(0xd05e));
        // CB 1D 00DE
        gbc.setState(0x8619, 0x6963, 0xa040, 0x2c40, 0xa333, 0x6fdd, 0x1, 0x1);
        gbc.writeMem(0x8619, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6963, gbc.sp());
        EXPECT(0x861b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8619));
        EXPECT(0x1d, gbc.readMem(0x861a));
        // CB 1D 00DF
        gbc.setState(0xd12a, 0x3c4d, 0xff10, 0xebb5, 0x9047, 0x7d3f, 0x0, 0x0);
        gbc.writeMem(0xd12a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3c4d, gbc.sp());
        EXPECT(0xd12c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd12a));
        EXPECT(0x1d, gbc.readMem(0xd12b));
        // CB 1D 00E0
        gbc.setState(0x293e, 0x54b, 0xc860, 0x9cce, 0x6c3d, 0xd397, 0x1, 0x0);
        gbc.writeMem(0x293e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x54b, gbc.sp());
        EXPECT(0x2940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00E1
        gbc.setState(0x9472, 0xe858, 0x6280, 0xf3ba, 0x9638, 0x6968, 0x1, 0x0);
        gbc.writeMem(0x9472, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe858, gbc.sp());
        EXPECT(0x9474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9472));
        EXPECT(0x1d, gbc.readMem(0x9473));
        // CB 1D 00E3
        gbc.setState(0x1346, 0x741c, 0x5f30, 0xa4f3, 0x89fd, 0xfeec, 0x0, 0x1);
        gbc.writeMem(0x1346, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x741c, gbc.sp());
        EXPECT(0x1348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00E4
        gbc.setState(0xbe01, 0x65dd, 0x9b70, 0x5d4d, 0x8a17, 0xb754, 0x0, 0x0);
        gbc.writeMem(0xbe01, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x65dd, gbc.sp());
        EXPECT(0xbe03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe01));
        EXPECT(0x1d, gbc.readMem(0xbe02));
        // CB 1D 00E5
        gbc.setState(0x7252, 0xfdf, 0xae60, 0x433a, 0xdda9, 0xace1, 0x0, 0x1);
        gbc.writeMem(0x7252, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xfdf, gbc.sp());
        EXPECT(0x7254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00E6
        gbc.setState(0x565f, 0x1d3f, 0x8330, 0x431e, 0x858a, 0x2469, 0x0, 0x1);
        gbc.writeMem(0x565f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1d3f, gbc.sp());
        EXPECT(0x5661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00E7
        gbc.setState(0x38ba, 0xcb24, 0x4f40, 0xa10e, 0x2a85, 0x5fec, 0x1, 0x0);
        gbc.writeMem(0x38ba, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xcb24, gbc.sp());
        EXPECT(0x38bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00E9
        gbc.setState(0xb221, 0x60b6, 0x58c0, 0xb920, 0xb919, 0x6050, 0x0, 0x0);
        gbc.writeMem(0xb221, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x60b6, gbc.sp());
        EXPECT(0xb223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb221));
        EXPECT(0x1d, gbc.readMem(0xb222));
        // CB 1D 00EA
        gbc.setState(0x9e77, 0x629, 0x9c60, 0xf405, 0xc40f, 0x8610, 0x1, 0x1);
        gbc.writeMem(0x9e77, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x629, gbc.sp());
        EXPECT(0x9e79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e77));
        EXPECT(0x1d, gbc.readMem(0x9e78));
        // CB 1D 00EB
        gbc.setState(0xae56, 0x8f29, 0x24a0, 0x3677, 0x122e, 0xf34b, 0x1, 0x0);
        gbc.writeMem(0xae56, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8f29, gbc.sp());
        EXPECT(0xae58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae56));
        EXPECT(0x1d, gbc.readMem(0xae57));
        // CB 1D 00EC
        gbc.setState(0xe793, 0x96d1, 0x6c70, 0x13b7, 0x32fe, 0x3f84, 0x0, 0x0);
        gbc.writeMem(0xe793, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x96d1, gbc.sp());
        EXPECT(0xe795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe793));
        EXPECT(0x1d, gbc.readMem(0xe794));
        // CB 1D 00ED
        gbc.setState(0xb0e5, 0x3037, 0x99b0, 0xd875, 0xf3d3, 0xf953, 0x0, 0x1);
        gbc.writeMem(0xb0e5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3037, gbc.sp());
        EXPECT(0xb0e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e5));
        EXPECT(0x1d, gbc.readMem(0xb0e6));
        // CB 1D 00EE
        gbc.setState(0xeb14, 0x94f1, 0x3570, 0x54bc, 0x7bfa, 0xad3c, 0x0, 0x1);
        gbc.writeMem(0xeb14, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x94f1, gbc.sp());
        EXPECT(0xeb16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb14));
        EXPECT(0x1d, gbc.readMem(0xeb15));
        // CB 1D 00EF
        gbc.setState(0x21b9, 0xbfa1, 0x7e10, 0x1030, 0x2d3e, 0x5a5c, 0x1, 0x0);
        gbc.writeMem(0x21b9, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xbfa1, gbc.sp());
        EXPECT(0x21bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00F0
        gbc.setState(0xb368, 0xfa9a, 0xaf30, 0x4c9d, 0xc43, 0x707b, 0x0, 0x1);
        gbc.writeMem(0xb368, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xfa9a, gbc.sp());
        EXPECT(0xb36a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb368));
        EXPECT(0x1d, gbc.readMem(0xb369));
        // CB 1D 00F1
        gbc.setState(0x531c, 0x36bb, 0xaf20, 0xb96f, 0x9c0a, 0x7f59, 0x1, 0x1);
        gbc.writeMem(0x531c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x36bb, gbc.sp());
        EXPECT(0x531e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00F2
        gbc.setState(0xb776, 0xb50e, 0x85f0, 0x7543, 0xa670, 0x90ac, 0x1, 0x0);
        gbc.writeMem(0xb776, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb50e, gbc.sp());
        EXPECT(0xb778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb776));
        EXPECT(0x1d, gbc.readMem(0xb777));
        // CB 1D 00F3
        gbc.setState(0xc1b7, 0x5344, 0xe230, 0x8188, 0x1919, 0x88b4, 0x0, 0x0);
        gbc.writeMem(0xc1b7, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5344, gbc.sp());
        EXPECT(0xc1b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b7));
        EXPECT(0x1d, gbc.readMem(0xc1b8));
        // CB 1D 00F4
        gbc.setState(0x61ea, 0xf4a7, 0x1f20, 0x2bdc, 0xee66, 0x3fea, 0x1, 0x0);
        gbc.writeMem(0x61ea, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf4a7, gbc.sp());
        EXPECT(0x61ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00F5
        gbc.setState(0xd417, 0xa491, 0x4d10, 0x7f07, 0x57aa, 0x99ae, 0x1, 0x0);
        gbc.writeMem(0xd417, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa491, gbc.sp());
        EXPECT(0xd419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd417));
        EXPECT(0x1d, gbc.readMem(0xd418));
        // CB 1D 00F6
        gbc.setState(0xe1c0, 0xad6a, 0xa780, 0x2136, 0x4c68, 0x3e41, 0x0, 0x0);
        gbc.writeMem(0xe1c0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xad6a, gbc.sp());
        EXPECT(0xe1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c0));
        EXPECT(0x1d, gbc.readMem(0xe1c1));
        // CB 1D 00F7
        gbc.setState(0xc470, 0xbda9, 0x2fc0, 0xd7a0, 0x84d0, 0x22f8, 0x1, 0x0);
        gbc.writeMem(0xc470, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbda9, gbc.sp());
        EXPECT(0xc472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc470));
        EXPECT(0x1d, gbc.readMem(0xc471));
        // CB 1D 00F8
        gbc.setState(0xecf8, 0xf226, 0x4230, 0x1b0f, 0x74c4, 0xb11a, 0x1, 0x0);
        gbc.writeMem(0xecf8, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf226, gbc.sp());
        EXPECT(0xecfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecf8));
        EXPECT(0x1d, gbc.readMem(0xecf9));
        // CB 1D 00F9
        gbc.setState(0x2c62, 0x245d, 0x8260, 0x65b3, 0x302e, 0x6483, 0x1, 0x1);
        gbc.writeMem(0x2c62, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x245d, gbc.sp());
        EXPECT(0x2c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00FA
        gbc.setState(0xcb24, 0xd111, 0xf6f0, 0x25ce, 0x1b30, 0x2ba5, 0x0, 0x0);
        gbc.writeMem(0xcb24, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd111, gbc.sp());
        EXPECT(0xcb26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb24));
        EXPECT(0x1d, gbc.readMem(0xcb25));
        // CB 1D 00FB
        gbc.setState(0x6411, 0xaeb0, 0xb370, 0x5878, 0x8415, 0xc6ab, 0x0, 0x1);
        gbc.writeMem(0x6411, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xaeb0, gbc.sp());
        EXPECT(0x6413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00FC
        gbc.setState(0x5ea4, 0x4098, 0xcbd0, 0xa303, 0x9e94, 0x1f5e, 0x0, 0x0);
        gbc.writeMem(0x5ea4, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4098, gbc.sp());
        EXPECT(0x5ea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00FD
        gbc.setState(0x8c1, 0xdfcd, 0xb000, 0xb29d, 0x39b0, 0x8b76, 0x0, 0x0);
        gbc.writeMem(0x8c1, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdfcd, gbc.sp());
        EXPECT(0x8c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 00FE
        gbc.setState(0x2e37, 0x6582, 0xbc70, 0xc163, 0xeb83, 0xc67b, 0x0, 0x0);
        gbc.writeMem(0x2e37, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6582, gbc.sp());
        EXPECT(0x2e39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 00FF
        gbc.setState(0x7f1f, 0x951c, 0x5200, 0xd5b3, 0xab05, 0x3631, 0x1, 0x1);
        gbc.writeMem(0x7f1f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x951c, gbc.sp());
        EXPECT(0x7f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0100
        gbc.setState(0x676b, 0x4066, 0xeed0, 0x7bbc, 0x3171, 0x410b, 0x0, 0x0);
        gbc.writeMem(0x676b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4066, gbc.sp());
        EXPECT(0x676d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0101
        gbc.setState(0x2f5b, 0xe626, 0xd50, 0x1b09, 0x7647, 0xab79, 0x1, 0x0);
        gbc.writeMem(0x2f5b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe626, gbc.sp());
        EXPECT(0x2f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0102
        gbc.setState(0xbffe, 0x6b8c, 0x4e60, 0x465a, 0x4fc6, 0x4433, 0x1, 0x1);
        gbc.writeMem(0xbffe, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6b8c, gbc.sp());
        EXPECT(0xc000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbffe));
        EXPECT(0x1d, gbc.readMem(0xbfff));
        // CB 1D 0103
        gbc.setState(0xdd2b, 0xad7f, 0x26c0, 0x75ae, 0xb211, 0xc651, 0x1, 0x1);
        gbc.writeMem(0xdd2b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xad7f, gbc.sp());
        EXPECT(0xdd2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd2b));
        EXPECT(0x1d, gbc.readMem(0xdd2c));
        // CB 1D 0104
        gbc.setState(0xa02e, 0x920, 0x8050, 0xfd61, 0xa974, 0xca89, 0x1, 0x0);
        gbc.writeMem(0xa02e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x920, gbc.sp());
        EXPECT(0xa030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa02e));
        EXPECT(0x1d, gbc.readMem(0xa02f));
        // CB 1D 0105
        gbc.setState(0xea2b, 0x1f33, 0x5d30, 0xae00, 0x2e07, 0x754e, 0x0, 0x1);
        gbc.writeMem(0xea2b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1f33, gbc.sp());
        EXPECT(0xea2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea2b));
        EXPECT(0x1d, gbc.readMem(0xea2c));
        // CB 1D 0106
        gbc.setState(0x8067, 0x313a, 0x7290, 0xf047, 0x32c4, 0xb311, 0x1, 0x1);
        gbc.writeMem(0x8067, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x313a, gbc.sp());
        EXPECT(0x8069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8067));
        EXPECT(0x1d, gbc.readMem(0x8068));
        // CB 1D 0107
        gbc.setState(0x74c9, 0xc023, 0xb1a0, 0x127b, 0xaa3, 0xa38e, 0x0, 0x0);
        gbc.writeMem(0x74c9, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc023, gbc.sp());
        EXPECT(0x74cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0108
        gbc.setState(0x84f, 0xbbc0, 0xe9e0, 0x930e, 0xe4ea, 0xe008, 0x1, 0x0);
        gbc.writeMem(0x84f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbbc0, gbc.sp());
        EXPECT(0x851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0109
        gbc.setState(0xc9e1, 0xbdf4, 0x3ec0, 0xc4f9, 0xffc8, 0x2195, 0x1, 0x1);
        gbc.writeMem(0xc9e1, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbdf4, gbc.sp());
        EXPECT(0xc9e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9e1));
        EXPECT(0x1d, gbc.readMem(0xc9e2));
        // CB 1D 010B
        gbc.setState(0xa688, 0xf9d4, 0xa6f0, 0x9503, 0xf5b0, 0x5833, 0x1, 0x0);
        gbc.writeMem(0xa688, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf9d4, gbc.sp());
        EXPECT(0xa68a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa688));
        EXPECT(0x1d, gbc.readMem(0xa689));
        // CB 1D 010C
        gbc.setState(0x280f, 0x3b0a, 0xb3a0, 0xdacb, 0xd656, 0xdbde, 0x0, 0x0);
        gbc.writeMem(0x280f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3b0a, gbc.sp());
        EXPECT(0x2811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 010D
        gbc.setState(0xd949, 0xd6cb, 0x8000, 0xa0b3, 0xddc8, 0x1708, 0x1, 0x1);
        gbc.writeMem(0xd949, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd6cb, gbc.sp());
        EXPECT(0xd94b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd949));
        EXPECT(0x1d, gbc.readMem(0xd94a));
        // CB 1D 010E
        gbc.setState(0xb0e9, 0x4382, 0xd3b0, 0xd8c8, 0xc2cb, 0xbf1e, 0x1, 0x0);
        gbc.writeMem(0xb0e9, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4382, gbc.sp());
        EXPECT(0xb0eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e9));
        EXPECT(0x1d, gbc.readMem(0xb0ea));
        // CB 1D 010F
        gbc.setState(0x3e1b, 0x15d, 0xeb80, 0x75d6, 0x1dde, 0x1455, 0x1, 0x0);
        gbc.writeMem(0x3e1b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x15d, gbc.sp());
        EXPECT(0x3e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0110
        gbc.setState(0xb681, 0xf2d6, 0xc960, 0xdbb, 0xd201, 0x25ab, 0x0, 0x0);
        gbc.writeMem(0xb681, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf2d6, gbc.sp());
        EXPECT(0xb683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb681));
        EXPECT(0x1d, gbc.readMem(0xb682));
        // CB 1D 0111
        gbc.setState(0xc815, 0x705c, 0x1b0, 0x2806, 0xa3ef, 0xe8c3, 0x0, 0x0);
        gbc.writeMem(0xc815, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x705c, gbc.sp());
        EXPECT(0xc817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc815));
        EXPECT(0x1d, gbc.readMem(0xc816));
        // CB 1D 0112
        gbc.setState(0x913a, 0x45cb, 0x1360, 0xed3, 0xd962, 0xf9d6, 0x0, 0x0);
        gbc.writeMem(0x913a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x45cb, gbc.sp());
        EXPECT(0x913c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x913a));
        EXPECT(0x1d, gbc.readMem(0x913b));
        // CB 1D 0113
        gbc.setState(0x607d, 0xa362, 0xec40, 0xf3bb, 0xd98f, 0xb282, 0x1, 0x1);
        gbc.writeMem(0x607d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa362, gbc.sp());
        EXPECT(0x607f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0114
        gbc.setState(0x26, 0x6f23, 0x3ad0, 0x8ff1, 0xb65, 0xe507, 0x1, 0x1);
        gbc.writeMem(0x26, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6f23, gbc.sp());
        EXPECT(0x28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0115
        gbc.setState(0x894e, 0xea4d, 0x4140, 0x86c, 0xfaf8, 0xe2eb, 0x0, 0x1);
        gbc.writeMem(0x894e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xea4d, gbc.sp());
        EXPECT(0x8950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x894e));
        EXPECT(0x1d, gbc.readMem(0x894f));
        // CB 1D 0116
        gbc.setState(0x669c, 0xaa1b, 0xb0d0, 0xb7fa, 0xc490, 0x9be8, 0x1, 0x1);
        gbc.writeMem(0x669c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xaa1b, gbc.sp());
        EXPECT(0x669e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0117
        gbc.setState(0x1c9b, 0xf632, 0xe20, 0x5870, 0x21b6, 0x1dde, 0x0, 0x1);
        gbc.writeMem(0x1c9b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf632, gbc.sp());
        EXPECT(0x1c9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0118
        gbc.setState(0x1a18, 0x3557, 0x690, 0x52f9, 0xf25a, 0x1480, 0x0, 0x0);
        gbc.writeMem(0x1a18, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3557, gbc.sp());
        EXPECT(0x1a1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0119
        gbc.setState(0xa6fb, 0x5740, 0xaec0, 0x2bac, 0xb031, 0xbf1e, 0x1, 0x1);
        gbc.writeMem(0xa6fb, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5740, gbc.sp());
        EXPECT(0xa6fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6fb));
        EXPECT(0x1d, gbc.readMem(0xa6fc));
        // CB 1D 011A
        gbc.setState(0xa2fb, 0xa5b8, 0x72f0, 0x85b8, 0x18e2, 0x97e5, 0x1, 0x0);
        gbc.writeMem(0xa2fb, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa5b8, gbc.sp());
        EXPECT(0xa2fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2fb));
        EXPECT(0x1d, gbc.readMem(0xa2fc));
        // CB 1D 011B
        gbc.setState(0x9a63, 0x504c, 0xc2d0, 0xa558, 0x779f, 0xa146, 0x0, 0x1);
        gbc.writeMem(0x9a63, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x504c, gbc.sp());
        EXPECT(0x9a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a63));
        EXPECT(0x1d, gbc.readMem(0x9a64));
        // CB 1D 011C
        gbc.setState(0xdd69, 0xc1ed, 0x6c30, 0xb864, 0x42a9, 0xba8d, 0x1, 0x0);
        gbc.writeMem(0xdd69, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc1ed, gbc.sp());
        EXPECT(0xdd6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd69));
        EXPECT(0x1d, gbc.readMem(0xdd6a));
        // CB 1D 011D
        gbc.setState(0xc736, 0xd62b, 0x8e20, 0x6ad9, 0x2c32, 0x36ba, 0x1, 0x0);
        gbc.writeMem(0xc736, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd62b, gbc.sp());
        EXPECT(0xc738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc736));
        EXPECT(0x1d, gbc.readMem(0xc737));
        // CB 1D 011E
        gbc.setState(0xbc10, 0xf9cd, 0xd660, 0xca13, 0x97d0, 0x2dce, 0x1, 0x0);
        gbc.writeMem(0xbc10, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf9cd, gbc.sp());
        EXPECT(0xbc12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc10));
        EXPECT(0x1d, gbc.readMem(0xbc11));
        // CB 1D 011F
        gbc.setState(0xeac5, 0x5f74, 0xbe0, 0x9d1e, 0xddab, 0x8126, 0x0, 0x1);
        gbc.writeMem(0xeac5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5f74, gbc.sp());
        EXPECT(0xeac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac5));
        EXPECT(0x1d, gbc.readMem(0xeac6));
        // CB 1D 0120
        gbc.setState(0x8b4, 0x7765, 0x54f0, 0x706e, 0xe756, 0xb0a, 0x0, 0x1);
        gbc.writeMem(0x8b4, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7765, gbc.sp());
        EXPECT(0x8b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0121
        gbc.setState(0x7ec3, 0xb00d, 0x20c0, 0x1193, 0x5dde, 0x4f9, 0x0, 0x0);
        gbc.writeMem(0x7ec3, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb00d, gbc.sp());
        EXPECT(0x7ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0123
        gbc.setState(0xbb24, 0x9790, 0xfa30, 0x584a, 0xab28, 0x352a, 0x1, 0x1);
        gbc.writeMem(0xbb24, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9790, gbc.sp());
        EXPECT(0xbb26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb24));
        EXPECT(0x1d, gbc.readMem(0xbb25));
        // CB 1D 0124
        gbc.setState(0x62a9, 0xdb2d, 0x2480, 0x6f4c, 0x74bd, 0xed46, 0x1, 0x0);
        gbc.writeMem(0x62a9, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xdb2d, gbc.sp());
        EXPECT(0x62ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0125
        gbc.setState(0x60a7, 0x8f46, 0x69d0, 0x25be, 0xd772, 0x907f, 0x1, 0x0);
        gbc.writeMem(0x60a7, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8f46, gbc.sp());
        EXPECT(0x60a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0126
        gbc.setState(0xd1fb, 0xd133, 0xcbc0, 0xae21, 0x6efc, 0x439d, 0x1, 0x0);
        gbc.writeMem(0xd1fb, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd133, gbc.sp());
        EXPECT(0xd1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1fb));
        EXPECT(0x1d, gbc.readMem(0xd1fc));
        // CB 1D 0127
        gbc.setState(0x297c, 0x15c4, 0xc970, 0x187a, 0x5aaa, 0xaa39, 0x0, 0x1);
        gbc.writeMem(0x297c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x15c4, gbc.sp());
        EXPECT(0x297e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0128
        gbc.setState(0xed8a, 0xac43, 0xc580, 0x45e7, 0xd4f0, 0x978f, 0x0, 0x1);
        gbc.writeMem(0xed8a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xac43, gbc.sp());
        EXPECT(0xed8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed8a));
        EXPECT(0x1d, gbc.readMem(0xed8b));
        // CB 1D 0129
        gbc.setState(0xd110, 0x577a, 0x7f00, 0x8003, 0x216e, 0x27b6, 0x0, 0x0);
        gbc.writeMem(0xd110, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x577a, gbc.sp());
        EXPECT(0xd112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd110));
        EXPECT(0x1d, gbc.readMem(0xd111));
        // CB 1D 012A
        gbc.setState(0xc8fb, 0x4306, 0x51b0, 0x3c8e, 0x985f, 0x5c71, 0x1, 0x1);
        gbc.writeMem(0xc8fb, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4306, gbc.sp());
        EXPECT(0xc8fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8fb));
        EXPECT(0x1d, gbc.readMem(0xc8fc));
        // CB 1D 012B
        gbc.setState(0xcdb8, 0xd1f9, 0x6650, 0x8b84, 0x44ff, 0x4d40, 0x0, 0x1);
        gbc.writeMem(0xcdb8, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd1f9, gbc.sp());
        EXPECT(0xcdba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb8));
        EXPECT(0x1d, gbc.readMem(0xcdb9));
        // CB 1D 012C
        gbc.setState(0x8ba, 0x5789, 0x8140, 0x7c8, 0x12c, 0x7425, 0x0, 0x0);
        gbc.writeMem(0x8ba, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5789, gbc.sp());
        EXPECT(0x8bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 012D
        gbc.setState(0x462a, 0x64a9, 0x7600, 0x724f, 0x4c20, 0xf56f, 0x1, 0x1);
        gbc.writeMem(0x462a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x64a9, gbc.sp());
        EXPECT(0x462c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 012F
        gbc.setState(0x4c8, 0x43d1, 0xe9a0, 0xd753, 0x933c, 0x792b, 0x0, 0x1);
        gbc.writeMem(0x4c8, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x43d1, gbc.sp());
        EXPECT(0x4ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0130
        gbc.setState(0x120c, 0x1e15, 0x28a0, 0xfa85, 0xb034, 0x1710, 0x0, 0x0);
        gbc.writeMem(0x120c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1e15, gbc.sp());
        EXPECT(0x120e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0131
        gbc.setState(0x358b, 0xce86, 0x63f0, 0xbb8c, 0x888d, 0xee40, 0x1, 0x1);
        gbc.writeMem(0x358b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xce86, gbc.sp());
        EXPECT(0x358d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0132
        gbc.setState(0xc76b, 0x66fe, 0xb7a0, 0xcd50, 0x4f46, 0xb88b, 0x1, 0x1);
        gbc.writeMem(0xc76b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x66fe, gbc.sp());
        EXPECT(0xc76d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc76b));
        EXPECT(0x1d, gbc.readMem(0xc76c));
        // CB 1D 0133
        gbc.setState(0x2fcf, 0xf33c, 0xc010, 0xd2a7, 0x430f, 0x8487, 0x0, 0x1);
        gbc.writeMem(0x2fcf, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf33c, gbc.sp());
        EXPECT(0x2fd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0134
        gbc.setState(0x56fc, 0xfea0, 0x210, 0x1e44, 0x183a, 0x2820, 0x0, 0x1);
        gbc.writeMem(0x56fc, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfea0, gbc.sp());
        EXPECT(0x56fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0135
        gbc.setState(0x846e, 0x1ad1, 0xf0b0, 0x6633, 0x213f, 0xc428, 0x1, 0x1);
        gbc.writeMem(0x846e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1ad1, gbc.sp());
        EXPECT(0x8470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x846e));
        EXPECT(0x1d, gbc.readMem(0x846f));
        // CB 1D 0136
        gbc.setState(0x52f8, 0x795d, 0x7150, 0x1679, 0x427, 0xb820, 0x1, 0x1);
        gbc.writeMem(0x52f8, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x795d, gbc.sp());
        EXPECT(0x52fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0137
        gbc.setState(0xbb32, 0xa01e, 0xd2e0, 0x54d8, 0xa505, 0xa2ed, 0x0, 0x1);
        gbc.writeMem(0xbb32, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa01e, gbc.sp());
        EXPECT(0xbb34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb32));
        EXPECT(0x1d, gbc.readMem(0xbb33));
        // CB 1D 0138
        gbc.setState(0xe4fa, 0x1e5f, 0x1c00, 0x43d8, 0xed01, 0x6d71, 0x0, 0x0);
        gbc.writeMem(0xe4fa, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1e5f, gbc.sp());
        EXPECT(0xe4fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4fa));
        EXPECT(0x1d, gbc.readMem(0xe4fb));
        // CB 1D 0139
        gbc.setState(0xdc31, 0xed52, 0xc60, 0xf15f, 0x8292, 0xfbee, 0x0, 0x1);
        gbc.writeMem(0xdc31, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xed52, gbc.sp());
        EXPECT(0xdc33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc31));
        EXPECT(0x1d, gbc.readMem(0xdc32));
        // CB 1D 013A
        gbc.setState(0xe1cd, 0xf33a, 0x3150, 0xa91e, 0x91e3, 0xea35, 0x0, 0x0);
        gbc.writeMem(0xe1cd, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf33a, gbc.sp());
        EXPECT(0xe1cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1cd));
        EXPECT(0x1d, gbc.readMem(0xe1ce));
        // CB 1D 013B
        gbc.setState(0xc65, 0xab33, 0x7ed0, 0xcefd, 0xfbac, 0xf5cd, 0x0, 0x1);
        gbc.writeMem(0xc65, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xab33, gbc.sp());
        EXPECT(0xc67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 013C
        gbc.setState(0xc239, 0x1b73, 0x47d0, 0xa177, 0x864c, 0xba3c, 0x0, 0x0);
        gbc.writeMem(0xc239, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1b73, gbc.sp());
        EXPECT(0xc23b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc239));
        EXPECT(0x1d, gbc.readMem(0xc23a));
        // CB 1D 013D
        gbc.setState(0x828, 0x7d3c, 0x39a0, 0x35bf, 0x656e, 0x45a2, 0x0, 0x1);
        gbc.writeMem(0x828, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7d3c, gbc.sp());
        EXPECT(0x82a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 013E
        gbc.setState(0xe683, 0x6e51, 0xff20, 0x161d, 0x3365, 0xb17b, 0x1, 0x0);
        gbc.writeMem(0xe683, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6e51, gbc.sp());
        EXPECT(0xe685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe683));
        EXPECT(0x1d, gbc.readMem(0xe684));
        // CB 1D 013F
        gbc.setState(0xebdd, 0x65ef, 0x63c0, 0x83a0, 0xb6c6, 0x3a06, 0x0, 0x0);
        gbc.writeMem(0xebdd, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x65ef, gbc.sp());
        EXPECT(0xebdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebdd));
        EXPECT(0x1d, gbc.readMem(0xebde));
        // CB 1D 0140
        gbc.setState(0xe028, 0x65dd, 0x6c30, 0x4d3, 0x5195, 0x99f5, 0x0, 0x1);
        gbc.writeMem(0xe028, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x65dd, gbc.sp());
        EXPECT(0xe02a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe028));
        EXPECT(0x1d, gbc.readMem(0xe029));
        // CB 1D 0141
        gbc.setState(0xd095, 0x41b, 0xa8c0, 0x5a52, 0xe5ad, 0x20af, 0x0, 0x0);
        gbc.writeMem(0xd095, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x41b, gbc.sp());
        EXPECT(0xd097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd095));
        EXPECT(0x1d, gbc.readMem(0xd096));
        // CB 1D 0142
        gbc.setState(0x6182, 0x69d3, 0x6340, 0x4d4e, 0xf502, 0x7eac, 0x1, 0x0);
        gbc.writeMem(0x6182, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x69d3, gbc.sp());
        EXPECT(0x6184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0143
        gbc.setState(0xe798, 0x2323, 0x6f30, 0xf6b8, 0xfb8b, 0x72e, 0x1, 0x1);
        gbc.writeMem(0xe798, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2323, gbc.sp());
        EXPECT(0xe79a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe798));
        EXPECT(0x1d, gbc.readMem(0xe799));
        // CB 1D 0144
        gbc.setState(0xaddd, 0xdf9f, 0xabd0, 0x7eee, 0x3861, 0x6ab0, 0x1, 0x1);
        gbc.writeMem(0xaddd, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xdf9f, gbc.sp());
        EXPECT(0xaddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaddd));
        EXPECT(0x1d, gbc.readMem(0xadde));
        // CB 1D 0145
        gbc.setState(0x226f, 0x25ea, 0xd960, 0xac5b, 0x50fa, 0x2b4e, 0x1, 0x1);
        gbc.writeMem(0x226f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x25ea, gbc.sp());
        EXPECT(0x2271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0146
        gbc.setState(0x88d0, 0xe654, 0x35a0, 0xb5cb, 0x7244, 0x3ec7, 0x0, 0x1);
        gbc.writeMem(0x88d0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe654, gbc.sp());
        EXPECT(0x88d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88d0));
        EXPECT(0x1d, gbc.readMem(0x88d1));
        // CB 1D 0147
        gbc.setState(0x31fa, 0xa3ad, 0x23c0, 0x5b6f, 0x745a, 0x7e26, 0x1, 0x1);
        gbc.writeMem(0x31fa, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa3ad, gbc.sp());
        EXPECT(0x31fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0148
        gbc.setState(0x1f0d, 0x96af, 0xf880, 0x6356, 0x9f43, 0x1f73, 0x1, 0x0);
        gbc.writeMem(0x1f0d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x96af, gbc.sp());
        EXPECT(0x1f0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0149
        gbc.setState(0x49f6, 0x24c1, 0x3ab0, 0x5e7f, 0xece1, 0xd2c1, 0x1, 0x0);
        gbc.writeMem(0x49f6, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x24c1, gbc.sp());
        EXPECT(0x49f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 014A
        gbc.setState(0x8ea3, 0xa79d, 0x9830, 0xa7d2, 0x2d9b, 0x1bc, 0x1, 0x0);
        gbc.writeMem(0x8ea3, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa79d, gbc.sp());
        EXPECT(0x8ea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea3));
        EXPECT(0x1d, gbc.readMem(0x8ea4));
        // CB 1D 014C
        gbc.setState(0x5cc9, 0x639b, 0x6680, 0x18f2, 0xdefe, 0x5f5c, 0x0, 0x0);
        gbc.writeMem(0x5cc9, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x639b, gbc.sp());
        EXPECT(0x5ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 014D
        gbc.setState(0x6e8e, 0x32b9, 0xc510, 0xc38b, 0x22bd, 0x9dd2, 0x0, 0x1);
        gbc.writeMem(0x6e8e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x32b9, gbc.sp());
        EXPECT(0x6e90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 014E
        gbc.setState(0x7028, 0x6120, 0xacc0, 0x32b2, 0x443e, 0xbf89, 0x1, 0x1);
        gbc.writeMem(0x7028, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6120, gbc.sp());
        EXPECT(0x702a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 014F
        gbc.setState(0xdaa4, 0xfc9b, 0xb3e0, 0xe023, 0x9b9, 0xcbe0, 0x1, 0x1);
        gbc.writeMem(0xdaa4, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xfc9b, gbc.sp());
        EXPECT(0xdaa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaa4));
        EXPECT(0x1d, gbc.readMem(0xdaa5));
        // CB 1D 0150
        gbc.setState(0xae41, 0x2556, 0x8f00, 0xfafd, 0xb8e9, 0xbdd2, 0x0, 0x1);
        gbc.writeMem(0xae41, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2556, gbc.sp());
        EXPECT(0xae43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae41));
        EXPECT(0x1d, gbc.readMem(0xae42));
        // CB 1D 0151
        gbc.setState(0xe512, 0xe360, 0xfda0, 0x735f, 0xc5b5, 0x5258, 0x0, 0x0);
        gbc.writeMem(0xe512, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe360, gbc.sp());
        EXPECT(0xe514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe512));
        EXPECT(0x1d, gbc.readMem(0xe513));
        // CB 1D 0152
        gbc.setState(0x7e34, 0x75d4, 0x3800, 0x1f44, 0xe808, 0x8773, 0x1, 0x0);
        gbc.writeMem(0x7e34, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x75d4, gbc.sp());
        EXPECT(0x7e36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0153
        gbc.setState(0x59cb, 0xd93c, 0x2cf0, 0x2d8, 0x427a, 0xa614, 0x1, 0x0);
        gbc.writeMem(0x59cb, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd93c, gbc.sp());
        EXPECT(0x59cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0154
        gbc.setState(0xb01d, 0xaef6, 0xed30, 0x8dfa, 0x69d4, 0x641b, 0x1, 0x1);
        gbc.writeMem(0xb01d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xaef6, gbc.sp());
        EXPECT(0xb01f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb01d));
        EXPECT(0x1d, gbc.readMem(0xb01e));
        // CB 1D 0155
        gbc.setState(0x8afd, 0xb5bf, 0xcc10, 0xcb0f, 0xe5e, 0x2d8d, 0x0, 0x1);
        gbc.writeMem(0x8afd, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb5bf, gbc.sp());
        EXPECT(0x8aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8afd));
        EXPECT(0x1d, gbc.readMem(0x8afe));
        // CB 1D 0156
        gbc.setState(0x2643, 0x805c, 0x8f60, 0xe8fd, 0x1f48, 0x477, 0x0, 0x0);
        gbc.writeMem(0x2643, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x805c, gbc.sp());
        EXPECT(0x2645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0157
        gbc.setState(0x2464, 0xbc10, 0x4fa0, 0x96a6, 0x6eee, 0xc032, 0x0, 0x0);
        gbc.writeMem(0x2464, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbc10, gbc.sp());
        EXPECT(0x2466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0158
        gbc.setState(0x435d, 0x4c26, 0x2c30, 0xa66e, 0xc34e, 0x5db2, 0x0, 0x0);
        gbc.writeMem(0x435d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4c26, gbc.sp());
        EXPECT(0x435f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0159
        gbc.setState(0x1e1a, 0x7bd0, 0xb150, 0x1282, 0x8eb, 0x6e6e, 0x1, 0x0);
        gbc.writeMem(0x1e1a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7bd0, gbc.sp());
        EXPECT(0x1e1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 015A
        gbc.setState(0x456, 0x70ab, 0x8930, 0x8757, 0xfb12, 0x38ae, 0x1, 0x1);
        gbc.writeMem(0x456, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x70ab, gbc.sp());
        EXPECT(0x458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 015B
        gbc.setState(0x78b8, 0x7f24, 0x8d60, 0x8a12, 0x276, 0x557a, 0x1, 0x1);
        gbc.writeMem(0x78b8, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7f24, gbc.sp());
        EXPECT(0x78ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 015C
        gbc.setState(0x8ac7, 0xcba1, 0xd640, 0x84a6, 0x1da7, 0x1e5, 0x1, 0x1);
        gbc.writeMem(0x8ac7, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xcba1, gbc.sp());
        EXPECT(0x8ac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac7));
        EXPECT(0x1d, gbc.readMem(0x8ac8));
        // CB 1D 015D
        gbc.setState(0x84af, 0xb09b, 0xaf90, 0x905b, 0x7a95, 0xe758, 0x0, 0x0);
        gbc.writeMem(0x84af, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb09b, gbc.sp());
        EXPECT(0x84b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84af));
        EXPECT(0x1d, gbc.readMem(0x84b0));
        // CB 1D 015E
        gbc.setState(0x4695, 0x9dce, 0x3d50, 0xb761, 0x6e01, 0xa858, 0x1, 0x1);
        gbc.writeMem(0x4695, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9dce, gbc.sp());
        EXPECT(0x4697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 015F
        gbc.setState(0x1dab, 0xda5d, 0x3730, 0xa29e, 0x2b39, 0x7b2d, 0x0, 0x0);
        gbc.writeMem(0x1dab, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xda5d, gbc.sp());
        EXPECT(0x1dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0160
        gbc.setState(0x1f31, 0x8575, 0x4710, 0xd497, 0xc2d1, 0x7fba, 0x1, 0x1);
        gbc.writeMem(0x1f31, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8575, gbc.sp());
        EXPECT(0x1f33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0161
        gbc.setState(0x4e1d, 0xd012, 0xb50, 0x83fe, 0x3a41, 0x43c6, 0x0, 0x1);
        gbc.writeMem(0x4e1d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd012, gbc.sp());
        EXPECT(0x4e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0162
        gbc.setState(0xc9df, 0xd962, 0xf510, 0x1ee1, 0x9b4f, 0xde64, 0x1, 0x1);
        gbc.writeMem(0xc9df, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd962, gbc.sp());
        EXPECT(0xc9e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9df));
        EXPECT(0x1d, gbc.readMem(0xc9e0));
        // CB 1D 0163
        gbc.setState(0x4b22, 0xa11b, 0xde0, 0xfae3, 0x1cb5, 0x1c75, 0x1, 0x1);
        gbc.writeMem(0x4b22, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa11b, gbc.sp());
        EXPECT(0x4b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0164
        gbc.setState(0x532e, 0xb101, 0xc680, 0xda01, 0xa225, 0x31c2, 0x1, 0x0);
        gbc.writeMem(0x532e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb101, gbc.sp());
        EXPECT(0x5330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0165
        gbc.setState(0x9048, 0xee29, 0xd2a0, 0xad79, 0x86a0, 0x47cf, 0x1, 0x0);
        gbc.writeMem(0x9048, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xee29, gbc.sp());
        EXPECT(0x904a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9048));
        EXPECT(0x1d, gbc.readMem(0x9049));
        // CB 1D 0166
        gbc.setState(0x8ff0, 0x3184, 0xbf20, 0x2422, 0x15ca, 0xd4c4, 0x1, 0x1);
        gbc.writeMem(0x8ff0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3184, gbc.sp());
        EXPECT(0x8ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ff0));
        EXPECT(0x1d, gbc.readMem(0x8ff1));
        // CB 1D 0167
        gbc.setState(0x3b81, 0x96ed, 0xad10, 0xc488, 0x9449, 0x1e58, 0x0, 0x1);
        gbc.writeMem(0x3b81, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x96ed, gbc.sp());
        EXPECT(0x3b83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0168
        gbc.setState(0x281f, 0x491, 0xba60, 0xb227, 0x7dac, 0x34fc, 0x0, 0x1);
        gbc.writeMem(0x281f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x491, gbc.sp());
        EXPECT(0x2821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0169
        gbc.setState(0x68ba, 0x6f70, 0x7c60, 0xd322, 0x355f, 0xe27f, 0x1, 0x1);
        gbc.writeMem(0x68ba, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6f70, gbc.sp());
        EXPECT(0x68bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 016B
        gbc.setState(0x888, 0x4909, 0xcda0, 0x7de7, 0x9f8b, 0x6931, 0x0, 0x0);
        gbc.writeMem(0x888, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4909, gbc.sp());
        EXPECT(0x88a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 016C
        gbc.setState(0x4a5c, 0xe137, 0x6dd0, 0xaf00, 0x28e1, 0xa879, 0x0, 0x0);
        gbc.writeMem(0x4a5c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe137, gbc.sp());
        EXPECT(0x4a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 016D
        gbc.setState(0xac16, 0xde3b, 0x2200, 0xe72a, 0xcc29, 0xfdc5, 0x0, 0x1);
        gbc.writeMem(0xac16, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xde3b, gbc.sp());
        EXPECT(0xac18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac16));
        EXPECT(0x1d, gbc.readMem(0xac17));
        // CB 1D 016E
        gbc.setState(0x9de8, 0xd457, 0x7950, 0x73a, 0x5700, 0xac3d, 0x0, 0x0);
        gbc.writeMem(0x9de8, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd457, gbc.sp());
        EXPECT(0x9dea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de8));
        EXPECT(0x1d, gbc.readMem(0x9de9));
        // CB 1D 016F
        gbc.setState(0xd15a, 0x6da0, 0xd350, 0x729, 0xf8e8, 0x49c4, 0x0, 0x0);
        gbc.writeMem(0xd15a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6da0, gbc.sp());
        EXPECT(0xd15c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15a));
        EXPECT(0x1d, gbc.readMem(0xd15b));
        // CB 1D 0170
        gbc.setState(0xcf62, 0x1bf0, 0xd680, 0xe082, 0x3db, 0x3afb, 0x1, 0x0);
        gbc.writeMem(0xcf62, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1bf0, gbc.sp());
        EXPECT(0xcf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf62));
        EXPECT(0x1d, gbc.readMem(0xcf63));
        // CB 1D 0171
        gbc.setState(0x8956, 0xe61c, 0x440, 0x6b1d, 0xfd05, 0x698e, 0x0, 0x0);
        gbc.writeMem(0x8956, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe61c, gbc.sp());
        EXPECT(0x8958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8956));
        EXPECT(0x1d, gbc.readMem(0x8957));
        // CB 1D 0172
        gbc.setState(0x13c9, 0x635b, 0xacf0, 0x1c80, 0x34c2, 0x4cb5, 0x1, 0x1);
        gbc.writeMem(0x13c9, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x635b, gbc.sp());
        EXPECT(0x13cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0173
        gbc.setState(0x30de, 0x322e, 0x6490, 0x3fb8, 0xa71c, 0x8c0, 0x1, 0x0);
        gbc.writeMem(0x30de, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x322e, gbc.sp());
        EXPECT(0x30e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0174
        gbc.setState(0x9dcf, 0x7a48, 0x36e0, 0xf81e, 0x274c, 0x583f, 0x0, 0x1);
        gbc.writeMem(0x9dcf, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7a48, gbc.sp());
        EXPECT(0x9dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dcf));
        EXPECT(0x1d, gbc.readMem(0x9dd0));
        // CB 1D 0175
        gbc.setState(0x8d86, 0x427a, 0xb1a0, 0x8024, 0xdd63, 0xb459, 0x1, 0x0);
        gbc.writeMem(0x8d86, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x427a, gbc.sp());
        EXPECT(0x8d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d86));
        EXPECT(0x1d, gbc.readMem(0x8d87));
        // CB 1D 0176
        gbc.setState(0xe0e3, 0xcb84, 0xfe20, 0xc78f, 0x6f8b, 0x4cfc, 0x1, 0x1);
        gbc.writeMem(0xe0e3, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xcb84, gbc.sp());
        EXPECT(0xe0e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0e3));
        EXPECT(0x1d, gbc.readMem(0xe0e4));
        // CB 1D 0177
        gbc.setState(0x5394, 0xd0c0, 0x70d0, 0xd5d, 0xc69c, 0xb7b, 0x0, 0x1);
        gbc.writeMem(0x5394, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd0c0, gbc.sp());
        EXPECT(0x5396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0178
        gbc.setState(0x9c55, 0xff8e, 0x51f0, 0xec1b, 0x778a, 0x313e, 0x1, 0x0);
        gbc.writeMem(0x9c55, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xff8e, gbc.sp());
        EXPECT(0x9c57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c55));
        EXPECT(0x1d, gbc.readMem(0x9c56));
        // CB 1D 0179
        gbc.setState(0x79bb, 0xa3f3, 0x6190, 0x6818, 0xf71e, 0xd07a, 0x1, 0x1);
        gbc.writeMem(0x79bb, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa3f3, gbc.sp());
        EXPECT(0x79bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 017A
        gbc.setState(0x57f6, 0x3ae5, 0x3bf0, 0x1517, 0x1a1f, 0x2bce, 0x1, 0x0);
        gbc.writeMem(0x57f6, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3ae5, gbc.sp());
        EXPECT(0x57f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 017B
        gbc.setState(0x3245, 0x3a79, 0x5590, 0xe4b0, 0x1a5c, 0x77d4, 0x0, 0x1);
        gbc.writeMem(0x3245, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3a79, gbc.sp());
        EXPECT(0x3247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 017C
        gbc.setState(0xb514, 0xfe9e, 0xbb60, 0x5ccf, 0x4a5b, 0x67dd, 0x1, 0x1);
        gbc.writeMem(0xb514, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfe9e, gbc.sp());
        EXPECT(0xb516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb514));
        EXPECT(0x1d, gbc.readMem(0xb515));
        // CB 1D 017D
        gbc.setState(0xe54a, 0x805d, 0x6680, 0xc75c, 0x1fc8, 0x212, 0x0, 0x1);
        gbc.writeMem(0xe54a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x805d, gbc.sp());
        EXPECT(0xe54c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe54a));
        EXPECT(0x1d, gbc.readMem(0xe54b));
        // CB 1D 017E
        gbc.setState(0x7264, 0x9021, 0xbf20, 0x4e99, 0xae39, 0xb077, 0x0, 0x1);
        gbc.writeMem(0x7264, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9021, gbc.sp());
        EXPECT(0x7266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 017F
        gbc.setState(0x6f10, 0xcaca, 0xb790, 0xf6f6, 0x318d, 0x49d9, 0x0, 0x0);
        gbc.writeMem(0x6f10, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcaca, gbc.sp());
        EXPECT(0x6f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0180
        gbc.setState(0x4d28, 0x8da7, 0x8870, 0x3cb7, 0x5e00, 0x910c, 0x0, 0x1);
        gbc.writeMem(0x4d28, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8da7, gbc.sp());
        EXPECT(0x4d2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0181
        gbc.setState(0x5e66, 0x4446, 0xc170, 0x4f31, 0x8672, 0x972b, 0x1, 0x0);
        gbc.writeMem(0x5e66, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4446, gbc.sp());
        EXPECT(0x5e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0182
        gbc.setState(0xd01d, 0xae09, 0x2c60, 0x9e82, 0xd440, 0xa5ca, 0x1, 0x1);
        gbc.writeMem(0xd01d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xae09, gbc.sp());
        EXPECT(0xd01f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd01d));
        EXPECT(0x1d, gbc.readMem(0xd01e));
        // CB 1D 0183
        gbc.setState(0x963d, 0xb745, 0xe570, 0x7f3e, 0xa61e, 0xca5f, 0x0, 0x0);
        gbc.writeMem(0x963d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb745, gbc.sp());
        EXPECT(0x963f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x963d));
        EXPECT(0x1d, gbc.readMem(0x963e));
        // CB 1D 0184
        gbc.setState(0x3ee, 0xa3b, 0xf720, 0x32e0, 0x14a, 0x8d39, 0x0, 0x1);
        gbc.writeMem(0x3ee, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa3b, gbc.sp());
        EXPECT(0x3f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0185
        gbc.setState(0x40ff, 0x361a, 0x3450, 0x3e18, 0xd6aa, 0x7dd, 0x1, 0x1);
        gbc.writeMem(0x40ff, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x361a, gbc.sp());
        EXPECT(0x4101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0186
        gbc.setState(0x1347, 0x5134, 0xd2f0, 0xae6e, 0xd8fe, 0x843, 0x0, 0x1);
        gbc.writeMem(0x1347, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5134, gbc.sp());
        EXPECT(0x1349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0187
        gbc.setState(0x89a7, 0xe495, 0xaa20, 0x52b7, 0xe528, 0xff3, 0x1, 0x1);
        gbc.writeMem(0x89a7, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe495, gbc.sp());
        EXPECT(0x89a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a7));
        EXPECT(0x1d, gbc.readMem(0x89a8));
        // CB 1D 0188
        gbc.setState(0xa1c7, 0x51b4, 0x33a0, 0x594a, 0x229d, 0xb285, 0x1, 0x0);
        gbc.writeMem(0xa1c7, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x51b4, gbc.sp());
        EXPECT(0xa1c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1c7));
        EXPECT(0x1d, gbc.readMem(0xa1c8));
        // CB 1D 0189
        gbc.setState(0xe0bf, 0x3d3c, 0x8060, 0xc55b, 0x7bb5, 0x5f3b, 0x0, 0x1);
        gbc.writeMem(0xe0bf, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3d3c, gbc.sp());
        EXPECT(0xe0c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0bf));
        EXPECT(0x1d, gbc.readMem(0xe0c0));
        // CB 1D 018A
        gbc.setState(0xd39, 0x1b90, 0xac60, 0xa7f4, 0xbb95, 0xb0a8, 0x1, 0x0);
        gbc.writeMem(0xd39, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1b90, gbc.sp());
        EXPECT(0xd3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 018B
        gbc.setState(0x7600, 0xccd1, 0x77a0, 0x1fb9, 0x5618, 0xe07d, 0x0, 0x1);
        gbc.writeMem(0x7600, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xccd1, gbc.sp());
        EXPECT(0x7602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 018C
        gbc.setState(0x93e8, 0x6c3d, 0xcf20, 0x579a, 0x957d, 0xaefa, 0x1, 0x0);
        gbc.writeMem(0x93e8, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6c3d, gbc.sp());
        EXPECT(0x93ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e8));
        EXPECT(0x1d, gbc.readMem(0x93e9));
        // CB 1D 018D
        gbc.setState(0x7d0d, 0x8c3e, 0x7e80, 0x7431, 0x6181, 0xb196, 0x0, 0x0);
        gbc.writeMem(0x7d0d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8c3e, gbc.sp());
        EXPECT(0x7d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 018E
        gbc.setState(0xe295, 0x1f6e, 0x5340, 0x8985, 0xec67, 0xbc38, 0x1, 0x1);
        gbc.writeMem(0xe295, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1f6e, gbc.sp());
        EXPECT(0xe297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe295));
        EXPECT(0x1d, gbc.readMem(0xe296));
        // CB 1D 018F
        gbc.setState(0x4c2b, 0xc30, 0xcb60, 0x8b2, 0xc36f, 0xff61, 0x1, 0x0);
        gbc.writeMem(0x4c2b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc30, gbc.sp());
        EXPECT(0x4c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0190
        gbc.setState(0xdd31, 0xd330, 0x5630, 0x1e28, 0x6197, 0xa360, 0x0, 0x0);
        gbc.writeMem(0xdd31, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd330, gbc.sp());
        EXPECT(0xdd33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd31));
        EXPECT(0x1d, gbc.readMem(0xdd32));
        // CB 1D 0191
        gbc.setState(0x7087, 0xfec3, 0xc3f0, 0x2340, 0xe4fe, 0xff1b, 0x1, 0x0);
        gbc.writeMem(0x7087, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xfec3, gbc.sp());
        EXPECT(0x7089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0192
        gbc.setState(0xd4bd, 0x61c1, 0x7510, 0xb5b4, 0xf514, 0xc132, 0x1, 0x0);
        gbc.writeMem(0xd4bd, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x61c1, gbc.sp());
        EXPECT(0xd4bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4bd));
        EXPECT(0x1d, gbc.readMem(0xd4be));
        // CB 1D 0193
        gbc.setState(0x6300, 0xa89b, 0x15c0, 0x94f0, 0x9479, 0xdcf, 0x0, 0x1);
        gbc.writeMem(0x6300, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa89b, gbc.sp());
        EXPECT(0x6302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0194
        gbc.setState(0x14af, 0x1f32, 0xe3d0, 0x33ad, 0xe5f4, 0x18af, 0x1, 0x0);
        gbc.writeMem(0x14af, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1f32, gbc.sp());
        EXPECT(0x14b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0195
        gbc.setState(0x93dc, 0x3ae1, 0xfa0, 0x6e4, 0xa427, 0x7f4d, 0x1, 0x0);
        gbc.writeMem(0x93dc, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3ae1, gbc.sp());
        EXPECT(0x93de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93dc));
        EXPECT(0x1d, gbc.readMem(0x93dd));
        // CB 1D 0196
        gbc.setState(0x5e79, 0x3f17, 0x1e30, 0xe7bb, 0xcd06, 0xa2e2, 0x0, 0x1);
        gbc.writeMem(0x5e79, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3f17, gbc.sp());
        EXPECT(0x5e7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0197
        gbc.setState(0x207f, 0x671e, 0x6090, 0xb138, 0x53b8, 0xddea, 0x1, 0x1);
        gbc.writeMem(0x207f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x671e, gbc.sp());
        EXPECT(0x2081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0198
        gbc.setState(0x827d, 0x14a9, 0x9290, 0x202, 0x2f43, 0x81bf, 0x1, 0x0);
        gbc.writeMem(0x827d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x14a9, gbc.sp());
        EXPECT(0x827f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x827d));
        EXPECT(0x1d, gbc.readMem(0x827e));
        // CB 1D 0199
        gbc.setState(0xe16e, 0x963f, 0x7c30, 0xd65a, 0x5723, 0x7e70, 0x1, 0x1);
        gbc.writeMem(0xe16e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x963f, gbc.sp());
        EXPECT(0xe170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe16e));
        EXPECT(0x1d, gbc.readMem(0xe16f));
        // CB 1D 019A
        gbc.setState(0x7ed7, 0xd34a, 0x8d60, 0xa227, 0xf3d3, 0x95ee, 0x0, 0x0);
        gbc.writeMem(0x7ed7, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd34a, gbc.sp());
        EXPECT(0x7ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 019B
        gbc.setState(0x19fc, 0xd12b, 0x14f0, 0x715c, 0x3b5b, 0x712, 0x1, 0x1);
        gbc.writeMem(0x19fc, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd12b, gbc.sp());
        EXPECT(0x19fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 019C
        gbc.setState(0xc161, 0x81cf, 0x13d0, 0xd94d, 0x1f5b, 0xd524, 0x0, 0x0);
        gbc.writeMem(0xc161, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x81cf, gbc.sp());
        EXPECT(0xc163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc161));
        EXPECT(0x1d, gbc.readMem(0xc162));
        // CB 1D 019D
        gbc.setState(0xc07d, 0x56ef, 0x3be0, 0x2d6e, 0xd62b, 0xfca0, 0x1, 0x0);
        gbc.writeMem(0xc07d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x56ef, gbc.sp());
        EXPECT(0xc07f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc07d));
        EXPECT(0x1d, gbc.readMem(0xc07e));
        // CB 1D 019E
        gbc.setState(0xa7de, 0x3106, 0x77a0, 0x59b0, 0x82fe, 0x6044, 0x1, 0x0);
        gbc.writeMem(0xa7de, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3106, gbc.sp());
        EXPECT(0xa7e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7de));
        EXPECT(0x1d, gbc.readMem(0xa7df));
        // CB 1D 019F
        gbc.setState(0xe57f, 0xcf72, 0x10c0, 0xc38c, 0x5f5a, 0xb973, 0x0, 0x1);
        gbc.writeMem(0xe57f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xcf72, gbc.sp());
        EXPECT(0xe581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe57f));
        EXPECT(0x1d, gbc.readMem(0xe580));
        // CB 1D 01A0
        gbc.setState(0x839f, 0x9842, 0x2240, 0x4de8, 0xc17, 0x4511, 0x1, 0x1);
        gbc.writeMem(0x839f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9842, gbc.sp());
        EXPECT(0x83a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x839f));
        EXPECT(0x1d, gbc.readMem(0x83a0));
        // CB 1D 01A1
        gbc.setState(0x8ba3, 0x9f82, 0x270, 0xb826, 0xa5b4, 0x9751, 0x0, 0x0);
        gbc.writeMem(0x8ba3, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9f82, gbc.sp());
        EXPECT(0x8ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba3));
        EXPECT(0x1d, gbc.readMem(0x8ba4));
        // CB 1D 01A2
        gbc.setState(0xd13b, 0x63a5, 0x69b0, 0x8d13, 0xb33c, 0x7fe5, 0x0, 0x0);
        gbc.writeMem(0xd13b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x63a5, gbc.sp());
        EXPECT(0xd13d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd13b));
        EXPECT(0x1d, gbc.readMem(0xd13c));
        // CB 1D 01A3
        gbc.setState(0xa032, 0x584, 0x39e0, 0xab66, 0xfa81, 0x27ba, 0x1, 0x0);
        gbc.writeMem(0xa032, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x584, gbc.sp());
        EXPECT(0xa034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa032));
        EXPECT(0x1d, gbc.readMem(0xa033));
        // CB 1D 01A4
        gbc.setState(0x2f66, 0xa51e, 0x2830, 0x4163, 0xa45f, 0xf031, 0x0, 0x1);
        gbc.writeMem(0x2f66, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa51e, gbc.sp());
        EXPECT(0x2f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01A5
        gbc.setState(0x743b, 0x8cdb, 0x5510, 0xb5be, 0xee79, 0x5f69, 0x0, 0x1);
        gbc.writeMem(0x743b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8cdb, gbc.sp());
        EXPECT(0x743d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01A6
        gbc.setState(0x939a, 0x641e, 0xd0b0, 0x322b, 0x2094, 0x82c1, 0x0, 0x1);
        gbc.writeMem(0x939a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x641e, gbc.sp());
        EXPECT(0x939c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x939a));
        EXPECT(0x1d, gbc.readMem(0x939b));
        // CB 1D 01A7
        gbc.setState(0x308, 0x38c1, 0xb880, 0x8dbf, 0x2ca9, 0xcf68, 0x0, 0x0);
        gbc.writeMem(0x308, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x38c1, gbc.sp());
        EXPECT(0x30a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 01A8
        gbc.setState(0x420f, 0x8175, 0x4a70, 0x787b, 0x4faf, 0xf8f7, 0x0, 0x0);
        gbc.writeMem(0x420f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8175, gbc.sp());
        EXPECT(0x4211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01A9
        gbc.setState(0x5373, 0x72a6, 0xa210, 0x714a, 0x5a27, 0xa47b, 0x0, 0x1);
        gbc.writeMem(0x5373, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x72a6, gbc.sp());
        EXPECT(0x5375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01AB
        gbc.setState(0x55bb, 0x4970, 0xbd30, 0x1577, 0xdc1f, 0x11b1, 0x0, 0x0);
        gbc.writeMem(0x55bb, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4970, gbc.sp());
        EXPECT(0x55bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01AC
        gbc.setState(0x5fd0, 0x7354, 0xc6a0, 0x1287, 0x5edc, 0x1a71, 0x0, 0x0);
        gbc.writeMem(0x5fd0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7354, gbc.sp());
        EXPECT(0x5fd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01AD
        gbc.setState(0x359c, 0xc23b, 0xc050, 0x11ed, 0x82dc, 0x920a, 0x1, 0x1);
        gbc.writeMem(0x359c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc23b, gbc.sp());
        EXPECT(0x359e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 01AE
        gbc.setState(0x2c99, 0x30e4, 0x45e0, 0xff2c, 0x26c3, 0xbfdf, 0x0, 0x0);
        gbc.writeMem(0x2c99, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x30e4, gbc.sp());
        EXPECT(0x2c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01AF
        gbc.setState(0x7059, 0x2651, 0xaf90, 0x367b, 0x3057, 0x8d83, 0x1, 0x1);
        gbc.writeMem(0x7059, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2651, gbc.sp());
        EXPECT(0x705b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01B0
        gbc.setState(0xe1c4, 0xc97f, 0x1e80, 0xde16, 0x7543, 0x7a5c, 0x0, 0x1);
        gbc.writeMem(0xe1c4, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc97f, gbc.sp());
        EXPECT(0xe1c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c4));
        EXPECT(0x1d, gbc.readMem(0xe1c5));
        // CB 1D 01B2
        gbc.setState(0xd8cf, 0xb3ab, 0xd10, 0xead5, 0x7bb4, 0xbfce, 0x0, 0x0);
        gbc.writeMem(0xd8cf, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb3ab, gbc.sp());
        EXPECT(0xd8d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8cf));
        EXPECT(0x1d, gbc.readMem(0xd8d0));
        // CB 1D 01B3
        gbc.setState(0x8b16, 0xd3d2, 0xc820, 0xa1fc, 0xa32, 0xadf1, 0x1, 0x0);
        gbc.writeMem(0x8b16, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd3d2, gbc.sp());
        EXPECT(0x8b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b16));
        EXPECT(0x1d, gbc.readMem(0x8b17));
        // CB 1D 01B5
        gbc.setState(0xd5a2, 0x1693, 0x4600, 0x62cd, 0x42c5, 0x3520, 0x1, 0x1);
        gbc.writeMem(0xd5a2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1693, gbc.sp());
        EXPECT(0xd5a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a2));
        EXPECT(0x1d, gbc.readMem(0xd5a3));
        // CB 1D 01B6
        gbc.setState(0xc960, 0x733b, 0x7490, 0x2d, 0xc03f, 0xdb7, 0x1, 0x0);
        gbc.writeMem(0xc960, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x733b, gbc.sp());
        EXPECT(0xc962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc960));
        EXPECT(0x1d, gbc.readMem(0xc961));
        // CB 1D 01B7
        gbc.setState(0xaa34, 0x9dce, 0x4740, 0xdfef, 0x6ce5, 0x5762, 0x0, 0x1);
        gbc.writeMem(0xaa34, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9dce, gbc.sp());
        EXPECT(0xaa36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa34));
        EXPECT(0x1d, gbc.readMem(0xaa35));
        // CB 1D 01B8
        gbc.setState(0xb53c, 0xd0a, 0x4120, 0xd688, 0xafcf, 0xe33, 0x1, 0x1);
        gbc.writeMem(0xb53c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd0a, gbc.sp());
        EXPECT(0xb53e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb53c));
        EXPECT(0x1d, gbc.readMem(0xb53d));
        // CB 1D 01B9
        gbc.setState(0x5c7a, 0x9630, 0x19f0, 0xe830, 0xec93, 0x2ab7, 0x0, 0x1);
        gbc.writeMem(0x5c7a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9630, gbc.sp());
        EXPECT(0x5c7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01BA
        gbc.setState(0xf9d, 0xed56, 0xb120, 0xba2e, 0xfd6c, 0xd2e1, 0x1, 0x1);
        gbc.writeMem(0xf9d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xed56, gbc.sp());
        EXPECT(0xf9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01BB
        gbc.setState(0x1f0e, 0x4c90, 0x81f0, 0x1604, 0xfccb, 0x9356, 0x1, 0x0);
        gbc.writeMem(0x1f0e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4c90, gbc.sp());
        EXPECT(0x1f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 01BC
        gbc.setState(0x9e1c, 0x5328, 0x4c20, 0x35a4, 0xced4, 0xa1be, 0x0, 0x0);
        gbc.writeMem(0x9e1c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5328, gbc.sp());
        EXPECT(0x9e1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e1c));
        EXPECT(0x1d, gbc.readMem(0x9e1d));
        // CB 1D 01BD
        gbc.setState(0x87d9, 0x5f47, 0xd130, 0x781d, 0x5147, 0x290e, 0x0, 0x0);
        gbc.writeMem(0x87d9, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5f47, gbc.sp());
        EXPECT(0x87db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d9));
        EXPECT(0x1d, gbc.readMem(0x87da));
        // CB 1D 01BE
        gbc.setState(0x9352, 0xc702, 0x3df0, 0xcedf, 0xfdb9, 0x1d82, 0x1, 0x1);
        gbc.writeMem(0x9352, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc702, gbc.sp());
        EXPECT(0x9354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9352));
        EXPECT(0x1d, gbc.readMem(0x9353));
        // CB 1D 01BF
        gbc.setState(0xada1, 0x98f4, 0xbe0, 0x6db3, 0x6392, 0x8770, 0x0, 0x1);
        gbc.writeMem(0xada1, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x98f4, gbc.sp());
        EXPECT(0xada3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada1));
        EXPECT(0x1d, gbc.readMem(0xada2));
        // CB 1D 01C0
        gbc.setState(0xbc23, 0xfa30, 0xfa50, 0xdf2e, 0x31b3, 0xf3ec, 0x0, 0x1);
        gbc.writeMem(0xbc23, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xfa30, gbc.sp());
        EXPECT(0xbc25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc23));
        EXPECT(0x1d, gbc.readMem(0xbc24));
        // CB 1D 01C1
        gbc.setState(0xa58f, 0x95d0, 0x6dc0, 0xf33, 0x9987, 0xa687, 0x1, 0x1);
        gbc.writeMem(0xa58f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x95d0, gbc.sp());
        EXPECT(0xa591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa58f));
        EXPECT(0x1d, gbc.readMem(0xa590));
        // CB 1D 01C2
        gbc.setState(0x490, 0xce50, 0x6730, 0x170, 0x1ab3, 0xe5b0, 0x1, 0x0);
        gbc.writeMem(0x490, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xce50, gbc.sp());
        EXPECT(0x492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 01C3
        gbc.setState(0x89d9, 0xab08, 0x21f0, 0xbad0, 0xc9cf, 0x8871, 0x0, 0x1);
        gbc.writeMem(0x89d9, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xab08, gbc.sp());
        EXPECT(0x89db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d9));
        EXPECT(0x1d, gbc.readMem(0x89da));
        // CB 1D 01C4
        gbc.setState(0xc4f1, 0xdd46, 0x5990, 0xe15f, 0xa172, 0xa426, 0x0, 0x0);
        gbc.writeMem(0xc4f1, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdd46, gbc.sp());
        EXPECT(0xc4f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f1));
        EXPECT(0x1d, gbc.readMem(0xc4f2));
        // CB 1D 01C5
        gbc.setState(0x66e6, 0xe12d, 0x1f40, 0xe919, 0xf8c9, 0xd4dd, 0x1, 0x1);
        gbc.writeMem(0x66e6, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe12d, gbc.sp());
        EXPECT(0x66e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01C6
        gbc.setState(0x1357, 0xa43, 0xb3b0, 0x3c4e, 0x4b4d, 0x80c1, 0x1, 0x0);
        gbc.writeMem(0x1357, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa43, gbc.sp());
        EXPECT(0x1359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01C7
        gbc.setState(0x2403, 0xdad5, 0x330, 0x521, 0x4d94, 0xf436, 0x1, 0x1);
        gbc.writeMem(0x2403, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdad5, gbc.sp());
        EXPECT(0x2405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 01C8
        gbc.setState(0xb88f, 0x300, 0x210, 0x3c7a, 0x6122, 0xa777, 0x1, 0x1);
        gbc.writeMem(0xb88f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x300, gbc.sp());
        EXPECT(0xb891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb88f));
        EXPECT(0x1d, gbc.readMem(0xb890));
        // CB 1D 01C9
        gbc.setState(0x1c61, 0xb6b9, 0xae20, 0xd460, 0xa626, 0xfd3e, 0x0, 0x1);
        gbc.writeMem(0x1c61, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb6b9, gbc.sp());
        EXPECT(0x1c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 01CA
        gbc.setState(0x6a3a, 0x8831, 0xd930, 0x2c86, 0x582b, 0xb4d8, 0x1, 0x1);
        gbc.writeMem(0x6a3a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8831, gbc.sp());
        EXPECT(0x6a3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 01CB
        gbc.setState(0x3133, 0xdaba, 0xe780, 0xa9ea, 0x9c6, 0x94ed, 0x0, 0x0);
        gbc.writeMem(0x3133, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdaba, gbc.sp());
        EXPECT(0x3135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01CC
        gbc.setState(0xc147, 0xca6a, 0x5590, 0xdf79, 0xb7f8, 0x2eea, 0x1, 0x0);
        gbc.writeMem(0xc147, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xca6a, gbc.sp());
        EXPECT(0xc149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc147));
        EXPECT(0x1d, gbc.readMem(0xc148));
        // CB 1D 01CD
        gbc.setState(0xed54, 0xf8af, 0xe0c0, 0x23b5, 0x32eb, 0xe47c, 0x1, 0x0);
        gbc.writeMem(0xed54, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf8af, gbc.sp());
        EXPECT(0xed56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed54));
        EXPECT(0x1d, gbc.readMem(0xed55));
        // CB 1D 01CE
        gbc.setState(0x9a20, 0x38ef, 0xf050, 0xb798, 0x4992, 0x286b, 0x0, 0x1);
        gbc.writeMem(0x9a20, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x38ef, gbc.sp());
        EXPECT(0x9a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a20));
        EXPECT(0x1d, gbc.readMem(0x9a21));
        // CB 1D 01CF
        gbc.setState(0x14cd, 0xd739, 0x8d0, 0xd897, 0x5590, 0x19c, 0x0, 0x0);
        gbc.writeMem(0x14cd, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd739, gbc.sp());
        EXPECT(0x14cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 01D0
        gbc.setState(0x81eb, 0xafa, 0x3670, 0x1029, 0xd443, 0x4666, 0x0, 0x1);
        gbc.writeMem(0x81eb, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xafa, gbc.sp());
        EXPECT(0x81ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81eb));
        EXPECT(0x1d, gbc.readMem(0x81ec));
        // CB 1D 01D1
        gbc.setState(0x4f80, 0xce9d, 0x8390, 0x78e8, 0x8ffc, 0xa773, 0x1, 0x1);
        gbc.writeMem(0x4f80, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xce9d, gbc.sp());
        EXPECT(0x4f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01D2
        gbc.setState(0x408f, 0xa770, 0xcf20, 0x5658, 0x6280, 0x7f43, 0x1, 0x0);
        gbc.writeMem(0x408f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa770, gbc.sp());
        EXPECT(0x4091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01D3
        gbc.setState(0x8fa8, 0xdf43, 0x8430, 0x174f, 0x1ecb, 0xca54, 0x0, 0x0);
        gbc.writeMem(0x8fa8, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdf43, gbc.sp());
        EXPECT(0x8faa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa8));
        EXPECT(0x1d, gbc.readMem(0x8fa9));
        // CB 1D 01D4
        gbc.setState(0xda69, 0xe17d, 0xc660, 0x72d6, 0xfab7, 0x4b9a, 0x0, 0x0);
        gbc.writeMem(0xda69, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe17d, gbc.sp());
        EXPECT(0xda6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda69));
        EXPECT(0x1d, gbc.readMem(0xda6a));
        // CB 1D 01D5
        gbc.setState(0xb74d, 0xda29, 0x970, 0xf7c5, 0xde18, 0x4428, 0x0, 0x1);
        gbc.writeMem(0xb74d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xda29, gbc.sp());
        EXPECT(0xb74f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb74d));
        EXPECT(0x1d, gbc.readMem(0xb74e));
        // CB 1D 01D6
        gbc.setState(0x75fe, 0x6b5d, 0xdc30, 0x4f0d, 0x4d7e, 0x2815, 0x1, 0x1);
        gbc.writeMem(0x75fe, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6b5d, gbc.sp());
        EXPECT(0x7600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01D7
        gbc.setState(0xb74d, 0x1dbd, 0x93d0, 0xb963, 0x7c63, 0x44df, 0x1, 0x0);
        gbc.writeMem(0xb74d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1dbd, gbc.sp());
        EXPECT(0xb74f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb74d));
        EXPECT(0x1d, gbc.readMem(0xb74e));
        // CB 1D 01D9
        gbc.setState(0xdefb, 0x556f, 0x84a0, 0xa810, 0x154b, 0x20fd, 0x1, 0x0);
        gbc.writeMem(0xdefb, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x556f, gbc.sp());
        EXPECT(0xdefd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdefb));
        EXPECT(0x1d, gbc.readMem(0xdefc));
        // CB 1D 01DB
        gbc.setState(0x9138, 0xfe57, 0x3f70, 0xb917, 0xd812, 0x8ee2, 0x0, 0x1);
        gbc.writeMem(0x9138, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfe57, gbc.sp());
        EXPECT(0x913a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9138));
        EXPECT(0x1d, gbc.readMem(0x9139));
        // CB 1D 01DC
        gbc.setState(0xa30c, 0x431a, 0x5390, 0x7f7f, 0xa5eb, 0x3b92, 0x0, 0x1);
        gbc.writeMem(0xa30c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x431a, gbc.sp());
        EXPECT(0xa30e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa30c));
        EXPECT(0x1d, gbc.readMem(0xa30d));
        // CB 1D 01DD
        gbc.setState(0x78c, 0xc26f, 0xd530, 0x6602, 0x70f4, 0x6d9b, 0x1, 0x0);
        gbc.writeMem(0x78c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc26f, gbc.sp());
        EXPECT(0x78e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01DE
        gbc.setState(0x916e, 0xeb87, 0x0, 0xa118, 0x2e67, 0x5e67, 0x0, 0x1);
        gbc.writeMem(0x916e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xeb87, gbc.sp());
        EXPECT(0x9170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x916e));
        EXPECT(0x1d, gbc.readMem(0x916f));
        // CB 1D 01DF
        gbc.setState(0x56ee, 0x6c72, 0x3220, 0xa305, 0xa9eb, 0x6a7c, 0x1, 0x0);
        gbc.writeMem(0x56ee, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6c72, gbc.sp());
        EXPECT(0x56f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 01E0
        gbc.setState(0x7be8, 0x78b0, 0xada0, 0x53e9, 0xf274, 0x7310, 0x0, 0x1);
        gbc.writeMem(0x7be8, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x78b0, gbc.sp());
        EXPECT(0x7bea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 01E1
        gbc.setState(0x1e89, 0x1524, 0xec20, 0xc9f1, 0x95d, 0x885e, 0x1, 0x1);
        gbc.writeMem(0x1e89, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1524, gbc.sp());
        EXPECT(0x1e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 01E2
        gbc.setState(0x3331, 0x1, 0xc630, 0xe52e, 0x6067, 0x6aa2, 0x1, 0x1);
        gbc.writeMem(0x3331, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1, gbc.sp());
        EXPECT(0x3333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 01E3
        gbc.setState(0x7fbf, 0xb5ad, 0xcfe0, 0x1624, 0xd4d5, 0x3a15, 0x1, 0x0);
        gbc.writeMem(0x7fbf, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb5ad, gbc.sp());
        EXPECT(0x7fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01E4
        gbc.setState(0xad27, 0x4d73, 0x2e0, 0xba5a, 0xe2d, 0x3766, 0x1, 0x0);
        gbc.writeMem(0xad27, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4d73, gbc.sp());
        EXPECT(0xad29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad27));
        EXPECT(0x1d, gbc.readMem(0xad28));
        // CB 1D 01E5
        gbc.setState(0x8b4, 0xa40f, 0xc680, 0xec65, 0xca56, 0x1e63, 0x0, 0x0);
        gbc.writeMem(0x8b4, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa40f, gbc.sp());
        EXPECT(0x8b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01E6
        gbc.setState(0x3f2b, 0xb96a, 0xd6b0, 0x9347, 0xb929, 0xe8b7, 0x0, 0x0);
        gbc.writeMem(0x3f2b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb96a, gbc.sp());
        EXPECT(0x3f2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01E7
        gbc.setState(0x30f0, 0xf20b, 0x18d0, 0x789b, 0x3530, 0x35a2, 0x1, 0x0);
        gbc.writeMem(0x30f0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf20b, gbc.sp());
        EXPECT(0x30f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 01E8
        gbc.setState(0x2fc0, 0x93bb, 0x960, 0xd35e, 0xe9a6, 0xfdb2, 0x0, 0x0);
        gbc.writeMem(0x2fc0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x93bb, gbc.sp());
        EXPECT(0x2fc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 01E9
        gbc.setState(0x4750, 0x9a2a, 0xdf20, 0x221, 0x49d, 0x1114, 0x1, 0x1);
        gbc.writeMem(0x4750, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9a2a, gbc.sp());
        EXPECT(0x4752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 01EA
        gbc.setState(0x7fe6, 0x9928, 0xabc0, 0x1a3e, 0x7d51, 0xa0cd, 0x1, 0x0);
        gbc.writeMem(0x7fe6, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9928, gbc.sp());
        EXPECT(0x7fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01EB
        gbc.setState(0x6141, 0xc89f, 0x8030, 0xef1, 0xf14c, 0xba75, 0x1, 0x0);
        gbc.writeMem(0x6141, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc89f, gbc.sp());
        EXPECT(0x6143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01EC
        gbc.setState(0xbfe2, 0x4ca5, 0xd040, 0x5c47, 0xe90b, 0xc773, 0x1, 0x0);
        gbc.writeMem(0xbfe2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4ca5, gbc.sp());
        EXPECT(0xbfe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfe2));
        EXPECT(0x1d, gbc.readMem(0xbfe3));
        // CB 1D 01ED
        gbc.setState(0x7807, 0xa30, 0xf5a0, 0xf9d0, 0xe7e2, 0xa102, 0x1, 0x1);
        gbc.writeMem(0x7807, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa30, gbc.sp());
        EXPECT(0x7809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 01EE
        gbc.setState(0xc38b, 0xfe8f, 0xb8a0, 0x2323, 0x134b, 0x7dc3, 0x1, 0x1);
        gbc.writeMem(0xc38b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfe8f, gbc.sp());
        EXPECT(0xc38d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc38b));
        EXPECT(0x1d, gbc.readMem(0xc38c));
        // CB 1D 01EF
        gbc.setState(0x6591, 0x3d8, 0xdb0, 0xd52a, 0xcc8, 0x8acd, 0x0, 0x1);
        gbc.writeMem(0x6591, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3d8, gbc.sp());
        EXPECT(0x6593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01F0
        gbc.setState(0x54bd, 0x1a34, 0xcc30, 0x7649, 0x5fbd, 0x58ce, 0x1, 0x1);
        gbc.writeMem(0x54bd, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1a34, gbc.sp());
        EXPECT(0x54bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 01F1
        gbc.setState(0x27c6, 0xac2a, 0xd160, 0x8a56, 0x1614, 0xbcfd, 0x1, 0x0);
        gbc.writeMem(0x27c6, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xac2a, gbc.sp());
        EXPECT(0x27c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01F2
        gbc.setState(0x52a6, 0xd7d3, 0x1e60, 0xf660, 0xaaf3, 0x7646, 0x0, 0x0);
        gbc.writeMem(0x52a6, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd7d3, gbc.sp());
        EXPECT(0x52a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 01F3
        gbc.setState(0x49ac, 0xb978, 0x7640, 0xe02b, 0x2ba5, 0xe041, 0x1, 0x1);
        gbc.writeMem(0x49ac, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb978, gbc.sp());
        EXPECT(0x49ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01F4
        gbc.setState(0xe60b, 0x6088, 0xbab0, 0x45f8, 0xb70b, 0x92cc, 0x0, 0x0);
        gbc.writeMem(0xe60b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6088, gbc.sp());
        EXPECT(0xe60d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe60b));
        EXPECT(0x1d, gbc.readMem(0xe60c));
        // CB 1D 01F6
        gbc.setState(0xac99, 0x566b, 0x4890, 0x2419, 0x1089, 0xa0ce, 0x0, 0x0);
        gbc.writeMem(0xac99, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x566b, gbc.sp());
        EXPECT(0xac9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac99));
        EXPECT(0x1d, gbc.readMem(0xac9a));
        // CB 1D 01F7
        gbc.setState(0xc54f, 0x203d, 0x1ea0, 0x5daa, 0xaeeb, 0xc86e, 0x0, 0x0);
        gbc.writeMem(0xc54f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x203d, gbc.sp());
        EXPECT(0xc551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc54f));
        EXPECT(0x1d, gbc.readMem(0xc550));
        // CB 1D 01F8
        gbc.setState(0x5d11, 0x32c8, 0x3280, 0x8735, 0x6dd4, 0x6d45, 0x0, 0x0);
        gbc.writeMem(0x5d11, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x32c8, gbc.sp());
        EXPECT(0x5d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01F9
        gbc.setState(0x7237, 0x4d8d, 0x290, 0x9084, 0xd7b, 0x3eda, 0x1, 0x1);
        gbc.writeMem(0x7237, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4d8d, gbc.sp());
        EXPECT(0x7239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 01FB
        gbc.setState(0x8ea2, 0x38e7, 0x9f60, 0xc9b6, 0x1076, 0xfbdf, 0x1, 0x0);
        gbc.writeMem(0x8ea2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x38e7, gbc.sp());
        EXPECT(0x8ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea2));
        EXPECT(0x1d, gbc.readMem(0x8ea3));
        // CB 1D 01FC
        gbc.setState(0x91d1, 0x17ff, 0x6370, 0x1bf3, 0xa418, 0xa6b0, 0x0, 0x1);
        gbc.writeMem(0x91d1, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x17ff, gbc.sp());
        EXPECT(0x91d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d1));
        EXPECT(0x1d, gbc.readMem(0x91d2));
        // CB 1D 01FD
        gbc.setState(0x72af, 0xf769, 0xf710, 0x7a07, 0xcb32, 0xd2c3, 0x0, 0x1);
        gbc.writeMem(0x72af, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf769, gbc.sp());
        EXPECT(0x72b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 01FE
        gbc.setState(0xb549, 0x5382, 0x3d30, 0x12e6, 0xd700, 0x43f0, 0x1, 0x0);
        gbc.writeMem(0xb549, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5382, gbc.sp());
        EXPECT(0xb54b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb549));
        EXPECT(0x1d, gbc.readMem(0xb54a));
        // CB 1D 01FF
        gbc.setState(0x7efc, 0x263c, 0x8930, 0xdb4c, 0x602, 0x962, 0x0, 0x1);
        gbc.writeMem(0x7efc, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x263c, gbc.sp());
        EXPECT(0x7efe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0200
        gbc.setState(0xb375, 0xae41, 0xfc30, 0xb587, 0xad16, 0x7272, 0x1, 0x0);
        gbc.writeMem(0xb375, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xae41, gbc.sp());
        EXPECT(0xb377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb375));
        EXPECT(0x1d, gbc.readMem(0xb376));
        // CB 1D 0201
        gbc.setState(0x7e9d, 0x6156, 0x8390, 0x3f24, 0xbf89, 0xb8aa, 0x0, 0x1);
        gbc.writeMem(0x7e9d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6156, gbc.sp());
        EXPECT(0x7e9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0202
        gbc.setState(0x7bac, 0xf14b, 0xf640, 0x6f93, 0xcdea, 0x22e5, 0x0, 0x0);
        gbc.writeMem(0x7bac, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf14b, gbc.sp());
        EXPECT(0x7bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0203
        gbc.setState(0x9ea6, 0x7968, 0x37e0, 0x73be, 0xfae8, 0xbbbc, 0x1, 0x0);
        gbc.writeMem(0x9ea6, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7968, gbc.sp());
        EXPECT(0x9ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea6));
        EXPECT(0x1d, gbc.readMem(0x9ea7));
        // CB 1D 0204
        gbc.setState(0xbb7e, 0xd931, 0x8ff0, 0xc5a4, 0xf8ec, 0x7073, 0x0, 0x0);
        gbc.writeMem(0xbb7e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd931, gbc.sp());
        EXPECT(0xbb80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb7e));
        EXPECT(0x1d, gbc.readMem(0xbb7f));
        // CB 1D 0205
        gbc.setState(0xd25b, 0xb5d2, 0x3d90, 0x35e4, 0x6ade, 0xb8ad, 0x0, 0x1);
        gbc.writeMem(0xd25b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb5d2, gbc.sp());
        EXPECT(0xd25d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd25b));
        EXPECT(0x1d, gbc.readMem(0xd25c));
        // CB 1D 0207
        gbc.setState(0x22b9, 0x5ab1, 0xb430, 0x80db, 0x43c7, 0x39cf, 0x0, 0x0);
        gbc.writeMem(0x22b9, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5ab1, gbc.sp());
        EXPECT(0x22bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0208
        gbc.setState(0x4b53, 0x2711, 0xf350, 0xcd25, 0xe769, 0xb941, 0x1, 0x0);
        gbc.writeMem(0x4b53, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2711, gbc.sp());
        EXPECT(0x4b55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0209
        gbc.setState(0xa537, 0xc0c1, 0xb9a0, 0xe99a, 0x9a33, 0x9898, 0x0, 0x1);
        gbc.writeMem(0xa537, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc0c1, gbc.sp());
        EXPECT(0xa539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa537));
        EXPECT(0x1d, gbc.readMem(0xa538));
        // CB 1D 020B
        gbc.setState(0x267b, 0xf1f8, 0x9900, 0x235e, 0x224a, 0xc872, 0x0, 0x1);
        gbc.writeMem(0x267b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf1f8, gbc.sp());
        EXPECT(0x267d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 020C
        gbc.setState(0x88dc, 0x5dc8, 0xc3c0, 0xc933, 0xa5bb, 0xc7d8, 0x0, 0x1);
        gbc.writeMem(0x88dc, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5dc8, gbc.sp());
        EXPECT(0x88de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88dc));
        EXPECT(0x1d, gbc.readMem(0x88dd));
        // CB 1D 020D
        gbc.setState(0xb9b6, 0x66a5, 0x81e0, 0x40e7, 0xe96a, 0xbf0b, 0x0, 0x1);
        gbc.writeMem(0xb9b6, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x66a5, gbc.sp());
        EXPECT(0xb9b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b6));
        EXPECT(0x1d, gbc.readMem(0xb9b7));
        // CB 1D 020F
        gbc.setState(0x1efc, 0x7d01, 0x2390, 0x8bba, 0xf9a3, 0x8a58, 0x1, 0x0);
        gbc.writeMem(0x1efc, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7d01, gbc.sp());
        EXPECT(0x1efe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0210
        gbc.setState(0x99a6, 0xf9a0, 0x50, 0xa1c1, 0xd7c2, 0xe07, 0x0, 0x1);
        gbc.writeMem(0x99a6, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf9a0, gbc.sp());
        EXPECT(0x99a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99a6));
        EXPECT(0x1d, gbc.readMem(0x99a7));
        // CB 1D 0211
        gbc.setState(0xe8d0, 0xbd90, 0x2030, 0xb2b8, 0x900e, 0x1613, 0x0, 0x1);
        gbc.writeMem(0xe8d0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbd90, gbc.sp());
        EXPECT(0xe8d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d0));
        EXPECT(0x1d, gbc.readMem(0xe8d1));
        // CB 1D 0212
        gbc.setState(0xdd34, 0x5533, 0x4980, 0x5afd, 0xa1a2, 0xb551, 0x1, 0x1);
        gbc.writeMem(0xdd34, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5533, gbc.sp());
        EXPECT(0xdd36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd34));
        EXPECT(0x1d, gbc.readMem(0xdd35));
        // CB 1D 0213
        gbc.setState(0xcd72, 0xcfac, 0xfa20, 0x2eb3, 0xe17e, 0x6ee4, 0x0, 0x1);
        gbc.writeMem(0xcd72, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xcfac, gbc.sp());
        EXPECT(0xcd74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd72));
        EXPECT(0x1d, gbc.readMem(0xcd73));
        // CB 1D 0214
        gbc.setState(0x695a, 0x1279, 0xef20, 0x226a, 0xf053, 0x2919, 0x1, 0x0);
        gbc.writeMem(0x695a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1279, gbc.sp());
        EXPECT(0x695c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0215
        gbc.setState(0x636b, 0x8f1f, 0xf930, 0x16bd, 0xaae0, 0xc27b, 0x1, 0x0);
        gbc.writeMem(0x636b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8f1f, gbc.sp());
        EXPECT(0x636d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0216
        gbc.setState(0x4d6e, 0x817c, 0xc6d0, 0xe662, 0xb354, 0x250d, 0x0, 0x0);
        gbc.writeMem(0x4d6e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x817c, gbc.sp());
        EXPECT(0x4d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0217
        gbc.setState(0x176e, 0xcf6c, 0x2090, 0xc4db, 0x26b8, 0x8cff, 0x1, 0x1);
        gbc.writeMem(0x176e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcf6c, gbc.sp());
        EXPECT(0x1770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0218
        gbc.setState(0xe46e, 0x6ad0, 0xdae0, 0x5250, 0x721f, 0x31c6, 0x0, 0x1);
        gbc.writeMem(0xe46e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6ad0, gbc.sp());
        EXPECT(0xe470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe46e));
        EXPECT(0x1d, gbc.readMem(0xe46f));
        // CB 1D 0219
        gbc.setState(0x64e0, 0xc18d, 0x5000, 0x76d6, 0x3f76, 0x4456, 0x1, 0x0);
        gbc.writeMem(0x64e0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc18d, gbc.sp());
        EXPECT(0x64e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 021A
        gbc.setState(0xdd27, 0xb772, 0x4430, 0x2661, 0xa8a1, 0x455f, 0x1, 0x1);
        gbc.writeMem(0xdd27, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb772, gbc.sp());
        EXPECT(0xdd29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd27));
        EXPECT(0x1d, gbc.readMem(0xdd28));
        // CB 1D 021C
        gbc.setState(0xe54, 0xf5bf, 0x2520, 0xbdc5, 0xbd03, 0xdd7c, 0x1, 0x1);
        gbc.writeMem(0xe54, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf5bf, gbc.sp());
        EXPECT(0xe56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 021D
        gbc.setState(0x1e01, 0xda5f, 0x7330, 0xc03f, 0x178c, 0x9e3a, 0x1, 0x1);
        gbc.writeMem(0x1e01, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xda5f, gbc.sp());
        EXPECT(0x1e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 021E
        gbc.setState(0x6cbe, 0xf9c6, 0xedd0, 0xef0b, 0x9802, 0x3cb, 0x0, 0x1);
        gbc.writeMem(0x6cbe, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf9c6, gbc.sp());
        EXPECT(0x6cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 021F
        gbc.setState(0x813a, 0xdfc4, 0x5590, 0x7636, 0x24b1, 0x783b, 0x1, 0x0);
        gbc.writeMem(0x813a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xdfc4, gbc.sp());
        EXPECT(0x813c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x813a));
        EXPECT(0x1d, gbc.readMem(0x813b));
        // CB 1D 0220
        gbc.setState(0x1a65, 0xf479, 0x9310, 0xf7e3, 0xc905, 0xccee, 0x1, 0x1);
        gbc.writeMem(0x1a65, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf479, gbc.sp());
        EXPECT(0x1a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0221
        gbc.setState(0x5876, 0x5a43, 0xc8e0, 0x135c, 0xfd53, 0x5c9a, 0x1, 0x0);
        gbc.writeMem(0x5876, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5a43, gbc.sp());
        EXPECT(0x5878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0222
        gbc.setState(0xb7f5, 0x8a3d, 0x43e0, 0x550, 0x4642, 0x39dd, 0x0, 0x1);
        gbc.writeMem(0xb7f5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8a3d, gbc.sp());
        EXPECT(0xb7f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f5));
        EXPECT(0x1d, gbc.readMem(0xb7f6));
        // CB 1D 0223
        gbc.setState(0x43a7, 0x1a77, 0x85c0, 0x221a, 0x15af, 0x2d54, 0x0, 0x1);
        gbc.writeMem(0x43a7, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1a77, gbc.sp());
        EXPECT(0x43a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0224
        gbc.setState(0xa5, 0x8b21, 0xd060, 0x9b95, 0x1bd3, 0xe997, 0x0, 0x1);
        gbc.writeMem(0xa5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8b21, gbc.sp());
        EXPECT(0xa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0225
        gbc.setState(0xe158, 0x5ba9, 0x2950, 0xec11, 0x3521, 0x69eb, 0x0, 0x0);
        gbc.writeMem(0xe158, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5ba9, gbc.sp());
        EXPECT(0xe15a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe158));
        EXPECT(0x1d, gbc.readMem(0xe159));
        // CB 1D 0226
        gbc.setState(0x7624, 0x85a5, 0xd160, 0xb523, 0x7cff, 0x1d9, 0x0, 0x1);
        gbc.writeMem(0x7624, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x85a5, gbc.sp());
        EXPECT(0x7626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0227
        gbc.setState(0x3ef6, 0x669a, 0xbd0, 0xe03e, 0xd07d, 0x8d66, 0x0, 0x1);
        gbc.writeMem(0x3ef6, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x669a, gbc.sp());
        EXPECT(0x3ef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0228
        gbc.setState(0x4627, 0xde3b, 0xa8b0, 0x542a, 0xd865, 0xe05b, 0x0, 0x1);
        gbc.writeMem(0x4627, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xde3b, gbc.sp());
        EXPECT(0x4629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0229
        gbc.setState(0x559c, 0xc50b, 0xa0d0, 0xc6fb, 0xb9f1, 0xb7dd, 0x0, 0x0);
        gbc.writeMem(0x559c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc50b, gbc.sp());
        EXPECT(0x559e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 022A
        gbc.setState(0xb2a7, 0xd902, 0xf200, 0x9ffb, 0x87e4, 0xa58f, 0x1, 0x0);
        gbc.writeMem(0xb2a7, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd902, gbc.sp());
        EXPECT(0xb2a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a7));
        EXPECT(0x1d, gbc.readMem(0xb2a8));
        // CB 1D 022B
        gbc.setState(0x2cac, 0x8ca8, 0xc5d0, 0x742e, 0x108a, 0x7a99, 0x0, 0x0);
        gbc.writeMem(0x2cac, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8ca8, gbc.sp());
        EXPECT(0x2cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 022C
        gbc.setState(0x987b, 0x3e61, 0xefb0, 0xc1, 0x2c4, 0xb9c1, 0x1, 0x1);
        gbc.writeMem(0x987b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3e61, gbc.sp());
        EXPECT(0x987d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x987b));
        EXPECT(0x1d, gbc.readMem(0x987c));
        // CB 1D 022D
        gbc.setState(0xae55, 0xb5a0, 0xb0f0, 0x19eb, 0xf5dd, 0x570c, 0x1, 0x0);
        gbc.writeMem(0xae55, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb5a0, gbc.sp());
        EXPECT(0xae57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae55));
        EXPECT(0x1d, gbc.readMem(0xae56));
        // CB 1D 022E
        gbc.setState(0x95e5, 0xea60, 0xc30, 0x1f20, 0x62d7, 0xcc82, 0x0, 0x1);
        gbc.writeMem(0x95e5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xea60, gbc.sp());
        EXPECT(0x95e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e5));
        EXPECT(0x1d, gbc.readMem(0x95e6));
        // CB 1D 022F
        gbc.setState(0x5f14, 0xb30e, 0xe880, 0x22b9, 0xd49d, 0x1910, 0x1, 0x0);
        gbc.writeMem(0x5f14, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb30e, gbc.sp());
        EXPECT(0x5f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0230
        gbc.setState(0x36c9, 0x3527, 0x490, 0x76ed, 0xd359, 0xd799, 0x0, 0x0);
        gbc.writeMem(0x36c9, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3527, gbc.sp());
        EXPECT(0x36cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0231
        gbc.setState(0x1f0, 0xbcc, 0xc7b0, 0x3bd3, 0x8f3, 0xe95, 0x0, 0x0);
        gbc.writeMem(0x1f0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xbcc, gbc.sp());
        EXPECT(0x1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0232
        gbc.setState(0xc7e7, 0xf2c2, 0xb790, 0x618f, 0xe1cb, 0xd991, 0x0, 0x0);
        gbc.writeMem(0xc7e7, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf2c2, gbc.sp());
        EXPECT(0xc7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7e7));
        EXPECT(0x1d, gbc.readMem(0xc7e8));
        // CB 1D 0233
        gbc.setState(0xe778, 0xd555, 0x9130, 0x2ee6, 0x6f0e, 0x9cbb, 0x1, 0x0);
        gbc.writeMem(0xe778, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd555, gbc.sp());
        EXPECT(0xe77a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe778));
        EXPECT(0x1d, gbc.readMem(0xe779));
        // CB 1D 0235
        gbc.setState(0xa747, 0xdf0a, 0x66b0, 0x7f18, 0xd2a5, 0x2f5d, 0x0, 0x0);
        gbc.writeMem(0xa747, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdf0a, gbc.sp());
        EXPECT(0xa749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa747));
        EXPECT(0x1d, gbc.readMem(0xa748));
        // CB 1D 0236
        gbc.setState(0x63bc, 0x1cf1, 0xbb00, 0xec74, 0x691b, 0xb64a, 0x1, 0x0);
        gbc.writeMem(0x63bc, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1cf1, gbc.sp());
        EXPECT(0x63be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0237
        gbc.setState(0x9aee, 0xafd2, 0x5d10, 0x48a0, 0x4d57, 0xe831, 0x1, 0x1);
        gbc.writeMem(0x9aee, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xafd2, gbc.sp());
        EXPECT(0x9af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aee));
        EXPECT(0x1d, gbc.readMem(0x9aef));
        // CB 1D 0238
        gbc.setState(0x249e, 0xb07, 0x4170, 0x88fa, 0x4600, 0x48d9, 0x1, 0x0);
        gbc.writeMem(0x249e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb07, gbc.sp());
        EXPECT(0x24a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0239
        gbc.setState(0x3bb, 0xdabc, 0xc60, 0x58c8, 0x8295, 0xaad0, 0x1, 0x0);
        gbc.writeMem(0x3bb, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xdabc, gbc.sp());
        EXPECT(0x3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 023A
        gbc.setState(0x9956, 0x9269, 0xd4f0, 0x87dd, 0xf22f, 0xe883, 0x1, 0x0);
        gbc.writeMem(0x9956, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9269, gbc.sp());
        EXPECT(0x9958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9956));
        EXPECT(0x1d, gbc.readMem(0x9957));
        // CB 1D 023B
        gbc.setState(0x3693, 0x1f92, 0x7480, 0x543b, 0x98ba, 0xe6ac, 0x1, 0x0);
        gbc.writeMem(0x3693, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1f92, gbc.sp());
        EXPECT(0x3695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 023C
        gbc.setState(0xa179, 0xfdcd, 0x9170, 0x595e, 0xd087, 0x8e98, 0x0, 0x1);
        gbc.writeMem(0xa179, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfdcd, gbc.sp());
        EXPECT(0xa17b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa179));
        EXPECT(0x1d, gbc.readMem(0xa17a));
        // CB 1D 023D
        gbc.setState(0x9865, 0xb5bf, 0xf760, 0xf342, 0xac67, 0x6596, 0x1, 0x0);
        gbc.writeMem(0x9865, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb5bf, gbc.sp());
        EXPECT(0x9867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9865));
        EXPECT(0x1d, gbc.readMem(0x9866));
        // CB 1D 023E
        gbc.setState(0x7560, 0x94ed, 0x58d0, 0x6361, 0x4dbf, 0x8232, 0x0, 0x1);
        gbc.writeMem(0x7560, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x94ed, gbc.sp());
        EXPECT(0x7562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 023F
        gbc.setState(0x177d, 0x16af, 0xf760, 0x2922, 0x131e, 0xc4cf, 0x0, 0x1);
        gbc.writeMem(0x177d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x16af, gbc.sp());
        EXPECT(0x177f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0240
        gbc.setState(0x50b2, 0xa129, 0x5d70, 0x5f1a, 0x791a, 0xf412, 0x0, 0x0);
        gbc.writeMem(0x50b2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa129, gbc.sp());
        EXPECT(0x50b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0241
        gbc.setState(0x17c7, 0x1c4b, 0xc270, 0x7d0f, 0x5c02, 0x35bd, 0x1, 0x1);
        gbc.writeMem(0x17c7, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1c4b, gbc.sp());
        EXPECT(0x17c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0243
        gbc.setState(0x3470, 0xe43d, 0x1e0, 0x54dd, 0x596d, 0xdef8, 0x0, 0x0);
        gbc.writeMem(0x3470, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe43d, gbc.sp());
        EXPECT(0x3472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0245
        gbc.setState(0x4cd2, 0x9efa, 0x2170, 0x8ede, 0x4f0, 0x53ec, 0x0, 0x1);
        gbc.writeMem(0x4cd2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9efa, gbc.sp());
        EXPECT(0x4cd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0246
        gbc.setState(0x2b40, 0xdb8a, 0x60f0, 0xcb8d, 0xe105, 0xb7ca, 0x0, 0x1);
        gbc.writeMem(0x2b40, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xdb8a, gbc.sp());
        EXPECT(0x2b42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0247
        gbc.setState(0x2a9a, 0xf3c1, 0xb100, 0x6ab8, 0x80d7, 0xab4, 0x1, 0x0);
        gbc.writeMem(0x2a9a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf3c1, gbc.sp());
        EXPECT(0x2a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0248
        gbc.setState(0x98e5, 0xb119, 0xf950, 0xafea, 0xb0c8, 0x6cf, 0x0, 0x1);
        gbc.writeMem(0x98e5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb119, gbc.sp());
        EXPECT(0x98e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e5));
        EXPECT(0x1d, gbc.readMem(0x98e6));
        // CB 1D 024A
        gbc.setState(0x2f, 0x84ee, 0x460, 0xb424, 0x50d7, 0xd3e7, 0x0, 0x0);
        gbc.writeMem(0x2f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x84ee, gbc.sp());
        EXPECT(0x31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 024B
        gbc.setState(0xb994, 0xea61, 0xe4f0, 0xcadf, 0x55b8, 0x300a, 0x0, 0x1);
        gbc.writeMem(0xb994, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xea61, gbc.sp());
        EXPECT(0xb996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb994));
        EXPECT(0x1d, gbc.readMem(0xb995));
        // CB 1D 024C
        gbc.setState(0x24be, 0x312c, 0xfc40, 0x49e1, 0x74ed, 0x21b8, 0x1, 0x1);
        gbc.writeMem(0x24be, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x312c, gbc.sp());
        EXPECT(0x24c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 024D
        gbc.setState(0xa7e7, 0x1324, 0x2580, 0x8c4b, 0x4aaa, 0xf6a3, 0x1, 0x0);
        gbc.writeMem(0xa7e7, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1324, gbc.sp());
        EXPECT(0xa7e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e7));
        EXPECT(0x1d, gbc.readMem(0xa7e8));
        // CB 1D 024E
        gbc.setState(0x8567, 0x49c9, 0xaf90, 0x3da7, 0x29a2, 0xd387, 0x1, 0x0);
        gbc.writeMem(0x8567, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x49c9, gbc.sp());
        EXPECT(0x8569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8567));
        EXPECT(0x1d, gbc.readMem(0x8568));
        // CB 1D 024F
        gbc.setState(0xdfe0, 0x85a9, 0xbb40, 0xce75, 0xacf4, 0xd09, 0x1, 0x0);
        gbc.writeMem(0xdfe0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x85a9, gbc.sp());
        EXPECT(0xdfe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfe0));
        EXPECT(0x1d, gbc.readMem(0xdfe1));
        // CB 1D 0250
        gbc.setState(0x5082, 0x186d, 0xbaf0, 0xeaf0, 0xde5c, 0xe330, 0x1, 0x0);
        gbc.writeMem(0x5082, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x186d, gbc.sp());
        EXPECT(0x5084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0251
        gbc.setState(0x4d9f, 0xc2be, 0x1a90, 0xf242, 0x8ab8, 0x146, 0x1, 0x1);
        gbc.writeMem(0x4d9f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc2be, gbc.sp());
        EXPECT(0x4da1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0252
        gbc.setState(0xacc2, 0x1a1f, 0x1150, 0x96e7, 0x52b5, 0xb1b5, 0x0, 0x1);
        gbc.writeMem(0xacc2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1a1f, gbc.sp());
        EXPECT(0xacc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc2));
        EXPECT(0x1d, gbc.readMem(0xacc3));
        // CB 1D 0253
        gbc.setState(0x69b1, 0xbc2b, 0x1560, 0xa658, 0xc35e, 0xac28, 0x0, 0x0);
        gbc.writeMem(0x69b1, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbc2b, gbc.sp());
        EXPECT(0x69b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0254
        gbc.setState(0x9cbc, 0x2406, 0xf910, 0xd417, 0x7439, 0xa14f, 0x1, 0x0);
        gbc.writeMem(0x9cbc, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2406, gbc.sp());
        EXPECT(0x9cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cbc));
        EXPECT(0x1d, gbc.readMem(0x9cbd));
        // CB 1D 0255
        gbc.setState(0xec57, 0xb85, 0xb9f0, 0xb00a, 0x6318, 0x743f, 0x1, 0x0);
        gbc.writeMem(0xec57, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb85, gbc.sp());
        EXPECT(0xec59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec57));
        EXPECT(0x1d, gbc.readMem(0xec58));
        // CB 1D 0256
        gbc.setState(0x7d23, 0xf0f, 0x3960, 0xeb5d, 0x1de6, 0x8311, 0x1, 0x0);
        gbc.writeMem(0x7d23, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf0f, gbc.sp());
        EXPECT(0x7d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0258
        gbc.setState(0xaaa1, 0xb0a, 0x2de0, 0xbcf2, 0x47b8, 0x9950, 0x1, 0x1);
        gbc.writeMem(0xaaa1, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb0a, gbc.sp());
        EXPECT(0xaaa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa1));
        EXPECT(0x1d, gbc.readMem(0xaaa2));
        // CB 1D 0259
        gbc.setState(0x23bf, 0x7c55, 0xf7f0, 0x75a7, 0x45a9, 0xf30e, 0x1, 0x0);
        gbc.writeMem(0x23bf, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7c55, gbc.sp());
        EXPECT(0x23c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 025B
        gbc.setState(0x59bb, 0xac00, 0x4e10, 0xf231, 0x1f5b, 0x9425, 0x0, 0x1);
        gbc.writeMem(0x59bb, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xac00, gbc.sp());
        EXPECT(0x59bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 025C
        gbc.setState(0xea9a, 0xa923, 0x3f30, 0x9d40, 0x22e4, 0x4856, 0x0, 0x0);
        gbc.writeMem(0xea9a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa923, gbc.sp());
        EXPECT(0xea9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea9a));
        EXPECT(0x1d, gbc.readMem(0xea9b));
        // CB 1D 025D
        gbc.setState(0x526e, 0xb055, 0x79a0, 0x2a04, 0xf42d, 0x8572, 0x1, 0x1);
        gbc.writeMem(0x526e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb055, gbc.sp());
        EXPECT(0x5270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 025E
        gbc.setState(0xb5a5, 0x3754, 0x5ba0, 0x5b14, 0x7326, 0x39c, 0x0, 0x1);
        gbc.writeMem(0xb5a5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3754, gbc.sp());
        EXPECT(0xb5a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5a5));
        EXPECT(0x1d, gbc.readMem(0xb5a6));
        // CB 1D 025F
        gbc.setState(0x5dd3, 0x53cb, 0xe730, 0xcf45, 0x4d72, 0xfa7a, 0x1, 0x1);
        gbc.writeMem(0x5dd3, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x53cb, gbc.sp());
        EXPECT(0x5dd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0260
        gbc.setState(0x308c, 0x112a, 0x3620, 0x4ed7, 0xbbc2, 0xd36f, 0x0, 0x1);
        gbc.writeMem(0x308c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x112a, gbc.sp());
        EXPECT(0x308e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0262
        gbc.setState(0x1eed, 0xf22, 0x7f50, 0x9357, 0x5bd4, 0xfb99, 0x1, 0x1);
        gbc.writeMem(0x1eed, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf22, gbc.sp());
        EXPECT(0x1eef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0263
        gbc.setState(0x4cfb, 0x8864, 0x6dd0, 0x4ec3, 0x1967, 0x2b7, 0x1, 0x1);
        gbc.writeMem(0x4cfb, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8864, gbc.sp());
        EXPECT(0x4cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0264
        gbc.setState(0x7049, 0xc8fc, 0xdcc0, 0x675f, 0xb350, 0x2a58, 0x1, 0x0);
        gbc.writeMem(0x7049, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc8fc, gbc.sp());
        EXPECT(0x704b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0265
        gbc.setState(0x1567, 0xe614, 0x1c10, 0xfebd, 0xf8cd, 0x755, 0x1, 0x1);
        gbc.writeMem(0x1567, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe614, gbc.sp());
        EXPECT(0x1569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0266
        gbc.setState(0xf2a, 0xa40b, 0xd1f0, 0xea9e, 0x1684, 0x8b7e, 0x1, 0x0);
        gbc.writeMem(0xf2a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa40b, gbc.sp());
        EXPECT(0xf2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0267
        gbc.setState(0xd047, 0x2ca, 0xfee0, 0x927c, 0xe220, 0x9e4f, 0x0, 0x1);
        gbc.writeMem(0xd047, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2ca, gbc.sp());
        EXPECT(0xd049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd047));
        EXPECT(0x1d, gbc.readMem(0xd048));
        // CB 1D 0268
        gbc.setState(0x4280, 0xe948, 0xe440, 0x6fb2, 0x2b96, 0xfb7d, 0x1, 0x1);
        gbc.writeMem(0x4280, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe948, gbc.sp());
        EXPECT(0x4282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0269
        gbc.setState(0xe0ec, 0x61f, 0xb6f0, 0xd7f8, 0xfc9d, 0x1626, 0x1, 0x1);
        gbc.writeMem(0xe0ec, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x61f, gbc.sp());
        EXPECT(0xe0ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ec));
        EXPECT(0x1d, gbc.readMem(0xe0ed));
        // CB 1D 026A
        gbc.setState(0xa44e, 0x40c4, 0x7c70, 0x8249, 0x7a3a, 0x73cd, 0x0, 0x0);
        gbc.writeMem(0xa44e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x40c4, gbc.sp());
        EXPECT(0xa450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa44e));
        EXPECT(0x1d, gbc.readMem(0xa44f));
        // CB 1D 026B
        gbc.setState(0xd129, 0xd42d, 0x37e0, 0x8b86, 0x6510, 0xbf07, 0x0, 0x1);
        gbc.writeMem(0xd129, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd42d, gbc.sp());
        EXPECT(0xd12b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd129));
        EXPECT(0x1d, gbc.readMem(0xd12a));
        // CB 1D 026C
        gbc.setState(0xdf31, 0xc6a6, 0x7210, 0xefa, 0xa107, 0xb95c, 0x1, 0x1);
        gbc.writeMem(0xdf31, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc6a6, gbc.sp());
        EXPECT(0xdf33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf31));
        EXPECT(0x1d, gbc.readMem(0xdf32));
        // CB 1D 026D
        gbc.setState(0x51b0, 0xc836, 0x6d30, 0x5ee, 0xfff6, 0xe341, 0x1, 0x0);
        gbc.writeMem(0x51b0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc836, gbc.sp());
        EXPECT(0x51b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 026E
        gbc.setState(0x2d20, 0x86a9, 0x1680, 0xda, 0xfe21, 0x1f62, 0x1, 0x1);
        gbc.writeMem(0x2d20, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x86a9, gbc.sp());
        EXPECT(0x2d22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 026F
        gbc.setState(0x6978, 0xc5a6, 0x7920, 0xe489, 0xdb31, 0xb768, 0x1, 0x1);
        gbc.writeMem(0x6978, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc5a6, gbc.sp());
        EXPECT(0x697a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0271
        gbc.setState(0xd4d6, 0x5451, 0x6610, 0xca90, 0xef9, 0xfa26, 0x0, 0x1);
        gbc.writeMem(0xd4d6, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5451, gbc.sp());
        EXPECT(0xd4d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4d6));
        EXPECT(0x1d, gbc.readMem(0xd4d7));
        // CB 1D 0272
        gbc.setState(0x31ce, 0x59ec, 0xd430, 0xc18d, 0xe116, 0xc836, 0x0, 0x1);
        gbc.writeMem(0x31ce, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x59ec, gbc.sp());
        EXPECT(0x31d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0273
        gbc.setState(0x7968, 0x1db3, 0x3d60, 0x6ff0, 0x7238, 0x554, 0x0, 0x1);
        gbc.writeMem(0x7968, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1db3, gbc.sp());
        EXPECT(0x796a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0274
        gbc.setState(0x8b87, 0xd4b1, 0x9c60, 0xb7c0, 0x450a, 0x3315, 0x1, 0x1);
        gbc.writeMem(0x8b87, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd4b1, gbc.sp());
        EXPECT(0x8b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b87));
        EXPECT(0x1d, gbc.readMem(0x8b88));
        // CB 1D 0275
        gbc.setState(0x262f, 0xbd11, 0xb5f0, 0x253d, 0x1d67, 0xa680, 0x1, 0x1);
        gbc.writeMem(0x262f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbd11, gbc.sp());
        EXPECT(0x2631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0276
        gbc.setState(0x913d, 0x8f52, 0x2e10, 0x8c35, 0xf31e, 0x27c5, 0x0, 0x0);
        gbc.writeMem(0x913d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8f52, gbc.sp());
        EXPECT(0x913f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x913d));
        EXPECT(0x1d, gbc.readMem(0x913e));
        // CB 1D 0277
        gbc.setState(0xd33d, 0x80d1, 0xb200, 0xa388, 0xd700, 0x11e1, 0x1, 0x1);
        gbc.writeMem(0xd33d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x80d1, gbc.sp());
        EXPECT(0xd33f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd33d));
        EXPECT(0x1d, gbc.readMem(0xd33e));
        // CB 1D 0278
        gbc.setState(0xb148, 0x6926, 0x3930, 0x2313, 0xf055, 0x9f7e, 0x0, 0x0);
        gbc.writeMem(0xb148, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6926, gbc.sp());
        EXPECT(0xb14a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb148));
        EXPECT(0x1d, gbc.readMem(0xb149));
        // CB 1D 0279
        gbc.setState(0xb814, 0xb4ae, 0x4040, 0xcf17, 0x9632, 0x20d6, 0x1, 0x1);
        gbc.writeMem(0xb814, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb4ae, gbc.sp());
        EXPECT(0xb816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb814));
        EXPECT(0x1d, gbc.readMem(0xb815));
        // CB 1D 027A
        gbc.setState(0x29d6, 0x1590, 0xdd60, 0xf44b, 0xe4c8, 0xb3c5, 0x1, 0x1);
        gbc.writeMem(0x29d6, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1590, gbc.sp());
        EXPECT(0x29d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 027B
        gbc.setState(0x4071, 0x4cf9, 0x61f0, 0x783, 0x6607, 0x2d7d, 0x1, 0x1);
        gbc.writeMem(0x4071, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4cf9, gbc.sp());
        EXPECT(0x4073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 027C
        gbc.setState(0xc4ca, 0x7d13, 0xb040, 0xc6ef, 0xd8b4, 0xd773, 0x0, 0x0);
        gbc.writeMem(0xc4ca, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7d13, gbc.sp());
        EXPECT(0xc4cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ca));
        EXPECT(0x1d, gbc.readMem(0xc4cb));
        // CB 1D 027D
        gbc.setState(0x2d0, 0x9e9f, 0xa5c0, 0x4a02, 0xc52c, 0xe3cd, 0x1, 0x0);
        gbc.writeMem(0x2d0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9e9f, gbc.sp());
        EXPECT(0x2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 027E
        gbc.setState(0x35c1, 0x962c, 0xc540, 0xb08e, 0xff3, 0x1cb9, 0x0, 0x0);
        gbc.writeMem(0x35c1, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x962c, gbc.sp());
        EXPECT(0x35c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 027F
        gbc.setState(0xef36, 0xde43, 0xe00, 0x98c4, 0xd9e1, 0x7990, 0x0, 0x1);
        gbc.writeMem(0xef36, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xde43, gbc.sp());
        EXPECT(0xef38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef36));
        EXPECT(0x1d, gbc.readMem(0xef37));
        // CB 1D 0280
        gbc.setState(0x7908, 0xc8c2, 0x5320, 0x8701, 0xdc40, 0xdd4, 0x0, 0x1);
        gbc.writeMem(0x7908, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc8c2, gbc.sp());
        EXPECT(0x790a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0281
        gbc.setState(0x39b4, 0xf2f5, 0xcbc0, 0xefe8, 0xcedc, 0x2cea, 0x1, 0x0);
        gbc.writeMem(0x39b4, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf2f5, gbc.sp());
        EXPECT(0x39b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0282
        gbc.setState(0xeaef, 0xcbd, 0xbff0, 0x57b0, 0x80a8, 0x289b, 0x0, 0x1);
        gbc.writeMem(0xeaef, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcbd, gbc.sp());
        EXPECT(0xeaf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaef));
        EXPECT(0x1d, gbc.readMem(0xeaf0));
        // CB 1D 0283
        gbc.setState(0x9249, 0xab06, 0x4db0, 0xd2ad, 0x9c3b, 0xd4cf, 0x0, 0x0);
        gbc.writeMem(0x9249, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xab06, gbc.sp());
        EXPECT(0x924b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9249));
        EXPECT(0x1d, gbc.readMem(0x924a));
        // CB 1D 0284
        gbc.setState(0x79b0, 0x7b76, 0x2350, 0x98e, 0x5c91, 0xd471, 0x1, 0x0);
        gbc.writeMem(0x79b0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7b76, gbc.sp());
        EXPECT(0x79b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0285
        gbc.setState(0xe2b3, 0x3f79, 0xdd50, 0x9535, 0x637, 0x84a5, 0x1, 0x0);
        gbc.writeMem(0xe2b3, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3f79, gbc.sp());
        EXPECT(0xe2b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b3));
        EXPECT(0x1d, gbc.readMem(0xe2b4));
        // CB 1D 0286
        gbc.setState(0x3487, 0xa0f, 0xfe60, 0xafe5, 0x3503, 0xae65, 0x0, 0x1);
        gbc.writeMem(0x3487, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa0f, gbc.sp());
        EXPECT(0x3489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0287
        gbc.setState(0x139b, 0xf2c3, 0x24d0, 0x31e5, 0x5acf, 0x86cb, 0x1, 0x1);
        gbc.writeMem(0x139b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf2c3, gbc.sp());
        EXPECT(0x139d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0288
        gbc.setState(0xa319, 0x95f2, 0xf390, 0xd2ee, 0x6ead, 0x41a4, 0x1, 0x1);
        gbc.writeMem(0xa319, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x95f2, gbc.sp());
        EXPECT(0xa31b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa319));
        EXPECT(0x1d, gbc.readMem(0xa31a));
        // CB 1D 0289
        gbc.setState(0x2e21, 0x4128, 0xfa50, 0xe182, 0x204b, 0x5726, 0x0, 0x1);
        gbc.writeMem(0x2e21, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4128, gbc.sp());
        EXPECT(0x2e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 028A
        gbc.setState(0x8239, 0xa371, 0xe880, 0x46ac, 0xf168, 0xf14b, 0x0, 0x1);
        gbc.writeMem(0x8239, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa371, gbc.sp());
        EXPECT(0x823b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8239));
        EXPECT(0x1d, gbc.readMem(0x823a));
        // CB 1D 028B
        gbc.setState(0x2e64, 0xbf32, 0xccc0, 0x6220, 0x4c2a, 0x4d62, 0x1, 0x0);
        gbc.writeMem(0x2e64, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbf32, gbc.sp());
        EXPECT(0x2e66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 028C
        gbc.setState(0xa4a8, 0xf9a5, 0x7940, 0x3d8d, 0xf7b1, 0x20d3, 0x0, 0x0);
        gbc.writeMem(0xa4a8, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf9a5, gbc.sp());
        EXPECT(0xa4aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4a8));
        EXPECT(0x1d, gbc.readMem(0xa4a9));
        // CB 1D 028D
        gbc.setState(0x436b, 0x296c, 0x3830, 0x72f3, 0x591f, 0x8d8a, 0x1, 0x0);
        gbc.writeMem(0x436b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x296c, gbc.sp());
        EXPECT(0x436d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 028E
        gbc.setState(0x12c, 0xfe8d, 0x5090, 0x70bf, 0xb992, 0x496c, 0x1, 0x0);
        gbc.writeMem(0x12c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfe8d, gbc.sp());
        EXPECT(0x12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 028F
        gbc.setState(0x431d, 0x37d2, 0xf9f0, 0xb794, 0x8bfa, 0x7855, 0x1, 0x0);
        gbc.writeMem(0x431d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x37d2, gbc.sp());
        EXPECT(0x431f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0290
        gbc.setState(0xad1b, 0x6852, 0xa1b0, 0x554a, 0xc7c7, 0x1b44, 0x0, 0x1);
        gbc.writeMem(0xad1b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6852, gbc.sp());
        EXPECT(0xad1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad1b));
        EXPECT(0x1d, gbc.readMem(0xad1c));
        // CB 1D 0291
        gbc.setState(0xb6dc, 0x328c, 0xa540, 0xce22, 0x36fd, 0x9d26, 0x0, 0x1);
        gbc.writeMem(0xb6dc, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x328c, gbc.sp());
        EXPECT(0xb6de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6dc));
        EXPECT(0x1d, gbc.readMem(0xb6dd));
        // CB 1D 0292
        gbc.setState(0xd35, 0xe92b, 0x4ac0, 0x4165, 0x61da, 0x640, 0x1, 0x1);
        gbc.writeMem(0xd35, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe92b, gbc.sp());
        EXPECT(0xd37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0293
        gbc.setState(0x8822, 0x5a81, 0x69a0, 0xfff2, 0xc17a, 0x716e, 0x1, 0x0);
        gbc.writeMem(0x8822, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5a81, gbc.sp());
        EXPECT(0x8824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8822));
        EXPECT(0x1d, gbc.readMem(0x8823));
        // CB 1D 0294
        gbc.setState(0xa112, 0xc78f, 0x3b20, 0x629, 0x9865, 0x94df, 0x1, 0x1);
        gbc.writeMem(0xa112, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc78f, gbc.sp());
        EXPECT(0xa114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa112));
        EXPECT(0x1d, gbc.readMem(0xa113));
        // CB 1D 0295
        gbc.setState(0x738b, 0x3163, 0x7620, 0xd22a, 0x249d, 0x9ba7, 0x0, 0x0);
        gbc.writeMem(0x738b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3163, gbc.sp());
        EXPECT(0x738d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0296
        gbc.setState(0x573e, 0x1e2, 0xabc0, 0x5e61, 0xa409, 0x40af, 0x0, 0x0);
        gbc.writeMem(0x573e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1e2, gbc.sp());
        EXPECT(0x5740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0297
        gbc.setState(0x6f35, 0xbf99, 0x9780, 0x854, 0x69fa, 0x1a0d, 0x1, 0x1);
        gbc.writeMem(0x6f35, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xbf99, gbc.sp());
        EXPECT(0x6f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0298
        gbc.setState(0x83b0, 0x90b0, 0xee70, 0x7049, 0xc9bf, 0x2733, 0x1, 0x0);
        gbc.writeMem(0x83b0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x90b0, gbc.sp());
        EXPECT(0x83b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b0));
        EXPECT(0x1d, gbc.readMem(0x83b1));
        // CB 1D 0299
        gbc.setState(0x8680, 0xfaf4, 0x8420, 0x6fd0, 0x545e, 0xd7db, 0x0, 0x0);
        gbc.writeMem(0x8680, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfaf4, gbc.sp());
        EXPECT(0x8682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8680));
        EXPECT(0x1d, gbc.readMem(0x8681));
        // CB 1D 029A
        gbc.setState(0xe3ff, 0x7891, 0x1b10, 0x3aac, 0xa681, 0x139d, 0x1, 0x0);
        gbc.writeMem(0xe3ff, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7891, gbc.sp());
        EXPECT(0xe401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ff));
        EXPECT(0x1d, gbc.readMem(0xe400));
        // CB 1D 029B
        gbc.setState(0xc90b, 0x7ae3, 0xbc60, 0x8280, 0x9c57, 0xfdd2, 0x0, 0x0);
        gbc.writeMem(0xc90b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7ae3, gbc.sp());
        EXPECT(0xc90d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc90b));
        EXPECT(0x1d, gbc.readMem(0xc90c));
        // CB 1D 029C
        gbc.setState(0x7b63, 0x21c1, 0x8d80, 0x4207, 0x8430, 0x4992, 0x1, 0x0);
        gbc.writeMem(0x7b63, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x21c1, gbc.sp());
        EXPECT(0x7b65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 029D
        gbc.setState(0x46e2, 0x6c9f, 0x1b40, 0xe8a2, 0xc7a8, 0xa7b8, 0x1, 0x0);
        gbc.writeMem(0x46e2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6c9f, gbc.sp());
        EXPECT(0x46e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 029E
        gbc.setState(0x4079, 0xa67d, 0x6860, 0xb526, 0x4133, 0xab62, 0x0, 0x1);
        gbc.writeMem(0x4079, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa67d, gbc.sp());
        EXPECT(0x407b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 029F
        gbc.setState(0xada2, 0x923, 0x3980, 0xaad1, 0x21f7, 0x8d6d, 0x0, 0x0);
        gbc.writeMem(0xada2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x923, gbc.sp());
        EXPECT(0xada4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada2));
        EXPECT(0x1d, gbc.readMem(0xada3));
        // CB 1D 02A0
        gbc.setState(0x19c, 0x65d, 0xec90, 0xea97, 0xc149, 0xe1c6, 0x1, 0x1);
        gbc.writeMem(0x19c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x65d, gbc.sp());
        EXPECT(0x19e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02A1
        gbc.setState(0x1c2d, 0x764e, 0x1950, 0xd3f8, 0xf907, 0xc49d, 0x0, 0x1);
        gbc.writeMem(0x1c2d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x764e, gbc.sp());
        EXPECT(0x1c2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02A2
        gbc.setState(0x3ef4, 0xaeec, 0x810, 0xea42, 0x12c9, 0x617e, 0x0, 0x0);
        gbc.writeMem(0x3ef4, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xaeec, gbc.sp());
        EXPECT(0x3ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02A3
        gbc.setState(0xdb04, 0x9db0, 0x8780, 0x3c18, 0x2802, 0x6a37, 0x0, 0x1);
        gbc.writeMem(0xdb04, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9db0, gbc.sp());
        EXPECT(0xdb06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb04));
        EXPECT(0x1d, gbc.readMem(0xdb05));
        // CB 1D 02A4
        gbc.setState(0x4e69, 0x2f68, 0x73d0, 0x1727, 0x9ba3, 0xd5a2, 0x1, 0x1);
        gbc.writeMem(0x4e69, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2f68, gbc.sp());
        EXPECT(0x4e6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02A5
        gbc.setState(0x7af9, 0x58c5, 0x1d30, 0xd5b6, 0xbcb, 0x2fa5, 0x1, 0x0);
        gbc.writeMem(0x7af9, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x58c5, gbc.sp());
        EXPECT(0x7afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02A7
        gbc.setState(0x2a3d, 0xaf1, 0x1940, 0xad8b, 0xd670, 0xa3f2, 0x1, 0x1);
        gbc.writeMem(0x2a3d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xaf1, gbc.sp());
        EXPECT(0x2a3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02A8
        gbc.setState(0xbdc7, 0x2073, 0x6680, 0xa32e, 0x188d, 0x6f67, 0x0, 0x1);
        gbc.writeMem(0xbdc7, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2073, gbc.sp());
        EXPECT(0xbdc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc7));
        EXPECT(0x1d, gbc.readMem(0xbdc8));
        // CB 1D 02A9
        gbc.setState(0x59b0, 0x5c2c, 0x5b80, 0xfe53, 0x5005, 0xe2b0, 0x0, 0x0);
        gbc.writeMem(0x59b0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5c2c, gbc.sp());
        EXPECT(0x59b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02AA
        gbc.setState(0x5f05, 0xf66d, 0x41c0, 0x3f67, 0x86a0, 0x8b1, 0x1, 0x1);
        gbc.writeMem(0x5f05, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf66d, gbc.sp());
        EXPECT(0x5f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02AB
        gbc.setState(0x4959, 0x5a94, 0x6be0, 0x1d73, 0x97ee, 0x23d5, 0x0, 0x0);
        gbc.writeMem(0x4959, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5a94, gbc.sp());
        EXPECT(0x495b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02AC
        gbc.setState(0xbf0a, 0x3d96, 0xf280, 0x9de7, 0x3b03, 0x89b, 0x1, 0x1);
        gbc.writeMem(0xbf0a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3d96, gbc.sp());
        EXPECT(0xbf0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf0a));
        EXPECT(0x1d, gbc.readMem(0xbf0b));
        // CB 1D 02AD
        gbc.setState(0xd127, 0xae82, 0x2ab0, 0x49db, 0x3472, 0xe39f, 0x0, 0x1);
        gbc.writeMem(0xd127, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xae82, gbc.sp());
        EXPECT(0xd129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd127));
        EXPECT(0x1d, gbc.readMem(0xd128));
        // CB 1D 02AE
        gbc.setState(0x8053, 0xc708, 0xdc00, 0x5d43, 0x10d1, 0xecee, 0x0, 0x0);
        gbc.writeMem(0x8053, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc708, gbc.sp());
        EXPECT(0x8055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8053));
        EXPECT(0x1d, gbc.readMem(0x8054));
        // CB 1D 02AF
        gbc.setState(0x8fb4, 0x8da9, 0x37f0, 0xa02f, 0xf132, 0x81ac, 0x0, 0x0);
        gbc.writeMem(0x8fb4, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8da9, gbc.sp());
        EXPECT(0x8fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb4));
        EXPECT(0x1d, gbc.readMem(0x8fb5));
        // CB 1D 02B0
        gbc.setState(0x1028, 0x439, 0x91a0, 0x4b80, 0x921b, 0x71b3, 0x1, 0x0);
        gbc.writeMem(0x1028, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x439, gbc.sp());
        EXPECT(0x102a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02B1
        gbc.setState(0x77b3, 0x21e, 0x1f50, 0x2987, 0x5db4, 0xd557, 0x0, 0x0);
        gbc.writeMem(0x77b3, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x21e, gbc.sp());
        EXPECT(0x77b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02B2
        gbc.setState(0xdb3d, 0x90c4, 0x6bb0, 0x554a, 0xc472, 0xa5f5, 0x1, 0x1);
        gbc.writeMem(0xdb3d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x90c4, gbc.sp());
        EXPECT(0xdb3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb3d));
        EXPECT(0x1d, gbc.readMem(0xdb3e));
        // CB 1D 02B3
        gbc.setState(0x1599, 0x2d4a, 0x6950, 0xf258, 0xb480, 0x9475, 0x1, 0x0);
        gbc.writeMem(0x1599, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2d4a, gbc.sp());
        EXPECT(0x159b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02B4
        gbc.setState(0xdc10, 0xba4f, 0x62f0, 0x26ea, 0x82ca, 0xf83c, 0x0, 0x0);
        gbc.writeMem(0xdc10, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xba4f, gbc.sp());
        EXPECT(0xdc12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc10));
        EXPECT(0x1d, gbc.readMem(0xdc11));
        // CB 1D 02B5
        gbc.setState(0xb137, 0xcb18, 0x48c0, 0x2f90, 0x5c6b, 0x654f, 0x0, 0x0);
        gbc.writeMem(0xb137, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcb18, gbc.sp());
        EXPECT(0xb139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb137));
        EXPECT(0x1d, gbc.readMem(0xb138));
        // CB 1D 02B6
        gbc.setState(0x99c5, 0x1a6e, 0xa130, 0x73b3, 0xd55f, 0x6ce5, 0x0, 0x0);
        gbc.writeMem(0x99c5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1a6e, gbc.sp());
        EXPECT(0x99c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99c5));
        EXPECT(0x1d, gbc.readMem(0x99c6));
        // CB 1D 02B8
        gbc.setState(0xd4f5, 0x4061, 0xd5c0, 0x4d2c, 0xfb33, 0x6f61, 0x1, 0x0);
        gbc.writeMem(0xd4f5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4061, gbc.sp());
        EXPECT(0xd4f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f5));
        EXPECT(0x1d, gbc.readMem(0xd4f6));
        // CB 1D 02B9
        gbc.setState(0x84c0, 0xa2b6, 0xd960, 0x20d3, 0x21f1, 0x377, 0x1, 0x1);
        gbc.writeMem(0x84c0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa2b6, gbc.sp());
        EXPECT(0x84c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c0));
        EXPECT(0x1d, gbc.readMem(0x84c1));
        // CB 1D 02BA
        gbc.setState(0x660e, 0x4c76, 0xb00, 0xa9ad, 0x4a50, 0xbbbe, 0x1, 0x0);
        gbc.writeMem(0x660e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4c76, gbc.sp());
        EXPECT(0x6610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02BB
        gbc.setState(0x6795, 0x5b08, 0x8140, 0x18ea, 0xc559, 0xd839, 0x1, 0x1);
        gbc.writeMem(0x6795, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5b08, gbc.sp());
        EXPECT(0x6797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02BC
        gbc.setState(0x7dd4, 0xdd68, 0x88b0, 0x3349, 0xc9e2, 0xd51, 0x1, 0x0);
        gbc.writeMem(0x7dd4, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdd68, gbc.sp());
        EXPECT(0x7dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02BD
        gbc.setState(0x1216, 0xc55c, 0x6f50, 0xdf1d, 0xb483, 0xb59c, 0x0, 0x1);
        gbc.writeMem(0x1216, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc55c, gbc.sp());
        EXPECT(0x1218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02BE
        gbc.setState(0x53f4, 0xf355, 0x8150, 0xecc, 0xfa99, 0xf497, 0x0, 0x0);
        gbc.writeMem(0x53f4, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf355, gbc.sp());
        EXPECT(0x53f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02BF
        gbc.setState(0xc271, 0x254f, 0x10a0, 0xbbe8, 0x9b50, 0x7c88, 0x0, 0x0);
        gbc.writeMem(0xc271, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x254f, gbc.sp());
        EXPECT(0xc273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc271));
        EXPECT(0x1d, gbc.readMem(0xc272));
        // CB 1D 02C0
        gbc.setState(0x2aae, 0xa748, 0x7930, 0x4e7b, 0x4a44, 0x7303, 0x1, 0x1);
        gbc.writeMem(0x2aae, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa748, gbc.sp());
        EXPECT(0x2ab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02C1
        gbc.setState(0xcf1b, 0xf97, 0xd220, 0x734e, 0xa76b, 0x1619, 0x1, 0x1);
        gbc.writeMem(0xcf1b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf97, gbc.sp());
        EXPECT(0xcf1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf1b));
        EXPECT(0x1d, gbc.readMem(0xcf1c));
        // CB 1D 02C2
        gbc.setState(0xe652, 0xd05, 0xa3c0, 0xd39c, 0xac30, 0x5cce, 0x0, 0x0);
        gbc.writeMem(0xe652, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd05, gbc.sp());
        EXPECT(0xe654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe652));
        EXPECT(0x1d, gbc.readMem(0xe653));
        // CB 1D 02C3
        gbc.setState(0x1a7b, 0x5efb, 0xf520, 0x41d0, 0x48f7, 0x952, 0x0, 0x0);
        gbc.writeMem(0x1a7b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5efb, gbc.sp());
        EXPECT(0x1a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02C4
        gbc.setState(0xa024, 0xd2a, 0xd3b0, 0x2ef5, 0x585f, 0xda9f, 0x0, 0x1);
        gbc.writeMem(0xa024, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd2a, gbc.sp());
        EXPECT(0xa026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa024));
        EXPECT(0x1d, gbc.readMem(0xa025));
        // CB 1D 02C5
        gbc.setState(0x687f, 0xd0d7, 0x6480, 0x68cd, 0xba0e, 0xe99f, 0x0, 0x0);
        gbc.writeMem(0x687f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd0d7, gbc.sp());
        EXPECT(0x6881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02C6
        gbc.setState(0x8c97, 0xa03c, 0x5c30, 0x424b, 0x5d80, 0xa6f, 0x0, 0x0);
        gbc.writeMem(0x8c97, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa03c, gbc.sp());
        EXPECT(0x8c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c97));
        EXPECT(0x1d, gbc.readMem(0x8c98));
        // CB 1D 02C7
        gbc.setState(0x87bd, 0xc479, 0xb00, 0x185e, 0xf8dd, 0x6ec9, 0x0, 0x1);
        gbc.writeMem(0x87bd, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc479, gbc.sp());
        EXPECT(0x87bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87bd));
        EXPECT(0x1d, gbc.readMem(0x87be));
        // CB 1D 02C8
        gbc.setState(0x9270, 0x1fed, 0x960, 0xd9ff, 0xf225, 0x1835, 0x1, 0x1);
        gbc.writeMem(0x9270, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1fed, gbc.sp());
        EXPECT(0x9272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9270));
        EXPECT(0x1d, gbc.readMem(0x9271));
        // CB 1D 02C9
        gbc.setState(0xdac9, 0x39c0, 0xc4a0, 0x3f0c, 0x169b, 0x4dbe, 0x0, 0x1);
        gbc.writeMem(0xdac9, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x39c0, gbc.sp());
        EXPECT(0xdacb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac9));
        EXPECT(0x1d, gbc.readMem(0xdaca));
        // CB 1D 02CA
        gbc.setState(0xe759, 0x6493, 0xcde0, 0x1300, 0xa7e5, 0x7760, 0x1, 0x0);
        gbc.writeMem(0xe759, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6493, gbc.sp());
        EXPECT(0xe75b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe759));
        EXPECT(0x1d, gbc.readMem(0xe75a));
        // CB 1D 02CB
        gbc.setState(0xa09b, 0xd39a, 0xd530, 0xfecd, 0x2ad6, 0xb54f, 0x0, 0x0);
        gbc.writeMem(0xa09b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd39a, gbc.sp());
        EXPECT(0xa09d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa09b));
        EXPECT(0x1d, gbc.readMem(0xa09c));
        // CB 1D 02CC
        gbc.setState(0x3356, 0x21f4, 0x6e10, 0xbac1, 0xef59, 0xaab5, 0x0, 0x0);
        gbc.writeMem(0x3356, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x21f4, gbc.sp());
        EXPECT(0x3358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02CD
        gbc.setState(0x460, 0xd6e8, 0x2020, 0xcc50, 0x72dd, 0x2a6c, 0x0, 0x1);
        gbc.writeMem(0x460, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd6e8, gbc.sp());
        EXPECT(0x462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02CE
        gbc.setState(0x1a0e, 0x55e1, 0xbfa0, 0x4309, 0xa2d0, 0xb832, 0x1, 0x1);
        gbc.writeMem(0x1a0e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x55e1, gbc.sp());
        EXPECT(0x1a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02CF
        gbc.setState(0x7508, 0x8cac, 0x3c10, 0xe57b, 0x725a, 0x5f0, 0x0, 0x1);
        gbc.writeMem(0x7508, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8cac, gbc.sp());
        EXPECT(0x750a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02D0
        gbc.setState(0xefb9, 0x77a6, 0xd4b0, 0xd4da, 0xe0a2, 0x12c7, 0x1, 0x0);
        gbc.writeMem(0xefb9, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x77a6, gbc.sp());
        EXPECT(0xefbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb9));
        EXPECT(0x1d, gbc.readMem(0xefba));
        // CB 1D 02D1
        gbc.setState(0x8642, 0xa201, 0xe900, 0x3122, 0x6aa3, 0x55a8, 0x0, 0x0);
        gbc.writeMem(0x8642, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa201, gbc.sp());
        EXPECT(0x8644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8642));
        EXPECT(0x1d, gbc.readMem(0x8643));
        // CB 1D 02D2
        gbc.setState(0xed43, 0x2bb4, 0x61f0, 0xda82, 0xbb5, 0x1f67, 0x1, 0x0);
        gbc.writeMem(0xed43, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2bb4, gbc.sp());
        EXPECT(0xed45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed43));
        EXPECT(0x1d, gbc.readMem(0xed44));
        // CB 1D 02D3
        gbc.setState(0x305d, 0x65e8, 0xb620, 0x22eb, 0x7f0f, 0xa4b, 0x1, 0x0);
        gbc.writeMem(0x305d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x65e8, gbc.sp());
        EXPECT(0x305f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02D4
        gbc.setState(0x58a, 0x57b5, 0xadf0, 0x4a1a, 0xbccc, 0xdc8a, 0x0, 0x1);
        gbc.writeMem(0x58a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x57b5, gbc.sp());
        EXPECT(0x58c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02D5
        gbc.setState(0x74a5, 0xd3b9, 0xf120, 0x6cee, 0x5b5a, 0x89ac, 0x0, 0x0);
        gbc.writeMem(0x74a5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd3b9, gbc.sp());
        EXPECT(0x74a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02D6
        gbc.setState(0x29ed, 0xd82b, 0xdcb0, 0xdefa, 0xf695, 0xddfc, 0x1, 0x0);
        gbc.writeMem(0x29ed, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd82b, gbc.sp());
        EXPECT(0x29ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02D7
        gbc.setState(0xe5c3, 0xd8ed, 0x38b0, 0x922b, 0xdf9, 0xb1f3, 0x0, 0x1);
        gbc.writeMem(0xe5c3, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd8ed, gbc.sp());
        EXPECT(0xe5c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c3));
        EXPECT(0x1d, gbc.readMem(0xe5c4));
        // CB 1D 02D8
        gbc.setState(0xea0c, 0xd60d, 0x85b0, 0x130c, 0x6a81, 0xa5dc, 0x0, 0x1);
        gbc.writeMem(0xea0c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd60d, gbc.sp());
        EXPECT(0xea0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea0c));
        EXPECT(0x1d, gbc.readMem(0xea0d));
        // CB 1D 02D9
        gbc.setState(0xb863, 0x9abb, 0x1de0, 0xc3d0, 0x76c8, 0x37c3, 0x0, 0x0);
        gbc.writeMem(0xb863, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9abb, gbc.sp());
        EXPECT(0xb865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb863));
        EXPECT(0x1d, gbc.readMem(0xb864));
        // CB 1D 02DA
        gbc.setState(0xd6c, 0xabaf, 0x5710, 0x8268, 0x79cd, 0x5ca, 0x1, 0x0);
        gbc.writeMem(0xd6c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xabaf, gbc.sp());
        EXPECT(0xd6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02DB
        gbc.setState(0x4c90, 0x1e58, 0x1290, 0x3b3c, 0x1c3f, 0x84a1, 0x1, 0x0);
        gbc.writeMem(0x4c90, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1e58, gbc.sp());
        EXPECT(0x4c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02DC
        gbc.setState(0xb510, 0xf626, 0xec70, 0xb469, 0x9dc5, 0xf59a, 0x0, 0x0);
        gbc.writeMem(0xb510, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf626, gbc.sp());
        EXPECT(0xb512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb510));
        EXPECT(0x1d, gbc.readMem(0xb511));
        // CB 1D 02DD
        gbc.setState(0x82a1, 0x21a2, 0x26e0, 0x6c72, 0xe865, 0xb997, 0x1, 0x1);
        gbc.writeMem(0x82a1, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x21a2, gbc.sp());
        EXPECT(0x82a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82a1));
        EXPECT(0x1d, gbc.readMem(0x82a2));
        // CB 1D 02DE
        gbc.setState(0x7eb9, 0x1837, 0x1ab0, 0xdf89, 0x1bcc, 0x91f4, 0x0, 0x1);
        gbc.writeMem(0x7eb9, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1837, gbc.sp());
        EXPECT(0x7ebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02DF
        gbc.setState(0x5556, 0x40ae, 0x5250, 0xfe21, 0xabf4, 0x1b9, 0x0, 0x1);
        gbc.writeMem(0x5556, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x40ae, gbc.sp());
        EXPECT(0x5558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02E0
        gbc.setState(0x4b10, 0xee86, 0x90e0, 0xe6d0, 0xdbd6, 0xb602, 0x0, 0x1);
        gbc.writeMem(0x4b10, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xee86, gbc.sp());
        EXPECT(0x4b12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02E1
        gbc.setState(0xc22a, 0xf553, 0x2610, 0x7c37, 0xbea9, 0x5c34, 0x1, 0x1);
        gbc.writeMem(0xc22a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf553, gbc.sp());
        EXPECT(0xc22c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc22a));
        EXPECT(0x1d, gbc.readMem(0xc22b));
        // CB 1D 02E2
        gbc.setState(0x4d18, 0x1802, 0x2800, 0x5c34, 0xa8ae, 0x429a, 0x1, 0x0);
        gbc.writeMem(0x4d18, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1802, gbc.sp());
        EXPECT(0x4d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02E3
        gbc.setState(0x4906, 0x6668, 0x49f0, 0xe51e, 0x4e4e, 0x31ca, 0x1, 0x0);
        gbc.writeMem(0x4906, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6668, gbc.sp());
        EXPECT(0x4908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02E4
        gbc.setState(0x4167, 0xada5, 0xef60, 0xb0f5, 0x32bd, 0x2b0f, 0x1, 0x1);
        gbc.writeMem(0x4167, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xada5, gbc.sp());
        EXPECT(0x4169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02E5
        gbc.setState(0xeb37, 0x4022, 0x93b0, 0x2111, 0x9e3d, 0xad62, 0x0, 0x1);
        gbc.writeMem(0xeb37, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4022, gbc.sp());
        EXPECT(0xeb39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb37));
        EXPECT(0x1d, gbc.readMem(0xeb38));
        // CB 1D 02E6
        gbc.setState(0xe219, 0x301c, 0xcd20, 0x34f3, 0xa257, 0xad44, 0x0, 0x0);
        gbc.writeMem(0xe219, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x301c, gbc.sp());
        EXPECT(0xe21b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe219));
        EXPECT(0x1d, gbc.readMem(0xe21a));
        // CB 1D 02E7
        gbc.setState(0x2072, 0x29cf, 0x5e0, 0xa1c2, 0x897b, 0x6a40, 0x1, 0x1);
        gbc.writeMem(0x2072, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x29cf, gbc.sp());
        EXPECT(0x2074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02E8
        gbc.setState(0xd642, 0xfb7f, 0x53b0, 0x1769, 0x1804, 0xb067, 0x1, 0x0);
        gbc.writeMem(0xd642, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xfb7f, gbc.sp());
        EXPECT(0xd644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd642));
        EXPECT(0x1d, gbc.readMem(0xd643));
        // CB 1D 02E9
        gbc.setState(0xa7de, 0x66a5, 0x7200, 0x4db6, 0x399, 0x1dc7, 0x1, 0x1);
        gbc.writeMem(0xa7de, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x66a5, gbc.sp());
        EXPECT(0xa7e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7de));
        EXPECT(0x1d, gbc.readMem(0xa7df));
        // CB 1D 02EA
        gbc.setState(0x596f, 0xe069, 0xa180, 0x9045, 0xbc05, 0x7d7, 0x1, 0x0);
        gbc.writeMem(0x596f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe069, gbc.sp());
        EXPECT(0x5971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02EB
        gbc.setState(0xe711, 0xea2f, 0xd490, 0x2021, 0xcce8, 0x1509, 0x0, 0x0);
        gbc.writeMem(0xe711, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xea2f, gbc.sp());
        EXPECT(0xe713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe711));
        EXPECT(0x1d, gbc.readMem(0xe712));
        // CB 1D 02EC
        gbc.setState(0xaa4f, 0x3cdb, 0x19c0, 0x7e99, 0x2c4, 0xcf9f, 0x1, 0x1);
        gbc.writeMem(0xaa4f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3cdb, gbc.sp());
        EXPECT(0xaa51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa4f));
        EXPECT(0x1d, gbc.readMem(0xaa50));
        // CB 1D 02ED
        gbc.setState(0xa3dd, 0xbc9c, 0xc060, 0xcde7, 0xf1a8, 0x7541, 0x0, 0x0);
        gbc.writeMem(0xa3dd, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbc9c, gbc.sp());
        EXPECT(0xa3df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3dd));
        EXPECT(0x1d, gbc.readMem(0xa3de));
        // CB 1D 02EE
        gbc.setState(0xa53e, 0x82fe, 0x3240, 0x6982, 0x1871, 0x2f6b, 0x1, 0x1);
        gbc.writeMem(0xa53e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x82fe, gbc.sp());
        EXPECT(0xa540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa53e));
        EXPECT(0x1d, gbc.readMem(0xa53f));
        // CB 1D 02EF
        gbc.setState(0x49c9, 0x8288, 0x9930, 0x69c6, 0x812, 0x31b, 0x0, 0x1);
        gbc.writeMem(0x49c9, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8288, gbc.sp());
        EXPECT(0x49cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02F0
        gbc.setState(0xd82c, 0x507d, 0x6690, 0xa532, 0x7857, 0x4adc, 0x0, 0x1);
        gbc.writeMem(0xd82c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x507d, gbc.sp());
        EXPECT(0xd82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd82c));
        EXPECT(0x1d, gbc.readMem(0xd82d));
        // CB 1D 02F1
        gbc.setState(0x77ac, 0xa317, 0xa60, 0x6792, 0x1bcb, 0x2602, 0x0, 0x0);
        gbc.writeMem(0x77ac, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa317, gbc.sp());
        EXPECT(0x77ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02F2
        gbc.setState(0x8f95, 0x1933, 0xc500, 0xe8a6, 0x5572, 0xbaae, 0x0, 0x1);
        gbc.writeMem(0x8f95, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1933, gbc.sp());
        EXPECT(0x8f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f95));
        EXPECT(0x1d, gbc.readMem(0x8f96));
        // CB 1D 02F3
        gbc.setState(0xd424, 0xce41, 0xdd00, 0xef56, 0xe9c7, 0x9b2f, 0x1, 0x1);
        gbc.writeMem(0xd424, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xce41, gbc.sp());
        EXPECT(0xd426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd424));
        EXPECT(0x1d, gbc.readMem(0xd425));
        // CB 1D 02F4
        gbc.setState(0x6471, 0x66d9, 0xdb60, 0x6d0e, 0x1dc6, 0x8f23, 0x1, 0x0);
        gbc.writeMem(0x6471, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x66d9, gbc.sp());
        EXPECT(0x6473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02F5
        gbc.setState(0xa059, 0xd48c, 0xde20, 0x6a05, 0x4b78, 0x9431, 0x0, 0x0);
        gbc.writeMem(0xa059, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd48c, gbc.sp());
        EXPECT(0xa05b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa059));
        EXPECT(0x1d, gbc.readMem(0xa05a));
        // CB 1D 02F6
        gbc.setState(0xdf55, 0xa69a, 0xdf50, 0x786f, 0xf9fe, 0xca1, 0x1, 0x0);
        gbc.writeMem(0xdf55, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa69a, gbc.sp());
        EXPECT(0xdf57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf55));
        EXPECT(0x1d, gbc.readMem(0xdf56));
        // CB 1D 02F7
        gbc.setState(0xe8cd, 0x4506, 0xddf0, 0x7c5f, 0x507c, 0x740f, 0x0, 0x1);
        gbc.writeMem(0xe8cd, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4506, gbc.sp());
        EXPECT(0xe8cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8cd));
        EXPECT(0x1d, gbc.readMem(0xe8ce));
        // CB 1D 02F8
        gbc.setState(0x39a0, 0x334a, 0xe550, 0x4de9, 0x8ba1, 0x70a8, 0x1, 0x1);
        gbc.writeMem(0x39a0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x334a, gbc.sp());
        EXPECT(0x39a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02F9
        gbc.setState(0x931b, 0x4f75, 0xa120, 0xbcb1, 0x3d70, 0x7065, 0x0, 0x0);
        gbc.writeMem(0x931b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4f75, gbc.sp());
        EXPECT(0x931d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x931b));
        EXPECT(0x1d, gbc.readMem(0x931c));
        // CB 1D 02FA
        gbc.setState(0x2db5, 0x3a44, 0x9dd0, 0xb088, 0x7e77, 0xcc1f, 0x1, 0x1);
        gbc.writeMem(0x2db5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3a44, gbc.sp());
        EXPECT(0x2db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02FB
        gbc.setState(0x5feb, 0x7dde, 0x85e0, 0xadb0, 0xe5c6, 0xbcde, 0x1, 0x0);
        gbc.writeMem(0x5feb, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7dde, gbc.sp());
        EXPECT(0x5fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 02FC
        gbc.setState(0x8a15, 0x4a54, 0xbf00, 0xbeab, 0x82d1, 0x4bd5, 0x1, 0x0);
        gbc.writeMem(0x8a15, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4a54, gbc.sp());
        EXPECT(0x8a17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a15));
        EXPECT(0x1d, gbc.readMem(0x8a16));
        // CB 1D 02FD
        gbc.setState(0xf52, 0x5ba3, 0x5190, 0x1e33, 0xb499, 0xdbe1, 0x1, 0x1);
        gbc.writeMem(0xf52, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5ba3, gbc.sp());
        EXPECT(0xf54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 02FF
        gbc.setState(0x8bfa, 0x5345, 0xf5c0, 0x2216, 0xc981, 0xca34, 0x0, 0x1);
        gbc.writeMem(0x8bfa, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5345, gbc.sp());
        EXPECT(0x8bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bfa));
        EXPECT(0x1d, gbc.readMem(0x8bfb));
        // CB 1D 0300
        gbc.setState(0x7f66, 0xeab4, 0xcc90, 0xaae5, 0xeaf6, 0xcbb7, 0x0, 0x0);
        gbc.writeMem(0x7f66, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xeab4, gbc.sp());
        EXPECT(0x7f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0301
        gbc.setState(0x510e, 0x9771, 0x1ac0, 0x63f0, 0xc07d, 0xe5c5, 0x1, 0x0);
        gbc.writeMem(0x510e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9771, gbc.sp());
        EXPECT(0x5110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0302
        gbc.setState(0x170, 0x3add, 0xc90, 0x87fc, 0x3173, 0xcf47, 0x0, 0x0);
        gbc.writeMem(0x170, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3add, gbc.sp());
        EXPECT(0x172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0303
        gbc.setState(0x79c9, 0x5909, 0xb060, 0x829c, 0x358d, 0x834b, 0x0, 0x1);
        gbc.writeMem(0x79c9, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5909, gbc.sp());
        EXPECT(0x79cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0304
        gbc.setState(0x782a, 0xf6a8, 0xd7a0, 0x65bc, 0xb9cb, 0xcc5c, 0x1, 0x1);
        gbc.writeMem(0x782a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf6a8, gbc.sp());
        EXPECT(0x782c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0305
        gbc.setState(0xbc24, 0x1e1, 0x2690, 0x3d36, 0x8522, 0xd1b9, 0x1, 0x0);
        gbc.writeMem(0xbc24, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1e1, gbc.sp());
        EXPECT(0xbc26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc24));
        EXPECT(0x1d, gbc.readMem(0xbc25));
        // CB 1D 0306
        gbc.setState(0x62cd, 0xe091, 0xde20, 0x3a86, 0x6db3, 0xb4b2, 0x1, 0x1);
        gbc.writeMem(0x62cd, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe091, gbc.sp());
        EXPECT(0x62cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0307
        gbc.setState(0xa09b, 0x5403, 0x3260, 0x19d3, 0x3992, 0x73b, 0x1, 0x1);
        gbc.writeMem(0xa09b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5403, gbc.sp());
        EXPECT(0xa09d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa09b));
        EXPECT(0x1d, gbc.readMem(0xa09c));
        // CB 1D 0308
        gbc.setState(0x1a33, 0x75f1, 0x3560, 0xc5d0, 0xc8c, 0x2b1d, 0x1, 0x1);
        gbc.writeMem(0x1a33, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x75f1, gbc.sp());
        EXPECT(0x1a35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0309
        gbc.setState(0x8d34, 0x379a, 0x7850, 0x3df, 0x199c, 0x57f6, 0x1, 0x0);
        gbc.writeMem(0x8d34, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x379a, gbc.sp());
        EXPECT(0x8d36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d34));
        EXPECT(0x1d, gbc.readMem(0x8d35));
        // CB 1D 030A
        gbc.setState(0xdaa5, 0x9744, 0xef50, 0xdebd, 0xd79d, 0xd6a5, 0x1, 0x1);
        gbc.writeMem(0xdaa5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9744, gbc.sp());
        EXPECT(0xdaa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaa5));
        EXPECT(0x1d, gbc.readMem(0xdaa6));
        // CB 1D 030B
        gbc.setState(0xa290, 0x646c, 0x4a0, 0x407e, 0x5d3a, 0xc2a6, 0x1, 0x1);
        gbc.writeMem(0xa290, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x646c, gbc.sp());
        EXPECT(0xa292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa290));
        EXPECT(0x1d, gbc.readMem(0xa291));
        // CB 1D 030C
        gbc.setState(0x9ae, 0x2f18, 0xa500, 0xb768, 0xe36f, 0x71e3, 0x0, 0x0);
        gbc.writeMem(0x9ae, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2f18, gbc.sp());
        EXPECT(0x9b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 030D
        gbc.setState(0x7700, 0xbfa8, 0xff00, 0xc12b, 0xc05e, 0x53f7, 0x0, 0x0);
        gbc.writeMem(0x7700, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbfa8, gbc.sp());
        EXPECT(0x7702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 030E
        gbc.setState(0xe798, 0xbf17, 0xf830, 0xdfa5, 0x618d, 0x7837, 0x0, 0x1);
        gbc.writeMem(0xe798, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbf17, gbc.sp());
        EXPECT(0xe79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe798));
        EXPECT(0x1d, gbc.readMem(0xe799));
        // CB 1D 030F
        gbc.setState(0x9c10, 0x860d, 0xc40, 0x2aaa, 0x6adf, 0xeac1, 0x0, 0x0);
        gbc.writeMem(0x9c10, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x860d, gbc.sp());
        EXPECT(0x9c12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c10));
        EXPECT(0x1d, gbc.readMem(0x9c11));
        // CB 1D 0310
        gbc.setState(0x1306, 0x89ee, 0x3800, 0xdb4f, 0x4f6d, 0x355d, 0x0, 0x0);
        gbc.writeMem(0x1306, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x89ee, gbc.sp());
        EXPECT(0x1308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0311
        gbc.setState(0xa6c, 0xa989, 0x3e70, 0xb581, 0x8aa0, 0x7a8c, 0x1, 0x0);
        gbc.writeMem(0xa6c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa989, gbc.sp());
        EXPECT(0xa6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0312
        gbc.setState(0xa55b, 0x6e34, 0xb150, 0xe33d, 0x567c, 0xdfdf, 0x1, 0x1);
        gbc.writeMem(0xa55b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6e34, gbc.sp());
        EXPECT(0xa55d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa55b));
        EXPECT(0x1d, gbc.readMem(0xa55c));
        // CB 1D 0313
        gbc.setState(0x61c2, 0xed78, 0x4250, 0x4d54, 0x4f21, 0xe705, 0x1, 0x0);
        gbc.writeMem(0x61c2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xed78, gbc.sp());
        EXPECT(0x61c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0314
        gbc.setState(0x75ab, 0x38c3, 0xb910, 0x3438, 0x7620, 0x6007, 0x0, 0x1);
        gbc.writeMem(0x75ab, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x38c3, gbc.sp());
        EXPECT(0x75ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0315
        gbc.setState(0x8cac, 0x5e46, 0x71c0, 0xd36d, 0xc777, 0xf759, 0x0, 0x1);
        gbc.writeMem(0x8cac, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5e46, gbc.sp());
        EXPECT(0x8cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cac));
        EXPECT(0x1d, gbc.readMem(0x8cad));
        // CB 1D 0316
        gbc.setState(0x261f, 0xcc7c, 0xb0f0, 0xfd34, 0xaf3a, 0xc369, 0x0, 0x1);
        gbc.writeMem(0x261f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcc7c, gbc.sp());
        EXPECT(0x2621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0318
        gbc.setState(0xa12b, 0x7c96, 0xf370, 0x4634, 0xc981, 0xad36, 0x1, 0x0);
        gbc.writeMem(0xa12b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7c96, gbc.sp());
        EXPECT(0xa12d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa12b));
        EXPECT(0x1d, gbc.readMem(0xa12c));
        // CB 1D 0319
        gbc.setState(0x5cb0, 0xee8b, 0xd360, 0xa996, 0xd3da, 0xef51, 0x1, 0x1);
        gbc.writeMem(0x5cb0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xee8b, gbc.sp());
        EXPECT(0x5cb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 031A
        gbc.setState(0xb1a4, 0x914d, 0xf2b0, 0x13b1, 0x67c2, 0x6460, 0x1, 0x1);
        gbc.writeMem(0xb1a4, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x914d, gbc.sp());
        EXPECT(0xb1a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a4));
        EXPECT(0x1d, gbc.readMem(0xb1a5));
        // CB 1D 031B
        gbc.setState(0xe2dc, 0x9003, 0x46d0, 0xb951, 0x14c3, 0x6a1f, 0x1, 0x1);
        gbc.writeMem(0xe2dc, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9003, gbc.sp());
        EXPECT(0xe2de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2dc));
        EXPECT(0x1d, gbc.readMem(0xe2dd));
        // CB 1D 031C
        gbc.setState(0x30a5, 0xee38, 0xd630, 0x70af, 0x433d, 0x5977, 0x1, 0x1);
        gbc.writeMem(0x30a5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xee38, gbc.sp());
        EXPECT(0x30a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 031D
        gbc.setState(0x4698, 0x9e70, 0x6600, 0xef78, 0x4bd6, 0xaba9, 0x1, 0x0);
        gbc.writeMem(0x4698, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9e70, gbc.sp());
        EXPECT(0x469a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 031E
        gbc.setState(0xcca6, 0xe575, 0xeb90, 0xb3cf, 0x8e56, 0xb63f, 0x0, 0x1);
        gbc.writeMem(0xcca6, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe575, gbc.sp());
        EXPECT(0xcca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcca6));
        EXPECT(0x1d, gbc.readMem(0xcca7));
        // CB 1D 031F
        gbc.setState(0xe6c0, 0x37ad, 0x79e0, 0xad12, 0x97c8, 0xcff3, 0x0, 0x1);
        gbc.writeMem(0xe6c0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x37ad, gbc.sp());
        EXPECT(0xe6c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6c0));
        EXPECT(0x1d, gbc.readMem(0xe6c1));
        // CB 1D 0320
        gbc.setState(0x22a7, 0xfc81, 0x9f0, 0xf1da, 0xb084, 0x6144, 0x0, 0x0);
        gbc.writeMem(0x22a7, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfc81, gbc.sp());
        EXPECT(0x22a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0321
        gbc.setState(0x715e, 0xcb8f, 0x5090, 0x6069, 0xe872, 0x416c, 0x1, 0x1);
        gbc.writeMem(0x715e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcb8f, gbc.sp());
        EXPECT(0x7160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0322
        gbc.setState(0xebc2, 0x1d0f, 0x61a0, 0xe04f, 0xd991, 0xf9a5, 0x1, 0x1);
        gbc.writeMem(0xebc2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1d0f, gbc.sp());
        EXPECT(0xebc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebc2));
        EXPECT(0x1d, gbc.readMem(0xebc3));
        // CB 1D 0323
        gbc.setState(0x51a2, 0x951d, 0xb8b0, 0x25e3, 0x23ff, 0x6796, 0x1, 0x1);
        gbc.writeMem(0x51a2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x951d, gbc.sp());
        EXPECT(0x51a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0324
        gbc.setState(0xb0a3, 0xb92d, 0x2150, 0x9386, 0x6b64, 0x3e9d, 0x0, 0x0);
        gbc.writeMem(0xb0a3, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb92d, gbc.sp());
        EXPECT(0xb0a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a3));
        EXPECT(0x1d, gbc.readMem(0xb0a4));
        // CB 1D 0325
        gbc.setState(0x663, 0x13c0, 0x87f0, 0xa266, 0xb6e9, 0xf47, 0x0, 0x1);
        gbc.writeMem(0x663, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x13c0, gbc.sp());
        EXPECT(0x665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0326
        gbc.setState(0x103f, 0x2cbd, 0xad30, 0x85c3, 0x86b0, 0x1c3e, 0x0, 0x1);
        gbc.writeMem(0x103f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2cbd, gbc.sp());
        EXPECT(0x1041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0327
        gbc.setState(0x3544, 0x4ba0, 0x1750, 0x5327, 0x8e20, 0x59f5, 0x1, 0x1);
        gbc.writeMem(0x3544, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4ba0, gbc.sp());
        EXPECT(0x3546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0328
        gbc.setState(0xe61c, 0x36e6, 0x74a0, 0x5a36, 0x9ee1, 0x338b, 0x1, 0x1);
        gbc.writeMem(0xe61c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x36e6, gbc.sp());
        EXPECT(0xe61e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe61c));
        EXPECT(0x1d, gbc.readMem(0xe61d));
        // CB 1D 0329
        gbc.setState(0xdc9, 0xfe13, 0xaa0, 0x5f92, 0xfcf0, 0xca68, 0x1, 0x0);
        gbc.writeMem(0xdc9, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfe13, gbc.sp());
        EXPECT(0xdcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 032A
        gbc.setState(0x9c52, 0x8ce6, 0x540, 0x70fd, 0x5744, 0xe6b0, 0x0, 0x0);
        gbc.writeMem(0x9c52, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8ce6, gbc.sp());
        EXPECT(0x9c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c52));
        EXPECT(0x1d, gbc.readMem(0x9c53));
        // CB 1D 032B
        gbc.setState(0x3f8a, 0x4315, 0xcf60, 0x3528, 0xfdce, 0x8358, 0x1, 0x1);
        gbc.writeMem(0x3f8a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4315, gbc.sp());
        EXPECT(0x3f8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 032C
        gbc.setState(0x1211, 0xc16d, 0x84b0, 0x45fd, 0x9418, 0xf612, 0x1, 0x0);
        gbc.writeMem(0x1211, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc16d, gbc.sp());
        EXPECT(0x1213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 032D
        gbc.setState(0x8371, 0x7337, 0x95c0, 0xf525, 0x47b9, 0x45ca, 0x0, 0x1);
        gbc.writeMem(0x8371, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7337, gbc.sp());
        EXPECT(0x8373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8371));
        EXPECT(0x1d, gbc.readMem(0x8372));
        // CB 1D 032E
        gbc.setState(0x54c9, 0x516b, 0x88b0, 0x54b6, 0xff4f, 0x3ae3, 0x1, 0x0);
        gbc.writeMem(0x54c9, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x516b, gbc.sp());
        EXPECT(0x54cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0330
        gbc.setState(0x84b4, 0x3018, 0x2b70, 0x1971, 0xa137, 0x4f6f, 0x1, 0x1);
        gbc.writeMem(0x84b4, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3018, gbc.sp());
        EXPECT(0x84b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b4));
        EXPECT(0x1d, gbc.readMem(0x84b5));
        // CB 1D 0331
        gbc.setState(0xd008, 0xd14e, 0x9670, 0x66aa, 0x1cca, 0xdeb, 0x0, 0x0);
        gbc.writeMem(0xd008, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd14e, gbc.sp());
        EXPECT(0xd00a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd008));
        EXPECT(0x1d, gbc.readMem(0xd009));
        // CB 1D 0332
        gbc.setState(0x679a, 0x2049, 0xd210, 0x45a6, 0xcb49, 0x8f5e, 0x0, 0x0);
        gbc.writeMem(0x679a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2049, gbc.sp());
        EXPECT(0x679c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0334
        gbc.setState(0x954b, 0xd045, 0x8f20, 0x6a65, 0xb260, 0x31ac, 0x0, 0x0);
        gbc.writeMem(0x954b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd045, gbc.sp());
        EXPECT(0x954d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x954b));
        EXPECT(0x1d, gbc.readMem(0x954c));
        // CB 1D 0335
        gbc.setState(0x870b, 0xeb3e, 0xb050, 0xacfc, 0x44c5, 0x43e1, 0x0, 0x1);
        gbc.writeMem(0x870b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xeb3e, gbc.sp());
        EXPECT(0x870d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x870b));
        EXPECT(0x1d, gbc.readMem(0x870c));
        // CB 1D 0336
        gbc.setState(0xe305, 0xc9bc, 0xb8a0, 0x388e, 0x4d05, 0x4f6a, 0x1, 0x0);
        gbc.writeMem(0xe305, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc9bc, gbc.sp());
        EXPECT(0xe307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe305));
        EXPECT(0x1d, gbc.readMem(0xe306));
        // CB 1D 0338
        gbc.setState(0x79d5, 0x56c, 0x1310, 0xf0c6, 0xfa71, 0xff53, 0x0, 0x0);
        gbc.writeMem(0x79d5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x56c, gbc.sp());
        EXPECT(0x79d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0339
        gbc.setState(0xd997, 0x8c3a, 0xe8b0, 0x3f15, 0xdeff, 0xb8a0, 0x0, 0x0);
        gbc.writeMem(0xd997, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8c3a, gbc.sp());
        EXPECT(0xd999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd997));
        EXPECT(0x1d, gbc.readMem(0xd998));
        // CB 1D 033A
        gbc.setState(0xbed2, 0xcd3b, 0x2f80, 0xf990, 0xecb8, 0xb717, 0x0, 0x0);
        gbc.writeMem(0xbed2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xcd3b, gbc.sp());
        EXPECT(0xbed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed2));
        EXPECT(0x1d, gbc.readMem(0xbed3));
        // CB 1D 033B
        gbc.setState(0xbc0f, 0x6f72, 0xe590, 0x6a28, 0x5a0b, 0x4005, 0x0, 0x1);
        gbc.writeMem(0xbc0f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6f72, gbc.sp());
        EXPECT(0xbc11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc0f));
        EXPECT(0x1d, gbc.readMem(0xbc10));
        // CB 1D 033C
        gbc.setState(0x91f2, 0x14db, 0xf970, 0x8221, 0xde16, 0x6814, 0x0, 0x0);
        gbc.writeMem(0x91f2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x14db, gbc.sp());
        EXPECT(0x91f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f2));
        EXPECT(0x1d, gbc.readMem(0x91f3));
        // CB 1D 033D
        gbc.setState(0x6a5e, 0x437c, 0xd800, 0xe8b6, 0xdfa5, 0x5553, 0x0, 0x0);
        gbc.writeMem(0x6a5e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x437c, gbc.sp());
        EXPECT(0x6a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 033E
        gbc.setState(0xd234, 0xdd43, 0x6c30, 0xdf64, 0x8a5d, 0x3c1b, 0x0, 0x0);
        gbc.writeMem(0xd234, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdd43, gbc.sp());
        EXPECT(0xd236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd234));
        EXPECT(0x1d, gbc.readMem(0xd235));
        // CB 1D 033F
        gbc.setState(0x5ba0, 0x3d81, 0x8a50, 0x6daf, 0xde7e, 0x5456, 0x1, 0x0);
        gbc.writeMem(0x5ba0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3d81, gbc.sp());
        EXPECT(0x5ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0341
        gbc.setState(0xfcd, 0x413d, 0xa0f0, 0x12e1, 0xa296, 0xf554, 0x1, 0x1);
        gbc.writeMem(0xfcd, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x413d, gbc.sp());
        EXPECT(0xfcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0342
        gbc.setState(0x1a29, 0xabd2, 0x8e0, 0x10cd, 0x95e4, 0xee40, 0x1, 0x1);
        gbc.writeMem(0x1a29, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xabd2, gbc.sp());
        EXPECT(0x1a2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0344
        gbc.setState(0xaf4d, 0x48b9, 0xd580, 0x94b6, 0x8d07, 0xd083, 0x1, 0x0);
        gbc.writeMem(0xaf4d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x48b9, gbc.sp());
        EXPECT(0xaf4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf4d));
        EXPECT(0x1d, gbc.readMem(0xaf4e));
        // CB 1D 0345
        gbc.setState(0xefa2, 0xcbd7, 0x6a60, 0x3c4, 0xc4d4, 0xaf91, 0x1, 0x0);
        gbc.writeMem(0xefa2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xcbd7, gbc.sp());
        EXPECT(0xefa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefa2));
        EXPECT(0x1d, gbc.readMem(0xefa3));
        // CB 1D 0346
        gbc.setState(0x5890, 0x6185, 0xc500, 0x8892, 0xdbf3, 0x7ad5, 0x1, 0x0);
        gbc.writeMem(0x5890, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6185, gbc.sp());
        EXPECT(0x5892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0348
        gbc.setState(0xc45b, 0x9df4, 0x16b0, 0x270a, 0x598f, 0x5b18, 0x1, 0x0);
        gbc.writeMem(0xc45b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9df4, gbc.sp());
        EXPECT(0xc45d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45b));
        EXPECT(0x1d, gbc.readMem(0xc45c));
        // CB 1D 0349
        gbc.setState(0x8bf4, 0x47e9, 0xeb30, 0xb9d6, 0x7b40, 0x3b95, 0x1, 0x0);
        gbc.writeMem(0x8bf4, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x47e9, gbc.sp());
        EXPECT(0x8bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf4));
        EXPECT(0x1d, gbc.readMem(0x8bf5));
        // CB 1D 034A
        gbc.setState(0x19b, 0x7445, 0xaff0, 0xd440, 0xd18f, 0xd469, 0x0, 0x1);
        gbc.writeMem(0x19b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7445, gbc.sp());
        EXPECT(0x19d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 034B
        gbc.setState(0x6bba, 0xd7ea, 0xfcb0, 0x97ee, 0xe883, 0x23c7, 0x1, 0x1);
        gbc.writeMem(0x6bba, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd7ea, gbc.sp());
        EXPECT(0x6bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 034C
        gbc.setState(0x18f, 0xfd80, 0xd960, 0x5ffc, 0xf0d0, 0x60d0, 0x0, 0x1);
        gbc.writeMem(0x18f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfd80, gbc.sp());
        EXPECT(0x191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 034D
        gbc.setState(0x2707, 0xbcb9, 0x3550, 0x7dd9, 0x516d, 0xff8d, 0x0, 0x0);
        gbc.writeMem(0x2707, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbcb9, gbc.sp());
        EXPECT(0x2709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 034E
        gbc.setState(0x102c, 0x558b, 0xea60, 0x6243, 0xf1e8, 0xd632, 0x0, 0x1);
        gbc.writeMem(0x102c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x558b, gbc.sp());
        EXPECT(0x102e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 034F
        gbc.setState(0x8c20, 0x1946, 0xd220, 0xc90e, 0x766f, 0xec8, 0x0, 0x0);
        gbc.writeMem(0x8c20, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1946, gbc.sp());
        EXPECT(0x8c22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c20));
        EXPECT(0x1d, gbc.readMem(0x8c21));
        // CB 1D 0350
        gbc.setState(0xb1b1, 0xb308, 0x5c40, 0xb18c, 0x877, 0x3f2d, 0x1, 0x0);
        gbc.writeMem(0xb1b1, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb308, gbc.sp());
        EXPECT(0xb1b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1b1));
        EXPECT(0x1d, gbc.readMem(0xb1b2));
        // CB 1D 0351
        gbc.setState(0x6dff, 0x27e1, 0xc150, 0xa274, 0x7884, 0xf8d7, 0x1, 0x0);
        gbc.writeMem(0x6dff, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x27e1, gbc.sp());
        EXPECT(0x6e01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0352
        gbc.setState(0x26ae, 0x80f8, 0xff70, 0xe3d4, 0xb8ae, 0x3862, 0x0, 0x0);
        gbc.writeMem(0x26ae, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x80f8, gbc.sp());
        EXPECT(0x26b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0353
        gbc.setState(0x21f8, 0x157, 0xacd0, 0xa72c, 0x5b4f, 0xa0ad, 0x0, 0x0);
        gbc.writeMem(0x21f8, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x157, gbc.sp());
        EXPECT(0x21fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0354
        gbc.setState(0x9046, 0x7bca, 0xa040, 0x440d, 0xca78, 0x29d0, 0x0, 0x1);
        gbc.writeMem(0x9046, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7bca, gbc.sp());
        EXPECT(0x9048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9046));
        EXPECT(0x1d, gbc.readMem(0x9047));
        // CB 1D 0356
        gbc.setState(0xc07d, 0x594e, 0x6370, 0xbf93, 0x6e63, 0x4fe6, 0x1, 0x1);
        gbc.writeMem(0xc07d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x594e, gbc.sp());
        EXPECT(0xc07f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc07d));
        EXPECT(0x1d, gbc.readMem(0xc07e));
        // CB 1D 0357
        gbc.setState(0x4af0, 0xb24f, 0x78c0, 0x9d89, 0xa21c, 0x1b7c, 0x0, 0x1);
        gbc.writeMem(0x4af0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb24f, gbc.sp());
        EXPECT(0x4af2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0358
        gbc.setState(0x64eb, 0x71f3, 0xe050, 0x1bf5, 0x2f7c, 0x4986, 0x1, 0x0);
        gbc.writeMem(0x64eb, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x71f3, gbc.sp());
        EXPECT(0x64ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 035A
        gbc.setState(0x147, 0xd77a, 0x30c0, 0x357e, 0x5688, 0xb0f2, 0x0, 0x0);
        gbc.writeMem(0x147, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd77a, gbc.sp());
        EXPECT(0x149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 035B
        gbc.setState(0x2672, 0x3895, 0x1360, 0xc52, 0x7ef, 0xc59b, 0x0, 0x0);
        gbc.writeMem(0x2672, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3895, gbc.sp());
        EXPECT(0x2674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 035C
        gbc.setState(0x6db8, 0x2a7b, 0x95d0, 0x4f38, 0x1224, 0x4aab, 0x1, 0x1);
        gbc.writeMem(0x6db8, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2a7b, gbc.sp());
        EXPECT(0x6dba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 035D
        gbc.setState(0xa592, 0xbc4e, 0xe320, 0xfefb, 0x1745, 0xa0bb, 0x1, 0x1);
        gbc.writeMem(0xa592, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbc4e, gbc.sp());
        EXPECT(0xa594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa592));
        EXPECT(0x1d, gbc.readMem(0xa593));
        // CB 1D 035E
        gbc.setState(0xb7c1, 0xf238, 0x28b0, 0xb1fd, 0x9f72, 0x914e, 0x0, 0x1);
        gbc.writeMem(0xb7c1, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf238, gbc.sp());
        EXPECT(0xb7c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7c1));
        EXPECT(0x1d, gbc.readMem(0xb7c2));
        // CB 1D 035F
        gbc.setState(0xb8da, 0x6650, 0x6e0, 0x8e9a, 0xb844, 0x4779, 0x1, 0x1);
        gbc.writeMem(0xb8da, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6650, gbc.sp());
        EXPECT(0xb8dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8da));
        EXPECT(0x1d, gbc.readMem(0xb8db));
        // CB 1D 0360
        gbc.setState(0x78ec, 0x886a, 0xc730, 0x2108, 0x53a8, 0xcc6d, 0x1, 0x1);
        gbc.writeMem(0x78ec, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x886a, gbc.sp());
        EXPECT(0x78ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0361
        gbc.setState(0x293c, 0x19fd, 0xf630, 0xed2, 0x354b, 0xbb46, 0x0, 0x0);
        gbc.writeMem(0x293c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x19fd, gbc.sp());
        EXPECT(0x293e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0362
        gbc.setState(0x9f92, 0xfc0a, 0xa170, 0xd8bf, 0x5197, 0x586c, 0x1, 0x1);
        gbc.writeMem(0x9f92, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfc0a, gbc.sp());
        EXPECT(0x9f94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f92));
        EXPECT(0x1d, gbc.readMem(0x9f93));
        // CB 1D 0363
        gbc.setState(0x76ab, 0xfded, 0x980, 0xd9f, 0xc340, 0xc6b1, 0x1, 0x0);
        gbc.writeMem(0x76ab, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfded, gbc.sp());
        EXPECT(0x76ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0364
        gbc.setState(0x6460, 0x2ce5, 0xce00, 0x1fdb, 0xde72, 0x29a7, 0x1, 0x0);
        gbc.writeMem(0x6460, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2ce5, gbc.sp());
        EXPECT(0x6462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0365
        gbc.setState(0x7acd, 0x5bcf, 0x73c0, 0x3649, 0x6a1b, 0x187d, 0x1, 0x0);
        gbc.writeMem(0x7acd, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5bcf, gbc.sp());
        EXPECT(0x7acf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0367
        gbc.setState(0x8b2d, 0x9f70, 0xa940, 0x7cb9, 0x1647, 0xb681, 0x0, 0x1);
        gbc.writeMem(0x8b2d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9f70, gbc.sp());
        EXPECT(0x8b2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b2d));
        EXPECT(0x1d, gbc.readMem(0x8b2e));
        // CB 1D 0368
        gbc.setState(0xdc84, 0xe4a8, 0x2280, 0x2bbb, 0xd2ba, 0x758, 0x1, 0x1);
        gbc.writeMem(0xdc84, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe4a8, gbc.sp());
        EXPECT(0xdc86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc84));
        EXPECT(0x1d, gbc.readMem(0xdc85));
        // CB 1D 0369
        gbc.setState(0xa201, 0xff35, 0x8d10, 0xb1a6, 0x7210, 0xbd50, 0x1, 0x0);
        gbc.writeMem(0xa201, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xff35, gbc.sp());
        EXPECT(0xa203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa201));
        EXPECT(0x1d, gbc.readMem(0xa202));
        // CB 1D 036A
        gbc.setState(0x88e8, 0xa11c, 0x80d0, 0x1932, 0x8d58, 0xbc2f, 0x1, 0x0);
        gbc.writeMem(0x88e8, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa11c, gbc.sp());
        EXPECT(0x88ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88e8));
        EXPECT(0x1d, gbc.readMem(0x88e9));
        // CB 1D 036B
        gbc.setState(0x696b, 0xc90c, 0x3a20, 0x83be, 0x668, 0x7fa4, 0x1, 0x0);
        gbc.writeMem(0x696b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc90c, gbc.sp());
        EXPECT(0x696d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 036C
        gbc.setState(0xe53c, 0x5c2a, 0x4320, 0x52e4, 0x52f4, 0x2f9a, 0x0, 0x0);
        gbc.writeMem(0xe53c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5c2a, gbc.sp());
        EXPECT(0xe53e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe53c));
        EXPECT(0x1d, gbc.readMem(0xe53d));
        // CB 1D 036D
        gbc.setState(0xeca5, 0x6702, 0xa020, 0xd669, 0x706e, 0xf176, 0x0, 0x0);
        gbc.writeMem(0xeca5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6702, gbc.sp());
        EXPECT(0xeca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeca5));
        EXPECT(0x1d, gbc.readMem(0xeca6));
        // CB 1D 036E
        gbc.setState(0x5d91, 0x3395, 0xad40, 0x6d00, 0xa38, 0xc258, 0x0, 0x0);
        gbc.writeMem(0x5d91, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3395, gbc.sp());
        EXPECT(0x5d93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 036F
        gbc.setState(0x519d, 0x83b4, 0x4ad0, 0x1ab4, 0x1815, 0x49fd, 0x0, 0x0);
        gbc.writeMem(0x519d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x83b4, gbc.sp());
        EXPECT(0x519f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0370
        gbc.setState(0x8170, 0x9587, 0x6d0, 0x6f91, 0xa5b5, 0x85a0, 0x1, 0x1);
        gbc.writeMem(0x8170, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9587, gbc.sp());
        EXPECT(0x8172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8170));
        EXPECT(0x1d, gbc.readMem(0x8171));
        // CB 1D 0371
        gbc.setState(0x365d, 0x410e, 0xc650, 0x73aa, 0x5f01, 0xd94, 0x1, 0x1);
        gbc.writeMem(0x365d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x410e, gbc.sp());
        EXPECT(0x365f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0372
        gbc.setState(0x929c, 0x6100, 0xaf0, 0x2a31, 0x481b, 0xccea, 0x1, 0x0);
        gbc.writeMem(0x929c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6100, gbc.sp());
        EXPECT(0x929e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x929c));
        EXPECT(0x1d, gbc.readMem(0x929d));
        // CB 1D 0373
        gbc.setState(0x3c64, 0x577c, 0xbd40, 0xef3d, 0x430, 0x346d, 0x0, 0x0);
        gbc.writeMem(0x3c64, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x577c, gbc.sp());
        EXPECT(0x3c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0374
        gbc.setState(0x63a7, 0xee2a, 0xfb00, 0x72b5, 0xd1ab, 0xe11a, 0x1, 0x0);
        gbc.writeMem(0x63a7, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xee2a, gbc.sp());
        EXPECT(0x63a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0375
        gbc.setState(0xeed0, 0xd658, 0x460, 0x51bd, 0x684, 0x314c, 0x0, 0x0);
        gbc.writeMem(0xeed0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd658, gbc.sp());
        EXPECT(0xeed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed0));
        EXPECT(0x1d, gbc.readMem(0xeed1));
        // CB 1D 0376
        gbc.setState(0x36d1, 0x28e, 0x6070, 0x77d0, 0xd8d8, 0x823c, 0x0, 0x0);
        gbc.writeMem(0x36d1, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x28e, gbc.sp());
        EXPECT(0x36d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0377
        gbc.setState(0x67a5, 0xdf9b, 0x2710, 0xace3, 0xfcf3, 0x932d, 0x0, 0x1);
        gbc.writeMem(0x67a5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xdf9b, gbc.sp());
        EXPECT(0x67a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0378
        gbc.setState(0x592b, 0x94a6, 0x31e0, 0x27c9, 0x4455, 0xd7ba, 0x1, 0x1);
        gbc.writeMem(0x592b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x94a6, gbc.sp());
        EXPECT(0x592d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0379
        gbc.setState(0x7cf4, 0xa3d9, 0x7e60, 0x4fe1, 0x734f, 0xefe0, 0x1, 0x0);
        gbc.writeMem(0x7cf4, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa3d9, gbc.sp());
        EXPECT(0x7cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 037A
        gbc.setState(0x128a, 0xbb66, 0x1270, 0xd57b, 0x64e7, 0xb222, 0x1, 0x0);
        gbc.writeMem(0x128a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbb66, gbc.sp());
        EXPECT(0x128c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 037B
        gbc.setState(0x19fe, 0x1e1, 0xd2f0, 0xcdb7, 0x97cd, 0xa78a, 0x1, 0x1);
        gbc.writeMem(0x19fe, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1e1, gbc.sp());
        EXPECT(0x1a00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 037C
        gbc.setState(0xd9ca, 0xfa1d, 0x9450, 0xf940, 0xc568, 0xdb00, 0x1, 0x0);
        gbc.writeMem(0xd9ca, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xfa1d, gbc.sp());
        EXPECT(0xd9cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ca));
        EXPECT(0x1d, gbc.readMem(0xd9cb));
        // CB 1D 037D
        gbc.setState(0xc44a, 0xbffa, 0x9130, 0xfb18, 0x1e26, 0x642b, 0x1, 0x1);
        gbc.writeMem(0xc44a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbffa, gbc.sp());
        EXPECT(0xc44c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc44a));
        EXPECT(0x1d, gbc.readMem(0xc44b));
        // CB 1D 037E
        gbc.setState(0xa58d, 0x6101, 0xfef0, 0xb7d2, 0x48f9, 0xa9f6, 0x1, 0x1);
        gbc.writeMem(0xa58d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6101, gbc.sp());
        EXPECT(0xa58f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa58d));
        EXPECT(0x1d, gbc.readMem(0xa58e));
        // CB 1D 037F
        gbc.setState(0x54c3, 0xb37, 0xdb80, 0x56e1, 0xc1a0, 0x9c91, 0x1, 0x1);
        gbc.writeMem(0x54c3, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb37, gbc.sp());
        EXPECT(0x54c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0380
        gbc.setState(0xb193, 0x8671, 0xea30, 0x491b, 0x6ee5, 0x25b, 0x0, 0x1);
        gbc.writeMem(0xb193, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8671, gbc.sp());
        EXPECT(0xb195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb193));
        EXPECT(0x1d, gbc.readMem(0xb194));
        // CB 1D 0381
        gbc.setState(0xbe63, 0x22c5, 0x18d0, 0x1386, 0xfff, 0x948, 0x1, 0x1);
        gbc.writeMem(0xbe63, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x22c5, gbc.sp());
        EXPECT(0xbe65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe63));
        EXPECT(0x1d, gbc.readMem(0xbe64));
        // CB 1D 0382
        gbc.setState(0xadd2, 0x165a, 0x9810, 0x88d0, 0xb518, 0x923b, 0x0, 0x0);
        gbc.writeMem(0xadd2, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x165a, gbc.sp());
        EXPECT(0xadd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadd2));
        EXPECT(0x1d, gbc.readMem(0xadd3));
        // CB 1D 0383
        gbc.setState(0x2939, 0x5e05, 0xf320, 0x7d7c, 0xeea4, 0x3f86, 0x0, 0x1);
        gbc.writeMem(0x2939, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5e05, gbc.sp());
        EXPECT(0x293b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0384
        gbc.setState(0x5d1c, 0x9c38, 0x8510, 0xdbc, 0x3ef3, 0x3d50, 0x1, 0x0);
        gbc.writeMem(0x5d1c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9c38, gbc.sp());
        EXPECT(0x5d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0385
        gbc.setState(0x31cd, 0x442e, 0xe7f0, 0x3630, 0x6aac, 0x236, 0x1, 0x0);
        gbc.writeMem(0x31cd, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x442e, gbc.sp());
        EXPECT(0x31cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0387
        gbc.setState(0xa922, 0x2355, 0x3390, 0xda17, 0xe2e0, 0xdec6, 0x1, 0x1);
        gbc.writeMem(0xa922, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2355, gbc.sp());
        EXPECT(0xa924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa922));
        EXPECT(0x1d, gbc.readMem(0xa923));
        // CB 1D 0388
        gbc.setState(0x73b3, 0x1ad9, 0xd820, 0x826b, 0x4a03, 0xcad8, 0x1, 0x1);
        gbc.writeMem(0x73b3, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1ad9, gbc.sp());
        EXPECT(0x73b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0389
        gbc.setState(0x80f7, 0x9edd, 0x99b0, 0x86cf, 0x540a, 0x6132, 0x0, 0x1);
        gbc.writeMem(0x80f7, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9edd, gbc.sp());
        EXPECT(0x80f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f7));
        EXPECT(0x1d, gbc.readMem(0x80f8));
        // CB 1D 038A
        gbc.setState(0x5a39, 0x75ae, 0x9220, 0xc537, 0x1b66, 0xb4bb, 0x1, 0x0);
        gbc.writeMem(0x5a39, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x75ae, gbc.sp());
        EXPECT(0x5a3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 038B
        gbc.setState(0x4f4e, 0x93db, 0x5b00, 0x626a, 0x1f7, 0x4f98, 0x1, 0x1);
        gbc.writeMem(0x4f4e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x93db, gbc.sp());
        EXPECT(0x4f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 038C
        gbc.setState(0x1acf, 0xca40, 0xd210, 0xea95, 0xf6dc, 0x65cf, 0x1, 0x1);
        gbc.writeMem(0x1acf, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xca40, gbc.sp());
        EXPECT(0x1ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 038D
        gbc.setState(0xc1bd, 0x8519, 0xb300, 0xe958, 0x508c, 0x7080, 0x0, 0x1);
        gbc.writeMem(0xc1bd, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8519, gbc.sp());
        EXPECT(0xc1bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1bd));
        EXPECT(0x1d, gbc.readMem(0xc1be));
        // CB 1D 038E
        gbc.setState(0x470c, 0xca26, 0x5190, 0xb9db, 0xca7b, 0x276e, 0x1, 0x1);
        gbc.writeMem(0x470c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xca26, gbc.sp());
        EXPECT(0x470e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 038F
        gbc.setState(0x6ea4, 0x3308, 0xa80, 0xbf6b, 0x2810, 0xc5a6, 0x0, 0x1);
        gbc.writeMem(0x6ea4, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3308, gbc.sp());
        EXPECT(0x6ea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0390
        gbc.setState(0x3378, 0xb01e, 0x9810, 0xea58, 0x922f, 0x5449, 0x1, 0x1);
        gbc.writeMem(0x3378, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb01e, gbc.sp());
        EXPECT(0x337a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 0391
        gbc.setState(0xb21a, 0xb72, 0xfaa0, 0xdd70, 0x9f45, 0x2989, 0x1, 0x1);
        gbc.writeMem(0xb21a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb72, gbc.sp());
        EXPECT(0xb21c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb21a));
        EXPECT(0x1d, gbc.readMem(0xb21b));
        // CB 1D 0392
        gbc.setState(0xa6e4, 0xa745, 0x95a0, 0xa80, 0x57d4, 0xac37, 0x0, 0x1);
        gbc.writeMem(0xa6e4, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa745, gbc.sp());
        EXPECT(0xa6e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e4));
        EXPECT(0x1d, gbc.readMem(0xa6e5));
        // CB 1D 0393
        gbc.setState(0x5505, 0xa7ef, 0x4b0, 0x4e5b, 0x449b, 0x17a0, 0x1, 0x1);
        gbc.writeMem(0x5505, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa7ef, gbc.sp());
        EXPECT(0x5507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0394
        gbc.setState(0xa87a, 0x6b2c, 0x7f10, 0x9430, 0xfc88, 0x3376, 0x0, 0x1);
        gbc.writeMem(0xa87a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6b2c, gbc.sp());
        EXPECT(0xa87c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa87a));
        EXPECT(0x1d, gbc.readMem(0xa87b));
        // CB 1D 0395
        gbc.setState(0x2e38, 0x962c, 0xa750, 0x4e27, 0xa79, 0x4ea2, 0x0, 0x1);
        gbc.writeMem(0x2e38, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x962c, gbc.sp());
        EXPECT(0x2e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0396
        gbc.setState(0x8385, 0x4dcb, 0xff60, 0x6d20, 0xa624, 0xc5c5, 0x0, 0x0);
        gbc.writeMem(0x8385, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4dcb, gbc.sp());
        EXPECT(0x8387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8385));
        EXPECT(0x1d, gbc.readMem(0x8386));
        // CB 1D 0397
        gbc.setState(0xe50d, 0xa62f, 0xe060, 0x7bb6, 0x9d5f, 0x299f, 0x1, 0x0);
        gbc.writeMem(0xe50d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa62f, gbc.sp());
        EXPECT(0xe50f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe50d));
        EXPECT(0x1d, gbc.readMem(0xe50e));
        // CB 1D 0398
        gbc.setState(0x7218, 0xef2c, 0x63c0, 0xb1c9, 0x49e6, 0x6a98, 0x1, 0x0);
        gbc.writeMem(0x7218, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xef2c, gbc.sp());
        EXPECT(0x721a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 0399
        gbc.setState(0xd97d, 0x5b62, 0x1f50, 0x29, 0xb3bf, 0x4fa3, 0x1, 0x0);
        gbc.writeMem(0xd97d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5b62, gbc.sp());
        EXPECT(0xd97f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd97d));
        EXPECT(0x1d, gbc.readMem(0xd97e));
        // CB 1D 039B
        gbc.setState(0x5bcd, 0x45d4, 0xa120, 0xeba1, 0xbe9d, 0x54b, 0x1, 0x0);
        gbc.writeMem(0x5bcd, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x45d4, gbc.sp());
        EXPECT(0x5bcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 039C
        gbc.setState(0xd938, 0x1cf1, 0x12e0, 0x5b73, 0x6f, 0xd500, 0x1, 0x1);
        gbc.writeMem(0xd938, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1cf1, gbc.sp());
        EXPECT(0xd93a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd938));
        EXPECT(0x1d, gbc.readMem(0xd939));
        // CB 1D 039D
        gbc.setState(0xbb86, 0x3f8d, 0xc930, 0x1ab7, 0xc9ec, 0x16fb, 0x1, 0x0);
        gbc.writeMem(0xbb86, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3f8d, gbc.sp());
        EXPECT(0xbb88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb86));
        EXPECT(0x1d, gbc.readMem(0xbb87));
        // CB 1D 039E
        gbc.setState(0x4d00, 0xa74c, 0xb410, 0x1783, 0x251b, 0x2046, 0x0, 0x1);
        gbc.writeMem(0x4d00, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa74c, gbc.sp());
        EXPECT(0x4d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 039F
        gbc.setState(0x7473, 0xfab3, 0x42d0, 0x2ef, 0xbb60, 0x4dfb, 0x0, 0x0);
        gbc.writeMem(0x7473, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xfab3, gbc.sp());
        EXPECT(0x7475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 03A0
        gbc.setState(0xef35, 0xbacc, 0x3da0, 0x43a, 0x6227, 0x4018, 0x1, 0x0);
        gbc.writeMem(0xef35, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbacc, gbc.sp());
        EXPECT(0xef37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef35));
        EXPECT(0x1d, gbc.readMem(0xef36));
        // CB 1D 03A1
        gbc.setState(0x2c4f, 0xbed5, 0xbbb0, 0x14d4, 0xd3d6, 0xc378, 0x1, 0x0);
        gbc.writeMem(0x2c4f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbed5, gbc.sp());
        EXPECT(0x2c51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 03A2
        gbc.setState(0x321e, 0xfb2c, 0x5030, 0x211, 0x178f, 0xc0d, 0x0, 0x0);
        gbc.writeMem(0x321e, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xfb2c, gbc.sp());
        EXPECT(0x3220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 03A3
        gbc.setState(0xbbfe, 0xd7d8, 0x49b0, 0x85d2, 0x1228, 0xd5d, 0x0, 0x0);
        gbc.writeMem(0xbbfe, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd7d8, gbc.sp());
        EXPECT(0xbc00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbfe));
        EXPECT(0x1d, gbc.readMem(0xbbff));
        // CB 1D 03A4
        gbc.setState(0x3162, 0xab4e, 0xd390, 0xd79c, 0xb40, 0xe565, 0x1, 0x0);
        gbc.writeMem(0x3162, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xab4e, gbc.sp());
        EXPECT(0x3164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 03A5
        gbc.setState(0x87b8, 0x32ab, 0x4d20, 0x128b, 0xb5ba, 0xa8dc, 0x0, 0x0);
        gbc.writeMem(0x87b8, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x32ab, gbc.sp());
        EXPECT(0x87ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87b8));
        EXPECT(0x1d, gbc.readMem(0x87b9));
        // CB 1D 03A6
        gbc.setState(0x3c0d, 0x2b9e, 0x8220, 0x3744, 0x12, 0x4e1f, 0x0, 0x0);
        gbc.writeMem(0x3c0d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2b9e, gbc.sp());
        EXPECT(0x3c0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 03A8
        gbc.setState(0x689d, 0xb49, 0x390, 0x200d, 0x9297, 0x838c, 0x0, 0x1);
        gbc.writeMem(0x689d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb49, gbc.sp());
        EXPECT(0x689f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 03A9
        gbc.setState(0xb5c3, 0x9603, 0x1bb0, 0x4006, 0xb822, 0xfb35, 0x1, 0x1);
        gbc.writeMem(0xb5c3, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9603, gbc.sp());
        EXPECT(0xb5c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c3));
        EXPECT(0x1d, gbc.readMem(0xb5c4));
        // CB 1D 03AA
        gbc.setState(0x4fc, 0x6c4c, 0xcb30, 0x95f7, 0x522e, 0x2a4, 0x0, 0x0);
        gbc.writeMem(0x4fc, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6c4c, gbc.sp());
        EXPECT(0x4fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 03AB
        gbc.setState(0xcf84, 0x13d7, 0xd720, 0x8a22, 0x2bc2, 0xaf1c, 0x0, 0x1);
        gbc.writeMem(0xcf84, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x13d7, gbc.sp());
        EXPECT(0xcf86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf84));
        EXPECT(0x1d, gbc.readMem(0xcf85));
        // CB 1D 03AD
        gbc.setState(0xe420, 0x190c, 0xb730, 0x93b6, 0x2d6e, 0xde5b, 0x1, 0x0);
        gbc.writeMem(0xe420, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x190c, gbc.sp());
        EXPECT(0xe422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe420));
        EXPECT(0x1d, gbc.readMem(0xe421));
        // CB 1D 03AE
        gbc.setState(0x43db, 0x8061, 0xdaa0, 0xaf0d, 0x9e3, 0xec97, 0x1, 0x1);
        gbc.writeMem(0x43db, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8061, gbc.sp());
        EXPECT(0x43dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 03B1
        gbc.setState(0x9a78, 0x32d0, 0xd880, 0x3579, 0x3b62, 0x47fa, 0x0, 0x1);
        gbc.writeMem(0x9a78, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x32d0, gbc.sp());
        EXPECT(0x9a7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a78));
        EXPECT(0x1d, gbc.readMem(0x9a79));
        // CB 1D 03B2
        gbc.setState(0x4b44, 0xfb1d, 0xb250, 0x4daf, 0x3739, 0x8928, 0x0, 0x1);
        gbc.writeMem(0x4b44, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfb1d, gbc.sp());
        EXPECT(0x4b46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 03B4
        gbc.setState(0xc725, 0x6deb, 0xe030, 0xf3c1, 0x5f7c, 0x4251, 0x0, 0x1);
        gbc.writeMem(0xc725, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6deb, gbc.sp());
        EXPECT(0xc727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc725));
        EXPECT(0x1d, gbc.readMem(0xc726));
        // CB 1D 03B5
        gbc.setState(0x88ae, 0x22b7, 0x5190, 0x3392, 0x9943, 0xc18d, 0x0, 0x0);
        gbc.writeMem(0x88ae, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x22b7, gbc.sp());
        EXPECT(0x88b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ae));
        EXPECT(0x1d, gbc.readMem(0x88af));
        // CB 1D 03B6
        gbc.setState(0x2a6f, 0xe515, 0x3590, 0x26e4, 0x620b, 0xb3c2, 0x1, 0x0);
        gbc.writeMem(0x2a6f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe515, gbc.sp());
        EXPECT(0x2a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 03B7
        gbc.setState(0xd80d, 0x2045, 0x2510, 0xbecc, 0xb7ed, 0x30b1, 0x1, 0x1);
        gbc.writeMem(0xd80d, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2045, gbc.sp());
        EXPECT(0xd80f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd80d));
        EXPECT(0x1d, gbc.readMem(0xd80e));
        // CB 1D 03B9
        gbc.setState(0xbf83, 0x8f4c, 0x9580, 0xb9c1, 0xba61, 0x2277, 0x1, 0x1);
        gbc.writeMem(0xbf83, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8f4c, gbc.sp());
        EXPECT(0xbf85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf83));
        EXPECT(0x1d, gbc.readMem(0xbf84));
        // CB 1D 03BA
        gbc.setState(0x31aa, 0x9d38, 0xe180, 0xdf31, 0x87fe, 0xbad5, 0x0, 0x0);
        gbc.writeMem(0x31aa, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9d38, gbc.sp());
        EXPECT(0x31ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 03BB
        gbc.setState(0x8286, 0x80cb, 0x3790, 0x3735, 0xd982, 0xb45c, 0x1, 0x0);
        gbc.writeMem(0x8286, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x80cb, gbc.sp());
        EXPECT(0x8288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8286));
        EXPECT(0x1d, gbc.readMem(0x8287));
        // CB 1D 03BC
        gbc.setState(0x7625, 0x3b78, 0x89e0, 0x3489, 0x93dc, 0x1877, 0x0, 0x1);
        gbc.writeMem(0x7625, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3b78, gbc.sp());
        EXPECT(0x7627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 03BD
        gbc.setState(0xd0cd, 0x7991, 0x36c0, 0x7b2, 0xcb74, 0xbe92, 0x1, 0x1);
        gbc.writeMem(0xd0cd, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7991, gbc.sp());
        EXPECT(0xd0cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0cd));
        EXPECT(0x1d, gbc.readMem(0xd0ce));
        // CB 1D 03BE
        gbc.setState(0x195c, 0x4497, 0xbc50, 0x962, 0x26a5, 0x59b5, 0x1, 0x0);
        gbc.writeMem(0x195c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4497, gbc.sp());
        EXPECT(0x195e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 03BF
        gbc.setState(0x71ba, 0x1917, 0x23a0, 0x88a5, 0xb6f8, 0x998f, 0x0, 0x0);
        gbc.writeMem(0x71ba, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1917, gbc.sp());
        EXPECT(0x71bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 03C0
        gbc.setState(0x4cfc, 0x3512, 0x5ff0, 0x2067, 0x2f8c, 0x3631, 0x0, 0x0);
        gbc.writeMem(0x4cfc, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3512, gbc.sp());
        EXPECT(0x4cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 03C1
        gbc.setState(0x15c, 0x2a05, 0xd830, 0xe886, 0xfeb2, 0x5fb3, 0x0, 0x1);
        gbc.writeMem(0x15c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2a05, gbc.sp());
        EXPECT(0x15e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 03C3
        gbc.setState(0xb18a, 0xc06a, 0xdf00, 0x4ce8, 0x33cc, 0x406c, 0x0, 0x1);
        gbc.writeMem(0xb18a, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc06a, gbc.sp());
        EXPECT(0xb18c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb18a));
        EXPECT(0x1d, gbc.readMem(0xb18b));
        // CB 1D 03C4
        gbc.setState(0x58a9, 0x3122, 0xcf00, 0x3cfa, 0x5a74, 0x40ca, 0x1, 0x0);
        gbc.writeMem(0x58a9, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3122, gbc.sp());
        EXPECT(0x58ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 03C5
        gbc.setState(0xae8b, 0x8893, 0xc560, 0x3050, 0xec4, 0xf2be, 0x1, 0x1);
        gbc.writeMem(0xae8b, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8893, gbc.sp());
        EXPECT(0xae8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae8b));
        EXPECT(0x1d, gbc.readMem(0xae8c));
        // CB 1D 03C6
        gbc.setState(0x87f5, 0xf6cd, 0x9920, 0x12c1, 0x84eb, 0xad71, 0x1, 0x0);
        gbc.writeMem(0x87f5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf6cd, gbc.sp());
        EXPECT(0x87f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f5));
        EXPECT(0x1d, gbc.readMem(0x87f6));
        // CB 1D 03C7
        gbc.setState(0x9151, 0x9821, 0x3aa0, 0x8886, 0x5a73, 0x4128, 0x0, 0x0);
        gbc.writeMem(0x9151, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9821, gbc.sp());
        EXPECT(0x9153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9151));
        EXPECT(0x1d, gbc.readMem(0x9152));
        // CB 1D 03C8
        gbc.setState(0xb4fc, 0xe70, 0x1140, 0xfbfc, 0xd097, 0x5bec, 0x0, 0x1);
        gbc.writeMem(0xb4fc, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe70, gbc.sp());
        EXPECT(0xb4fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4fc));
        EXPECT(0x1d, gbc.readMem(0xb4fd));
        // CB 1D 03C9
        gbc.setState(0x1b58, 0x3a6, 0xe4a0, 0xd769, 0xd386, 0x5f66, 0x1, 0x0);
        gbc.writeMem(0x1b58, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3a6, gbc.sp());
        EXPECT(0x1b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 03CA
        gbc.setState(0xa09c, 0x7841, 0x93e0, 0x6371, 0xf253, 0x7e59, 0x0, 0x1);
        gbc.writeMem(0xa09c, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7841, gbc.sp());
        EXPECT(0xa09e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa09c));
        EXPECT(0x1d, gbc.readMem(0xa09d));
        // CB 1D 03CB
        gbc.setState(0xc473, 0xf380, 0xd980, 0xea2d, 0x4e46, 0x55d2, 0x1, 0x1);
        gbc.writeMem(0xc473, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf380, gbc.sp());
        EXPECT(0xc475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc473));
        EXPECT(0x1d, gbc.readMem(0xc474));
        // CB 1D 03CC
        gbc.setState(0x98bd, 0xa6d8, 0x63d0, 0x150, 0x4475, 0x2260, 0x1, 0x1);
        gbc.writeMem(0x98bd, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa6d8, gbc.sp());
        EXPECT(0x98bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98bd));
        EXPECT(0x1d, gbc.readMem(0x98be));
        // CB 1D 03CD
        gbc.setState(0x73c6, 0x14b9, 0x4d90, 0x7df4, 0x1b0c, 0x1d6e, 0x0, 0x0);
        gbc.writeMem(0x73c6, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x14b9, gbc.sp());
        EXPECT(0x73c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 03CE
        gbc.setState(0x9de6, 0xab26, 0x5e0, 0x264c, 0xf17a, 0x8f70, 0x0, 0x1);
        gbc.writeMem(0x9de6, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xab26, gbc.sp());
        EXPECT(0x9de8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de6));
        EXPECT(0x1d, gbc.readMem(0x9de7));
        // CB 1D 03CF
        gbc.setState(0x6309, 0x9c6d, 0xff20, 0xb1c3, 0x8c14, 0x17dd, 0x1, 0x0);
        gbc.writeMem(0x6309, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9c6d, gbc.sp());
        EXPECT(0x630b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 03D1
        gbc.setState(0xd8fc, 0xaa13, 0x56e0, 0x92aa, 0xdaee, 0xa7a4, 0x0, 0x1);
        gbc.writeMem(0xd8fc, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xaa13, gbc.sp());
        EXPECT(0xd8fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8fc));
        EXPECT(0x1d, gbc.readMem(0xd8fd));
        // CB 1D 03D2
        gbc.setState(0xb0c4, 0xfdd7, 0x9210, 0x9b44, 0x3361, 0x7867, 0x1, 0x0);
        gbc.writeMem(0xb0c4, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xfdd7, gbc.sp());
        EXPECT(0xb0c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0c4));
        EXPECT(0x1d, gbc.readMem(0xb0c5));
        // CB 1D 03D3
        gbc.setState(0xbba3, 0x6749, 0x6220, 0xc938, 0x582d, 0x6c4a, 0x1, 0x1);
        gbc.writeMem(0xbba3, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6749, gbc.sp());
        EXPECT(0xbba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbba3));
        EXPECT(0x1d, gbc.readMem(0xbba4));
        // CB 1D 03D4
        gbc.setState(0x43da, 0x5d7, 0x4470, 0xe2b, 0x59fd, 0x21ae, 0x0, 0x1);
        gbc.writeMem(0x43da, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5d7, gbc.sp());
        EXPECT(0x43dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 03D5
        gbc.setState(0x5127, 0x39b5, 0x420, 0x4a91, 0x6b5d, 0x67e4, 0x1, 0x1);
        gbc.writeMem(0x5127, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x39b5, gbc.sp());
        EXPECT(0x5129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 03D6
        gbc.setState(0x913f, 0xb4aa, 0x4f80, 0xa42c, 0x3cb9, 0xe5ff, 0x1, 0x1);
        gbc.writeMem(0x913f, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb4aa, gbc.sp());
        EXPECT(0x9141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x913f));
        EXPECT(0x1d, gbc.readMem(0x9140));
        // CB 1D 03D7
        gbc.setState(0x89a5, 0xf426, 0xa320, 0x7675, 0xf0f5, 0xc7b6, 0x1, 0x0);
        gbc.writeMem(0x89a5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf426, gbc.sp());
        EXPECT(0x89a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a5));
        EXPECT(0x1d, gbc.readMem(0x89a6));
        // CB 1D 03D9
        gbc.setState(0x1877, 0xd448, 0x2d20, 0xa6a8, 0x2a07, 0x92e2, 0x1, 0x0);
        gbc.writeMem(0x1877, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd448, gbc.sp());
        EXPECT(0x1879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 03DA
        gbc.setState(0xfd8, 0x869c, 0xd910, 0xdbe3, 0xf343, 0xc607, 0x1, 0x1);
        gbc.writeMem(0xfd8, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x869c, gbc.sp());
        EXPECT(0xfda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 03DB
        gbc.setState(0xda54, 0x70a2, 0xa670, 0x1b77, 0xd879, 0xf25e, 0x1, 0x0);
        gbc.writeMem(0xda54, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x70a2, gbc.sp());
        EXPECT(0xda56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda54));
        EXPECT(0x1d, gbc.readMem(0xda55));
        // CB 1D 03DC
        gbc.setState(0xd7d3, 0xa59c, 0x15c0, 0x97e2, 0xe5ea, 0xe2eb, 0x0, 0x0);
        gbc.writeMem(0xd7d3, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa59c, gbc.sp());
        EXPECT(0xd7d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d3));
        EXPECT(0x1d, gbc.readMem(0xd7d4));
        // CB 1D 03DD
        gbc.setState(0x4957, 0xeee4, 0xd470, 0xf5b9, 0xd838, 0x5655, 0x0, 0x0);
        gbc.writeMem(0x4957, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xeee4, gbc.sp());
        EXPECT(0x4959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 03DE
        gbc.setState(0x8bf8, 0xb4bd, 0x3210, 0xc444, 0x969a, 0x7edb, 0x1, 0x1);
        gbc.writeMem(0x8bf8, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb4bd, gbc.sp());
        EXPECT(0x8bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf8));
        EXPECT(0x1d, gbc.readMem(0x8bf9));
        // CB 1D 03DF
        gbc.setState(0x6a99, 0x304b, 0x3620, 0x6959, 0xcc64, 0xdbe4, 0x0, 0x1);
        gbc.writeMem(0x6a99, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x304b, gbc.sp());
        EXPECT(0x6a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 03E0
        gbc.setState(0x5e32, 0x954c, 0xe710, 0xd61b, 0x82b9, 0x83c2, 0x0, 0x1);
        gbc.writeMem(0x5e32, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x954c, gbc.sp());
        EXPECT(0x5e34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1D 03E1
        gbc.setState(0xb910, 0x1fdc, 0xfe10, 0xd89b, 0x5bd, 0x532, 0x1, 0x1);
        gbc.writeMem(0xb910, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1fdc, gbc.sp());
        EXPECT(0xb912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb910));
        EXPECT(0x1d, gbc.readMem(0xb911));
        // CB 1D 03E2
        gbc.setState(0x9253, 0xca56, 0xa40, 0xa2e, 0xc8bc, 0xed98, 0x0, 0x1);
        gbc.writeMem(0x9253, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xca56, gbc.sp());
        EXPECT(0x9255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9253));
        EXPECT(0x1d, gbc.readMem(0x9254));
        // CB 1D 03E3
        gbc.setState(0x9dc5, 0x4077, 0x6920, 0x5e83, 0x6401, 0x637e, 0x0, 0x0);
        gbc.writeMem(0x9dc5, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4077, gbc.sp());
        EXPECT(0x9dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc5));
        EXPECT(0x1d, gbc.readMem(0x9dc6));
        // CB 1D 03E4
        gbc.setState(0xd4a7, 0x65e8, 0xecc0, 0x1578, 0xa6c0, 0xa13c, 0x0, 0x1);
        gbc.writeMem(0xd4a7, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x65e8, gbc.sp());
        EXPECT(0xd4a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4a7));
        EXPECT(0x1d, gbc.readMem(0xd4a8));
        // CB 1D 03E5
        gbc.setState(0xadd0, 0x7f65, 0x13f0, 0xc930, 0xbd0, 0x23f6, 0x1, 0x1);
        gbc.writeMem(0xadd0, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7f65, gbc.sp());
        EXPECT(0xadd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadd0));
        EXPECT(0x1d, gbc.readMem(0xadd1));
        // CB 1D 03E6
        gbc.setState(0x6bef, 0xd34d, 0x2b80, 0xa8c4, 0xf45, 0xee07, 0x1, 0x1);
        gbc.writeMem(0x6bef, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd34d, gbc.sp());
        EXPECT(0x6bf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1D 03E7
        gbc.setState(0xb395, 0x3777, 0x3450, 0x92bc, 0x3280, 0xa773, 0x1, 0x0);
        gbc.writeMem(0xb395, { 0xcb, 0x1d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3777, gbc.sp());
        EXPECT(0xb397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb395));
        EXPECT(0x1d, gbc.readMem(0xb396));
    }
