    TEST(gbcemu, opcode_4c) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 4C 0000
        gbc.setState(0xd0fb, 0x16ed, 0x3d80, 0xe7f0, 0x79ad, 0xb2f7, 0x1, 0x1);
        gbc.writeMem(0xd0fb, { 0x4c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x16ed, gbc.sp());
        EXPECT(0xd0fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd0fb));
        // 4C 0001
        gbc.setState(0x520a, 0x97e3, 0x1930, 0xc654, 0xfada, 0xecee, 0x0, 0x0);
        gbc.writeMem(0x520a, { 0x4c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x97e3, gbc.sp());
        EXPECT(0x520b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0002
        gbc.setState(0xbc2d, 0xc621, 0x3de0, 0x5094, 0x40a2, 0x4241, 0x0, 0x0);
        gbc.writeMem(0xbc2d, { 0x4c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc621, gbc.sp());
        EXPECT(0xbc2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbc2d));
        // 4C 0003
        gbc.setState(0x2bf6, 0xcfdb, 0x5710, 0xf83d, 0x28cb, 0x60f3, 0x0, 0x1);
        gbc.writeMem(0x2bf6, { 0x4c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xcfdb, gbc.sp());
        EXPECT(0x2bf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0004
        gbc.setState(0x1511, 0xf750, 0x24b0, 0x7500, 0xa3ca, 0x4bc3, 0x1, 0x0);
        gbc.writeMem(0x1511, { 0x4c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf750, gbc.sp());
        EXPECT(0x1512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0005
        gbc.setState(0x2573, 0x1fbb, 0x3240, 0x44a8, 0xf0cd, 0x6525, 0x0, 0x0);
        gbc.writeMem(0x2573, { 0x4c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1fbb, gbc.sp());
        EXPECT(0x2574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0006
        gbc.setState(0x6e3b, 0x6f31, 0x4180, 0xd69e, 0xb231, 0x609f, 0x0, 0x1);
        gbc.writeMem(0x6e3b, { 0x4c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6f31, gbc.sp());
        EXPECT(0x6e3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0007
        gbc.setState(0x3938, 0x5c68, 0x20a0, 0x30f6, 0x1d4e, 0x2ca4, 0x1, 0x1);
        gbc.writeMem(0x3938, { 0x4c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5c68, gbc.sp());
        EXPECT(0x3939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0008
        gbc.setState(0xc0b0, 0xe1eb, 0x2e80, 0xe418, 0x55cd, 0x3916, 0x0, 0x1);
        gbc.writeMem(0xc0b0, { 0x4c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe1eb, gbc.sp());
        EXPECT(0xc0b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc0b0));
        // 4C 0009
        gbc.setState(0xe8ee, 0xb510, 0x4a10, 0xd6cb, 0x71ab, 0x7c21, 0x1, 0x1);
        gbc.writeMem(0xe8ee, { 0x4c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb510, gbc.sp());
        EXPECT(0xe8ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe8ee));
        // 4C 000A
        gbc.setState(0x4155, 0x2ae, 0x8b00, 0x96ba, 0x427b, 0xa7bb, 0x1, 0x1);
        gbc.writeMem(0x4155, { 0x4c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2ae, gbc.sp());
        EXPECT(0x4156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 000B
        gbc.setState(0x4ad1, 0xbeb8, 0xa530, 0xedc2, 0x9de, 0x6363, 0x0, 0x0);
        gbc.writeMem(0x4ad1, { 0x4c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbeb8, gbc.sp());
        EXPECT(0x4ad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 000C
        gbc.setState(0x14ff, 0x88e9, 0xe60, 0x5a4f, 0xe864, 0x504f, 0x1, 0x0);
        gbc.writeMem(0x14ff, { 0x4c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x88e9, gbc.sp());
        EXPECT(0x1500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 000D
        gbc.setState(0xb9b9, 0xfb02, 0x11f0, 0xfabb, 0x4b2f, 0x12e7, 0x1, 0x0);
        gbc.writeMem(0xb9b9, { 0x4c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfb02, gbc.sp());
        EXPECT(0xb9ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb9b9));
        // 4C 000E
        gbc.setState(0xd439, 0x17f9, 0x2bd0, 0x54bf, 0x92f5, 0xb242, 0x0, 0x0);
        gbc.writeMem(0xd439, { 0x4c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x17f9, gbc.sp());
        EXPECT(0xd43a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd439));
        // 4C 000F
        gbc.setState(0x510b, 0x4d59, 0xc170, 0x6d69, 0xec8c, 0xff0, 0x1, 0x1);
        gbc.writeMem(0x510b, { 0x4c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4d59, gbc.sp());
        EXPECT(0x510c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0010
        gbc.setState(0xee93, 0x12cb, 0x9190, 0x4601, 0x8634, 0x1ef7, 0x1, 0x1);
        gbc.writeMem(0xee93, { 0x4c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x12cb, gbc.sp());
        EXPECT(0xee94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xee93));
        // 4C 0011
        gbc.setState(0x23a0, 0x3f76, 0x7160, 0xe50, 0x7595, 0xc3ec, 0x0, 0x0);
        gbc.writeMem(0x23a0, { 0x4c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3f76, gbc.sp());
        EXPECT(0x23a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0012
        gbc.setState(0x4af2, 0xef01, 0xdb80, 0xb5, 0xbb3d, 0xd9d8, 0x1, 0x0);
        gbc.writeMem(0x4af2, { 0x4c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xef01, gbc.sp());
        EXPECT(0x4af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0013
        gbc.setState(0xd95b, 0xbaac, 0x1260, 0xb294, 0x4d29, 0x3351, 0x0, 0x1);
        gbc.writeMem(0xd95b, { 0x4c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbaac, gbc.sp());
        EXPECT(0xd95c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd95b));
        // 4C 0014
        gbc.setState(0x2736, 0x73d8, 0x53c0, 0xa9f7, 0x1dec, 0xc4bf, 0x1, 0x1);
        gbc.writeMem(0x2736, { 0x4c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x73d8, gbc.sp());
        EXPECT(0x2737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0015
        gbc.setState(0xe557, 0xb1bf, 0xb150, 0xdcf9, 0xbd6d, 0xf25, 0x1, 0x0);
        gbc.writeMem(0xe557, { 0x4c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb1bf, gbc.sp());
        EXPECT(0xe558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe557));
        // 4C 0016
        gbc.setState(0x7c75, 0xff2d, 0xbde0, 0xd0c6, 0x739, 0xea46, 0x0, 0x0);
        gbc.writeMem(0x7c75, { 0x4c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xff2d, gbc.sp());
        EXPECT(0x7c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0017
        gbc.setState(0xda00, 0x1039, 0x1af0, 0x3b6f, 0x720a, 0x9dc1, 0x0, 0x1);
        gbc.writeMem(0xda00, { 0x4c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1039, gbc.sp());
        EXPECT(0xda01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xda00));
        // 4C 0018
        gbc.setState(0x38ea, 0xae13, 0x2b30, 0x58dc, 0x3770, 0x2ab6, 0x0, 0x0);
        gbc.writeMem(0x38ea, { 0x4c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xae13, gbc.sp());
        EXPECT(0x38eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 001A
        gbc.setState(0xd98e, 0x9c3b, 0x3d10, 0xfcb3, 0x6f37, 0xd810, 0x1, 0x0);
        gbc.writeMem(0xd98e, { 0x4c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9c3b, gbc.sp());
        EXPECT(0xd98f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd98e));
        // 4C 001B
        gbc.setState(0x8f98, 0x5bc9, 0x7650, 0xfa97, 0xb243, 0xbe17, 0x0, 0x1);
        gbc.writeMem(0x8f98, { 0x4c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5bc9, gbc.sp());
        EXPECT(0x8f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8f98));
        // 4C 001C
        gbc.setState(0xd02f, 0x4dca, 0x7e40, 0x9c83, 0x623b, 0x54b1, 0x1, 0x1);
        gbc.writeMem(0xd02f, { 0x4c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4dca, gbc.sp());
        EXPECT(0xd030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd02f));
        // 4C 001D
        gbc.setState(0xa468, 0xfa00, 0x55c0, 0xf9d8, 0x74bf, 0xfb11, 0x0, 0x0);
        gbc.writeMem(0xa468, { 0x4c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfa00, gbc.sp());
        EXPECT(0xa469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa468));
        // 4C 001E
        gbc.setState(0x38ba, 0xf285, 0x63e0, 0x220f, 0x574f, 0xb398, 0x1, 0x0);
        gbc.writeMem(0x38ba, { 0x4c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf285, gbc.sp());
        EXPECT(0x38bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 001F
        gbc.setState(0x6c64, 0x6ffd, 0x91b0, 0xfac7, 0x2b2e, 0x93d8, 0x1, 0x0);
        gbc.writeMem(0x6c64, { 0x4c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6ffd, gbc.sp());
        EXPECT(0x6c65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0020
        gbc.setState(0xd00f, 0x9611, 0xef60, 0xedfe, 0xac61, 0x257e, 0x0, 0x0);
        gbc.writeMem(0xd00f, { 0x4c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9611, gbc.sp());
        EXPECT(0xd010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd00f));
        // 4C 0021
        gbc.setState(0xa6e6, 0xd08d, 0xd820, 0x3ea0, 0xfae6, 0x6d9d, 0x1, 0x1);
        gbc.writeMem(0xa6e6, { 0x4c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd08d, gbc.sp());
        EXPECT(0xa6e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa6e6));
        // 4C 0022
        gbc.setState(0xd7ec, 0xf579, 0x7700, 0x211, 0xe187, 0x9d3, 0x0, 0x0);
        gbc.writeMem(0xd7ec, { 0x4c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf579, gbc.sp());
        EXPECT(0xd7ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd7ec));
        // 4C 0023
        gbc.setState(0x1141, 0x5fc3, 0xfe30, 0x5b1e, 0x8d4a, 0xd33f, 0x0, 0x0);
        gbc.writeMem(0x1141, { 0x4c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5fc3, gbc.sp());
        EXPECT(0x1142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0024
        gbc.setState(0x762d, 0x6a77, 0x8c70, 0xa1ff, 0x9cb2, 0x3a5, 0x1, 0x0);
        gbc.writeMem(0x762d, { 0x4c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6a77, gbc.sp());
        EXPECT(0x762e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0025
        gbc.setState(0x6531, 0xfef2, 0x97f0, 0x1b22, 0x1877, 0xbce5, 0x1, 0x1);
        gbc.writeMem(0x6531, { 0x4c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xfef2, gbc.sp());
        EXPECT(0x6532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0026
        gbc.setState(0x8e95, 0x6a9, 0xd7e0, 0x2dd7, 0xbabd, 0x96fb, 0x0, 0x1);
        gbc.writeMem(0x8e95, { 0x4c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6a9, gbc.sp());
        EXPECT(0x8e96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8e95));
        // 4C 0027
        gbc.setState(0x2437, 0x6a1e, 0x75e0, 0x9641, 0xaa80, 0xf9c4, 0x1, 0x1);
        gbc.writeMem(0x2437, { 0x4c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6a1e, gbc.sp());
        EXPECT(0x2438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0028
        gbc.setState(0xabeb, 0xffd1, 0x4df0, 0x3442, 0xd75e, 0xa76b, 0x0, 0x1);
        gbc.writeMem(0xabeb, { 0x4c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xffd1, gbc.sp());
        EXPECT(0xabec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xabeb));
        // 4C 0029
        gbc.setState(0xc318, 0x1769, 0xc940, 0x850, 0xfb58, 0x8607, 0x1, 0x1);
        gbc.writeMem(0xc318, { 0x4c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1769, gbc.sp());
        EXPECT(0xc319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc318));
        // 4C 002A
        gbc.setState(0xdad0, 0x6535, 0x20b0, 0x7985, 0x4e1c, 0x7525, 0x0, 0x1);
        gbc.writeMem(0xdad0, { 0x4c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6535, gbc.sp());
        EXPECT(0xdad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdad0));
        // 4C 002B
        gbc.setState(0xcef6, 0x1d04, 0x2fc0, 0x1837, 0x8ccb, 0xdb80, 0x1, 0x0);
        gbc.writeMem(0xcef6, { 0x4c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1d04, gbc.sp());
        EXPECT(0xcef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcef6));
        // 4C 002C
        gbc.setState(0xd2a8, 0x33b7, 0x82b0, 0xa44a, 0x1e8b, 0x12dd, 0x1, 0x0);
        gbc.writeMem(0xd2a8, { 0x4c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x33b7, gbc.sp());
        EXPECT(0xd2a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd2a8));
        // 4C 002D
        gbc.setState(0xabf0, 0xfa18, 0x7bd0, 0xc6df, 0x18, 0x53a0, 0x1, 0x0);
        gbc.writeMem(0xabf0, { 0x4c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfa18, gbc.sp());
        EXPECT(0xabf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xabf0));
        // 4C 002E
        gbc.setState(0x3c, 0x3a15, 0x78b0, 0x26b1, 0x7dd8, 0x3915, 0x1, 0x1);
        gbc.writeMem(0x3c, { 0x4c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3a15, gbc.sp());
        EXPECT(0x3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 002F
        gbc.setState(0xd9ea, 0xfdf4, 0xecc0, 0x198c, 0x2441, 0xad19, 0x0, 0x1);
        gbc.writeMem(0xd9ea, { 0x4c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfdf4, gbc.sp());
        EXPECT(0xd9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd9ea));
        // 4C 0031
        gbc.setState(0x7f12, 0x93c7, 0x2410, 0x9ff2, 0xdcdc, 0xbfcf, 0x0, 0x1);
        gbc.writeMem(0x7f12, { 0x4c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x93c7, gbc.sp());
        EXPECT(0x7f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0032
        gbc.setState(0xd781, 0xd98f, 0x720, 0xdc96, 0x6d1, 0xefb0, 0x1, 0x1);
        gbc.writeMem(0xd781, { 0x4c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd98f, gbc.sp());
        EXPECT(0xd782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd781));
        // 4C 0033
        gbc.setState(0xc751, 0x70a8, 0xf380, 0xfd1c, 0x7b7e, 0x1957, 0x1, 0x1);
        gbc.writeMem(0xc751, { 0x4c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x70a8, gbc.sp());
        EXPECT(0xc752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc751));
        // 4C 0034
        gbc.setState(0x9890, 0x7da7, 0xfdb0, 0x487e, 0x8af9, 0xd5af, 0x1, 0x0);
        gbc.writeMem(0x9890, { 0x4c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7da7, gbc.sp());
        EXPECT(0x9891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9890));
        // 4C 0035
        gbc.setState(0x9377, 0xfafd, 0x1e70, 0x6f91, 0xaa01, 0x2df7, 0x1, 0x1);
        gbc.writeMem(0x9377, { 0x4c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfafd, gbc.sp());
        EXPECT(0x9378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9377));
        // 4C 0036
        gbc.setState(0x2557, 0x660f, 0x320, 0x9a77, 0x42da, 0x3e64, 0x0, 0x1);
        gbc.writeMem(0x2557, { 0x4c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x660f, gbc.sp());
        EXPECT(0x2558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0037
        gbc.setState(0x2d85, 0xa036, 0xf180, 0xe0f0, 0x9acb, 0xc140, 0x1, 0x0);
        gbc.writeMem(0x2d85, { 0x4c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa036, gbc.sp());
        EXPECT(0x2d86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0038
        gbc.setState(0x421a, 0x6ae7, 0xca0, 0xbd84, 0x1920, 0x92d8, 0x0, 0x1);
        gbc.writeMem(0x421a, { 0x4c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6ae7, gbc.sp());
        EXPECT(0x421b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 003A
        gbc.setState(0x1f95, 0x6511, 0x47a0, 0xbf8d, 0x3896, 0x8ce6, 0x0, 0x0);
        gbc.writeMem(0x1f95, { 0x4c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6511, gbc.sp());
        EXPECT(0x1f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 003B
        gbc.setState(0x8243, 0xbc43, 0x9570, 0xb37f, 0x2859, 0x7965, 0x1, 0x0);
        gbc.writeMem(0x8243, { 0x4c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbc43, gbc.sp());
        EXPECT(0x8244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8243));
        // 4C 003C
        gbc.setState(0x25e, 0x69ea, 0x5680, 0xe1e9, 0x7f, 0x55a, 0x0, 0x0);
        gbc.writeMem(0x25e, { 0x4c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x69ea, gbc.sp());
        EXPECT(0x25f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 003D
        gbc.setState(0x1d2d, 0x6c8b, 0x3960, 0x73fa, 0x13ad, 0xca29, 0x0, 0x1);
        gbc.writeMem(0x1d2d, { 0x4c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6c8b, gbc.sp());
        EXPECT(0x1d2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 003E
        gbc.setState(0xfad, 0x2421, 0xb480, 0x891d, 0xc1a6, 0x7350, 0x0, 0x1);
        gbc.writeMem(0xfad, { 0x4c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2421, gbc.sp());
        EXPECT(0xfae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 003F
        gbc.setState(0x418, 0xf7b7, 0xc460, 0x82cd, 0x3ed8, 0x6a46, 0x1, 0x0);
        gbc.writeMem(0x418, { 0x4c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf7b7, gbc.sp());
        EXPECT(0x419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0040
        gbc.setState(0x54f4, 0xdba9, 0xc3d0, 0x163b, 0xc9f8, 0x6bf2, 0x1, 0x0);
        gbc.writeMem(0x54f4, { 0x4c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xdba9, gbc.sp());
        EXPECT(0x54f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0041
        gbc.setState(0xcfe5, 0x22af, 0xfbf0, 0xce71, 0x668, 0xfbae, 0x1, 0x1);
        gbc.writeMem(0xcfe5, { 0x4c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x22af, gbc.sp());
        EXPECT(0xcfe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcfe5));
        // 4C 0042
        gbc.setState(0xb780, 0xda49, 0x8850, 0x7aac, 0x940a, 0x6a23, 0x0, 0x0);
        gbc.writeMem(0xb780, { 0x4c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xda49, gbc.sp());
        EXPECT(0xb781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb780));
        // 4C 0043
        gbc.setState(0x75b7, 0x3890, 0x7180, 0x5aad, 0x6c7a, 0xd2a3, 0x0, 0x0);
        gbc.writeMem(0x75b7, { 0x4c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3890, gbc.sp());
        EXPECT(0x75b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0044
        gbc.setState(0x8d9e, 0x7df9, 0xef0, 0x66dd, 0xf187, 0x34b2, 0x0, 0x1);
        gbc.writeMem(0x8d9e, { 0x4c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7df9, gbc.sp());
        EXPECT(0x8d9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8d9e));
        // 4C 0045
        gbc.setState(0xe8bd, 0x9277, 0xf480, 0x2a6b, 0x23e9, 0x9619, 0x0, 0x0);
        gbc.writeMem(0xe8bd, { 0x4c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9277, gbc.sp());
        EXPECT(0xe8be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe8bd));
        // 4C 0046
        gbc.setState(0xcaca, 0xe09d, 0xad80, 0x66b7, 0x2e06, 0xc90d, 0x0, 0x0);
        gbc.writeMem(0xcaca, { 0x4c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe09d, gbc.sp());
        EXPECT(0xcacb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcaca));
        // 4C 0047
        gbc.setState(0xbdce, 0x65d6, 0x9170, 0xc788, 0x7f31, 0xe90, 0x0, 0x0);
        gbc.writeMem(0xbdce, { 0x4c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x65d6, gbc.sp());
        EXPECT(0xbdcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbdce));
        // 4C 0048
        gbc.setState(0xc484, 0xc318, 0x2270, 0x9f20, 0x9ad8, 0x8b9b, 0x0, 0x0);
        gbc.writeMem(0xc484, { 0x4c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc318, gbc.sp());
        EXPECT(0xc485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc484));
        // 4C 0049
        gbc.setState(0x34da, 0x35bc, 0x6cc0, 0xc12f, 0x9ac, 0x5be1, 0x1, 0x0);
        gbc.writeMem(0x34da, { 0x4c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x35bc, gbc.sp());
        EXPECT(0x34db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 004A
        gbc.setState(0xf3, 0x20e1, 0x8030, 0xd2c5, 0x5666, 0xf902, 0x1, 0x0);
        gbc.writeMem(0xf3, { 0x4c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x20e1, gbc.sp());
        EXPECT(0xf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 004B
        gbc.setState(0xeb80, 0x6600, 0x5210, 0x9046, 0xb590, 0xb488, 0x0, 0x0);
        gbc.writeMem(0xeb80, { 0x4c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6600, gbc.sp());
        EXPECT(0xeb81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xeb80));
        // 4C 004D
        gbc.setState(0x5d71, 0x8498, 0x2ef0, 0x5b60, 0xe1c8, 0x924d, 0x1, 0x1);
        gbc.writeMem(0x5d71, { 0x4c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8498, gbc.sp());
        EXPECT(0x5d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 004E
        gbc.setState(0x432f, 0x63eb, 0xa780, 0xc4be, 0x754d, 0xd95c, 0x1, 0x0);
        gbc.writeMem(0x432f, { 0x4c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x63eb, gbc.sp());
        EXPECT(0x4330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 004F
        gbc.setState(0x8bfe, 0x23d5, 0xf420, 0xabfa, 0xaf3, 0x671b, 0x0, 0x1);
        gbc.writeMem(0x8bfe, { 0x4c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x23d5, gbc.sp());
        EXPECT(0x8bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8bfe));
        // 4C 0050
        gbc.setState(0x8600, 0xc314, 0xde90, 0xc5bc, 0xebd1, 0xa1fa, 0x0, 0x0);
        gbc.writeMem(0x8600, { 0x4c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc314, gbc.sp());
        EXPECT(0x8601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8600));
        // 4C 0051
        gbc.setState(0x9913, 0x956, 0x91a0, 0xbf2e, 0x8ced, 0xe273, 0x0, 0x0);
        gbc.writeMem(0x9913, { 0x4c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x956, gbc.sp());
        EXPECT(0x9914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9913));
        // 4C 0052
        gbc.setState(0x1744, 0xd6f8, 0xc780, 0xdd33, 0x4952, 0xbf75, 0x1, 0x1);
        gbc.writeMem(0x1744, { 0x4c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd6f8, gbc.sp());
        EXPECT(0x1745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0053
        gbc.setState(0xa726, 0x3670, 0xbac0, 0xfd9a, 0xd6d0, 0x253, 0x1, 0x1);
        gbc.writeMem(0xa726, { 0x4c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3670, gbc.sp());
        EXPECT(0xa727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa726));
        // 4C 0054
        gbc.setState(0xac9f, 0xf966, 0x8710, 0xa922, 0x3747, 0xc36c, 0x0, 0x0);
        gbc.writeMem(0xac9f, { 0x4c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf966, gbc.sp());
        EXPECT(0xaca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xac9f));
        // 4C 0055
        gbc.setState(0xcf4d, 0xb4a4, 0x2a40, 0xc8ed, 0x2d08, 0x49ae, 0x0, 0x1);
        gbc.writeMem(0xcf4d, { 0x4c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb4a4, gbc.sp());
        EXPECT(0xcf4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcf4d));
        // 4C 0056
        gbc.setState(0xe9b8, 0x3d79, 0x2670, 0xf881, 0xe492, 0xb995, 0x1, 0x0);
        gbc.writeMem(0xe9b8, { 0x4c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3d79, gbc.sp());
        EXPECT(0xe9b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe9b8));
        // 4C 0057
        gbc.setState(0xc7d6, 0x32c2, 0x8140, 0x460b, 0x5551, 0x83b, 0x1, 0x1);
        gbc.writeMem(0xc7d6, { 0x4c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x32c2, gbc.sp());
        EXPECT(0xc7d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc7d6));
        // 4C 0059
        gbc.setState(0x17bd, 0x214a, 0x190, 0xe2a8, 0x4f9c, 0xaf42, 0x1, 0x0);
        gbc.writeMem(0x17bd, { 0x4c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x214a, gbc.sp());
        EXPECT(0x17be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 005A
        gbc.setState(0xb7b1, 0x58e8, 0x5200, 0x50b0, 0xfcd9, 0x2b9b, 0x1, 0x1);
        gbc.writeMem(0xb7b1, { 0x4c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x58e8, gbc.sp());
        EXPECT(0xb7b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb7b1));
        // 4C 005B
        gbc.setState(0xcdd3, 0xd9da, 0xb3f0, 0x7095, 0x619f, 0xabba, 0x0, 0x0);
        gbc.writeMem(0xcdd3, { 0x4c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd9da, gbc.sp());
        EXPECT(0xcdd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcdd3));
        // 4C 005C
        gbc.setState(0x1a43, 0x9b0c, 0x8b50, 0xe55, 0xe5d5, 0xacef, 0x0, 0x0);
        gbc.writeMem(0x1a43, { 0x4c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9b0c, gbc.sp());
        EXPECT(0x1a44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 005D
        gbc.setState(0x93fa, 0x435f, 0x46a0, 0xe207, 0xd2b5, 0x61e9, 0x1, 0x1);
        gbc.writeMem(0x93fa, { 0x4c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x435f, gbc.sp());
        EXPECT(0x93fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x93fa));
        // 4C 005E
        gbc.setState(0x9ffa, 0x9a17, 0xaa80, 0x69ef, 0x16cd, 0x44da, 0x1, 0x1);
        gbc.writeMem(0x9ffa, { 0x4c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9a17, gbc.sp());
        EXPECT(0x9ffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9ffa));
        // 4C 005F
        gbc.setState(0xc248, 0x6a5c, 0x5e20, 0x462f, 0x8b20, 0x614a, 0x0, 0x0);
        gbc.writeMem(0xc248, { 0x4c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6a5c, gbc.sp());
        EXPECT(0xc249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc248));
        // 4C 0060
        gbc.setState(0x49f6, 0xfd70, 0x9910, 0x74ec, 0xf12c, 0x3b0f, 0x1, 0x1);
        gbc.writeMem(0x49f6, { 0x4c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfd70, gbc.sp());
        EXPECT(0x49f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0061
        gbc.setState(0x2b3d, 0xb280, 0x5b20, 0xf8e, 0x71e, 0x7538, 0x0, 0x1);
        gbc.writeMem(0x2b3d, { 0x4c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb280, gbc.sp());
        EXPECT(0x2b3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0062
        gbc.setState(0xef40, 0xa19e, 0xcdc0, 0x6b9f, 0xef05, 0x2ca8, 0x1, 0x1);
        gbc.writeMem(0xef40, { 0x4c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa19e, gbc.sp());
        EXPECT(0xef41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xef40));
        // 4C 0063
        gbc.setState(0x73bc, 0x7eb7, 0xb1e0, 0xa32f, 0x6e4d, 0x4783, 0x1, 0x0);
        gbc.writeMem(0x73bc, { 0x4c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7eb7, gbc.sp());
        EXPECT(0x73bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0064
        gbc.setState(0xafb, 0x1b3, 0xe9c0, 0x3838, 0xcc39, 0xe674, 0x1, 0x1);
        gbc.writeMem(0xafb, { 0x4c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1b3, gbc.sp());
        EXPECT(0xafc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0065
        gbc.setState(0xc343, 0x48a3, 0x9cc0, 0x7dfb, 0xe9f, 0xa27, 0x1, 0x0);
        gbc.writeMem(0xc343, { 0x4c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x48a3, gbc.sp());
        EXPECT(0xc344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc343));
        // 4C 0066
        gbc.setState(0xe99c, 0x7a0b, 0x8250, 0x4198, 0x65b3, 0x95fe, 0x0, 0x0);
        gbc.writeMem(0xe99c, { 0x4c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7a0b, gbc.sp());
        EXPECT(0xe99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe99c));
        // 4C 0067
        gbc.setState(0x1834, 0x7174, 0xb300, 0x79e5, 0xa97c, 0x8e1d, 0x1, 0x0);
        gbc.writeMem(0x1834, { 0x4c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7174, gbc.sp());
        EXPECT(0x1835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0068
        gbc.setState(0x184e, 0x3134, 0x3a80, 0xdac7, 0x5fe, 0xc224, 0x0, 0x0);
        gbc.writeMem(0x184e, { 0x4c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3134, gbc.sp());
        EXPECT(0x184f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0069
        gbc.setState(0xa194, 0x8d3, 0xf200, 0xf661, 0x15bb, 0x8a86, 0x1, 0x0);
        gbc.writeMem(0xa194, { 0x4c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8d3, gbc.sp());
        EXPECT(0xa195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa194));
        // 4C 006A
        gbc.setState(0x1a12, 0x931a, 0xe20, 0x3b86, 0x9463, 0x87da, 0x1, 0x1);
        gbc.writeMem(0x1a12, { 0x4c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x931a, gbc.sp());
        EXPECT(0x1a13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 006B
        gbc.setState(0x5ba0, 0x3ab7, 0xad10, 0x17d2, 0xc647, 0x4e4c, 0x0, 0x0);
        gbc.writeMem(0x5ba0, { 0x4c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3ab7, gbc.sp());
        EXPECT(0x5ba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 006D
        gbc.setState(0xea8c, 0xa912, 0x4fb0, 0x44cc, 0xab07, 0x3ec9, 0x0, 0x0);
        gbc.writeMem(0xea8c, { 0x4c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa912, gbc.sp());
        EXPECT(0xea8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xea8c));
        // 4C 006E
        gbc.setState(0xa596, 0x1cb4, 0x7170, 0x2993, 0x86c3, 0xbb88, 0x0, 0x0);
        gbc.writeMem(0xa596, { 0x4c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1cb4, gbc.sp());
        EXPECT(0xa597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa596));
        // 4C 006F
        gbc.setState(0x1e09, 0xb45f, 0x2d70, 0x9f7, 0xcfdf, 0x5839, 0x0, 0x0);
        gbc.writeMem(0x1e09, { 0x4c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb45f, gbc.sp());
        EXPECT(0x1e0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0070
        gbc.setState(0x80aa, 0xea8f, 0xd230, 0xf51a, 0x9ff0, 0xbaeb, 0x0, 0x1);
        gbc.writeMem(0x80aa, { 0x4c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xea8f, gbc.sp());
        EXPECT(0x80ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x80aa));
        // 4C 0071
        gbc.setState(0xdd62, 0x1d72, 0x7820, 0x652c, 0x3ec7, 0x74f0, 0x0, 0x1);
        gbc.writeMem(0xdd62, { 0x4c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1d72, gbc.sp());
        EXPECT(0xdd63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdd62));
        // 4C 0072
        gbc.setState(0xf73, 0xc6a, 0x2e80, 0xdf7f, 0x8ff5, 0x28a0, 0x1, 0x0);
        gbc.writeMem(0xf73, { 0x4c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc6a, gbc.sp());
        EXPECT(0xf74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0073
        gbc.setState(0x45ff, 0x3270, 0x9190, 0xdedc, 0x5f56, 0x6fad, 0x0, 0x0);
        gbc.writeMem(0x45ff, { 0x4c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3270, gbc.sp());
        EXPECT(0x4600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0074
        gbc.setState(0xaf83, 0xb92f, 0x680, 0x9ff8, 0xeeea, 0xd4b4, 0x0, 0x1);
        gbc.writeMem(0xaf83, { 0x4c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb92f, gbc.sp());
        EXPECT(0xaf84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xaf83));
        // 4C 0075
        gbc.setState(0xdfb6, 0x678d, 0x4e20, 0xf239, 0xe593, 0xb9b4, 0x1, 0x0);
        gbc.writeMem(0xdfb6, { 0x4c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x678d, gbc.sp());
        EXPECT(0xdfb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdfb6));
        // 4C 0076
        gbc.setState(0x9e3e, 0x8636, 0xe350, 0x4f10, 0x7e3c, 0x4dd6, 0x0, 0x1);
        gbc.writeMem(0x9e3e, { 0x4c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8636, gbc.sp());
        EXPECT(0x9e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9e3e));
        // 4C 0077
        gbc.setState(0x60d5, 0x86c9, 0x4000, 0x18c7, 0xed5c, 0x38d2, 0x0, 0x1);
        gbc.writeMem(0x60d5, { 0x4c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x86c9, gbc.sp());
        EXPECT(0x60d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0078
        gbc.setState(0x3509, 0x98f5, 0xe170, 0xfa99, 0x9b43, 0xda96, 0x1, 0x1);
        gbc.writeMem(0x3509, { 0x4c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x98f5, gbc.sp());
        EXPECT(0x350a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0079
        gbc.setState(0x7b73, 0xea3e, 0x1d00, 0x1760, 0x39a, 0xe23a, 0x0, 0x0);
        gbc.writeMem(0x7b73, { 0x4c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xea3e, gbc.sp());
        EXPECT(0x7b74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 007B
        gbc.setState(0xe040, 0x8501, 0x68d0, 0x911d, 0xb22a, 0x196, 0x0, 0x0);
        gbc.writeMem(0xe040, { 0x4c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8501, gbc.sp());
        EXPECT(0xe041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe040));
        // 4C 007C
        gbc.setState(0xd19, 0xceef, 0x7c90, 0x1ed1, 0x8e13, 0xa170, 0x1, 0x0);
        gbc.writeMem(0xd19, { 0x4c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xceef, gbc.sp());
        EXPECT(0xd1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 007D
        gbc.setState(0x8d5c, 0x3733, 0x89d0, 0x82ad, 0x5ab, 0xe31e, 0x1, 0x0);
        gbc.writeMem(0x8d5c, { 0x4c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3733, gbc.sp());
        EXPECT(0x8d5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8d5c));
        // 4C 007E
        gbc.setState(0x24fe, 0xa47d, 0x6f90, 0xc69b, 0x7287, 0x3ac4, 0x1, 0x0);
        gbc.writeMem(0x24fe, { 0x4c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa47d, gbc.sp());
        EXPECT(0x24ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 007F
        gbc.setState(0xb346, 0x39a1, 0x9ad0, 0x2e84, 0xa21, 0x62e8, 0x0, 0x0);
        gbc.writeMem(0xb346, { 0x4c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x39a1, gbc.sp());
        EXPECT(0xb347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb346));
        // 4C 0080
        gbc.setState(0xbdba, 0x46f8, 0xba90, 0x5f04, 0x558c, 0x4c73, 0x1, 0x1);
        gbc.writeMem(0xbdba, { 0x4c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x46f8, gbc.sp());
        EXPECT(0xbdbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbdba));
        // 4C 0081
        gbc.setState(0x21ef, 0x4ae5, 0xc4b0, 0xbb63, 0x2e5d, 0x8260, 0x0, 0x1);
        gbc.writeMem(0x21ef, { 0x4c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4ae5, gbc.sp());
        EXPECT(0x21f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0082
        gbc.setState(0x733e, 0x8709, 0x8290, 0xe6d3, 0xf2eb, 0x12f0, 0x0, 0x0);
        gbc.writeMem(0x733e, { 0x4c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8709, gbc.sp());
        EXPECT(0x733f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0083
        gbc.setState(0x5e13, 0xc068, 0xc8e0, 0x2138, 0x68ab, 0xa1fd, 0x0, 0x1);
        gbc.writeMem(0x5e13, { 0x4c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc068, gbc.sp());
        EXPECT(0x5e14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0084
        gbc.setState(0xe7c9, 0x3e6, 0x6b00, 0xc182, 0x3b5b, 0x41cf, 0x0, 0x0);
        gbc.writeMem(0xe7c9, { 0x4c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3e6, gbc.sp());
        EXPECT(0xe7ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe7c9));
        // 4C 0085
        gbc.setState(0x14a5, 0x4c62, 0x90d0, 0x2c29, 0x1f77, 0x78c5, 0x1, 0x0);
        gbc.writeMem(0x14a5, { 0x4c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4c62, gbc.sp());
        EXPECT(0x14a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0086
        gbc.setState(0xe024, 0xd123, 0x4e40, 0x6ed8, 0xe638, 0x77f4, 0x0, 0x0);
        gbc.writeMem(0xe024, { 0x4c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd123, gbc.sp());
        EXPECT(0xe025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe024));
        // 4C 0088
        gbc.setState(0xd35d, 0x6f4e, 0xd9e0, 0xa52d, 0x4b28, 0xeea0, 0x1, 0x0);
        gbc.writeMem(0xd35d, { 0x4c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6f4e, gbc.sp());
        EXPECT(0xd35e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd35d));
        // 4C 0089
        gbc.setState(0xe8c8, 0xf4ce, 0x1400, 0x9f39, 0xc2f2, 0x36b0, 0x0, 0x1);
        gbc.writeMem(0xe8c8, { 0x4c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf4ce, gbc.sp());
        EXPECT(0xe8c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe8c8));
        // 4C 008A
        gbc.setState(0x53a6, 0xe885, 0x6430, 0x7bb2, 0x4ee1, 0x6730, 0x1, 0x0);
        gbc.writeMem(0x53a6, { 0x4c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe885, gbc.sp());
        EXPECT(0x53a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 008B
        gbc.setState(0xee76, 0x9066, 0x2d40, 0xd416, 0x9283, 0xb433, 0x1, 0x1);
        gbc.writeMem(0xee76, { 0x4c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9066, gbc.sp());
        EXPECT(0xee77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xee76));
        // 4C 008C
        gbc.setState(0x24d3, 0x46d4, 0xcd30, 0xdb3, 0x9461, 0xe6d2, 0x0, 0x1);
        gbc.writeMem(0x24d3, { 0x4c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x46d4, gbc.sp());
        EXPECT(0x24d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 008D
        gbc.setState(0x3fce, 0x88fb, 0xc550, 0x8f50, 0x1e26, 0xa79b, 0x1, 0x1);
        gbc.writeMem(0x3fce, { 0x4c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x88fb, gbc.sp());
        EXPECT(0x3fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 008E
        gbc.setState(0xdbe7, 0x3823, 0xaf70, 0x2df0, 0xa04e, 0xa55e, 0x0, 0x1);
        gbc.writeMem(0xdbe7, { 0x4c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3823, gbc.sp());
        EXPECT(0xdbe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdbe7));
        // 4C 008F
        gbc.setState(0x186b, 0x4383, 0xf0d0, 0xb378, 0xabf4, 0x4400, 0x0, 0x0);
        gbc.writeMem(0x186b, { 0x4c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4383, gbc.sp());
        EXPECT(0x186c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0090
        gbc.setState(0x8669, 0xfad1, 0x8800, 0xdd2d, 0xeb7e, 0xb42b, 0x1, 0x0);
        gbc.writeMem(0x8669, { 0x4c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfad1, gbc.sp());
        EXPECT(0x866a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8669));
        // 4C 0091
        gbc.setState(0x7390, 0x87ef, 0x9d70, 0xc0db, 0x600f, 0xdb80, 0x0, 0x1);
        gbc.writeMem(0x7390, { 0x4c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x87ef, gbc.sp());
        EXPECT(0x7391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0092
        gbc.setState(0xdc8d, 0x282b, 0x92c0, 0xd93c, 0xbf4f, 0x4045, 0x1, 0x1);
        gbc.writeMem(0xdc8d, { 0x4c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x282b, gbc.sp());
        EXPECT(0xdc8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdc8d));
        // 4C 0093
        gbc.setState(0xa421, 0xa47c, 0x2da0, 0x3fd6, 0x9b3b, 0xcfe7, 0x1, 0x0);
        gbc.writeMem(0xa421, { 0x4c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa47c, gbc.sp());
        EXPECT(0xa422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa421));
        // 4C 0094
        gbc.setState(0xec5a, 0x8b34, 0x8620, 0x5b43, 0xec26, 0xa112, 0x1, 0x0);
        gbc.writeMem(0xec5a, { 0x4c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8b34, gbc.sp());
        EXPECT(0xec5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xec5a));
        // 4C 0095
        gbc.setState(0x65f1, 0x6f37, 0x3a0, 0x50b6, 0x413b, 0x920, 0x1, 0x0);
        gbc.writeMem(0x65f1, { 0x4c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6f37, gbc.sp());
        EXPECT(0x65f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0097
        gbc.setState(0x6212, 0x4260, 0x1b60, 0x59f7, 0xeac2, 0x7646, 0x0, 0x0);
        gbc.writeMem(0x6212, { 0x4c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4260, gbc.sp());
        EXPECT(0x6213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0098
        gbc.setState(0xcc8c, 0xdce7, 0xa130, 0x6891, 0xafe8, 0xdd6c, 0x1, 0x0);
        gbc.writeMem(0xcc8c, { 0x4c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdce7, gbc.sp());
        EXPECT(0xcc8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcc8c));
        // 4C 0099
        gbc.setState(0x7b15, 0x36aa, 0x510, 0xe596, 0xc2bb, 0x8c6, 0x0, 0x1);
        gbc.writeMem(0x7b15, { 0x4c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x36aa, gbc.sp());
        EXPECT(0x7b16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 009A
        gbc.setState(0x1980, 0xc315, 0xde30, 0x9eae, 0xa4af, 0x90df, 0x1, 0x0);
        gbc.writeMem(0x1980, { 0x4c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc315, gbc.sp());
        EXPECT(0x1981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 009B
        gbc.setState(0xdae0, 0x5c03, 0xed0, 0x7776, 0xa753, 0x32ec, 0x1, 0x1);
        gbc.writeMem(0xdae0, { 0x4c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5c03, gbc.sp());
        EXPECT(0xdae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdae0));
        // 4C 009C
        gbc.setState(0x3430, 0xca9a, 0x7b90, 0xb6e5, 0xbc1, 0xbe43, 0x1, 0x0);
        gbc.writeMem(0x3430, { 0x4c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xca9a, gbc.sp());
        EXPECT(0x3431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 009D
        gbc.setState(0x993d, 0x75c8, 0x69d0, 0x5107, 0x3418, 0x94c5, 0x0, 0x1);
        gbc.writeMem(0x993d, { 0x4c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x75c8, gbc.sp());
        EXPECT(0x993e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x993d));
        // 4C 009E
        gbc.setState(0x400a, 0x5a68, 0xb7b0, 0x44ed, 0x9ad0, 0x325a, 0x1, 0x1);
        gbc.writeMem(0x400a, { 0x4c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5a68, gbc.sp());
        EXPECT(0x400b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 009F
        gbc.setState(0xa45b, 0xcccf, 0xd970, 0xcbf4, 0x11bb, 0xee42, 0x0, 0x1);
        gbc.writeMem(0xa45b, { 0x4c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xcccf, gbc.sp());
        EXPECT(0xa45c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa45b));
        // 4C 00A0
        gbc.setState(0x3014, 0x65a5, 0xb2d0, 0x8bd6, 0xf6e4, 0x9b8, 0x1, 0x1);
        gbc.writeMem(0x3014, { 0x4c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x65a5, gbc.sp());
        EXPECT(0x3015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 00A1
        gbc.setState(0xb6af, 0x8255, 0xd790, 0x7717, 0xf784, 0x2fe6, 0x0, 0x1);
        gbc.writeMem(0xb6af, { 0x4c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8255, gbc.sp());
        EXPECT(0xb6b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb6af));
        // 4C 00A2
        gbc.setState(0x811b, 0x8268, 0x4240, 0xbfca, 0x1727, 0x548c, 0x1, 0x1);
        gbc.writeMem(0x811b, { 0x4c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8268, gbc.sp());
        EXPECT(0x811c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x811b));
        // 4C 00A3
        gbc.setState(0xa8ec, 0xcb1f, 0x6c0, 0xf1ee, 0x6e03, 0xb23a, 0x1, 0x0);
        gbc.writeMem(0xa8ec, { 0x4c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcb1f, gbc.sp());
        EXPECT(0xa8ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa8ec));
        // 4C 00A4
        gbc.setState(0x2500, 0xbe2d, 0x5fb0, 0x55cf, 0xca74, 0x289a, 0x0, 0x0);
        gbc.writeMem(0x2500, { 0x4c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbe2d, gbc.sp());
        EXPECT(0x2501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 00A5
        gbc.setState(0x6b88, 0xf82a, 0x5bd0, 0x4b60, 0x9eca, 0x5569, 0x1, 0x1);
        gbc.writeMem(0x6b88, { 0x4c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf82a, gbc.sp());
        EXPECT(0x6b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 00A6
        gbc.setState(0xe4ad, 0xe8a, 0xd6d0, 0xcaef, 0x898c, 0xb9b1, 0x1, 0x1);
        gbc.writeMem(0xe4ad, { 0x4c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe8a, gbc.sp());
        EXPECT(0xe4ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe4ad));
        // 4C 00A7
        gbc.setState(0xbcce, 0xc6, 0xe470, 0x7729, 0xff7, 0x68cf, 0x0, 0x1);
        gbc.writeMem(0xbcce, { 0x4c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc6, gbc.sp());
        EXPECT(0xbccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbcce));
        // 4C 00A8
        gbc.setState(0xa85, 0x3ae0, 0x2f20, 0x60e, 0xe776, 0x74de, 0x0, 0x1);
        gbc.writeMem(0xa85, { 0x4c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3ae0, gbc.sp());
        EXPECT(0xa86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00A9
        gbc.setState(0x4450, 0xbd6b, 0x4f30, 0x5d71, 0xa602, 0x7573, 0x0, 0x1);
        gbc.writeMem(0x4450, { 0x4c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xbd6b, gbc.sp());
        EXPECT(0x4451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 00AA
        gbc.setState(0x1849, 0x8874, 0xba50, 0x6b58, 0xc9d3, 0x85a8, 0x0, 0x1);
        gbc.writeMem(0x1849, { 0x4c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8874, gbc.sp());
        EXPECT(0x184a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 00AB
        gbc.setState(0xb8d8, 0xcff8, 0x3cf0, 0x57d9, 0xc71a, 0x1bbb, 0x1, 0x1);
        gbc.writeMem(0xb8d8, { 0x4c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcff8, gbc.sp());
        EXPECT(0xb8d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb8d8));
        // 4C 00AC
        gbc.setState(0x650e, 0x84f2, 0xbf80, 0x97d1, 0x59c2, 0x944a, 0x0, 0x0);
        gbc.writeMem(0x650e, { 0x4c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x84f2, gbc.sp());
        EXPECT(0x650f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00AE
        gbc.setState(0xed8d, 0x7be5, 0xe4a0, 0x8a0a, 0x80c7, 0x4fc, 0x1, 0x0);
        gbc.writeMem(0xed8d, { 0x4c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7be5, gbc.sp());
        EXPECT(0xed8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xed8d));
        // 4C 00AF
        gbc.setState(0xdbc6, 0xbdb0, 0xaaf0, 0xc361, 0x6a28, 0x74e, 0x0, 0x0);
        gbc.writeMem(0xdbc6, { 0x4c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbdb0, gbc.sp());
        EXPECT(0xdbc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdbc6));
        // 4C 00B0
        gbc.setState(0xdd17, 0x6fc2, 0xe50, 0xe76f, 0xa199, 0x9ea1, 0x0, 0x0);
        gbc.writeMem(0xdd17, { 0x4c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6fc2, gbc.sp());
        EXPECT(0xdd18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdd17));
        // 4C 00B2
        gbc.setState(0x428e, 0xb98f, 0x9830, 0x905b, 0x10ff, 0xd637, 0x0, 0x1);
        gbc.writeMem(0x428e, { 0x4c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb98f, gbc.sp());
        EXPECT(0x428f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 00B3
        gbc.setState(0xf2b, 0x2ab3, 0x82c0, 0xc2cc, 0xddbf, 0x5dbd, 0x1, 0x1);
        gbc.writeMem(0xf2b, { 0x4c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2ab3, gbc.sp());
        EXPECT(0xf2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00B4
        gbc.setState(0x5727, 0xeeb3, 0xf6a0, 0x1b24, 0x9313, 0x91de, 0x1, 0x1);
        gbc.writeMem(0x5727, { 0x4c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xeeb3, gbc.sp());
        EXPECT(0x5728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00B7
        gbc.setState(0xc5db, 0xee7a, 0xb920, 0x6437, 0x9de9, 0xbe6e, 0x1, 0x0);
        gbc.writeMem(0xc5db, { 0x4c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xee7a, gbc.sp());
        EXPECT(0xc5dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc5db));
        // 4C 00B8
        gbc.setState(0x9b4, 0x4d59, 0xc030, 0xba98, 0x8b7b, 0x1e18, 0x1, 0x1);
        gbc.writeMem(0x9b4, { 0x4c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4d59, gbc.sp());
        EXPECT(0x9b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 00BA
        gbc.setState(0x3502, 0xce49, 0x4d80, 0x5ba8, 0xac50, 0xe4ef, 0x0, 0x0);
        gbc.writeMem(0x3502, { 0x4c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xce49, gbc.sp());
        EXPECT(0x3503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00BB
        gbc.setState(0x81af, 0x9f63, 0x33c0, 0x8557, 0x7412, 0x48f3, 0x0, 0x0);
        gbc.writeMem(0x81af, { 0x4c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9f63, gbc.sp());
        EXPECT(0x81b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x81af));
        // 4C 00BC
        gbc.setState(0x5ba3, 0x7f66, 0xf840, 0x5557, 0xd465, 0xea50, 0x0, 0x1);
        gbc.writeMem(0x5ba3, { 0x4c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7f66, gbc.sp());
        EXPECT(0x5ba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00BD
        gbc.setState(0xc61b, 0x202e, 0x6f60, 0x1ea, 0xfb2d, 0x4ca, 0x1, 0x1);
        gbc.writeMem(0xc61b, { 0x4c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x202e, gbc.sp());
        EXPECT(0xc61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc61b));
        // 4C 00BE
        gbc.setState(0xe291, 0xe6f6, 0xc060, 0x596b, 0xd628, 0xff68, 0x0, 0x0);
        gbc.writeMem(0xe291, { 0x4c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe6f6, gbc.sp());
        EXPECT(0xe292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe291));
        // 4C 00C0
        gbc.setState(0xb0a5, 0xe1f6, 0x5900, 0xc2c, 0xa71a, 0xa253, 0x1, 0x1);
        gbc.writeMem(0xb0a5, { 0x4c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe1f6, gbc.sp());
        EXPECT(0xb0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb0a5));
        // 4C 00C1
        gbc.setState(0xd680, 0xe2bd, 0x97d0, 0x5b30, 0xd499, 0xb266, 0x0, 0x0);
        gbc.writeMem(0xd680, { 0x4c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe2bd, gbc.sp());
        EXPECT(0xd681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd680));
        // 4C 00C2
        gbc.setState(0xa07c, 0x165a, 0x380, 0x5a66, 0x317b, 0xd1c2, 0x1, 0x0);
        gbc.writeMem(0xa07c, { 0x4c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x165a, gbc.sp());
        EXPECT(0xa07d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa07c));
        // 4C 00C3
        gbc.setState(0x4ba6, 0x2c92, 0xa120, 0x6106, 0xe7ef, 0xc03f, 0x0, 0x1);
        gbc.writeMem(0x4ba6, { 0x4c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2c92, gbc.sp());
        EXPECT(0x4ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00C4
        gbc.setState(0xcdf5, 0x830e, 0xb6e0, 0xbfa8, 0xeadf, 0x5323, 0x0, 0x0);
        gbc.writeMem(0xcdf5, { 0x4c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x830e, gbc.sp());
        EXPECT(0xcdf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcdf5));
        // 4C 00C5
        gbc.setState(0x380d, 0x6124, 0x4ac0, 0x26b7, 0x766c, 0x9e50, 0x1, 0x1);
        gbc.writeMem(0x380d, { 0x4c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6124, gbc.sp());
        EXPECT(0x380e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00C6
        gbc.setState(0x1d9a, 0xc5ec, 0xa130, 0xd047, 0xfc81, 0x49df, 0x0, 0x1);
        gbc.writeMem(0x1d9a, { 0x4c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc5ec, gbc.sp());
        EXPECT(0x1d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 00C7
        gbc.setState(0x1d12, 0x76dd, 0xe100, 0x3991, 0x26f7, 0x43dd, 0x1, 0x1);
        gbc.writeMem(0x1d12, { 0x4c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x76dd, gbc.sp());
        EXPECT(0x1d13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00C8
        gbc.setState(0x2a0f, 0xbe08, 0x17e0, 0xcf77, 0x7700, 0x603c, 0x0, 0x1);
        gbc.writeMem(0x2a0f, { 0x4c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xbe08, gbc.sp());
        EXPECT(0x2a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00C9
        gbc.setState(0x323a, 0x9e46, 0xa3c0, 0x347b, 0x4261, 0x2103, 0x0, 0x0);
        gbc.writeMem(0x323a, { 0x4c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9e46, gbc.sp());
        EXPECT(0x323b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00CA
        gbc.setState(0x17ea, 0x5aad, 0xc1e0, 0xa1a7, 0x6500, 0x1614, 0x0, 0x1);
        gbc.writeMem(0x17ea, { 0x4c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5aad, gbc.sp());
        EXPECT(0x17eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00CB
        gbc.setState(0xbb41, 0xae9a, 0xcef0, 0x1e05, 0x7ea8, 0x534, 0x1, 0x0);
        gbc.writeMem(0xbb41, { 0x4c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xae9a, gbc.sp());
        EXPECT(0xbb42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbb41));
        // 4C 00CC
        gbc.setState(0x5550, 0xb427, 0x3610, 0x208c, 0xc9c7, 0x12fa, 0x1, 0x0);
        gbc.writeMem(0x5550, { 0x4c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb427, gbc.sp());
        EXPECT(0x5551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 00CD
        gbc.setState(0xabd3, 0xd9b4, 0x4540, 0xbba7, 0x3708, 0x5eab, 0x0, 0x0);
        gbc.writeMem(0xabd3, { 0x4c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd9b4, gbc.sp());
        EXPECT(0xabd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xabd3));
        // 4C 00CE
        gbc.setState(0x48ec, 0x53c9, 0x4000, 0x698a, 0x3321, 0xb668, 0x0, 0x0);
        gbc.writeMem(0x48ec, { 0x4c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x53c9, gbc.sp());
        EXPECT(0x48ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00CF
        gbc.setState(0xcf5, 0xdeec, 0x6880, 0xa442, 0xa555, 0x9fb4, 0x1, 0x1);
        gbc.writeMem(0xcf5, { 0x4c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdeec, gbc.sp());
        EXPECT(0xcf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00D0
        gbc.setState(0xed13, 0x7814, 0xd220, 0x8c0c, 0xcab9, 0x3107, 0x0, 0x1);
        gbc.writeMem(0xed13, { 0x4c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7814, gbc.sp());
        EXPECT(0xed14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xed13));
        // 4C 00D1
        gbc.setState(0xc8f3, 0x92b6, 0x5370, 0x6de7, 0x785f, 0xdc09, 0x1, 0x0);
        gbc.writeMem(0xc8f3, { 0x4c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x92b6, gbc.sp());
        EXPECT(0xc8f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc8f3));
        // 4C 00D2
        gbc.setState(0x2002, 0x6cd2, 0xf370, 0x818f, 0x41c7, 0x3dc3, 0x1, 0x0);
        gbc.writeMem(0x2002, { 0x4c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6cd2, gbc.sp());
        EXPECT(0x2003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 00D3
        gbc.setState(0x3801, 0x941, 0xf0e0, 0x497e, 0x31d9, 0xdd5f, 0x1, 0x0);
        gbc.writeMem(0x3801, { 0x4c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x941, gbc.sp());
        EXPECT(0x3802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00D4
        gbc.setState(0xba40, 0xc39c, 0x780, 0xfd0e, 0x5605, 0x5078, 0x0, 0x1);
        gbc.writeMem(0xba40, { 0x4c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc39c, gbc.sp());
        EXPECT(0xba41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xba40));
        // 4C 00D5
        gbc.setState(0x4b27, 0xdca, 0x6d0, 0x8347, 0xab4a, 0xb5ff, 0x1, 0x1);
        gbc.writeMem(0x4b27, { 0x4c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xdca, gbc.sp());
        EXPECT(0x4b28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 00D6
        gbc.setState(0xad1d, 0x8760, 0x63c0, 0xc567, 0x5af3, 0xf16e, 0x1, 0x0);
        gbc.writeMem(0xad1d, { 0x4c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8760, gbc.sp());
        EXPECT(0xad1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xad1d));
        // 4C 00D7
        gbc.setState(0xbd24, 0xd83c, 0x4020, 0x96a7, 0xb4cb, 0xf632, 0x0, 0x0);
        gbc.writeMem(0xbd24, { 0x4c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd83c, gbc.sp());
        EXPECT(0xbd25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbd24));
        // 4C 00D8
        gbc.setState(0x9e9e, 0xb581, 0xd0e0, 0x873c, 0x64, 0xab2f, 0x1, 0x1);
        gbc.writeMem(0x9e9e, { 0x4c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb581, gbc.sp());
        EXPECT(0x9e9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9e9e));
        // 4C 00D9
        gbc.setState(0xdb48, 0xfaa4, 0x2a20, 0xd932, 0xd4c8, 0xc95d, 0x1, 0x1);
        gbc.writeMem(0xdb48, { 0x4c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfaa4, gbc.sp());
        EXPECT(0xdb49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdb48));
        // 4C 00DA
        gbc.setState(0x686b, 0x7adc, 0x9130, 0xcfb0, 0xb415, 0x9431, 0x0, 0x1);
        gbc.writeMem(0x686b, { 0x4c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7adc, gbc.sp());
        EXPECT(0x686c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 00DB
        gbc.setState(0x795e, 0xc5c4, 0xe5b0, 0x56a1, 0x4253, 0xa6d5, 0x0, 0x0);
        gbc.writeMem(0x795e, { 0x4c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc5c4, gbc.sp());
        EXPECT(0x795f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 00DC
        gbc.setState(0xa6f7, 0xf961, 0x39e0, 0x6100, 0x24ab, 0x6d67, 0x1, 0x0);
        gbc.writeMem(0xa6f7, { 0x4c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf961, gbc.sp());
        EXPECT(0xa6f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa6f7));
        // 4C 00DD
        gbc.setState(0x1e3d, 0xc1b, 0xbc70, 0x962d, 0xefae, 0x5c37, 0x0, 0x1);
        gbc.writeMem(0x1e3d, { 0x4c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc1b, gbc.sp());
        EXPECT(0x1e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 00DE
        gbc.setState(0x6330, 0x94ee, 0x3400, 0x33c0, 0xe719, 0xb22e, 0x0, 0x1);
        gbc.writeMem(0x6330, { 0x4c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x94ee, gbc.sp());
        EXPECT(0x6331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00DF
        gbc.setState(0x1de2, 0x4ab7, 0xc6d0, 0xfd15, 0xb25b, 0x70c1, 0x1, 0x1);
        gbc.writeMem(0x1de2, { 0x4c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4ab7, gbc.sp());
        EXPECT(0x1de3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 00E0
        gbc.setState(0xc929, 0x2eb1, 0xaff0, 0xd9fc, 0x72f4, 0x66, 0x1, 0x1);
        gbc.writeMem(0xc929, { 0x4c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2eb1, gbc.sp());
        EXPECT(0xc92a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc929));
        // 4C 00E1
        gbc.setState(0xa63d, 0xfb8a, 0x2cd0, 0x99f2, 0x94ea, 0x3888, 0x1, 0x1);
        gbc.writeMem(0xa63d, { 0x4c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfb8a, gbc.sp());
        EXPECT(0xa63e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa63d));
        // 4C 00E2
        gbc.setState(0x1470, 0x6a5c, 0xfaa0, 0x64bb, 0xf9d2, 0x8eb6, 0x1, 0x1);
        gbc.writeMem(0x1470, { 0x4c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6a5c, gbc.sp());
        EXPECT(0x1471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00E3
        gbc.setState(0xb3c4, 0x508f, 0xa4f0, 0xdcd6, 0x992a, 0xf88a, 0x0, 0x0);
        gbc.writeMem(0xb3c4, { 0x4c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x508f, gbc.sp());
        EXPECT(0xb3c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb3c4));
        // 4C 00E4
        gbc.setState(0x6e03, 0x5f96, 0xd4e0, 0x94e4, 0xf2a3, 0x7534, 0x0, 0x1);
        gbc.writeMem(0x6e03, { 0x4c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5f96, gbc.sp());
        EXPECT(0x6e04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00E5
        gbc.setState(0x97fb, 0xb52, 0xa30, 0x161e, 0x715f, 0x8ff3, 0x0, 0x1);
        gbc.writeMem(0x97fb, { 0x4c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb52, gbc.sp());
        EXPECT(0x97fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x97fb));
        // 4C 00E6
        gbc.setState(0xadf3, 0x67b3, 0x6150, 0x79c3, 0x20c1, 0xd45c, 0x0, 0x0);
        gbc.writeMem(0xadf3, { 0x4c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x67b3, gbc.sp());
        EXPECT(0xadf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xadf3));
        // 4C 00E8
        gbc.setState(0xcd7f, 0xfc5c, 0x2c60, 0xf390, 0x200c, 0x1f6, 0x0, 0x0);
        gbc.writeMem(0xcd7f, { 0x4c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xfc5c, gbc.sp());
        EXPECT(0xcd80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcd7f));
        // 4C 00E9
        gbc.setState(0x38e3, 0x24c, 0x3490, 0x24e, 0x37e5, 0x911b, 0x0, 0x1);
        gbc.writeMem(0x38e3, { 0x4c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x24c, gbc.sp());
        EXPECT(0x38e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 00EA
        gbc.setState(0x9ee6, 0x77af, 0xadf0, 0xa1ce, 0xd548, 0x579c, 0x1, 0x1);
        gbc.writeMem(0x9ee6, { 0x4c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x77af, gbc.sp());
        EXPECT(0x9ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9ee6));
        // 4C 00EB
        gbc.setState(0x1b4f, 0x98f8, 0x39a0, 0xc061, 0x2bad, 0x9f5a, 0x1, 0x0);
        gbc.writeMem(0x1b4f, { 0x4c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x98f8, gbc.sp());
        EXPECT(0x1b50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00EC
        gbc.setState(0x579a, 0x13e9, 0xabc0, 0x19b5, 0x3c2d, 0x4672, 0x0, 0x1);
        gbc.writeMem(0x579a, { 0x4c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x13e9, gbc.sp());
        EXPECT(0x579b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00ED
        gbc.setState(0x5f51, 0xe23b, 0xeda0, 0x8b30, 0xcdd1, 0x4d2b, 0x1, 0x0);
        gbc.writeMem(0x5f51, { 0x4c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe23b, gbc.sp());
        EXPECT(0x5f52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00EE
        gbc.setState(0xe1d6, 0xb5a2, 0x6af0, 0x93, 0x9eaa, 0x5602, 0x0, 0x0);
        gbc.writeMem(0xe1d6, { 0x4c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb5a2, gbc.sp());
        EXPECT(0xe1d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe1d6));
        // 4C 00EF
        gbc.setState(0x9bd2, 0x9127, 0xc580, 0xc14c, 0x33be, 0xcb16, 0x0, 0x1);
        gbc.writeMem(0x9bd2, { 0x4c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9127, gbc.sp());
        EXPECT(0x9bd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9bd2));
        // 4C 00F0
        gbc.setState(0x3a92, 0x27e4, 0x8b80, 0x1314, 0x8740, 0xaa57, 0x1, 0x0);
        gbc.writeMem(0x3a92, { 0x4c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x27e4, gbc.sp());
        EXPECT(0x3a93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00F1
        gbc.setState(0x35a5, 0x2675, 0x5180, 0xa52d, 0x8538, 0x3ec8, 0x0, 0x0);
        gbc.writeMem(0x35a5, { 0x4c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2675, gbc.sp());
        EXPECT(0x35a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00F2
        gbc.setState(0xbb27, 0x83e5, 0x4420, 0xe82, 0xe901, 0x7032, 0x0, 0x1);
        gbc.writeMem(0xbb27, { 0x4c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x83e5, gbc.sp());
        EXPECT(0xbb28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbb27));
        // 4C 00F3
        gbc.setState(0xb755, 0x5513, 0x54e0, 0xa87, 0xacfa, 0x8675, 0x0, 0x0);
        gbc.writeMem(0xb755, { 0x4c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5513, gbc.sp());
        EXPECT(0xb756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb755));
        // 4C 00F4
        gbc.setState(0x3e99, 0x732f, 0x85e0, 0x282d, 0xf3fa, 0x5a80, 0x1, 0x1);
        gbc.writeMem(0x3e99, { 0x4c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x732f, gbc.sp());
        EXPECT(0x3e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 00F7
        gbc.setState(0x9060, 0x1dd6, 0x2470, 0x7576, 0xb2c5, 0x1ff3, 0x0, 0x0);
        gbc.writeMem(0x9060, { 0x4c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1dd6, gbc.sp());
        EXPECT(0x9061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9060));
        // 4C 00F8
        gbc.setState(0x18ec, 0xf383, 0x3370, 0xa7a9, 0xb26f, 0xe3dd, 0x1, 0x1);
        gbc.writeMem(0x18ec, { 0x4c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf383, gbc.sp());
        EXPECT(0x18ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 00F9
        gbc.setState(0x8523, 0x463a, 0x11a0, 0x4ad2, 0x1c8f, 0x6e34, 0x1, 0x1);
        gbc.writeMem(0x8523, { 0x4c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x463a, gbc.sp());
        EXPECT(0x8524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8523));
        // 4C 00FA
        gbc.setState(0xcf58, 0xbdf4, 0x6cf0, 0xa48d, 0x7a29, 0x581a, 0x0, 0x0);
        gbc.writeMem(0xcf58, { 0x4c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbdf4, gbc.sp());
        EXPECT(0xcf59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcf58));
        // 4C 00FB
        gbc.setState(0xe767, 0xe87c, 0x2040, 0xc93d, 0xa47f, 0x5a56, 0x0, 0x0);
        gbc.writeMem(0xe767, { 0x4c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe87c, gbc.sp());
        EXPECT(0xe768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe767));
        // 4C 00FC
        gbc.setState(0x7199, 0xafe1, 0x8950, 0x9ddc, 0x9fe1, 0x49f7, 0x1, 0x1);
        gbc.writeMem(0x7199, { 0x4c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xafe1, gbc.sp());
        EXPECT(0x719a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 00FD
        gbc.setState(0xec5, 0x49c7, 0xbf50, 0xebad, 0xf4d7, 0xcc65, 0x1, 0x0);
        gbc.writeMem(0xec5, { 0x4c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x49c7, gbc.sp());
        EXPECT(0xec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 00FE
        gbc.setState(0x9533, 0xc4ee, 0x79a0, 0x2af0, 0xf4dd, 0x1678, 0x1, 0x0);
        gbc.writeMem(0x9533, { 0x4c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc4ee, gbc.sp());
        EXPECT(0x9534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9533));
        // 4C 00FF
        gbc.setState(0x611b, 0xb62c, 0x4da0, 0x509b, 0xc8a1, 0xeac4, 0x1, 0x1);
        gbc.writeMem(0x611b, { 0x4c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb62c, gbc.sp());
        EXPECT(0x611c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0100
        gbc.setState(0xdef, 0xa5bc, 0x63c0, 0xa174, 0x77c2, 0x8201, 0x1, 0x0);
        gbc.writeMem(0xdef, { 0x4c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa5bc, gbc.sp());
        EXPECT(0xdf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0101
        gbc.setState(0x914b, 0x8d51, 0xae10, 0xce62, 0x8ae5, 0x81d0, 0x0, 0x1);
        gbc.writeMem(0x914b, { 0x4c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8d51, gbc.sp());
        EXPECT(0x914c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x914b));
        // 4C 0102
        gbc.setState(0x127, 0x20f6, 0x1190, 0x9486, 0x1660, 0xcb45, 0x1, 0x1);
        gbc.writeMem(0x127, { 0x4c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x20f6, gbc.sp());
        EXPECT(0x128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0103
        gbc.setState(0xaaad, 0xb155, 0x3170, 0xdbc8, 0x1ee2, 0xa58, 0x1, 0x0);
        gbc.writeMem(0xaaad, { 0x4c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb155, gbc.sp());
        EXPECT(0xaaae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xaaad));
        // 4C 0105
        gbc.setState(0x85b3, 0x1d2f, 0x89a0, 0x7638, 0xe565, 0x5731, 0x0, 0x0);
        gbc.writeMem(0x85b3, { 0x4c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1d2f, gbc.sp());
        EXPECT(0x85b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x85b3));
        // 4C 0106
        gbc.setState(0x52d8, 0xce5c, 0x2fa0, 0x7c34, 0x385d, 0x6366, 0x1, 0x1);
        gbc.writeMem(0x52d8, { 0x4c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xce5c, gbc.sp());
        EXPECT(0x52d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0108
        gbc.setState(0xe5ff, 0x2fac, 0x3580, 0x93e6, 0xae04, 0xa437, 0x0, 0x1);
        gbc.writeMem(0xe5ff, { 0x4c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2fac, gbc.sp());
        EXPECT(0xe600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe5ff));
        // 4C 0109
        gbc.setState(0x43a9, 0xb4e9, 0xec60, 0xf9a5, 0xa6c0, 0xe3d2, 0x0, 0x1);
        gbc.writeMem(0x43a9, { 0x4c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb4e9, gbc.sp());
        EXPECT(0x43aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 010A
        gbc.setState(0x7025, 0x444a, 0x44d0, 0xe1e7, 0x7275, 0x8f63, 0x1, 0x1);
        gbc.writeMem(0x7025, { 0x4c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x444a, gbc.sp());
        EXPECT(0x7026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 010B
        gbc.setState(0x4253, 0x8468, 0x230, 0xe8de, 0x4cdc, 0xc88f, 0x0, 0x1);
        gbc.writeMem(0x4253, { 0x4c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8468, gbc.sp());
        EXPECT(0x4254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 010C
        gbc.setState(0xc9ad, 0x2887, 0x4e40, 0x3553, 0xd5fe, 0x5533, 0x1, 0x0);
        gbc.writeMem(0xc9ad, { 0x4c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2887, gbc.sp());
        EXPECT(0xc9ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc9ad));
        // 4C 010D
        gbc.setState(0xe637, 0x2092, 0x89e0, 0xf5e, 0xce78, 0xa178, 0x1, 0x1);
        gbc.writeMem(0xe637, { 0x4c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2092, gbc.sp());
        EXPECT(0xe638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe637));
        // 4C 010E
        gbc.setState(0xc102, 0x1072, 0x4620, 0x37db, 0x6e92, 0x35f1, 0x1, 0x1);
        gbc.writeMem(0xc102, { 0x4c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1072, gbc.sp());
        EXPECT(0xc103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc102));
        // 4C 010F
        gbc.setState(0xae8d, 0x5bef, 0xdcd0, 0x1712, 0x657b, 0xb5fb, 0x0, 0x1);
        gbc.writeMem(0xae8d, { 0x4c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5bef, gbc.sp());
        EXPECT(0xae8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xae8d));
        // 4C 0110
        gbc.setState(0xa515, 0xa719, 0xa840, 0x34a5, 0x2bf2, 0xda88, 0x1, 0x1);
        gbc.writeMem(0xa515, { 0x4c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa719, gbc.sp());
        EXPECT(0xa516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa515));
        // 4C 0111
        gbc.setState(0xad85, 0x25a9, 0x4ed0, 0xf341, 0xa796, 0xd8a8, 0x0, 0x0);
        gbc.writeMem(0xad85, { 0x4c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x25a9, gbc.sp());
        EXPECT(0xad86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xad85));
        // 4C 0112
        gbc.setState(0x1914, 0x93e, 0xfc80, 0x2bec, 0x1269, 0x7b6c, 0x0, 0x1);
        gbc.writeMem(0x1914, { 0x4c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x93e, gbc.sp());
        EXPECT(0x1915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0113
        gbc.setState(0x66, 0xd002, 0x9df0, 0xdf7b, 0x3293, 0x8db8, 0x1, 0x1);
        gbc.writeMem(0x66, { 0x4c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd002, gbc.sp());
        EXPECT(0x67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0114
        gbc.setState(0xa8ee, 0x7e71, 0xe760, 0x5814, 0x8f48, 0xb6a5, 0x1, 0x0);
        gbc.writeMem(0xa8ee, { 0x4c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7e71, gbc.sp());
        EXPECT(0xa8ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa8ee));
        // 4C 0115
        gbc.setState(0x8245, 0x27c0, 0x6f0, 0xb828, 0xda47, 0x17c2, 0x1, 0x1);
        gbc.writeMem(0x8245, { 0x4c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x27c0, gbc.sp());
        EXPECT(0x8246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8245));
        // 4C 0116
        gbc.setState(0x2235, 0xbea3, 0x8260, 0x8ad2, 0x8cdb, 0x7a32, 0x0, 0x1);
        gbc.writeMem(0x2235, { 0x4c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbea3, gbc.sp());
        EXPECT(0x2236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0117
        gbc.setState(0x8a1e, 0x997a, 0x6d40, 0xc306, 0x7988, 0x25f1, 0x0, 0x0);
        gbc.writeMem(0x8a1e, { 0x4c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x997a, gbc.sp());
        EXPECT(0x8a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8a1e));
        // 4C 0119
        gbc.setState(0x840e, 0x49f1, 0x4300, 0x79c1, 0x9628, 0x6b, 0x0, 0x0);
        gbc.writeMem(0x840e, { 0x4c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x49f1, gbc.sp());
        EXPECT(0x840f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x840e));
        // 4C 011A
        gbc.setState(0x3886, 0x8a41, 0xd560, 0xc3b3, 0x2365, 0x3d60, 0x0, 0x0);
        gbc.writeMem(0x3886, { 0x4c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8a41, gbc.sp());
        EXPECT(0x3887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 011B
        gbc.setState(0xa692, 0xaf35, 0xb820, 0x9493, 0x633e, 0xcfde, 0x1, 0x0);
        gbc.writeMem(0xa692, { 0x4c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xaf35, gbc.sp());
        EXPECT(0xa693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa692));
        // 4C 011C
        gbc.setState(0xe402, 0x86a3, 0xf700, 0x6090, 0xd45a, 0x27b4, 0x0, 0x1);
        gbc.writeMem(0xe402, { 0x4c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x86a3, gbc.sp());
        EXPECT(0xe403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe402));
        // 4C 011D
        gbc.setState(0x258c, 0x1e7b, 0x3250, 0xf365, 0x8e47, 0x66df, 0x1, 0x1);
        gbc.writeMem(0x258c, { 0x4c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1e7b, gbc.sp());
        EXPECT(0x258d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 011E
        gbc.setState(0xafd0, 0xcfee, 0xc4f0, 0x123d, 0x43ea, 0xe3e4, 0x1, 0x1);
        gbc.writeMem(0xafd0, { 0x4c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcfee, gbc.sp());
        EXPECT(0xafd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xafd0));
        // 4C 011F
        gbc.setState(0x75a9, 0x821, 0x70f0, 0x5983, 0xea96, 0x65d2, 0x1, 0x1);
        gbc.writeMem(0x75a9, { 0x4c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x821, gbc.sp());
        EXPECT(0x75aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0122
        gbc.setState(0xac4c, 0x5f4d, 0x5f40, 0x6472, 0xa1c4, 0x8482, 0x1, 0x0);
        gbc.writeMem(0xac4c, { 0x4c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5f4d, gbc.sp());
        EXPECT(0xac4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xac4c));
        // 4C 0123
        gbc.setState(0x4171, 0xe6bc, 0xbdf0, 0x961d, 0xbb16, 0x7dbe, 0x0, 0x0);
        gbc.writeMem(0x4171, { 0x4c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe6bc, gbc.sp());
        EXPECT(0x4172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0124
        gbc.setState(0x412, 0xccab, 0xeb40, 0xbfe0, 0x82bb, 0x29aa, 0x0, 0x1);
        gbc.writeMem(0x412, { 0x4c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xccab, gbc.sp());
        EXPECT(0x413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0125
        gbc.setState(0xc2e, 0x824c, 0x6790, 0xa01, 0xd7b7, 0x712d, 0x1, 0x1);
        gbc.writeMem(0xc2e, { 0x4c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x824c, gbc.sp());
        EXPECT(0xc2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0126
        gbc.setState(0xa20d, 0x4a93, 0xffa0, 0x46ec, 0xa7ff, 0x21e, 0x1, 0x0);
        gbc.writeMem(0xa20d, { 0x4c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4a93, gbc.sp());
        EXPECT(0xa20e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa20d));
        // 4C 0127
        gbc.setState(0x10c9, 0xbc16, 0x5ac0, 0x7207, 0xa6f1, 0x3cd8, 0x0, 0x0);
        gbc.writeMem(0x10c9, { 0x4c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbc16, gbc.sp());
        EXPECT(0x10ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0128
        gbc.setState(0xcc0a, 0x4343, 0xb450, 0xb61b, 0xbf1, 0x1b7e, 0x1, 0x0);
        gbc.writeMem(0xcc0a, { 0x4c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4343, gbc.sp());
        EXPECT(0xcc0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcc0a));
        // 4C 0129
        gbc.setState(0x84ed, 0x9c0b, 0xa8d0, 0x3b1c, 0xb464, 0x5e6c, 0x1, 0x1);
        gbc.writeMem(0x84ed, { 0x4c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9c0b, gbc.sp());
        EXPECT(0x84ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x84ed));
        // 4C 012A
        gbc.setState(0xe528, 0xed03, 0x1f80, 0x901b, 0x6845, 0xf637, 0x1, 0x1);
        gbc.writeMem(0xe528, { 0x4c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xed03, gbc.sp());
        EXPECT(0xe529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe528));
        // 4C 012B
        gbc.setState(0xa913, 0x2ce7, 0x1af0, 0xf3f6, 0x833a, 0x25ab, 0x0, 0x0);
        gbc.writeMem(0xa913, { 0x4c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2ce7, gbc.sp());
        EXPECT(0xa914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa913));
        // 4C 012C
        gbc.setState(0x472b, 0x3f68, 0xeec0, 0x4b3f, 0x86f1, 0x93d3, 0x1, 0x1);
        gbc.writeMem(0x472b, { 0x4c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3f68, gbc.sp());
        EXPECT(0x472c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 012D
        gbc.setState(0x2d34, 0x7291, 0x7510, 0xd6a6, 0x662f, 0x40dc, 0x1, 0x1);
        gbc.writeMem(0x2d34, { 0x4c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7291, gbc.sp());
        EXPECT(0x2d35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 012E
        gbc.setState(0xbd5b, 0x1efc, 0x6ac0, 0xa01d, 0xe1b4, 0x18d, 0x1, 0x1);
        gbc.writeMem(0xbd5b, { 0x4c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1efc, gbc.sp());
        EXPECT(0xbd5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbd5b));
        // 4C 012F
        gbc.setState(0xae17, 0xca70, 0xfaf0, 0x2ceb, 0x3d12, 0xf023, 0x0, 0x1);
        gbc.writeMem(0xae17, { 0x4c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xca70, gbc.sp());
        EXPECT(0xae18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xae17));
        // 4C 0130
        gbc.setState(0xa088, 0x37d4, 0x35f0, 0xa04f, 0x9e65, 0xd14a, 0x1, 0x0);
        gbc.writeMem(0xa088, { 0x4c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x37d4, gbc.sp());
        EXPECT(0xa089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa088));
        // 4C 0132
        gbc.setState(0xba57, 0x7062, 0xb9b0, 0x9644, 0x9a17, 0xe9c4, 0x0, 0x0);
        gbc.writeMem(0xba57, { 0x4c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7062, gbc.sp());
        EXPECT(0xba58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xba57));
        // 4C 0133
        gbc.setState(0x3ad4, 0x9543, 0x2f70, 0xe27, 0xdd97, 0xb20d, 0x0, 0x0);
        gbc.writeMem(0x3ad4, { 0x4c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9543, gbc.sp());
        EXPECT(0x3ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0134
        gbc.setState(0xd6d2, 0xee70, 0x5e30, 0x3486, 0x4e3c, 0xa2b1, 0x1, 0x0);
        gbc.writeMem(0xd6d2, { 0x4c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xee70, gbc.sp());
        EXPECT(0xd6d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd6d2));
        // 4C 0135
        gbc.setState(0x4471, 0x7d75, 0x36e0, 0x9ced, 0x217a, 0x7441, 0x0, 0x1);
        gbc.writeMem(0x4471, { 0x4c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7d75, gbc.sp());
        EXPECT(0x4472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0136
        gbc.setState(0xbe71, 0x4744, 0x5300, 0x935, 0xfd2, 0x62e7, 0x0, 0x1);
        gbc.writeMem(0xbe71, { 0x4c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4744, gbc.sp());
        EXPECT(0xbe72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbe71));
        // 4C 0137
        gbc.setState(0x8830, 0x94e9, 0x3000, 0xfdd3, 0x3094, 0x1dac, 0x0, 0x0);
        gbc.writeMem(0x8830, { 0x4c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x94e9, gbc.sp());
        EXPECT(0x8831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8830));
        // 4C 0138
        gbc.setState(0x2c91, 0xda26, 0x4ac0, 0x71f3, 0xfcd, 0xa8e, 0x0, 0x1);
        gbc.writeMem(0x2c91, { 0x4c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xda26, gbc.sp());
        EXPECT(0x2c92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0139
        gbc.setState(0x9462, 0x5d0a, 0x7b10, 0xb72e, 0xbdcf, 0x1105, 0x0, 0x1);
        gbc.writeMem(0x9462, { 0x4c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5d0a, gbc.sp());
        EXPECT(0x9463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9462));
        // 4C 013B
        gbc.setState(0x257e, 0x4cfc, 0xede0, 0x5f9a, 0x7a58, 0xa69e, 0x0, 0x1);
        gbc.writeMem(0x257e, { 0x4c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4cfc, gbc.sp());
        EXPECT(0x257f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 013C
        gbc.setState(0x6ae0, 0x7472, 0x9d50, 0x5f30, 0x8789, 0x312b, 0x0, 0x1);
        gbc.writeMem(0x6ae0, { 0x4c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7472, gbc.sp());
        EXPECT(0x6ae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 013D
        gbc.setState(0x365c, 0xc465, 0x2b60, 0x1889, 0x480f, 0xfb93, 0x1, 0x0);
        gbc.writeMem(0x365c, { 0x4c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc465, gbc.sp());
        EXPECT(0x365d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 013E
        gbc.setState(0xa64a, 0x89f0, 0x6df0, 0x37e1, 0xaafd, 0x3c37, 0x1, 0x1);
        gbc.writeMem(0xa64a, { 0x4c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x89f0, gbc.sp());
        EXPECT(0xa64b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa64a));
        // 4C 013F
        gbc.setState(0x37be, 0xa384, 0xe430, 0x2492, 0x4c7a, 0xa345, 0x0, 0x1);
        gbc.writeMem(0x37be, { 0x4c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa384, gbc.sp());
        EXPECT(0x37bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0140
        gbc.setState(0xca56, 0xbac4, 0xefe0, 0xc073, 0x2582, 0xa8f8, 0x0, 0x0);
        gbc.writeMem(0xca56, { 0x4c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbac4, gbc.sp());
        EXPECT(0xca57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xca56));
        // 4C 0141
        gbc.setState(0xb144, 0x6a0a, 0x89b0, 0x8f38, 0x396, 0x5af2, 0x0, 0x1);
        gbc.writeMem(0xb144, { 0x4c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6a0a, gbc.sp());
        EXPECT(0xb145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb144));
        // 4C 0142
        gbc.setState(0xd34a, 0x9263, 0x7990, 0x7e06, 0xd7e1, 0xfc47, 0x0, 0x1);
        gbc.writeMem(0xd34a, { 0x4c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9263, gbc.sp());
        EXPECT(0xd34b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd34a));
        // 4C 0143
        gbc.setState(0xc50e, 0x7645, 0xba70, 0xefb7, 0x27bb, 0x821e, 0x1, 0x0);
        gbc.writeMem(0xc50e, { 0x4c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7645, gbc.sp());
        EXPECT(0xc50f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc50e));
        // 4C 0144
        gbc.setState(0x94e8, 0x73d0, 0x51c0, 0xb86d, 0x41d0, 0xe3a6, 0x0, 0x1);
        gbc.writeMem(0x94e8, { 0x4c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x73d0, gbc.sp());
        EXPECT(0x94e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x94e8));
        // 4C 0145
        gbc.setState(0xc6b9, 0x64ef, 0xe00, 0x6d85, 0xa367, 0x458d, 0x1, 0x1);
        gbc.writeMem(0xc6b9, { 0x4c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x64ef, gbc.sp());
        EXPECT(0xc6ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc6b9));
        // 4C 0146
        gbc.setState(0x1cf8, 0x4e0, 0x1560, 0xf6c6, 0x4622, 0x1a9b, 0x1, 0x0);
        gbc.writeMem(0x1cf8, { 0x4c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4e0, gbc.sp());
        EXPECT(0x1cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0147
        gbc.setState(0x9435, 0x55e8, 0x74c0, 0x538d, 0x4e36, 0x5299, 0x0, 0x1);
        gbc.writeMem(0x9435, { 0x4c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x55e8, gbc.sp());
        EXPECT(0x9436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9435));
        // 4C 0149
        gbc.setState(0x638f, 0x418a, 0x5180, 0xfe27, 0xcc26, 0xa266, 0x1, 0x1);
        gbc.writeMem(0x638f, { 0x4c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x418a, gbc.sp());
        EXPECT(0x6390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 014A
        gbc.setState(0x68dd, 0x70db, 0x3c0, 0x6646, 0x78f6, 0xaa66, 0x0, 0x0);
        gbc.writeMem(0x68dd, { 0x4c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x70db, gbc.sp());
        EXPECT(0x68de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 014B
        gbc.setState(0x4fa3, 0x91ac, 0x1250, 0x9545, 0x47e3, 0x8836, 0x0, 0x0);
        gbc.writeMem(0x4fa3, { 0x4c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x91ac, gbc.sp());
        EXPECT(0x4fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 014C
        gbc.setState(0x84ac, 0xeb92, 0x4910, 0xe302, 0x2a81, 0x41a1, 0x1, 0x1);
        gbc.writeMem(0x84ac, { 0x4c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xeb92, gbc.sp());
        EXPECT(0x84ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x84ac));
        // 4C 014D
        gbc.setState(0x7fc, 0xaeee, 0xfbb0, 0x310c, 0x432b, 0x8b30, 0x1, 0x0);
        gbc.writeMem(0x7fc, { 0x4c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xaeee, gbc.sp());
        EXPECT(0x7fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 014E
        gbc.setState(0xc38c, 0x8403, 0xdc10, 0x3530, 0x6591, 0x4d0a, 0x0, 0x1);
        gbc.writeMem(0xc38c, { 0x4c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8403, gbc.sp());
        EXPECT(0xc38d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc38c));
        // 4C 0150
        gbc.setState(0xeba1, 0x27e3, 0x5cd0, 0xec2b, 0xc781, 0x122, 0x1, 0x1);
        gbc.writeMem(0xeba1, { 0x4c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x27e3, gbc.sp());
        EXPECT(0xeba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xeba1));
        // 4C 0151
        gbc.setState(0xee02, 0xef45, 0x740, 0x2001, 0x7bd4, 0xfa6b, 0x1, 0x0);
        gbc.writeMem(0xee02, { 0x4c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xef45, gbc.sp());
        EXPECT(0xee03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xee02));
        // 4C 0152
        gbc.setState(0xe5ec, 0x9c55, 0x8460, 0xa5c5, 0x34d6, 0xe52d, 0x0, 0x0);
        gbc.writeMem(0xe5ec, { 0x4c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9c55, gbc.sp());
        EXPECT(0xe5ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe5ec));
        // 4C 0153
        gbc.setState(0xd25b, 0x4d12, 0x1340, 0xfd2a, 0xa17f, 0x5874, 0x0, 0x0);
        gbc.writeMem(0xd25b, { 0x4c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4d12, gbc.sp());
        EXPECT(0xd25c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd25b));
        // 4C 0154
        gbc.setState(0x3ffd, 0xdf74, 0x2a40, 0x2756, 0x2b0f, 0xae59, 0x0, 0x0);
        gbc.writeMem(0x3ffd, { 0x4c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdf74, gbc.sp());
        EXPECT(0x3ffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0155
        gbc.setState(0x2d8e, 0xdbed, 0x7290, 0xa606, 0xce27, 0xe3ee, 0x0, 0x0);
        gbc.writeMem(0x2d8e, { 0x4c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdbed, gbc.sp());
        EXPECT(0x2d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0156
        gbc.setState(0xa5c2, 0x83aa, 0x3250, 0x55bc, 0xbf3b, 0x522, 0x0, 0x0);
        gbc.writeMem(0xa5c2, { 0x4c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x83aa, gbc.sp());
        EXPECT(0xa5c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa5c2));
        // 4C 0157
        gbc.setState(0x71a3, 0x8f15, 0x7a40, 0x1c8d, 0x1960, 0x4023, 0x0, 0x1);
        gbc.writeMem(0x71a3, { 0x4c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8f15, gbc.sp());
        EXPECT(0x71a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0158
        gbc.setState(0x394f, 0x3719, 0x61e0, 0x4c13, 0x6754, 0xf198, 0x1, 0x0);
        gbc.writeMem(0x394f, { 0x4c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3719, gbc.sp());
        EXPECT(0x3950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0159
        gbc.setState(0xbdf2, 0xe16, 0x4e0, 0xda62, 0x626b, 0xd672, 0x1, 0x0);
        gbc.writeMem(0xbdf2, { 0x4c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe16, gbc.sp());
        EXPECT(0xbdf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbdf2));
        // 4C 015A
        gbc.setState(0xdc11, 0xc5b8, 0x3730, 0x167e, 0x5a43, 0x24f3, 0x1, 0x0);
        gbc.writeMem(0xdc11, { 0x4c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc5b8, gbc.sp());
        EXPECT(0xdc12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdc11));
        // 4C 015B
        gbc.setState(0xac9b, 0x6fd1, 0x59f0, 0x2691, 0x86f3, 0x8ea, 0x1, 0x0);
        gbc.writeMem(0xac9b, { 0x4c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6fd1, gbc.sp());
        EXPECT(0xac9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xac9b));
        // 4C 015C
        gbc.setState(0x92a5, 0xb118, 0xc8f0, 0x51ad, 0x5087, 0x3c, 0x1, 0x0);
        gbc.writeMem(0x92a5, { 0x4c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb118, gbc.sp());
        EXPECT(0x92a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x92a5));
        // 4C 015D
        gbc.setState(0xcc8d, 0xef1, 0x530, 0xa1f9, 0x1b6c, 0x191, 0x1, 0x0);
        gbc.writeMem(0xcc8d, { 0x4c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xef1, gbc.sp());
        EXPECT(0xcc8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcc8d));
        // 4C 015E
        gbc.setState(0x1bf9, 0xa888, 0xb560, 0x5147, 0x7410, 0x93e4, 0x0, 0x1);
        gbc.writeMem(0x1bf9, { 0x4c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa888, gbc.sp());
        EXPECT(0x1bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 015F
        gbc.setState(0x76c6, 0x6f83, 0xaf50, 0x34a6, 0xbaab, 0x2d3b, 0x1, 0x0);
        gbc.writeMem(0x76c6, { 0x4c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6f83, gbc.sp());
        EXPECT(0x76c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0160
        gbc.setState(0x4472, 0x61f9, 0x2e00, 0x2ca5, 0xed88, 0x2e54, 0x1, 0x0);
        gbc.writeMem(0x4472, { 0x4c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x61f9, gbc.sp());
        EXPECT(0x4473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0161
        gbc.setState(0xb8d6, 0xb05, 0x2810, 0xe037, 0x3ea0, 0x3157, 0x1, 0x0);
        gbc.writeMem(0xb8d6, { 0x4c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb05, gbc.sp());
        EXPECT(0xb8d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb8d6));
        // 4C 0162
        gbc.setState(0x1efe, 0xe9fc, 0x1a40, 0xa66b, 0x2cbb, 0xffd8, 0x1, 0x1);
        gbc.writeMem(0x1efe, { 0x4c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe9fc, gbc.sp());
        EXPECT(0x1eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0163
        gbc.setState(0x9b94, 0xbd46, 0xc960, 0x9c1a, 0xdab7, 0xa646, 0x0, 0x0);
        gbc.writeMem(0x9b94, { 0x4c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbd46, gbc.sp());
        EXPECT(0x9b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9b94));
        // 4C 0164
        gbc.setState(0x7ff4, 0xd0b2, 0xe4e0, 0x7274, 0xcb08, 0xc33d, 0x1, 0x0);
        gbc.writeMem(0x7ff4, { 0x4c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd0b2, gbc.sp());
        EXPECT(0x7ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0165
        gbc.setState(0x5af, 0xe66f, 0xb810, 0xcc12, 0xe395, 0xabda, 0x1, 0x0);
        gbc.writeMem(0x5af, { 0x4c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe66f, gbc.sp());
        EXPECT(0x5b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0166
        gbc.setState(0x4f0f, 0xf86c, 0xa920, 0xfd9a, 0x3464, 0xb006, 0x0, 0x0);
        gbc.writeMem(0x4f0f, { 0x4c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf86c, gbc.sp());
        EXPECT(0x4f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0167
        gbc.setState(0x76e3, 0x3fb3, 0xf4e0, 0x80a5, 0x767e, 0xdd73, 0x1, 0x0);
        gbc.writeMem(0x76e3, { 0x4c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3fb3, gbc.sp());
        EXPECT(0x76e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0168
        gbc.setState(0x909a, 0x7bdc, 0xc460, 0xf306, 0x3c70, 0xa1ce, 0x1, 0x0);
        gbc.writeMem(0x909a, { 0x4c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7bdc, gbc.sp());
        EXPECT(0x909b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x909a));
        // 4C 0169
        gbc.setState(0x6785, 0x99f7, 0x73b0, 0xa58d, 0xaaa4, 0x4e6e, 0x0, 0x0);
        gbc.writeMem(0x6785, { 0x4c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x99f7, gbc.sp());
        EXPECT(0x6786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 016A
        gbc.setState(0x4607, 0xe4a, 0xa8c0, 0x3e8f, 0x8523, 0x6467, 0x1, 0x0);
        gbc.writeMem(0x4607, { 0x4c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe4a, gbc.sp());
        EXPECT(0x4608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 016B
        gbc.setState(0x6217, 0x4cfc, 0xe9f0, 0xea3d, 0x8249, 0x65, 0x0, 0x1);
        gbc.writeMem(0x6217, { 0x4c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4cfc, gbc.sp());
        EXPECT(0x6218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 016C
        gbc.setState(0x437b, 0x256, 0x44a0, 0x7bc3, 0x4f93, 0x6dd4, 0x1, 0x1);
        gbc.writeMem(0x437b, { 0x4c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x256, gbc.sp());
        EXPECT(0x437c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 016D
        gbc.setState(0x3341, 0x7359, 0x5e30, 0xd497, 0xd0dd, 0xd02c, 0x1, 0x1);
        gbc.writeMem(0x3341, { 0x4c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7359, gbc.sp());
        EXPECT(0x3342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 016E
        gbc.setState(0x134a, 0x1dc1, 0xb300, 0x3d7d, 0x51d0, 0xecbc, 0x0, 0x0);
        gbc.writeMem(0x134a, { 0x4c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1dc1, gbc.sp());
        EXPECT(0x134b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 016F
        gbc.setState(0x9f87, 0xda4d, 0x4800, 0x837f, 0x4e3, 0x74dc, 0x1, 0x1);
        gbc.writeMem(0x9f87, { 0x4c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xda4d, gbc.sp());
        EXPECT(0x9f88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9f87));
        // 4C 0170
        gbc.setState(0xa313, 0x5785, 0x3ab0, 0x357e, 0xb173, 0x826b, 0x1, 0x1);
        gbc.writeMem(0xa313, { 0x4c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5785, gbc.sp());
        EXPECT(0xa314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa313));
        // 4C 0172
        gbc.setState(0x3814, 0x222d, 0x5ed0, 0xad3f, 0xcc95, 0x55be, 0x1, 0x0);
        gbc.writeMem(0x3814, { 0x4c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x222d, gbc.sp());
        EXPECT(0x3815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0173
        gbc.setState(0xa2a9, 0xc41e, 0xacd0, 0xb0b, 0x714e, 0x8b64, 0x0, 0x0);
        gbc.writeMem(0xa2a9, { 0x4c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc41e, gbc.sp());
        EXPECT(0xa2aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa2a9));
        // 4C 0174
        gbc.setState(0x4d3b, 0xdb4e, 0x3240, 0x4772, 0x483f, 0xcf87, 0x1, 0x0);
        gbc.writeMem(0x4d3b, { 0x4c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xdb4e, gbc.sp());
        EXPECT(0x4d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0175
        gbc.setState(0xa731, 0x9ee0, 0xaf00, 0x9541, 0x59cb, 0x256e, 0x0, 0x1);
        gbc.writeMem(0xa731, { 0x4c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9ee0, gbc.sp());
        EXPECT(0xa732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa731));
        // 4C 0176
        gbc.setState(0x7305, 0x6edd, 0xb940, 0x2776, 0xa838, 0x3133, 0x1, 0x0);
        gbc.writeMem(0x7305, { 0x4c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6edd, gbc.sp());
        EXPECT(0x7306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0177
        gbc.setState(0x9c01, 0x4dde, 0x9f10, 0x226, 0xfd60, 0x6a17, 0x0, 0x1);
        gbc.writeMem(0x9c01, { 0x4c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4dde, gbc.sp());
        EXPECT(0x9c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9c01));
        // 4C 0178
        gbc.setState(0x9e46, 0xd694, 0x3d60, 0x352c, 0x8cba, 0x79ab, 0x1, 0x0);
        gbc.writeMem(0x9e46, { 0x4c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd694, gbc.sp());
        EXPECT(0x9e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9e46));
        // 4C 0179
        gbc.setState(0x10f3, 0x8514, 0x9360, 0x5c1f, 0xa6b7, 0xb07, 0x1, 0x0);
        gbc.writeMem(0x10f3, { 0x4c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8514, gbc.sp());
        EXPECT(0x10f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 017A
        gbc.setState(0x5213, 0x3a02, 0x8430, 0xa0ef, 0xd861, 0x3f75, 0x1, 0x0);
        gbc.writeMem(0x5213, { 0x4c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3a02, gbc.sp());
        EXPECT(0x5214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 017B
        gbc.setState(0x3abd, 0xa13a, 0xdb50, 0x7cbf, 0x17ce, 0xb3e6, 0x0, 0x0);
        gbc.writeMem(0x3abd, { 0x4c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa13a, gbc.sp());
        EXPECT(0x3abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 017C
        gbc.setState(0xcf10, 0xf76d, 0xbde0, 0x8fb8, 0xfa5a, 0x4734, 0x1, 0x0);
        gbc.writeMem(0xcf10, { 0x4c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf76d, gbc.sp());
        EXPECT(0xcf11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcf10));
        // 4C 017D
        gbc.setState(0x6af0, 0x8440, 0x1a70, 0x5d37, 0xc5e9, 0x5415, 0x1, 0x0);
        gbc.writeMem(0x6af0, { 0x4c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8440, gbc.sp());
        EXPECT(0x6af1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 017E
        gbc.setState(0x4e32, 0x7bbd, 0x6740, 0x6, 0x654d, 0xd017, 0x1, 0x1);
        gbc.writeMem(0x4e32, { 0x4c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7bbd, gbc.sp());
        EXPECT(0x4e33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 017F
        gbc.setState(0x9902, 0xad4c, 0x8ac0, 0x2120, 0x166f, 0x9792, 0x1, 0x0);
        gbc.writeMem(0x9902, { 0x4c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xad4c, gbc.sp());
        EXPECT(0x9903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9902));
        // 4C 0181
        gbc.setState(0xc044, 0xf8b, 0xc1b0, 0xedc4, 0x8a19, 0xb37f, 0x0, 0x0);
        gbc.writeMem(0xc044, { 0x4c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf8b, gbc.sp());
        EXPECT(0xc045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc044));
        // 4C 0182
        gbc.setState(0x7ead, 0xd0ba, 0x10c0, 0xe54b, 0xcfbb, 0xc96b, 0x1, 0x0);
        gbc.writeMem(0x7ead, { 0x4c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd0ba, gbc.sp());
        EXPECT(0x7eae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0183
        gbc.setState(0xaeb6, 0x5a07, 0x9390, 0xedc5, 0x26fc, 0x74d8, 0x0, 0x1);
        gbc.writeMem(0xaeb6, { 0x4c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5a07, gbc.sp());
        EXPECT(0xaeb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xaeb6));
        // 4C 0185
        gbc.setState(0x41d3, 0xaf2a, 0x16f0, 0x6170, 0xcece, 0x3cab, 0x0, 0x1);
        gbc.writeMem(0x41d3, { 0x4c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xaf2a, gbc.sp());
        EXPECT(0x41d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0186
        gbc.setState(0x6564, 0xde9d, 0xa510, 0x207c, 0x19ee, 0x95e9, 0x1, 0x0);
        gbc.writeMem(0x6564, { 0x4c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xde9d, gbc.sp());
        EXPECT(0x6565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0187
        gbc.setState(0xa5db, 0x1aba, 0x5eb0, 0x3176, 0x4227, 0x664d, 0x1, 0x1);
        gbc.writeMem(0xa5db, { 0x4c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1aba, gbc.sp());
        EXPECT(0xa5dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa5db));
        // 4C 0188
        gbc.setState(0x3ad9, 0xcd08, 0xea30, 0xf16, 0x6ee3, 0xf5ec, 0x0, 0x0);
        gbc.writeMem(0x3ad9, { 0x4c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcd08, gbc.sp());
        EXPECT(0x3ada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0189
        gbc.setState(0x6b7a, 0x1936, 0x7940, 0x48b1, 0x58a1, 0x313e, 0x0, 0x1);
        gbc.writeMem(0x6b7a, { 0x4c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1936, gbc.sp());
        EXPECT(0x6b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 018A
        gbc.setState(0x1e08, 0xf90e, 0xf690, 0xae6b, 0x7f48, 0xc0b, 0x0, 0x0);
        gbc.writeMem(0x1e08, { 0x4c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf90e, gbc.sp());
        EXPECT(0x1e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 018B
        gbc.setState(0x1966, 0x2963, 0xf6b0, 0xd06f, 0x243e, 0xa471, 0x0, 0x1);
        gbc.writeMem(0x1966, { 0x4c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2963, gbc.sp());
        EXPECT(0x1967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 018C
        gbc.setState(0x6545, 0x1b6d, 0x1780, 0x3f20, 0xaddb, 0x1cfc, 0x0, 0x1);
        gbc.writeMem(0x6545, { 0x4c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1b6d, gbc.sp());
        EXPECT(0x6546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 018D
        gbc.setState(0xe42d, 0xf73c, 0x54c0, 0xd3dc, 0xd855, 0xf429, 0x0, 0x0);
        gbc.writeMem(0xe42d, { 0x4c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf73c, gbc.sp());
        EXPECT(0xe42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe42d));
        // 4C 018E
        gbc.setState(0x2a8c, 0x849, 0x9510, 0xb579, 0x2373, 0xbf9f, 0x0, 0x0);
        gbc.writeMem(0x2a8c, { 0x4c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x849, gbc.sp());
        EXPECT(0x2a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 018F
        gbc.setState(0x5528, 0xf8ad, 0x2730, 0x61f2, 0xb8d8, 0x8de4, 0x1, 0x0);
        gbc.writeMem(0x5528, { 0x4c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf8ad, gbc.sp());
        EXPECT(0x5529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0190
        gbc.setState(0x549f, 0xe777, 0x66c0, 0x231c, 0x5e09, 0x24e0, 0x0, 0x0);
        gbc.writeMem(0x549f, { 0x4c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe777, gbc.sp());
        EXPECT(0x54a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0191
        gbc.setState(0x8b64, 0xcf33, 0xcc0, 0x1070, 0x1e6d, 0x24d9, 0x1, 0x0);
        gbc.writeMem(0x8b64, { 0x4c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xcf33, gbc.sp());
        EXPECT(0x8b65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8b64));
        // 4C 0192
        gbc.setState(0x100e, 0x61bd, 0x2240, 0x4b12, 0x7a85, 0xabc3, 0x1, 0x1);
        gbc.writeMem(0x100e, { 0x4c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x61bd, gbc.sp());
        EXPECT(0x100f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0194
        gbc.setState(0x565a, 0xce17, 0x5f0, 0xdf64, 0xf3ab, 0x91f7, 0x0, 0x0);
        gbc.writeMem(0x565a, { 0x4c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xce17, gbc.sp());
        EXPECT(0x565b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0195
        gbc.setState(0x9fdc, 0x5a4a, 0x170, 0xe04d, 0x2ece, 0xa0b4, 0x1, 0x0);
        gbc.writeMem(0x9fdc, { 0x4c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5a4a, gbc.sp());
        EXPECT(0x9fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9fdc));
        // 4C 0196
        gbc.setState(0x79a6, 0x5f12, 0xb100, 0xe663, 0x42cb, 0xc972, 0x1, 0x0);
        gbc.writeMem(0x79a6, { 0x4c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5f12, gbc.sp());
        EXPECT(0x79a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0197
        gbc.setState(0x332f, 0x5c18, 0xcd40, 0xb0bb, 0x89bd, 0x8fef, 0x0, 0x1);
        gbc.writeMem(0x332f, { 0x4c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5c18, gbc.sp());
        EXPECT(0x3330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0198
        gbc.setState(0x22d, 0xdaba, 0xc050, 0x3e9e, 0xa406, 0xb813, 0x0, 0x0);
        gbc.writeMem(0x22d, { 0x4c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xdaba, gbc.sp());
        EXPECT(0x22e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0199
        gbc.setState(0x561e, 0x43ec, 0xbf70, 0xac16, 0xf4af, 0xdcbb, 0x1, 0x0);
        gbc.writeMem(0x561e, { 0x4c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x43ec, gbc.sp());
        EXPECT(0x561f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 019B
        gbc.setState(0x2879, 0x39d4, 0x64e0, 0xe40, 0x90b0, 0xdae7, 0x0, 0x1);
        gbc.writeMem(0x2879, { 0x4c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x39d4, gbc.sp());
        EXPECT(0x287a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 019C
        gbc.setState(0xaf30, 0x9f0b, 0xedf0, 0x54b6, 0x3a71, 0x8d0c, 0x1, 0x1);
        gbc.writeMem(0xaf30, { 0x4c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9f0b, gbc.sp());
        EXPECT(0xaf31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xaf30));
        // 4C 019D
        gbc.setState(0x3a7f, 0xf919, 0x7dd0, 0x40f0, 0x4575, 0xa2f2, 0x1, 0x0);
        gbc.writeMem(0x3a7f, { 0x4c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf919, gbc.sp());
        EXPECT(0x3a80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 019E
        gbc.setState(0xb39d, 0xa0ef, 0xdbf0, 0xc942, 0xb3a5, 0x1c9f, 0x0, 0x1);
        gbc.writeMem(0xb39d, { 0x4c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa0ef, gbc.sp());
        EXPECT(0xb39e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb39d));
        // 4C 019F
        gbc.setState(0x3dec, 0x930, 0xf210, 0x99a7, 0xe78f, 0x9da, 0x1, 0x0);
        gbc.writeMem(0x3dec, { 0x4c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x930, gbc.sp());
        EXPECT(0x3ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 01A0
        gbc.setState(0xd790, 0x819b, 0x3340, 0xfb99, 0xa68f, 0xf293, 0x1, 0x1);
        gbc.writeMem(0xd790, { 0x4c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x819b, gbc.sp());
        EXPECT(0xd791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd790));
        // 4C 01A1
        gbc.setState(0xa106, 0x4025, 0x6b50, 0x694a, 0x2094, 0x3fc8, 0x1, 0x0);
        gbc.writeMem(0xa106, { 0x4c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4025, gbc.sp());
        EXPECT(0xa107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa106));
        // 4C 01A2
        gbc.setState(0x3c90, 0x3e44, 0xa3d0, 0x95f6, 0x4caf, 0x6592, 0x0, 0x0);
        gbc.writeMem(0x3c90, { 0x4c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3e44, gbc.sp());
        EXPECT(0x3c91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 01A3
        gbc.setState(0x7ca1, 0x5320, 0x11e0, 0x5824, 0xc043, 0x32b5, 0x1, 0x1);
        gbc.writeMem(0x7ca1, { 0x4c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5320, gbc.sp());
        EXPECT(0x7ca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01A4
        gbc.setState(0x540e, 0xe759, 0x8380, 0x7284, 0x90e9, 0x4d5c, 0x1, 0x1);
        gbc.writeMem(0x540e, { 0x4c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe759, gbc.sp());
        EXPECT(0x540f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01A5
        gbc.setState(0x65bf, 0x2214, 0x9530, 0xed2c, 0x46f5, 0x4f6c, 0x1, 0x1);
        gbc.writeMem(0x65bf, { 0x4c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2214, gbc.sp());
        EXPECT(0x65c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 01A6
        gbc.setState(0xc4ec, 0xae31, 0x3d30, 0x90c8, 0xf1f4, 0xaccd, 0x1, 0x0);
        gbc.writeMem(0xc4ec, { 0x4c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xae31, gbc.sp());
        EXPECT(0xc4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc4ec));
        // 4C 01A7
        gbc.setState(0x16fa, 0xc6d5, 0xdf60, 0xd8b3, 0x6c83, 0x906c, 0x1, 0x1);
        gbc.writeMem(0x16fa, { 0x4c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc6d5, gbc.sp());
        EXPECT(0x16fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01A8
        gbc.setState(0xb956, 0x2c04, 0xac60, 0xa4b7, 0xfba5, 0x849, 0x1, 0x1);
        gbc.writeMem(0xb956, { 0x4c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2c04, gbc.sp());
        EXPECT(0xb957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb956));
        // 4C 01A9
        gbc.setState(0xd18d, 0x4988, 0x4330, 0xcf59, 0xdda1, 0x2fcf, 0x0, 0x1);
        gbc.writeMem(0xd18d, { 0x4c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4988, gbc.sp());
        EXPECT(0xd18e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd18d));
        // 4C 01AA
        gbc.setState(0x3e2e, 0x8efb, 0xbca0, 0xda9b, 0x5b7f, 0xff8b, 0x0, 0x0);
        gbc.writeMem(0x3e2e, { 0x4c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8efb, gbc.sp());
        EXPECT(0x3e2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01AB
        gbc.setState(0x3e29, 0x2b55, 0xfa50, 0x99b0, 0x2a42, 0xa401, 0x1, 0x1);
        gbc.writeMem(0x3e29, { 0x4c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2b55, gbc.sp());
        EXPECT(0x3e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 01AC
        gbc.setState(0x7a0f, 0xc443, 0x87c0, 0x9a0c, 0x7c0f, 0x6b40, 0x0, 0x1);
        gbc.writeMem(0x7a0f, { 0x4c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc443, gbc.sp());
        EXPECT(0x7a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01AD
        gbc.setState(0xa28c, 0x3349, 0xbe60, 0xdca, 0x6a7e, 0xe98, 0x1, 0x1);
        gbc.writeMem(0xa28c, { 0x4c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3349, gbc.sp());
        EXPECT(0xa28d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa28c));
        // 4C 01AE
        gbc.setState(0x3277, 0x9f, 0x4520, 0xd764, 0x7bce, 0x6157, 0x0, 0x0);
        gbc.writeMem(0x3277, { 0x4c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9f, gbc.sp());
        EXPECT(0x3278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01AF
        gbc.setState(0x93e4, 0xbc3e, 0x40e0, 0xd7e, 0xe007, 0xd12f, 0x1, 0x1);
        gbc.writeMem(0x93e4, { 0x4c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbc3e, gbc.sp());
        EXPECT(0x93e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x93e4));
        // 4C 01B0
        gbc.setState(0x7e28, 0x89b8, 0x24c0, 0xf05f, 0xc280, 0xe7ae, 0x0, 0x0);
        gbc.writeMem(0x7e28, { 0x4c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x89b8, gbc.sp());
        EXPECT(0x7e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01B1
        gbc.setState(0x382a, 0xa8c3, 0x8240, 0x56aa, 0x189a, 0xf433, 0x0, 0x0);
        gbc.writeMem(0x382a, { 0x4c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa8c3, gbc.sp());
        EXPECT(0x382b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01B2
        gbc.setState(0xa323, 0x3330, 0x3ee0, 0x34d6, 0xdc8c, 0x4341, 0x1, 0x0);
        gbc.writeMem(0xa323, { 0x4c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3330, gbc.sp());
        EXPECT(0xa324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa323));
        // 4C 01B3
        gbc.setState(0xaa18, 0xc36f, 0x2490, 0xf7bb, 0x2ab4, 0xfd05, 0x0, 0x1);
        gbc.writeMem(0xaa18, { 0x4c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc36f, gbc.sp());
        EXPECT(0xaa19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xaa18));
        // 4C 01B4
        gbc.setState(0x3b57, 0x3c5e, 0xb7d0, 0x6d51, 0x5fe8, 0x9cf1, 0x1, 0x1);
        gbc.writeMem(0x3b57, { 0x4c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3c5e, gbc.sp());
        EXPECT(0x3b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 01B5
        gbc.setState(0x336d, 0xc0f, 0x22a0, 0xee4e, 0xdea1, 0xfe9e, 0x0, 0x0);
        gbc.writeMem(0x336d, { 0x4c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc0f, gbc.sp());
        EXPECT(0x336e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01B6
        gbc.setState(0x9339, 0x3338, 0x5f20, 0xe02d, 0x2303, 0x33dd, 0x1, 0x1);
        gbc.writeMem(0x9339, { 0x4c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3338, gbc.sp());
        EXPECT(0x933a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9339));
        // 4C 01B7
        gbc.setState(0x3f38, 0x1d58, 0xdad0, 0xdded, 0x35a8, 0x8304, 0x0, 0x1);
        gbc.writeMem(0x3f38, { 0x4c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1d58, gbc.sp());
        EXPECT(0x3f39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 01B8
        gbc.setState(0xdff0, 0x5f35, 0x9e00, 0x7d98, 0x9e38, 0x6139, 0x1, 0x1);
        gbc.writeMem(0xdff0, { 0x4c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5f35, gbc.sp());
        EXPECT(0xdff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdff0));
        // 4C 01B9
        gbc.setState(0xace8, 0xd1d7, 0xd850, 0x4f4a, 0x885b, 0xe350, 0x0, 0x1);
        gbc.writeMem(0xace8, { 0x4c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd1d7, gbc.sp());
        EXPECT(0xace9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xace8));
        // 4C 01BA
        gbc.setState(0xe680, 0x2b1a, 0x4870, 0x8d0a, 0xf803, 0x73d5, 0x1, 0x0);
        gbc.writeMem(0xe680, { 0x4c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2b1a, gbc.sp());
        EXPECT(0xe681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe680));
        // 4C 01BB
        gbc.setState(0xa440, 0x10d8, 0xa020, 0x5f65, 0xdbd0, 0x8751, 0x0, 0x1);
        gbc.writeMem(0xa440, { 0x4c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x10d8, gbc.sp());
        EXPECT(0xa441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa440));
        // 4C 01BC
        gbc.setState(0xdbc7, 0x9d45, 0x79a0, 0xcbff, 0xe998, 0xb0c0, 0x1, 0x1);
        gbc.writeMem(0xdbc7, { 0x4c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9d45, gbc.sp());
        EXPECT(0xdbc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdbc7));
        // 4C 01BD
        gbc.setState(0x2d6c, 0x68bb, 0x2c20, 0x3816, 0xa143, 0x6b71, 0x0, 0x0);
        gbc.writeMem(0x2d6c, { 0x4c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x68bb, gbc.sp());
        EXPECT(0x2d6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01BE
        gbc.setState(0x72bc, 0x935c, 0xa4d0, 0x2aab, 0x720e, 0xbfb5, 0x1, 0x0);
        gbc.writeMem(0x72bc, { 0x4c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x935c, gbc.sp());
        EXPECT(0x72bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 01BF
        gbc.setState(0xd3e3, 0xdedc, 0xf20, 0xf524, 0xf21e, 0xc5b4, 0x0, 0x0);
        gbc.writeMem(0xd3e3, { 0x4c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdedc, gbc.sp());
        EXPECT(0xd3e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd3e3));
        // 4C 01C0
        gbc.setState(0xc271, 0xf2a7, 0xc680, 0x573b, 0x6da6, 0x5f7e, 0x0, 0x0);
        gbc.writeMem(0xc271, { 0x4c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf2a7, gbc.sp());
        EXPECT(0xc272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc271));
        // 4C 01C1
        gbc.setState(0xb815, 0xb8dc, 0x70e0, 0xf494, 0x3307, 0x8120, 0x0, 0x1);
        gbc.writeMem(0xb815, { 0x4c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb8dc, gbc.sp());
        EXPECT(0xb816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb815));
        // 4C 01C2
        gbc.setState(0xc3bd, 0xfea8, 0x46a0, 0xe7b5, 0xa534, 0xff9a, 0x0, 0x0);
        gbc.writeMem(0xc3bd, { 0x4c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfea8, gbc.sp());
        EXPECT(0xc3be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc3bd));
        // 4C 01C3
        gbc.setState(0x4dc1, 0xe7be, 0x9680, 0xaab5, 0xde89, 0x42e4, 0x0, 0x0);
        gbc.writeMem(0x4dc1, { 0x4c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe7be, gbc.sp());
        EXPECT(0x4dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01C4
        gbc.setState(0xefea, 0x883c, 0x49c0, 0x6147, 0xb25d, 0xcaa6, 0x1, 0x0);
        gbc.writeMem(0xefea, { 0x4c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x883c, gbc.sp());
        EXPECT(0xefeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xefea));
        // 4C 01C5
        gbc.setState(0xcb95, 0x106f, 0xef20, 0x2577, 0xfd64, 0x1a4f, 0x0, 0x0);
        gbc.writeMem(0xcb95, { 0x4c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x106f, gbc.sp());
        EXPECT(0xcb96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcb95));
        // 4C 01C6
        gbc.setState(0x9d9f, 0xa3c0, 0xc810, 0xe335, 0x4814, 0x3c56, 0x0, 0x1);
        gbc.writeMem(0x9d9f, { 0x4c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa3c0, gbc.sp());
        EXPECT(0x9da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9d9f));
        // 4C 01C7
        gbc.setState(0xcdd9, 0x5650, 0xacc0, 0x7637, 0x7fef, 0x95ea, 0x0, 0x0);
        gbc.writeMem(0xcdd9, { 0x4c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5650, gbc.sp());
        EXPECT(0xcdda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcdd9));
        // 4C 01C8
        gbc.setState(0x4409, 0xe16d, 0x1130, 0x8aa5, 0x95d1, 0x48b3, 0x1, 0x1);
        gbc.writeMem(0x4409, { 0x4c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe16d, gbc.sp());
        EXPECT(0x440a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 01CC
        gbc.setState(0x1aee, 0x4b95, 0x8b50, 0x3b1d, 0x5d08, 0x5992, 0x0, 0x0);
        gbc.writeMem(0x1aee, { 0x4c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4b95, gbc.sp());
        EXPECT(0x1aef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 01CD
        gbc.setState(0x8f64, 0xe4f4, 0x3f90, 0x3529, 0x390b, 0x70ab, 0x0, 0x0);
        gbc.writeMem(0x8f64, { 0x4c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe4f4, gbc.sp());
        EXPECT(0x8f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8f64));
        // 4C 01CE
        gbc.setState(0xb48f, 0xebc, 0x3030, 0x8ba2, 0x6cba, 0x6c59, 0x1, 0x1);
        gbc.writeMem(0xb48f, { 0x4c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xebc, gbc.sp());
        EXPECT(0xb490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb48f));
        // 4C 01CF
        gbc.setState(0x72be, 0x525c, 0xcc20, 0xe8da, 0x66cc, 0x60ba, 0x1, 0x1);
        gbc.writeMem(0x72be, { 0x4c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x525c, gbc.sp());
        EXPECT(0x72bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01D1
        gbc.setState(0x7128, 0xd3c4, 0xeaf0, 0xc3a1, 0xee2b, 0xf72d, 0x1, 0x0);
        gbc.writeMem(0x7128, { 0x4c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd3c4, gbc.sp());
        EXPECT(0x7129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 01D2
        gbc.setState(0xcb6b, 0x97bf, 0xc730, 0x63ea, 0x1162, 0xa7ea, 0x1, 0x1);
        gbc.writeMem(0xcb6b, { 0x4c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x97bf, gbc.sp());
        EXPECT(0xcb6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcb6b));
        // 4C 01D3
        gbc.setState(0x68e8, 0x615, 0x64e0, 0x32f9, 0xe438, 0xf6bd, 0x1, 0x1);
        gbc.writeMem(0x68e8, { 0x4c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x615, gbc.sp());
        EXPECT(0x68e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01D4
        gbc.setState(0x779d, 0xb15b, 0x1110, 0x9321, 0x815d, 0x3629, 0x1, 0x0);
        gbc.writeMem(0x779d, { 0x4c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb15b, gbc.sp());
        EXPECT(0x779e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 01D5
        gbc.setState(0xaf68, 0xf516, 0xe190, 0x49f6, 0xd5f4, 0x6c1d, 0x0, 0x1);
        gbc.writeMem(0xaf68, { 0x4c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf516, gbc.sp());
        EXPECT(0xaf69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xaf68));
        // 4C 01D6
        gbc.setState(0x468e, 0x9f7d, 0xf800, 0xed1d, 0x28fd, 0x3f4a, 0x1, 0x1);
        gbc.writeMem(0x468e, { 0x4c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9f7d, gbc.sp());
        EXPECT(0x468f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01D7
        gbc.setState(0x978c, 0xb80d, 0x9b50, 0x268c, 0x89bb, 0x5117, 0x0, 0x1);
        gbc.writeMem(0x978c, { 0x4c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb80d, gbc.sp());
        EXPECT(0x978d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x978c));
        // 4C 01D8
        gbc.setState(0xe64e, 0x1576, 0xc70, 0xd07f, 0x8e63, 0x9cdc, 0x1, 0x1);
        gbc.writeMem(0xe64e, { 0x4c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1576, gbc.sp());
        EXPECT(0xe64f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe64e));
        // 4C 01D9
        gbc.setState(0xbcff, 0xf4dd, 0xc780, 0x7079, 0x8217, 0x71da, 0x1, 0x0);
        gbc.writeMem(0xbcff, { 0x4c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf4dd, gbc.sp());
        EXPECT(0xbd00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbcff));
        // 4C 01DA
        gbc.setState(0x31eb, 0x4989, 0x1540, 0x3415, 0x2a3f, 0x10a1, 0x1, 0x0);
        gbc.writeMem(0x31eb, { 0x4c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4989, gbc.sp());
        EXPECT(0x31ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01DB
        gbc.setState(0xda78, 0xb94a, 0x8320, 0x3987, 0xc93c, 0xe3db, 0x0, 0x0);
        gbc.writeMem(0xda78, { 0x4c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb94a, gbc.sp());
        EXPECT(0xda79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xda78));
        // 4C 01DC
        gbc.setState(0xea21, 0x778, 0x9110, 0x774a, 0xafc5, 0xa642, 0x0, 0x1);
        gbc.writeMem(0xea21, { 0x4c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x778, gbc.sp());
        EXPECT(0xea22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xea21));
        // 4C 01DE
        gbc.setState(0x755a, 0x961f, 0xb800, 0xa1ee, 0xe0b1, 0x13e6, 0x1, 0x0);
        gbc.writeMem(0x755a, { 0x4c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x961f, gbc.sp());
        EXPECT(0x755b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01DF
        gbc.setState(0x49fd, 0x162, 0xa4d0, 0xdc86, 0xcee6, 0x40d1, 0x1, 0x1);
        gbc.writeMem(0x49fd, { 0x4c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x162, gbc.sp());
        EXPECT(0x49fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 01E0
        gbc.setState(0xe747, 0x51ef, 0x6360, 0x60ad, 0x231e, 0xd2e5, 0x1, 0x0);
        gbc.writeMem(0xe747, { 0x4c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x51ef, gbc.sp());
        EXPECT(0xe748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe747));
        // 4C 01E1
        gbc.setState(0x47c4, 0x6395, 0x7670, 0x61b8, 0x9744, 0x7384, 0x0, 0x0);
        gbc.writeMem(0x47c4, { 0x4c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6395, gbc.sp());
        EXPECT(0x47c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 01E2
        gbc.setState(0x6619, 0x113c, 0x5640, 0xc474, 0x6525, 0xa03e, 0x0, 0x1);
        gbc.writeMem(0x6619, { 0x4c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x113c, gbc.sp());
        EXPECT(0x661a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01E3
        gbc.setState(0x13e, 0x7260, 0xacc0, 0xc707, 0x122c, 0x13d5, 0x0, 0x0);
        gbc.writeMem(0x13e, { 0x4c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7260, gbc.sp());
        EXPECT(0x13f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01E4
        gbc.setState(0xaa32, 0x15cd, 0x9840, 0x3940, 0x5040, 0x5613, 0x0, 0x0);
        gbc.writeMem(0xaa32, { 0x4c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x15cd, gbc.sp());
        EXPECT(0xaa33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xaa32));
        // 4C 01E5
        gbc.setState(0x254d, 0xfb27, 0x56a0, 0x9c33, 0x4467, 0x805a, 0x1, 0x0);
        gbc.writeMem(0x254d, { 0x4c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfb27, gbc.sp());
        EXPECT(0x254e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01E6
        gbc.setState(0x382c, 0xd4d0, 0xe1b0, 0xabfb, 0xd8fa, 0x3d43, 0x1, 0x1);
        gbc.writeMem(0x382c, { 0x4c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd4d0, gbc.sp());
        EXPECT(0x382d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 01E7
        gbc.setState(0x1741, 0xe102, 0xf7b0, 0x6e25, 0xe392, 0x6de8, 0x0, 0x0);
        gbc.writeMem(0x1741, { 0x4c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe102, gbc.sp());
        EXPECT(0x1742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 01E8
        gbc.setState(0xdd37, 0x3f03, 0xe790, 0xe66d, 0xba81, 0x55a5, 0x0, 0x1);
        gbc.writeMem(0xdd37, { 0x4c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3f03, gbc.sp());
        EXPECT(0xdd38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdd37));
        // 4C 01E9
        gbc.setState(0x55f1, 0xa00, 0x3880, 0xd9c3, 0x62e8, 0x8232, 0x1, 0x0);
        gbc.writeMem(0x55f1, { 0x4c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa00, gbc.sp());
        EXPECT(0x55f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01EA
        gbc.setState(0x7e3b, 0x6848, 0xee0, 0x14ec, 0x424f, 0xda24, 0x0, 0x1);
        gbc.writeMem(0x7e3b, { 0x4c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6848, gbc.sp());
        EXPECT(0x7e3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01EB
        gbc.setState(0x2957, 0x7371, 0x55f0, 0x6357, 0x382e, 0x906a, 0x0, 0x1);
        gbc.writeMem(0x2957, { 0x4c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7371, gbc.sp());
        EXPECT(0x2958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 01EC
        gbc.setState(0x2ba8, 0xd5ae, 0xc420, 0xb869, 0xf72c, 0x8290, 0x1, 0x1);
        gbc.writeMem(0x2ba8, { 0x4c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd5ae, gbc.sp());
        EXPECT(0x2ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01ED
        gbc.setState(0x9bf4, 0x9ce3, 0x4380, 0x37cf, 0xa705, 0xe445, 0x1, 0x0);
        gbc.writeMem(0x9bf4, { 0x4c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9ce3, gbc.sp());
        EXPECT(0x9bf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9bf4));
        // 4C 01EE
        gbc.setState(0x8a6f, 0xdfc4, 0x3230, 0x3a6e, 0xf8c2, 0x1746, 0x0, 0x0);
        gbc.writeMem(0x8a6f, { 0x4c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdfc4, gbc.sp());
        EXPECT(0x8a70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8a6f));
        // 4C 01EF
        gbc.setState(0x71ea, 0x991b, 0x64c0, 0x56b7, 0xb874, 0xc691, 0x1, 0x1);
        gbc.writeMem(0x71ea, { 0x4c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x991b, gbc.sp());
        EXPECT(0x71eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01F0
        gbc.setState(0x153d, 0x24e7, 0x4b50, 0x5c38, 0x2a97, 0x8277, 0x0, 0x0);
        gbc.writeMem(0x153d, { 0x4c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x24e7, gbc.sp());
        EXPECT(0x153e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 01F1
        gbc.setState(0x519f, 0x531e, 0xd5a0, 0x7447, 0xc3e5, 0x73a7, 0x0, 0x1);
        gbc.writeMem(0x519f, { 0x4c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x531e, gbc.sp());
        EXPECT(0x51a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01F2
        gbc.setState(0xcb29, 0xcb40, 0x7990, 0xd41d, 0xd13f, 0xfd43, 0x1, 0x1);
        gbc.writeMem(0xcb29, { 0x4c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcb40, gbc.sp());
        EXPECT(0xcb2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcb29));
        // 4C 01F3
        gbc.setState(0x5044, 0xe33c, 0x93b0, 0xe31, 0xfa48, 0xc3c3, 0x0, 0x0);
        gbc.writeMem(0x5044, { 0x4c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe33c, gbc.sp());
        EXPECT(0x5045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 01F4
        gbc.setState(0xb755, 0xc80f, 0x9da0, 0xd8da, 0x4a5a, 0xdf56, 0x0, 0x1);
        gbc.writeMem(0xb755, { 0x4c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc80f, gbc.sp());
        EXPECT(0xb756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb755));
        // 4C 01F5
        gbc.setState(0xc39c, 0xb7a5, 0x3c0, 0xf90a, 0x7687, 0x89e, 0x1, 0x1);
        gbc.writeMem(0xc39c, { 0x4c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb7a5, gbc.sp());
        EXPECT(0xc39d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc39c));
        // 4C 01F6
        gbc.setState(0x27fd, 0x3925, 0xb490, 0x15bd, 0x5f39, 0x578e, 0x0, 0x0);
        gbc.writeMem(0x27fd, { 0x4c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3925, gbc.sp());
        EXPECT(0x27fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 01F7
        gbc.setState(0xbc8c, 0x6f61, 0xeeb0, 0x33e4, 0xa65d, 0x9eca, 0x1, 0x0);
        gbc.writeMem(0xbc8c, { 0x4c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6f61, gbc.sp());
        EXPECT(0xbc8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbc8c));
        // 4C 01F8
        gbc.setState(0xafab, 0x574a, 0x4b10, 0x8579, 0x3c8a, 0xd153, 0x0, 0x0);
        gbc.writeMem(0xafab, { 0x4c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x574a, gbc.sp());
        EXPECT(0xafac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xafab));
        // 4C 01F9
        gbc.setState(0xa886, 0xc97b, 0xc8b0, 0xd814, 0xaee6, 0xb8c5, 0x1, 0x0);
        gbc.writeMem(0xa886, { 0x4c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc97b, gbc.sp());
        EXPECT(0xa887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa886));
        // 4C 01FA
        gbc.setState(0x18e4, 0x754a, 0xfe20, 0x443c, 0x2a1, 0x5aa8, 0x1, 0x0);
        gbc.writeMem(0x18e4, { 0x4c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x754a, gbc.sp());
        EXPECT(0x18e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01FB
        gbc.setState(0xba2e, 0xf627, 0xabd0, 0x27d8, 0x2190, 0x1721, 0x1, 0x0);
        gbc.writeMem(0xba2e, { 0x4c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf627, gbc.sp());
        EXPECT(0xba2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xba2e));
        // 4C 01FC
        gbc.setState(0xcefd, 0x907d, 0xe5d0, 0x33c4, 0xad1f, 0xb63f, 0x0, 0x0);
        gbc.writeMem(0xcefd, { 0x4c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x907d, gbc.sp());
        EXPECT(0xcefe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcefd));
        // 4C 01FD
        gbc.setState(0x831c, 0x4283, 0x2150, 0xa70, 0x77fb, 0xc547, 0x0, 0x0);
        gbc.writeMem(0x831c, { 0x4c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4283, gbc.sp());
        EXPECT(0x831d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x831c));
        // 4C 01FE
        gbc.setState(0x1661, 0xf285, 0xd540, 0xa0d1, 0xfb8f, 0x2cae, 0x0, 0x1);
        gbc.writeMem(0x1661, { 0x4c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf285, gbc.sp());
        EXPECT(0x1662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 01FF
        gbc.setState(0x4f24, 0x5362, 0x8c60, 0x3d55, 0x6de5, 0x7b7b, 0x1, 0x1);
        gbc.writeMem(0x4f24, { 0x4c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5362, gbc.sp());
        EXPECT(0x4f25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0200
        gbc.setState(0xd303, 0x110, 0xb080, 0x38a3, 0x745a, 0xbf67, 0x1, 0x0);
        gbc.writeMem(0xd303, { 0x4c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x110, gbc.sp());
        EXPECT(0xd304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd303));
        // 4C 0201
        gbc.setState(0x6442, 0x21f2, 0x3ab0, 0x5062, 0x980d, 0xc548, 0x0, 0x0);
        gbc.writeMem(0x6442, { 0x4c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x21f2, gbc.sp());
        EXPECT(0x6443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0202
        gbc.setState(0xae7a, 0x5421, 0x6af0, 0x6e19, 0xacde, 0xa8c3, 0x1, 0x1);
        gbc.writeMem(0xae7a, { 0x4c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5421, gbc.sp());
        EXPECT(0xae7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xae7a));
        // 4C 0203
        gbc.setState(0x24fd, 0x162a, 0x5c10, 0xb16b, 0x58e0, 0x3912, 0x0, 0x0);
        gbc.writeMem(0x24fd, { 0x4c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x162a, gbc.sp());
        EXPECT(0x24fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0204
        gbc.setState(0xcd82, 0x6861, 0x8620, 0x3579, 0x119e, 0x126e, 0x1, 0x1);
        gbc.writeMem(0xcd82, { 0x4c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6861, gbc.sp());
        EXPECT(0xcd83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcd82));
        // 4C 0205
        gbc.setState(0x93f8, 0xa6f, 0xd210, 0xc23b, 0xe801, 0x714b, 0x1, 0x0);
        gbc.writeMem(0x93f8, { 0x4c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa6f, gbc.sp());
        EXPECT(0x93f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x93f8));
        // 4C 0206
        gbc.setState(0x5c86, 0xd1c4, 0x6460, 0x9e19, 0x1ca7, 0x4902, 0x0, 0x1);
        gbc.writeMem(0x5c86, { 0x4c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd1c4, gbc.sp());
        EXPECT(0x5c87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0207
        gbc.setState(0x45c9, 0x3d89, 0xc2c0, 0x44f9, 0xc4d2, 0x7a4f, 0x1, 0x0);
        gbc.writeMem(0x45c9, { 0x4c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3d89, gbc.sp());
        EXPECT(0x45ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0208
        gbc.setState(0x9f40, 0x3886, 0x4f20, 0x35c, 0x5d28, 0x76fb, 0x1, 0x0);
        gbc.writeMem(0x9f40, { 0x4c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3886, gbc.sp());
        EXPECT(0x9f41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9f40));
        // 4C 0209
        gbc.setState(0xa1ef, 0x26de, 0x72f0, 0x78d5, 0x2128, 0x8478, 0x1, 0x1);
        gbc.writeMem(0xa1ef, { 0x4c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x26de, gbc.sp());
        EXPECT(0xa1f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa1ef));
        // 4C 020A
        gbc.setState(0x71db, 0xf5fb, 0x4050, 0x639c, 0xd932, 0xad7b, 0x1, 0x0);
        gbc.writeMem(0x71db, { 0x4c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf5fb, gbc.sp());
        EXPECT(0x71dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 020B
        gbc.setState(0x8e8c, 0x3811, 0x5d00, 0x145f, 0xcfe6, 0x3d16, 0x0, 0x1);
        gbc.writeMem(0x8e8c, { 0x4c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3811, gbc.sp());
        EXPECT(0x8e8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8e8c));
        // 4C 020C
        gbc.setState(0x1976, 0xc2ff, 0x4730, 0xa580, 0xecfd, 0x3348, 0x0, 0x0);
        gbc.writeMem(0x1976, { 0x4c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc2ff, gbc.sp());
        EXPECT(0x1977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 020D
        gbc.setState(0xc2fe, 0xb2d, 0xfd30, 0xd9cf, 0x61ee, 0xaf82, 0x1, 0x0);
        gbc.writeMem(0xc2fe, { 0x4c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb2d, gbc.sp());
        EXPECT(0xc2ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc2fe));
        // 4C 020E
        gbc.setState(0xd043, 0x1d7b, 0x6440, 0x760d, 0x40ec, 0xabc7, 0x0, 0x1);
        gbc.writeMem(0xd043, { 0x4c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1d7b, gbc.sp());
        EXPECT(0xd044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd043));
        // 4C 020F
        gbc.setState(0x1a2a, 0xae14, 0xdbb0, 0x3f5b, 0xf38c, 0x4eec, 0x0, 0x0);
        gbc.writeMem(0x1a2a, { 0x4c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xae14, gbc.sp());
        EXPECT(0x1a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0210
        gbc.setState(0xe9e8, 0x5334, 0x4110, 0x51ce, 0x688e, 0x77c5, 0x1, 0x0);
        gbc.writeMem(0xe9e8, { 0x4c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5334, gbc.sp());
        EXPECT(0xe9e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe9e8));
        // 4C 0211
        gbc.setState(0x4763, 0x6d5a, 0x9ba0, 0xc513, 0x57de, 0x5a97, 0x0, 0x0);
        gbc.writeMem(0x4763, { 0x4c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6d5a, gbc.sp());
        EXPECT(0x4764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0213
        gbc.setState(0x9107, 0xdb7f, 0x3200, 0xdf93, 0x4b28, 0x10c3, 0x0, 0x0);
        gbc.writeMem(0x9107, { 0x4c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdb7f, gbc.sp());
        EXPECT(0x9108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9107));
        // 4C 0214
        gbc.setState(0xa569, 0xa8b5, 0xe280, 0x906d, 0x595, 0x1649, 0x1, 0x0);
        gbc.writeMem(0xa569, { 0x4c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa8b5, gbc.sp());
        EXPECT(0xa56a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa569));
        // 4C 0215
        gbc.setState(0x8ffb, 0x4698, 0x8b30, 0x82f8, 0xfb4, 0xb1c3, 0x1, 0x0);
        gbc.writeMem(0x8ffb, { 0x4c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4698, gbc.sp());
        EXPECT(0x8ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8ffb));
        // 4C 0216
        gbc.setState(0xbac9, 0xdf58, 0xb1b0, 0xd71f, 0xf1b0, 0xf546, 0x0, 0x1);
        gbc.writeMem(0xbac9, { 0x4c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdf58, gbc.sp());
        EXPECT(0xbaca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbac9));
        // 4C 0217
        gbc.setState(0xa616, 0x8552, 0x3ee0, 0x24b, 0xf67f, 0x5a45, 0x0, 0x0);
        gbc.writeMem(0xa616, { 0x4c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8552, gbc.sp());
        EXPECT(0xa617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa616));
        // 4C 0218
        gbc.setState(0x200f, 0x8cfc, 0x1510, 0x5826, 0x4f62, 0x83a, 0x1, 0x1);
        gbc.writeMem(0x200f, { 0x4c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8cfc, gbc.sp());
        EXPECT(0x2010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0219
        gbc.setState(0x2489, 0x2cd1, 0x48a0, 0xc82, 0xb1ac, 0xf51c, 0x0, 0x1);
        gbc.writeMem(0x2489, { 0x4c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2cd1, gbc.sp());
        EXPECT(0x248a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 021A
        gbc.setState(0x8dc, 0x773e, 0xb450, 0xdd90, 0x89f, 0x658b, 0x0, 0x0);
        gbc.writeMem(0x8dc, { 0x4c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x773e, gbc.sp());
        EXPECT(0x8dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 021B
        gbc.setState(0x8eeb, 0x5479, 0x17e0, 0x45b0, 0xb1ee, 0xaf33, 0x1, 0x0);
        gbc.writeMem(0x8eeb, { 0x4c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5479, gbc.sp());
        EXPECT(0x8eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8eeb));
        // 4C 021C
        gbc.setState(0xa08c, 0xbe5d, 0xa740, 0x9fb9, 0xdd24, 0xa2e9, 0x1, 0x1);
        gbc.writeMem(0xa08c, { 0x4c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbe5d, gbc.sp());
        EXPECT(0xa08d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa08c));
        // 4C 021D
        gbc.setState(0xa45b, 0xd9c2, 0x9a90, 0xaee3, 0x1b6b, 0xec37, 0x1, 0x0);
        gbc.writeMem(0xa45b, { 0x4c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd9c2, gbc.sp());
        EXPECT(0xa45c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa45b));
        // 4C 021E
        gbc.setState(0xadf9, 0x6533, 0xd0b0, 0x10f7, 0x30d4, 0x852e, 0x0, 0x1);
        gbc.writeMem(0xadf9, { 0x4c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6533, gbc.sp());
        EXPECT(0xadfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xadf9));
        // 4C 021F
        gbc.setState(0x1780, 0x2ce6, 0x3570, 0xbb49, 0x8880, 0xee34, 0x0, 0x1);
        gbc.writeMem(0x1780, { 0x4c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2ce6, gbc.sp());
        EXPECT(0x1781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0220
        gbc.setState(0x2f32, 0x4f14, 0x5cf0, 0x211e, 0x3a51, 0x7ff7, 0x1, 0x0);
        gbc.writeMem(0x2f32, { 0x4c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4f14, gbc.sp());
        EXPECT(0x2f33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0221
        gbc.setState(0x56e0, 0xc09f, 0x7770, 0x53d2, 0xf431, 0xbde2, 0x0, 0x1);
        gbc.writeMem(0x56e0, { 0x4c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc09f, gbc.sp());
        EXPECT(0x56e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0222
        gbc.setState(0x478c, 0x81a, 0xd280, 0xcbcd, 0xf954, 0x8a34, 0x1, 0x0);
        gbc.writeMem(0x478c, { 0x4c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x81a, gbc.sp());
        EXPECT(0x478d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0223
        gbc.setState(0x78ab, 0x25c5, 0xb760, 0x55, 0xdbc3, 0xf32d, 0x1, 0x1);
        gbc.writeMem(0x78ab, { 0x4c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x25c5, gbc.sp());
        EXPECT(0x78ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0224
        gbc.setState(0x83f7, 0xb3be, 0xc8d0, 0x572d, 0x55f5, 0xe435, 0x0, 0x0);
        gbc.writeMem(0x83f7, { 0x4c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb3be, gbc.sp());
        EXPECT(0x83f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x83f7));
        // 4C 0225
        gbc.setState(0x285e, 0xa63, 0xdd20, 0x955e, 0xe7f4, 0x5a0f, 0x0, 0x0);
        gbc.writeMem(0x285e, { 0x4c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa63, gbc.sp());
        EXPECT(0x285f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0226
        gbc.setState(0x2cc7, 0x9f72, 0xaf20, 0x7f64, 0x68d7, 0xd415, 0x1, 0x0);
        gbc.writeMem(0x2cc7, { 0x4c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9f72, gbc.sp());
        EXPECT(0x2cc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0227
        gbc.setState(0x8d0e, 0x3e70, 0x2ef0, 0x8666, 0xe033, 0x3474, 0x1, 0x1);
        gbc.writeMem(0x8d0e, { 0x4c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3e70, gbc.sp());
        EXPECT(0x8d0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8d0e));
        // 4C 0228
        gbc.setState(0xb785, 0xb852, 0xe120, 0x35cd, 0xe6e6, 0x1054, 0x1, 0x1);
        gbc.writeMem(0xb785, { 0x4c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb852, gbc.sp());
        EXPECT(0xb786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb785));
        // 4C 0229
        gbc.setState(0xb037, 0x7e0f, 0x32d0, 0x1040, 0x3a87, 0x1ac8, 0x0, 0x0);
        gbc.writeMem(0xb037, { 0x4c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7e0f, gbc.sp());
        EXPECT(0xb038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb037));
        // 4C 022A
        gbc.setState(0x94c, 0x7f48, 0x2100, 0x3cd0, 0x22a4, 0x5506, 0x0, 0x0);
        gbc.writeMem(0x94c, { 0x4c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7f48, gbc.sp());
        EXPECT(0x94d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 022B
        gbc.setState(0xc054, 0xf3bb, 0x420, 0x93a4, 0xa407, 0x6f8b, 0x0, 0x1);
        gbc.writeMem(0xc054, { 0x4c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf3bb, gbc.sp());
        EXPECT(0xc055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc054));
        // 4C 022D
        gbc.setState(0x17f9, 0xfcea, 0x9bd0, 0x5cb, 0x3de7, 0x7b6e, 0x0, 0x0);
        gbc.writeMem(0x17f9, { 0x4c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfcea, gbc.sp());
        EXPECT(0x17fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 022E
        gbc.setState(0xcb33, 0x37ee, 0xa380, 0xd04e, 0x4f4f, 0xc708, 0x0, 0x1);
        gbc.writeMem(0xcb33, { 0x4c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x37ee, gbc.sp());
        EXPECT(0xcb34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcb33));
        // 4C 022F
        gbc.setState(0xa1f6, 0xd75, 0xa780, 0x817e, 0x5f2d, 0xdac6, 0x1, 0x0);
        gbc.writeMem(0xa1f6, { 0x4c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd75, gbc.sp());
        EXPECT(0xa1f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa1f6));
        // 4C 0230
        gbc.setState(0x2381, 0x4eb8, 0x3ef0, 0x2482, 0xedcf, 0x76b, 0x0, 0x1);
        gbc.writeMem(0x2381, { 0x4c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4eb8, gbc.sp());
        EXPECT(0x2382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0231
        gbc.setState(0xe13, 0x7218, 0x63b0, 0xc5b1, 0xe7a0, 0x6c76, 0x1, 0x0);
        gbc.writeMem(0xe13, { 0x4c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7218, gbc.sp());
        EXPECT(0xe14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0232
        gbc.setState(0x3151, 0xeda3, 0xd620, 0x74cf, 0xc81, 0x746b, 0x0, 0x1);
        gbc.writeMem(0x3151, { 0x4c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xeda3, gbc.sp());
        EXPECT(0x3152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0233
        gbc.setState(0x74c7, 0x9528, 0x1fc0, 0x7f02, 0x3992, 0x22b1, 0x0, 0x0);
        gbc.writeMem(0x74c7, { 0x4c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9528, gbc.sp());
        EXPECT(0x74c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0234
        gbc.setState(0xb0fa, 0x5b05, 0x88d0, 0xa220, 0xd, 0xff5b, 0x1, 0x1);
        gbc.writeMem(0xb0fa, { 0x4c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5b05, gbc.sp());
        EXPECT(0xb0fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb0fa));
        // 4C 0235
        gbc.setState(0x348f, 0xd853, 0xe840, 0xf936, 0xd985, 0xab57, 0x0, 0x0);
        gbc.writeMem(0x348f, { 0x4c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd853, gbc.sp());
        EXPECT(0x3490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0236
        gbc.setState(0xa5ab, 0xf8ec, 0xae30, 0x4e0, 0x8f51, 0x5a46, 0x0, 0x1);
        gbc.writeMem(0xa5ab, { 0x4c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf8ec, gbc.sp());
        EXPECT(0xa5ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa5ab));
        // 4C 0237
        gbc.setState(0x6ec8, 0xd7c4, 0x750, 0x1258, 0x2d7a, 0xc4e, 0x0, 0x1);
        gbc.writeMem(0x6ec8, { 0x4c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd7c4, gbc.sp());
        EXPECT(0x6ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0238
        gbc.setState(0x7e03, 0x86d9, 0x7bb0, 0x7396, 0xffa5, 0xce62, 0x1, 0x1);
        gbc.writeMem(0x7e03, { 0x4c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x86d9, gbc.sp());
        EXPECT(0x7e04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0239
        gbc.setState(0xbcf4, 0x5dd8, 0x5ce0, 0x2cce, 0x2667, 0xb6b7, 0x0, 0x1);
        gbc.writeMem(0xbcf4, { 0x4c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5dd8, gbc.sp());
        EXPECT(0xbcf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbcf4));
        // 4C 023A
        gbc.setState(0xa30a, 0xe6c, 0x2750, 0xdef3, 0xc97f, 0xbf88, 0x0, 0x1);
        gbc.writeMem(0xa30a, { 0x4c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe6c, gbc.sp());
        EXPECT(0xa30b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa30a));
        // 4C 023B
        gbc.setState(0x7353, 0xffd0, 0x89f0, 0x7da3, 0x954f, 0x9a3e, 0x1, 0x0);
        gbc.writeMem(0x7353, { 0x4c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xffd0, gbc.sp());
        EXPECT(0x7354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 023C
        gbc.setState(0x50e8, 0xc80f, 0x7290, 0x13ca, 0xac14, 0xca53, 0x0, 0x1);
        gbc.writeMem(0x50e8, { 0x4c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc80f, gbc.sp());
        EXPECT(0x50e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 023E
        gbc.setState(0x4d89, 0x4409, 0x9ec0, 0x7e0b, 0x1ed1, 0x65f5, 0x1, 0x1);
        gbc.writeMem(0x4d89, { 0x4c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4409, gbc.sp());
        EXPECT(0x4d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 023F
        gbc.setState(0xbf63, 0xe3f5, 0xa7a0, 0x6e0, 0x5f36, 0xebee, 0x1, 0x1);
        gbc.writeMem(0xbf63, { 0x4c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe3f5, gbc.sp());
        EXPECT(0xbf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbf63));
        // 4C 0240
        gbc.setState(0x93a2, 0xc2ab, 0x4190, 0xee61, 0xe62e, 0x6451, 0x0, 0x0);
        gbc.writeMem(0x93a2, { 0x4c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc2ab, gbc.sp());
        EXPECT(0x93a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x93a2));
        // 4C 0241
        gbc.setState(0x33f2, 0x7fec, 0x9a00, 0xbbf2, 0x281d, 0xc019, 0x0, 0x1);
        gbc.writeMem(0x33f2, { 0x4c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7fec, gbc.sp());
        EXPECT(0x33f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0242
        gbc.setState(0x8f74, 0x3e0d, 0xb460, 0x5b7, 0xd2e0, 0xf546, 0x1, 0x1);
        gbc.writeMem(0x8f74, { 0x4c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3e0d, gbc.sp());
        EXPECT(0x8f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8f74));
        // 4C 0243
        gbc.setState(0xa523, 0xf27a, 0xda90, 0xf303, 0xa7af, 0x6e00, 0x1, 0x0);
        gbc.writeMem(0xa523, { 0x4c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf27a, gbc.sp());
        EXPECT(0xa524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa523));
        // 4C 0245
        gbc.setState(0xbf22, 0x68f2, 0xf160, 0xc908, 0x5c86, 0x177, 0x0, 0x1);
        gbc.writeMem(0xbf22, { 0x4c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x68f2, gbc.sp());
        EXPECT(0xbf23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbf22));
        // 4C 0246
        gbc.setState(0xc5c0, 0x8e23, 0xcb90, 0xdd55, 0x770b, 0xc979, 0x1, 0x0);
        gbc.writeMem(0xc5c0, { 0x4c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8e23, gbc.sp());
        EXPECT(0xc5c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc5c0));
        // 4C 0247
        gbc.setState(0x7f7c, 0x759, 0x6110, 0xe431, 0x303d, 0x6f4c, 0x0, 0x1);
        gbc.writeMem(0x7f7c, { 0x4c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x759, gbc.sp());
        EXPECT(0x7f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0248
        gbc.setState(0xe3e3, 0xc123, 0x7520, 0x4e82, 0x4311, 0x94f6, 0x0, 0x1);
        gbc.writeMem(0xe3e3, { 0x4c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc123, gbc.sp());
        EXPECT(0xe3e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe3e3));
        // 4C 0249
        gbc.setState(0x89fa, 0x605c, 0x1200, 0xf3a7, 0x3951, 0x1252, 0x1, 0x0);
        gbc.writeMem(0x89fa, { 0x4c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x605c, gbc.sp());
        EXPECT(0x89fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x89fa));
        // 4C 024A
        gbc.setState(0x71b0, 0x7ceb, 0x1ff0, 0x2c8a, 0x9bd7, 0xb8ee, 0x1, 0x1);
        gbc.writeMem(0x71b0, { 0x4c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7ceb, gbc.sp());
        EXPECT(0x71b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 024B
        gbc.setState(0x94a9, 0x4d7c, 0xee60, 0xb812, 0x5fa1, 0xd58e, 0x1, 0x0);
        gbc.writeMem(0x94a9, { 0x4c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4d7c, gbc.sp());
        EXPECT(0x94aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x94a9));
        // 4C 024C
        gbc.setState(0x99c6, 0xd6fd, 0x7690, 0x3690, 0xc80d, 0xda8d, 0x0, 0x0);
        gbc.writeMem(0x99c6, { 0x4c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd6fd, gbc.sp());
        EXPECT(0x99c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x99c6));
        // 4C 024D
        gbc.setState(0x8d3, 0x86b8, 0xe820, 0x9a19, 0x5d0, 0x9f77, 0x0, 0x0);
        gbc.writeMem(0x8d3, { 0x4c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x86b8, gbc.sp());
        EXPECT(0x8d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 024E
        gbc.setState(0x1657, 0xe595, 0x53d0, 0x576e, 0x1231, 0x58d7, 0x1, 0x1);
        gbc.writeMem(0x1657, { 0x4c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe595, gbc.sp());
        EXPECT(0x1658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 024F
        gbc.setState(0xa768, 0xdc37, 0xfb00, 0xc7da, 0xdeb9, 0xc3b7, 0x0, 0x1);
        gbc.writeMem(0xa768, { 0x4c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdc37, gbc.sp());
        EXPECT(0xa769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa768));
        // 4C 0250
        gbc.setState(0x25f1, 0xa2bc, 0xa470, 0xf818, 0xbb14, 0x25bd, 0x0, 0x0);
        gbc.writeMem(0x25f1, { 0x4c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa2bc, gbc.sp());
        EXPECT(0x25f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0251
        gbc.setState(0xcc21, 0xe7bd, 0xee10, 0x791b, 0xef0b, 0x837, 0x1, 0x1);
        gbc.writeMem(0xcc21, { 0x4c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe7bd, gbc.sp());
        EXPECT(0xcc22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcc21));
        // 4C 0252
        gbc.setState(0x171b, 0xff16, 0xaf00, 0x704e, 0xa609, 0x61dc, 0x1, 0x1);
        gbc.writeMem(0x171b, { 0x4c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xff16, gbc.sp());
        EXPECT(0x171c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0253
        gbc.setState(0xc45, 0xebb9, 0x68a0, 0xeaba, 0x59c3, 0xa109, 0x0, 0x0);
        gbc.writeMem(0xc45, { 0x4c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xebb9, gbc.sp());
        EXPECT(0xc46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0254
        gbc.setState(0xa9c9, 0x9c8a, 0x31a0, 0xa6ed, 0xf9d6, 0xf629, 0x1, 0x0);
        gbc.writeMem(0xa9c9, { 0x4c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9c8a, gbc.sp());
        EXPECT(0xa9ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa9c9));
        // 4C 0255
        gbc.setState(0x673f, 0x7825, 0x14d0, 0xa791, 0x21ab, 0xeb8e, 0x0, 0x0);
        gbc.writeMem(0x673f, { 0x4c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7825, gbc.sp());
        EXPECT(0x6740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0256
        gbc.setState(0x4413, 0xcbf, 0x4800, 0x4c85, 0x1054, 0x2a6f, 0x1, 0x0);
        gbc.writeMem(0x4413, { 0x4c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcbf, gbc.sp());
        EXPECT(0x4414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0257
        gbc.setState(0xa7f2, 0x4bd0, 0xbbb0, 0xc2bd, 0xebc7, 0xb995, 0x0, 0x1);
        gbc.writeMem(0xa7f2, { 0x4c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4bd0, gbc.sp());
        EXPECT(0xa7f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa7f2));
        // 4C 0258
        gbc.setState(0x1fdc, 0x70fd, 0xdfa0, 0x4818, 0xc76c, 0x5431, 0x1, 0x0);
        gbc.writeMem(0x1fdc, { 0x4c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x70fd, gbc.sp());
        EXPECT(0x1fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0259
        gbc.setState(0xcc11, 0x33b8, 0xe630, 0x1ddf, 0xdc4e, 0xbb6b, 0x0, 0x1);
        gbc.writeMem(0xcc11, { 0x4c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x33b8, gbc.sp());
        EXPECT(0xcc12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcc11));
        // 4C 025A
        gbc.setState(0xee30, 0xf4ce, 0x18c0, 0x748b, 0xa006, 0xf72b, 0x1, 0x0);
        gbc.writeMem(0xee30, { 0x4c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf4ce, gbc.sp());
        EXPECT(0xee31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xee30));
        // 4C 025C
        gbc.setState(0x935a, 0x1f88, 0x11c0, 0x9a53, 0x3c42, 0x8d6b, 0x1, 0x0);
        gbc.writeMem(0x935a, { 0x4c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1f88, gbc.sp());
        EXPECT(0x935b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x935a));
        // 4C 025D
        gbc.setState(0xefc4, 0x27c5, 0x6640, 0x8363, 0xc927, 0xa665, 0x0, 0x0);
        gbc.writeMem(0xefc4, { 0x4c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x27c5, gbc.sp());
        EXPECT(0xefc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xefc4));
        // 4C 025E
        gbc.setState(0x7e81, 0x2c85, 0xd6e0, 0xe383, 0x44b, 0xaefb, 0x0, 0x0);
        gbc.writeMem(0x7e81, { 0x4c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2c85, gbc.sp());
        EXPECT(0x7e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 025F
        gbc.setState(0xd2a7, 0x2511, 0xd660, 0xfaa7, 0x60e9, 0x5d57, 0x1, 0x1);
        gbc.writeMem(0xd2a7, { 0x4c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2511, gbc.sp());
        EXPECT(0xd2a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd2a7));
        // 4C 0261
        gbc.setState(0xa43d, 0x647d, 0x60a0, 0xd3f7, 0x1e20, 0xf825, 0x0, 0x1);
        gbc.writeMem(0xa43d, { 0x4c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x647d, gbc.sp());
        EXPECT(0xa43e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa43d));
        // 4C 0262
        gbc.setState(0xa98d, 0xfc33, 0xefc0, 0x592b, 0x29ca, 0xe0ce, 0x1, 0x1);
        gbc.writeMem(0xa98d, { 0x4c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfc33, gbc.sp());
        EXPECT(0xa98e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa98d));
        // 4C 0263
        gbc.setState(0x7963, 0x88ef, 0x48a0, 0xafb4, 0x453f, 0xe13a, 0x0, 0x1);
        gbc.writeMem(0x7963, { 0x4c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x88ef, gbc.sp());
        EXPECT(0x7964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0264
        gbc.setState(0xaf32, 0x4c95, 0x7da0, 0xc3a6, 0x604, 0x139e, 0x0, 0x1);
        gbc.writeMem(0xaf32, { 0x4c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4c95, gbc.sp());
        EXPECT(0xaf33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xaf32));
        // 4C 0265
        gbc.setState(0x1f96, 0x3f5b, 0x7dd0, 0xae20, 0x843, 0x9c0b, 0x1, 0x0);
        gbc.writeMem(0x1f96, { 0x4c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3f5b, gbc.sp());
        EXPECT(0x1f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0266
        gbc.setState(0xcb3, 0x403d, 0x75f0, 0xff8c, 0x5c57, 0x44c8, 0x1, 0x0);
        gbc.writeMem(0xcb3, { 0x4c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x403d, gbc.sp());
        EXPECT(0xcb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0267
        gbc.setState(0x90d1, 0xd816, 0x8830, 0x8a1c, 0x1cce, 0x64f7, 0x1, 0x1);
        gbc.writeMem(0x90d1, { 0x4c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd816, gbc.sp());
        EXPECT(0x90d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x90d1));
        // 4C 0268
        gbc.setState(0xa3e5, 0x68c1, 0xb2f0, 0x74fb, 0xf85, 0x1cb2, 0x1, 0x1);
        gbc.writeMem(0xa3e5, { 0x4c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x68c1, gbc.sp());
        EXPECT(0xa3e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa3e5));
        // 4C 0269
        gbc.setState(0xef30, 0x1db5, 0xe850, 0x712c, 0xd08b, 0x7073, 0x1, 0x1);
        gbc.writeMem(0xef30, { 0x4c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1db5, gbc.sp());
        EXPECT(0xef31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xef30));
        // 4C 026A
        gbc.setState(0xafcf, 0x6a, 0xa350, 0xc8a5, 0x2128, 0xd5f0, 0x0, 0x0);
        gbc.writeMem(0xafcf, { 0x4c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6a, gbc.sp());
        EXPECT(0xafd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xafcf));
        // 4C 026B
        gbc.setState(0x8d90, 0x3e14, 0x6e00, 0xfa16, 0xd120, 0xfe87, 0x0, 0x1);
        gbc.writeMem(0x8d90, { 0x4c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3e14, gbc.sp());
        EXPECT(0x8d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8d90));
        // 4C 026C
        gbc.setState(0xb5ee, 0x8bd4, 0xfa20, 0xfdcc, 0xe9ab, 0x2175, 0x0, 0x1);
        gbc.writeMem(0xb5ee, { 0x4c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8bd4, gbc.sp());
        EXPECT(0xb5ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb5ee));
        // 4C 026D
        gbc.setState(0xbf41, 0x5c84, 0x1750, 0x8545, 0x4ec2, 0x27cb, 0x1, 0x0);
        gbc.writeMem(0xbf41, { 0x4c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5c84, gbc.sp());
        EXPECT(0xbf42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbf41));
        // 4C 026E
        gbc.setState(0x9ef1, 0x3144, 0xf290, 0x5e29, 0xadf9, 0x36ad, 0x0, 0x0);
        gbc.writeMem(0x9ef1, { 0x4c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3144, gbc.sp());
        EXPECT(0x9ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9ef1));
        // 4C 026F
        gbc.setState(0x1cd1, 0x6fd1, 0x6f60, 0x80a4, 0xa2e9, 0xa811, 0x1, 0x1);
        gbc.writeMem(0x1cd1, { 0x4c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6fd1, gbc.sp());
        EXPECT(0x1cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0271
        gbc.setState(0x40b, 0xa5ee, 0x66a0, 0xa443, 0xf511, 0xf26f, 0x1, 0x0);
        gbc.writeMem(0x40b, { 0x4c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa5ee, gbc.sp());
        EXPECT(0x40c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0272
        gbc.setState(0xd0bd, 0xbbb5, 0x96d0, 0xd7a1, 0x3c64, 0xee21, 0x0, 0x1);
        gbc.writeMem(0xd0bd, { 0x4c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbbb5, gbc.sp());
        EXPECT(0xd0be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd0bd));
        // 4C 0273
        gbc.setState(0x5f21, 0x8dc8, 0xe3b0, 0xad45, 0x5797, 0xfe0c, 0x1, 0x0);
        gbc.writeMem(0x5f21, { 0x4c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8dc8, gbc.sp());
        EXPECT(0x5f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0274
        gbc.setState(0xbcd1, 0x64d, 0x53d0, 0x2105, 0x2f5, 0x5c84, 0x0, 0x0);
        gbc.writeMem(0xbcd1, { 0x4c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x64d, gbc.sp());
        EXPECT(0xbcd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbcd1));
        // 4C 0275
        gbc.setState(0x38c2, 0x160, 0xd780, 0x2ac6, 0x2014, 0x574b, 0x0, 0x0);
        gbc.writeMem(0x38c2, { 0x4c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x160, gbc.sp());
        EXPECT(0x38c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0276
        gbc.setState(0xc5b6, 0x2853, 0xc570, 0xf6bb, 0xa68, 0xa029, 0x1, 0x0);
        gbc.writeMem(0xc5b6, { 0x4c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2853, gbc.sp());
        EXPECT(0xc5b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc5b6));
        // 4C 0277
        gbc.setState(0x5595, 0x5db7, 0xdb90, 0x717b, 0xfd48, 0x1964, 0x0, 0x1);
        gbc.writeMem(0x5595, { 0x4c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5db7, gbc.sp());
        EXPECT(0x5596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0278
        gbc.setState(0xe7cd, 0xc54e, 0x43a0, 0xdad9, 0xc372, 0xe8f6, 0x1, 0x1);
        gbc.writeMem(0xe7cd, { 0x4c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc54e, gbc.sp());
        EXPECT(0xe7ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe7cd));
        // 4C 0279
        gbc.setState(0xb8c7, 0x6484, 0xb4b0, 0x13da, 0xaba6, 0x809, 0x0, 0x1);
        gbc.writeMem(0xb8c7, { 0x4c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6484, gbc.sp());
        EXPECT(0xb8c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb8c7));
        // 4C 027B
        gbc.setState(0x80e6, 0x1130, 0xa680, 0x247f, 0x7f2c, 0x721b, 0x0, 0x1);
        gbc.writeMem(0x80e6, { 0x4c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1130, gbc.sp());
        EXPECT(0x80e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x80e6));
        // 4C 027C
        gbc.setState(0xb35b, 0x5c1d, 0x54d0, 0xf5d0, 0x2a06, 0xf787, 0x1, 0x0);
        gbc.writeMem(0xb35b, { 0x4c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5c1d, gbc.sp());
        EXPECT(0xb35c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb35b));
        // 4C 027D
        gbc.setState(0x8325, 0x82d5, 0x9380, 0x5598, 0x9c07, 0x2c4, 0x1, 0x1);
        gbc.writeMem(0x8325, { 0x4c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x82d5, gbc.sp());
        EXPECT(0x8326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8325));
        // 4C 027E
        gbc.setState(0x7f09, 0x63d0, 0x6700, 0x6bfe, 0xaadd, 0x39f2, 0x0, 0x1);
        gbc.writeMem(0x7f09, { 0x4c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x63d0, gbc.sp());
        EXPECT(0x7f0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 027F
        gbc.setState(0x4c67, 0x9d71, 0x21b0, 0x7757, 0x2249, 0x8a8c, 0x0, 0x1);
        gbc.writeMem(0x4c67, { 0x4c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9d71, gbc.sp());
        EXPECT(0x4c68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0280
        gbc.setState(0x34b1, 0xd66f, 0x7450, 0xa921, 0x90ef, 0x44eb, 0x0, 0x1);
        gbc.writeMem(0x34b1, { 0x4c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd66f, gbc.sp());
        EXPECT(0x34b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0281
        gbc.setState(0x16d3, 0x4d6a, 0xcae0, 0x61d6, 0x6dba, 0x312a, 0x0, 0x1);
        gbc.writeMem(0x16d3, { 0x4c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4d6a, gbc.sp());
        EXPECT(0x16d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0283
        gbc.setState(0x84c, 0x1362, 0x1580, 0x7c6c, 0x7769, 0x2e95, 0x0, 0x0);
        gbc.writeMem(0x84c, { 0x4c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1362, gbc.sp());
        EXPECT(0x84d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0284
        gbc.setState(0x751d, 0x7f1b, 0x9990, 0x8181, 0x8391, 0x402e, 0x1, 0x1);
        gbc.writeMem(0x751d, { 0x4c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7f1b, gbc.sp());
        EXPECT(0x751e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0285
        gbc.setState(0x45d8, 0x23e4, 0x4d80, 0xe842, 0x1a0c, 0xbaca, 0x0, 0x0);
        gbc.writeMem(0x45d8, { 0x4c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x23e4, gbc.sp());
        EXPECT(0x45d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0286
        gbc.setState(0xb140, 0x72d2, 0x1740, 0x497b, 0xef28, 0x5f07, 0x1, 0x0);
        gbc.writeMem(0xb140, { 0x4c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x72d2, gbc.sp());
        EXPECT(0xb141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb140));
        // 4C 0287
        gbc.setState(0x69d7, 0x5c86, 0x31f0, 0xff49, 0x12ff, 0xc81f, 0x0, 0x0);
        gbc.writeMem(0x69d7, { 0x4c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5c86, gbc.sp());
        EXPECT(0x69d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0288
        gbc.setState(0x3776, 0x6624, 0x2330, 0xcf63, 0x9e15, 0x3ae6, 0x1, 0x1);
        gbc.writeMem(0x3776, { 0x4c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6624, gbc.sp());
        EXPECT(0x3777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0289
        gbc.setState(0x2088, 0x5a57, 0x7280, 0x15f3, 0xfbf8, 0x83ed, 0x1, 0x0);
        gbc.writeMem(0x2088, { 0x4c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5a57, gbc.sp());
        EXPECT(0x2089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 028A
        gbc.setState(0xa83c, 0x394d, 0xa1d0, 0x6709, 0x5880, 0x296d, 0x0, 0x0);
        gbc.writeMem(0xa83c, { 0x4c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x394d, gbc.sp());
        EXPECT(0xa83d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa83c));
        // 4C 028B
        gbc.setState(0xbe97, 0x71bd, 0x4ef0, 0x4f, 0xeaf7, 0x250f, 0x0, 0x1);
        gbc.writeMem(0xbe97, { 0x4c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x71bd, gbc.sp());
        EXPECT(0xbe98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbe97));
        // 4C 028C
        gbc.setState(0xbf15, 0x3db6, 0x94e0, 0xac37, 0xa42d, 0x7d36, 0x1, 0x0);
        gbc.writeMem(0xbf15, { 0x4c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3db6, gbc.sp());
        EXPECT(0xbf16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbf15));
        // 4C 028D
        gbc.setState(0xb6c9, 0x2127, 0x3af0, 0x68e2, 0x59a6, 0x251e, 0x0, 0x0);
        gbc.writeMem(0xb6c9, { 0x4c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2127, gbc.sp());
        EXPECT(0xb6ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb6c9));
        // 4C 028E
        gbc.setState(0xa04a, 0xa73c, 0x7670, 0x4773, 0x4c3c, 0x5878, 0x0, 0x1);
        gbc.writeMem(0xa04a, { 0x4c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa73c, gbc.sp());
        EXPECT(0xa04b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa04a));
        // 4C 028F
        gbc.setState(0x985d, 0x2ddd, 0xe560, 0xca9c, 0xee5d, 0x6984, 0x1, 0x0);
        gbc.writeMem(0x985d, { 0x4c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2ddd, gbc.sp());
        EXPECT(0x985e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x985d));
        // 4C 0290
        gbc.setState(0x483b, 0x5cc7, 0x2960, 0x496a, 0xc6d6, 0xa416, 0x1, 0x1);
        gbc.writeMem(0x483b, { 0x4c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5cc7, gbc.sp());
        EXPECT(0x483c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0291
        gbc.setState(0x8db7, 0x30bc, 0x6130, 0x1726, 0x6868, 0x86d6, 0x0, 0x0);
        gbc.writeMem(0x8db7, { 0x4c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x30bc, gbc.sp());
        EXPECT(0x8db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8db7));
        // 4C 0292
        gbc.setState(0xd827, 0x95d4, 0x7cb0, 0x7c1d, 0x4f8b, 0x92c1, 0x0, 0x1);
        gbc.writeMem(0xd827, { 0x4c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x95d4, gbc.sp());
        EXPECT(0xd828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd827));
        // 4C 0293
        gbc.setState(0xe627, 0xb41e, 0x580, 0x11d9, 0xe614, 0x77d, 0x0, 0x1);
        gbc.writeMem(0xe627, { 0x4c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb41e, gbc.sp());
        EXPECT(0xe628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe627));
        // 4C 0294
        gbc.setState(0x9afa, 0xff74, 0xf720, 0x75bd, 0x7193, 0x8219, 0x1, 0x1);
        gbc.writeMem(0x9afa, { 0x4c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xff74, gbc.sp());
        EXPECT(0x9afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9afa));
        // 4C 0295
        gbc.setState(0xb80d, 0xe27e, 0xf4a0, 0xc65c, 0xf722, 0x56b, 0x0, 0x1);
        gbc.writeMem(0xb80d, { 0x4c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe27e, gbc.sp());
        EXPECT(0xb80e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb80d));
        // 4C 0296
        gbc.setState(0xb4b1, 0xbe0, 0xe0a0, 0xd8fd, 0x5b88, 0xd110, 0x0, 0x1);
        gbc.writeMem(0xb4b1, { 0x4c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xbe0, gbc.sp());
        EXPECT(0xb4b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb4b1));
        // 4C 0297
        gbc.setState(0x5624, 0xc8d4, 0xa2a0, 0x1fb8, 0x587b, 0x2b8d, 0x1, 0x0);
        gbc.writeMem(0x5624, { 0x4c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc8d4, gbc.sp());
        EXPECT(0x5625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0299
        gbc.setState(0x2e34, 0xf108, 0x93e0, 0x3dbe, 0xf595, 0xf402, 0x1, 0x1);
        gbc.writeMem(0x2e34, { 0x4c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf108, gbc.sp());
        EXPECT(0x2e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 029A
        gbc.setState(0x5c79, 0x3da2, 0x9c60, 0xe2d1, 0x9bfc, 0x2770, 0x1, 0x0);
        gbc.writeMem(0x5c79, { 0x4c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3da2, gbc.sp());
        EXPECT(0x5c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 029B
        gbc.setState(0x7584, 0x3ad6, 0x88d0, 0x1d9e, 0x25c5, 0xd838, 0x1, 0x1);
        gbc.writeMem(0x7584, { 0x4c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3ad6, gbc.sp());
        EXPECT(0x7585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 029C
        gbc.setState(0xc62d, 0x1344, 0x2080, 0xb84e, 0xf933, 0xf2f1, 0x1, 0x1);
        gbc.writeMem(0xc62d, { 0x4c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1344, gbc.sp());
        EXPECT(0xc62e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc62d));
        // 4C 029D
        gbc.setState(0x325f, 0x91fd, 0x83b0, 0xaa0d, 0x5891, 0xc0f3, 0x1, 0x1);
        gbc.writeMem(0x325f, { 0x4c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x91fd, gbc.sp());
        EXPECT(0x3260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 029E
        gbc.setState(0xc5ae, 0x1a83, 0xff10, 0x75fa, 0x6b4e, 0x2e4c, 0x1, 0x1);
        gbc.writeMem(0xc5ae, { 0x4c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1a83, gbc.sp());
        EXPECT(0xc5af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc5ae));
        // 4C 029F
        gbc.setState(0xbc57, 0x4cfc, 0xbfe0, 0x3eee, 0x72a5, 0xdaaf, 0x1, 0x1);
        gbc.writeMem(0xbc57, { 0x4c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4cfc, gbc.sp());
        EXPECT(0xbc58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbc57));
        // 4C 02A0
        gbc.setState(0xeb89, 0x7865, 0xe120, 0x4fdd, 0x90f0, 0x83b6, 0x1, 0x0);
        gbc.writeMem(0xeb89, { 0x4c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7865, gbc.sp());
        EXPECT(0xeb8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xeb89));
        // 4C 02A1
        gbc.setState(0x1301, 0xd54f, 0x4150, 0x1e7, 0xf9c7, 0x330d, 0x1, 0x0);
        gbc.writeMem(0x1301, { 0x4c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd54f, gbc.sp());
        EXPECT(0x1302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02A3
        gbc.setState(0xc936, 0xec3b, 0x2160, 0xc497, 0x27d3, 0xbfd8, 0x0, 0x1);
        gbc.writeMem(0xc936, { 0x4c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xec3b, gbc.sp());
        EXPECT(0xc937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc936));
        // 4C 02A4
        gbc.setState(0x7253, 0x3c1b, 0xb6d0, 0x7c65, 0xef36, 0x518c, 0x0, 0x0);
        gbc.writeMem(0x7253, { 0x4c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3c1b, gbc.sp());
        EXPECT(0x7254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02A5
        gbc.setState(0x6324, 0x4aaa, 0xbf80, 0x1bd5, 0x98e9, 0x7f16, 0x0, 0x0);
        gbc.writeMem(0x6324, { 0x4c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4aaa, gbc.sp());
        EXPECT(0x6325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 02A6
        gbc.setState(0x1209, 0x9357, 0x6750, 0x59fa, 0xaeb5, 0x2217, 0x1, 0x0);
        gbc.writeMem(0x1209, { 0x4c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9357, gbc.sp());
        EXPECT(0x120a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02A8
        gbc.setState(0x922d, 0x1ad6, 0x1100, 0xe069, 0x4c67, 0x9b36, 0x1, 0x1);
        gbc.writeMem(0x922d, { 0x4c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1ad6, gbc.sp());
        EXPECT(0x922e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x922d));
        // 4C 02A9
        gbc.setState(0x9e01, 0xe2d0, 0xd640, 0xa15d, 0x4bd5, 0x981c, 0x0, 0x1);
        gbc.writeMem(0x9e01, { 0x4c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe2d0, gbc.sp());
        EXPECT(0x9e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9e01));
        // 4C 02AA
        gbc.setState(0x6f2d, 0xc515, 0x2ab0, 0xdde7, 0x700, 0xebac, 0x1, 0x1);
        gbc.writeMem(0x6f2d, { 0x4c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc515, gbc.sp());
        EXPECT(0x6f2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02AB
        gbc.setState(0x36cd, 0xcfa3, 0xe8d0, 0x6861, 0x15dd, 0x8bf9, 0x1, 0x1);
        gbc.writeMem(0x36cd, { 0x4c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xcfa3, gbc.sp());
        EXPECT(0x36ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02AC
        gbc.setState(0xbe35, 0x7eb6, 0xfd30, 0x2023, 0x6921, 0x97e0, 0x0, 0x1);
        gbc.writeMem(0xbe35, { 0x4c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7eb6, gbc.sp());
        EXPECT(0xbe36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbe35));
        // 4C 02AD
        gbc.setState(0x4646, 0xde9a, 0x37d0, 0x9980, 0xc689, 0xd413, 0x0, 0x1);
        gbc.writeMem(0x4646, { 0x4c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xde9a, gbc.sp());
        EXPECT(0x4647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02AE
        gbc.setState(0xef40, 0x611d, 0x26d0, 0x73c5, 0x71c3, 0x76b7, 0x1, 0x1);
        gbc.writeMem(0xef40, { 0x4c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x611d, gbc.sp());
        EXPECT(0xef41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xef40));
        // 4C 02AF
        gbc.setState(0x23ec, 0xfec7, 0x3220, 0xee0d, 0xa6c2, 0xc8d, 0x0, 0x1);
        gbc.writeMem(0x23ec, { 0x4c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xfec7, gbc.sp());
        EXPECT(0x23ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 02B0
        gbc.setState(0xdb90, 0x3955, 0x75b0, 0x3d9, 0x2eeb, 0x2f46, 0x1, 0x0);
        gbc.writeMem(0xdb90, { 0x4c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3955, gbc.sp());
        EXPECT(0xdb91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdb90));
        // 4C 02B1
        gbc.setState(0x9869, 0x6e80, 0xe710, 0x4c4f, 0x98aa, 0x8b9e, 0x1, 0x0);
        gbc.writeMem(0x9869, { 0x4c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6e80, gbc.sp());
        EXPECT(0x986a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9869));
        // 4C 02B2
        gbc.setState(0x53a2, 0x1ddd, 0x8ab0, 0xfd9b, 0xaa4e, 0x880c, 0x1, 0x1);
        gbc.writeMem(0x53a2, { 0x4c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1ddd, gbc.sp());
        EXPECT(0x53a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02B4
        gbc.setState(0x4c78, 0xebd4, 0x1d20, 0xefed, 0x719f, 0x23c7, 0x1, 0x1);
        gbc.writeMem(0x4c78, { 0x4c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xebd4, gbc.sp());
        EXPECT(0x4c79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 02B5
        gbc.setState(0x99e1, 0x5120, 0x37a0, 0xee6f, 0xd3d0, 0xe582, 0x0, 0x0);
        gbc.writeMem(0x99e1, { 0x4c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5120, gbc.sp());
        EXPECT(0x99e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x99e1));
        // 4C 02B6
        gbc.setState(0x5050, 0x24d5, 0xa690, 0x9174, 0xde6b, 0x199f, 0x1, 0x1);
        gbc.writeMem(0x5050, { 0x4c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x24d5, gbc.sp());
        EXPECT(0x5051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02B7
        gbc.setState(0x8cdf, 0xf882, 0x5fe0, 0x12b9, 0x278b, 0xec75, 0x0, 0x0);
        gbc.writeMem(0x8cdf, { 0x4c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf882, gbc.sp());
        EXPECT(0x8ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8cdf));
        // 4C 02B8
        gbc.setState(0xd1a4, 0xcb4a, 0xe100, 0xf35d, 0x4fe1, 0xb880, 0x0, 0x0);
        gbc.writeMem(0xd1a4, { 0x4c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xcb4a, gbc.sp());
        EXPECT(0xd1a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd1a4));
        // 4C 02B9
        gbc.setState(0x139b, 0x8bfb, 0x58a0, 0x7d9a, 0x8100, 0x5e73, 0x1, 0x0);
        gbc.writeMem(0x139b, { 0x4c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8bfb, gbc.sp());
        EXPECT(0x139c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 02BB
        gbc.setState(0x7dfe, 0x4be7, 0x3090, 0xf5c2, 0xaa0e, 0x1cdc, 0x1, 0x0);
        gbc.writeMem(0x7dfe, { 0x4c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4be7, gbc.sp());
        EXPECT(0x7dff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02BC
        gbc.setState(0x2387, 0xe69c, 0xb5e0, 0xd7d3, 0xb84b, 0x7cd2, 0x0, 0x1);
        gbc.writeMem(0x2387, { 0x4c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe69c, gbc.sp());
        EXPECT(0x2388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 02BD
        gbc.setState(0x5bd, 0x8974, 0x16a0, 0x7bc0, 0xd4a8, 0x8759, 0x0, 0x0);
        gbc.writeMem(0x5bd, { 0x4c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8974, gbc.sp());
        EXPECT(0x5be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 02BE
        gbc.setState(0x9e, 0x8e4f, 0x2140, 0x9635, 0xe9e3, 0x42d2, 0x1, 0x0);
        gbc.writeMem(0x9e, { 0x4c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8e4f, gbc.sp());
        EXPECT(0x9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 02BF
        gbc.setState(0x94d3, 0xa1d, 0xc300, 0x9b66, 0xb539, 0x23a9, 0x0, 0x0);
        gbc.writeMem(0x94d3, { 0x4c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa1d, gbc.sp());
        EXPECT(0x94d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x94d3));
        // 4C 02C0
        gbc.setState(0xe1f0, 0xa379, 0x2600, 0x68f6, 0x7835, 0x18f, 0x0, 0x0);
        gbc.writeMem(0xe1f0, { 0x4c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa379, gbc.sp());
        EXPECT(0xe1f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe1f0));
        // 4C 02C1
        gbc.setState(0xc208, 0x3c96, 0xdf10, 0x6f28, 0x29fd, 0xa89a, 0x1, 0x0);
        gbc.writeMem(0xc208, { 0x4c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3c96, gbc.sp());
        EXPECT(0xc209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc208));
        // 4C 02C2
        gbc.setState(0xbfb0, 0x4e46, 0xd530, 0x9175, 0x2c7e, 0x55f1, 0x0, 0x1);
        gbc.writeMem(0xbfb0, { 0x4c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4e46, gbc.sp());
        EXPECT(0xbfb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbfb0));
        // 4C 02C3
        gbc.setState(0xe2d3, 0x1df0, 0x19c0, 0xfa01, 0xb56d, 0x1462, 0x1, 0x1);
        gbc.writeMem(0xe2d3, { 0x4c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1df0, gbc.sp());
        EXPECT(0xe2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe2d3));
        // 4C 02C4
        gbc.setState(0x6eee, 0x50af, 0xd50, 0x5ddc, 0x9612, 0x87b5, 0x0, 0x0);
        gbc.writeMem(0x6eee, { 0x4c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x50af, gbc.sp());
        EXPECT(0x6eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02C5
        gbc.setState(0xe470, 0xfdd6, 0x6dd0, 0x20d5, 0xa2e5, 0x262, 0x0, 0x1);
        gbc.writeMem(0xe470, { 0x4c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfdd6, gbc.sp());
        EXPECT(0xe471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe470));
        // 4C 02C7
        gbc.setState(0x8c0f, 0xcb98, 0xa010, 0xef24, 0x523a, 0x40e5, 0x0, 0x1);
        gbc.writeMem(0x8c0f, { 0x4c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcb98, gbc.sp());
        EXPECT(0x8c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8c0f));
        // 4C 02C8
        gbc.setState(0xb254, 0x7587, 0xdab0, 0xb26e, 0x7cba, 0xb996, 0x0, 0x0);
        gbc.writeMem(0xb254, { 0x4c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7587, gbc.sp());
        EXPECT(0xb255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb254));
        // 4C 02C9
        gbc.setState(0x225b, 0x3baa, 0x1800, 0x606a, 0xe6e0, 0xa612, 0x1, 0x0);
        gbc.writeMem(0x225b, { 0x4c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3baa, gbc.sp());
        EXPECT(0x225c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 02CA
        gbc.setState(0xc94d, 0x198c, 0x77c0, 0xa186, 0x44a6, 0x6d2d, 0x0, 0x1);
        gbc.writeMem(0xc94d, { 0x4c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x198c, gbc.sp());
        EXPECT(0xc94e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc94d));
        // 4C 02CB
        gbc.setState(0x496d, 0xb64f, 0xe380, 0xc92b, 0x5ac, 0x69c5, 0x0, 0x0);
        gbc.writeMem(0x496d, { 0x4c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb64f, gbc.sp());
        EXPECT(0x496e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 02CC
        gbc.setState(0xd4d1, 0x9fcb, 0x6be0, 0xc12e, 0x9160, 0x8934, 0x0, 0x0);
        gbc.writeMem(0xd4d1, { 0x4c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9fcb, gbc.sp());
        EXPECT(0xd4d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd4d1));
        // 4C 02CD
        gbc.setState(0x128c, 0x3986, 0x7c90, 0xd136, 0x1186, 0x43af, 0x1, 0x0);
        gbc.writeMem(0x128c, { 0x4c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3986, gbc.sp());
        EXPECT(0x128d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02CE
        gbc.setState(0xc892, 0xf28a, 0x3220, 0x93a5, 0xe1e9, 0x29ca, 0x0, 0x0);
        gbc.writeMem(0xc892, { 0x4c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf28a, gbc.sp());
        EXPECT(0xc893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc892));
        // 4C 02CF
        gbc.setState(0x9045, 0xbe7, 0xeec0, 0xed3f, 0xbd2d, 0x2059, 0x0, 0x0);
        gbc.writeMem(0x9045, { 0x4c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbe7, gbc.sp());
        EXPECT(0x9046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9045));
        // 4C 02D0
        gbc.setState(0xc27a, 0x459d, 0x8380, 0x541e, 0x979c, 0x1095, 0x1, 0x0);
        gbc.writeMem(0xc27a, { 0x4c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x459d, gbc.sp());
        EXPECT(0xc27b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc27a));
        // 4C 02D1
        gbc.setState(0x5ed5, 0xbab8, 0xbb0, 0xf63, 0xc1cd, 0x73e3, 0x1, 0x0);
        gbc.writeMem(0x5ed5, { 0x4c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbab8, gbc.sp());
        EXPECT(0x5ed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02D2
        gbc.setState(0x75cd, 0x2ca3, 0xd960, 0xbd61, 0x439e, 0x8f0c, 0x0, 0x1);
        gbc.writeMem(0x75cd, { 0x4c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2ca3, gbc.sp());
        EXPECT(0x75ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 02D3
        gbc.setState(0x42e3, 0xb53, 0xff30, 0x6ce3, 0x8a34, 0xb526, 0x1, 0x1);
        gbc.writeMem(0x42e3, { 0x4c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb53, gbc.sp());
        EXPECT(0x42e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02D4
        gbc.setState(0x372f, 0xc947, 0x1c0, 0x6743, 0xf9b5, 0x8a39, 0x1, 0x1);
        gbc.writeMem(0x372f, { 0x4c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc947, gbc.sp());
        EXPECT(0x3730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 02D5
        gbc.setState(0xc934, 0x6f96, 0xfc10, 0x5508, 0x39e7, 0xdd18, 0x0, 0x1);
        gbc.writeMem(0xc934, { 0x4c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6f96, gbc.sp());
        EXPECT(0xc935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc934));
        // 4C 02D6
        gbc.setState(0x47fb, 0x5079, 0x7fd0, 0xc272, 0x4595, 0xb0a6, 0x1, 0x0);
        gbc.writeMem(0x47fb, { 0x4c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5079, gbc.sp());
        EXPECT(0x47fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02D7
        gbc.setState(0xb431, 0x6078, 0x13c0, 0x3988, 0x65cc, 0xe966, 0x1, 0x0);
        gbc.writeMem(0xb431, { 0x4c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6078, gbc.sp());
        EXPECT(0xb432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb431));
        // 4C 02D8
        gbc.setState(0x52bd, 0x7898, 0x32c0, 0x40c2, 0x1b04, 0x81a, 0x1, 0x1);
        gbc.writeMem(0x52bd, { 0x4c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7898, gbc.sp());
        EXPECT(0x52be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 02D9
        gbc.setState(0x4b8b, 0x1a25, 0x5050, 0x7bed, 0xe002, 0xab2c, 0x0, 0x1);
        gbc.writeMem(0x4b8b, { 0x4c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1a25, gbc.sp());
        EXPECT(0x4b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02DA
        gbc.setState(0xa808, 0xa2eb, 0xa360, 0xf8f9, 0x2358, 0x4333, 0x1, 0x0);
        gbc.writeMem(0xa808, { 0x4c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa2eb, gbc.sp());
        EXPECT(0xa809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa808));
        // 4C 02DB
        gbc.setState(0xaf68, 0x85f9, 0xcd40, 0xd720, 0x65f, 0x1bba, 0x1, 0x0);
        gbc.writeMem(0xaf68, { 0x4c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x85f9, gbc.sp());
        EXPECT(0xaf69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xaf68));
        // 4C 02DC
        gbc.setState(0xa961, 0x84cf, 0x8d70, 0x4ad7, 0x4a8a, 0x211b, 0x0, 0x1);
        gbc.writeMem(0xa961, { 0x4c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x84cf, gbc.sp());
        EXPECT(0xa962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa961));
        // 4C 02DD
        gbc.setState(0xce37, 0xce51, 0x1780, 0x1a07, 0x2df5, 0x8f37, 0x0, 0x0);
        gbc.writeMem(0xce37, { 0x4c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xce51, gbc.sp());
        EXPECT(0xce38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xce37));
        // 4C 02DE
        gbc.setState(0x3425, 0xeb43, 0x8430, 0x1227, 0xfd9d, 0xe627, 0x1, 0x0);
        gbc.writeMem(0x3425, { 0x4c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xeb43, gbc.sp());
        EXPECT(0x3426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02DF
        gbc.setState(0xad72, 0x8f3e, 0x41c0, 0xcd95, 0x8e6c, 0x29f5, 0x1, 0x0);
        gbc.writeMem(0xad72, { 0x4c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8f3e, gbc.sp());
        EXPECT(0xad73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xad72));
        // 4C 02E0
        gbc.setState(0x1a00, 0x7646, 0xbe40, 0xb45d, 0x83c3, 0x158e, 0x1, 0x1);
        gbc.writeMem(0x1a00, { 0x4c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7646, gbc.sp());
        EXPECT(0x1a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 02E1
        gbc.setState(0x3be7, 0x20da, 0x7f80, 0xc5f5, 0xaa2b, 0xb66f, 0x0, 0x0);
        gbc.writeMem(0x3be7, { 0x4c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x20da, gbc.sp());
        EXPECT(0x3be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 02E2
        gbc.setState(0xe93e, 0x38fd, 0x9b30, 0x2e15, 0x3758, 0x40fd, 0x0, 0x0);
        gbc.writeMem(0xe93e, { 0x4c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x38fd, gbc.sp());
        EXPECT(0xe93f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe93e));
        // 4C 02E3
        gbc.setState(0xdfd2, 0x8cd8, 0xb070, 0xd092, 0x64a4, 0xb608, 0x0, 0x0);
        gbc.writeMem(0xdfd2, { 0x4c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8cd8, gbc.sp());
        EXPECT(0xdfd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdfd2));
        // 4C 02E4
        gbc.setState(0xa2f0, 0x3f91, 0x6110, 0x5966, 0xf1b8, 0x3a3a, 0x1, 0x1);
        gbc.writeMem(0xa2f0, { 0x4c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3f91, gbc.sp());
        EXPECT(0xa2f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa2f0));
        // 4C 02E5
        gbc.setState(0x98f9, 0x535a, 0x2d70, 0x836c, 0x6c14, 0x99e5, 0x1, 0x1);
        gbc.writeMem(0x98f9, { 0x4c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x535a, gbc.sp());
        EXPECT(0x98fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x98f9));
        // 4C 02E6
        gbc.setState(0x21e8, 0xd68e, 0x7fd0, 0x2136, 0xdf99, 0xa500, 0x0, 0x0);
        gbc.writeMem(0x21e8, { 0x4c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd68e, gbc.sp());
        EXPECT(0x21e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02E7
        gbc.setState(0x92c5, 0x66f1, 0x27e0, 0xb279, 0x301, 0x3f15, 0x1, 0x0);
        gbc.writeMem(0x92c5, { 0x4c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x66f1, gbc.sp());
        EXPECT(0x92c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x92c5));
        // 4C 02E8
        gbc.setState(0x59f2, 0xea8e, 0xa440, 0xab6e, 0xf1b0, 0xb880, 0x1, 0x0);
        gbc.writeMem(0x59f2, { 0x4c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xea8e, gbc.sp());
        EXPECT(0x59f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 02E9
        gbc.setState(0x649e, 0xa727, 0x7760, 0xd597, 0xa51a, 0xb3a0, 0x1, 0x1);
        gbc.writeMem(0x649e, { 0x4c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa727, gbc.sp());
        EXPECT(0x649f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 02EA
        gbc.setState(0xdbe2, 0x861b, 0xadb0, 0x397c, 0x88df, 0xc0ce, 0x1, 0x0);
        gbc.writeMem(0xdbe2, { 0x4c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x861b, gbc.sp());
        EXPECT(0xdbe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdbe2));
        // 4C 02EB
        gbc.setState(0xe2c8, 0xfe03, 0x5430, 0xbea5, 0xbcf1, 0xa4ce, 0x1, 0x0);
        gbc.writeMem(0xe2c8, { 0x4c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfe03, gbc.sp());
        EXPECT(0xe2c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe2c8));
        // 4C 02EC
        gbc.setState(0x5d27, 0x1774, 0xb10, 0x1427, 0x984, 0x202, 0x1, 0x0);
        gbc.writeMem(0x5d27, { 0x4c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1774, gbc.sp());
        EXPECT(0x5d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02EE
        gbc.setState(0x58e7, 0xe0eb, 0xf700, 0xd18f, 0xbc01, 0xf48, 0x1, 0x1);
        gbc.writeMem(0x58e7, { 0x4c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe0eb, gbc.sp());
        EXPECT(0x58e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 02EF
        gbc.setState(0x5465, 0x8903, 0xb130, 0x313e, 0x6a65, 0x44e, 0x0, 0x1);
        gbc.writeMem(0x5465, { 0x4c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8903, gbc.sp());
        EXPECT(0x5466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02F0
        gbc.setState(0x2e4e, 0x4264, 0x1290, 0x443f, 0x1a2, 0x4e95, 0x0, 0x0);
        gbc.writeMem(0x2e4e, { 0x4c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4264, gbc.sp());
        EXPECT(0x2e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02F1
        gbc.setState(0x5ea8, 0xe35b, 0x7910, 0x36e5, 0x8edb, 0x3f62, 0x1, 0x0);
        gbc.writeMem(0x5ea8, { 0x4c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe35b, gbc.sp());
        EXPECT(0x5ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02F2
        gbc.setState(0xd24b, 0xad62, 0x24d0, 0x455, 0xd17e, 0xbf8a, 0x1, 0x0);
        gbc.writeMem(0xd24b, { 0x4c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xad62, gbc.sp());
        EXPECT(0xd24c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd24b));
        // 4C 02F3
        gbc.setState(0x9385, 0x8949, 0x1100, 0xfb8d, 0xb3e4, 0x2868, 0x0, 0x1);
        gbc.writeMem(0x9385, { 0x4c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8949, gbc.sp());
        EXPECT(0x9386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9385));
        // 4C 02F4
        gbc.setState(0x6257, 0x43c, 0xf6a0, 0x6dd, 0xb46e, 0xfc62, 0x1, 0x0);
        gbc.writeMem(0x6257, { 0x4c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x43c, gbc.sp());
        EXPECT(0x6258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 02F5
        gbc.setState(0xdddc, 0xf3d2, 0x1790, 0x172e, 0xad27, 0xbddc, 0x0, 0x1);
        gbc.writeMem(0xdddc, { 0x4c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf3d2, gbc.sp());
        EXPECT(0xdddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdddc));
        // 4C 02F6
        gbc.setState(0x3bc5, 0x9ff3, 0xe370, 0xe940, 0x7442, 0xd3a9, 0x1, 0x1);
        gbc.writeMem(0x3bc5, { 0x4c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9ff3, gbc.sp());
        EXPECT(0x3bc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02F8
        gbc.setState(0xe98f, 0xbbaf, 0x8f60, 0x8ea9, 0x18ec, 0x662d, 0x0, 0x1);
        gbc.writeMem(0xe98f, { 0x4c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbbaf, gbc.sp());
        EXPECT(0xe990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe98f));
        // 4C 02F9
        gbc.setState(0x6728, 0xfc96, 0x820, 0x321, 0x6deb, 0xf272, 0x0, 0x1);
        gbc.writeMem(0x6728, { 0x4c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xfc96, gbc.sp());
        EXPECT(0x6729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 02FA
        gbc.setState(0x4f73, 0xc4e4, 0x70c0, 0xb09d, 0x9879, 0xbd37, 0x1, 0x0);
        gbc.writeMem(0x4f73, { 0x4c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc4e4, gbc.sp());
        EXPECT(0x4f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 02FB
        gbc.setState(0x7261, 0x532e, 0x69a0, 0xb673, 0xeadb, 0xb276, 0x0, 0x1);
        gbc.writeMem(0x7261, { 0x4c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x532e, gbc.sp());
        EXPECT(0x7262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 02FC
        gbc.setState(0x8667, 0xac1d, 0xf330, 0x1f3b, 0xc395, 0x3869, 0x1, 0x1);
        gbc.writeMem(0x8667, { 0x4c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xac1d, gbc.sp());
        EXPECT(0x8668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8667));
        // 4C 02FD
        gbc.setState(0x183, 0x5c1e, 0xf050, 0x9e03, 0x23d3, 0xd6e8, 0x0, 0x0);
        gbc.writeMem(0x183, { 0x4c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5c1e, gbc.sp());
        EXPECT(0x184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 02FE
        gbc.setState(0xd5ff, 0x4bab, 0xb550, 0xc8b1, 0xd464, 0xb196, 0x0, 0x1);
        gbc.writeMem(0xd5ff, { 0x4c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4bab, gbc.sp());
        EXPECT(0xd600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd5ff));
        // 4C 02FF
        gbc.setState(0x794d, 0x329b, 0x9510, 0x48b1, 0x49dd, 0xd32d, 0x0, 0x0);
        gbc.writeMem(0x794d, { 0x4c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x329b, gbc.sp());
        EXPECT(0x794e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0300
        gbc.setState(0x298d, 0x673e, 0x9be0, 0x8533, 0x7b2, 0x7647, 0x0, 0x1);
        gbc.writeMem(0x298d, { 0x4c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x673e, gbc.sp());
        EXPECT(0x298e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0301
        gbc.setState(0x3a03, 0x6a0a, 0x7dc0, 0xfde0, 0x90c2, 0x2028, 0x1, 0x0);
        gbc.writeMem(0x3a03, { 0x4c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6a0a, gbc.sp());
        EXPECT(0x3a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0302
        gbc.setState(0x820e, 0x53ad, 0xf2d0, 0x24d3, 0x46ef, 0x89cf, 0x1, 0x1);
        gbc.writeMem(0x820e, { 0x4c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x53ad, gbc.sp());
        EXPECT(0x820f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x820e));
        // 4C 0303
        gbc.setState(0x4465, 0xe748, 0xbd40, 0xb9b8, 0x21a4, 0x83c7, 0x0, 0x1);
        gbc.writeMem(0x4465, { 0x4c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe748, gbc.sp());
        EXPECT(0x4466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0304
        gbc.setState(0x750d, 0x8d, 0x9c90, 0xf171, 0x9977, 0x646d, 0x0, 0x1);
        gbc.writeMem(0x750d, { 0x4c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8d, gbc.sp());
        EXPECT(0x750e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0305
        gbc.setState(0xba7a, 0xefae, 0x7a20, 0x98c8, 0xbea7, 0x6aaa, 0x1, 0x1);
        gbc.writeMem(0xba7a, { 0x4c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xefae, gbc.sp());
        EXPECT(0xba7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xba7a));
        // 4C 0306
        gbc.setState(0x699f, 0x817e, 0xa0e0, 0x9054, 0x4ca3, 0xbe44, 0x1, 0x1);
        gbc.writeMem(0x699f, { 0x4c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x817e, gbc.sp());
        EXPECT(0x69a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0307
        gbc.setState(0x6940, 0x8732, 0xeb10, 0xf8a3, 0x4f51, 0xbc3, 0x0, 0x0);
        gbc.writeMem(0x6940, { 0x4c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8732, gbc.sp());
        EXPECT(0x6941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0308
        gbc.setState(0x50b1, 0xcf8c, 0xa450, 0x8c1c, 0x4e25, 0xdf2e, 0x1, 0x1);
        gbc.writeMem(0x50b1, { 0x4c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcf8c, gbc.sp());
        EXPECT(0x50b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0309
        gbc.setState(0xc626, 0x68c8, 0x9b40, 0x778b, 0xf547, 0xefdb, 0x1, 0x0);
        gbc.writeMem(0xc626, { 0x4c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x68c8, gbc.sp());
        EXPECT(0xc627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc626));
        // 4C 030A
        gbc.setState(0xabe1, 0xf8f0, 0xe1d0, 0x29ce, 0x4e2e, 0x115c, 0x1, 0x0);
        gbc.writeMem(0xabe1, { 0x4c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf8f0, gbc.sp());
        EXPECT(0xabe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xabe1));
        // 4C 030B
        gbc.setState(0xbb7f, 0x71b0, 0x9040, 0x8db, 0x8db9, 0x3736, 0x1, 0x1);
        gbc.writeMem(0xbb7f, { 0x4c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x71b0, gbc.sp());
        EXPECT(0xbb80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbb7f));
        // 4C 030C
        gbc.setState(0x7776, 0xb227, 0x34e0, 0x2424, 0x7c45, 0x61b1, 0x1, 0x0);
        gbc.writeMem(0x7776, { 0x4c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb227, gbc.sp());
        EXPECT(0x7777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 030D
        gbc.setState(0x2c86, 0xe256, 0x750, 0xbc75, 0xc19c, 0xf774, 0x1, 0x1);
        gbc.writeMem(0x2c86, { 0x4c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe256, gbc.sp());
        EXPECT(0x2c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 030F
        gbc.setState(0xbcba, 0x2450, 0x6370, 0x6076, 0xad77, 0xa594, 0x0, 0x1);
        gbc.writeMem(0xbcba, { 0x4c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2450, gbc.sp());
        EXPECT(0xbcbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbcba));
        // 4C 0310
        gbc.setState(0x4569, 0xfb85, 0xc120, 0xe9ba, 0xd076, 0x499c, 0x0, 0x0);
        gbc.writeMem(0x4569, { 0x4c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xfb85, gbc.sp());
        EXPECT(0x456a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0311
        gbc.setState(0x8ae7, 0x68cd, 0xbf0, 0x5b89, 0x5b34, 0x124b, 0x0, 0x1);
        gbc.writeMem(0x8ae7, { 0x4c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x68cd, gbc.sp());
        EXPECT(0x8ae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8ae7));
        // 4C 0312
        gbc.setState(0xaefd, 0xbc6, 0x2e50, 0x3283, 0xcfa7, 0xf3f8, 0x1, 0x1);
        gbc.writeMem(0xaefd, { 0x4c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbc6, gbc.sp());
        EXPECT(0xaefe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xaefd));
        // 4C 0313
        gbc.setState(0x6c8c, 0x501a, 0x6a80, 0x7124, 0x76ee, 0xa184, 0x1, 0x1);
        gbc.writeMem(0x6c8c, { 0x4c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x501a, gbc.sp());
        EXPECT(0x6c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0314
        gbc.setState(0x8bdf, 0x2d30, 0x4480, 0x6d3d, 0xb31f, 0x324a, 0x1, 0x1);
        gbc.writeMem(0x8bdf, { 0x4c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2d30, gbc.sp());
        EXPECT(0x8be0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8bdf));
        // 4C 0315
        gbc.setState(0x5fad, 0xc1c5, 0x6030, 0x19cf, 0xf0a1, 0xf596, 0x1, 0x1);
        gbc.writeMem(0x5fad, { 0x4c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc1c5, gbc.sp());
        EXPECT(0x5fae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0316
        gbc.setState(0x15f, 0xe96a, 0xb7f0, 0x6e26, 0x2a97, 0xc275, 0x1, 0x1);
        gbc.writeMem(0x15f, { 0x4c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe96a, gbc.sp());
        EXPECT(0x160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0318
        gbc.setState(0x73af, 0x3d79, 0x2350, 0xf50c, 0x2feb, 0x76e9, 0x0, 0x1);
        gbc.writeMem(0x73af, { 0x4c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3d79, gbc.sp());
        EXPECT(0x73b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0319
        gbc.setState(0xb203, 0x5bc1, 0x9230, 0x6115, 0x7df2, 0x563c, 0x1, 0x1);
        gbc.writeMem(0xb203, { 0x4c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5bc1, gbc.sp());
        EXPECT(0xb204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb203));
        // 4C 031A
        gbc.setState(0xba3a, 0xe5cd, 0x7330, 0x3711, 0x7df8, 0x1560, 0x0, 0x1);
        gbc.writeMem(0xba3a, { 0x4c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe5cd, gbc.sp());
        EXPECT(0xba3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xba3a));
        // 4C 031B
        gbc.setState(0xb80c, 0x63cd, 0x64a0, 0x5659, 0xd5f1, 0xf5b, 0x0, 0x1);
        gbc.writeMem(0xb80c, { 0x4c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x63cd, gbc.sp());
        EXPECT(0xb80d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb80c));
        // 4C 031C
        gbc.setState(0x54, 0xa16a, 0x470, 0x5ea7, 0x4e17, 0xb714, 0x1, 0x0);
        gbc.writeMem(0x54, { 0x4c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa16a, gbc.sp());
        EXPECT(0x55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 031D
        gbc.setState(0xc235, 0xf462, 0x7cd0, 0x1bae, 0x6d12, 0x76ee, 0x0, 0x0);
        gbc.writeMem(0xc235, { 0x4c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf462, gbc.sp());
        EXPECT(0xc236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc235));
        // 4C 031E
        gbc.setState(0x973c, 0x60df, 0xccc0, 0x8d93, 0xda04, 0x8e07, 0x0, 0x0);
        gbc.writeMem(0x973c, { 0x4c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x60df, gbc.sp());
        EXPECT(0x973d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x973c));
        // 4C 031F
        gbc.setState(0xee94, 0x5cea, 0x4920, 0xcf6b, 0xe66, 0x2400, 0x1, 0x0);
        gbc.writeMem(0xee94, { 0x4c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5cea, gbc.sp());
        EXPECT(0xee95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xee94));
        // 4C 0320
        gbc.setState(0x36ff, 0x7d92, 0x1b50, 0xf44f, 0xef58, 0xc38b, 0x0, 0x1);
        gbc.writeMem(0x36ff, { 0x4c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7d92, gbc.sp());
        EXPECT(0x3700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0321
        gbc.setState(0xcdf3, 0x847b, 0xcf40, 0x3d2a, 0x7a5c, 0x8294, 0x1, 0x1);
        gbc.writeMem(0xcdf3, { 0x4c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x847b, gbc.sp());
        EXPECT(0xcdf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcdf3));
        // 4C 0322
        gbc.setState(0xaffb, 0x3217, 0xa080, 0x1f7e, 0xe0c, 0x3a4f, 0x0, 0x0);
        gbc.writeMem(0xaffb, { 0x4c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3217, gbc.sp());
        EXPECT(0xaffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xaffb));
        // 4C 0323
        gbc.setState(0x7834, 0xfdf4, 0x6a40, 0xdfde, 0x3018, 0xf4b2, 0x0, 0x1);
        gbc.writeMem(0x7834, { 0x4c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfdf4, gbc.sp());
        EXPECT(0x7835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0324
        gbc.setState(0x9a6, 0xaf6, 0x5b0, 0xc1e4, 0xadcf, 0xc511, 0x1, 0x0);
        gbc.writeMem(0x9a6, { 0x4c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xaf6, gbc.sp());
        EXPECT(0x9a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0325
        gbc.setState(0xed38, 0xf112, 0x2020, 0x286b, 0x455b, 0x4b54, 0x1, 0x1);
        gbc.writeMem(0xed38, { 0x4c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf112, gbc.sp());
        EXPECT(0xed39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xed38));
        // 4C 0326
        gbc.setState(0x951a, 0x8346, 0xac40, 0xfbe4, 0x69b0, 0xe010, 0x1, 0x1);
        gbc.writeMem(0x951a, { 0x4c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8346, gbc.sp());
        EXPECT(0x951b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x951a));
        // 4C 0327
        gbc.setState(0x7ef1, 0xa525, 0x88d0, 0x3799, 0x36a, 0xfeb9, 0x0, 0x1);
        gbc.writeMem(0x7ef1, { 0x4c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa525, gbc.sp());
        EXPECT(0x7ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0328
        gbc.setState(0x8ebd, 0x240b, 0x38b0, 0x820d, 0x593b, 0x2471, 0x0, 0x0);
        gbc.writeMem(0x8ebd, { 0x4c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x240b, gbc.sp());
        EXPECT(0x8ebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8ebd));
        // 4C 0329
        gbc.setState(0x8d6d, 0xe4f4, 0x27c0, 0xe280, 0x534b, 0xb6a6, 0x1, 0x0);
        gbc.writeMem(0x8d6d, { 0x4c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe4f4, gbc.sp());
        EXPECT(0x8d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8d6d));
        // 4C 032A
        gbc.setState(0xa469, 0x1582, 0xf680, 0x34fe, 0xe290, 0xb747, 0x1, 0x1);
        gbc.writeMem(0xa469, { 0x4c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1582, gbc.sp());
        EXPECT(0xa46a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa469));
        // 4C 032B
        gbc.setState(0x605a, 0x8daa, 0x59f0, 0x5ff1, 0xaf16, 0xd8c3, 0x1, 0x1);
        gbc.writeMem(0x605a, { 0x4c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8daa, gbc.sp());
        EXPECT(0x605b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 032C
        gbc.setState(0x6d67, 0x768, 0x6d90, 0x7355, 0x8516, 0x59e, 0x0, 0x0);
        gbc.writeMem(0x6d67, { 0x4c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x768, gbc.sp());
        EXPECT(0x6d68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 032D
        gbc.setState(0x38a3, 0xfc45, 0x7b90, 0xefb5, 0xb3e2, 0xfb69, 0x1, 0x0);
        gbc.writeMem(0x38a3, { 0x4c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xfc45, gbc.sp());
        EXPECT(0x38a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 032E
        gbc.setState(0xea54, 0x464e, 0x8860, 0xf5e0, 0x7fa0, 0xc9a7, 0x0, 0x1);
        gbc.writeMem(0xea54, { 0x4c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x464e, gbc.sp());
        EXPECT(0xea55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xea54));
        // 4C 032F
        gbc.setState(0xa9a9, 0xad91, 0x84c0, 0xcda0, 0x8541, 0x3e32, 0x0, 0x0);
        gbc.writeMem(0xa9a9, { 0x4c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xad91, gbc.sp());
        EXPECT(0xa9aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa9a9));
        // 4C 0330
        gbc.setState(0x8ac7, 0xa105, 0x860, 0x994a, 0xcb0b, 0x3046, 0x0, 0x0);
        gbc.writeMem(0x8ac7, { 0x4c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa105, gbc.sp());
        EXPECT(0x8ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8ac7));
        // 4C 0331
        gbc.setState(0xab20, 0x3444, 0x37a0, 0x40e1, 0xb1b1, 0xff51, 0x0, 0x0);
        gbc.writeMem(0xab20, { 0x4c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3444, gbc.sp());
        EXPECT(0xab21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xab20));
        // 4C 0332
        gbc.setState(0xaee9, 0xcf6d, 0x1060, 0x6438, 0x1df3, 0x436e, 0x0, 0x0);
        gbc.writeMem(0xaee9, { 0x4c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcf6d, gbc.sp());
        EXPECT(0xaeea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xaee9));
        // 4C 0333
        gbc.setState(0x7407, 0xb58f, 0xa750, 0x7ec7, 0xfaf6, 0x5ee6, 0x0, 0x0);
        gbc.writeMem(0x7407, { 0x4c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb58f, gbc.sp());
        EXPECT(0x7408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0334
        gbc.setState(0x2c15, 0xc1ae, 0xa450, 0x7e73, 0x8afd, 0x6028, 0x0, 0x1);
        gbc.writeMem(0x2c15, { 0x4c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc1ae, gbc.sp());
        EXPECT(0x2c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0335
        gbc.setState(0x5dd, 0x4d9c, 0x1700, 0x25d4, 0x2fd5, 0xd5dd, 0x1, 0x0);
        gbc.writeMem(0x5dd, { 0x4c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4d9c, gbc.sp());
        EXPECT(0x5de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0336
        gbc.setState(0x1690, 0xd985, 0x6e00, 0x18f7, 0xe91d, 0xf0ea, 0x0, 0x1);
        gbc.writeMem(0x1690, { 0x4c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd985, gbc.sp());
        EXPECT(0x1691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0337
        gbc.setState(0x50b0, 0x47fa, 0xd000, 0xc137, 0xf10f, 0x612c, 0x0, 0x0);
        gbc.writeMem(0x50b0, { 0x4c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x47fa, gbc.sp());
        EXPECT(0x50b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0338
        gbc.setState(0x4b9b, 0xe9ba, 0xc920, 0x93d5, 0x82ce, 0x841e, 0x0, 0x0);
        gbc.writeMem(0x4b9b, { 0x4c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe9ba, gbc.sp());
        EXPECT(0x4b9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0339
        gbc.setState(0x2b58, 0x72d9, 0x2300, 0x2924, 0x80e0, 0xbc74, 0x1, 0x0);
        gbc.writeMem(0x2b58, { 0x4c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x72d9, gbc.sp());
        EXPECT(0x2b59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 033A
        gbc.setState(0x5e7b, 0xefbb, 0xa300, 0xaf0b, 0x4fe5, 0xa93, 0x0, 0x0);
        gbc.writeMem(0x5e7b, { 0x4c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xefbb, gbc.sp());
        EXPECT(0x5e7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 033B
        gbc.setState(0x9ea4, 0xdfdd, 0xa060, 0x9e65, 0x57c8, 0x586a, 0x1, 0x0);
        gbc.writeMem(0x9ea4, { 0x4c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdfdd, gbc.sp());
        EXPECT(0x9ea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9ea4));
        // 4C 033D
        gbc.setState(0x466c, 0x6fcd, 0xb140, 0x1175, 0xaa3d, 0x3cee, 0x1, 0x1);
        gbc.writeMem(0x466c, { 0x4c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6fcd, gbc.sp());
        EXPECT(0x466d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 033E
        gbc.setState(0xd840, 0x2ca6, 0x9050, 0x153a, 0x721c, 0x1b61, 0x0, 0x1);
        gbc.writeMem(0xd840, { 0x4c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2ca6, gbc.sp());
        EXPECT(0xd841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd840));
        // 4C 0340
        gbc.setState(0x9b24, 0xa26c, 0xf130, 0x34f2, 0x99e8, 0x8198, 0x1, 0x0);
        gbc.writeMem(0x9b24, { 0x4c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa26c, gbc.sp());
        EXPECT(0x9b25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9b24));
        // 4C 0341
        gbc.setState(0x53fd, 0xfd09, 0x1af0, 0x4bc4, 0x9d6e, 0x5047, 0x1, 0x1);
        gbc.writeMem(0x53fd, { 0x4c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfd09, gbc.sp());
        EXPECT(0x53fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0342
        gbc.setState(0xfa, 0xe0a1, 0xfc10, 0xe634, 0x233c, 0xcda1, 0x0, 0x0);
        gbc.writeMem(0xfa, { 0x4c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe0a1, gbc.sp());
        EXPECT(0xfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0343
        gbc.setState(0x2f41, 0x588d, 0x38f0, 0xfb31, 0xdcc, 0xece3, 0x1, 0x0);
        gbc.writeMem(0x2f41, { 0x4c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x588d, gbc.sp());
        EXPECT(0x2f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0344
        gbc.setState(0xcfed, 0x85c0, 0x1c60, 0xd21d, 0x95d2, 0x7af6, 0x1, 0x1);
        gbc.writeMem(0xcfed, { 0x4c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x85c0, gbc.sp());
        EXPECT(0xcfee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcfed));
        // 4C 0345
        gbc.setState(0x9e69, 0xef27, 0x3120, 0xe571, 0xc393, 0xf46d, 0x0, 0x0);
        gbc.writeMem(0x9e69, { 0x4c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xef27, gbc.sp());
        EXPECT(0x9e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9e69));
        // 4C 0347
        gbc.setState(0xd88d, 0xc482, 0x6ee0, 0x3c96, 0x2f4c, 0xb658, 0x0, 0x0);
        gbc.writeMem(0xd88d, { 0x4c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc482, gbc.sp());
        EXPECT(0xd88e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd88d));
        // 4C 0348
        gbc.setState(0xbf9d, 0x4f17, 0xb420, 0xe72e, 0x5613, 0xc63b, 0x0, 0x0);
        gbc.writeMem(0xbf9d, { 0x4c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4f17, gbc.sp());
        EXPECT(0xbf9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbf9d));
        // 4C 034A
        gbc.setState(0x455d, 0xe0a8, 0x5260, 0x59f2, 0xab88, 0x6b29, 0x0, 0x0);
        gbc.writeMem(0x455d, { 0x4c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe0a8, gbc.sp());
        EXPECT(0x455e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 034B
        gbc.setState(0x64cf, 0x33e6, 0x1e10, 0x8ad7, 0xb01c, 0xc573, 0x1, 0x1);
        gbc.writeMem(0x64cf, { 0x4c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x33e6, gbc.sp());
        EXPECT(0x64d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 034D
        gbc.setState(0xad2a, 0xb52b, 0x4a40, 0xbee3, 0xa681, 0xa51e, 0x0, 0x0);
        gbc.writeMem(0xad2a, { 0x4c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb52b, gbc.sp());
        EXPECT(0xad2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xad2a));
        // 4C 034E
        gbc.setState(0x5cf2, 0x5e2d, 0xe900, 0x6a4, 0xdcc0, 0xdd9a, 0x0, 0x0);
        gbc.writeMem(0x5cf2, { 0x4c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5e2d, gbc.sp());
        EXPECT(0x5cf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 034F
        gbc.setState(0x388b, 0x8d61, 0xce90, 0xdcba, 0x650d, 0x620e, 0x1, 0x1);
        gbc.writeMem(0x388b, { 0x4c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8d61, gbc.sp());
        EXPECT(0x388c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0350
        gbc.setState(0x919a, 0x884f, 0xd260, 0xa0f3, 0x27da, 0x13a3, 0x1, 0x1);
        gbc.writeMem(0x919a, { 0x4c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x884f, gbc.sp());
        EXPECT(0x919b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x919a));
        // 4C 0351
        gbc.setState(0x3df0, 0x60f4, 0x6bb0, 0x19ba, 0xab00, 0xa31c, 0x0, 0x1);
        gbc.writeMem(0x3df0, { 0x4c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x60f4, gbc.sp());
        EXPECT(0x3df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0352
        gbc.setState(0x38b2, 0xf1e3, 0x6ac0, 0xe227, 0xd221, 0x2904, 0x0, 0x1);
        gbc.writeMem(0x38b2, { 0x4c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf1e3, gbc.sp());
        EXPECT(0x38b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0353
        gbc.setState(0x546c, 0x8873, 0x1840, 0xee12, 0xf332, 0xc43e, 0x0, 0x0);
        gbc.writeMem(0x546c, { 0x4c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8873, gbc.sp());
        EXPECT(0x546d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0354
        gbc.setState(0x4410, 0xe8ee, 0x2dc0, 0x399a, 0xfb69, 0xe44e, 0x1, 0x1);
        gbc.writeMem(0x4410, { 0x4c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe8ee, gbc.sp());
        EXPECT(0x4411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0355
        gbc.setState(0xb3ce, 0x41bd, 0xd730, 0xef46, 0xdfa5, 0xb49c, 0x1, 0x0);
        gbc.writeMem(0xb3ce, { 0x4c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x41bd, gbc.sp());
        EXPECT(0xb3cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb3ce));
        // 4C 0356
        gbc.setState(0xc9c3, 0x2864, 0x8fa0, 0x372f, 0xb5cf, 0xd261, 0x1, 0x1);
        gbc.writeMem(0xc9c3, { 0x4c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2864, gbc.sp());
        EXPECT(0xc9c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc9c3));
        // 4C 0357
        gbc.setState(0x8a8a, 0x19b8, 0xf7c0, 0x6b0a, 0x7941, 0xe93b, 0x0, 0x0);
        gbc.writeMem(0x8a8a, { 0x4c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x19b8, gbc.sp());
        EXPECT(0x8a8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8a8a));
        // 4C 0358
        gbc.setState(0x5d95, 0xc6b0, 0xdb50, 0x2145, 0xda96, 0x2af1, 0x1, 0x1);
        gbc.writeMem(0x5d95, { 0x4c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc6b0, gbc.sp());
        EXPECT(0x5d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0359
        gbc.setState(0x693f, 0xe86e, 0x35a0, 0x110a, 0xe292, 0x4673, 0x0, 0x0);
        gbc.writeMem(0x693f, { 0x4c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe86e, gbc.sp());
        EXPECT(0x6940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 035A
        gbc.setState(0xdc39, 0x8f76, 0xd360, 0xb591, 0x778a, 0x869f, 0x1, 0x0);
        gbc.writeMem(0xdc39, { 0x4c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8f76, gbc.sp());
        EXPECT(0xdc3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdc39));
        // 4C 035B
        gbc.setState(0xd016, 0x10fa, 0x3be0, 0xd7f, 0x27f0, 0xdc58, 0x1, 0x0);
        gbc.writeMem(0xd016, { 0x4c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x10fa, gbc.sp());
        EXPECT(0xd017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd016));
        // 4C 035C
        gbc.setState(0xa8ab, 0xadfa, 0x9530, 0xa850, 0x22d4, 0xa802, 0x1, 0x0);
        gbc.writeMem(0xa8ab, { 0x4c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xadfa, gbc.sp());
        EXPECT(0xa8ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa8ab));
        // 4C 035D
        gbc.setState(0xc608, 0x1e93, 0x8240, 0x2199, 0x8799, 0x99c4, 0x1, 0x1);
        gbc.writeMem(0xc608, { 0x4c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1e93, gbc.sp());
        EXPECT(0xc609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc608));
        // 4C 035E
        gbc.setState(0x8128, 0xdafb, 0x1400, 0x383c, 0x6ef5, 0x7a2c, 0x0, 0x1);
        gbc.writeMem(0x8128, { 0x4c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xdafb, gbc.sp());
        EXPECT(0x8129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8128));
        // 4C 035F
        gbc.setState(0x7b4b, 0xd2ba, 0xe6a0, 0x64f4, 0xd73a, 0xb049, 0x1, 0x0);
        gbc.writeMem(0x7b4b, { 0x4c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd2ba, gbc.sp());
        EXPECT(0x7b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0360
        gbc.setState(0x5e44, 0x2a6e, 0x60b0, 0xee59, 0x45e5, 0x27eb, 0x1, 0x0);
        gbc.writeMem(0x5e44, { 0x4c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2a6e, gbc.sp());
        EXPECT(0x5e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0361
        gbc.setState(0x9986, 0x4808, 0x1200, 0x50a, 0xb96f, 0xacb2, 0x0, 0x0);
        gbc.writeMem(0x9986, { 0x4c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4808, gbc.sp());
        EXPECT(0x9987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9986));
        // 4C 0362
        gbc.setState(0xcd0d, 0x116a, 0x260, 0x9a18, 0xe347, 0xe8cc, 0x1, 0x0);
        gbc.writeMem(0xcd0d, { 0x4c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x116a, gbc.sp());
        EXPECT(0xcd0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcd0d));
        // 4C 0363
        gbc.setState(0x8f57, 0xe8a7, 0x3a20, 0x2ea2, 0xea05, 0xe2ff, 0x0, 0x0);
        gbc.writeMem(0x8f57, { 0x4c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe8a7, gbc.sp());
        EXPECT(0x8f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8f57));
        // 4C 0364
        gbc.setState(0x79f7, 0x1f90, 0x3730, 0xb5be, 0x2234, 0xaa1, 0x0, 0x0);
        gbc.writeMem(0x79f7, { 0x4c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1f90, gbc.sp());
        EXPECT(0x79f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0365
        gbc.setState(0x5c5c, 0x21c8, 0xbcf0, 0xe776, 0xc96e, 0xaba8, 0x0, 0x0);
        gbc.writeMem(0x5c5c, { 0x4c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x21c8, gbc.sp());
        EXPECT(0x5c5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0366
        gbc.setState(0x344b, 0xb0b2, 0xae70, 0xf6c6, 0x3068, 0x7ae4, 0x0, 0x1);
        gbc.writeMem(0x344b, { 0x4c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb0b2, gbc.sp());
        EXPECT(0x344c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0367
        gbc.setState(0xde27, 0x5598, 0xe8b0, 0x605e, 0x24b8, 0x86f, 0x1, 0x1);
        gbc.writeMem(0xde27, { 0x4c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5598, gbc.sp());
        EXPECT(0xde28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xde27));
        // 4C 0368
        gbc.setState(0x7ee0, 0x16c3, 0x1870, 0x352e, 0xfa98, 0xb0e6, 0x0, 0x0);
        gbc.writeMem(0x7ee0, { 0x4c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x16c3, gbc.sp());
        EXPECT(0x7ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0369
        gbc.setState(0x3e20, 0x8619, 0xa250, 0xdd2, 0xa6a6, 0x7fe4, 0x1, 0x0);
        gbc.writeMem(0x3e20, { 0x4c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8619, gbc.sp());
        EXPECT(0x3e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 036A
        gbc.setState(0xbac7, 0xb4f1, 0x2270, 0xd712, 0x6537, 0x61e9, 0x1, 0x1);
        gbc.writeMem(0xbac7, { 0x4c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb4f1, gbc.sp());
        EXPECT(0xbac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbac7));
        // 4C 036B
        gbc.setState(0x659f, 0xa10d, 0x2380, 0xe3e1, 0xc90e, 0xdefd, 0x0, 0x0);
        gbc.writeMem(0x659f, { 0x4c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa10d, gbc.sp());
        EXPECT(0x65a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 036C
        gbc.setState(0xef84, 0x3537, 0x3370, 0xcac7, 0x94db, 0x29e4, 0x0, 0x0);
        gbc.writeMem(0xef84, { 0x4c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3537, gbc.sp());
        EXPECT(0xef85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xef84));
        // 4C 036D
        gbc.setState(0xeda2, 0xa53b, 0x99e0, 0x227, 0x77af, 0x2fb3, 0x1, 0x1);
        gbc.writeMem(0xeda2, { 0x4c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa53b, gbc.sp());
        EXPECT(0xeda3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xeda2));
        // 4C 036E
        gbc.setState(0x59e4, 0x997e, 0xfe0, 0x6d79, 0x6150, 0x4b3b, 0x0, 0x0);
        gbc.writeMem(0x59e4, { 0x4c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x997e, gbc.sp());
        EXPECT(0x59e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 036F
        gbc.setState(0xe408, 0x454f, 0xfa20, 0xf9a0, 0x3a91, 0xb7a2, 0x0, 0x1);
        gbc.writeMem(0xe408, { 0x4c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x454f, gbc.sp());
        EXPECT(0xe409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe408));
        // 4C 0370
        gbc.setState(0x8753, 0x17a2, 0xb80, 0x78b0, 0x1158, 0x73a4, 0x0, 0x0);
        gbc.writeMem(0x8753, { 0x4c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x17a2, gbc.sp());
        EXPECT(0x8754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8753));
        // 4C 0371
        gbc.setState(0xaf7b, 0x4925, 0x7ff0, 0xeaf0, 0xb0bd, 0xf24f, 0x1, 0x1);
        gbc.writeMem(0xaf7b, { 0x4c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4925, gbc.sp());
        EXPECT(0xaf7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xaf7b));
        // 4C 0372
        gbc.setState(0xea8b, 0x293c, 0xdef0, 0x9322, 0x232, 0x828b, 0x1, 0x1);
        gbc.writeMem(0xea8b, { 0x4c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x293c, gbc.sp());
        EXPECT(0xea8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xea8b));
        // 4C 0373
        gbc.setState(0xefc5, 0xfa3, 0x1720, 0x1b8e, 0x8603, 0xc0fb, 0x0, 0x0);
        gbc.writeMem(0xefc5, { 0x4c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfa3, gbc.sp());
        EXPECT(0xefc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xefc5));
        // 4C 0374
        gbc.setState(0x4a6, 0x5249, 0xdf00, 0x52a1, 0xfff7, 0x5228, 0x1, 0x1);
        gbc.writeMem(0x4a6, { 0x4c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5249, gbc.sp());
        EXPECT(0x4a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0375
        gbc.setState(0x53b0, 0xefa4, 0x110, 0xcab6, 0xc030, 0x4749, 0x0, 0x0);
        gbc.writeMem(0x53b0, { 0x4c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xefa4, gbc.sp());
        EXPECT(0x53b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0376
        gbc.setState(0x901f, 0xff3b, 0x7a90, 0x5d7e, 0x42a9, 0x8387, 0x0, 0x1);
        gbc.writeMem(0x901f, { 0x4c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xff3b, gbc.sp());
        EXPECT(0x9020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x901f));
        // 4C 0377
        gbc.setState(0x4722, 0x460f, 0x1da0, 0x7c10, 0xd0f7, 0xb672, 0x0, 0x0);
        gbc.writeMem(0x4722, { 0x4c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x460f, gbc.sp());
        EXPECT(0x4723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0379
        gbc.setState(0x688b, 0x792, 0x16d0, 0xaeee, 0x6b29, 0x1435, 0x0, 0x0);
        gbc.writeMem(0x688b, { 0x4c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x792, gbc.sp());
        EXPECT(0x688c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 037A
        gbc.setState(0x834, 0x7fef, 0xd0c0, 0x4a30, 0x915b, 0xb45b, 0x1, 0x1);
        gbc.writeMem(0x834, { 0x4c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7fef, gbc.sp());
        EXPECT(0x835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 037B
        gbc.setState(0x4951, 0x91c7, 0x5020, 0xaa5b, 0xc2d3, 0x7376, 0x1, 0x0);
        gbc.writeMem(0x4951, { 0x4c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x91c7, gbc.sp());
        EXPECT(0x4952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 037C
        gbc.setState(0xd22f, 0x3891, 0xcc00, 0x26c2, 0x3d61, 0xa2c8, 0x0, 0x0);
        gbc.writeMem(0xd22f, { 0x4c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3891, gbc.sp());
        EXPECT(0xd230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd22f));
        // 4C 037D
        gbc.setState(0xccae, 0x130, 0x9c60, 0xf377, 0x9f5, 0x31bb, 0x1, 0x0);
        gbc.writeMem(0xccae, { 0x4c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x130, gbc.sp());
        EXPECT(0xccaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xccae));
        // 4C 037E
        gbc.setState(0x63d5, 0xf4ae, 0xe040, 0x57fc, 0x3729, 0x43b4, 0x1, 0x1);
        gbc.writeMem(0x63d5, { 0x4c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf4ae, gbc.sp());
        EXPECT(0x63d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 037F
        gbc.setState(0xc70f, 0xb421, 0x9d10, 0x5e4d, 0x9780, 0x1c82, 0x0, 0x1);
        gbc.writeMem(0xc70f, { 0x4c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb421, gbc.sp());
        EXPECT(0xc710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc70f));
        // 4C 0380
        gbc.setState(0xc9d3, 0x7469, 0x7c00, 0x4a72, 0xc90b, 0x77be, 0x1, 0x0);
        gbc.writeMem(0xc9d3, { 0x4c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7469, gbc.sp());
        EXPECT(0xc9d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc9d3));
        // 4C 0381
        gbc.setState(0x2fac, 0x976d, 0x6430, 0xf924, 0x53fe, 0xeccf, 0x1, 0x1);
        gbc.writeMem(0x2fac, { 0x4c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x976d, gbc.sp());
        EXPECT(0x2fad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0382
        gbc.setState(0x94fa, 0x8c97, 0xe600, 0x68e, 0x6e56, 0x1d9e, 0x0, 0x0);
        gbc.writeMem(0x94fa, { 0x4c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8c97, gbc.sp());
        EXPECT(0x94fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x94fa));
        // 4C 0383
        gbc.setState(0xbb4b, 0x2fc3, 0x95b0, 0x4e9b, 0x25e1, 0x738, 0x1, 0x1);
        gbc.writeMem(0xbb4b, { 0x4c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2fc3, gbc.sp());
        EXPECT(0xbb4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbb4b));
        // 4C 0384
        gbc.setState(0xb177, 0x4062, 0x1d60, 0xb00, 0x7dd2, 0x4a8b, 0x0, 0x0);
        gbc.writeMem(0xb177, { 0x4c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4062, gbc.sp());
        EXPECT(0xb178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb177));
        // 4C 0385
        gbc.setState(0x73c2, 0xa250, 0x34c0, 0x2f4a, 0x9bb3, 0x98c3, 0x1, 0x0);
        gbc.writeMem(0x73c2, { 0x4c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa250, gbc.sp());
        EXPECT(0x73c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0386
        gbc.setState(0xa1d7, 0x94bb, 0x850, 0x331b, 0xc236, 0xebfd, 0x1, 0x0);
        gbc.writeMem(0xa1d7, { 0x4c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x94bb, gbc.sp());
        EXPECT(0xa1d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa1d7));
        // 4C 0387
        gbc.setState(0xada5, 0x66d5, 0xcc70, 0x99d7, 0x276b, 0xfff, 0x1, 0x1);
        gbc.writeMem(0xada5, { 0x4c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x66d5, gbc.sp());
        EXPECT(0xada6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xada5));
        // 4C 0388
        gbc.setState(0x6278, 0x4f4c, 0x8780, 0x1fb3, 0xcbb3, 0xe4e8, 0x1, 0x1);
        gbc.writeMem(0x6278, { 0x4c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4f4c, gbc.sp());
        EXPECT(0x6279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 0389
        gbc.setState(0x795b, 0xfd46, 0x89e0, 0x6471, 0xd733, 0xf28a, 0x1, 0x1);
        gbc.writeMem(0x795b, { 0x4c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfd46, gbc.sp());
        EXPECT(0x795c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 038A
        gbc.setState(0x2452, 0xbca0, 0xf7d0, 0x86a3, 0x2ae2, 0x9e38, 0x1, 0x1);
        gbc.writeMem(0x2452, { 0x4c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbca0, gbc.sp());
        EXPECT(0x2453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 038B
        gbc.setState(0xadd3, 0x7009, 0xd6c0, 0xada2, 0xf923, 0x3eab, 0x1, 0x0);
        gbc.writeMem(0xadd3, { 0x4c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7009, gbc.sp());
        EXPECT(0xadd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xadd3));
        // 4C 038C
        gbc.setState(0xb9aa, 0xaf95, 0xe7b0, 0x8376, 0xed8e, 0x264c, 0x1, 0x1);
        gbc.writeMem(0xb9aa, { 0x4c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xaf95, gbc.sp());
        EXPECT(0xb9ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb9aa));
        // 4C 038D
        gbc.setState(0x45c, 0x6cfe, 0x31d0, 0xad02, 0xc3fa, 0xdde3, 0x1, 0x0);
        gbc.writeMem(0x45c, { 0x4c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6cfe, gbc.sp());
        EXPECT(0x45d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0390
        gbc.setState(0x70c9, 0x6a33, 0x2670, 0xd756, 0x1eb2, 0x89b3, 0x0, 0x1);
        gbc.writeMem(0x70c9, { 0x4c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6a33, gbc.sp());
        EXPECT(0x70ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0391
        gbc.setState(0x466d, 0x7311, 0xc510, 0x3f35, 0x6770, 0xce19, 0x0, 0x1);
        gbc.writeMem(0x466d, { 0x4c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7311, gbc.sp());
        EXPECT(0x466e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0392
        gbc.setState(0xac38, 0x13c0, 0x81d0, 0x807e, 0xff6d, 0x957f, 0x1, 0x0);
        gbc.writeMem(0xac38, { 0x4c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x13c0, gbc.sp());
        EXPECT(0xac39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xac38));
        // 4C 0393
        gbc.setState(0x2600, 0x42ad, 0x58b0, 0x3cfe, 0xc739, 0x7ba1, 0x1, 0x0);
        gbc.writeMem(0x2600, { 0x4c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x42ad, gbc.sp());
        EXPECT(0x2601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0394
        gbc.setState(0xc819, 0x72b7, 0x1f20, 0xf290, 0xb108, 0xe930, 0x1, 0x1);
        gbc.writeMem(0xc819, { 0x4c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x72b7, gbc.sp());
        EXPECT(0xc81a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc819));
        // 4C 0395
        gbc.setState(0x864b, 0xef6a, 0xf160, 0xf358, 0x6adc, 0x2f22, 0x0, 0x1);
        gbc.writeMem(0x864b, { 0x4c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xef6a, gbc.sp());
        EXPECT(0x864c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x864b));
        // 4C 0396
        gbc.setState(0xd9b8, 0x8da4, 0xce40, 0x55d5, 0x1c68, 0x39d0, 0x0, 0x1);
        gbc.writeMem(0xd9b8, { 0x4c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8da4, gbc.sp());
        EXPECT(0xd9b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd9b8));
        // 4C 0397
        gbc.setState(0x4e85, 0x74e, 0x6850, 0x834a, 0x3726, 0x3e57, 0x1, 0x1);
        gbc.writeMem(0x4e85, { 0x4c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x74e, gbc.sp());
        EXPECT(0x4e86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 0398
        gbc.setState(0xa37c, 0xb215, 0x9c50, 0x7725, 0xb9cb, 0x92ed, 0x1, 0x1);
        gbc.writeMem(0xa37c, { 0x4c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb215, gbc.sp());
        EXPECT(0xa37d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa37c));
        // 4C 0399
        gbc.setState(0x31ad, 0x981f, 0xcc60, 0x414b, 0x51ed, 0xfab7, 0x0, 0x1);
        gbc.writeMem(0x31ad, { 0x4c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x981f, gbc.sp());
        EXPECT(0x31ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 039A
        gbc.setState(0xdb24, 0x3b53, 0x5c50, 0x9288, 0x386a, 0xae54, 0x0, 0x1);
        gbc.writeMem(0xdb24, { 0x4c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3b53, gbc.sp());
        EXPECT(0xdb25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdb24));
        // 4C 039B
        gbc.setState(0x73f7, 0x9ef7, 0x58c0, 0x5ecd, 0xf723, 0x67c4, 0x1, 0x1);
        gbc.writeMem(0x73f7, { 0x4c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9ef7, gbc.sp());
        EXPECT(0x73f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 039C
        gbc.setState(0xaa0a, 0xdf4a, 0x4e30, 0x1c15, 0x4efc, 0x4014, 0x1, 0x0);
        gbc.writeMem(0xaa0a, { 0x4c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdf4a, gbc.sp());
        EXPECT(0xaa0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xaa0a));
        // 4C 039D
        gbc.setState(0x1638, 0x3afa, 0x9760, 0x5971, 0xdf8d, 0xbd92, 0x1, 0x1);
        gbc.writeMem(0x1638, { 0x4c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3afa, gbc.sp());
        EXPECT(0x1639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 039E
        gbc.setState(0x8c80, 0xf985, 0x1c10, 0x2574, 0x89a4, 0x847d, 0x0, 0x1);
        gbc.writeMem(0x8c80, { 0x4c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf985, gbc.sp());
        EXPECT(0x8c81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8c80));
        // 4C 039F
        gbc.setState(0xc010, 0xba4f, 0x8090, 0x43fc, 0x9086, 0x3cfb, 0x1, 0x1);
        gbc.writeMem(0xc010, { 0x4c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xba4f, gbc.sp());
        EXPECT(0xc011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc010));
        // 4C 03A0
        gbc.setState(0x17d0, 0x1b6c, 0x6390, 0xa79f, 0xfe6b, 0xfd4c, 0x0, 0x1);
        gbc.writeMem(0x17d0, { 0x4c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1b6c, gbc.sp());
        EXPECT(0x17d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 03A1
        gbc.setState(0x5c96, 0x694c, 0x5b20, 0xc35a, 0x6f5, 0x6542, 0x1, 0x1);
        gbc.writeMem(0x5c96, { 0x4c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x694c, gbc.sp());
        EXPECT(0x5c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03A2
        gbc.setState(0xa298, 0x34aa, 0x7440, 0x97a3, 0xa711, 0x599c, 0x1, 0x0);
        gbc.writeMem(0xa298, { 0x4c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x34aa, gbc.sp());
        EXPECT(0xa299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa298));
        // 4C 03A3
        gbc.setState(0x8cb4, 0xd41a, 0x4640, 0xf75, 0xa5a8, 0x6cc7, 0x1, 0x1);
        gbc.writeMem(0x8cb4, { 0x4c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd41a, gbc.sp());
        EXPECT(0x8cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8cb4));
        // 4C 03A4
        gbc.setState(0x8584, 0x86b4, 0x4830, 0x6470, 0x7190, 0x35c9, 0x0, 0x1);
        gbc.writeMem(0x8584, { 0x4c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x86b4, gbc.sp());
        EXPECT(0x8585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8584));
        // 4C 03A5
        gbc.setState(0x1622, 0xd0b9, 0xe020, 0xdaef, 0x43a2, 0x90d8, 0x0, 0x1);
        gbc.writeMem(0x1622, { 0x4c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd0b9, gbc.sp());
        EXPECT(0x1623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03A6
        gbc.setState(0x6c1, 0x7326, 0xd950, 0x2f73, 0x9234, 0x4656, 0x0, 0x1);
        gbc.writeMem(0x6c1, { 0x4c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7326, gbc.sp());
        EXPECT(0x6c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 03A7
        gbc.setState(0x80be, 0x628a, 0x5ab0, 0xfd45, 0xe8c4, 0xc447, 0x1, 0x0);
        gbc.writeMem(0x80be, { 0x4c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x628a, gbc.sp());
        EXPECT(0x80bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x80be));
        // 4C 03A8
        gbc.setState(0xb03a, 0x2271, 0xd280, 0x560e, 0x35b5, 0xe734, 0x1, 0x0);
        gbc.writeMem(0xb03a, { 0x4c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2271, gbc.sp());
        EXPECT(0xb03b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb03a));
        // 4C 03A9
        gbc.setState(0x3d63, 0xd816, 0x3190, 0x1c55, 0x3c1c, 0xa565, 0x0, 0x1);
        gbc.writeMem(0x3d63, { 0x4c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd816, gbc.sp());
        EXPECT(0x3d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 03AA
        gbc.setState(0xd75a, 0xfd15, 0xa680, 0x5f2f, 0x62a7, 0xb5f3, 0x1, 0x1);
        gbc.writeMem(0xd75a, { 0x4c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xfd15, gbc.sp());
        EXPECT(0xd75b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd75a));
        // 4C 03AB
        gbc.setState(0x1451, 0xf182, 0x9f60, 0x2eab, 0x8b76, 0xae35, 0x1, 0x0);
        gbc.writeMem(0x1451, { 0x4c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf182, gbc.sp());
        EXPECT(0x1452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03AC
        gbc.setState(0x47c4, 0x7e79, 0xcee0, 0x399b, 0x767d, 0x49d3, 0x0, 0x0);
        gbc.writeMem(0x47c4, { 0x4c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7e79, gbc.sp());
        EXPECT(0x47c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03AD
        gbc.setState(0xe38b, 0xf10e, 0xe5e0, 0xc76f, 0x2a3d, 0xe07e, 0x1, 0x1);
        gbc.writeMem(0xe38b, { 0x4c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf10e, gbc.sp());
        EXPECT(0xe38c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe38b));
        // 4C 03AE
        gbc.setState(0xf44, 0x1e1d, 0xf660, 0x3835, 0xbee8, 0x609c, 0x1, 0x0);
        gbc.writeMem(0xf44, { 0x4c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1e1d, gbc.sp());
        EXPECT(0xf45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03AF
        gbc.setState(0x419b, 0xc98f, 0x7750, 0xe9a4, 0x615e, 0x77d, 0x0, 0x0);
        gbc.writeMem(0x419b, { 0x4c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc98f, gbc.sp());
        EXPECT(0x419c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 03B0
        gbc.setState(0xdaec, 0x19fd, 0x9720, 0x91e2, 0xff75, 0x5706, 0x1, 0x1);
        gbc.writeMem(0xdaec, { 0x4c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x19fd, gbc.sp());
        EXPECT(0xdaed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdaec));
        // 4C 03B1
        gbc.setState(0x5d30, 0x737b, 0x8560, 0xd663, 0x6704, 0xd101, 0x1, 0x1);
        gbc.writeMem(0x5d30, { 0x4c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x737b, gbc.sp());
        EXPECT(0x5d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03B2
        gbc.setState(0x23f5, 0x2a15, 0x89a0, 0xe64, 0x82ab, 0xb331, 0x1, 0x1);
        gbc.writeMem(0x23f5, { 0x4c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2a15, gbc.sp());
        EXPECT(0x23f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03B3
        gbc.setState(0x4c3d, 0x51b5, 0x4670, 0x2c18, 0x44d, 0x170b, 0x0, 0x0);
        gbc.writeMem(0x4c3d, { 0x4c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x51b5, gbc.sp());
        EXPECT(0x4c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 03B4
        gbc.setState(0xa9ca, 0xeb3d, 0x1c00, 0x9761, 0x1a57, 0x7558, 0x1, 0x0);
        gbc.writeMem(0xa9ca, { 0x4c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xeb3d, gbc.sp());
        EXPECT(0xa9cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa9ca));
        // 4C 03B5
        gbc.setState(0x728, 0x76bb, 0x6820, 0xa927, 0x1173, 0x95c2, 0x1, 0x1);
        gbc.writeMem(0x728, { 0x4c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x76bb, gbc.sp());
        EXPECT(0x729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03B6
        gbc.setState(0x2252, 0x5b8c, 0x8070, 0x3bde, 0xc975, 0x791a, 0x1, 0x1);
        gbc.writeMem(0x2252, { 0x4c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5b8c, gbc.sp());
        EXPECT(0x2253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 03B7
        gbc.setState(0x7f88, 0xee1b, 0x98f0, 0x26b0, 0xb30e, 0xeb74, 0x0, 0x0);
        gbc.writeMem(0x7f88, { 0x4c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xee1b, gbc.sp());
        EXPECT(0x7f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 03B8
        gbc.setState(0xdca4, 0xf370, 0xf720, 0x67ed, 0x3565, 0xd163, 0x1, 0x0);
        gbc.writeMem(0xdca4, { 0x4c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf370, gbc.sp());
        EXPECT(0xdca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdca4));
        // 4C 03B9
        gbc.setState(0x61f6, 0x3d01, 0x33b0, 0x2338, 0x363d, 0x3f6, 0x0, 0x1);
        gbc.writeMem(0x61f6, { 0x4c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3d01, gbc.sp());
        EXPECT(0x61f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 03BA
        gbc.setState(0x2f3f, 0xcdb4, 0x38b0, 0x62a6, 0x84ff, 0x3d4d, 0x0, 0x1);
        gbc.writeMem(0x2f3f, { 0x4c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xcdb4, gbc.sp());
        EXPECT(0x2f40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 03BB
        gbc.setState(0x18ac, 0x501b, 0xb900, 0x20ae, 0x2ac4, 0xe209, 0x1, 0x0);
        gbc.writeMem(0x18ac, { 0x4c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x501b, gbc.sp());
        EXPECT(0x18ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03BC
        gbc.setState(0x66a, 0x1a9a, 0xfdd0, 0x7629, 0x879, 0xc7d9, 0x0, 0x0);
        gbc.writeMem(0x66a, { 0x4c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1a9a, gbc.sp());
        EXPECT(0x66b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 03BD
        gbc.setState(0x745c, 0x6f2, 0xb470, 0x70a8, 0x2193, 0x73ef, 0x1, 0x1);
        gbc.writeMem(0x745c, { 0x4c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6f2, gbc.sp());
        EXPECT(0x745d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 03BE
        gbc.setState(0x6dff, 0x212a, 0x3e00, 0xf084, 0xbf5c, 0xda80, 0x0, 0x0);
        gbc.writeMem(0x6dff, { 0x4c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x212a, gbc.sp());
        EXPECT(0x6e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03BF
        gbc.setState(0x1102, 0x790, 0x1fc0, 0x7cea, 0xcf02, 0x4cc5, 0x0, 0x0);
        gbc.writeMem(0x1102, { 0x4c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x790, gbc.sp());
        EXPECT(0x1103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03C0
        gbc.setState(0x7ae1, 0x7503, 0x63d0, 0x7d10, 0xfea9, 0x46d6, 0x0, 0x1);
        gbc.writeMem(0x7ae1, { 0x4c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7503, gbc.sp());
        EXPECT(0x7ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 03C1
        gbc.setState(0xb13c, 0xa082, 0x7cf0, 0xbcb0, 0x3f78, 0xb57a, 0x0, 0x0);
        gbc.writeMem(0xb13c, { 0x4c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa082, gbc.sp());
        EXPECT(0xb13d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb13c));
        // 4C 03C2
        gbc.setState(0xb358, 0x43c6, 0x9160, 0xb4c3, 0x1841, 0x76d7, 0x0, 0x0);
        gbc.writeMem(0xb358, { 0x4c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x43c6, gbc.sp());
        EXPECT(0xb359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb358));
        // 4C 03C3
        gbc.setState(0x9f6f, 0xea3e, 0xe2e0, 0x71c3, 0xe5e2, 0xacee, 0x0, 0x0);
        gbc.writeMem(0x9f6f, { 0x4c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xea3e, gbc.sp());
        EXPECT(0x9f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9f6f));
        // 4C 03C4
        gbc.setState(0x94fc, 0x682d, 0xe540, 0x764c, 0x59a8, 0xdd34, 0x0, 0x1);
        gbc.writeMem(0x94fc, { 0x4c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x682d, gbc.sp());
        EXPECT(0x94fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x94fc));
        // 4C 03C5
        gbc.setState(0xd8fe, 0xbc31, 0x97d0, 0x8729, 0x3a92, 0x978, 0x1, 0x1);
        gbc.writeMem(0xd8fe, { 0x4c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbc31, gbc.sp());
        EXPECT(0xd8ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd8fe));
        // 4C 03C6
        gbc.setState(0xccb7, 0xf732, 0x1850, 0x9c95, 0x3120, 0x29ea, 0x0, 0x0);
        gbc.writeMem(0xccb7, { 0x4c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf732, gbc.sp());
        EXPECT(0xccb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xccb7));
        // 4C 03C7
        gbc.setState(0x4846, 0xc6bb, 0xa300, 0x58e9, 0x792a, 0x4592, 0x1, 0x0);
        gbc.writeMem(0x4846, { 0x4c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc6bb, gbc.sp());
        EXPECT(0x4847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03C8
        gbc.setState(0x7268, 0xe09f, 0x8860, 0x5305, 0x69c7, 0x8abb, 0x0, 0x0);
        gbc.writeMem(0x7268, { 0x4c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe09f, gbc.sp());
        EXPECT(0x7269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03C9
        gbc.setState(0x4623, 0x6e7d, 0x2e00, 0xea54, 0xd364, 0x20c, 0x1, 0x0);
        gbc.writeMem(0x4623, { 0x4c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6e7d, gbc.sp());
        EXPECT(0x4624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03CA
        gbc.setState(0x4f5e, 0xe2c2, 0x8b60, 0xa371, 0xeab1, 0x4074, 0x0, 0x1);
        gbc.writeMem(0x4f5e, { 0x4c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe2c2, gbc.sp());
        EXPECT(0x4f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03CB
        gbc.setState(0x515f, 0x907e, 0x5d20, 0xd2a8, 0x56cb, 0x7b0c, 0x0, 0x0);
        gbc.writeMem(0x515f, { 0x4c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x907e, gbc.sp());
        EXPECT(0x5160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03CC
        gbc.setState(0x9d90, 0xf468, 0x6890, 0xdd73, 0x46f7, 0x42a, 0x0, 0x1);
        gbc.writeMem(0x9d90, { 0x4c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf468, gbc.sp());
        EXPECT(0x9d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9d90));
        // 4C 03CD
        gbc.setState(0xd5df, 0x4ba6, 0xaa40, 0x9f29, 0x902c, 0xd63f, 0x0, 0x1);
        gbc.writeMem(0xd5df, { 0x4c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4ba6, gbc.sp());
        EXPECT(0xd5e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd5df));
        // 4C 03CE
        gbc.setState(0x8af3, 0xd96, 0x1600, 0x8ef, 0x487a, 0xc24b, 0x0, 0x1);
        gbc.writeMem(0x8af3, { 0x4c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd96, gbc.sp());
        EXPECT(0x8af4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8af3));
        // 4C 03CF
        gbc.setState(0x510d, 0x8a3f, 0x7720, 0x9e92, 0xd12e, 0xa8f9, 0x1, 0x0);
        gbc.writeMem(0x510d, { 0x4c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8a3f, gbc.sp());
        EXPECT(0x510e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03D0
        gbc.setState(0xbb02, 0x1727, 0x8ac0, 0x3f28, 0x783c, 0xa21a, 0x1, 0x1);
        gbc.writeMem(0xbb02, { 0x4c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1727, gbc.sp());
        EXPECT(0xbb03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbb02));
        // 4C 03D1
        gbc.setState(0x3dc1, 0xddce, 0x97a0, 0xb52c, 0xe430, 0x2e1, 0x0, 0x1);
        gbc.writeMem(0x3dc1, { 0x4c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xddce, gbc.sp());
        EXPECT(0x3dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03D2
        gbc.setState(0xda02, 0xeb5e, 0x6110, 0x284f, 0x4a2b, 0x14df, 0x0, 0x0);
        gbc.writeMem(0xda02, { 0x4c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xeb5e, gbc.sp());
        EXPECT(0xda03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xda02));
        // 4C 03D3
        gbc.setState(0xee5f, 0x837c, 0xfd50, 0xf824, 0x8c0d, 0xb06, 0x0, 0x1);
        gbc.writeMem(0xee5f, { 0x4c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x837c, gbc.sp());
        EXPECT(0xee60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xee5f));
        // 4C 03D4
        gbc.setState(0x7355, 0x3bed, 0xb080, 0x448e, 0xf75d, 0x1f2e, 0x1, 0x1);
        gbc.writeMem(0x7355, { 0x4c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3bed, gbc.sp());
        EXPECT(0x7356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03D5
        gbc.setState(0x6d52, 0xe981, 0x1980, 0xb96b, 0x70ce, 0xf0cd, 0x1, 0x0);
        gbc.writeMem(0x6d52, { 0x4c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe981, gbc.sp());
        EXPECT(0x6d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03D6
        gbc.setState(0x4ff1, 0xcc36, 0xd6f0, 0xad90, 0x41a7, 0x9741, 0x0, 0x1);
        gbc.writeMem(0x4ff1, { 0x4c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcc36, gbc.sp());
        EXPECT(0x4ff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 03D7
        gbc.setState(0x2dd7, 0x9e52, 0x40c0, 0xd464, 0x6e7f, 0x347b, 0x0, 0x1);
        gbc.writeMem(0x2dd7, { 0x4c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9e52, gbc.sp());
        EXPECT(0x2dd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03D8
        gbc.setState(0x7261, 0xc5aa, 0xa8c0, 0xe9a4, 0xf2c3, 0x28e1, 0x0, 0x0);
        gbc.writeMem(0x7261, { 0x4c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc5aa, gbc.sp());
        EXPECT(0x7262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03D9
        gbc.setState(0x9fad, 0x7be8, 0xc770, 0x90c0, 0x9ee6, 0x4a19, 0x1, 0x1);
        gbc.writeMem(0x9fad, { 0x4c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7be8, gbc.sp());
        EXPECT(0x9fae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9fad));
        // 4C 03DA
        gbc.setState(0x3b2d, 0x1c05, 0x37b0, 0xfc5f, 0x8ba8, 0xbfdc, 0x0, 0x1);
        gbc.writeMem(0x3b2d, { 0x4c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1c05, gbc.sp());
        EXPECT(0x3b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 03DB
        gbc.setState(0x1f76, 0xe6cf, 0xdc10, 0x7bdd, 0x5db7, 0xc411, 0x0, 0x0);
        gbc.writeMem(0x1f76, { 0x4c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe6cf, gbc.sp());
        EXPECT(0x1f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 03DC
        gbc.setState(0xb82d, 0x3fc9, 0x9410, 0xf6d4, 0x9380, 0x816b, 0x0, 0x1);
        gbc.writeMem(0xb82d, { 0x4c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3fc9, gbc.sp());
        EXPECT(0xb82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb82d));
        // 4C 03DD
        gbc.setState(0xcdf5, 0xd949, 0x7d90, 0xcc8e, 0x1163, 0x6e7b, 0x1, 0x0);
        gbc.writeMem(0xcdf5, { 0x4c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd949, gbc.sp());
        EXPECT(0xcdf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcdf5));
        // 4C 03DE
        gbc.setState(0x3a14, 0xe38b, 0x3d60, 0xce65, 0x332b, 0x2970, 0x1, 0x0);
        gbc.writeMem(0x3a14, { 0x4c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe38b, gbc.sp());
        EXPECT(0x3a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03DF
        gbc.setState(0x98fb, 0x2f4d, 0xdb00, 0x8e2a, 0x916a, 0xe0b5, 0x1, 0x1);
        gbc.writeMem(0x98fb, { 0x4c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2f4d, gbc.sp());
        EXPECT(0x98fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x98fb));
        // 4C 03E0
        gbc.setState(0x6915, 0x17d7, 0x1750, 0x23e5, 0xb070, 0x6a0b, 0x1, 0x0);
        gbc.writeMem(0x6915, { 0x4c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x17d7, gbc.sp());
        EXPECT(0x6916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 03E1
        gbc.setState(0x342f, 0x5c4b, 0xaa10, 0x469d, 0xb478, 0x9231, 0x0, 0x0);
        gbc.writeMem(0x342f, { 0x4c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5c4b, gbc.sp());
        EXPECT(0x3430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 03E2
        gbc.setState(0x1ea1, 0x1466, 0x8df0, 0x38d4, 0xacaf, 0x9933, 0x1, 0x1);
        gbc.writeMem(0x1ea1, { 0x4c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1466, gbc.sp());
        EXPECT(0x1ea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 03E3
        gbc.setState(0x8c15, 0xeaf1, 0xf950, 0x59a9, 0x3d8f, 0x34bb, 0x0, 0x1);
        gbc.writeMem(0x8c15, { 0x4c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xeaf1, gbc.sp());
        EXPECT(0x8c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8c15));
        // 4C 03E4
        gbc.setState(0xace2, 0x75e, 0x2e90, 0xc076, 0x36b2, 0xb2f3, 0x1, 0x1);
        gbc.writeMem(0xace2, { 0x4c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x75e, gbc.sp());
        EXPECT(0xace3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xace2));
        // 4C 03E5
        gbc.setState(0x4c5b, 0x9fdf, 0x5300, 0x72cf, 0xc64c, 0x5441, 0x0, 0x0);
        gbc.writeMem(0x4c5b, { 0x4c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9fdf, gbc.sp());
        EXPECT(0x4c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4C 03E6
        gbc.setState(0x1bca, 0x97ca, 0xe790, 0x71d5, 0xbc74, 0xd3fb, 0x1, 0x0);
        gbc.writeMem(0x1bca, { 0x4c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x97ca, gbc.sp());
        EXPECT(0x1bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4C 03E7
        gbc.setState(0xb78d, 0x36e6, 0x7840, 0x8d5e, 0xe4a7, 0x3f10, 0x1, 0x0);
        gbc.writeMem(0xb78d, { 0x4c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x36e6, gbc.sp());
        EXPECT(0xb78e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb78d));
    }
