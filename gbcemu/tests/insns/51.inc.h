    TEST(gbcemu, opcode_51) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 51 0000
        gbc.setState(0x73f4, 0x2c0f, 0x9630, 0x3ba6, 0xd573, 0x3c8c, 0x0, 0x0);
        gbc.writeMem(0x73f4, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2c0f);
        EXPECT(gbc.pc(), 0x73f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0001
        gbc.setState(0xe11d, 0x212b, 0x2c80, 0xe23b, 0xd630, 0xc187, 0x1, 0x1);
        gbc.writeMem(0xe11d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x212b);
        EXPECT(gbc.pc(), 0xe11e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe11d), 0x51);
        // 51 0002
        gbc.setState(0xbbe0, 0x4d67, 0x62e0, 0xe8eb, 0xe756, 0xb863, 0x0, 0x1);
        gbc.writeMem(0xbbe0, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4d67);
        EXPECT(gbc.pc(), 0xbbe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbe0), 0x51);
        // 51 0003
        gbc.setState(0x5d2, 0x9b16, 0x9e10, 0x3108, 0xe8df, 0x89aa, 0x0, 0x0);
        gbc.writeMem(0x5d2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x9b16);
        EXPECT(gbc.pc(), 0x5d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0004
        gbc.setState(0x63a8, 0x3dc7, 0xc8e0, 0x64f0, 0x7180, 0x15ea, 0x1, 0x1);
        gbc.writeMem(0x63a8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3dc7);
        EXPECT(gbc.pc(), 0x63a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0005
        gbc.setState(0xafe1, 0x5e24, 0x94a0, 0xcdf5, 0x5192, 0xf416, 0x0, 0x0);
        gbc.writeMem(0xafe1, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5e24);
        EXPECT(gbc.pc(), 0xafe2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafe1), 0x51);
        // 51 0006
        gbc.setState(0xe90a, 0x911b, 0x2a20, 0xcf17, 0xf5fe, 0x6362, 0x0, 0x1);
        gbc.writeMem(0xe90a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x911b);
        EXPECT(gbc.pc(), 0xe90b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe90a), 0x51);
        // 51 0007
        gbc.setState(0x4273, 0x4635, 0x9720, 0xdcf9, 0x25a, 0xb782, 0x1, 0x1);
        gbc.writeMem(0x4273, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4635);
        EXPECT(gbc.pc(), 0x4274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0008
        gbc.setState(0x2390, 0x1d0c, 0xcea0, 0x3b6d, 0x84b, 0x1bf1, 0x1, 0x1);
        gbc.writeMem(0x2390, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1d0c);
        EXPECT(gbc.pc(), 0x2391);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0009
        gbc.setState(0x6e1f, 0x1d53, 0x48a0, 0x61ae, 0x9feb, 0x9976, 0x1, 0x1);
        gbc.writeMem(0x6e1f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1d53);
        EXPECT(gbc.pc(), 0x6e20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 000A
        gbc.setState(0xdb47, 0x28d6, 0x6ba0, 0xbc5c, 0x3ae3, 0xa1c4, 0x1, 0x0);
        gbc.writeMem(0xdb47, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x28d6);
        EXPECT(gbc.pc(), 0xdb48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb47), 0x51);
        // 51 000B
        gbc.setState(0x9866, 0x8354, 0x36d0, 0xc4dd, 0xc734, 0x8063, 0x0, 0x1);
        gbc.writeMem(0x9866, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8354);
        EXPECT(gbc.pc(), 0x9867);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9866), 0x51);
        // 51 000C
        gbc.setState(0xa56e, 0x910f, 0x130, 0x7744, 0x5fd4, 0x2f46, 0x0, 0x1);
        gbc.writeMem(0xa56e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x910f);
        EXPECT(gbc.pc(), 0xa56f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa56e), 0x51);
        // 51 000D
        gbc.setState(0xcedc, 0x16f0, 0xecc0, 0xc61, 0xaa77, 0xfdda, 0x0, 0x1);
        gbc.writeMem(0xcedc, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x16f0);
        EXPECT(gbc.pc(), 0xcedd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcedc), 0x51);
        // 51 000E
        gbc.setState(0xe3fb, 0x9850, 0x4e80, 0x35e1, 0x8787, 0x2c8d, 0x0, 0x0);
        gbc.writeMem(0xe3fb, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x9850);
        EXPECT(gbc.pc(), 0xe3fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3fb), 0x51);
        // 51 000F
        gbc.setState(0xa4bf, 0xf240, 0xd2d0, 0x5382, 0xa157, 0x3a08, 0x0, 0x0);
        gbc.writeMem(0xa4bf, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf240);
        EXPECT(gbc.pc(), 0xa4c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4bf), 0x51);
        // 51 0010
        gbc.setState(0xcf23, 0xab40, 0x50d0, 0xb084, 0x3984, 0x4556, 0x0, 0x0);
        gbc.writeMem(0xcf23, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xab40);
        EXPECT(gbc.pc(), 0xcf24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf23), 0x51);
        // 51 0011
        gbc.setState(0xbdf, 0x585d, 0xb6f0, 0x12a1, 0xe32b, 0xfe7c, 0x1, 0x1);
        gbc.writeMem(0xbdf, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x585d);
        EXPECT(gbc.pc(), 0xbe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0012
        gbc.setState(0x3f9, 0x812e, 0xab0, 0xc6aa, 0xfbc6, 0xf891, 0x1, 0x0);
        gbc.writeMem(0x3f9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x812e);
        EXPECT(gbc.pc(), 0x3fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0013
        gbc.setState(0xbdb2, 0xa30a, 0x8940, 0x7c4a, 0x8801, 0x893e, 0x1, 0x1);
        gbc.writeMem(0xbdb2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa30a);
        EXPECT(gbc.pc(), 0xbdb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb2), 0x51);
        // 51 0014
        gbc.setState(0xafc1, 0xba4c, 0xd840, 0xf4d7, 0x9b3b, 0x8ce5, 0x0, 0x0);
        gbc.writeMem(0xafc1, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xba4c);
        EXPECT(gbc.pc(), 0xafc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc1), 0x51);
        // 51 0015
        gbc.setState(0x96cb, 0x84a7, 0xad90, 0xa47d, 0x4351, 0xf427, 0x1, 0x0);
        gbc.writeMem(0x96cb, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x84a7);
        EXPECT(gbc.pc(), 0x96cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96cb), 0x51);
        // 51 0016
        gbc.setState(0x62da, 0xf9ec, 0x8b0, 0xa56b, 0xb1c7, 0xe7f0, 0x0, 0x1);
        gbc.writeMem(0x62da, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf9ec);
        EXPECT(gbc.pc(), 0x62db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0017
        gbc.setState(0xaf0e, 0xa009, 0x3a70, 0x1d09, 0x9b85, 0x5071, 0x1, 0x0);
        gbc.writeMem(0xaf0e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa009);
        EXPECT(gbc.pc(), 0xaf0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf0e), 0x51);
        // 51 0018
        gbc.setState(0xbb95, 0x5c2a, 0xa40, 0xb2f7, 0x234, 0x8ddf, 0x1, 0x1);
        gbc.writeMem(0xbb95, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5c2a);
        EXPECT(gbc.pc(), 0xbb96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb95), 0x51);
        // 51 0019
        gbc.setState(0x470b, 0x410b, 0xd7a0, 0x4124, 0xd4d1, 0xf37f, 0x1, 0x1);
        gbc.writeMem(0x470b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x410b);
        EXPECT(gbc.pc(), 0x470c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 001A
        gbc.setState(0x3bbc, 0x666d, 0x93d0, 0xa396, 0xb422, 0xac4, 0x1, 0x1);
        gbc.writeMem(0x3bbc, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x666d);
        EXPECT(gbc.pc(), 0x3bbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 001B
        gbc.setState(0x15c1, 0x8021, 0xa370, 0x8f14, 0xaa03, 0xed19, 0x1, 0x1);
        gbc.writeMem(0x15c1, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8021);
        EXPECT(gbc.pc(), 0x15c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 001C
        gbc.setState(0x3cfb, 0x3f35, 0x5790, 0x1e5c, 0xa696, 0xfc, 0x0, 0x1);
        gbc.writeMem(0x3cfb, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3f35);
        EXPECT(gbc.pc(), 0x3cfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 001D
        gbc.setState(0xbdc7, 0xd9ac, 0x53b0, 0xb02d, 0x4643, 0xefec, 0x0, 0x0);
        gbc.writeMem(0xbdc7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd9ac);
        EXPECT(gbc.pc(), 0xbdc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdc7), 0x51);
        // 51 001E
        gbc.setState(0x1304, 0xad59, 0x8ee0, 0xe423, 0x4788, 0x71d4, 0x1, 0x0);
        gbc.writeMem(0x1304, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xad59);
        EXPECT(gbc.pc(), 0x1305);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 001F
        gbc.setState(0x59ff, 0xfbb9, 0xd120, 0xee7e, 0x337f, 0x24ff, 0x0, 0x0);
        gbc.writeMem(0x59ff, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xfbb9);
        EXPECT(gbc.pc(), 0x5a00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0020
        gbc.setState(0xb5cb, 0x8a50, 0x9db0, 0x40c2, 0x2a95, 0x13f, 0x0, 0x1);
        gbc.writeMem(0xb5cb, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8a50);
        EXPECT(gbc.pc(), 0xb5cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5cb), 0x51);
        // 51 0021
        gbc.setState(0xa800, 0x2f88, 0x3d0, 0x4cf9, 0xbbeb, 0x5a5c, 0x1, 0x0);
        gbc.writeMem(0xa800, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2f88);
        EXPECT(gbc.pc(), 0xa801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa800), 0x51);
        // 51 0022
        gbc.setState(0x707d, 0x977f, 0x87c0, 0x9ff0, 0xb482, 0x3316, 0x1, 0x1);
        gbc.writeMem(0x707d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x977f);
        EXPECT(gbc.pc(), 0x707e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0023
        gbc.setState(0x9812, 0xcb45, 0x7f80, 0x841c, 0x56e5, 0xda4c, 0x0, 0x1);
        gbc.writeMem(0x9812, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xcb45);
        EXPECT(gbc.pc(), 0x9813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9812), 0x51);
        // 51 0024
        gbc.setState(0xb37d, 0x85b8, 0x2e70, 0x6b86, 0xd691, 0xe87d, 0x0, 0x1);
        gbc.writeMem(0xb37d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x85b8);
        EXPECT(gbc.pc(), 0xb37e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb37d), 0x51);
        // 51 0025
        gbc.setState(0xaf0c, 0xf144, 0xd0c0, 0x7ba0, 0x9e19, 0x43bd, 0x1, 0x0);
        gbc.writeMem(0xaf0c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf144);
        EXPECT(gbc.pc(), 0xaf0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf0c), 0x51);
        // 51 0026
        gbc.setState(0x9fe9, 0xff8, 0x8cc0, 0x657a, 0x98f, 0xa2f, 0x1, 0x1);
        gbc.writeMem(0x9fe9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xff8);
        EXPECT(gbc.pc(), 0x9fea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fe9), 0x51);
        // 51 0027
        gbc.setState(0xa03, 0x9a29, 0x2e00, 0xb8c1, 0xa15e, 0x6778, 0x0, 0x0);
        gbc.writeMem(0xa03, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9a29);
        EXPECT(gbc.pc(), 0xa04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0028
        gbc.setState(0x8d88, 0xd1ec, 0x2eb0, 0x97cc, 0x9a9, 0xd264, 0x1, 0x0);
        gbc.writeMem(0x8d88, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd1ec);
        EXPECT(gbc.pc(), 0x8d89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d88), 0x51);
        // 51 0029
        gbc.setState(0x94e8, 0x736, 0xc5a0, 0xf148, 0xdd48, 0x53cf, 0x1, 0x1);
        gbc.writeMem(0x94e8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x736);
        EXPECT(gbc.pc(), 0x94e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94e8), 0x51);
        // 51 002A
        gbc.setState(0xa1e9, 0x280, 0xfcb0, 0x4be9, 0x61a1, 0x2a8f, 0x1, 0x1);
        gbc.writeMem(0xa1e9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x280);
        EXPECT(gbc.pc(), 0xa1ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1e9), 0x51);
        // 51 002B
        gbc.setState(0xc071, 0x47ad, 0x6f0, 0xd45a, 0xe59f, 0xdd2c, 0x1, 0x0);
        gbc.writeMem(0xc071, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x47ad);
        EXPECT(gbc.pc(), 0xc072);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc071), 0x51);
        // 51 002C
        gbc.setState(0x1e8e, 0xa19a, 0x6440, 0xc8a4, 0xdfe4, 0xb342, 0x0, 0x0);
        gbc.writeMem(0x1e8e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa19a);
        EXPECT(gbc.pc(), 0x1e8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 002D
        gbc.setState(0xe406, 0xcaf4, 0xb440, 0xe8f4, 0xc32c, 0x77b6, 0x0, 0x1);
        gbc.writeMem(0xe406, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xcaf4);
        EXPECT(gbc.pc(), 0xe407);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe406), 0x51);
        // 51 002E
        gbc.setState(0xe2e5, 0x67d9, 0x4cf0, 0x49b7, 0x7a1b, 0x7fd0, 0x1, 0x1);
        gbc.writeMem(0xe2e5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x67d9);
        EXPECT(gbc.pc(), 0xe2e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2e5), 0x51);
        // 51 002F
        gbc.setState(0x320e, 0x9141, 0xf8d0, 0x1c40, 0xf4b, 0x6b27, 0x0, 0x0);
        gbc.writeMem(0x320e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9141);
        EXPECT(gbc.pc(), 0x320f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0030
        gbc.setState(0xa639, 0xa4ab, 0x2710, 0x6624, 0xd86d, 0xe9c6, 0x0, 0x1);
        gbc.writeMem(0xa639, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa4ab);
        EXPECT(gbc.pc(), 0xa63a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa639), 0x51);
        // 51 0031
        gbc.setState(0xbdb9, 0x1d5b, 0xdc40, 0xae95, 0xcb62, 0xe708, 0x1, 0x1);
        gbc.writeMem(0xbdb9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1d5b);
        EXPECT(gbc.pc(), 0xbdba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb9), 0x51);
        // 51 0032
        gbc.setState(0x77c0, 0xc936, 0xda10, 0x548b, 0x82, 0xc51, 0x0, 0x0);
        gbc.writeMem(0x77c0, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc936);
        EXPECT(gbc.pc(), 0x77c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0033
        gbc.setState(0x2d8a, 0xdf1a, 0x4a0, 0xde9d, 0xad83, 0x723, 0x1, 0x1);
        gbc.writeMem(0x2d8a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xdf1a);
        EXPECT(gbc.pc(), 0x2d8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0034
        gbc.setState(0xa27f, 0x5db1, 0x7a40, 0x3195, 0x18e7, 0x405a, 0x1, 0x1);
        gbc.writeMem(0xa27f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x5db1);
        EXPECT(gbc.pc(), 0xa280);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa27f), 0x51);
        // 51 0035
        gbc.setState(0xe5fa, 0x3d7c, 0x3d20, 0xca21, 0x36b6, 0x81a5, 0x0, 0x1);
        gbc.writeMem(0xe5fa, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3d7c);
        EXPECT(gbc.pc(), 0xe5fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5fa), 0x51);
        // 51 0036
        gbc.setState(0x1d49, 0x93ed, 0x7150, 0x5b8b, 0x5575, 0xcaca, 0x1, 0x1);
        gbc.writeMem(0x1d49, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x93ed);
        EXPECT(gbc.pc(), 0x1d4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0037
        gbc.setState(0x27d6, 0xb31b, 0x2a00, 0x30e4, 0xb6e9, 0x32c4, 0x1, 0x1);
        gbc.writeMem(0x27d6, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb31b);
        EXPECT(gbc.pc(), 0x27d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0038
        gbc.setState(0x8ac7, 0x61f5, 0x3e80, 0x2ef9, 0x4d9a, 0x89d9, 0x1, 0x1);
        gbc.writeMem(0x8ac7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x61f5);
        EXPECT(gbc.pc(), 0x8ac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ac7), 0x51);
        // 51 0039
        gbc.setState(0xd508, 0xf52d, 0x27a0, 0xc778, 0xfc9b, 0xf6cf, 0x0, 0x1);
        gbc.writeMem(0xd508, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf52d);
        EXPECT(gbc.pc(), 0xd509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd508), 0x51);
        // 51 003A
        gbc.setState(0xa7e0, 0xdc99, 0xe650, 0x3f0, 0xc7a7, 0x372d, 0x0, 0x1);
        gbc.writeMem(0xa7e0, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xdc99);
        EXPECT(gbc.pc(), 0xa7e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7e0), 0x51);
        // 51 003B
        gbc.setState(0xd333, 0x86d2, 0xbdb0, 0x46b9, 0xb026, 0x3eda, 0x1, 0x1);
        gbc.writeMem(0xd333, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x86d2);
        EXPECT(gbc.pc(), 0xd334);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd333), 0x51);
        // 51 003C
        gbc.setState(0xe88d, 0x1dee, 0x7d70, 0xa67a, 0x8278, 0x4b43, 0x0, 0x0);
        gbc.writeMem(0xe88d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1dee);
        EXPECT(gbc.pc(), 0xe88e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe88d), 0x51);
        // 51 003D
        gbc.setState(0x9b13, 0xc35f, 0xede0, 0x8724, 0x3fec, 0xf8fe, 0x1, 0x1);
        gbc.writeMem(0x9b13, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc35f);
        EXPECT(gbc.pc(), 0x9b14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b13), 0x51);
        // 51 003E
        gbc.setState(0xc0df, 0x2e8c, 0x6220, 0xde61, 0x32cf, 0x600e, 0x0, 0x0);
        gbc.writeMem(0xc0df, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2e8c);
        EXPECT(gbc.pc(), 0xc0e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0df), 0x51);
        // 51 003F
        gbc.setState(0x60ef, 0xa24b, 0x3280, 0xe397, 0x8a8c, 0x144d, 0x0, 0x0);
        gbc.writeMem(0x60ef, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa24b);
        EXPECT(gbc.pc(), 0x60f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0040
        gbc.setState(0x1200, 0xd5dd, 0x5070, 0xa601, 0x8b92, 0x2f4a, 0x0, 0x1);
        gbc.writeMem(0x1200, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd5dd);
        EXPECT(gbc.pc(), 0x1201);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0041
        gbc.setState(0x19db, 0x5c09, 0x2280, 0x98a8, 0xb204, 0x82f1, 0x1, 0x0);
        gbc.writeMem(0x19db, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5c09);
        EXPECT(gbc.pc(), 0x19dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0042
        gbc.setState(0x5e98, 0xb79c, 0xc220, 0xa755, 0x3afc, 0x94b8, 0x0, 0x0);
        gbc.writeMem(0x5e98, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb79c);
        EXPECT(gbc.pc(), 0x5e99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0043
        gbc.setState(0x40f6, 0x2f7a, 0xe600, 0x8543, 0xc1c9, 0x58fc, 0x1, 0x1);
        gbc.writeMem(0x40f6, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2f7a);
        EXPECT(gbc.pc(), 0x40f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0044
        gbc.setState(0x3ad1, 0x28d0, 0x6880, 0x334, 0x826c, 0xbb78, 0x0, 0x1);
        gbc.writeMem(0x3ad1, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x28d0);
        EXPECT(gbc.pc(), 0x3ad2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0045
        gbc.setState(0x234f, 0xeeae, 0xbd10, 0x31c7, 0x399, 0xd6ed, 0x0, 0x0);
        gbc.writeMem(0x234f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xeeae);
        EXPECT(gbc.pc(), 0x2350);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0046
        gbc.setState(0x799, 0xf84a, 0x7cc0, 0x21c5, 0xca7b, 0x2fef, 0x0, 0x1);
        gbc.writeMem(0x799, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf84a);
        EXPECT(gbc.pc(), 0x79a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0047
        gbc.setState(0xd0d6, 0xac4f, 0xa770, 0x6e0c, 0xa371, 0x4615, 0x0, 0x1);
        gbc.writeMem(0xd0d6, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xac4f);
        EXPECT(gbc.pc(), 0xd0d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0d6), 0x51);
        // 51 0048
        gbc.setState(0x9ace, 0x1ead, 0xed0, 0x854a, 0xd05d, 0x55a1, 0x0, 0x1);
        gbc.writeMem(0x9ace, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x1ead);
        EXPECT(gbc.pc(), 0x9acf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ace), 0x51);
        // 51 0049
        gbc.setState(0xc132, 0xc6c2, 0x6db0, 0x7ba6, 0x4981, 0x3722, 0x1, 0x1);
        gbc.writeMem(0xc132, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc6c2);
        EXPECT(gbc.pc(), 0xc133);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc132), 0x51);
        // 51 004A
        gbc.setState(0x26a2, 0x59f2, 0x6f10, 0x747, 0x4525, 0xa0bb, 0x0, 0x0);
        gbc.writeMem(0x26a2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x59f2);
        EXPECT(gbc.pc(), 0x26a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 004B
        gbc.setState(0xeea7, 0x9e83, 0xb060, 0x3e2c, 0x60cc, 0xb825, 0x1, 0x1);
        gbc.writeMem(0xeea7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9e83);
        EXPECT(gbc.pc(), 0xeea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeea7), 0x51);
        // 51 004C
        gbc.setState(0xd6e7, 0x3eef, 0xa4a0, 0x97fb, 0x689f, 0x5d9a, 0x0, 0x1);
        gbc.writeMem(0xd6e7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x3eef);
        EXPECT(gbc.pc(), 0xd6e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e7), 0x51);
        // 51 004D
        gbc.setState(0x7913, 0xa609, 0x5180, 0xa4a0, 0x34ab, 0x231b, 0x0, 0x1);
        gbc.writeMem(0x7913, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa609);
        EXPECT(gbc.pc(), 0x7914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 004E
        gbc.setState(0xab17, 0x8f00, 0x3a0, 0x4e2d, 0x48b7, 0x3766, 0x0, 0x1);
        gbc.writeMem(0xab17, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8f00);
        EXPECT(gbc.pc(), 0xab18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab17), 0x51);
        // 51 004F
        gbc.setState(0x6be, 0x6921, 0xf610, 0x7049, 0x2413, 0xa6cc, 0x0, 0x0);
        gbc.writeMem(0x6be, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6921);
        EXPECT(gbc.pc(), 0x6bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0050
        gbc.setState(0xd7e6, 0xe551, 0xdf30, 0x72f2, 0xa5ef, 0xf072, 0x0, 0x1);
        gbc.writeMem(0xd7e6, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe551);
        EXPECT(gbc.pc(), 0xd7e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7e6), 0x51);
        // 51 0051
        gbc.setState(0xd5df, 0x9f3a, 0x990, 0x58b9, 0x884c, 0xf9a7, 0x0, 0x0);
        gbc.writeMem(0xd5df, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9f3a);
        EXPECT(gbc.pc(), 0xd5e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5df), 0x51);
        // 51 0052
        gbc.setState(0x3451, 0xfbe2, 0x5480, 0x87a2, 0x7d03, 0x880e, 0x1, 0x1);
        gbc.writeMem(0x3451, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xfbe2);
        EXPECT(gbc.pc(), 0x3452);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0053
        gbc.setState(0x82cf, 0x2d7b, 0x2d60, 0x526a, 0x4f84, 0xbad0, 0x0, 0x1);
        gbc.writeMem(0x82cf, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2d7b);
        EXPECT(gbc.pc(), 0x82d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82cf), 0x51);
        // 51 0054
        gbc.setState(0x42f6, 0x5d13, 0x8d40, 0xcc6b, 0x8c8a, 0x5bdc, 0x1, 0x1);
        gbc.writeMem(0x42f6, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5d13);
        EXPECT(gbc.pc(), 0x42f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0055
        gbc.setState(0xef86, 0x11ac, 0x2540, 0xfa28, 0xa73f, 0xd1b8, 0x1, 0x1);
        gbc.writeMem(0xef86, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x11ac);
        EXPECT(gbc.pc(), 0xef87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef86), 0x51);
        // 51 0056
        gbc.setState(0xe36f, 0x4d9b, 0xcc10, 0x4c32, 0xd42d, 0x556d, 0x0, 0x1);
        gbc.writeMem(0xe36f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x4d9b);
        EXPECT(gbc.pc(), 0xe370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe36f), 0x51);
        // 51 0057
        gbc.setState(0x95b4, 0xbc9a, 0x1800, 0x67c, 0xab29, 0x4a76, 0x0, 0x0);
        gbc.writeMem(0x95b4, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xbc9a);
        EXPECT(gbc.pc(), 0x95b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95b4), 0x51);
        // 51 0058
        gbc.setState(0x6c50, 0xea05, 0x6420, 0xd96a, 0x40c2, 0xd8e6, 0x0, 0x1);
        gbc.writeMem(0x6c50, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xea05);
        EXPECT(gbc.pc(), 0x6c51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0059
        gbc.setState(0xac50, 0x259f, 0x2e10, 0xe22e, 0xf5d9, 0x6418, 0x1, 0x0);
        gbc.writeMem(0xac50, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x259f);
        EXPECT(gbc.pc(), 0xac51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac50), 0x51);
        // 51 005A
        gbc.setState(0xa19a, 0xcf3b, 0x6c60, 0x43a1, 0xf6a7, 0xe230, 0x0, 0x0);
        gbc.writeMem(0xa19a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xcf3b);
        EXPECT(gbc.pc(), 0xa19b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa19a), 0x51);
        // 51 005B
        gbc.setState(0xbc99, 0x7179, 0xc080, 0xc2b0, 0x829d, 0x1e4b, 0x0, 0x1);
        gbc.writeMem(0xbc99, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7179);
        EXPECT(gbc.pc(), 0xbc9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc99), 0x51);
        // 51 005C
        gbc.setState(0xb, 0x12d0, 0x4c90, 0xa6c1, 0xd8b7, 0x1b47, 0x1, 0x1);
        gbc.writeMem(0xb, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x12d0);
        EXPECT(gbc.pc(), 0xc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 005D
        gbc.setState(0xcf04, 0xaedd, 0x43f0, 0xd638, 0xc49, 0xa3e6, 0x0, 0x1);
        gbc.writeMem(0xcf04, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xaedd);
        EXPECT(gbc.pc(), 0xcf05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf04), 0x51);
        // 51 005E
        gbc.setState(0x24a9, 0x5de4, 0xfc10, 0x5ca8, 0x7630, 0xe311, 0x0, 0x0);
        gbc.writeMem(0x24a9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5de4);
        EXPECT(gbc.pc(), 0x24aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 005F
        gbc.setState(0x742d, 0xb05c, 0x8c10, 0xa2cd, 0x449, 0x1fe8, 0x0, 0x1);
        gbc.writeMem(0x742d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb05c);
        EXPECT(gbc.pc(), 0x742e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0060
        gbc.setState(0xaa78, 0xa584, 0x2470, 0x83e5, 0xa409, 0xbe68, 0x0, 0x1);
        gbc.writeMem(0xaa78, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa584);
        EXPECT(gbc.pc(), 0xaa79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa78), 0x51);
        // 51 0061
        gbc.setState(0x9bb9, 0x616, 0x2ca0, 0xba49, 0x6095, 0x641b, 0x1, 0x0);
        gbc.writeMem(0x9bb9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x616);
        EXPECT(gbc.pc(), 0x9bba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bb9), 0x51);
        // 51 0062
        gbc.setState(0x9852, 0x9556, 0xa290, 0x1f8f, 0x19e2, 0xc089, 0x1, 0x1);
        gbc.writeMem(0x9852, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9556);
        EXPECT(gbc.pc(), 0x9853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9852), 0x51);
        // 51 0063
        gbc.setState(0xcf71, 0x1392, 0xa600, 0x1bbe, 0x5a74, 0xd3ce, 0x0, 0x1);
        gbc.writeMem(0xcf71, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1392);
        EXPECT(gbc.pc(), 0xcf72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf71), 0x51);
        // 51 0064
        gbc.setState(0xb05, 0x27d2, 0x6430, 0xf7e9, 0xf671, 0x4aae, 0x0, 0x0);
        gbc.writeMem(0xb05, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x27d2);
        EXPECT(gbc.pc(), 0xb06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0066
        gbc.setState(0xee01, 0xca86, 0xb650, 0x43b5, 0xb55e, 0xe469, 0x0, 0x1);
        gbc.writeMem(0xee01, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xca86);
        EXPECT(gbc.pc(), 0xee02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee01), 0x51);
        // 51 0067
        gbc.setState(0x7c88, 0x3616, 0x4e40, 0xe794, 0x7247, 0x9fc1, 0x0, 0x1);
        gbc.writeMem(0x7c88, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3616);
        EXPECT(gbc.pc(), 0x7c89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0068
        gbc.setState(0x5c7e, 0xd76f, 0xdd80, 0x7efb, 0x6524, 0xc172, 0x1, 0x0);
        gbc.writeMem(0x5c7e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd76f);
        EXPECT(gbc.pc(), 0x5c7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 006A
        gbc.setState(0x50d5, 0xc104, 0x7530, 0xd79e, 0x8a2a, 0xa7fb, 0x0, 0x1);
        gbc.writeMem(0x50d5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc104);
        EXPECT(gbc.pc(), 0x50d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 006B
        gbc.setState(0xe57, 0x4520, 0xb610, 0xb4d0, 0xbee, 0x2a9e, 0x1, 0x1);
        gbc.writeMem(0xe57, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4520);
        EXPECT(gbc.pc(), 0xe58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 006C
        gbc.setState(0xc445, 0x9398, 0x7ca0, 0x2424, 0x7dd8, 0x2859, 0x1, 0x0);
        gbc.writeMem(0xc445, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9398);
        EXPECT(gbc.pc(), 0xc446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc445), 0x51);
        // 51 006D
        gbc.setState(0xcea2, 0xee7, 0xfd30, 0x5c17, 0x44f3, 0x9c65, 0x1, 0x0);
        gbc.writeMem(0xcea2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xee7);
        EXPECT(gbc.pc(), 0xcea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcea2), 0x51);
        // 51 006E
        gbc.setState(0x9030, 0x5666, 0x1fb0, 0x671, 0x2c6b, 0x5e91, 0x0, 0x1);
        gbc.writeMem(0x9030, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x5666);
        EXPECT(gbc.pc(), 0x9031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9030), 0x51);
        // 51 006F
        gbc.setState(0xd09, 0xb4c, 0x4e00, 0x994e, 0x877d, 0x1e4a, 0x1, 0x0);
        gbc.writeMem(0xd09, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb4c);
        EXPECT(gbc.pc(), 0xd0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0070
        gbc.setState(0x8008, 0x2de8, 0x7ba0, 0x74c2, 0x68df, 0x43fe, 0x0, 0x1);
        gbc.writeMem(0x8008, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2de8);
        EXPECT(gbc.pc(), 0x8009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8008), 0x51);
        // 51 0071
        gbc.setState(0xbe9, 0xa110, 0xa410, 0xb9a9, 0xc547, 0x5b97, 0x0, 0x0);
        gbc.writeMem(0xbe9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa110);
        EXPECT(gbc.pc(), 0xbea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0072
        gbc.setState(0x1b31, 0xa738, 0x140, 0x403d, 0x63d6, 0xe3d4, 0x1, 0x0);
        gbc.writeMem(0x1b31, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa738);
        EXPECT(gbc.pc(), 0x1b32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0073
        gbc.setState(0x34ea, 0x649d, 0x5870, 0x6e46, 0x5d08, 0xc3d3, 0x0, 0x1);
        gbc.writeMem(0x34ea, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x649d);
        EXPECT(gbc.pc(), 0x34eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0074
        gbc.setState(0x9095, 0xba95, 0xcc80, 0xa44f, 0x3453, 0xbdea, 0x0, 0x1);
        gbc.writeMem(0x9095, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xba95);
        EXPECT(gbc.pc(), 0x9096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9095), 0x51);
        // 51 0075
        gbc.setState(0x2ce9, 0xd628, 0x9620, 0x309a, 0x4cd8, 0x6606, 0x1, 0x0);
        gbc.writeMem(0x2ce9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd628);
        EXPECT(gbc.pc(), 0x2cea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0076
        gbc.setState(0x28e, 0x721c, 0x6c70, 0x8c04, 0x8aa0, 0xd899, 0x1, 0x1);
        gbc.writeMem(0x28e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x721c);
        EXPECT(gbc.pc(), 0x28f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0077
        gbc.setState(0x4cce, 0xc399, 0x7ac0, 0x4b13, 0xe953, 0x9c16, 0x1, 0x0);
        gbc.writeMem(0x4cce, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc399);
        EXPECT(gbc.pc(), 0x4ccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0078
        gbc.setState(0xd4a5, 0x6c4b, 0xdef0, 0xa628, 0x69fa, 0xc557, 0x1, 0x1);
        gbc.writeMem(0xd4a5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6c4b);
        EXPECT(gbc.pc(), 0xd4a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4a5), 0x51);
        // 51 0079
        gbc.setState(0x2152, 0xd678, 0x9300, 0x589c, 0x36ac, 0x985a, 0x0, 0x1);
        gbc.writeMem(0x2152, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xd678);
        EXPECT(gbc.pc(), 0x2153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 007A
        gbc.setState(0x27be, 0xed98, 0x1720, 0x57e6, 0xdc88, 0x72e2, 0x0, 0x1);
        gbc.writeMem(0x27be, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xed98);
        EXPECT(gbc.pc(), 0x27bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 007B
        gbc.setState(0xd88b, 0xcc59, 0x8720, 0xd1c7, 0xb73b, 0x4d0b, 0x1, 0x0);
        gbc.writeMem(0xd88b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xcc59);
        EXPECT(gbc.pc(), 0xd88c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd88b), 0x51);
        // 51 007C
        gbc.setState(0xd64d, 0xe906, 0xab30, 0xbb60, 0xd7fe, 0xc541, 0x1, 0x0);
        gbc.writeMem(0xd64d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe906);
        EXPECT(gbc.pc(), 0xd64e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd64d), 0x51);
        // 51 007D
        gbc.setState(0x4ab8, 0xe577, 0xda60, 0xa6b9, 0xcec0, 0xcc29, 0x0, 0x1);
        gbc.writeMem(0x4ab8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe577);
        EXPECT(gbc.pc(), 0x4ab9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 007E
        gbc.setState(0x3e8d, 0x7e6c, 0x95d0, 0xd24e, 0x59f5, 0xdf69, 0x0, 0x1);
        gbc.writeMem(0x3e8d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x7e6c);
        EXPECT(gbc.pc(), 0x3e8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 007F
        gbc.setState(0xb0a, 0x6d46, 0xa8c0, 0xe499, 0x4f52, 0x64f0, 0x1, 0x1);
        gbc.writeMem(0xb0a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6d46);
        EXPECT(gbc.pc(), 0xb0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0080
        gbc.setState(0x8b2c, 0xbd32, 0xfc90, 0xe2f8, 0x5ad0, 0x1e40, 0x1, 0x1);
        gbc.writeMem(0x8b2c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xbd32);
        EXPECT(gbc.pc(), 0x8b2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b2c), 0x51);
        // 51 0081
        gbc.setState(0xf33, 0x225e, 0xbe50, 0xdacd, 0x3ba0, 0x4530, 0x0, 0x1);
        gbc.writeMem(0xf33, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x225e);
        EXPECT(gbc.pc(), 0xf34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0082
        gbc.setState(0xb1f3, 0xac6d, 0xdd10, 0x247f, 0x2ce, 0x8b1d, 0x1, 0x0);
        gbc.writeMem(0xb1f3, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xac6d);
        EXPECT(gbc.pc(), 0xb1f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1f3), 0x51);
        // 51 0083
        gbc.setState(0x7533, 0xc4d6, 0x94f0, 0x74be, 0x6a8a, 0xc, 0x1, 0x0);
        gbc.writeMem(0x7533, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc4d6);
        EXPECT(gbc.pc(), 0x7534);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0084
        gbc.setState(0x44e, 0xdd3a, 0x960, 0x35a, 0x9bf4, 0x7c42, 0x0, 0x0);
        gbc.writeMem(0x44e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xdd3a);
        EXPECT(gbc.pc(), 0x44f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0085
        gbc.setState(0x435b, 0x6ee1, 0xe20, 0xf650, 0x7ef3, 0x618f, 0x1, 0x0);
        gbc.writeMem(0x435b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6ee1);
        EXPECT(gbc.pc(), 0x435c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0086
        gbc.setState(0x80f5, 0x489b, 0xdf40, 0x8e6d, 0xdd21, 0x7b29, 0x0, 0x0);
        gbc.writeMem(0x80f5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x489b);
        EXPECT(gbc.pc(), 0x80f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80f5), 0x51);
        // 51 0087
        gbc.setState(0x59eb, 0x2b5c, 0x19a0, 0x70e5, 0x339a, 0x1d19, 0x0, 0x0);
        gbc.writeMem(0x59eb, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2b5c);
        EXPECT(gbc.pc(), 0x59ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0088
        gbc.setState(0x29f9, 0x16a3, 0xa2f0, 0x889a, 0x89f0, 0xde91, 0x1, 0x0);
        gbc.writeMem(0x29f9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x16a3);
        EXPECT(gbc.pc(), 0x29fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0089
        gbc.setState(0x4916, 0xfff3, 0xa590, 0x59ea, 0x7de0, 0xa106, 0x0, 0x1);
        gbc.writeMem(0x4916, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xfff3);
        EXPECT(gbc.pc(), 0x4917);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 008B
        gbc.setState(0x7857, 0x8a9a, 0xaf90, 0x1415, 0x1f32, 0x1725, 0x0, 0x0);
        gbc.writeMem(0x7857, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8a9a);
        EXPECT(gbc.pc(), 0x7858);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 008C
        gbc.setState(0x80fa, 0x310e, 0x3b40, 0x6f78, 0x7a5e, 0xb81e, 0x0, 0x1);
        gbc.writeMem(0x80fa, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x310e);
        EXPECT(gbc.pc(), 0x80fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80fa), 0x51);
        // 51 008D
        gbc.setState(0x593d, 0x8515, 0x61e0, 0x2bb8, 0xb00f, 0x9159, 0x1, 0x0);
        gbc.writeMem(0x593d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8515);
        EXPECT(gbc.pc(), 0x593e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 008E
        gbc.setState(0x11c8, 0xbb95, 0xe530, 0x6eda, 0x12ed, 0x86a6, 0x1, 0x1);
        gbc.writeMem(0x11c8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xbb95);
        EXPECT(gbc.pc(), 0x11c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 008F
        gbc.setState(0x56d2, 0x29eb, 0x3300, 0x916d, 0x6211, 0x6bdc, 0x1, 0x0);
        gbc.writeMem(0x56d2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x29eb);
        EXPECT(gbc.pc(), 0x56d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0090
        gbc.setState(0x4e1b, 0x4706, 0x7700, 0x9b6a, 0x7340, 0x8683, 0x0, 0x0);
        gbc.writeMem(0x4e1b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4706);
        EXPECT(gbc.pc(), 0x4e1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0091
        gbc.setState(0x891d, 0xdd91, 0xdda0, 0x994f, 0x279c, 0x9031, 0x1, 0x1);
        gbc.writeMem(0x891d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xdd91);
        EXPECT(gbc.pc(), 0x891e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x891d), 0x51);
        // 51 0092
        gbc.setState(0xbc09, 0xad38, 0x9d40, 0xd105, 0x325, 0x3eb3, 0x1, 0x1);
        gbc.writeMem(0xbc09, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xad38);
        EXPECT(gbc.pc(), 0xbc0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc09), 0x51);
        // 51 0093
        gbc.setState(0xc745, 0x7eeb, 0x14d0, 0x954a, 0x9090, 0xbcbf, 0x1, 0x0);
        gbc.writeMem(0xc745, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7eeb);
        EXPECT(gbc.pc(), 0xc746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc745), 0x51);
        // 51 0094
        gbc.setState(0x27e0, 0xb8e7, 0xbce0, 0x2cca, 0xa3c8, 0x43aa, 0x0, 0x0);
        gbc.writeMem(0x27e0, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xb8e7);
        EXPECT(gbc.pc(), 0x27e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0095
        gbc.setState(0xda3a, 0x2b2e, 0x4e50, 0x55f6, 0x9726, 0x552f, 0x1, 0x0);
        gbc.writeMem(0xda3a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2b2e);
        EXPECT(gbc.pc(), 0xda3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda3a), 0x51);
        // 51 0096
        gbc.setState(0x6c97, 0xb2e4, 0x38a0, 0x28bb, 0x33e6, 0xdb9a, 0x1, 0x0);
        gbc.writeMem(0x6c97, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb2e4);
        EXPECT(gbc.pc(), 0x6c98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0097
        gbc.setState(0x2929, 0xa19, 0x3e90, 0x882f, 0x12f7, 0x57b3, 0x1, 0x1);
        gbc.writeMem(0x2929, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa19);
        EXPECT(gbc.pc(), 0x292a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0098
        gbc.setState(0x1ffa, 0xfe2, 0xb360, 0xea0a, 0x7d71, 0x5d01, 0x0, 0x0);
        gbc.writeMem(0x1ffa, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xfe2);
        EXPECT(gbc.pc(), 0x1ffb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0099
        gbc.setState(0x88a1, 0x2579, 0x6780, 0x194f, 0xbdcc, 0x7fb5, 0x0, 0x0);
        gbc.writeMem(0x88a1, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2579);
        EXPECT(gbc.pc(), 0x88a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88a1), 0x51);
        // 51 009A
        gbc.setState(0x210b, 0x61e0, 0x2c70, 0x5772, 0x9ec9, 0x581a, 0x1, 0x1);
        gbc.writeMem(0x210b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x61e0);
        EXPECT(gbc.pc(), 0x210c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 009B
        gbc.setState(0xc84a, 0x22a7, 0x2560, 0x7504, 0x86e5, 0x3955, 0x0, 0x0);
        gbc.writeMem(0xc84a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x22a7);
        EXPECT(gbc.pc(), 0xc84b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc84a), 0x51);
        // 51 009C
        gbc.setState(0xc5c9, 0x2482, 0xe220, 0xbbd0, 0xa738, 0xb2a, 0x0, 0x0);
        gbc.writeMem(0xc5c9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2482);
        EXPECT(gbc.pc(), 0xc5ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5c9), 0x51);
        // 51 009D
        gbc.setState(0xdc3b, 0xbe8f, 0xe3b0, 0xfa82, 0xcc82, 0x5c8b, 0x0, 0x1);
        gbc.writeMem(0xdc3b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xbe8f);
        EXPECT(gbc.pc(), 0xdc3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc3b), 0x51);
        // 51 009E
        gbc.setState(0x914c, 0x5266, 0x2450, 0x25e8, 0x4d7d, 0x41f, 0x1, 0x0);
        gbc.writeMem(0x914c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5266);
        EXPECT(gbc.pc(), 0x914d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x914c), 0x51);
        // 51 009F
        gbc.setState(0x2ccd, 0xfe05, 0xca80, 0x5373, 0xdb78, 0xf032, 0x1, 0x1);
        gbc.writeMem(0x2ccd, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xfe05);
        EXPECT(gbc.pc(), 0x2cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 00A1
        gbc.setState(0x34a0, 0xf27c, 0x4bf0, 0xd45f, 0xe72c, 0xbbc2, 0x1, 0x1);
        gbc.writeMem(0x34a0, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf27c);
        EXPECT(gbc.pc(), 0x34a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 00A2
        gbc.setState(0x5064, 0xe31f, 0xef80, 0x418c, 0x37dc, 0x68d1, 0x0, 0x0);
        gbc.writeMem(0x5064, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe31f);
        EXPECT(gbc.pc(), 0x5065);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 00A3
        gbc.setState(0x5835, 0x24fd, 0x8930, 0xbe59, 0x4b2d, 0xdfdb, 0x1, 0x0);
        gbc.writeMem(0x5835, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x24fd);
        EXPECT(gbc.pc(), 0x5836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 00A4
        gbc.setState(0xb073, 0x8239, 0x34c0, 0x954a, 0x7f72, 0x7a2d, 0x0, 0x1);
        gbc.writeMem(0xb073, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8239);
        EXPECT(gbc.pc(), 0xb074);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb073), 0x51);
        // 51 00A5
        gbc.setState(0x5207, 0xa4d6, 0xbdc0, 0x2d73, 0x8568, 0x942c, 0x0, 0x0);
        gbc.writeMem(0x5207, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa4d6);
        EXPECT(gbc.pc(), 0x5208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 00A6
        gbc.setState(0x7ac4, 0xf929, 0x90, 0xfd9b, 0xdf8c, 0x229f, 0x0, 0x1);
        gbc.writeMem(0x7ac4, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf929);
        EXPECT(gbc.pc(), 0x7ac5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 00A7
        gbc.setState(0x2b12, 0xa9e2, 0x790, 0x7493, 0x30c8, 0xabe8, 0x1, 0x0);
        gbc.writeMem(0x2b12, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa9e2);
        EXPECT(gbc.pc(), 0x2b13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 00A8
        gbc.setState(0x7004, 0xc234, 0xe080, 0xe939, 0xb4aa, 0x6798, 0x0, 0x1);
        gbc.writeMem(0x7004, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc234);
        EXPECT(gbc.pc(), 0x7005);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 00A9
        gbc.setState(0xde85, 0x9c9e, 0xaeb0, 0x701d, 0xca48, 0xc7a0, 0x1, 0x1);
        gbc.writeMem(0xde85, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9c9e);
        EXPECT(gbc.pc(), 0xde86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde85), 0x51);
        // 51 00AA
        gbc.setState(0xee3, 0x71d1, 0x430, 0x6425, 0xc825, 0x5ca0, 0x1, 0x1);
        gbc.writeMem(0xee3, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x71d1);
        EXPECT(gbc.pc(), 0xee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 00AB
        gbc.setState(0xd856, 0x69fc, 0xfa20, 0xb8d, 0xc0e4, 0x2620, 0x0, 0x0);
        gbc.writeMem(0xd856, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x69fc);
        EXPECT(gbc.pc(), 0xd857);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd856), 0x51);
        // 51 00AC
        gbc.setState(0x91ff, 0xac5f, 0xc420, 0x3e90, 0x329f, 0x6aa0, 0x0, 0x1);
        gbc.writeMem(0x91ff, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xac5f);
        EXPECT(gbc.pc(), 0x9200);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ff), 0x51);
        // 51 00AD
        gbc.setState(0xc6f4, 0xc473, 0x5cd0, 0x88cd, 0x8ad6, 0xd9e9, 0x0, 0x1);
        gbc.writeMem(0xc6f4, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc473);
        EXPECT(gbc.pc(), 0xc6f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6f4), 0x51);
        // 51 00AE
        gbc.setState(0x7b7c, 0x889d, 0x7ac0, 0x6fb1, 0x52f5, 0x9fad, 0x1, 0x1);
        gbc.writeMem(0x7b7c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x889d);
        EXPECT(gbc.pc(), 0x7b7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 00AF
        gbc.setState(0x9d4f, 0xa1b0, 0xf020, 0x1397, 0x2050, 0x1211, 0x1, 0x1);
        gbc.writeMem(0x9d4f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa1b0);
        EXPECT(gbc.pc(), 0x9d50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d4f), 0x51);
        // 51 00B0
        gbc.setState(0xa62a, 0x86f8, 0xdc40, 0x605e, 0xf28e, 0x19ff, 0x0, 0x0);
        gbc.writeMem(0xa62a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x86f8);
        EXPECT(gbc.pc(), 0xa62b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa62a), 0x51);
        // 51 00B1
        gbc.setState(0xab3, 0xb42e, 0x2570, 0xe19e, 0x5829, 0xfc71, 0x1, 0x1);
        gbc.writeMem(0xab3, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb42e);
        EXPECT(gbc.pc(), 0xab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 00B2
        gbc.setState(0xd25d, 0xff50, 0x9ca0, 0xd11c, 0x2309, 0x64d2, 0x1, 0x0);
        gbc.writeMem(0xd25d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xff50);
        EXPECT(gbc.pc(), 0xd25e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd25d), 0x51);
        // 51 00B3
        gbc.setState(0xcc03, 0x3254, 0x7540, 0x15f2, 0xb9b5, 0x23f8, 0x0, 0x0);
        gbc.writeMem(0xcc03, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3254);
        EXPECT(gbc.pc(), 0xcc04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc03), 0x51);
        // 51 00B5
        gbc.setState(0x13c5, 0x3d9a, 0xa810, 0x1ca8, 0x33d8, 0xe10a, 0x1, 0x1);
        gbc.writeMem(0x13c5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3d9a);
        EXPECT(gbc.pc(), 0x13c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 00B6
        gbc.setState(0x36fb, 0x1d11, 0xcf30, 0x4cf, 0x3564, 0x3a0, 0x1, 0x0);
        gbc.writeMem(0x36fb, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1d11);
        EXPECT(gbc.pc(), 0x36fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 00B7
        gbc.setState(0x77f7, 0xa2aa, 0xf3e0, 0xbc46, 0xccf7, 0x1b52, 0x1, 0x0);
        gbc.writeMem(0x77f7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa2aa);
        EXPECT(gbc.pc(), 0x77f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 00B8
        gbc.setState(0x5269, 0xe6f9, 0x2710, 0xaf20, 0xb6be, 0x2edd, 0x1, 0x0);
        gbc.writeMem(0x5269, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe6f9);
        EXPECT(gbc.pc(), 0x526a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 00B9
        gbc.setState(0x8dbc, 0xf8b6, 0x5680, 0x9613, 0x86cf, 0xa318, 0x1, 0x1);
        gbc.writeMem(0x8dbc, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf8b6);
        EXPECT(gbc.pc(), 0x8dbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dbc), 0x51);
        // 51 00BA
        gbc.setState(0x13be, 0xd222, 0xa140, 0x9d29, 0x2720, 0x293f, 0x0, 0x1);
        gbc.writeMem(0x13be, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd222);
        EXPECT(gbc.pc(), 0x13bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 00BB
        gbc.setState(0xcdd0, 0xa07f, 0xa620, 0x1389, 0x3ca1, 0x3eb7, 0x1, 0x0);
        gbc.writeMem(0xcdd0, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa07f);
        EXPECT(gbc.pc(), 0xcdd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdd0), 0x51);
        // 51 00BC
        gbc.setState(0x6026, 0xb112, 0x3370, 0x88c4, 0x22b7, 0x1ad3, 0x1, 0x1);
        gbc.writeMem(0x6026, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb112);
        EXPECT(gbc.pc(), 0x6027);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 00BD
        gbc.setState(0x9fc6, 0x9000, 0xd840, 0x941, 0xd755, 0x4917, 0x0, 0x0);
        gbc.writeMem(0x9fc6, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x9000);
        EXPECT(gbc.pc(), 0x9fc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fc6), 0x51);
        // 51 00BE
        gbc.setState(0x9ead, 0x4e2, 0x2030, 0xf26b, 0x6a3c, 0x3c6, 0x0, 0x0);
        gbc.writeMem(0x9ead, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4e2);
        EXPECT(gbc.pc(), 0x9eae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ead), 0x51);
        // 51 00BF
        gbc.setState(0x58e8, 0x3b2a, 0xbde0, 0xdfd6, 0x822d, 0x7502, 0x1, 0x0);
        gbc.writeMem(0x58e8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x3b2a);
        EXPECT(gbc.pc(), 0x58e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 00C0
        gbc.setState(0x5ff7, 0xbef5, 0x24c0, 0x54a, 0x6e2b, 0x77c, 0x1, 0x1);
        gbc.writeMem(0x5ff7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xbef5);
        EXPECT(gbc.pc(), 0x5ff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 00C1
        gbc.setState(0x2d93, 0x69aa, 0x69b0, 0x4541, 0x553e, 0x58cb, 0x1, 0x0);
        gbc.writeMem(0x2d93, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x69aa);
        EXPECT(gbc.pc(), 0x2d94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 00C2
        gbc.setState(0xc04f, 0x38c3, 0x8630, 0x4b19, 0x868f, 0x8484, 0x1, 0x1);
        gbc.writeMem(0xc04f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x38c3);
        EXPECT(gbc.pc(), 0xc050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc04f), 0x51);
        // 51 00C4
        gbc.setState(0x1d6a, 0xad01, 0x93c0, 0x172b, 0xb428, 0xf653, 0x1, 0x1);
        gbc.writeMem(0x1d6a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xad01);
        EXPECT(gbc.pc(), 0x1d6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 00C5
        gbc.setState(0x4711, 0xd753, 0x2a70, 0x5e70, 0x9a1b, 0xeefd, 0x0, 0x1);
        gbc.writeMem(0x4711, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd753);
        EXPECT(gbc.pc(), 0x4712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 00C6
        gbc.setState(0x6fe5, 0x9371, 0xdbf0, 0xc0ad, 0x5cb8, 0x4db3, 0x0, 0x0);
        gbc.writeMem(0x6fe5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9371);
        EXPECT(gbc.pc(), 0x6fe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 00C7
        gbc.setState(0x2535, 0x8d13, 0x4990, 0xf1fc, 0xa1aa, 0xe45, 0x1, 0x1);
        gbc.writeMem(0x2535, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8d13);
        EXPECT(gbc.pc(), 0x2536);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 00C8
        gbc.setState(0x5e06, 0x4b81, 0x63c0, 0xbc1a, 0x8cf6, 0x31c9, 0x1, 0x0);
        gbc.writeMem(0x5e06, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4b81);
        EXPECT(gbc.pc(), 0x5e07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 00C9
        gbc.setState(0x3948, 0x748f, 0xbc0, 0x500c, 0xbabc, 0x7d13, 0x1, 0x1);
        gbc.writeMem(0x3948, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x748f);
        EXPECT(gbc.pc(), 0x3949);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 00CA
        gbc.setState(0x80df, 0x6d9d, 0x8c90, 0x85b0, 0x61ce, 0xb78, 0x0, 0x1);
        gbc.writeMem(0x80df, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6d9d);
        EXPECT(gbc.pc(), 0x80e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80df), 0x51);
        // 51 00CB
        gbc.setState(0x8566, 0xe959, 0xa500, 0x1455, 0xece2, 0xf907, 0x0, 0x0);
        gbc.writeMem(0x8566, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe959);
        EXPECT(gbc.pc(), 0x8567);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8566), 0x51);
        // 51 00CC
        gbc.setState(0xdc9d, 0x673b, 0x4330, 0xa141, 0xe64f, 0xcc30, 0x0, 0x1);
        gbc.writeMem(0xdc9d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x673b);
        EXPECT(gbc.pc(), 0xdc9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc9d), 0x51);
        // 51 00CD
        gbc.setState(0x8fcb, 0x2775, 0x98c0, 0xf6e4, 0x24ea, 0x7f03, 0x0, 0x0);
        gbc.writeMem(0x8fcb, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2775);
        EXPECT(gbc.pc(), 0x8fcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fcb), 0x51);
        // 51 00CE
        gbc.setState(0x90c8, 0x6345, 0xe400, 0x5fcb, 0x21a6, 0x4080, 0x0, 0x0);
        gbc.writeMem(0x90c8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x6345);
        EXPECT(gbc.pc(), 0x90c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90c8), 0x51);
        // 51 00CF
        gbc.setState(0x795e, 0x48a7, 0x53e0, 0xd355, 0x40b0, 0x8685, 0x0, 0x1);
        gbc.writeMem(0x795e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x48a7);
        EXPECT(gbc.pc(), 0x795f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 00D0
        gbc.setState(0x93fb, 0xa05, 0xce80, 0x933a, 0xac88, 0x6557, 0x1, 0x0);
        gbc.writeMem(0x93fb, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xa05);
        EXPECT(gbc.pc(), 0x93fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93fb), 0x51);
        // 51 00D1
        gbc.setState(0x9e0c, 0xf0, 0xac60, 0x134a, 0xb508, 0x9255, 0x1, 0x0);
        gbc.writeMem(0x9e0c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf0);
        EXPECT(gbc.pc(), 0x9e0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e0c), 0x51);
        // 51 00D2
        gbc.setState(0xc66d, 0xd547, 0xb540, 0xfd55, 0x96cb, 0x9d58, 0x1, 0x0);
        gbc.writeMem(0xc66d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xd547);
        EXPECT(gbc.pc(), 0xc66e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc66d), 0x51);
        // 51 00D3
        gbc.setState(0xb14f, 0x4ae1, 0x4a50, 0xbf5f, 0x5df8, 0x83e9, 0x1, 0x0);
        gbc.writeMem(0xb14f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4ae1);
        EXPECT(gbc.pc(), 0xb150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb14f), 0x51);
        // 51 00D4
        gbc.setState(0xdeee, 0xb59f, 0x3990, 0xde0, 0xc0b7, 0x2f21, 0x0, 0x0);
        gbc.writeMem(0xdeee, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xb59f);
        EXPECT(gbc.pc(), 0xdeef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeee), 0x51);
        // 51 00D5
        gbc.setState(0x663, 0xd98a, 0xa2c0, 0xa183, 0x7a7b, 0xe72c, 0x1, 0x0);
        gbc.writeMem(0x663, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd98a);
        EXPECT(gbc.pc(), 0x664);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 00D6
        gbc.setState(0x5df9, 0x3c91, 0xe240, 0x78ac, 0xf328, 0x83cd, 0x0, 0x0);
        gbc.writeMem(0x5df9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x3c91);
        EXPECT(gbc.pc(), 0x5dfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 00D7
        gbc.setState(0x2115, 0x5f70, 0xcb00, 0xded4, 0x80a8, 0x1eb4, 0x0, 0x0);
        gbc.writeMem(0x2115, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5f70);
        EXPECT(gbc.pc(), 0x2116);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 00D9
        gbc.setState(0xbcb0, 0x4e93, 0x2b0, 0xf53e, 0x69c8, 0xd878, 0x0, 0x0);
        gbc.writeMem(0xbcb0, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4e93);
        EXPECT(gbc.pc(), 0xbcb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcb0), 0x51);
        // 51 00DB
        gbc.setState(0x6cc7, 0x8f1e, 0x83a0, 0xa84e, 0x8f48, 0x2746, 0x0, 0x1);
        gbc.writeMem(0x6cc7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8f1e);
        EXPECT(gbc.pc(), 0x6cc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 00DC
        gbc.setState(0xbe5a, 0x69c0, 0xb50, 0x33e3, 0xe6fe, 0x9a2f, 0x1, 0x0);
        gbc.writeMem(0xbe5a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x69c0);
        EXPECT(gbc.pc(), 0xbe5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe5a), 0x51);
        // 51 00DD
        gbc.setState(0x70ec, 0x9082, 0xf840, 0xf5e2, 0xa370, 0xcc48, 0x1, 0x1);
        gbc.writeMem(0x70ec, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9082);
        EXPECT(gbc.pc(), 0x70ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 00DE
        gbc.setState(0xd342, 0xc1, 0x9000, 0xe44b, 0x6d18, 0x3b34, 0x1, 0x1);
        gbc.writeMem(0xd342, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc1);
        EXPECT(gbc.pc(), 0xd343);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd342), 0x51);
        // 51 00DF
        gbc.setState(0x58c7, 0x3eb2, 0x6260, 0xc175, 0xbeac, 0xfb68, 0x1, 0x1);
        gbc.writeMem(0x58c7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3eb2);
        EXPECT(gbc.pc(), 0x58c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 00E0
        gbc.setState(0x4fa2, 0x657, 0x7fb0, 0x3a4b, 0x8083, 0x8c5, 0x0, 0x0);
        gbc.writeMem(0x4fa2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x657);
        EXPECT(gbc.pc(), 0x4fa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 00E1
        gbc.setState(0x3f12, 0x8cd2, 0xc510, 0x5a76, 0xd412, 0xdc64, 0x1, 0x0);
        gbc.writeMem(0x3f12, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8cd2);
        EXPECT(gbc.pc(), 0x3f13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 00E2
        gbc.setState(0x58e1, 0x1cee, 0x6480, 0xdc53, 0x123a, 0xe437, 0x1, 0x0);
        gbc.writeMem(0x58e1, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1cee);
        EXPECT(gbc.pc(), 0x58e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 00E3
        gbc.setState(0x30f8, 0x2de0, 0x3030, 0xc5d8, 0xd31, 0xb7, 0x1, 0x0);
        gbc.writeMem(0x30f8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2de0);
        EXPECT(gbc.pc(), 0x30f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 00E4
        gbc.setState(0xa815, 0x26df, 0x6170, 0x4161, 0x6ef1, 0xcf10, 0x0, 0x0);
        gbc.writeMem(0xa815, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x26df);
        EXPECT(gbc.pc(), 0xa816);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa815), 0x51);
        // 51 00E5
        gbc.setState(0x61b3, 0xe8b5, 0x4f90, 0x8213, 0x7772, 0x34c8, 0x0, 0x1);
        gbc.writeMem(0x61b3, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe8b5);
        EXPECT(gbc.pc(), 0x61b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 00E6
        gbc.setState(0x9351, 0x1570, 0xf380, 0x3eb6, 0x61cd, 0x18c4, 0x0, 0x0);
        gbc.writeMem(0x9351, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1570);
        EXPECT(gbc.pc(), 0x9352);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9351), 0x51);
        // 51 00E7
        gbc.setState(0x1e13, 0xe9ac, 0x3420, 0x285a, 0x13cd, 0xa2bc, 0x1, 0x0);
        gbc.writeMem(0x1e13, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe9ac);
        EXPECT(gbc.pc(), 0x1e14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 00E8
        gbc.setState(0x6e0e, 0x20eb, 0xb400, 0xc3b5, 0x9556, 0xab84, 0x0, 0x1);
        gbc.writeMem(0x6e0e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x20eb);
        EXPECT(gbc.pc(), 0x6e0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 00E9
        gbc.setState(0x4825, 0x3af8, 0x9660, 0x6c56, 0xbad9, 0xf69, 0x1, 0x0);
        gbc.writeMem(0x4825, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3af8);
        EXPECT(gbc.pc(), 0x4826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 00EA
        gbc.setState(0x5d0b, 0x9052, 0x2600, 0x1b43, 0x2171, 0xb861, 0x0, 0x1);
        gbc.writeMem(0x5d0b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9052);
        EXPECT(gbc.pc(), 0x5d0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 00EB
        gbc.setState(0xdb50, 0x35f7, 0x5b00, 0xe130, 0x379f, 0x96b5, 0x1, 0x1);
        gbc.writeMem(0xdb50, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x35f7);
        EXPECT(gbc.pc(), 0xdb51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb50), 0x51);
        // 51 00EC
        gbc.setState(0x7199, 0x53a, 0x1fe0, 0x3dcb, 0xb713, 0xebeb, 0x1, 0x1);
        gbc.writeMem(0x7199, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x53a);
        EXPECT(gbc.pc(), 0x719a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 00ED
        gbc.setState(0x4e5b, 0xf602, 0x1020, 0x7600, 0x910c, 0xa75, 0x0, 0x0);
        gbc.writeMem(0x4e5b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf602);
        EXPECT(gbc.pc(), 0x4e5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 00EE
        gbc.setState(0xe21d, 0xbfad, 0x7410, 0x26a2, 0xd48b, 0x2be8, 0x0, 0x1);
        gbc.writeMem(0xe21d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xbfad);
        EXPECT(gbc.pc(), 0xe21e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe21d), 0x51);
        // 51 00EF
        gbc.setState(0x8ac6, 0x950a, 0xcaa0, 0xf3af, 0x4430, 0xb3d9, 0x1, 0x1);
        gbc.writeMem(0x8ac6, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x950a);
        EXPECT(gbc.pc(), 0x8ac7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ac6), 0x51);
        // 51 00F0
        gbc.setState(0x3ec8, 0xdbc, 0xbad0, 0x8083, 0xd6cb, 0xf9a7, 0x0, 0x0);
        gbc.writeMem(0x3ec8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xdbc);
        EXPECT(gbc.pc(), 0x3ec9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 00F1
        gbc.setState(0xa328, 0xc2fd, 0xb620, 0x664e, 0xb4c4, 0xbab0, 0x1, 0x1);
        gbc.writeMem(0xa328, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc2fd);
        EXPECT(gbc.pc(), 0xa329);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa328), 0x51);
        // 51 00F2
        gbc.setState(0x9880, 0x6b16, 0x6ef0, 0x5cdb, 0xdd05, 0x9871, 0x1, 0x0);
        gbc.writeMem(0x9880, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6b16);
        EXPECT(gbc.pc(), 0x9881);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9880), 0x51);
        // 51 00F3
        gbc.setState(0x13, 0x692f, 0xc990, 0xf550, 0xfaf, 0x9f42, 0x1, 0x1);
        gbc.writeMem(0x13, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x692f);
        EXPECT(gbc.pc(), 0x14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 00F4
        gbc.setState(0x7cc4, 0x882d, 0x6d80, 0x1e35, 0x5700, 0xa771, 0x0, 0x1);
        gbc.writeMem(0x7cc4, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x882d);
        EXPECT(gbc.pc(), 0x7cc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 00F5
        gbc.setState(0x5b53, 0x2561, 0x6f60, 0x9e29, 0xa988, 0xb80c, 0x1, 0x1);
        gbc.writeMem(0x5b53, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2561);
        EXPECT(gbc.pc(), 0x5b54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 00F6
        gbc.setState(0x6237, 0x2b44, 0x8860, 0xa01, 0x8bde, 0xc2e0, 0x1, 0x1);
        gbc.writeMem(0x6237, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2b44);
        EXPECT(gbc.pc(), 0x6238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 00F7
        gbc.setState(0x9343, 0x59a6, 0x7e80, 0x163a, 0xebfe, 0xce0d, 0x0, 0x0);
        gbc.writeMem(0x9343, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x59a6);
        EXPECT(gbc.pc(), 0x9344);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9343), 0x51);
        // 51 00F8
        gbc.setState(0x5dbf, 0xc3bc, 0x18b0, 0x8592, 0xa0c4, 0xbe7b, 0x0, 0x0);
        gbc.writeMem(0x5dbf, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc3bc);
        EXPECT(gbc.pc(), 0x5dc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 00F9
        gbc.setState(0xbf00, 0xfb17, 0x45f0, 0x49fb, 0xb2a1, 0x2f75, 0x1, 0x0);
        gbc.writeMem(0xbf00, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xfb17);
        EXPECT(gbc.pc(), 0xbf01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf00), 0x51);
        // 51 00FA
        gbc.setState(0x3f44, 0x3676, 0x7fe0, 0xd5f1, 0x17e9, 0x54bc, 0x1, 0x0);
        gbc.writeMem(0x3f44, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3676);
        EXPECT(gbc.pc(), 0x3f45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 00FB
        gbc.setState(0x6b0b, 0xfea3, 0xbe50, 0x7afe, 0xedc4, 0x5e32, 0x1, 0x1);
        gbc.writeMem(0x6b0b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xfea3);
        EXPECT(gbc.pc(), 0x6b0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 00FC
        gbc.setState(0x7459, 0xac8, 0x2840, 0x6e73, 0xba1d, 0xe256, 0x0, 0x0);
        gbc.writeMem(0x7459, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xac8);
        EXPECT(gbc.pc(), 0x745a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 00FD
        gbc.setState(0x6993, 0x7fd, 0xcf60, 0xe82a, 0x5176, 0xdaec, 0x1, 0x1);
        gbc.writeMem(0x6993, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7fd);
        EXPECT(gbc.pc(), 0x6994);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 00FE
        gbc.setState(0x4c7e, 0x4040, 0x12a0, 0x284e, 0xdbfc, 0x3e74, 0x1, 0x1);
        gbc.writeMem(0x4c7e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4040);
        EXPECT(gbc.pc(), 0x4c7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0100
        gbc.setState(0x71fe, 0x10c0, 0x17a0, 0x2f67, 0x282e, 0x24d2, 0x1, 0x1);
        gbc.writeMem(0x71fe, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x10c0);
        EXPECT(gbc.pc(), 0x71ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0101
        gbc.setState(0xad22, 0x3806, 0xaf70, 0x8290, 0x8aa7, 0xf39d, 0x1, 0x1);
        gbc.writeMem(0xad22, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3806);
        EXPECT(gbc.pc(), 0xad23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad22), 0x51);
        // 51 0102
        gbc.setState(0x991d, 0x92a1, 0x92d0, 0x6d36, 0xc9e9, 0x2dfa, 0x1, 0x1);
        gbc.writeMem(0x991d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x92a1);
        EXPECT(gbc.pc(), 0x991e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x991d), 0x51);
        // 51 0103
        gbc.setState(0x3266, 0xe09e, 0x8bb0, 0x705b, 0xd0af, 0x1eef, 0x1, 0x1);
        gbc.writeMem(0x3266, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe09e);
        EXPECT(gbc.pc(), 0x3267);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0104
        gbc.setState(0x9579, 0xfcd7, 0xb9d0, 0x1413, 0x9cb3, 0xe903, 0x1, 0x0);
        gbc.writeMem(0x9579, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xfcd7);
        EXPECT(gbc.pc(), 0x957a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9579), 0x51);
        // 51 0105
        gbc.setState(0xd5e9, 0x9cf3, 0x4f40, 0x22de, 0xfbdf, 0x5881, 0x1, 0x0);
        gbc.writeMem(0xd5e9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9cf3);
        EXPECT(gbc.pc(), 0xd5ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5e9), 0x51);
        // 51 0106
        gbc.setState(0x2dbb, 0xae89, 0x80d0, 0xd9f6, 0xfd6d, 0xb57d, 0x1, 0x1);
        gbc.writeMem(0x2dbb, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xae89);
        EXPECT(gbc.pc(), 0x2dbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0107
        gbc.setState(0xc993, 0x9de3, 0x2bf0, 0xb60d, 0x548e, 0xe41, 0x1, 0x1);
        gbc.writeMem(0xc993, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9de3);
        EXPECT(gbc.pc(), 0xc994);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc993), 0x51);
        // 51 0109
        gbc.setState(0x40fd, 0x9918, 0x6cf0, 0xdc9, 0xeb4a, 0x160d, 0x1, 0x1);
        gbc.writeMem(0x40fd, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x9918);
        EXPECT(gbc.pc(), 0x40fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 010A
        gbc.setState(0x9bb8, 0x5734, 0x3900, 0x47fd, 0x6005, 0xd62a, 0x0, 0x0);
        gbc.writeMem(0x9bb8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5734);
        EXPECT(gbc.pc(), 0x9bb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bb8), 0x51);
        // 51 010C
        gbc.setState(0xaaca, 0x2cbb, 0x8aa0, 0x6ed0, 0x360, 0xa099, 0x1, 0x1);
        gbc.writeMem(0xaaca, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2cbb);
        EXPECT(gbc.pc(), 0xaacb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaca), 0x51);
        // 51 010E
        gbc.setState(0x8a07, 0xb3ca, 0x6d90, 0x9386, 0xb20b, 0xe505, 0x0, 0x1);
        gbc.writeMem(0x8a07, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb3ca);
        EXPECT(gbc.pc(), 0x8a08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a07), 0x51);
        // 51 010F
        gbc.setState(0xd069, 0x2a7d, 0x5120, 0xa006, 0x45a0, 0x4fb3, 0x0, 0x1);
        gbc.writeMem(0xd069, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2a7d);
        EXPECT(gbc.pc(), 0xd06a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd069), 0x51);
        // 51 0110
        gbc.setState(0x7639, 0x4acf, 0x3680, 0x4dfe, 0x4776, 0x9734, 0x0, 0x1);
        gbc.writeMem(0x7639, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4acf);
        EXPECT(gbc.pc(), 0x763a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0111
        gbc.setState(0x3d03, 0x5922, 0x47a0, 0xc305, 0x183b, 0xe15c, 0x0, 0x0);
        gbc.writeMem(0x3d03, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5922);
        EXPECT(gbc.pc(), 0x3d04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0112
        gbc.setState(0xc60f, 0x8e89, 0xd280, 0xb0c1, 0xbd1a, 0xeebb, 0x1, 0x1);
        gbc.writeMem(0xc60f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x8e89);
        EXPECT(gbc.pc(), 0xc610);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc60f), 0x51);
        // 51 0113
        gbc.setState(0x16f0, 0xa960, 0x6310, 0xb1a, 0xff5, 0xd6aa, 0x1, 0x1);
        gbc.writeMem(0x16f0, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa960);
        EXPECT(gbc.pc(), 0x16f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0114
        gbc.setState(0x451, 0x8687, 0x9280, 0x8198, 0x727b, 0xee8f, 0x0, 0x1);
        gbc.writeMem(0x451, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8687);
        EXPECT(gbc.pc(), 0x452);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0115
        gbc.setState(0x75c8, 0x58e0, 0xa2c0, 0x500b, 0xf358, 0x434c, 0x1, 0x1);
        gbc.writeMem(0x75c8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x58e0);
        EXPECT(gbc.pc(), 0x75c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0116
        gbc.setState(0x433e, 0xc7b5, 0xefa0, 0x3860, 0x208c, 0x76, 0x0, 0x0);
        gbc.writeMem(0x433e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc7b5);
        EXPECT(gbc.pc(), 0x433f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0117
        gbc.setState(0xd32d, 0x4b63, 0x3470, 0x42be, 0x8493, 0xd6d0, 0x0, 0x0);
        gbc.writeMem(0xd32d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x4b63);
        EXPECT(gbc.pc(), 0xd32e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd32d), 0x51);
        // 51 0118
        gbc.setState(0x6512, 0xd365, 0x72a0, 0x196b, 0x32dc, 0x4afb, 0x1, 0x0);
        gbc.writeMem(0x6512, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xd365);
        EXPECT(gbc.pc(), 0x6513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0119
        gbc.setState(0xa781, 0xfe49, 0xa300, 0x6418, 0xe354, 0xeda5, 0x0, 0x0);
        gbc.writeMem(0xa781, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xfe49);
        EXPECT(gbc.pc(), 0xa782);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa781), 0x51);
        // 51 011A
        gbc.setState(0xa6b2, 0x1994, 0xec40, 0xcb04, 0xfb5c, 0x3759, 0x1, 0x0);
        gbc.writeMem(0xa6b2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1994);
        EXPECT(gbc.pc(), 0xa6b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6b2), 0x51);
        // 51 011B
        gbc.setState(0x8cb0, 0x151e, 0x96f0, 0x46c0, 0x8682, 0x1f9f, 0x1, 0x1);
        gbc.writeMem(0x8cb0, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x151e);
        EXPECT(gbc.pc(), 0x8cb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cb0), 0x51);
        // 51 011C
        gbc.setState(0x1a80, 0x9bfd, 0x40c0, 0xc649, 0xf8b, 0x95a, 0x1, 0x1);
        gbc.writeMem(0x1a80, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9bfd);
        EXPECT(gbc.pc(), 0x1a81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 011D
        gbc.setState(0x71ba, 0x61d8, 0x2440, 0x9dd1, 0xecdf, 0xe499, 0x0, 0x1);
        gbc.writeMem(0x71ba, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x61d8);
        EXPECT(gbc.pc(), 0x71bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 011E
        gbc.setState(0x9c64, 0xc70e, 0xe9f0, 0xffe5, 0x51d2, 0xd8ab, 0x0, 0x0);
        gbc.writeMem(0x9c64, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc70e);
        EXPECT(gbc.pc(), 0x9c65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c64), 0x51);
        // 51 011F
        gbc.setState(0x561c, 0x18a5, 0x8420, 0x4d06, 0x8832, 0xaf8, 0x0, 0x0);
        gbc.writeMem(0x561c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x18a5);
        EXPECT(gbc.pc(), 0x561d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0121
        gbc.setState(0x17e0, 0x74a5, 0x99c0, 0xa6a8, 0x2f9f, 0x33ee, 0x1, 0x1);
        gbc.writeMem(0x17e0, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x74a5);
        EXPECT(gbc.pc(), 0x17e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0122
        gbc.setState(0x2d7a, 0x162, 0xda00, 0x7206, 0xa19f, 0xea3, 0x0, 0x1);
        gbc.writeMem(0x2d7a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x162);
        EXPECT(gbc.pc(), 0x2d7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0123
        gbc.setState(0xe57b, 0xc002, 0x7400, 0x184f, 0xbf5b, 0xd931, 0x1, 0x0);
        gbc.writeMem(0xe57b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc002);
        EXPECT(gbc.pc(), 0xe57c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe57b), 0x51);
        // 51 0124
        gbc.setState(0x9ce5, 0xd558, 0x2500, 0xa7b2, 0x9034, 0x6703, 0x0, 0x1);
        gbc.writeMem(0x9ce5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd558);
        EXPECT(gbc.pc(), 0x9ce6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ce5), 0x51);
        // 51 0125
        gbc.setState(0x4b20, 0x2931, 0x5dc0, 0xe1d2, 0x93, 0x8647, 0x1, 0x0);
        gbc.writeMem(0x4b20, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2931);
        EXPECT(gbc.pc(), 0x4b21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0126
        gbc.setState(0xb57b, 0xd9ca, 0xfb90, 0x6c42, 0x9bdd, 0x6813, 0x1, 0x1);
        gbc.writeMem(0xb57b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd9ca);
        EXPECT(gbc.pc(), 0xb57c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb57b), 0x51);
        // 51 0127
        gbc.setState(0x63b2, 0xb821, 0xe5a0, 0x5098, 0x1ec9, 0xf2c1, 0x1, 0x1);
        gbc.writeMem(0x63b2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb821);
        EXPECT(gbc.pc(), 0x63b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0128
        gbc.setState(0xbc8d, 0x5767, 0x92d0, 0x1ad7, 0x922e, 0x9b15, 0x0, 0x1);
        gbc.writeMem(0xbc8d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5767);
        EXPECT(gbc.pc(), 0xbc8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc8d), 0x51);
        // 51 0129
        gbc.setState(0x9f98, 0x27c7, 0x9190, 0x3d02, 0x3657, 0x7598, 0x0, 0x1);
        gbc.writeMem(0x9f98, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x27c7);
        EXPECT(gbc.pc(), 0x9f99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f98), 0x51);
        // 51 012A
        gbc.setState(0xcbb2, 0xf7ce, 0xa930, 0x4194, 0xb245, 0x75d5, 0x0, 0x1);
        gbc.writeMem(0xcbb2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf7ce);
        EXPECT(gbc.pc(), 0xcbb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbb2), 0x51);
        // 51 012B
        gbc.setState(0x9f4c, 0xafba, 0x5180, 0x1172, 0xeff1, 0xa768, 0x1, 0x0);
        gbc.writeMem(0x9f4c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xafba);
        EXPECT(gbc.pc(), 0x9f4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f4c), 0x51);
        // 51 012C
        gbc.setState(0x175e, 0xd41e, 0x10a0, 0x2fa5, 0xeb7e, 0x60f3, 0x1, 0x0);
        gbc.writeMem(0x175e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd41e);
        EXPECT(gbc.pc(), 0x175f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 012D
        gbc.setState(0xd221, 0x5aee, 0xe670, 0xbfec, 0xf4bf, 0x143e, 0x1, 0x0);
        gbc.writeMem(0xd221, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5aee);
        EXPECT(gbc.pc(), 0xd222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd221), 0x51);
        // 51 012E
        gbc.setState(0x337f, 0xc7b7, 0xc0, 0x1a56, 0x1d6a, 0x56d1, 0x0, 0x1);
        gbc.writeMem(0x337f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xc7b7);
        EXPECT(gbc.pc(), 0x3380);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 012F
        gbc.setState(0xe949, 0x4b74, 0x1130, 0x7101, 0x383e, 0xdfbf, 0x0, 0x1);
        gbc.writeMem(0xe949, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4b74);
        EXPECT(gbc.pc(), 0xe94a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe949), 0x51);
        // 51 0130
        gbc.setState(0xa00d, 0xd94c, 0x9500, 0xc40f, 0x46e2, 0xea7c, 0x0, 0x0);
        gbc.writeMem(0xa00d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd94c);
        EXPECT(gbc.pc(), 0xa00e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa00d), 0x51);
        // 51 0132
        gbc.setState(0x9994, 0xb1e2, 0x1890, 0x6871, 0x25b7, 0x6fce, 0x1, 0x1);
        gbc.writeMem(0x9994, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb1e2);
        EXPECT(gbc.pc(), 0x9995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9994), 0x51);
        // 51 0133
        gbc.setState(0x93cc, 0x79a6, 0x2ea0, 0x5ce9, 0xa3b7, 0x32b9, 0x0, 0x1);
        gbc.writeMem(0x93cc, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x79a6);
        EXPECT(gbc.pc(), 0x93cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93cc), 0x51);
        // 51 0134
        gbc.setState(0xbc6c, 0x8f73, 0xb600, 0x91, 0x55ff, 0x58b1, 0x0, 0x0);
        gbc.writeMem(0xbc6c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8f73);
        EXPECT(gbc.pc(), 0xbc6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc6c), 0x51);
        // 51 0136
        gbc.setState(0xbf8f, 0x8c27, 0xf310, 0xde51, 0x6bc8, 0x1cd4, 0x1, 0x0);
        gbc.writeMem(0xbf8f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8c27);
        EXPECT(gbc.pc(), 0xbf90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf8f), 0x51);
        // 51 0137
        gbc.setState(0x4a0a, 0x4db, 0x7fc0, 0x4568, 0x92de, 0x3d0b, 0x0, 0x0);
        gbc.writeMem(0x4a0a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4db);
        EXPECT(gbc.pc(), 0x4a0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0138
        gbc.setState(0xb165, 0xa3ba, 0x990, 0x8a3b, 0xab43, 0x2094, 0x1, 0x1);
        gbc.writeMem(0xb165, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa3ba);
        EXPECT(gbc.pc(), 0xb166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb165), 0x51);
        // 51 0139
        gbc.setState(0x8394, 0xff31, 0xa930, 0xb469, 0xd3e9, 0x35e4, 0x1, 0x1);
        gbc.writeMem(0x8394, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xff31);
        EXPECT(gbc.pc(), 0x8395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8394), 0x51);
        // 51 013A
        gbc.setState(0xdfc2, 0x38b6, 0x2d0, 0x6742, 0x9ae8, 0x5dd5, 0x1, 0x1);
        gbc.writeMem(0xdfc2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x38b6);
        EXPECT(gbc.pc(), 0xdfc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfc2), 0x51);
        // 51 013B
        gbc.setState(0xf40, 0xf1bd, 0x5110, 0x4f2e, 0xc76e, 0x9c97, 0x1, 0x1);
        gbc.writeMem(0xf40, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf1bd);
        EXPECT(gbc.pc(), 0xf41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 013C
        gbc.setState(0xae20, 0x9360, 0x22b0, 0xa6cb, 0x3684, 0xa09, 0x0, 0x0);
        gbc.writeMem(0xae20, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x9360);
        EXPECT(gbc.pc(), 0xae21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae20), 0x51);
        // 51 013D
        gbc.setState(0x385f, 0xb8a8, 0x9830, 0x8178, 0xc565, 0x2fa1, 0x1, 0x1);
        gbc.writeMem(0x385f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb8a8);
        EXPECT(gbc.pc(), 0x3860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 013E
        gbc.setState(0x48df, 0xb377, 0x1010, 0x90e6, 0x5432, 0x7f2b, 0x1, 0x1);
        gbc.writeMem(0x48df, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb377);
        EXPECT(gbc.pc(), 0x48e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 013F
        gbc.setState(0xa41d, 0x3d54, 0x8fe0, 0xc388, 0x22ce, 0x67a0, 0x1, 0x1);
        gbc.writeMem(0xa41d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3d54);
        EXPECT(gbc.pc(), 0xa41e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa41d), 0x51);
        // 51 0140
        gbc.setState(0x6490, 0x1327, 0x4410, 0x9488, 0xc94b, 0x43b3, 0x0, 0x1);
        gbc.writeMem(0x6490, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1327);
        EXPECT(gbc.pc(), 0x6491);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0141
        gbc.setState(0x2257, 0x455d, 0x4140, 0x9c5a, 0xa578, 0x8a62, 0x0, 0x0);
        gbc.writeMem(0x2257, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x455d);
        EXPECT(gbc.pc(), 0x2258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0142
        gbc.setState(0x263c, 0x9917, 0x2b70, 0xdf0b, 0x3492, 0x2dbd, 0x0, 0x0);
        gbc.writeMem(0x263c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9917);
        EXPECT(gbc.pc(), 0x263d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0143
        gbc.setState(0x45da, 0x9a0b, 0xccd0, 0x251a, 0xc87, 0x668a, 0x1, 0x0);
        gbc.writeMem(0x45da, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x9a0b);
        EXPECT(gbc.pc(), 0x45db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0144
        gbc.setState(0x44ae, 0xd239, 0x2da0, 0xf73c, 0xc612, 0xa439, 0x1, 0x1);
        gbc.writeMem(0x44ae, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd239);
        EXPECT(gbc.pc(), 0x44af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0145
        gbc.setState(0x3823, 0xf5b7, 0xc4e0, 0xd008, 0x3029, 0x97f5, 0x1, 0x0);
        gbc.writeMem(0x3823, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf5b7);
        EXPECT(gbc.pc(), 0x3824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0146
        gbc.setState(0x4c10, 0xdefd, 0x36c0, 0x61d7, 0x46b7, 0xc6ee, 0x1, 0x1);
        gbc.writeMem(0x4c10, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xdefd);
        EXPECT(gbc.pc(), 0x4c11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0147
        gbc.setState(0xc27d, 0xb442, 0xcf70, 0xc53d, 0xd12, 0xa221, 0x1, 0x0);
        gbc.writeMem(0xc27d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xb442);
        EXPECT(gbc.pc(), 0xc27e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc27d), 0x51);
        // 51 0148
        gbc.setState(0xc657, 0x2e91, 0x5930, 0x62fa, 0xbb0e, 0xe048, 0x0, 0x1);
        gbc.writeMem(0xc657, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2e91);
        EXPECT(gbc.pc(), 0xc658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc657), 0x51);
        // 51 0149
        gbc.setState(0xedd7, 0xa6d3, 0x9590, 0x3e3f, 0x2def, 0x2b24, 0x1, 0x0);
        gbc.writeMem(0xedd7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa6d3);
        EXPECT(gbc.pc(), 0xedd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedd7), 0x51);
        // 51 014A
        gbc.setState(0xd831, 0x9563, 0xbf40, 0x58ea, 0xefc5, 0x6a48, 0x1, 0x1);
        gbc.writeMem(0xd831, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9563);
        EXPECT(gbc.pc(), 0xd832);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd831), 0x51);
        // 51 014C
        gbc.setState(0x92ac, 0xc492, 0x5340, 0x2977, 0x26f4, 0x85f, 0x1, 0x0);
        gbc.writeMem(0x92ac, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc492);
        EXPECT(gbc.pc(), 0x92ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ac), 0x51);
        // 51 014D
        gbc.setState(0x3233, 0xf33b, 0x6980, 0xbb74, 0x192e, 0x54db, 0x1, 0x1);
        gbc.writeMem(0x3233, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf33b);
        EXPECT(gbc.pc(), 0x3234);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 014E
        gbc.setState(0xc9fa, 0xcd58, 0x3db0, 0x9562, 0xbde8, 0xef87, 0x0, 0x0);
        gbc.writeMem(0xc9fa, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xcd58);
        EXPECT(gbc.pc(), 0xc9fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9fa), 0x51);
        // 51 014F
        gbc.setState(0xd190, 0x4aab, 0x8660, 0x1f0d, 0xecbd, 0x228b, 0x1, 0x0);
        gbc.writeMem(0xd190, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4aab);
        EXPECT(gbc.pc(), 0xd191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd190), 0x51);
        // 51 0151
        gbc.setState(0x955d, 0x8bc0, 0xc9a0, 0xdd28, 0x7b60, 0xbad4, 0x0, 0x1);
        gbc.writeMem(0x955d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8bc0);
        EXPECT(gbc.pc(), 0x955e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x955d), 0x51);
        // 51 0152
        gbc.setState(0xbf01, 0xca0b, 0x6b10, 0x24c1, 0x7fbf, 0x79f8, 0x0, 0x0);
        gbc.writeMem(0xbf01, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xca0b);
        EXPECT(gbc.pc(), 0xbf02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf01), 0x51);
        // 51 0153
        gbc.setState(0x8326, 0x1ab0, 0xdf20, 0xdc23, 0x4581, 0xaa29, 0x1, 0x1);
        gbc.writeMem(0x8326, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1ab0);
        EXPECT(gbc.pc(), 0x8327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8326), 0x51);
        // 51 0154
        gbc.setState(0x748a, 0x8fbf, 0xb800, 0x8cd2, 0x1aa6, 0xef2e, 0x1, 0x1);
        gbc.writeMem(0x748a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8fbf);
        EXPECT(gbc.pc(), 0x748b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0155
        gbc.setState(0x4d91, 0xff6f, 0xed90, 0x507c, 0x4f91, 0xb1d, 0x1, 0x1);
        gbc.writeMem(0x4d91, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xff6f);
        EXPECT(gbc.pc(), 0x4d92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0156
        gbc.setState(0xad3e, 0xceb6, 0x7b00, 0xfc09, 0x8db0, 0xbcc8, 0x0, 0x1);
        gbc.writeMem(0xad3e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xceb6);
        EXPECT(gbc.pc(), 0xad3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad3e), 0x51);
        // 51 0157
        gbc.setState(0xd370, 0x82b5, 0x6480, 0x167b, 0xc404, 0x8407, 0x0, 0x0);
        gbc.writeMem(0xd370, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x82b5);
        EXPECT(gbc.pc(), 0xd371);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd370), 0x51);
        // 51 0158
        gbc.setState(0x84ed, 0x4a71, 0x5c60, 0xd7ea, 0x98e1, 0x864f, 0x1, 0x1);
        gbc.writeMem(0x84ed, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4a71);
        EXPECT(gbc.pc(), 0x84ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84ed), 0x51);
        // 51 0159
        gbc.setState(0x3384, 0xe7e9, 0x4ca0, 0x4794, 0xf997, 0xba45, 0x1, 0x1);
        gbc.writeMem(0x3384, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xe7e9);
        EXPECT(gbc.pc(), 0x3385);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 015A
        gbc.setState(0x44c, 0xc7c7, 0x3a80, 0x389, 0xe9ec, 0xa483, 0x1, 0x1);
        gbc.writeMem(0x44c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc7c7);
        EXPECT(gbc.pc(), 0x44d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 015B
        gbc.setState(0x9b20, 0xbca0, 0x4c70, 0x29c4, 0xf813, 0x51be, 0x1, 0x0);
        gbc.writeMem(0x9b20, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xbca0);
        EXPECT(gbc.pc(), 0x9b21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b20), 0x51);
        // 51 015C
        gbc.setState(0x6d25, 0xd52, 0xf2e0, 0x8c60, 0xbfb9, 0xb2e8, 0x1, 0x1);
        gbc.writeMem(0x6d25, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd52);
        EXPECT(gbc.pc(), 0x6d26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 015D
        gbc.setState(0x9791, 0x2cba, 0x77a0, 0xe0d8, 0x2a61, 0xdc2c, 0x0, 0x0);
        gbc.writeMem(0x9791, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2cba);
        EXPECT(gbc.pc(), 0x9792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9791), 0x51);
        // 51 015E
        gbc.setState(0x1bcb, 0x11a3, 0x26b0, 0x129, 0x1433, 0xce05, 0x0, 0x0);
        gbc.writeMem(0x1bcb, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x11a3);
        EXPECT(gbc.pc(), 0x1bcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 015F
        gbc.setState(0x5d50, 0x221c, 0xe070, 0xb8bf, 0xe559, 0x75c9, 0x0, 0x1);
        gbc.writeMem(0x5d50, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x221c);
        EXPECT(gbc.pc(), 0x5d51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0160
        gbc.setState(0x27cf, 0x16c9, 0x5710, 0xc5af, 0x7e98, 0x8b7e, 0x0, 0x0);
        gbc.writeMem(0x27cf, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x16c9);
        EXPECT(gbc.pc(), 0x27d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0163
        gbc.setState(0xd1d5, 0xde48, 0xee40, 0x410b, 0xeca9, 0xbb9, 0x1, 0x0);
        gbc.writeMem(0xd1d5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xde48);
        EXPECT(gbc.pc(), 0xd1d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1d5), 0x51);
        // 51 0164
        gbc.setState(0xb3cf, 0xf585, 0xa690, 0x2055, 0x99ee, 0xd062, 0x0, 0x0);
        gbc.writeMem(0xb3cf, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf585);
        EXPECT(gbc.pc(), 0xb3d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3cf), 0x51);
        // 51 0165
        gbc.setState(0x4555, 0x7a56, 0x2db0, 0xf9d4, 0x6c80, 0xaf9, 0x1, 0x1);
        gbc.writeMem(0x4555, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7a56);
        EXPECT(gbc.pc(), 0x4556);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0166
        gbc.setState(0x2c1e, 0x94c6, 0xbb0, 0xf089, 0xa67b, 0xde16, 0x1, 0x0);
        gbc.writeMem(0x2c1e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x94c6);
        EXPECT(gbc.pc(), 0x2c1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0167
        gbc.setState(0x556b, 0xe4, 0x7f30, 0xdb5b, 0x2472, 0x5b3b, 0x1, 0x0);
        gbc.writeMem(0x556b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe4);
        EXPECT(gbc.pc(), 0x556c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0168
        gbc.setState(0x3f5e, 0x70ff, 0xcf10, 0x8af, 0x32ca, 0x678f, 0x1, 0x1);
        gbc.writeMem(0x3f5e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x70ff);
        EXPECT(gbc.pc(), 0x3f5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0169
        gbc.setState(0x6c8d, 0x4561, 0x94d0, 0x747a, 0xf6e9, 0x9877, 0x1, 0x1);
        gbc.writeMem(0x6c8d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4561);
        EXPECT(gbc.pc(), 0x6c8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 016A
        gbc.setState(0xbb77, 0xc1ec, 0xea10, 0x524e, 0xcfd, 0x1c4a, 0x0, 0x0);
        gbc.writeMem(0xbb77, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc1ec);
        EXPECT(gbc.pc(), 0xbb78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb77), 0x51);
        // 51 016B
        gbc.setState(0x451c, 0x30ef, 0xf6a0, 0xcdf5, 0x7918, 0x30cc, 0x0, 0x0);
        gbc.writeMem(0x451c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x30ef);
        EXPECT(gbc.pc(), 0x451d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 016C
        gbc.setState(0x2c51, 0xcbc5, 0x5af0, 0x6a01, 0xa6d8, 0x9677, 0x0, 0x1);
        gbc.writeMem(0x2c51, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xcbc5);
        EXPECT(gbc.pc(), 0x2c52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 016D
        gbc.setState(0x54b, 0x6a13, 0x4690, 0xbd1a, 0xdb2, 0x6773, 0x0, 0x0);
        gbc.writeMem(0x54b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6a13);
        EXPECT(gbc.pc(), 0x54c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 016E
        gbc.setState(0x96a2, 0x4619, 0x5c30, 0x618e, 0xd213, 0x2e94, 0x1, 0x1);
        gbc.writeMem(0x96a2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4619);
        EXPECT(gbc.pc(), 0x96a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96a2), 0x51);
        // 51 016F
        gbc.setState(0x44c6, 0xa6a8, 0x3ba0, 0xc77e, 0x2a60, 0xe75c, 0x0, 0x1);
        gbc.writeMem(0x44c6, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa6a8);
        EXPECT(gbc.pc(), 0x44c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0170
        gbc.setState(0xbb13, 0xdadf, 0xd3b0, 0xc167, 0xec58, 0xe6a3, 0x0, 0x1);
        gbc.writeMem(0xbb13, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xdadf);
        EXPECT(gbc.pc(), 0xbb14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb13), 0x51);
        // 51 0171
        gbc.setState(0x7acd, 0x8eaf, 0x48f0, 0x65f1, 0x9c5b, 0xc53d, 0x0, 0x0);
        gbc.writeMem(0x7acd, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8eaf);
        EXPECT(gbc.pc(), 0x7ace);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0172
        gbc.setState(0x74b, 0x57eb, 0xb1b0, 0x3d4f, 0xd8f3, 0xf854, 0x1, 0x0);
        gbc.writeMem(0x74b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x57eb);
        EXPECT(gbc.pc(), 0x74c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0173
        gbc.setState(0x8c65, 0x3d8d, 0x96a0, 0xf0f2, 0xa55d, 0xb9c, 0x1, 0x0);
        gbc.writeMem(0x8c65, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3d8d);
        EXPECT(gbc.pc(), 0x8c66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c65), 0x51);
        // 51 0174
        gbc.setState(0x8a4d, 0x51ac, 0xeb00, 0xef3a, 0x4bea, 0xb2e4, 0x1, 0x0);
        gbc.writeMem(0x8a4d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x51ac);
        EXPECT(gbc.pc(), 0x8a4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a4d), 0x51);
        // 51 0175
        gbc.setState(0x367e, 0x393d, 0xe170, 0xed87, 0x4a4, 0xcb80, 0x1, 0x0);
        gbc.writeMem(0x367e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x393d);
        EXPECT(gbc.pc(), 0x367f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0176
        gbc.setState(0x98dd, 0xba7e, 0x9630, 0x537e, 0xe8a, 0x88af, 0x1, 0x0);
        gbc.writeMem(0x98dd, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xba7e);
        EXPECT(gbc.pc(), 0x98de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98dd), 0x51);
        // 51 0177
        gbc.setState(0x396d, 0x8ae6, 0xf1e0, 0xe4ca, 0xc6de, 0x8b1, 0x1, 0x1);
        gbc.writeMem(0x396d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8ae6);
        EXPECT(gbc.pc(), 0x396e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0178
        gbc.setState(0x9ddb, 0x48de, 0x44c0, 0x9344, 0x3dab, 0x1f1e, 0x1, 0x0);
        gbc.writeMem(0x9ddb, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x48de);
        EXPECT(gbc.pc(), 0x9ddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ddb), 0x51);
        // 51 0179
        gbc.setState(0x6395, 0x3294, 0xc550, 0xe6a2, 0xbc27, 0x222d, 0x0, 0x0);
        gbc.writeMem(0x6395, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3294);
        EXPECT(gbc.pc(), 0x6396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 017A
        gbc.setState(0x29b8, 0x6871, 0x11d0, 0xcb3d, 0x1a8a, 0x964, 0x0, 0x1);
        gbc.writeMem(0x29b8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6871);
        EXPECT(gbc.pc(), 0x29b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 017B
        gbc.setState(0x1502, 0x7548, 0x4010, 0xcc37, 0x94f3, 0x3eb5, 0x0, 0x0);
        gbc.writeMem(0x1502, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x7548);
        EXPECT(gbc.pc(), 0x1503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 017C
        gbc.setState(0x6840, 0x9de, 0x48e0, 0xd49a, 0xabc8, 0x42f, 0x0, 0x1);
        gbc.writeMem(0x6840, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9de);
        EXPECT(gbc.pc(), 0x6841);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 017D
        gbc.setState(0xd9eb, 0xb991, 0xcf80, 0x1c38, 0x1ca5, 0xf7a3, 0x0, 0x1);
        gbc.writeMem(0xd9eb, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb991);
        EXPECT(gbc.pc(), 0xd9ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9eb), 0x51);
        // 51 017E
        gbc.setState(0xaaba, 0x77b8, 0x400, 0x8418, 0x1ff, 0x337c, 0x0, 0x1);
        gbc.writeMem(0xaaba, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x77b8);
        EXPECT(gbc.pc(), 0xaabb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaba), 0x51);
        // 51 017F
        gbc.setState(0x623f, 0xb1a4, 0x3f00, 0x133c, 0xcacf, 0x711a, 0x1, 0x1);
        gbc.writeMem(0x623f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb1a4);
        EXPECT(gbc.pc(), 0x6240);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0180
        gbc.setState(0xbbd, 0x2175, 0x8010, 0xe6c1, 0xe582, 0x8893, 0x1, 0x1);
        gbc.writeMem(0xbbd, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x2175);
        EXPECT(gbc.pc(), 0xbbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0181
        gbc.setState(0x24a9, 0x5b34, 0xbb70, 0x4b6a, 0x2a8e, 0xeb3f, 0x0, 0x0);
        gbc.writeMem(0x24a9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5b34);
        EXPECT(gbc.pc(), 0x24aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0182
        gbc.setState(0x685d, 0x5368, 0x2ea0, 0xc083, 0x11be, 0x5f22, 0x0, 0x0);
        gbc.writeMem(0x685d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5368);
        EXPECT(gbc.pc(), 0x685e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0183
        gbc.setState(0x258, 0xb3ac, 0xd3e0, 0x1f23, 0xbaf5, 0xb6b1, 0x0, 0x0);
        gbc.writeMem(0x258, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb3ac);
        EXPECT(gbc.pc(), 0x259);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0184
        gbc.setState(0x36bb, 0xbcd9, 0xcf0, 0xe2ef, 0x11ac, 0x8d54, 0x1, 0x0);
        gbc.writeMem(0x36bb, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xbcd9);
        EXPECT(gbc.pc(), 0x36bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0185
        gbc.setState(0xc604, 0xa9fb, 0xc8d0, 0x4cc, 0x9933, 0xe1ed, 0x0, 0x0);
        gbc.writeMem(0xc604, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xa9fb);
        EXPECT(gbc.pc(), 0xc605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc604), 0x51);
        // 51 0186
        gbc.setState(0x7a1d, 0x45bf, 0xf830, 0xf53c, 0x94f, 0x97dd, 0x0, 0x0);
        gbc.writeMem(0x7a1d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x45bf);
        EXPECT(gbc.pc(), 0x7a1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0187
        gbc.setState(0xdefe, 0xa3f3, 0xd810, 0x6acf, 0xbe9, 0xb921, 0x0, 0x0);
        gbc.writeMem(0xdefe, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa3f3);
        EXPECT(gbc.pc(), 0xdeff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdefe), 0x51);
        // 51 0189
        gbc.setState(0xcb81, 0x7172, 0x4a20, 0x511a, 0x1ef7, 0xc56b, 0x0, 0x0);
        gbc.writeMem(0xcb81, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x7172);
        EXPECT(gbc.pc(), 0xcb82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb81), 0x51);
        // 51 018A
        gbc.setState(0xfa7, 0x970a, 0x7200, 0xcf7d, 0xc3b9, 0x952f, 0x0, 0x1);
        gbc.writeMem(0xfa7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x970a);
        EXPECT(gbc.pc(), 0xfa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 018B
        gbc.setState(0x7e84, 0xec3f, 0xd6f0, 0x1d6e, 0xc225, 0x6178, 0x0, 0x1);
        gbc.writeMem(0x7e84, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xec3f);
        EXPECT(gbc.pc(), 0x7e85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 018D
        gbc.setState(0x10ec, 0x757b, 0x8130, 0x9355, 0x2186, 0x682a, 0x0, 0x0);
        gbc.writeMem(0x10ec, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x757b);
        EXPECT(gbc.pc(), 0x10ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 018E
        gbc.setState(0x7f5, 0x6b4b, 0xbda0, 0x16d2, 0xe2cf, 0xf013, 0x0, 0x1);
        gbc.writeMem(0x7f5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6b4b);
        EXPECT(gbc.pc(), 0x7f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 018F
        gbc.setState(0x1ded, 0x830d, 0x7730, 0xb24, 0x1bce, 0x85ed, 0x0, 0x1);
        gbc.writeMem(0x1ded, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x830d);
        EXPECT(gbc.pc(), 0x1dee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0190
        gbc.setState(0xe986, 0x8165, 0x99b0, 0x30c, 0x8b03, 0x7dde, 0x1, 0x1);
        gbc.writeMem(0xe986, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x8165);
        EXPECT(gbc.pc(), 0xe987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe986), 0x51);
        // 51 0191
        gbc.setState(0x75b4, 0xabd2, 0xe110, 0xc76b, 0x3ef8, 0x95ba, 0x0, 0x0);
        gbc.writeMem(0x75b4, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xabd2);
        EXPECT(gbc.pc(), 0x75b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0192
        gbc.setState(0x8731, 0x82c0, 0xe570, 0xa587, 0x8ac3, 0x7366, 0x1, 0x1);
        gbc.writeMem(0x8731, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x82c0);
        EXPECT(gbc.pc(), 0x8732);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8731), 0x51);
        // 51 0193
        gbc.setState(0x9284, 0x8950, 0x6460, 0xdc39, 0x482d, 0xc74a, 0x1, 0x1);
        gbc.writeMem(0x9284, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8950);
        EXPECT(gbc.pc(), 0x9285);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9284), 0x51);
        // 51 0194
        gbc.setState(0xebda, 0x234a, 0x6c30, 0x8a32, 0xb251, 0xa817, 0x1, 0x1);
        gbc.writeMem(0xebda, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x234a);
        EXPECT(gbc.pc(), 0xebdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebda), 0x51);
        // 51 0195
        gbc.setState(0x40f7, 0x45e0, 0xa400, 0x1410, 0xa1, 0xa2, 0x1, 0x1);
        gbc.writeMem(0x40f7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x45e0);
        EXPECT(gbc.pc(), 0x40f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0196
        gbc.setState(0x2d46, 0xe3d4, 0xb510, 0xdf1f, 0x6a88, 0xd549, 0x1, 0x1);
        gbc.writeMem(0x2d46, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe3d4);
        EXPECT(gbc.pc(), 0x2d47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0197
        gbc.setState(0x7e9f, 0xc66f, 0xe2a0, 0x3a8f, 0x850d, 0x6e36, 0x1, 0x1);
        gbc.writeMem(0x7e9f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xc66f);
        EXPECT(gbc.pc(), 0x7ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0198
        gbc.setState(0xaa70, 0x2c6a, 0x9160, 0x5876, 0xb2e8, 0xd77d, 0x1, 0x0);
        gbc.writeMem(0xaa70, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2c6a);
        EXPECT(gbc.pc(), 0xaa71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa70), 0x51);
        // 51 0199
        gbc.setState(0x761c, 0xbe20, 0x93c0, 0x4c94, 0xf464, 0x5a58, 0x0, 0x1);
        gbc.writeMem(0x761c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xbe20);
        EXPECT(gbc.pc(), 0x761d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 019B
        gbc.setState(0x2848, 0xeaf8, 0xe7a0, 0x2389, 0xd154, 0x1b5e, 0x0, 0x1);
        gbc.writeMem(0x2848, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xeaf8);
        EXPECT(gbc.pc(), 0x2849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 019C
        gbc.setState(0xb064, 0xc97d, 0x8a70, 0xd386, 0x5734, 0x78b5, 0x0, 0x1);
        gbc.writeMem(0xb064, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc97d);
        EXPECT(gbc.pc(), 0xb065);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb064), 0x51);
        // 51 019D
        gbc.setState(0x7587, 0x6d01, 0x6a50, 0x6098, 0xfd6d, 0x5087, 0x1, 0x1);
        gbc.writeMem(0x7587, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6d01);
        EXPECT(gbc.pc(), 0x7588);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 019E
        gbc.setState(0x4ded, 0xc262, 0xe210, 0x3058, 0xb870, 0xf683, 0x0, 0x0);
        gbc.writeMem(0x4ded, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc262);
        EXPECT(gbc.pc(), 0x4dee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 019F
        gbc.setState(0x15ac, 0x4f0b, 0x6610, 0xcdf2, 0x7495, 0x442d, 0x0, 0x0);
        gbc.writeMem(0x15ac, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4f0b);
        EXPECT(gbc.pc(), 0x15ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 01A0
        gbc.setState(0x383c, 0x24fb, 0x2ee0, 0x17f9, 0x6fb5, 0x3d94, 0x0, 0x0);
        gbc.writeMem(0x383c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x24fb);
        EXPECT(gbc.pc(), 0x383d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 01A1
        gbc.setState(0xa7fa, 0x26f3, 0x7e60, 0xbc5e, 0xa378, 0x8d6b, 0x0, 0x0);
        gbc.writeMem(0xa7fa, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x26f3);
        EXPECT(gbc.pc(), 0xa7fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7fa), 0x51);
        // 51 01A2
        gbc.setState(0xdaaf, 0xbee8, 0xd1a0, 0xb05e, 0x772b, 0xd3c2, 0x0, 0x0);
        gbc.writeMem(0xdaaf, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xbee8);
        EXPECT(gbc.pc(), 0xdab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaaf), 0x51);
        // 51 01A3
        gbc.setState(0xb2bd, 0x37d, 0x3570, 0x8400, 0x376, 0x20fe, 0x1, 0x1);
        gbc.writeMem(0xb2bd, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x37d);
        EXPECT(gbc.pc(), 0xb2be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2bd), 0x51);
        // 51 01A4
        gbc.setState(0x9e66, 0x1036, 0x7320, 0x1a87, 0x6890, 0x7528, 0x1, 0x0);
        gbc.writeMem(0x9e66, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x1036);
        EXPECT(gbc.pc(), 0x9e67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e66), 0x51);
        // 51 01A5
        gbc.setState(0x57d2, 0x94db, 0x7d40, 0x3805, 0x1f92, 0xb136, 0x1, 0x1);
        gbc.writeMem(0x57d2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x94db);
        EXPECT(gbc.pc(), 0x57d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 01A6
        gbc.setState(0xc9a5, 0xc9be, 0xdda0, 0xba22, 0x245f, 0x19e8, 0x1, 0x1);
        gbc.writeMem(0xc9a5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc9be);
        EXPECT(gbc.pc(), 0xc9a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9a5), 0x51);
        // 51 01A7
        gbc.setState(0x4b33, 0x2926, 0x7d90, 0x4e6f, 0xc5da, 0x7f95, 0x0, 0x1);
        gbc.writeMem(0x4b33, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2926);
        EXPECT(gbc.pc(), 0x4b34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 01A8
        gbc.setState(0x137b, 0x680e, 0x2e0, 0x2687, 0xb395, 0x5c9c, 0x1, 0x1);
        gbc.writeMem(0x137b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x680e);
        EXPECT(gbc.pc(), 0x137c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 01A9
        gbc.setState(0x7d1d, 0xf450, 0x6530, 0xa7fe, 0x9a57, 0xc361, 0x0, 0x0);
        gbc.writeMem(0x7d1d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf450);
        EXPECT(gbc.pc(), 0x7d1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 01AA
        gbc.setState(0xacde, 0x349a, 0xd280, 0x7611, 0x2831, 0x933c, 0x0, 0x0);
        gbc.writeMem(0xacde, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x349a);
        EXPECT(gbc.pc(), 0xacdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacde), 0x51);
        // 51 01AB
        gbc.setState(0x272, 0xf9b0, 0x8c0, 0xc760, 0xd873, 0x7264, 0x1, 0x1);
        gbc.writeMem(0x272, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf9b0);
        EXPECT(gbc.pc(), 0x273);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 01AC
        gbc.setState(0x1e95, 0x3bc1, 0x8cb0, 0x8d05, 0xc1bd, 0xb176, 0x0, 0x1);
        gbc.writeMem(0x1e95, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3bc1);
        EXPECT(gbc.pc(), 0x1e96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 01AD
        gbc.setState(0xd6e9, 0xa1c4, 0x46a0, 0x7f55, 0xddc8, 0x16bf, 0x1, 0x0);
        gbc.writeMem(0xd6e9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa1c4);
        EXPECT(gbc.pc(), 0xd6ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e9), 0x51);
        // 51 01AE
        gbc.setState(0xbcd1, 0xce2f, 0x10c0, 0x35b, 0x4926, 0x5514, 0x0, 0x1);
        gbc.writeMem(0xbcd1, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xce2f);
        EXPECT(gbc.pc(), 0xbcd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcd1), 0x51);
        // 51 01AF
        gbc.setState(0x3a0b, 0xf972, 0x4f0, 0x5222, 0x712, 0x7c08, 0x0, 0x1);
        gbc.writeMem(0x3a0b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf972);
        EXPECT(gbc.pc(), 0x3a0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 01B0
        gbc.setState(0xea93, 0x2831, 0xa5b0, 0x1374, 0xc1ba, 0x2688, 0x1, 0x0);
        gbc.writeMem(0xea93, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2831);
        EXPECT(gbc.pc(), 0xea94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea93), 0x51);
        // 51 01B1
        gbc.setState(0xdc08, 0xb574, 0xfe50, 0xf346, 0xae36, 0x51f6, 0x1, 0x0);
        gbc.writeMem(0xdc08, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb574);
        EXPECT(gbc.pc(), 0xdc09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc08), 0x51);
        // 51 01B2
        gbc.setState(0x76de, 0x8c0, 0xf910, 0x2ef6, 0x299, 0xf226, 0x1, 0x1);
        gbc.writeMem(0x76de, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8c0);
        EXPECT(gbc.pc(), 0x76df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 01B3
        gbc.setState(0x4b8, 0xb83a, 0x20, 0x6299, 0x57a3, 0x2efd, 0x1, 0x1);
        gbc.writeMem(0x4b8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb83a);
        EXPECT(gbc.pc(), 0x4b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 01B4
        gbc.setState(0x7eec, 0x14c7, 0x7e0, 0x65ff, 0x17da, 0x50ed, 0x0, 0x1);
        gbc.writeMem(0x7eec, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x14c7);
        EXPECT(gbc.pc(), 0x7eed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 01B5
        gbc.setState(0x9218, 0xcfc1, 0x6770, 0xe42d, 0x636c, 0x80b1, 0x0, 0x0);
        gbc.writeMem(0x9218, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xcfc1);
        EXPECT(gbc.pc(), 0x9219);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9218), 0x51);
        // 51 01B6
        gbc.setState(0x4023, 0xede8, 0x440, 0x8449, 0xa47a, 0x19e2, 0x1, 0x1);
        gbc.writeMem(0x4023, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xede8);
        EXPECT(gbc.pc(), 0x4024);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 01B7
        gbc.setState(0x2dfb, 0x8cbd, 0xd190, 0xdc70, 0x4b32, 0xdc12, 0x0, 0x0);
        gbc.writeMem(0x2dfb, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8cbd);
        EXPECT(gbc.pc(), 0x2dfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 01B8
        gbc.setState(0x8bf, 0x8483, 0x5da0, 0xd17f, 0xcbd2, 0xa223, 0x1, 0x0);
        gbc.writeMem(0x8bf, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8483);
        EXPECT(gbc.pc(), 0x8c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 01B9
        gbc.setState(0x5f51, 0x7b26, 0x6c90, 0x8e2d, 0x38c4, 0xc92e, 0x1, 0x1);
        gbc.writeMem(0x5f51, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7b26);
        EXPECT(gbc.pc(), 0x5f52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 01BA
        gbc.setState(0x752f, 0xcf15, 0xbcc0, 0x32f6, 0x1b29, 0xe807, 0x1, 0x0);
        gbc.writeMem(0x752f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xcf15);
        EXPECT(gbc.pc(), 0x7530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 01BB
        gbc.setState(0x96eb, 0xb82d, 0x7670, 0x353d, 0xb636, 0x8d8a, 0x1, 0x0);
        gbc.writeMem(0x96eb, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb82d);
        EXPECT(gbc.pc(), 0x96ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96eb), 0x51);
        // 51 01BC
        gbc.setState(0xdbad, 0xe2f5, 0x9580, 0xaef0, 0x1a21, 0x7401, 0x1, 0x1);
        gbc.writeMem(0xdbad, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe2f5);
        EXPECT(gbc.pc(), 0xdbae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbad), 0x51);
        // 51 01BD
        gbc.setState(0x493f, 0x5fda, 0x4ae0, 0x6cd7, 0x5ded, 0xc950, 0x0, 0x1);
        gbc.writeMem(0x493f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5fda);
        EXPECT(gbc.pc(), 0x4940);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 01BF
        gbc.setState(0xcb62, 0x2161, 0xe610, 0x1bfc, 0x4ad6, 0x7d8a, 0x1, 0x0);
        gbc.writeMem(0xcb62, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2161);
        EXPECT(gbc.pc(), 0xcb63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb62), 0x51);
        // 51 01C0
        gbc.setState(0x147a, 0x8121, 0x3a70, 0x3f15, 0x781a, 0xee3, 0x1, 0x1);
        gbc.writeMem(0x147a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8121);
        EXPECT(gbc.pc(), 0x147b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 01C1
        gbc.setState(0x3a3f, 0x9bfc, 0xc0c0, 0xe8f2, 0xa8a, 0x2805, 0x1, 0x1);
        gbc.writeMem(0x3a3f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9bfc);
        EXPECT(gbc.pc(), 0x3a40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 01C2
        gbc.setState(0x7f8b, 0x5095, 0x1eb0, 0x3a71, 0x1d2b, 0xc642, 0x0, 0x1);
        gbc.writeMem(0x7f8b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5095);
        EXPECT(gbc.pc(), 0x7f8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 01C3
        gbc.setState(0x29c3, 0x3a63, 0x3650, 0xebe1, 0x331d, 0x3532, 0x0, 0x0);
        gbc.writeMem(0x29c3, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x3a63);
        EXPECT(gbc.pc(), 0x29c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 01C4
        gbc.setState(0x27a9, 0xfe5c, 0x68e0, 0xa77, 0x9749, 0xa2a1, 0x1, 0x1);
        gbc.writeMem(0x27a9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xfe5c);
        EXPECT(gbc.pc(), 0x27aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 01C6
        gbc.setState(0x1f28, 0x2d2f, 0xd4b0, 0x3db1, 0x5d70, 0x166b, 0x0, 0x0);
        gbc.writeMem(0x1f28, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2d2f);
        EXPECT(gbc.pc(), 0x1f29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 01C7
        gbc.setState(0x4c34, 0x9eb3, 0x80c0, 0x7f6c, 0xb78e, 0x109f, 0x1, 0x1);
        gbc.writeMem(0x4c34, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x9eb3);
        EXPECT(gbc.pc(), 0x4c35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 01C8
        gbc.setState(0x1f57, 0x135b, 0x2440, 0xdb2f, 0x46fb, 0xf086, 0x0, 0x0);
        gbc.writeMem(0x1f57, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x135b);
        EXPECT(gbc.pc(), 0x1f58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 01C9
        gbc.setState(0xe079, 0xa30b, 0x70c0, 0xc1ce, 0x79a1, 0x6ef5, 0x0, 0x1);
        gbc.writeMem(0xe079, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa30b);
        EXPECT(gbc.pc(), 0xe07a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe079), 0x51);
        // 51 01CA
        gbc.setState(0x5958, 0x9f69, 0x13f0, 0xaf63, 0xb2f6, 0x55e3, 0x1, 0x0);
        gbc.writeMem(0x5958, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x9f69);
        EXPECT(gbc.pc(), 0x5959);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 01CB
        gbc.setState(0xda4c, 0x72, 0x130, 0xb9a7, 0xb054, 0xc625, 0x0, 0x1);
        gbc.writeMem(0xda4c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x72);
        EXPECT(gbc.pc(), 0xda4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda4c), 0x51);
        // 51 01CC
        gbc.setState(0x5061, 0x33b, 0x8150, 0xfde6, 0x2b24, 0xb340, 0x1, 0x1);
        gbc.writeMem(0x5061, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x33b);
        EXPECT(gbc.pc(), 0x5062);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 01CD
        gbc.setState(0x68e2, 0xb509, 0x4c50, 0x1ae5, 0x384d, 0x851f, 0x0, 0x0);
        gbc.writeMem(0x68e2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb509);
        EXPECT(gbc.pc(), 0x68e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 01CE
        gbc.setState(0x4c3c, 0x1280, 0x56f0, 0x6f46, 0xf424, 0x6775, 0x0, 0x0);
        gbc.writeMem(0x4c3c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1280);
        EXPECT(gbc.pc(), 0x4c3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 01CF
        gbc.setState(0x810c, 0xb1e6, 0xd0b0, 0xe751, 0x25d7, 0xf137, 0x1, 0x1);
        gbc.writeMem(0x810c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb1e6);
        EXPECT(gbc.pc(), 0x810d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x810c), 0x51);
        // 51 01D0
        gbc.setState(0xc2e1, 0x109e, 0xa130, 0x671e, 0xc488, 0x946f, 0x0, 0x0);
        gbc.writeMem(0xc2e1, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x109e);
        EXPECT(gbc.pc(), 0xc2e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2e1), 0x51);
        // 51 01D1
        gbc.setState(0x3937, 0x141c, 0x8530, 0x8cf8, 0xc873, 0x3d0d, 0x1, 0x1);
        gbc.writeMem(0x3937, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x141c);
        EXPECT(gbc.pc(), 0x3938);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 01D3
        gbc.setState(0xe7bd, 0x889e, 0x3250, 0xb360, 0xe017, 0x579f, 0x0, 0x1);
        gbc.writeMem(0xe7bd, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x889e);
        EXPECT(gbc.pc(), 0xe7be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7bd), 0x51);
        // 51 01D4
        gbc.setState(0xc5c0, 0x9db2, 0x3370, 0xe13a, 0xe189, 0x8a1b, 0x1, 0x1);
        gbc.writeMem(0xc5c0, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x9db2);
        EXPECT(gbc.pc(), 0xc5c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5c0), 0x51);
        // 51 01D5
        gbc.setState(0x956f, 0x9fcd, 0x2bc0, 0x8ca4, 0xdc9c, 0xda61, 0x1, 0x1);
        gbc.writeMem(0x956f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9fcd);
        EXPECT(gbc.pc(), 0x9570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x956f), 0x51);
        // 51 01D7
        gbc.setState(0xee5b, 0xc5bf, 0xbcf0, 0xfef5, 0x3399, 0xceb3, 0x0, 0x0);
        gbc.writeMem(0xee5b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xc5bf);
        EXPECT(gbc.pc(), 0xee5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee5b), 0x51);
        // 51 01D8
        gbc.setState(0x9fec, 0xe830, 0x5df0, 0x49b9, 0xae4b, 0x56c9, 0x0, 0x1);
        gbc.writeMem(0x9fec, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe830);
        EXPECT(gbc.pc(), 0x9fed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fec), 0x51);
        // 51 01D9
        gbc.setState(0x17ae, 0xa352, 0x37b0, 0x9dca, 0x68a2, 0x75dc, 0x0, 0x0);
        gbc.writeMem(0x17ae, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa352);
        EXPECT(gbc.pc(), 0x17af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 01DB
        gbc.setState(0xce0e, 0x698c, 0x10a0, 0xcf05, 0x4e7d, 0xb93c, 0x0, 0x1);
        gbc.writeMem(0xce0e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x698c);
        EXPECT(gbc.pc(), 0xce0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce0e), 0x51);
        // 51 01DC
        gbc.setState(0x88c, 0x45d3, 0xa410, 0xb9c6, 0x1f63, 0xffd0, 0x0, 0x0);
        gbc.writeMem(0x88c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x45d3);
        EXPECT(gbc.pc(), 0x88d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 01DD
        gbc.setState(0x4e41, 0xf5d1, 0x1bb0, 0xaae0, 0x592, 0x30d6, 0x0, 0x1);
        gbc.writeMem(0x4e41, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xf5d1);
        EXPECT(gbc.pc(), 0x4e42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 01DE
        gbc.setState(0xdac9, 0x59ed, 0x11f0, 0x7b0d, 0xfd8b, 0x5e40, 0x0, 0x1);
        gbc.writeMem(0xdac9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x59ed);
        EXPECT(gbc.pc(), 0xdaca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdac9), 0x51);
        // 51 01DF
        gbc.setState(0xa69, 0x976b, 0x6b20, 0x65cc, 0xb3a7, 0xaa7a, 0x0, 0x1);
        gbc.writeMem(0xa69, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x976b);
        EXPECT(gbc.pc(), 0xa6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 01E2
        gbc.setState(0x7e2c, 0x75f0, 0xe70, 0x7e31, 0x4971, 0x3ee8, 0x0, 0x0);
        gbc.writeMem(0x7e2c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x75f0);
        EXPECT(gbc.pc(), 0x7e2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 01E3
        gbc.setState(0xa926, 0x94af, 0x2dc0, 0x3ce6, 0xa02c, 0x3fa4, 0x1, 0x1);
        gbc.writeMem(0xa926, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x94af);
        EXPECT(gbc.pc(), 0xa927);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa926), 0x51);
        // 51 01E4
        gbc.setState(0xa120, 0xe293, 0x8900, 0xc8dc, 0xecd3, 0xf5b4, 0x1, 0x1);
        gbc.writeMem(0xa120, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe293);
        EXPECT(gbc.pc(), 0xa121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa120), 0x51);
        // 51 01E5
        gbc.setState(0x2401, 0xcd6, 0x27b0, 0xd52f, 0x2d0e, 0xb458, 0x1, 0x1);
        gbc.writeMem(0x2401, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xcd6);
        EXPECT(gbc.pc(), 0x2402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 01E6
        gbc.setState(0xd84f, 0xb474, 0x15f0, 0xaf6, 0xed99, 0xa835, 0x1, 0x1);
        gbc.writeMem(0xd84f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb474);
        EXPECT(gbc.pc(), 0xd850);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd84f), 0x51);
        // 51 01E7
        gbc.setState(0x11c3, 0x7aa, 0x49c0, 0xc99b, 0xb4e0, 0xa369, 0x0, 0x0);
        gbc.writeMem(0x11c3, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x7aa);
        EXPECT(gbc.pc(), 0x11c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 01E8
        gbc.setState(0x7ba2, 0x4990, 0x80b0, 0x219, 0xcaed, 0x8932, 0x0, 0x1);
        gbc.writeMem(0x7ba2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4990);
        EXPECT(gbc.pc(), 0x7ba3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 01E9
        gbc.setState(0x2b42, 0x91bb, 0x31f0, 0x8ec6, 0xa498, 0x28e0, 0x1, 0x1);
        gbc.writeMem(0x2b42, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x91bb);
        EXPECT(gbc.pc(), 0x2b43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 01EA
        gbc.setState(0x1c8e, 0x76da, 0x32e0, 0x872e, 0x6881, 0xd230, 0x1, 0x1);
        gbc.writeMem(0x1c8e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x76da);
        EXPECT(gbc.pc(), 0x1c8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 01EB
        gbc.setState(0xe441, 0x3dcc, 0x55e0, 0x6dcd, 0x8ec0, 0xaf8d, 0x0, 0x1);
        gbc.writeMem(0xe441, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x3dcc);
        EXPECT(gbc.pc(), 0xe442);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe441), 0x51);
        // 51 01EC
        gbc.setState(0xbb4d, 0x8ca2, 0x1d50, 0xc3b0, 0x47fa, 0x128b, 0x0, 0x0);
        gbc.writeMem(0xbb4d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8ca2);
        EXPECT(gbc.pc(), 0xbb4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb4d), 0x51);
        // 51 01ED
        gbc.setState(0xb366, 0x385d, 0x6e30, 0x7068, 0x7850, 0x5f7f, 0x1, 0x0);
        gbc.writeMem(0xb366, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x385d);
        EXPECT(gbc.pc(), 0xb367);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb366), 0x51);
        // 51 01EE
        gbc.setState(0x7c76, 0x68a, 0x5680, 0x5ef3, 0x4023, 0xb4f, 0x1, 0x1);
        gbc.writeMem(0x7c76, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x68a);
        EXPECT(gbc.pc(), 0x7c77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 01EF
        gbc.setState(0xb12d, 0xd551, 0xe130, 0xec77, 0xf46f, 0xceaf, 0x1, 0x1);
        gbc.writeMem(0xb12d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd551);
        EXPECT(gbc.pc(), 0xb12e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb12d), 0x51);
        // 51 01F0
        gbc.setState(0x5d52, 0xfc4d, 0x7f50, 0x62c1, 0x759b, 0x90e6, 0x1, 0x0);
        gbc.writeMem(0x5d52, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xfc4d);
        EXPECT(gbc.pc(), 0x5d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 01F1
        gbc.setState(0xe48a, 0x47a0, 0xb8d0, 0x1855, 0x9579, 0x6a23, 0x1, 0x1);
        gbc.writeMem(0xe48a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x47a0);
        EXPECT(gbc.pc(), 0xe48b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe48a), 0x51);
        // 51 01F2
        gbc.setState(0xdd8b, 0x7d77, 0xb010, 0xc589, 0xf3e4, 0xa55f, 0x0, 0x0);
        gbc.writeMem(0xdd8b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x7d77);
        EXPECT(gbc.pc(), 0xdd8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd8b), 0x51);
        // 51 01F3
        gbc.setState(0x308c, 0x26dc, 0xf660, 0x5afd, 0x2935, 0xfd1a, 0x0, 0x0);
        gbc.writeMem(0x308c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x26dc);
        EXPECT(gbc.pc(), 0x308d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 01F4
        gbc.setState(0x7c2c, 0x301f, 0x1230, 0x44da, 0x6b7d, 0xb1c0, 0x1, 0x0);
        gbc.writeMem(0x7c2c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x301f);
        EXPECT(gbc.pc(), 0x7c2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 01F5
        gbc.setState(0x5934, 0x6d5e, 0x8c80, 0xbf4d, 0x4211, 0x5dc5, 0x0, 0x0);
        gbc.writeMem(0x5934, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6d5e);
        EXPECT(gbc.pc(), 0x5935);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 01F6
        gbc.setState(0x351c, 0x79e4, 0x1900, 0xdb14, 0xb559, 0xa472, 0x1, 0x1);
        gbc.writeMem(0x351c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x79e4);
        EXPECT(gbc.pc(), 0x351d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 01F7
        gbc.setState(0x6097, 0x8d19, 0xaab0, 0x72d4, 0x6dad, 0x9101, 0x0, 0x1);
        gbc.writeMem(0x6097, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x8d19);
        EXPECT(gbc.pc(), 0x6098);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 01F8
        gbc.setState(0xc43, 0x831c, 0xe9d0, 0x8bca, 0x499e, 0xe96, 0x0, 0x0);
        gbc.writeMem(0xc43, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x831c);
        EXPECT(gbc.pc(), 0xc44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 01F9
        gbc.setState(0x9df5, 0xaed1, 0xcd00, 0x4dce, 0xaa61, 0xba6, 0x0, 0x1);
        gbc.writeMem(0x9df5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xaed1);
        EXPECT(gbc.pc(), 0x9df6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9df5), 0x51);
        // 51 01FA
        gbc.setState(0x921d, 0x89d, 0xdef0, 0xaeff, 0x58d8, 0xd172, 0x1, 0x1);
        gbc.writeMem(0x921d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x89d);
        EXPECT(gbc.pc(), 0x921e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x921d), 0x51);
        // 51 01FB
        gbc.setState(0x18bc, 0x522c, 0x89a0, 0x208c, 0xa9bf, 0xf1a1, 0x0, 0x1);
        gbc.writeMem(0x18bc, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x522c);
        EXPECT(gbc.pc(), 0x18bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 01FC
        gbc.setState(0xb165, 0x488b, 0xf200, 0x100d, 0xc91d, 0x2e8f, 0x0, 0x0);
        gbc.writeMem(0xb165, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x488b);
        EXPECT(gbc.pc(), 0xb166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb165), 0x51);
        // 51 01FD
        gbc.setState(0x9b0d, 0x217, 0x3580, 0x1745, 0x7c55, 0x37ad, 0x0, 0x0);
        gbc.writeMem(0x9b0d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x217);
        EXPECT(gbc.pc(), 0x9b0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b0d), 0x51);
        // 51 01FE
        gbc.setState(0x9e55, 0x5b55, 0xa450, 0x589d, 0xeb91, 0x6357, 0x1, 0x1);
        gbc.writeMem(0x9e55, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x5b55);
        EXPECT(gbc.pc(), 0x9e56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e55), 0x51);
        // 51 01FF
        gbc.setState(0xe4ff, 0x689b, 0xe3d0, 0x55d3, 0xa534, 0x8b79, 0x0, 0x1);
        gbc.writeMem(0xe4ff, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x689b);
        EXPECT(gbc.pc(), 0xe500);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4ff), 0x51);
        // 51 0200
        gbc.setState(0x731c, 0x6ddc, 0xe650, 0x1dd9, 0x2add, 0xba05, 0x1, 0x1);
        gbc.writeMem(0x731c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x6ddc);
        EXPECT(gbc.pc(), 0x731d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0201
        gbc.setState(0x52b8, 0x52cc, 0x8970, 0xca66, 0x79ed, 0xa983, 0x1, 0x1);
        gbc.writeMem(0x52b8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x52cc);
        EXPECT(gbc.pc(), 0x52b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0202
        gbc.setState(0xb094, 0xde9e, 0xfb40, 0xbc89, 0xfd2b, 0x24d2, 0x1, 0x1);
        gbc.writeMem(0xb094, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xde9e);
        EXPECT(gbc.pc(), 0xb095);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb094), 0x51);
        // 51 0203
        gbc.setState(0xc050, 0x543d, 0xc6c0, 0x27c2, 0x4d27, 0x35ae, 0x0, 0x0);
        gbc.writeMem(0xc050, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x543d);
        EXPECT(gbc.pc(), 0xc051);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc050), 0x51);
        // 51 0204
        gbc.setState(0x3eaf, 0x9955, 0x2b60, 0x8f6e, 0xf198, 0xa345, 0x0, 0x1);
        gbc.writeMem(0x3eaf, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x9955);
        EXPECT(gbc.pc(), 0x3eb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0205
        gbc.setState(0x98ab, 0xd72, 0x8ed0, 0x8650, 0x81f1, 0xe084, 0x0, 0x0);
        gbc.writeMem(0x98ab, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd72);
        EXPECT(gbc.pc(), 0x98ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ab), 0x51);
        // 51 0206
        gbc.setState(0xa819, 0x6b16, 0x10c0, 0xe86e, 0x906f, 0x41f0, 0x1, 0x0);
        gbc.writeMem(0xa819, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6b16);
        EXPECT(gbc.pc(), 0xa81a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa819), 0x51);
        // 51 0207
        gbc.setState(0xdb2, 0x8735, 0x2300, 0x4006, 0xbd46, 0x797, 0x1, 0x0);
        gbc.writeMem(0xdb2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8735);
        EXPECT(gbc.pc(), 0xdb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0208
        gbc.setState(0x3ffd, 0x54e7, 0x7ce0, 0xc340, 0xb8c1, 0x1a4b, 0x0, 0x0);
        gbc.writeMem(0x3ffd, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x54e7);
        EXPECT(gbc.pc(), 0x3ffe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0209
        gbc.setState(0x17b8, 0xf188, 0x30b0, 0x33c6, 0x2a43, 0xe6f8, 0x1, 0x0);
        gbc.writeMem(0x17b8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf188);
        EXPECT(gbc.pc(), 0x17b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 020A
        gbc.setState(0x32ba, 0xfad3, 0xdc80, 0x6c7f, 0xca0f, 0x5d76, 0x1, 0x1);
        gbc.writeMem(0x32ba, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xfad3);
        EXPECT(gbc.pc(), 0x32bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 020B
        gbc.setState(0x9f74, 0x1b8d, 0xa970, 0x9ad0, 0x73ab, 0x9c16, 0x0, 0x1);
        gbc.writeMem(0x9f74, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1b8d);
        EXPECT(gbc.pc(), 0x9f75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f74), 0x51);
        // 51 020C
        gbc.setState(0xe41b, 0xb5bc, 0x2380, 0x1678, 0xe97, 0x8cfb, 0x0, 0x1);
        gbc.writeMem(0xe41b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb5bc);
        EXPECT(gbc.pc(), 0xe41c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe41b), 0x51);
        // 51 020D
        gbc.setState(0x6c4e, 0x89c, 0x31e0, 0xb4c3, 0xffe9, 0x3527, 0x0, 0x0);
        gbc.writeMem(0x6c4e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x89c);
        EXPECT(gbc.pc(), 0x6c4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 020E
        gbc.setState(0x8f14, 0x33fc, 0x5bd0, 0xd4ec, 0xe62d, 0xb78b, 0x1, 0x1);
        gbc.writeMem(0x8f14, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x33fc);
        EXPECT(gbc.pc(), 0x8f15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f14), 0x51);
        // 51 020F
        gbc.setState(0x472d, 0x3af1, 0x3da0, 0xf446, 0xcc36, 0xd3c0, 0x0, 0x0);
        gbc.writeMem(0x472d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3af1);
        EXPECT(gbc.pc(), 0x472e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0210
        gbc.setState(0xaf61, 0x593, 0xa650, 0xefa2, 0x2fa8, 0x2580, 0x1, 0x1);
        gbc.writeMem(0xaf61, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x593);
        EXPECT(gbc.pc(), 0xaf62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf61), 0x51);
        // 51 0211
        gbc.setState(0xcb02, 0xc0e5, 0x32a0, 0x521c, 0x1977, 0xda8, 0x1, 0x0);
        gbc.writeMem(0xcb02, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc0e5);
        EXPECT(gbc.pc(), 0xcb03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb02), 0x51);
        // 51 0212
        gbc.setState(0xb4f9, 0xcfa7, 0xdc20, 0xe8ac, 0x6ae2, 0xa1fe, 0x1, 0x1);
        gbc.writeMem(0xb4f9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xcfa7);
        EXPECT(gbc.pc(), 0xb4fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4f9), 0x51);
        // 51 0213
        gbc.setState(0xbead, 0xc1d8, 0x44f0, 0x821d, 0xb0ea, 0x2d58, 0x1, 0x0);
        gbc.writeMem(0xbead, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc1d8);
        EXPECT(gbc.pc(), 0xbeae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbead), 0x51);
        // 51 0214
        gbc.setState(0xdadb, 0xfe1e, 0x8860, 0xcac5, 0xb7a3, 0xcc24, 0x1, 0x0);
        gbc.writeMem(0xdadb, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xfe1e);
        EXPECT(gbc.pc(), 0xdadc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdadb), 0x51);
        // 51 0215
        gbc.setState(0x3c54, 0x3c27, 0x74e0, 0x8e56, 0x327f, 0x822, 0x1, 0x1);
        gbc.writeMem(0x3c54, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3c27);
        EXPECT(gbc.pc(), 0x3c55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0216
        gbc.setState(0x9aa7, 0x3ed5, 0x8ea0, 0xef21, 0xce60, 0xf4e2, 0x1, 0x0);
        gbc.writeMem(0x9aa7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3ed5);
        EXPECT(gbc.pc(), 0x9aa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aa7), 0x51);
        // 51 0217
        gbc.setState(0x3313, 0x245b, 0x9d60, 0x21a, 0x51f, 0xb9a, 0x1, 0x0);
        gbc.writeMem(0x3313, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x245b);
        EXPECT(gbc.pc(), 0x3314);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0218
        gbc.setState(0xda48, 0x3810, 0x2330, 0x5654, 0x30df, 0x984d, 0x0, 0x0);
        gbc.writeMem(0xda48, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3810);
        EXPECT(gbc.pc(), 0xda49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda48), 0x51);
        // 51 0219
        gbc.setState(0x21b0, 0x22b4, 0x7710, 0xe03c, 0x1e52, 0x133f, 0x1, 0x1);
        gbc.writeMem(0x21b0, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x22b4);
        EXPECT(gbc.pc(), 0x21b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 021A
        gbc.setState(0x3130, 0xced4, 0xaf70, 0x1819, 0xb300, 0x6dcc, 0x1, 0x1);
        gbc.writeMem(0x3130, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xced4);
        EXPECT(gbc.pc(), 0x3131);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 021B
        gbc.setState(0x7aa, 0x237a, 0xd490, 0xea03, 0xd6be, 0x34c3, 0x1, 0x0);
        gbc.writeMem(0x7aa, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x237a);
        EXPECT(gbc.pc(), 0x7ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 021C
        gbc.setState(0xcad3, 0x60f9, 0xc670, 0x93b, 0x35e9, 0x1d3b, 0x1, 0x1);
        gbc.writeMem(0xcad3, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x60f9);
        EXPECT(gbc.pc(), 0xcad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcad3), 0x51);
        // 51 021D
        gbc.setState(0x7a71, 0xbace, 0xc6e0, 0x2efa, 0x5e05, 0x196, 0x0, 0x0);
        gbc.writeMem(0x7a71, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xbace);
        EXPECT(gbc.pc(), 0x7a72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 021E
        gbc.setState(0xe2a3, 0xae7c, 0xfc00, 0xca7, 0x26b9, 0xf442, 0x1, 0x0);
        gbc.writeMem(0xe2a3, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xae7c);
        EXPECT(gbc.pc(), 0xe2a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2a3), 0x51);
        // 51 021F
        gbc.setState(0x8dec, 0xcabe, 0xd660, 0x57a8, 0x48f6, 0x82fd, 0x0, 0x0);
        gbc.writeMem(0x8dec, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xcabe);
        EXPECT(gbc.pc(), 0x8ded);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dec), 0x51);
        // 51 0220
        gbc.setState(0xebb8, 0xd74d, 0xe00, 0x41d3, 0x730b, 0xfb3a, 0x0, 0x1);
        gbc.writeMem(0xebb8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd74d);
        EXPECT(gbc.pc(), 0xebb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebb8), 0x51);
        // 51 0221
        gbc.setState(0x678d, 0x621f, 0x4bc0, 0x9b27, 0xfed4, 0xeb55, 0x0, 0x0);
        gbc.writeMem(0x678d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x621f);
        EXPECT(gbc.pc(), 0x678e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0222
        gbc.setState(0x1217, 0xc16e, 0x83f0, 0x15d, 0x1b07, 0x7391, 0x1, 0x1);
        gbc.writeMem(0x1217, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc16e);
        EXPECT(gbc.pc(), 0x1218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0224
        gbc.setState(0xe950, 0x8dbe, 0xf500, 0x7bbe, 0xddec, 0xbf7f, 0x0, 0x1);
        gbc.writeMem(0xe950, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8dbe);
        EXPECT(gbc.pc(), 0xe951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe950), 0x51);
        // 51 0225
        gbc.setState(0xc862, 0x7db6, 0x42f0, 0xf743, 0x6990, 0x6e85, 0x0, 0x0);
        gbc.writeMem(0xc862, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x7db6);
        EXPECT(gbc.pc(), 0xc863);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc862), 0x51);
        // 51 0226
        gbc.setState(0x712e, 0x5ab0, 0x5400, 0xf02f, 0x63cd, 0x6ce0, 0x1, 0x1);
        gbc.writeMem(0x712e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5ab0);
        EXPECT(gbc.pc(), 0x712f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0227
        gbc.setState(0x877c, 0xb4e0, 0x2f20, 0x39af, 0xb9ff, 0x407c, 0x0, 0x0);
        gbc.writeMem(0x877c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb4e0);
        EXPECT(gbc.pc(), 0x877d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x877c), 0x51);
        // 51 0228
        gbc.setState(0xd2b, 0x11d1, 0xa3d0, 0x3157, 0x5054, 0xbd60, 0x0, 0x1);
        gbc.writeMem(0xd2b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x11d1);
        EXPECT(gbc.pc(), 0xd2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0229
        gbc.setState(0x92b7, 0x6aeb, 0x3320, 0x2259, 0x9511, 0xebf1, 0x1, 0x1);
        gbc.writeMem(0x92b7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6aeb);
        EXPECT(gbc.pc(), 0x92b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92b7), 0x51);
        // 51 022A
        gbc.setState(0x515f, 0xa46, 0x2c00, 0xbcf8, 0xdbe, 0xd7d7, 0x1, 0x0);
        gbc.writeMem(0x515f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa46);
        EXPECT(gbc.pc(), 0x5160);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 022B
        gbc.setState(0xeb89, 0xafd5, 0x58b0, 0xeb89, 0xc574, 0x8ba, 0x1, 0x0);
        gbc.writeMem(0xeb89, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xafd5);
        EXPECT(gbc.pc(), 0xeb8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb89), 0x51);
        // 51 022C
        gbc.setState(0x6b11, 0x4f3, 0x3080, 0x5f3b, 0xab84, 0xc40, 0x0, 0x0);
        gbc.writeMem(0x6b11, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4f3);
        EXPECT(gbc.pc(), 0x6b12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 022D
        gbc.setState(0x5b3b, 0x533c, 0x5e40, 0xf347, 0x9b63, 0xbebf, 0x1, 0x0);
        gbc.writeMem(0x5b3b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x533c);
        EXPECT(gbc.pc(), 0x5b3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 022E
        gbc.setState(0xdebe, 0x6e14, 0x45d0, 0xa923, 0x79c7, 0x285e, 0x0, 0x0);
        gbc.writeMem(0xdebe, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6e14);
        EXPECT(gbc.pc(), 0xdebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdebe), 0x51);
        // 51 022F
        gbc.setState(0x5176, 0x33f7, 0x8bd0, 0xfc7c, 0x4586, 0x5aaa, 0x0, 0x0);
        gbc.writeMem(0x5176, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x33f7);
        EXPECT(gbc.pc(), 0x5177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0230
        gbc.setState(0xa126, 0xcd80, 0x7e70, 0x4875, 0x5c38, 0x250e, 0x1, 0x0);
        gbc.writeMem(0xa126, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xcd80);
        EXPECT(gbc.pc(), 0xa127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa126), 0x51);
        // 51 0231
        gbc.setState(0x14dd, 0x70f8, 0x58e0, 0xf320, 0x7886, 0xb333, 0x0, 0x0);
        gbc.writeMem(0x14dd, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x70f8);
        EXPECT(gbc.pc(), 0x14de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0232
        gbc.setState(0x9566, 0xaa14, 0x2b70, 0x15bd, 0x477e, 0x7f00, 0x0, 0x0);
        gbc.writeMem(0x9566, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xaa14);
        EXPECT(gbc.pc(), 0x9567);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9566), 0x51);
        // 51 0233
        gbc.setState(0xd8ef, 0xaf0c, 0xc860, 0x3dfd, 0x6488, 0xa270, 0x0, 0x0);
        gbc.writeMem(0xd8ef, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xaf0c);
        EXPECT(gbc.pc(), 0xd8f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8ef), 0x51);
        // 51 0234
        gbc.setState(0x2f2c, 0x934b, 0x6720, 0x26c0, 0x2ea5, 0x8f58, 0x0, 0x0);
        gbc.writeMem(0x2f2c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x934b);
        EXPECT(gbc.pc(), 0x2f2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0235
        gbc.setState(0xad57, 0x3ef8, 0x15e0, 0x1acd, 0x6779, 0xab47, 0x0, 0x1);
        gbc.writeMem(0xad57, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x3ef8);
        EXPECT(gbc.pc(), 0xad58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad57), 0x51);
        // 51 0236
        gbc.setState(0xb82a, 0xc28e, 0x3320, 0x177a, 0x1f58, 0xa08, 0x0, 0x1);
        gbc.writeMem(0xb82a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc28e);
        EXPECT(gbc.pc(), 0xb82b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb82a), 0x51);
        // 51 0237
        gbc.setState(0xd636, 0x683c, 0x7ee0, 0x95f4, 0x1c90, 0x7fae, 0x1, 0x0);
        gbc.writeMem(0xd636, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x683c);
        EXPECT(gbc.pc(), 0xd637);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd636), 0x51);
        // 51 0238
        gbc.setState(0x430c, 0x8f52, 0x15e0, 0x5a2a, 0x14db, 0xf9e4, 0x0, 0x0);
        gbc.writeMem(0x430c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8f52);
        EXPECT(gbc.pc(), 0x430d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0239
        gbc.setState(0xdfc8, 0x349e, 0xf170, 0x1e18, 0xff8a, 0x816c, 0x0, 0x0);
        gbc.writeMem(0xdfc8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x349e);
        EXPECT(gbc.pc(), 0xdfc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfc8), 0x51);
        // 51 023A
        gbc.setState(0x7e59, 0x6ccc, 0x34b0, 0x536f, 0xdeb, 0x3a6a, 0x0, 0x0);
        gbc.writeMem(0x7e59, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6ccc);
        EXPECT(gbc.pc(), 0x7e5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 023B
        gbc.setState(0x54f3, 0x5a9, 0x4a20, 0x948c, 0x561, 0xfe7e, 0x1, 0x1);
        gbc.writeMem(0x54f3, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5a9);
        EXPECT(gbc.pc(), 0x54f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 023C
        gbc.setState(0x780c, 0x1fdf, 0x5ce0, 0x2e81, 0xf2ed, 0x68af, 0x0, 0x1);
        gbc.writeMem(0x780c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x1fdf);
        EXPECT(gbc.pc(), 0x780d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 023D
        gbc.setState(0x768b, 0xc10a, 0xff20, 0xf9ec, 0x7def, 0x19dd, 0x1, 0x1);
        gbc.writeMem(0x768b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc10a);
        EXPECT(gbc.pc(), 0x768c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 023E
        gbc.setState(0xaf14, 0x414d, 0x1100, 0xb4ec, 0x8d5, 0xa861, 0x1, 0x1);
        gbc.writeMem(0xaf14, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x414d);
        EXPECT(gbc.pc(), 0xaf15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf14), 0x51);
        // 51 023F
        gbc.setState(0x1314, 0xb63a, 0x1d0, 0x722f, 0xedf3, 0x6351, 0x0, 0x0);
        gbc.writeMem(0x1314, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xb63a);
        EXPECT(gbc.pc(), 0x1315);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0240
        gbc.setState(0x3d56, 0x21e8, 0xc30, 0xaeca, 0x136f, 0x86f1, 0x0, 0x0);
        gbc.writeMem(0x3d56, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x21e8);
        EXPECT(gbc.pc(), 0x3d57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0241
        gbc.setState(0x9caa, 0x362, 0xbf70, 0x11f, 0x602e, 0x25f0, 0x1, 0x0);
        gbc.writeMem(0x9caa, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x362);
        EXPECT(gbc.pc(), 0x9cab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9caa), 0x51);
        // 51 0242
        gbc.setState(0xded2, 0xb03d, 0x3970, 0x64a6, 0x72ca, 0xf872, 0x1, 0x0);
        gbc.writeMem(0xded2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb03d);
        EXPECT(gbc.pc(), 0xded3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xded2), 0x51);
        // 51 0243
        gbc.setState(0x4848, 0xfbac, 0x6b30, 0x6cb9, 0x45c4, 0x9c5a, 0x1, 0x0);
        gbc.writeMem(0x4848, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xfbac);
        EXPECT(gbc.pc(), 0x4849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0245
        gbc.setState(0xbec6, 0xcbd7, 0x1010, 0xe1a2, 0x24a4, 0x2865, 0x0, 0x0);
        gbc.writeMem(0xbec6, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xcbd7);
        EXPECT(gbc.pc(), 0xbec7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbec6), 0x51);
        // 51 0246
        gbc.setState(0xabad, 0xaa9b, 0x77f0, 0x2545, 0xe93c, 0x4367, 0x1, 0x1);
        gbc.writeMem(0xabad, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xaa9b);
        EXPECT(gbc.pc(), 0xabae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabad), 0x51);
        // 51 0247
        gbc.setState(0xb85d, 0xabfc, 0x48d0, 0xeabf, 0xdb36, 0xaa18, 0x1, 0x0);
        gbc.writeMem(0xb85d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xabfc);
        EXPECT(gbc.pc(), 0xb85e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb85d), 0x51);
        // 51 0248
        gbc.setState(0xca0d, 0x60ed, 0x6cb0, 0x8b53, 0xa139, 0xc3a2, 0x0, 0x1);
        gbc.writeMem(0xca0d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x60ed);
        EXPECT(gbc.pc(), 0xca0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca0d), 0x51);
        // 51 0249
        gbc.setState(0x2a18, 0x7246, 0xc960, 0xa9d6, 0xa20f, 0x970f, 0x1, 0x0);
        gbc.writeMem(0x2a18, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7246);
        EXPECT(gbc.pc(), 0x2a19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 024A
        gbc.setState(0x55f9, 0xea89, 0x2290, 0xc884, 0xee03, 0x3538, 0x0, 0x1);
        gbc.writeMem(0x55f9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xea89);
        EXPECT(gbc.pc(), 0x55fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 024B
        gbc.setState(0x8d6d, 0x9223, 0x9da0, 0x36c8, 0xbe9f, 0xf659, 0x1, 0x1);
        gbc.writeMem(0x8d6d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9223);
        EXPECT(gbc.pc(), 0x8d6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d6d), 0x51);
        // 51 024D
        gbc.setState(0xe96a, 0xfea1, 0xa3b0, 0x80cc, 0x7592, 0x5ff8, 0x0, 0x1);
        gbc.writeMem(0xe96a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xfea1);
        EXPECT(gbc.pc(), 0xe96b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe96a), 0x51);
        // 51 024E
        gbc.setState(0xd564, 0x530a, 0xca20, 0x3da, 0xd981, 0x5d1b, 0x0, 0x0);
        gbc.writeMem(0xd564, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x530a);
        EXPECT(gbc.pc(), 0xd565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd564), 0x51);
        // 51 024F
        gbc.setState(0x9bfd, 0x2c26, 0xa130, 0x33b3, 0x4743, 0x82df, 0x1, 0x1);
        gbc.writeMem(0x9bfd, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2c26);
        EXPECT(gbc.pc(), 0x9bfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bfd), 0x51);
        // 51 0250
        gbc.setState(0x5439, 0xb02e, 0xa380, 0xb610, 0xf590, 0xb87e, 0x0, 0x1);
        gbc.writeMem(0x5439, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb02e);
        EXPECT(gbc.pc(), 0x543a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0251
        gbc.setState(0x8b6f, 0x58fb, 0xf470, 0x93ff, 0x4695, 0xad4, 0x0, 0x1);
        gbc.writeMem(0x8b6f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x58fb);
        EXPECT(gbc.pc(), 0x8b70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b6f), 0x51);
        // 51 0252
        gbc.setState(0xce74, 0x2a74, 0x8f30, 0x4957, 0x1fab, 0x7ca4, 0x1, 0x0);
        gbc.writeMem(0xce74, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2a74);
        EXPECT(gbc.pc(), 0xce75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce74), 0x51);
        // 51 0253
        gbc.setState(0xb29b, 0x91ac, 0xbec0, 0x9cd8, 0x4699, 0x1f3d, 0x1, 0x0);
        gbc.writeMem(0xb29b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x91ac);
        EXPECT(gbc.pc(), 0xb29c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb29b), 0x51);
        // 51 0254
        gbc.setState(0x877d, 0x9a3, 0x1a30, 0xabb, 0xd80c, 0xfec2, 0x0, 0x0);
        gbc.writeMem(0x877d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9a3);
        EXPECT(gbc.pc(), 0x877e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x877d), 0x51);
        // 51 0255
        gbc.setState(0x173b, 0x7ce8, 0x7210, 0xbe, 0xecc, 0xcac5, 0x1, 0x0);
        gbc.writeMem(0x173b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7ce8);
        EXPECT(gbc.pc(), 0x173c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0256
        gbc.setState(0xe1f9, 0x508e, 0x1d80, 0x5d6f, 0x3ef7, 0xb2a0, 0x0, 0x1);
        gbc.writeMem(0xe1f9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x508e);
        EXPECT(gbc.pc(), 0xe1fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1f9), 0x51);
        // 51 0257
        gbc.setState(0x491d, 0xb839, 0xe610, 0x19d, 0xb5c0, 0x8ff7, 0x0, 0x0);
        gbc.writeMem(0x491d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb839);
        EXPECT(gbc.pc(), 0x491e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0258
        gbc.setState(0x248e, 0x1e59, 0x7ea0, 0x8570, 0x9d79, 0xbd98, 0x0, 0x0);
        gbc.writeMem(0x248e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1e59);
        EXPECT(gbc.pc(), 0x248f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0259
        gbc.setState(0x88fb, 0x28ca, 0x45c0, 0x9537, 0xf0c8, 0x32f3, 0x1, 0x1);
        gbc.writeMem(0x88fb, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x28ca);
        EXPECT(gbc.pc(), 0x88fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88fb), 0x51);
        // 51 025B
        gbc.setState(0xa600, 0xab62, 0x1b00, 0x102c, 0x6998, 0xe236, 0x0, 0x1);
        gbc.writeMem(0xa600, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xab62);
        EXPECT(gbc.pc(), 0xa601);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa600), 0x51);
        // 51 025C
        gbc.setState(0xc74f, 0xbc91, 0xaf60, 0xc2e7, 0x4838, 0x871a, 0x1, 0x1);
        gbc.writeMem(0xc74f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xbc91);
        EXPECT(gbc.pc(), 0xc750);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc74f), 0x51);
        // 51 025D
        gbc.setState(0x884f, 0x9a37, 0x4e90, 0x678a, 0x20fc, 0x2a59, 0x1, 0x1);
        gbc.writeMem(0x884f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9a37);
        EXPECT(gbc.pc(), 0x8850);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x884f), 0x51);
        // 51 025F
        gbc.setState(0x6577, 0x940f, 0x6b30, 0xc3f7, 0x16c7, 0xdec8, 0x1, 0x1);
        gbc.writeMem(0x6577, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x940f);
        EXPECT(gbc.pc(), 0x6578);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0260
        gbc.setState(0xaa0e, 0x8460, 0x14d0, 0xf9cc, 0xa65e, 0x51d4, 0x1, 0x1);
        gbc.writeMem(0xaa0e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8460);
        EXPECT(gbc.pc(), 0xaa0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa0e), 0x51);
        // 51 0261
        gbc.setState(0x23d, 0x653c, 0x62d0, 0xd685, 0x1a54, 0x214f, 0x1, 0x1);
        gbc.writeMem(0x23d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x653c);
        EXPECT(gbc.pc(), 0x23e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0262
        gbc.setState(0x4ae4, 0xcc7c, 0xb200, 0x728f, 0xd7bc, 0xca2d, 0x0, 0x0);
        gbc.writeMem(0x4ae4, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xcc7c);
        EXPECT(gbc.pc(), 0x4ae5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0264
        gbc.setState(0x5621, 0xabbf, 0x9430, 0x8f39, 0xb03b, 0xbb3e, 0x1, 0x0);
        gbc.writeMem(0x5621, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xabbf);
        EXPECT(gbc.pc(), 0x5622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0265
        gbc.setState(0x1a7f, 0x1127, 0x3270, 0xfdd1, 0xc280, 0xe0aa, 0x0, 0x0);
        gbc.writeMem(0x1a7f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1127);
        EXPECT(gbc.pc(), 0x1a80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0266
        gbc.setState(0x239, 0x2195, 0x8980, 0x509b, 0x1c8d, 0x2643, 0x0, 0x0);
        gbc.writeMem(0x239, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2195);
        EXPECT(gbc.pc(), 0x23a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0267
        gbc.setState(0x7775, 0xde3d, 0xe790, 0x34bd, 0x30ef, 0xee55, 0x0, 0x1);
        gbc.writeMem(0x7775, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xde3d);
        EXPECT(gbc.pc(), 0x7776);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0268
        gbc.setState(0xbc08, 0xbd34, 0x5510, 0xa09f, 0xc1e2, 0x5bbf, 0x1, 0x1);
        gbc.writeMem(0xbc08, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xbd34);
        EXPECT(gbc.pc(), 0xbc09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc08), 0x51);
        // 51 0269
        gbc.setState(0xa89f, 0xe495, 0x5640, 0xca38, 0x4951, 0xda06, 0x0, 0x0);
        gbc.writeMem(0xa89f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe495);
        EXPECT(gbc.pc(), 0xa8a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa89f), 0x51);
        // 51 026A
        gbc.setState(0x317c, 0x2d80, 0x3860, 0x2e62, 0xab71, 0x50c3, 0x1, 0x1);
        gbc.writeMem(0x317c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2d80);
        EXPECT(gbc.pc(), 0x317d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 026B
        gbc.setState(0x6789, 0xc029, 0xdf20, 0x4ac3, 0xb89f, 0x28e5, 0x0, 0x0);
        gbc.writeMem(0x6789, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc029);
        EXPECT(gbc.pc(), 0x678a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 026C
        gbc.setState(0xa157, 0xb167, 0x3ff0, 0xae09, 0x2064, 0x2410, 0x0, 0x0);
        gbc.writeMem(0xa157, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb167);
        EXPECT(gbc.pc(), 0xa158);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa157), 0x51);
        // 51 026E
        gbc.setState(0x4a2, 0xb177, 0xfbd0, 0xbf86, 0xdd21, 0x14a0, 0x1, 0x1);
        gbc.writeMem(0x4a2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb177);
        EXPECT(gbc.pc(), 0x4a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 026F
        gbc.setState(0x5629, 0xdf4e, 0x5f00, 0x53d5, 0x78f6, 0x579c, 0x0, 0x0);
        gbc.writeMem(0x5629, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xdf4e);
        EXPECT(gbc.pc(), 0x562a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0270
        gbc.setState(0x1736, 0xec93, 0xaea0, 0xb710, 0xfc28, 0x1719, 0x1, 0x1);
        gbc.writeMem(0x1736, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xec93);
        EXPECT(gbc.pc(), 0x1737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0271
        gbc.setState(0x8023, 0x88eb, 0xb080, 0xd5d7, 0x7429, 0xb4ff, 0x1, 0x0);
        gbc.writeMem(0x8023, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x88eb);
        EXPECT(gbc.pc(), 0x8024);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8023), 0x51);
        // 51 0272
        gbc.setState(0xb532, 0x41e6, 0x3d50, 0xf835, 0xdd4c, 0xc76c, 0x1, 0x1);
        gbc.writeMem(0xb532, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x41e6);
        EXPECT(gbc.pc(), 0xb533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb532), 0x51);
        // 51 0273
        gbc.setState(0x634b, 0x33d3, 0x5460, 0xbf1f, 0xe634, 0x5d7b, 0x0, 0x1);
        gbc.writeMem(0x634b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x33d3);
        EXPECT(gbc.pc(), 0x634c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0274
        gbc.setState(0x28b9, 0x1b5b, 0xdcc0, 0xd9aa, 0xe74f, 0x3b8b, 0x1, 0x0);
        gbc.writeMem(0x28b9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x1b5b);
        EXPECT(gbc.pc(), 0x28ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0275
        gbc.setState(0x9eed, 0xed79, 0x4340, 0x3f60, 0x543c, 0x6f4, 0x1, 0x0);
        gbc.writeMem(0x9eed, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xed79);
        EXPECT(gbc.pc(), 0x9eee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eed), 0x51);
        // 51 0276
        gbc.setState(0xddba, 0xf0f0, 0xae30, 0x9b13, 0x16cb, 0xe688, 0x1, 0x0);
        gbc.writeMem(0xddba, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf0f0);
        EXPECT(gbc.pc(), 0xddbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddba), 0x51);
        // 51 0277
        gbc.setState(0xb4be, 0xb8a8, 0x2ae0, 0xc279, 0x766c, 0xb4d5, 0x0, 0x0);
        gbc.writeMem(0xb4be, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xb8a8);
        EXPECT(gbc.pc(), 0xb4bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4be), 0x51);
        // 51 0278
        gbc.setState(0xef03, 0x850b, 0x8b00, 0x9503, 0x3d53, 0x3837, 0x1, 0x1);
        gbc.writeMem(0xef03, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x850b);
        EXPECT(gbc.pc(), 0xef04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef03), 0x51);
        // 51 0279
        gbc.setState(0xa7b4, 0xf4ce, 0x3e90, 0xf6cc, 0x2f84, 0xf50a, 0x0, 0x1);
        gbc.writeMem(0xa7b4, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf4ce);
        EXPECT(gbc.pc(), 0xa7b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b4), 0x51);
        // 51 027A
        gbc.setState(0x23b4, 0xb8d2, 0x5910, 0xfcb6, 0xa9d5, 0xd4fd, 0x0, 0x1);
        gbc.writeMem(0x23b4, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb8d2);
        EXPECT(gbc.pc(), 0x23b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 027B
        gbc.setState(0x56c5, 0xb13a, 0x41b0, 0xb3f5, 0x5409, 0x12f7, 0x1, 0x0);
        gbc.writeMem(0x56c5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb13a);
        EXPECT(gbc.pc(), 0x56c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 027C
        gbc.setState(0x7cdc, 0x471b, 0x8b80, 0x5f90, 0xf6d3, 0xc348, 0x1, 0x0);
        gbc.writeMem(0x7cdc, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x471b);
        EXPECT(gbc.pc(), 0x7cdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 027D
        gbc.setState(0xb147, 0x3e1d, 0xabc0, 0xe518, 0x66ee, 0xab6c, 0x0, 0x0);
        gbc.writeMem(0xb147, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3e1d);
        EXPECT(gbc.pc(), 0xb148);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb147), 0x51);
        // 51 027E
        gbc.setState(0x7993, 0x668a, 0x4cb0, 0x3c52, 0x8d18, 0x7fe4, 0x0, 0x0);
        gbc.writeMem(0x7993, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x668a);
        EXPECT(gbc.pc(), 0x7994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 027F
        gbc.setState(0x360, 0xdd94, 0x31c0, 0x5016, 0xb9bb, 0xb676, 0x1, 0x0);
        gbc.writeMem(0x360, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xdd94);
        EXPECT(gbc.pc(), 0x361);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0280
        gbc.setState(0x5d79, 0x5a34, 0x71e0, 0x799e, 0xa2b4, 0xcfed, 0x0, 0x0);
        gbc.writeMem(0x5d79, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5a34);
        EXPECT(gbc.pc(), 0x5d7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0281
        gbc.setState(0x2dae, 0xddc7, 0xc570, 0xde21, 0xed8e, 0xd2ca, 0x0, 0x1);
        gbc.writeMem(0x2dae, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xddc7);
        EXPECT(gbc.pc(), 0x2daf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0282
        gbc.setState(0x6227, 0xf944, 0x1830, 0xe8c0, 0x16c, 0x6c05, 0x0, 0x0);
        gbc.writeMem(0x6227, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf944);
        EXPECT(gbc.pc(), 0x6228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0283
        gbc.setState(0x461b, 0xb271, 0x2610, 0x9eff, 0x5015, 0x7287, 0x1, 0x1);
        gbc.writeMem(0x461b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb271);
        EXPECT(gbc.pc(), 0x461c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0284
        gbc.setState(0x9c56, 0x90b9, 0x3230, 0xa67e, 0xe24d, 0xaab8, 0x0, 0x1);
        gbc.writeMem(0x9c56, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x90b9);
        EXPECT(gbc.pc(), 0x9c57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c56), 0x51);
        // 51 0285
        gbc.setState(0x5217, 0x7b79, 0xfef0, 0xf02d, 0x3dc5, 0x4b78, 0x0, 0x0);
        gbc.writeMem(0x5217, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7b79);
        EXPECT(gbc.pc(), 0x5218);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0286
        gbc.setState(0xb4c2, 0xdee6, 0x9e30, 0x88e4, 0xecc0, 0x83e, 0x1, 0x1);
        gbc.writeMem(0xb4c2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xdee6);
        EXPECT(gbc.pc(), 0xb4c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4c2), 0x51);
        // 51 0287
        gbc.setState(0xeff0, 0x1dac, 0x2c30, 0x3ff1, 0xe96d, 0xfa8c, 0x0, 0x0);
        gbc.writeMem(0xeff0, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1dac);
        EXPECT(gbc.pc(), 0xeff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeff0), 0x51);
        // 51 0288
        gbc.setState(0xca0d, 0xa1c1, 0x6f70, 0x1847, 0x1162, 0x61e6, 0x1, 0x1);
        gbc.writeMem(0xca0d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa1c1);
        EXPECT(gbc.pc(), 0xca0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca0d), 0x51);
        // 51 0289
        gbc.setState(0xb819, 0x439c, 0x6790, 0x7fc5, 0x5f9d, 0x47b8, 0x0, 0x0);
        gbc.writeMem(0xb819, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x439c);
        EXPECT(gbc.pc(), 0xb81a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb819), 0x51);
        // 51 028A
        gbc.setState(0x91ea, 0x661f, 0x6620, 0x1fca, 0xa2aa, 0xad46, 0x0, 0x0);
        gbc.writeMem(0x91ea, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x661f);
        EXPECT(gbc.pc(), 0x91eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ea), 0x51);
        // 51 028B
        gbc.setState(0xd1e5, 0xb313, 0x49a0, 0x138, 0x25e3, 0x3c4d, 0x1, 0x1);
        gbc.writeMem(0xd1e5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb313);
        EXPECT(gbc.pc(), 0xd1e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1e5), 0x51);
        // 51 028C
        gbc.setState(0x1adc, 0x4ad1, 0x5720, 0xf57d, 0x6d2, 0xfae2, 0x0, 0x1);
        gbc.writeMem(0x1adc, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4ad1);
        EXPECT(gbc.pc(), 0x1add);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 028D
        gbc.setState(0x82d2, 0xacaa, 0x5780, 0x21f9, 0xe35, 0x61e8, 0x0, 0x0);
        gbc.writeMem(0x82d2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xacaa);
        EXPECT(gbc.pc(), 0x82d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82d2), 0x51);
        // 51 028E
        gbc.setState(0x8f3e, 0x9f35, 0x3c30, 0x2b5c, 0x3958, 0xef97, 0x0, 0x1);
        gbc.writeMem(0x8f3e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x9f35);
        EXPECT(gbc.pc(), 0x8f3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f3e), 0x51);
        // 51 028F
        gbc.setState(0x31ae, 0x3bb9, 0x2300, 0xb537, 0x3bb3, 0x732d, 0x0, 0x0);
        gbc.writeMem(0x31ae, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3bb9);
        EXPECT(gbc.pc(), 0x31af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0290
        gbc.setState(0xeb40, 0x95a3, 0x7880, 0xfe29, 0xef2b, 0xdfe4, 0x0, 0x0);
        gbc.writeMem(0xeb40, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x95a3);
        EXPECT(gbc.pc(), 0xeb41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb40), 0x51);
        // 51 0291
        gbc.setState(0x1ddf, 0xdfbb, 0xd0, 0x7c69, 0xfd71, 0xec41, 0x0, 0x1);
        gbc.writeMem(0x1ddf, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xdfbb);
        EXPECT(gbc.pc(), 0x1de0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0292
        gbc.setState(0x181, 0x6214, 0xea80, 0xa7c0, 0x55cd, 0x8981, 0x0, 0x0);
        gbc.writeMem(0x181, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6214);
        EXPECT(gbc.pc(), 0x182);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0293
        gbc.setState(0x61d2, 0xedad, 0x15a0, 0x7e1b, 0xdf45, 0x5919, 0x0, 0x0);
        gbc.writeMem(0x61d2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xedad);
        EXPECT(gbc.pc(), 0x61d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0294
        gbc.setState(0x25c9, 0x6927, 0xc390, 0xf170, 0xe431, 0x8bdb, 0x0, 0x1);
        gbc.writeMem(0x25c9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6927);
        EXPECT(gbc.pc(), 0x25ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0295
        gbc.setState(0x67e1, 0xde75, 0x2b30, 0x2e23, 0xb67a, 0xddb6, 0x1, 0x0);
        gbc.writeMem(0x67e1, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xde75);
        EXPECT(gbc.pc(), 0x67e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0296
        gbc.setState(0x88df, 0x6c88, 0x1050, 0xe855, 0x91f1, 0x6ca6, 0x0, 0x0);
        gbc.writeMem(0x88df, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6c88);
        EXPECT(gbc.pc(), 0x88e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88df), 0x51);
        // 51 0297
        gbc.setState(0x686e, 0x89e1, 0x1a30, 0xbdc5, 0x55ae, 0x2e1d, 0x0, 0x0);
        gbc.writeMem(0x686e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x89e1);
        EXPECT(gbc.pc(), 0x686f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0298
        gbc.setState(0xca33, 0xf2f7, 0xdbc0, 0xc808, 0xf3ad, 0xd473, 0x0, 0x0);
        gbc.writeMem(0xca33, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf2f7);
        EXPECT(gbc.pc(), 0xca34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca33), 0x51);
        // 51 0299
        gbc.setState(0xba8c, 0x4d37, 0x61e0, 0x44a5, 0x8e56, 0xe762, 0x0, 0x1);
        gbc.writeMem(0xba8c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4d37);
        EXPECT(gbc.pc(), 0xba8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba8c), 0x51);
        // 51 029A
        gbc.setState(0xe28f, 0x9624, 0x5c0, 0x8e91, 0xe53e, 0xec7b, 0x0, 0x1);
        gbc.writeMem(0xe28f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9624);
        EXPECT(gbc.pc(), 0xe290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe28f), 0x51);
        // 51 029B
        gbc.setState(0x53c2, 0x111c, 0x5790, 0x1d8d, 0x72dc, 0xd45c, 0x0, 0x1);
        gbc.writeMem(0x53c2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x111c);
        EXPECT(gbc.pc(), 0x53c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 029C
        gbc.setState(0xad9a, 0xe2e5, 0x21e0, 0xf86c, 0xb26d, 0x4d16, 0x1, 0x0);
        gbc.writeMem(0xad9a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe2e5);
        EXPECT(gbc.pc(), 0xad9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad9a), 0x51);
        // 51 029D
        gbc.setState(0x1f5a, 0x59b9, 0xd040, 0x5b82, 0x388a, 0x92ce, 0x0, 0x1);
        gbc.writeMem(0x1f5a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x59b9);
        EXPECT(gbc.pc(), 0x1f5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 029E
        gbc.setState(0xb209, 0x16d0, 0xb030, 0x4d95, 0xdac4, 0x7d84, 0x1, 0x0);
        gbc.writeMem(0xb209, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x16d0);
        EXPECT(gbc.pc(), 0xb20a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb209), 0x51);
        // 51 029F
        gbc.setState(0xd752, 0xd5a0, 0x9010, 0xcacd, 0xc1ad, 0x9dc9, 0x0, 0x1);
        gbc.writeMem(0xd752, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd5a0);
        EXPECT(gbc.pc(), 0xd753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd752), 0x51);
        // 51 02A0
        gbc.setState(0xac10, 0x94b3, 0x9f90, 0x53c8, 0x754e, 0xe712, 0x1, 0x0);
        gbc.writeMem(0xac10, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x94b3);
        EXPECT(gbc.pc(), 0xac11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac10), 0x51);
        // 51 02A1
        gbc.setState(0xbd2b, 0x70e1, 0xae0, 0xe32b, 0x549b, 0x3c1b, 0x1, 0x0);
        gbc.writeMem(0xbd2b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x70e1);
        EXPECT(gbc.pc(), 0xbd2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd2b), 0x51);
        // 51 02A2
        gbc.setState(0x4c07, 0xdb84, 0xbf90, 0xf885, 0x6761, 0x31e6, 0x1, 0x0);
        gbc.writeMem(0x4c07, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xdb84);
        EXPECT(gbc.pc(), 0x4c08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 02A3
        gbc.setState(0xe50d, 0xece9, 0xf0c0, 0xacbb, 0xae65, 0x1b1f, 0x0, 0x0);
        gbc.writeMem(0xe50d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xece9);
        EXPECT(gbc.pc(), 0xe50e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe50d), 0x51);
        // 51 02A4
        gbc.setState(0xcd97, 0x32e6, 0xcf50, 0xdf7b, 0x4c12, 0x6331, 0x1, 0x1);
        gbc.writeMem(0xcd97, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x32e6);
        EXPECT(gbc.pc(), 0xcd98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd97), 0x51);
        // 51 02A5
        gbc.setState(0xee49, 0xf574, 0x2450, 0x531, 0xe58, 0x6300, 0x1, 0x1);
        gbc.writeMem(0xee49, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf574);
        EXPECT(gbc.pc(), 0xee4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee49), 0x51);
        // 51 02A6
        gbc.setState(0xeba5, 0x73f8, 0x2a10, 0x929a, 0x89be, 0x7de5, 0x0, 0x1);
        gbc.writeMem(0xeba5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x73f8);
        EXPECT(gbc.pc(), 0xeba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeba5), 0x51);
        // 51 02A7
        gbc.setState(0x609c, 0xdc1c, 0x95b0, 0x6aea, 0x78db, 0xcb0e, 0x0, 0x1);
        gbc.writeMem(0x609c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xdc1c);
        EXPECT(gbc.pc(), 0x609d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 02A8
        gbc.setState(0xbba, 0xcaf9, 0xc5f0, 0xbf54, 0x5c71, 0xc5bb, 0x1, 0x0);
        gbc.writeMem(0xbba, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xcaf9);
        EXPECT(gbc.pc(), 0xbbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 02AA
        gbc.setState(0xc759, 0xbbbf, 0x6790, 0x3a3e, 0x8fca, 0x111e, 0x1, 0x1);
        gbc.writeMem(0xc759, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xbbbf);
        EXPECT(gbc.pc(), 0xc75a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc759), 0x51);
        // 51 02AB
        gbc.setState(0x62fe, 0x2a92, 0x15b0, 0x96ed, 0x320a, 0x5bc3, 0x0, 0x1);
        gbc.writeMem(0x62fe, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2a92);
        EXPECT(gbc.pc(), 0x62ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 02AC
        gbc.setState(0x44ea, 0x60db, 0x3e40, 0x5e6a, 0x7c0f, 0x4dd3, 0x1, 0x1);
        gbc.writeMem(0x44ea, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x60db);
        EXPECT(gbc.pc(), 0x44eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 02AD
        gbc.setState(0x1d67, 0x33bb, 0x78d0, 0x3c78, 0x5f84, 0x4e19, 0x1, 0x0);
        gbc.writeMem(0x1d67, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x33bb);
        EXPECT(gbc.pc(), 0x1d68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 02AE
        gbc.setState(0xd93c, 0x606c, 0xfea0, 0xf832, 0xc7c5, 0x24dd, 0x0, 0x1);
        gbc.writeMem(0xd93c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x606c);
        EXPECT(gbc.pc(), 0xd93d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd93c), 0x51);
        // 51 02AF
        gbc.setState(0x5ca0, 0x6fab, 0x4de0, 0x2b4a, 0xbcbe, 0x68a9, 0x1, 0x0);
        gbc.writeMem(0x5ca0, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x6fab);
        EXPECT(gbc.pc(), 0x5ca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 02B0
        gbc.setState(0xe683, 0x3d88, 0x3570, 0xe184, 0xd944, 0x361, 0x0, 0x0);
        gbc.writeMem(0xe683, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3d88);
        EXPECT(gbc.pc(), 0xe684);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe683), 0x51);
        // 51 02B1
        gbc.setState(0x38c1, 0x2940, 0xa4b0, 0x1c5a, 0xa382, 0x5a66, 0x1, 0x0);
        gbc.writeMem(0x38c1, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2940);
        EXPECT(gbc.pc(), 0x38c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 02B2
        gbc.setState(0x8156, 0x5d77, 0xcd80, 0xb019, 0x13ed, 0xae11, 0x0, 0x1);
        gbc.writeMem(0x8156, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5d77);
        EXPECT(gbc.pc(), 0x8157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8156), 0x51);
        // 51 02B3
        gbc.setState(0xd310, 0x6d39, 0x650, 0xfb26, 0x8a26, 0x9763, 0x1, 0x1);
        gbc.writeMem(0xd310, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6d39);
        EXPECT(gbc.pc(), 0xd311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd310), 0x51);
        // 51 02B4
        gbc.setState(0x7c59, 0xdf6, 0xd4b0, 0x4e0, 0x2a71, 0x7dbd, 0x0, 0x0);
        gbc.writeMem(0x7c59, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xdf6);
        EXPECT(gbc.pc(), 0x7c5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 02B5
        gbc.setState(0xc060, 0x5ef2, 0x1a70, 0x1e28, 0xce5e, 0x9e3d, 0x1, 0x0);
        gbc.writeMem(0xc060, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5ef2);
        EXPECT(gbc.pc(), 0xc061);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc060), 0x51);
        // 51 02B6
        gbc.setState(0xbfaf, 0xa276, 0xeb00, 0x1e08, 0xd81a, 0xe3d0, 0x0, 0x1);
        gbc.writeMem(0xbfaf, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa276);
        EXPECT(gbc.pc(), 0xbfb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfaf), 0x51);
        // 51 02B7
        gbc.setState(0x7e49, 0x103b, 0xc810, 0x597b, 0xd49e, 0x4a2, 0x0, 0x1);
        gbc.writeMem(0x7e49, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x103b);
        EXPECT(gbc.pc(), 0x7e4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 02B8
        gbc.setState(0x8142, 0xab6f, 0xf570, 0xbb5b, 0x7cf3, 0xde11, 0x1, 0x0);
        gbc.writeMem(0x8142, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xab6f);
        EXPECT(gbc.pc(), 0x8143);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8142), 0x51);
        // 51 02B9
        gbc.setState(0xa53d, 0x18de, 0xdce0, 0x6d04, 0x8b82, 0x5895, 0x1, 0x0);
        gbc.writeMem(0xa53d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x18de);
        EXPECT(gbc.pc(), 0xa53e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa53d), 0x51);
        // 51 02BA
        gbc.setState(0x797d, 0xe6ad, 0x9290, 0x7e28, 0x20cf, 0x4416, 0x0, 0x1);
        gbc.writeMem(0x797d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe6ad);
        EXPECT(gbc.pc(), 0x797e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 02BB
        gbc.setState(0x59e9, 0x8fd1, 0x55c0, 0x2d0d, 0xc9ab, 0xd1cc, 0x0, 0x1);
        gbc.writeMem(0x59e9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8fd1);
        EXPECT(gbc.pc(), 0x59ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 02BC
        gbc.setState(0x5f85, 0xa543, 0x94d0, 0x4f10, 0x2954, 0xaeb, 0x1, 0x1);
        gbc.writeMem(0x5f85, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa543);
        EXPECT(gbc.pc(), 0x5f86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 02BD
        gbc.setState(0x7203, 0xce86, 0x4be0, 0xb59e, 0x2515, 0x41f7, 0x0, 0x1);
        gbc.writeMem(0x7203, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xce86);
        EXPECT(gbc.pc(), 0x7204);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 02BE
        gbc.setState(0x1fe5, 0xb88b, 0x3930, 0xd0f6, 0xd64c, 0x2da6, 0x1, 0x0);
        gbc.writeMem(0x1fe5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb88b);
        EXPECT(gbc.pc(), 0x1fe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 02BF
        gbc.setState(0xb9e, 0xfd3d, 0xbd20, 0xdaca, 0x3d09, 0xe3a5, 0x0, 0x0);
        gbc.writeMem(0xb9e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xfd3d);
        EXPECT(gbc.pc(), 0xb9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 02C0
        gbc.setState(0x55ea, 0x1580, 0xdf10, 0x3ed0, 0x9f3a, 0x1fdd, 0x0, 0x0);
        gbc.writeMem(0x55ea, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1580);
        EXPECT(gbc.pc(), 0x55eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 02C1
        gbc.setState(0xacc, 0x3da5, 0xf060, 0xc037, 0xf36, 0xc469, 0x1, 0x0);
        gbc.writeMem(0xacc, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3da5);
        EXPECT(gbc.pc(), 0xacd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 02C2
        gbc.setState(0x5fd, 0xc2e6, 0xea70, 0x804a, 0xa1fe, 0xf14e, 0x0, 0x0);
        gbc.writeMem(0x5fd, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc2e6);
        EXPECT(gbc.pc(), 0x5fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 02C3
        gbc.setState(0x2d5a, 0x5731, 0x6a10, 0xfeb6, 0x3f69, 0x42b, 0x1, 0x0);
        gbc.writeMem(0x2d5a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5731);
        EXPECT(gbc.pc(), 0x2d5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 02C4
        gbc.setState(0x7d9a, 0xead, 0x3520, 0x4057, 0xb028, 0xeedf, 0x0, 0x0);
        gbc.writeMem(0x7d9a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xead);
        EXPECT(gbc.pc(), 0x7d9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 02C5
        gbc.setState(0xbb05, 0xf33d, 0xbb50, 0xe7ff, 0xb888, 0x83c8, 0x0, 0x0);
        gbc.writeMem(0xbb05, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf33d);
        EXPECT(gbc.pc(), 0xbb06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb05), 0x51);
        // 51 02C6
        gbc.setState(0x65d0, 0x3302, 0x4270, 0xcbdb, 0x8fcb, 0xe6e6, 0x1, 0x1);
        gbc.writeMem(0x65d0, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3302);
        EXPECT(gbc.pc(), 0x65d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 02C7
        gbc.setState(0xebc1, 0x2850, 0x7850, 0x1154, 0x8425, 0xbdcd, 0x1, 0x1);
        gbc.writeMem(0xebc1, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2850);
        EXPECT(gbc.pc(), 0xebc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebc1), 0x51);
        // 51 02C9
        gbc.setState(0xece6, 0xf468, 0xee00, 0xcd6a, 0xae71, 0x5c26, 0x1, 0x0);
        gbc.writeMem(0xece6, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf468);
        EXPECT(gbc.pc(), 0xece7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xece6), 0x51);
        // 51 02CA
        gbc.setState(0x2670, 0xd41, 0x5ff0, 0xe943, 0xfdf2, 0x25b6, 0x0, 0x1);
        gbc.writeMem(0x2670, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd41);
        EXPECT(gbc.pc(), 0x2671);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 02CB
        gbc.setState(0x2003, 0x53cb, 0xc460, 0x629e, 0xe9d1, 0xd948, 0x1, 0x1);
        gbc.writeMem(0x2003, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x53cb);
        EXPECT(gbc.pc(), 0x2004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 02CC
        gbc.setState(0x151c, 0x484f, 0x1b10, 0xe4fe, 0x471f, 0xe866, 0x0, 0x1);
        gbc.writeMem(0x151c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x484f);
        EXPECT(gbc.pc(), 0x151d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 02CD
        gbc.setState(0xd05c, 0x3edc, 0x330, 0xe576, 0x804a, 0x9a7a, 0x1, 0x1);
        gbc.writeMem(0xd05c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3edc);
        EXPECT(gbc.pc(), 0xd05d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd05c), 0x51);
        // 51 02CE
        gbc.setState(0xa0c8, 0x8f50, 0x14a0, 0x8b9, 0x9d40, 0xc6a9, 0x1, 0x0);
        gbc.writeMem(0xa0c8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x8f50);
        EXPECT(gbc.pc(), 0xa0c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0c8), 0x51);
        // 51 02CF
        gbc.setState(0xaa9b, 0xfd6f, 0x4cb0, 0xd44b, 0xf610, 0xf422, 0x1, 0x1);
        gbc.writeMem(0xaa9b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xfd6f);
        EXPECT(gbc.pc(), 0xaa9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa9b), 0x51);
        // 51 02D0
        gbc.setState(0x8e90, 0x1c86, 0xd0, 0x9f18, 0xb0dd, 0xf09c, 0x0, 0x0);
        gbc.writeMem(0x8e90, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1c86);
        EXPECT(gbc.pc(), 0x8e91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e90), 0x51);
        // 51 02D1
        gbc.setState(0x63dc, 0xe465, 0x33b0, 0xadd0, 0x58b4, 0x1832, 0x1, 0x0);
        gbc.writeMem(0x63dc, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe465);
        EXPECT(gbc.pc(), 0x63dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 02D2
        gbc.setState(0x17b3, 0x561d, 0xce60, 0xbb82, 0x8a09, 0x456a, 0x1, 0x0);
        gbc.writeMem(0x17b3, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x561d);
        EXPECT(gbc.pc(), 0x17b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 02D3
        gbc.setState(0xd6f2, 0xa05d, 0x9400, 0x83b9, 0x9f09, 0xb79b, 0x0, 0x0);
        gbc.writeMem(0xd6f2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa05d);
        EXPECT(gbc.pc(), 0xd6f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6f2), 0x51);
        // 51 02D4
        gbc.setState(0x7474, 0x9694, 0x3150, 0x46fb, 0x34b9, 0x8c12, 0x0, 0x0);
        gbc.writeMem(0x7474, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9694);
        EXPECT(gbc.pc(), 0x7475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 02D5
        gbc.setState(0xae69, 0x3bfe, 0xbe70, 0x27a1, 0xca9b, 0x684a, 0x1, 0x0);
        gbc.writeMem(0xae69, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3bfe);
        EXPECT(gbc.pc(), 0xae6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae69), 0x51);
        // 51 02D6
        gbc.setState(0x9944, 0x8f84, 0x9db0, 0x35a0, 0xbd77, 0x7672, 0x1, 0x1);
        gbc.writeMem(0x9944, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8f84);
        EXPECT(gbc.pc(), 0x9945);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9944), 0x51);
        // 51 02D7
        gbc.setState(0xdbe4, 0xfa19, 0x13b0, 0x71a2, 0x2e0d, 0x23fb, 0x0, 0x1);
        gbc.writeMem(0xdbe4, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xfa19);
        EXPECT(gbc.pc(), 0xdbe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbe4), 0x51);
        // 51 02D8
        gbc.setState(0xed56, 0x1da6, 0x4c00, 0x9b20, 0xc116, 0x3ee8, 0x1, 0x1);
        gbc.writeMem(0xed56, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1da6);
        EXPECT(gbc.pc(), 0xed57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed56), 0x51);
        // 51 02D9
        gbc.setState(0xcb14, 0x28f3, 0x8b50, 0x6107, 0xf7a1, 0x1ba5, 0x1, 0x0);
        gbc.writeMem(0xcb14, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x28f3);
        EXPECT(gbc.pc(), 0xcb15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb14), 0x51);
        // 51 02DB
        gbc.setState(0xaaea, 0xf94f, 0xf80, 0x79b6, 0x78a, 0x846e, 0x1, 0x1);
        gbc.writeMem(0xaaea, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xf94f);
        EXPECT(gbc.pc(), 0xaaeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaea), 0x51);
        // 51 02DC
        gbc.setState(0xea4a, 0x2162, 0x7d40, 0x4aee, 0x1350, 0xd8e6, 0x0, 0x1);
        gbc.writeMem(0xea4a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2162);
        EXPECT(gbc.pc(), 0xea4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea4a), 0x51);
        // 51 02DD
        gbc.setState(0xa95d, 0x989d, 0x430, 0xd2f6, 0x8104, 0xe0d2, 0x1, 0x1);
        gbc.writeMem(0xa95d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x989d);
        EXPECT(gbc.pc(), 0xa95e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa95d), 0x51);
        // 51 02DF
        gbc.setState(0xb345, 0x1f2d, 0x4750, 0x9142, 0xe5bd, 0xb46c, 0x1, 0x1);
        gbc.writeMem(0xb345, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1f2d);
        EXPECT(gbc.pc(), 0xb346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb345), 0x51);
        // 51 02E0
        gbc.setState(0x36fb, 0x78e8, 0xe0e0, 0x3acd, 0xf50e, 0x8ec, 0x1, 0x0);
        gbc.writeMem(0x36fb, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x78e8);
        EXPECT(gbc.pc(), 0x36fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 02E1
        gbc.setState(0x8f01, 0xf6a9, 0x5400, 0x6623, 0x43df, 0x7ae9, 0x1, 0x1);
        gbc.writeMem(0x8f01, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xf6a9);
        EXPECT(gbc.pc(), 0x8f02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f01), 0x51);
        // 51 02E2
        gbc.setState(0x13a0, 0x7b89, 0x7f80, 0xc863, 0xc6bd, 0x6de0, 0x1, 0x0);
        gbc.writeMem(0x13a0, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x7b89);
        EXPECT(gbc.pc(), 0x13a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 02E3
        gbc.setState(0x6675, 0xd683, 0x20c0, 0x32, 0xcedc, 0x4038, 0x1, 0x0);
        gbc.writeMem(0x6675, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xd683);
        EXPECT(gbc.pc(), 0x6676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 02E5
        gbc.setState(0xe68c, 0x8c4c, 0x6fc0, 0x4e9e, 0x2117, 0x8c8b, 0x0, 0x0);
        gbc.writeMem(0xe68c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8c4c);
        EXPECT(gbc.pc(), 0xe68d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe68c), 0x51);
        // 51 02E6
        gbc.setState(0xbff0, 0x5dc9, 0x34b0, 0x62a5, 0xa513, 0xd3bb, 0x0, 0x0);
        gbc.writeMem(0xbff0, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5dc9);
        EXPECT(gbc.pc(), 0xbff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbff0), 0x51);
        // 51 02E7
        gbc.setState(0x412, 0xe100, 0xac00, 0x485f, 0x3928, 0x9f10, 0x0, 0x0);
        gbc.writeMem(0x412, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe100);
        EXPECT(gbc.pc(), 0x413);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 02E8
        gbc.setState(0xa5a1, 0x5441, 0xf730, 0x499c, 0x9d9f, 0x7cbc, 0x0, 0x0);
        gbc.writeMem(0xa5a1, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5441);
        EXPECT(gbc.pc(), 0xa5a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5a1), 0x51);
        // 51 02E9
        gbc.setState(0xc1d8, 0xb4c0, 0x380, 0xe058, 0xfdb1, 0x444c, 0x0, 0x1);
        gbc.writeMem(0xc1d8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb4c0);
        EXPECT(gbc.pc(), 0xc1d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1d8), 0x51);
        // 51 02EA
        gbc.setState(0xe3e5, 0xede7, 0x170, 0xe6f2, 0xb49c, 0x5c7f, 0x0, 0x0);
        gbc.writeMem(0xe3e5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xede7);
        EXPECT(gbc.pc(), 0xe3e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3e5), 0x51);
        // 51 02EB
        gbc.setState(0x4b4e, 0x3d70, 0x6580, 0xdbaa, 0x46e1, 0x9f6c, 0x1, 0x0);
        gbc.writeMem(0x4b4e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3d70);
        EXPECT(gbc.pc(), 0x4b4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 02EC
        gbc.setState(0xe184, 0xb397, 0xab50, 0x75fd, 0xeee4, 0xe336, 0x1, 0x1);
        gbc.writeMem(0xe184, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb397);
        EXPECT(gbc.pc(), 0xe185);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe184), 0x51);
        // 51 02ED
        gbc.setState(0xb5b8, 0xf809, 0x5fc0, 0x439b, 0xd52e, 0x546b, 0x1, 0x1);
        gbc.writeMem(0xb5b8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf809);
        EXPECT(gbc.pc(), 0xb5b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5b8), 0x51);
        // 51 02EE
        gbc.setState(0x8042, 0xefab, 0x7f0, 0x7948, 0x6da7, 0x72c, 0x1, 0x1);
        gbc.writeMem(0x8042, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xefab);
        EXPECT(gbc.pc(), 0x8043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8042), 0x51);
        // 51 02EF
        gbc.setState(0x1f13, 0xbb, 0x38f0, 0x3a36, 0xdba7, 0x7a02, 0x1, 0x0);
        gbc.writeMem(0x1f13, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xbb);
        EXPECT(gbc.pc(), 0x1f14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 02F0
        gbc.setState(0x4cf2, 0x93ff, 0xecb0, 0xd2c0, 0x39c, 0x8b2f, 0x0, 0x0);
        gbc.writeMem(0x4cf2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x93ff);
        EXPECT(gbc.pc(), 0x4cf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 02F1
        gbc.setState(0x29f7, 0x58ed, 0x7a40, 0x301c, 0x4333, 0x65bb, 0x1, 0x1);
        gbc.writeMem(0x29f7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x58ed);
        EXPECT(gbc.pc(), 0x29f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 02F2
        gbc.setState(0xb471, 0xd768, 0xdd0, 0x35dd, 0x33f2, 0xa3db, 0x1, 0x0);
        gbc.writeMem(0xb471, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd768);
        EXPECT(gbc.pc(), 0xb472);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb471), 0x51);
        // 51 02F3
        gbc.setState(0xe10, 0x7951, 0x4c40, 0x899f, 0xa5f, 0x80d2, 0x0, 0x0);
        gbc.writeMem(0xe10, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7951);
        EXPECT(gbc.pc(), 0xe11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 02F4
        gbc.setState(0xd2de, 0x601c, 0xd870, 0x5706, 0xb3a7, 0xb974, 0x0, 0x1);
        gbc.writeMem(0xd2de, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x601c);
        EXPECT(gbc.pc(), 0xd2df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2de), 0x51);
        // 51 02F5
        gbc.setState(0x5cde, 0x7565, 0x98a0, 0x70c, 0x9341, 0x27b, 0x0, 0x1);
        gbc.writeMem(0x5cde, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7565);
        EXPECT(gbc.pc(), 0x5cdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 02F6
        gbc.setState(0x8e78, 0x7a09, 0x7da0, 0xae23, 0x47b3, 0x9b3d, 0x0, 0x1);
        gbc.writeMem(0x8e78, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x7a09);
        EXPECT(gbc.pc(), 0x8e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e78), 0x51);
        // 51 02F7
        gbc.setState(0xd154, 0x8222, 0x6570, 0x305, 0xabcb, 0xf77c, 0x1, 0x1);
        gbc.writeMem(0xd154, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8222);
        EXPECT(gbc.pc(), 0xd155);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd154), 0x51);
        // 51 02F8
        gbc.setState(0xaa22, 0x293b, 0xaa60, 0x6a7e, 0x52b7, 0xd955, 0x1, 0x1);
        gbc.writeMem(0xaa22, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x293b);
        EXPECT(gbc.pc(), 0xaa23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa22), 0x51);
        // 51 02F9
        gbc.setState(0x7f6c, 0x392f, 0xfb00, 0xb581, 0xfad5, 0x6e42, 0x1, 0x1);
        gbc.writeMem(0x7f6c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x392f);
        EXPECT(gbc.pc(), 0x7f6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 02FB
        gbc.setState(0x8eac, 0x5c8, 0x9250, 0x8d3a, 0xb9f8, 0x5003, 0x1, 0x0);
        gbc.writeMem(0x8eac, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5c8);
        EXPECT(gbc.pc(), 0x8ead);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eac), 0x51);
        // 51 02FC
        gbc.setState(0xa0c8, 0xe633, 0xe6c0, 0x5c8, 0x5bb3, 0x9cc9, 0x1, 0x0);
        gbc.writeMem(0xa0c8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe633);
        EXPECT(gbc.pc(), 0xa0c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0c8), 0x51);
        // 51 02FD
        gbc.setState(0x368c, 0xccff, 0x43a0, 0xa15b, 0x119d, 0x11f1, 0x0, 0x0);
        gbc.writeMem(0x368c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xccff);
        EXPECT(gbc.pc(), 0x368d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 02FE
        gbc.setState(0xbc03, 0x600d, 0x9550, 0xcab6, 0xa618, 0x2073, 0x1, 0x1);
        gbc.writeMem(0xbc03, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x600d);
        EXPECT(gbc.pc(), 0xbc04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc03), 0x51);
        // 51 02FF
        gbc.setState(0x55f8, 0x7d8a, 0x30e0, 0xd06d, 0x745e, 0xfdf1, 0x0, 0x0);
        gbc.writeMem(0x55f8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x7d8a);
        EXPECT(gbc.pc(), 0x55f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0300
        gbc.setState(0x943b, 0xc767, 0x93f0, 0x63bb, 0x1fbe, 0xaecb, 0x1, 0x1);
        gbc.writeMem(0x943b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xc767);
        EXPECT(gbc.pc(), 0x943c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x943b), 0x51);
        // 51 0301
        gbc.setState(0xa8e6, 0xde43, 0x8090, 0xe663, 0x3dc8, 0x832d, 0x1, 0x0);
        gbc.writeMem(0xa8e6, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xde43);
        EXPECT(gbc.pc(), 0xa8e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8e6), 0x51);
        // 51 0302
        gbc.setState(0xbcc7, 0xe224, 0xada0, 0xa8ac, 0x10aa, 0x4b14, 0x0, 0x1);
        gbc.writeMem(0xbcc7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe224);
        EXPECT(gbc.pc(), 0xbcc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcc7), 0x51);
        // 51 0303
        gbc.setState(0xc2cb, 0x554c, 0x4690, 0x73fc, 0xc910, 0x24fc, 0x1, 0x1);
        gbc.writeMem(0xc2cb, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x554c);
        EXPECT(gbc.pc(), 0xc2cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2cb), 0x51);
        // 51 0304
        gbc.setState(0x358b, 0xdb3c, 0x84c0, 0x6b5f, 0x6475, 0xf3c1, 0x0, 0x1);
        gbc.writeMem(0x358b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xdb3c);
        EXPECT(gbc.pc(), 0x358c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0305
        gbc.setState(0x6faa, 0xcd45, 0xbf90, 0x76d9, 0x2d0f, 0x5237, 0x0, 0x0);
        gbc.writeMem(0x6faa, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xcd45);
        EXPECT(gbc.pc(), 0x6fab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0306
        gbc.setState(0x2737, 0xa9bc, 0x9dd0, 0xf96b, 0x6a6a, 0x2c83, 0x1, 0x1);
        gbc.writeMem(0x2737, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xa9bc);
        EXPECT(gbc.pc(), 0x2738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0307
        gbc.setState(0x1b8f, 0xadb2, 0x4810, 0xbd19, 0xfe97, 0xecaf, 0x1, 0x0);
        gbc.writeMem(0x1b8f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xadb2);
        EXPECT(gbc.pc(), 0x1b90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0308
        gbc.setState(0x9504, 0x1d57, 0x5e30, 0x3952, 0x1960, 0xbc84, 0x1, 0x0);
        gbc.writeMem(0x9504, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1d57);
        EXPECT(gbc.pc(), 0x9505);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9504), 0x51);
        // 51 0309
        gbc.setState(0xf43, 0xa3bb, 0xdc90, 0xe2fc, 0x5f8e, 0x1982, 0x1, 0x0);
        gbc.writeMem(0xf43, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa3bb);
        EXPECT(gbc.pc(), 0xf44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 030A
        gbc.setState(0x1477, 0x8d56, 0xc160, 0x7fc2, 0x59f, 0x20d2, 0x1, 0x1);
        gbc.writeMem(0x1477, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8d56);
        EXPECT(gbc.pc(), 0x1478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 030B
        gbc.setState(0x284d, 0xe322, 0x53b0, 0xb866, 0x9f84, 0xe126, 0x1, 0x1);
        gbc.writeMem(0x284d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe322);
        EXPECT(gbc.pc(), 0x284e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 030C
        gbc.setState(0xa555, 0x633, 0xf5b0, 0xd92b, 0x5e25, 0x9cf7, 0x0, 0x1);
        gbc.writeMem(0xa555, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x633);
        EXPECT(gbc.pc(), 0xa556);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa555), 0x51);
        // 51 030D
        gbc.setState(0x1fc9, 0x9370, 0x1a50, 0x76e8, 0xda3a, 0xe2f, 0x1, 0x0);
        gbc.writeMem(0x1fc9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9370);
        EXPECT(gbc.pc(), 0x1fca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 030E
        gbc.setState(0x1fd0, 0xaf14, 0x5560, 0x56c8, 0xedb8, 0xc305, 0x1, 0x0);
        gbc.writeMem(0x1fd0, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xaf14);
        EXPECT(gbc.pc(), 0x1fd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 030F
        gbc.setState(0xe189, 0x674d, 0xc600, 0x4f2a, 0x5435, 0xcee9, 0x1, 0x0);
        gbc.writeMem(0xe189, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x674d);
        EXPECT(gbc.pc(), 0xe18a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe189), 0x51);
        // 51 0310
        gbc.setState(0xdda2, 0xf98d, 0x2460, 0xf2c0, 0xb381, 0x5e75, 0x0, 0x0);
        gbc.writeMem(0xdda2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf98d);
        EXPECT(gbc.pc(), 0xdda3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdda2), 0x51);
        // 51 0311
        gbc.setState(0xb822, 0x337e, 0x68f0, 0x6129, 0x36a8, 0x2f0, 0x0, 0x1);
        gbc.writeMem(0xb822, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x337e);
        EXPECT(gbc.pc(), 0xb823);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb822), 0x51);
        // 51 0312
        gbc.setState(0x6c09, 0xf459, 0xe540, 0x554f, 0x634e, 0x3abf, 0x1, 0x1);
        gbc.writeMem(0x6c09, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf459);
        EXPECT(gbc.pc(), 0x6c0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0313
        gbc.setState(0x7da5, 0x4377, 0x7ee0, 0xfdce, 0xda3a, 0xaf21, 0x0, 0x0);
        gbc.writeMem(0x7da5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4377);
        EXPECT(gbc.pc(), 0x7da6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0314
        gbc.setState(0x477b, 0xe42c, 0x78d0, 0x9e7f, 0xc3a1, 0xe55, 0x1, 0x1);
        gbc.writeMem(0x477b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe42c);
        EXPECT(gbc.pc(), 0x477c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0315
        gbc.setState(0x7ba4, 0xe4a0, 0x46a0, 0x7089, 0xd0dc, 0xfb6, 0x1, 0x0);
        gbc.writeMem(0x7ba4, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe4a0);
        EXPECT(gbc.pc(), 0x7ba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0316
        gbc.setState(0x8d8e, 0x231c, 0xa190, 0x28ac, 0xe4ba, 0x1f7b, 0x1, 0x1);
        gbc.writeMem(0x8d8e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x231c);
        EXPECT(gbc.pc(), 0x8d8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d8e), 0x51);
        // 51 0317
        gbc.setState(0x4699, 0x39ad, 0x9d90, 0x4f2a, 0xd668, 0xe3d7, 0x0, 0x0);
        gbc.writeMem(0x4699, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x39ad);
        EXPECT(gbc.pc(), 0x469a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0318
        gbc.setState(0xdbf2, 0x5a96, 0x980, 0x378e, 0x2bdd, 0x9d7d, 0x0, 0x0);
        gbc.writeMem(0xdbf2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5a96);
        EXPECT(gbc.pc(), 0xdbf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbf2), 0x51);
        // 51 0319
        gbc.setState(0x3f19, 0x9503, 0x3a20, 0xa2b8, 0xa854, 0xb778, 0x1, 0x0);
        gbc.writeMem(0x3f19, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9503);
        EXPECT(gbc.pc(), 0x3f1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 031A
        gbc.setState(0x80ea, 0xdcd, 0xe4a0, 0x551c, 0xee20, 0x4353, 0x1, 0x1);
        gbc.writeMem(0x80ea, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xdcd);
        EXPECT(gbc.pc(), 0x80eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ea), 0x51);
        // 51 031B
        gbc.setState(0xd759, 0x6300, 0xb840, 0xe183, 0xf4d8, 0x4aed, 0x1, 0x1);
        gbc.writeMem(0xd759, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6300);
        EXPECT(gbc.pc(), 0xd75a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd759), 0x51);
        // 51 031C
        gbc.setState(0x9d77, 0x75c6, 0x84d0, 0x8465, 0x5edf, 0xc40b, 0x1, 0x1);
        gbc.writeMem(0x9d77, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x75c6);
        EXPECT(gbc.pc(), 0x9d78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d77), 0x51);
        // 51 031D
        gbc.setState(0xbde0, 0x452, 0x59f0, 0x62ca, 0x2c9d, 0x21f0, 0x0, 0x0);
        gbc.writeMem(0xbde0, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x452);
        EXPECT(gbc.pc(), 0xbde1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbde0), 0x51);
        // 51 031E
        gbc.setState(0x256, 0x5067, 0x490, 0xaa0f, 0x5c28, 0xa68a, 0x1, 0x1);
        gbc.writeMem(0x256, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5067);
        EXPECT(gbc.pc(), 0x257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 031F
        gbc.setState(0x445, 0x3be4, 0x3990, 0x15cf, 0x9e0e, 0x46ca, 0x0, 0x0);
        gbc.writeMem(0x445, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3be4);
        EXPECT(gbc.pc(), 0x446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0320
        gbc.setState(0x92e5, 0x8df9, 0xd430, 0xa085, 0xc20c, 0xaed4, 0x1, 0x1);
        gbc.writeMem(0x92e5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8df9);
        EXPECT(gbc.pc(), 0x92e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92e5), 0x51);
        // 51 0321
        gbc.setState(0xeb27, 0x70fd, 0x24c0, 0x5585, 0xf13f, 0xd345, 0x1, 0x1);
        gbc.writeMem(0xeb27, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x70fd);
        EXPECT(gbc.pc(), 0xeb28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb27), 0x51);
        // 51 0322
        gbc.setState(0x5145, 0x85ec, 0x61d0, 0xb4a6, 0x177, 0xc167, 0x1, 0x1);
        gbc.writeMem(0x5145, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x85ec);
        EXPECT(gbc.pc(), 0x5146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0323
        gbc.setState(0x3eff, 0x136, 0x8570, 0xb03a, 0x1c38, 0x8d64, 0x1, 0x1);
        gbc.writeMem(0x3eff, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x136);
        EXPECT(gbc.pc(), 0x3f00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0324
        gbc.setState(0x44f9, 0x20d3, 0xe400, 0x5553, 0xe679, 0xb5f, 0x0, 0x0);
        gbc.writeMem(0x44f9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x20d3);
        EXPECT(gbc.pc(), 0x44fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0325
        gbc.setState(0xedf9, 0x5976, 0xefe0, 0xf171, 0x29ec, 0x5ca, 0x0, 0x0);
        gbc.writeMem(0xedf9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5976);
        EXPECT(gbc.pc(), 0xedfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedf9), 0x51);
        // 51 0326
        gbc.setState(0xb54e, 0x713e, 0x8b30, 0x6738, 0x1b6c, 0xb499, 0x0, 0x1);
        gbc.writeMem(0xb54e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x713e);
        EXPECT(gbc.pc(), 0xb54f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb54e), 0x51);
        // 51 0327
        gbc.setState(0x2bca, 0xcccc, 0xbe10, 0x4e7c, 0xbec4, 0x74ab, 0x1, 0x0);
        gbc.writeMem(0x2bca, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xcccc);
        EXPECT(gbc.pc(), 0x2bcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0328
        gbc.setState(0x3fd5, 0xd43, 0x50a0, 0x354d, 0xae19, 0x30ab, 0x1, 0x1);
        gbc.writeMem(0x3fd5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd43);
        EXPECT(gbc.pc(), 0x3fd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0329
        gbc.setState(0x7d8c, 0x19b0, 0x2280, 0xf6f9, 0xbacd, 0x2dee, 0x0, 0x1);
        gbc.writeMem(0x7d8c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x19b0);
        EXPECT(gbc.pc(), 0x7d8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 032A
        gbc.setState(0x8861, 0x62b7, 0x9b00, 0x6ebe, 0xc4cc, 0x1d46, 0x0, 0x0);
        gbc.writeMem(0x8861, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x62b7);
        EXPECT(gbc.pc(), 0x8862);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8861), 0x51);
        // 51 032B
        gbc.setState(0x550d, 0x988f, 0x2b60, 0xd2af, 0xfcaf, 0x5bd7, 0x0, 0x0);
        gbc.writeMem(0x550d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x988f);
        EXPECT(gbc.pc(), 0x550e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 032C
        gbc.setState(0xb2ec, 0x7da2, 0x9190, 0xd674, 0xdcf9, 0x4075, 0x0, 0x0);
        gbc.writeMem(0xb2ec, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x7da2);
        EXPECT(gbc.pc(), 0xb2ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ec), 0x51);
        // 51 032D
        gbc.setState(0xc3dc, 0xae01, 0x5e40, 0x8185, 0x3fd8, 0xf0d8, 0x0, 0x1);
        gbc.writeMem(0xc3dc, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xae01);
        EXPECT(gbc.pc(), 0xc3dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3dc), 0x51);
        // 51 032E
        gbc.setState(0x3344, 0x67f3, 0x8300, 0x61c2, 0x1eef, 0xfc0, 0x0, 0x1);
        gbc.writeMem(0x3344, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x67f3);
        EXPECT(gbc.pc(), 0x3345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 032F
        gbc.setState(0x7416, 0x9aac, 0xb340, 0xaca6, 0x9cb1, 0xf757, 0x0, 0x0);
        gbc.writeMem(0x7416, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9aac);
        EXPECT(gbc.pc(), 0x7417);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0330
        gbc.setState(0xc930, 0xab19, 0x43e0, 0xeebd, 0xb463, 0x2bce, 0x1, 0x1);
        gbc.writeMem(0xc930, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xab19);
        EXPECT(gbc.pc(), 0xc931);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc930), 0x51);
        // 51 0331
        gbc.setState(0xc0d1, 0x7487, 0xc880, 0x5480, 0xa3c2, 0x8c30, 0x1, 0x0);
        gbc.writeMem(0xc0d1, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x7487);
        EXPECT(gbc.pc(), 0xc0d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0d1), 0x51);
        // 51 0332
        gbc.setState(0x1859, 0xcf8d, 0x7900, 0x883a, 0x8865, 0x10b0, 0x0, 0x0);
        gbc.writeMem(0x1859, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xcf8d);
        EXPECT(gbc.pc(), 0x185a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0333
        gbc.setState(0xc5fe, 0x65ee, 0xf5d0, 0x3f33, 0x9287, 0xf59b, 0x0, 0x0);
        gbc.writeMem(0xc5fe, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x65ee);
        EXPECT(gbc.pc(), 0xc5ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5fe), 0x51);
        // 51 0334
        gbc.setState(0xa73d, 0x7cb2, 0xe990, 0x5ee0, 0x8300, 0xde24, 0x1, 0x1);
        gbc.writeMem(0xa73d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7cb2);
        EXPECT(gbc.pc(), 0xa73e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa73d), 0x51);
        // 51 0335
        gbc.setState(0xa877, 0xb9ba, 0xcd10, 0x6f29, 0xad5e, 0x5502, 0x1, 0x0);
        gbc.writeMem(0xa877, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb9ba);
        EXPECT(gbc.pc(), 0xa878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa877), 0x51);
        // 51 0336
        gbc.setState(0x8f8f, 0x4ce5, 0x9260, 0xf261, 0x707e, 0x9f79, 0x1, 0x1);
        gbc.writeMem(0x8f8f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4ce5);
        EXPECT(gbc.pc(), 0x8f90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f8f), 0x51);
        // 51 0337
        gbc.setState(0x4f62, 0x7c8f, 0xdcc0, 0x6f87, 0x983a, 0x1e82, 0x0, 0x0);
        gbc.writeMem(0x4f62, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7c8f);
        EXPECT(gbc.pc(), 0x4f63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0338
        gbc.setState(0x42df, 0xab7b, 0xd3e0, 0x2ff8, 0x94fa, 0x1ce6, 0x0, 0x1);
        gbc.writeMem(0x42df, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xab7b);
        EXPECT(gbc.pc(), 0x42e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0339
        gbc.setState(0x52fc, 0xa0d8, 0xb770, 0x9603, 0x4a5b, 0x2341, 0x0, 0x1);
        gbc.writeMem(0x52fc, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa0d8);
        EXPECT(gbc.pc(), 0x52fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 033A
        gbc.setState(0xc658, 0x4c1a, 0x3b10, 0x6bfb, 0x37dc, 0xd2c5, 0x1, 0x0);
        gbc.writeMem(0xc658, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4c1a);
        EXPECT(gbc.pc(), 0xc659);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc658), 0x51);
        // 51 033B
        gbc.setState(0xa29e, 0xe4b, 0x4aa0, 0xd5f7, 0xa3e6, 0x7b83, 0x1, 0x0);
        gbc.writeMem(0xa29e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe4b);
        EXPECT(gbc.pc(), 0xa29f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa29e), 0x51);
        // 51 033C
        gbc.setState(0xefba, 0xe436, 0x6030, 0x26e9, 0x2ee0, 0xe71f, 0x1, 0x0);
        gbc.writeMem(0xefba, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe436);
        EXPECT(gbc.pc(), 0xefbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefba), 0x51);
        // 51 033D
        gbc.setState(0x7621, 0x6c83, 0x5ad0, 0x4e62, 0x30ab, 0x6bf0, 0x0, 0x1);
        gbc.writeMem(0x7621, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6c83);
        EXPECT(gbc.pc(), 0x7622);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 033E
        gbc.setState(0x1f50, 0xee7, 0xb2e0, 0x8e70, 0x4341, 0xfcb3, 0x1, 0x1);
        gbc.writeMem(0x1f50, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xee7);
        EXPECT(gbc.pc(), 0x1f51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 033F
        gbc.setState(0x8092, 0xee, 0xd370, 0x1ea, 0xda86, 0xfbd, 0x0, 0x0);
        gbc.writeMem(0x8092, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xee);
        EXPECT(gbc.pc(), 0x8093);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8092), 0x51);
        // 51 0340
        gbc.setState(0x66e7, 0xd574, 0x3ba0, 0x4a03, 0xa398, 0x9943, 0x1, 0x1);
        gbc.writeMem(0x66e7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd574);
        EXPECT(gbc.pc(), 0x66e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0341
        gbc.setState(0x4ad4, 0xe6c9, 0xe810, 0xe966, 0xa92e, 0x93b3, 0x0, 0x1);
        gbc.writeMem(0x4ad4, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe6c9);
        EXPECT(gbc.pc(), 0x4ad5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0342
        gbc.setState(0x8375, 0x7733, 0xa9d0, 0xd3aa, 0x8543, 0x3882, 0x1, 0x1);
        gbc.writeMem(0x8375, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7733);
        EXPECT(gbc.pc(), 0x8376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8375), 0x51);
        // 51 0343
        gbc.setState(0x173a, 0xc0e4, 0x7900, 0xcccc, 0x8dbc, 0xef50, 0x0, 0x1);
        gbc.writeMem(0x173a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc0e4);
        EXPECT(gbc.pc(), 0x173b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0344
        gbc.setState(0xaecc, 0x1bce, 0x81f0, 0xa098, 0x8d91, 0x519c, 0x0, 0x0);
        gbc.writeMem(0xaecc, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1bce);
        EXPECT(gbc.pc(), 0xaecd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaecc), 0x51);
        // 51 0345
        gbc.setState(0xba31, 0x5dfb, 0x9070, 0x873b, 0x4a77, 0xd10f, 0x1, 0x0);
        gbc.writeMem(0xba31, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x5dfb);
        EXPECT(gbc.pc(), 0xba32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba31), 0x51);
        // 51 0346
        gbc.setState(0xa5df, 0x6ca0, 0x43e0, 0xc54f, 0xba99, 0x32f5, 0x1, 0x0);
        gbc.writeMem(0xa5df, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6ca0);
        EXPECT(gbc.pc(), 0xa5e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5df), 0x51);
        // 51 0347
        gbc.setState(0x85eb, 0xec86, 0xbef0, 0xef94, 0x583, 0x7045, 0x0, 0x1);
        gbc.writeMem(0x85eb, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xec86);
        EXPECT(gbc.pc(), 0x85ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85eb), 0x51);
        // 51 0348
        gbc.setState(0x9c0a, 0x1702, 0x35e0, 0x9973, 0xf84a, 0x382a, 0x0, 0x0);
        gbc.writeMem(0x9c0a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1702);
        EXPECT(gbc.pc(), 0x9c0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c0a), 0x51);
        // 51 0349
        gbc.setState(0xcb81, 0x8f07, 0xf40, 0x7a25, 0x378c, 0x1057, 0x1, 0x0);
        gbc.writeMem(0xcb81, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8f07);
        EXPECT(gbc.pc(), 0xcb82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb81), 0x51);
        // 51 034A
        gbc.setState(0xec88, 0x74ee, 0x7b90, 0xf194, 0x3d48, 0x5031, 0x0, 0x1);
        gbc.writeMem(0xec88, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x74ee);
        EXPECT(gbc.pc(), 0xec89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec88), 0x51);
        // 51 034B
        gbc.setState(0xa42a, 0x5aab, 0x1c80, 0x4b4e, 0x1d64, 0xc075, 0x1, 0x0);
        gbc.writeMem(0xa42a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x5aab);
        EXPECT(gbc.pc(), 0xa42b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa42a), 0x51);
        // 51 034C
        gbc.setState(0x513b, 0x2e2d, 0x3600, 0x3e35, 0x6e73, 0x34b3, 0x0, 0x0);
        gbc.writeMem(0x513b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2e2d);
        EXPECT(gbc.pc(), 0x513c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 034D
        gbc.setState(0x76da, 0x966d, 0x6480, 0xbb46, 0x440b, 0x5e36, 0x0, 0x0);
        gbc.writeMem(0x76da, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x966d);
        EXPECT(gbc.pc(), 0x76db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 034F
        gbc.setState(0xbe50, 0xc14b, 0x9cd0, 0xd01f, 0x488b, 0x3496, 0x0, 0x0);
        gbc.writeMem(0xbe50, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc14b);
        EXPECT(gbc.pc(), 0xbe51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe50), 0x51);
        // 51 0350
        gbc.setState(0x1fa6, 0x8c55, 0xea00, 0x9b64, 0x7423, 0x5f95, 0x0, 0x1);
        gbc.writeMem(0x1fa6, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8c55);
        EXPECT(gbc.pc(), 0x1fa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0351
        gbc.setState(0x6281, 0x4483, 0x4be0, 0x317e, 0x8085, 0xa2db, 0x1, 0x1);
        gbc.writeMem(0x6281, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4483);
        EXPECT(gbc.pc(), 0x6282);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0352
        gbc.setState(0xb1ff, 0x14d6, 0x1020, 0x1698, 0x5afd, 0x3653, 0x0, 0x1);
        gbc.writeMem(0xb1ff, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x14d6);
        EXPECT(gbc.pc(), 0xb200);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1ff), 0x51);
        // 51 0353
        gbc.setState(0x6351, 0xd7f3, 0xe40, 0xae87, 0xb1e, 0xf651, 0x0, 0x1);
        gbc.writeMem(0x6351, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd7f3);
        EXPECT(gbc.pc(), 0x6352);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0354
        gbc.setState(0x92e7, 0x3881, 0xa1c0, 0x2d5c, 0xd3f9, 0x640a, 0x1, 0x0);
        gbc.writeMem(0x92e7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3881);
        EXPECT(gbc.pc(), 0x92e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e7), 0x51);
        // 51 0355
        gbc.setState(0x539b, 0x94e7, 0x6820, 0xc5cb, 0xbf84, 0xe408, 0x1, 0x1);
        gbc.writeMem(0x539b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x94e7);
        EXPECT(gbc.pc(), 0x539c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0356
        gbc.setState(0x3ef4, 0x4070, 0x9670, 0xa5f3, 0x7fa0, 0x83df, 0x0, 0x0);
        gbc.writeMem(0x3ef4, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x4070);
        EXPECT(gbc.pc(), 0x3ef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0357
        gbc.setState(0x62e4, 0xe3ca, 0x9bc0, 0x82c9, 0x52e1, 0x9768, 0x0, 0x1);
        gbc.writeMem(0x62e4, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe3ca);
        EXPECT(gbc.pc(), 0x62e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0358
        gbc.setState(0x6b00, 0x1ff9, 0x2470, 0x2115, 0x4141, 0x3e2f, 0x0, 0x0);
        gbc.writeMem(0x6b00, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x1ff9);
        EXPECT(gbc.pc(), 0x6b01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0359
        gbc.setState(0xdcb5, 0x70ed, 0x22e0, 0x66e6, 0x36d9, 0x4806, 0x1, 0x1);
        gbc.writeMem(0xdcb5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x70ed);
        EXPECT(gbc.pc(), 0xdcb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcb5), 0x51);
        // 51 035A
        gbc.setState(0xcad3, 0xbf65, 0x4210, 0xa9a4, 0xb3ac, 0x4c4e, 0x1, 0x0);
        gbc.writeMem(0xcad3, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xbf65);
        EXPECT(gbc.pc(), 0xcad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcad3), 0x51);
        // 51 035B
        gbc.setState(0xbebe, 0xb785, 0x75c0, 0xbeba, 0xded5, 0x363c, 0x0, 0x0);
        gbc.writeMem(0xbebe, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb785);
        EXPECT(gbc.pc(), 0xbebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbebe), 0x51);
        // 51 035C
        gbc.setState(0xc92b, 0x2e54, 0x4b70, 0x1883, 0xd350, 0xf3fc, 0x1, 0x0);
        gbc.writeMem(0xc92b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2e54);
        EXPECT(gbc.pc(), 0xc92c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc92b), 0x51);
        // 51 035D
        gbc.setState(0xb9d6, 0x4999, 0x9640, 0x93a, 0x68aa, 0xdf73, 0x1, 0x1);
        gbc.writeMem(0xb9d6, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4999);
        EXPECT(gbc.pc(), 0xb9d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9d6), 0x51);
        // 51 035E
        gbc.setState(0x1f2a, 0x84d6, 0xfef0, 0x8e8b, 0x4fee, 0xf5bb, 0x0, 0x0);
        gbc.writeMem(0x1f2a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x84d6);
        EXPECT(gbc.pc(), 0x1f2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 035F
        gbc.setState(0xe1d7, 0xd137, 0xae00, 0xfba1, 0xed11, 0x1b6d, 0x1, 0x1);
        gbc.writeMem(0xe1d7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xd137);
        EXPECT(gbc.pc(), 0xe1d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1d7), 0x51);
        // 51 0361
        gbc.setState(0x2775, 0xb8e, 0x3af0, 0x5d9e, 0x2d24, 0x511f, 0x0, 0x0);
        gbc.writeMem(0x2775, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb8e);
        EXPECT(gbc.pc(), 0x2776);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0362
        gbc.setState(0xa3b3, 0xce1a, 0x7fa0, 0x1fd, 0xd132, 0x81c5, 0x0, 0x0);
        gbc.writeMem(0xa3b3, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xce1a);
        EXPECT(gbc.pc(), 0xa3b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3b3), 0x51);
        // 51 0363
        gbc.setState(0xa414, 0xb754, 0xb6a0, 0x3939, 0x64e1, 0x1c56, 0x1, 0x1);
        gbc.writeMem(0xa414, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb754);
        EXPECT(gbc.pc(), 0xa415);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa414), 0x51);
        // 51 0364
        gbc.setState(0x6eb5, 0x5a26, 0xaf00, 0x7889, 0x7723, 0x39e0, 0x0, 0x1);
        gbc.writeMem(0x6eb5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5a26);
        EXPECT(gbc.pc(), 0x6eb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0365
        gbc.setState(0x6986, 0x9ba0, 0xfcf0, 0x7f6a, 0x4198, 0x187d, 0x0, 0x0);
        gbc.writeMem(0x6986, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9ba0);
        EXPECT(gbc.pc(), 0x6987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0366
        gbc.setState(0xc8bd, 0xaa52, 0xd2e0, 0x21d5, 0x517a, 0x9546, 0x1, 0x0);
        gbc.writeMem(0xc8bd, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xaa52);
        EXPECT(gbc.pc(), 0xc8be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8bd), 0x51);
        // 51 0367
        gbc.setState(0x1632, 0x2139, 0x1140, 0xd77f, 0xc612, 0xf08d, 0x0, 0x1);
        gbc.writeMem(0x1632, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2139);
        EXPECT(gbc.pc(), 0x1633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0368
        gbc.setState(0x7040, 0x9a0f, 0xa060, 0xcfec, 0xb22e, 0xb3f1, 0x1, 0x0);
        gbc.writeMem(0x7040, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9a0f);
        EXPECT(gbc.pc(), 0x7041);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0369
        gbc.setState(0xd6ce, 0xe213, 0x4db0, 0xf80b, 0xf955, 0xcf66, 0x1, 0x0);
        gbc.writeMem(0xd6ce, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe213);
        EXPECT(gbc.pc(), 0xd6cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6ce), 0x51);
        // 51 036A
        gbc.setState(0x8df1, 0x5201, 0xbe50, 0x9cb0, 0x1d06, 0x1eba, 0x0, 0x1);
        gbc.writeMem(0x8df1, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5201);
        EXPECT(gbc.pc(), 0x8df2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8df1), 0x51);
        // 51 036B
        gbc.setState(0xdb88, 0x379d, 0xd5e0, 0xf4f4, 0x4fe7, 0xb9c0, 0x1, 0x1);
        gbc.writeMem(0xdb88, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x379d);
        EXPECT(gbc.pc(), 0xdb89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb88), 0x51);
        // 51 036C
        gbc.setState(0x50d4, 0x4d76, 0x2410, 0xae02, 0xf0e6, 0x36df, 0x1, 0x0);
        gbc.writeMem(0x50d4, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x4d76);
        EXPECT(gbc.pc(), 0x50d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 036D
        gbc.setState(0xeb67, 0x355f, 0x56b0, 0x3b10, 0x524e, 0xd65f, 0x1, 0x1);
        gbc.writeMem(0xeb67, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x355f);
        EXPECT(gbc.pc(), 0xeb68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb67), 0x51);
        // 51 036E
        gbc.setState(0xca99, 0x97df, 0xda00, 0xcd2c, 0xb80c, 0xec70, 0x0, 0x0);
        gbc.writeMem(0xca99, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x97df);
        EXPECT(gbc.pc(), 0xca9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca99), 0x51);
        // 51 036F
        gbc.setState(0x9b19, 0x8c99, 0xe20, 0x1074, 0x1e6f, 0x82b5, 0x1, 0x1);
        gbc.writeMem(0x9b19, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8c99);
        EXPECT(gbc.pc(), 0x9b1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b19), 0x51);
        // 51 0370
        gbc.setState(0x85e9, 0xb7d5, 0x5520, 0x418b, 0x360d, 0xcf9b, 0x1, 0x1);
        gbc.writeMem(0x85e9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb7d5);
        EXPECT(gbc.pc(), 0x85ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85e9), 0x51);
        // 51 0371
        gbc.setState(0xde0a, 0xc2f3, 0xad60, 0x58db, 0x3753, 0x3439, 0x0, 0x1);
        gbc.writeMem(0xde0a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xc2f3);
        EXPECT(gbc.pc(), 0xde0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde0a), 0x51);
        // 51 0372
        gbc.setState(0x909f, 0x5ce3, 0xe400, 0xb730, 0xb298, 0xb254, 0x1, 0x1);
        gbc.writeMem(0x909f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5ce3);
        EXPECT(gbc.pc(), 0x90a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x909f), 0x51);
        // 51 0373
        gbc.setState(0x3ad, 0xdbe, 0x3770, 0xea54, 0x8a01, 0xa54a, 0x1, 0x1);
        gbc.writeMem(0x3ad, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xdbe);
        EXPECT(gbc.pc(), 0x3ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0374
        gbc.setState(0x7b57, 0x4ba6, 0xf930, 0x9414, 0x3aa9, 0xeb77, 0x1, 0x1);
        gbc.writeMem(0x7b57, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4ba6);
        EXPECT(gbc.pc(), 0x7b58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0375
        gbc.setState(0x4859, 0x957b, 0x3450, 0x5a9a, 0xed41, 0x3b1f, 0x1, 0x1);
        gbc.writeMem(0x4859, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x957b);
        EXPECT(gbc.pc(), 0x485a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0376
        gbc.setState(0x5d4a, 0x53fb, 0x5260, 0x2272, 0xfa15, 0x8b13, 0x1, 0x1);
        gbc.writeMem(0x5d4a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x53fb);
        EXPECT(gbc.pc(), 0x5d4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0377
        gbc.setState(0x8e62, 0x8998, 0x8c10, 0x4384, 0x60f0, 0x57f9, 0x0, 0x1);
        gbc.writeMem(0x8e62, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8998);
        EXPECT(gbc.pc(), 0x8e63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e62), 0x51);
        // 51 0379
        gbc.setState(0x344e, 0x9e0, 0x6610, 0x441b, 0x2a99, 0xc0f1, 0x0, 0x0);
        gbc.writeMem(0x344e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9e0);
        EXPECT(gbc.pc(), 0x344f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 037A
        gbc.setState(0xc8f7, 0xe985, 0x5ff0, 0x2a01, 0x22c8, 0x3374, 0x1, 0x1);
        gbc.writeMem(0xc8f7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe985);
        EXPECT(gbc.pc(), 0xc8f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f7), 0x51);
        // 51 037B
        gbc.setState(0xdf5a, 0x1e84, 0xc190, 0x5f4f, 0x2960, 0x7c33, 0x1, 0x0);
        gbc.writeMem(0xdf5a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1e84);
        EXPECT(gbc.pc(), 0xdf5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf5a), 0x51);
        // 51 037C
        gbc.setState(0x1399, 0xf545, 0x8670, 0x4205, 0x6080, 0x3abb, 0x1, 0x1);
        gbc.writeMem(0x1399, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf545);
        EXPECT(gbc.pc(), 0x139a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 037D
        gbc.setState(0xaad2, 0xfbaf, 0xbf70, 0xba1a, 0x45b0, 0x74b7, 0x1, 0x1);
        gbc.writeMem(0xaad2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xfbaf);
        EXPECT(gbc.pc(), 0xaad3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaad2), 0x51);
        // 51 037F
        gbc.setState(0x1be, 0xce91, 0x20f0, 0xceed, 0xff4d, 0xa341, 0x1, 0x0);
        gbc.writeMem(0x1be, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xce91);
        EXPECT(gbc.pc(), 0x1bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0380
        gbc.setState(0x9166, 0xce70, 0xf4a0, 0x8b5a, 0xd619, 0x2b0c, 0x1, 0x0);
        gbc.writeMem(0x9166, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xce70);
        EXPECT(gbc.pc(), 0x9167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9166), 0x51);
        // 51 0381
        gbc.setState(0x7b23, 0x2ec9, 0x2bb0, 0xf8bd, 0xc6c6, 0xd749, 0x1, 0x0);
        gbc.writeMem(0x7b23, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2ec9);
        EXPECT(gbc.pc(), 0x7b24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0382
        gbc.setState(0x99ca, 0xe59, 0x13a0, 0x4c6c, 0xcaf6, 0x4501, 0x0, 0x0);
        gbc.writeMem(0x99ca, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe59);
        EXPECT(gbc.pc(), 0x99cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ca), 0x51);
        // 51 0383
        gbc.setState(0x57f0, 0xe83d, 0xc080, 0x8242, 0xa911, 0x1c56, 0x0, 0x1);
        gbc.writeMem(0x57f0, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe83d);
        EXPECT(gbc.pc(), 0x57f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0385
        gbc.setState(0x7139, 0xb176, 0x1c90, 0xcd00, 0xbd8b, 0xae86, 0x0, 0x1);
        gbc.writeMem(0x7139, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xb176);
        EXPECT(gbc.pc(), 0x713a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0386
        gbc.setState(0x25b2, 0x3669, 0xb030, 0x4f42, 0xe73a, 0x39c8, 0x1, 0x1);
        gbc.writeMem(0x25b2, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3669);
        EXPECT(gbc.pc(), 0x25b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0387
        gbc.setState(0x3866, 0xfed2, 0xa880, 0xd9d2, 0xf760, 0x504a, 0x0, 0x1);
        gbc.writeMem(0x3866, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xfed2);
        EXPECT(gbc.pc(), 0x3867);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0388
        gbc.setState(0x8b7e, 0xad6e, 0x25e0, 0x1869, 0x4164, 0x777c, 0x0, 0x0);
        gbc.writeMem(0x8b7e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xad6e);
        EXPECT(gbc.pc(), 0x8b7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b7e), 0x51);
        // 51 0389
        gbc.setState(0x16af, 0xbd5f, 0x9b00, 0x2270, 0x1422, 0x2b8, 0x1, 0x1);
        gbc.writeMem(0x16af, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xbd5f);
        EXPECT(gbc.pc(), 0x16b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 038A
        gbc.setState(0x1be3, 0x9b31, 0xc7f0, 0x7699, 0xa9b6, 0x7cf2, 0x1, 0x1);
        gbc.writeMem(0x1be3, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9b31);
        EXPECT(gbc.pc(), 0x1be4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 038B
        gbc.setState(0x4079, 0x9559, 0xcdc0, 0xfbd6, 0x7376, 0x5309, 0x0, 0x1);
        gbc.writeMem(0x4079, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x9559);
        EXPECT(gbc.pc(), 0x407a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 038C
        gbc.setState(0xc560, 0x98f, 0xb170, 0xd15c, 0xf373, 0xb11c, 0x0, 0x0);
        gbc.writeMem(0xc560, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x98f);
        EXPECT(gbc.pc(), 0xc561);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc560), 0x51);
        // 51 038D
        gbc.setState(0xc1b4, 0x4cde, 0x4ab0, 0x3e09, 0x7123, 0xfc6f, 0x0, 0x1);
        gbc.writeMem(0xc1b4, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4cde);
        EXPECT(gbc.pc(), 0xc1b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1b4), 0x51);
        // 51 038E
        gbc.setState(0x2b4f, 0x8946, 0x13d0, 0x23b9, 0x76b9, 0xfa22, 0x1, 0x1);
        gbc.writeMem(0x2b4f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x8946);
        EXPECT(gbc.pc(), 0x2b50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 038F
        gbc.setState(0x1e18, 0x5295, 0xdad0, 0x61f1, 0x2dbd, 0xe1e4, 0x0, 0x1);
        gbc.writeMem(0x1e18, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5295);
        EXPECT(gbc.pc(), 0x1e19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 0391
        gbc.setState(0x355e, 0x3261, 0x17e0, 0x3540, 0xee66, 0x3b12, 0x1, 0x1);
        gbc.writeMem(0x355e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3261);
        EXPECT(gbc.pc(), 0x355f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0392
        gbc.setState(0x839, 0x53fd, 0xc670, 0x9c9, 0xe552, 0xc4c4, 0x1, 0x1);
        gbc.writeMem(0x839, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x53fd);
        EXPECT(gbc.pc(), 0x83a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0393
        gbc.setState(0xce7, 0x88f4, 0x95b0, 0xa1e6, 0xb53a, 0x567e, 0x0, 0x0);
        gbc.writeMem(0xce7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x88f4);
        EXPECT(gbc.pc(), 0xce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0395
        gbc.setState(0x557a, 0x67dd, 0x90b0, 0xf97f, 0x4947, 0xa0da, 0x1, 0x1);
        gbc.writeMem(0x557a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x67dd);
        EXPECT(gbc.pc(), 0x557b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 0396
        gbc.setState(0x8f56, 0x1c12, 0xd9a0, 0x3f2f, 0x8d41, 0xa803, 0x0, 0x1);
        gbc.writeMem(0x8f56, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1c12);
        EXPECT(gbc.pc(), 0x8f57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f56), 0x51);
        // 51 0397
        gbc.setState(0x2ce4, 0xa7f8, 0x4e20, 0x8b5a, 0x389e, 0x6545, 0x1, 0x0);
        gbc.writeMem(0x2ce4, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa7f8);
        EXPECT(gbc.pc(), 0x2ce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 0398
        gbc.setState(0x7546, 0x9c83, 0x9440, 0x17d1, 0x73dc, 0xd3a9, 0x0, 0x0);
        gbc.writeMem(0x7546, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x9c83);
        EXPECT(gbc.pc(), 0x7547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 0399
        gbc.setState(0x528e, 0x7bd, 0x1330, 0xebf1, 0xd01b, 0x4a89, 0x1, 0x1);
        gbc.writeMem(0x528e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7bd);
        EXPECT(gbc.pc(), 0x528f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 039A
        gbc.setState(0x8cf4, 0x9254, 0xb0b0, 0x1546, 0x18af, 0x429a, 0x0, 0x1);
        gbc.writeMem(0x8cf4, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9254);
        EXPECT(gbc.pc(), 0x8cf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cf4), 0x51);
        // 51 039B
        gbc.setState(0x976f, 0x1131, 0x7710, 0x7f9b, 0x92d7, 0x9f35, 0x0, 0x0);
        gbc.writeMem(0x976f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1131);
        EXPECT(gbc.pc(), 0x9770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x976f), 0x51);
        // 51 039C
        gbc.setState(0x948c, 0x7a4e, 0x3fb0, 0xd3be, 0x7fe6, 0x5947, 0x1, 0x1);
        gbc.writeMem(0x948c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7a4e);
        EXPECT(gbc.pc(), 0x948d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x948c), 0x51);
        // 51 039D
        gbc.setState(0x48ae, 0x853, 0x2250, 0xeb31, 0xf31f, 0xd89e, 0x1, 0x0);
        gbc.writeMem(0x48ae, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x853);
        EXPECT(gbc.pc(), 0x48af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 039E
        gbc.setState(0x2fd, 0xbbf9, 0x5cc0, 0x7294, 0x2e3c, 0x5366, 0x0, 0x1);
        gbc.writeMem(0x2fd, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xbbf9);
        EXPECT(gbc.pc(), 0x2fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 039F
        gbc.setState(0x95cf, 0xddca, 0xcc00, 0x58d6, 0xcef, 0x2e97, 0x0, 0x0);
        gbc.writeMem(0x95cf, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xddca);
        EXPECT(gbc.pc(), 0x95d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95cf), 0x51);
        // 51 03A0
        gbc.setState(0xb7c7, 0xc146, 0x2120, 0xf2db, 0xc011, 0x9eb4, 0x0, 0x1);
        gbc.writeMem(0xb7c7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc146);
        EXPECT(gbc.pc(), 0xb7c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7c7), 0x51);
        // 51 03A1
        gbc.setState(0x968d, 0x9cba, 0xa700, 0xe77c, 0xdc5f, 0x9f16, 0x0, 0x1);
        gbc.writeMem(0x968d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9cba);
        EXPECT(gbc.pc(), 0x968e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x968d), 0x51);
        // 51 03A2
        gbc.setState(0xc218, 0x6c86, 0x6c60, 0x8d8a, 0x3ce9, 0x2511, 0x0, 0x1);
        gbc.writeMem(0xc218, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6c86);
        EXPECT(gbc.pc(), 0xc219);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc218), 0x51);
        // 51 03A3
        gbc.setState(0xcff1, 0x6474, 0x2320, 0xbf70, 0xee92, 0x1be, 0x1, 0x1);
        gbc.writeMem(0xcff1, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x6474);
        EXPECT(gbc.pc(), 0xcff2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcff1), 0x51);
        // 51 03A4
        gbc.setState(0xf5b, 0xb134, 0x1870, 0x9305, 0x6e82, 0xba3f, 0x0, 0x1);
        gbc.writeMem(0xf5b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb134);
        EXPECT(gbc.pc(), 0xf5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 03A5
        gbc.setState(0xe75b, 0xdbcb, 0xdf20, 0x1049, 0x1733, 0x7e35, 0x0, 0x0);
        gbc.writeMem(0xe75b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xdbcb);
        EXPECT(gbc.pc(), 0xe75c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe75b), 0x51);
        // 51 03A6
        gbc.setState(0xe77a, 0x17be, 0x4e80, 0x6027, 0x3ee, 0xf07c, 0x1, 0x0);
        gbc.writeMem(0xe77a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x17be);
        EXPECT(gbc.pc(), 0xe77b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe77a), 0x51);
        // 51 03A7
        gbc.setState(0xee51, 0xcf32, 0xb390, 0xff73, 0x4354, 0xec0c, 0x1, 0x0);
        gbc.writeMem(0xee51, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xcf32);
        EXPECT(gbc.pc(), 0xee52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee51), 0x51);
        // 51 03A8
        gbc.setState(0x6af4, 0xb786, 0xc1f0, 0xc674, 0x3ebd, 0x53b7, 0x0, 0x0);
        gbc.writeMem(0x6af4, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xb786);
        EXPECT(gbc.pc(), 0x6af5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 03A9
        gbc.setState(0xb52f, 0xa834, 0xcfb0, 0x81e4, 0xfabc, 0xd2de, 0x0, 0x1);
        gbc.writeMem(0xb52f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa834);
        EXPECT(gbc.pc(), 0xb530);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb52f), 0x51);
        // 51 03AA
        gbc.setState(0x88ec, 0x65cf, 0xa730, 0xe335, 0x99f4, 0xf1f, 0x1, 0x1);
        gbc.writeMem(0x88ec, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x65cf);
        EXPECT(gbc.pc(), 0x88ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88ec), 0x51);
        // 51 03AB
        gbc.setState(0x1101, 0x568d, 0xbb80, 0x68e9, 0x9962, 0xefec, 0x1, 0x0);
        gbc.writeMem(0x1101, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x568d);
        EXPECT(gbc.pc(), 0x1102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 03AC
        gbc.setState(0x24ce, 0x71ad, 0x8ea0, 0x4a46, 0x2a91, 0xa919, 0x0, 0x0);
        gbc.writeMem(0x24ce, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x71ad);
        EXPECT(gbc.pc(), 0x24cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 03AD
        gbc.setState(0xd300, 0xaf5d, 0xdc50, 0xb5b5, 0x6c97, 0x1c6d, 0x0, 0x0);
        gbc.writeMem(0xd300, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xaf5d);
        EXPECT(gbc.pc(), 0xd301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd300), 0x51);
        // 51 03AE
        gbc.setState(0xc50c, 0x67b5, 0x6f00, 0xd070, 0x2a8f, 0x66ab, 0x1, 0x1);
        gbc.writeMem(0xc50c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x67b5);
        EXPECT(gbc.pc(), 0xc50d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc50c), 0x51);
        // 51 03AF
        gbc.setState(0x5299, 0x409, 0x9b90, 0x100, 0xc875, 0x98b6, 0x0, 0x0);
        gbc.writeMem(0x5299, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x409);
        EXPECT(gbc.pc(), 0x529a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 03B0
        gbc.setState(0x434c, 0x9e69, 0xd900, 0x98f2, 0x7e2f, 0xfaaa, 0x1, 0x1);
        gbc.writeMem(0x434c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x9e69);
        EXPECT(gbc.pc(), 0x434d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 03B1
        gbc.setState(0x1eb5, 0x4b9c, 0x4a30, 0x36f9, 0x35af, 0x5245, 0x0, 0x1);
        gbc.writeMem(0x1eb5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4b9c);
        EXPECT(gbc.pc(), 0x1eb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 03B2
        gbc.setState(0x773f, 0xba0f, 0x6300, 0xf124, 0x4999, 0x98c5, 0x1, 0x1);
        gbc.writeMem(0x773f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xba0f);
        EXPECT(gbc.pc(), 0x7740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 03B3
        gbc.setState(0x6f01, 0xc47f, 0xba90, 0x746c, 0x27bd, 0xe531, 0x0, 0x1);
        gbc.writeMem(0x6f01, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc47f);
        EXPECT(gbc.pc(), 0x6f02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 03B4
        gbc.setState(0x90bd, 0x8b66, 0x4580, 0xf0f4, 0x4a10, 0x41ec, 0x0, 0x1);
        gbc.writeMem(0x90bd, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8b66);
        EXPECT(gbc.pc(), 0x90be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90bd), 0x51);
        // 51 03B5
        gbc.setState(0x7ca6, 0xd9e4, 0x6d10, 0x3f00, 0x6183, 0x6ec0, 0x0, 0x1);
        gbc.writeMem(0x7ca6, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd9e4);
        EXPECT(gbc.pc(), 0x7ca7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 03B6
        gbc.setState(0x62cd, 0xea0e, 0xc30, 0x744b, 0xef61, 0xcaf7, 0x1, 0x1);
        gbc.writeMem(0x62cd, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xea0e);
        EXPECT(gbc.pc(), 0x62ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 03B7
        gbc.setState(0xb034, 0x33f3, 0xad70, 0x8e5a, 0xdfcb, 0x592b, 0x0, 0x0);
        gbc.writeMem(0xb034, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x33f3);
        EXPECT(gbc.pc(), 0xb035);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb034), 0x51);
        // 51 03B8
        gbc.setState(0x9f15, 0x76b5, 0x72a0, 0x3107, 0xa53f, 0xeccc, 0x1, 0x1);
        gbc.writeMem(0x9f15, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x76b5);
        EXPECT(gbc.pc(), 0x9f16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f15), 0x51);
        // 51 03B9
        gbc.setState(0x312e, 0x1bb4, 0x9000, 0x3fc2, 0xa682, 0x68a4, 0x1, 0x1);
        gbc.writeMem(0x312e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1bb4);
        EXPECT(gbc.pc(), 0x312f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 03BA
        gbc.setState(0x357a, 0xada8, 0xa9c0, 0xb68e, 0x68c6, 0x46b3, 0x0, 0x0);
        gbc.writeMem(0x357a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xada8);
        EXPECT(gbc.pc(), 0x357b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 03BB
        gbc.setState(0x1544, 0x5dbf, 0xe60, 0xd4e9, 0x445a, 0xc276, 0x1, 0x1);
        gbc.writeMem(0x1544, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x5dbf);
        EXPECT(gbc.pc(), 0x1545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 03BC
        gbc.setState(0x48a8, 0xf697, 0x30d0, 0x4656, 0xea7c, 0xd6c2, 0x0, 0x1);
        gbc.writeMem(0x48a8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf697);
        EXPECT(gbc.pc(), 0x48a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 03BD
        gbc.setState(0x42ed, 0x88f9, 0x9a00, 0xbd58, 0xbf62, 0x8e72, 0x0, 0x0);
        gbc.writeMem(0x42ed, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x88f9);
        EXPECT(gbc.pc(), 0x42ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 03BE
        gbc.setState(0x932f, 0x5ed4, 0xdf00, 0x2a62, 0x9a97, 0x777c, 0x0, 0x1);
        gbc.writeMem(0x932f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5ed4);
        EXPECT(gbc.pc(), 0x9330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x932f), 0x51);
        // 51 03BF
        gbc.setState(0x2986, 0x46d2, 0x7b30, 0x92e7, 0x6506, 0x6931, 0x1, 0x1);
        gbc.writeMem(0x2986, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x46d2);
        EXPECT(gbc.pc(), 0x2987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 03C0
        gbc.setState(0xb3dc, 0x2325, 0x6fd0, 0x949e, 0xe5f4, 0x7516, 0x1, 0x0);
        gbc.writeMem(0xb3dc, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2325);
        EXPECT(gbc.pc(), 0xb3dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3dc), 0x51);
        // 51 03C1
        gbc.setState(0x54a8, 0xb262, 0x4240, 0xefc9, 0x74c0, 0x2f07, 0x0, 0x1);
        gbc.writeMem(0x54a8, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb262);
        EXPECT(gbc.pc(), 0x54a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 03C2
        gbc.setState(0x2171, 0x6d4d, 0xe360, 0xec2c, 0x52de, 0xa74f, 0x0, 0x1);
        gbc.writeMem(0x2171, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6d4d);
        EXPECT(gbc.pc(), 0x2172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 03C3
        gbc.setState(0x4c29, 0x4a6f, 0xa500, 0xef6c, 0x103f, 0xf46, 0x0, 0x0);
        gbc.writeMem(0x4c29, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x4a6f);
        EXPECT(gbc.pc(), 0x4c2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 03C4
        gbc.setState(0x3c0b, 0xe99f, 0x6b40, 0x7e67, 0xc454, 0xe9b4, 0x0, 0x1);
        gbc.writeMem(0x3c0b, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe99f);
        EXPECT(gbc.pc(), 0x3c0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 03C6
        gbc.setState(0x9588, 0x5fe7, 0x60c0, 0xdc5f, 0xf597, 0x4687, 0x1, 0x0);
        gbc.writeMem(0x9588, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x5fe7);
        EXPECT(gbc.pc(), 0x9589);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9588), 0x51);
        // 51 03C7
        gbc.setState(0xcdcf, 0xf25f, 0xad90, 0x90a4, 0x26b2, 0x5fb, 0x0, 0x0);
        gbc.writeMem(0xcdcf, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf25f);
        EXPECT(gbc.pc(), 0xcdd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdcf), 0x51);
        // 51 03C8
        gbc.setState(0x2080, 0x17eb, 0x34e0, 0xc5b1, 0xc994, 0x1b0f, 0x0, 0x1);
        gbc.writeMem(0x2080, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x17eb);
        EXPECT(gbc.pc(), 0x2081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 03C9
        gbc.setState(0xea5, 0xa7ac, 0xe7f0, 0x10cc, 0xd7c3, 0xc328, 0x0, 0x0);
        gbc.writeMem(0xea5, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa7ac);
        EXPECT(gbc.pc(), 0xea6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 03CA
        gbc.setState(0x7419, 0x185c, 0x5940, 0x484c, 0x160f, 0x973b, 0x0, 0x0);
        gbc.writeMem(0x7419, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x185c);
        EXPECT(gbc.pc(), 0x741a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 03CB
        gbc.setState(0xe1da, 0x9ecb, 0x6f90, 0x8f82, 0xd8c3, 0x636, 0x1, 0x0);
        gbc.writeMem(0xe1da, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9ecb);
        EXPECT(gbc.pc(), 0xe1db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1da), 0x51);
        // 51 03CC
        gbc.setState(0xdc52, 0x4774, 0x4940, 0x21af, 0xcf0b, 0xd3db, 0x1, 0x1);
        gbc.writeMem(0xdc52, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4774);
        EXPECT(gbc.pc(), 0xdc53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc52), 0x51);
        // 51 03CD
        gbc.setState(0x215e, 0x4dc8, 0xb0a0, 0x78ed, 0x7599, 0x457c, 0x0, 0x1);
        gbc.writeMem(0x215e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4dc8);
        EXPECT(gbc.pc(), 0x215f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 03CE
        gbc.setState(0x10c9, 0xcb45, 0xe6c0, 0xf380, 0x7f3a, 0xa1cc, 0x0, 0x1);
        gbc.writeMem(0x10c9, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xcb45);
        EXPECT(gbc.pc(), 0x10ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 03CF
        gbc.setState(0xd1ca, 0xb598, 0xd200, 0x2f5b, 0x5307, 0xae0a, 0x1, 0x0);
        gbc.writeMem(0xd1ca, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb598);
        EXPECT(gbc.pc(), 0xd1cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ca), 0x51);
        // 51 03D0
        gbc.setState(0x9c54, 0x36e3, 0xa600, 0x8a2c, 0x5ea3, 0x76ca, 0x0, 0x1);
        gbc.writeMem(0x9c54, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x36e3);
        EXPECT(gbc.pc(), 0x9c55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c54), 0x51);
        // 51 03D1
        gbc.setState(0x555a, 0xc89a, 0xf9f0, 0x216a, 0x2835, 0xa001, 0x1, 0x0);
        gbc.writeMem(0x555a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc89a);
        EXPECT(gbc.pc(), 0x555b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 03D2
        gbc.setState(0xdf1, 0x86ce, 0x640, 0x4780, 0xcce, 0xd3f4, 0x0, 0x0);
        gbc.writeMem(0xdf1, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x86ce);
        EXPECT(gbc.pc(), 0xdf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 03D3
        gbc.setState(0x1026, 0x8126, 0xa9f0, 0xc645, 0xaaa9, 0x7f9a, 0x1, 0x1);
        gbc.writeMem(0x1026, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8126);
        EXPECT(gbc.pc(), 0x1027);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 03D4
        gbc.setState(0x4061, 0x4adf, 0xc180, 0xbcce, 0xf8f5, 0x6eff, 0x1, 0x1);
        gbc.writeMem(0x4061, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4adf);
        EXPECT(gbc.pc(), 0x4062);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 03D5
        gbc.setState(0x17b3, 0x8436, 0x4710, 0xe4e0, 0x4823, 0xc331, 0x0, 0x1);
        gbc.writeMem(0x17b3, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8436);
        EXPECT(gbc.pc(), 0x17b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 03D6
        gbc.setState(0x2352, 0x2ad, 0x4e80, 0xa4ea, 0xfac8, 0xd70b, 0x0, 0x0);
        gbc.writeMem(0x2352, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2ad);
        EXPECT(gbc.pc(), 0x2353);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 03D7
        gbc.setState(0xe1dd, 0x73f7, 0x8ae0, 0x956c, 0x1da7, 0xb6b5, 0x0, 0x0);
        gbc.writeMem(0xe1dd, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x73f7);
        EXPECT(gbc.pc(), 0xe1de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1dd), 0x51);
        // 51 03D8
        gbc.setState(0xa849, 0x785d, 0xb7e0, 0x49e0, 0x3827, 0xe2d8, 0x0, 0x0);
        gbc.writeMem(0xa849, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x785d);
        EXPECT(gbc.pc(), 0xa84a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa849), 0x51);
        // 51 03D9
        gbc.setState(0x1046, 0xc69, 0x4f0, 0xbdb, 0xdb5a, 0x8411, 0x0, 0x0);
        gbc.writeMem(0x1046, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc69);
        EXPECT(gbc.pc(), 0x1047);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 51 03DA
        gbc.setState(0xca7c, 0x2cb0, 0x69a0, 0x3503, 0xd1e3, 0xb07a, 0x0, 0x0);
        gbc.writeMem(0xca7c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2cb0);
        EXPECT(gbc.pc(), 0xca7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca7c), 0x51);
        // 51 03DB
        gbc.setState(0x3d1c, 0xae8f, 0x7b80, 0x2388, 0x68b8, 0x4d6c, 0x1, 0x0);
        gbc.writeMem(0x3d1c, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xae8f);
        EXPECT(gbc.pc(), 0x3d1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 51 03DC
        gbc.setState(0x7a5f, 0x511f, 0x3790, 0x3cfc, 0xd3d7, 0xd2ba, 0x0, 0x0);
        gbc.writeMem(0x7a5f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x511f);
        EXPECT(gbc.pc(), 0x7a60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 03DD
        gbc.setState(0x2f60, 0x4a60, 0x6360, 0x93e, 0xb5a, 0x2c24, 0x0, 0x0);
        gbc.writeMem(0x2f60, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4a60);
        EXPECT(gbc.pc(), 0x2f61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 51 03DE
        gbc.setState(0xe191, 0x4465, 0x4750, 0xbdb4, 0x73fc, 0xfea4, 0x0, 0x0);
        gbc.writeMem(0xe191, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4465);
        EXPECT(gbc.pc(), 0xe192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe191), 0x51);
        // 51 03DF
        gbc.setState(0x3321, 0xee20, 0x8590, 0x9c37, 0x602a, 0xac64, 0x1, 0x0);
        gbc.writeMem(0x3321, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xee20);
        EXPECT(gbc.pc(), 0x3322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 03E1
        gbc.setState(0xc2f7, 0xcd02, 0x4f00, 0x3fc3, 0xc93, 0xcdf8, 0x0, 0x0);
        gbc.writeMem(0xc2f7, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xcd02);
        EXPECT(gbc.pc(), 0xc2f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2f7), 0x51);
        // 51 03E5
        gbc.setState(0x743f, 0x3f7, 0xbb90, 0x1df, 0x7df2, 0x1ac1, 0x0, 0x1);
        gbc.writeMem(0x743f, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3f7);
        EXPECT(gbc.pc(), 0x7440);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 51 03E6
        gbc.setState(0x6fb6, 0xfb72, 0xf90, 0x6bb5, 0x32c9, 0xbee6, 0x1, 0x0);
        gbc.writeMem(0x6fb6, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xfb72);
        EXPECT(gbc.pc(), 0x6fb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
    }
